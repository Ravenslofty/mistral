// Generated file, edition is futile

#include "cyclonev.h"

const mistral::CycloneV::ioblock_info mistral::CycloneV::sx50f_ioblocks_info[] = {
  { xy2pos(0, 11), 0, 10, 0, HSSI_OUTPUT },
  { xy2pos(0, 11), 1, 11, 0, HSSI_OUTPUT },
  { xy2pos(0, 14), 0, 13, 0, HSSI_INPUT },
  { xy2pos(0, 14), 1, 12, 0, HSSI_INPUT },
  { xy2pos(0, 15), 0, 8, 0, HSSI_OUTPUT },
  { xy2pos(0, 15), 1, 9, 0, HSSI_OUTPUT },
  { xy2pos(0, 18), 0, 11, 0, HSSI_INPUT },
  { xy2pos(0, 18), 1, 10, 0, HSSI_INPUT },
  { xy2pos(0, 19), 0, 6, 0, HSSI_OUTPUT },
  { xy2pos(0, 19), 1, 7, 0, HSSI_OUTPUT },
  { xy2pos(0, 19), 2, 15, 0, HSSI_INPUT },
  { xy2pos(0, 19), 3, 14, 0, HSSI_INPUT },
  { xy2pos(0, 22), 0, 9, 0, HSSI_INPUT },
  { xy2pos(0, 22), 1, 8, 0, HSSI_INPUT },
  { xy2pos(0, 23), 0, 4, 0, HSSI_OUTPUT },
  { xy2pos(0, 23), 1, 5, 0, HSSI_OUTPUT },
  { xy2pos(0, 26), 0, 7, 0, HSSI_INPUT },
  { xy2pos(0, 26), 1, 6, 0, HSSI_INPUT },
  { xy2pos(0, 27), 0, 2, 0, HSSI_OUTPUT },
  { xy2pos(0, 27), 1, 3, 0, HSSI_OUTPUT },
  { xy2pos(0, 30), 0, 5, 0, HSSI_INPUT },
  { xy2pos(0, 30), 1, 4, 0, HSSI_INPUT },
  { xy2pos(0, 31), 0, 0, 0, HSSI_OUTPUT },
  { xy2pos(0, 31), 1, 1, 0, HSSI_OUTPUT },
  { xy2pos(0, 31), 2, 0, 0, HSSI_INPUT },
  { xy2pos(0, 31), 3, 1, 0, HSSI_INPUT },
  { xy2pos(0, 34), 0, 3, 0, HSSI_INPUT },
  { xy2pos(0, 34), 1, 2, 0, HSSI_INPUT },
  { xy2pos(2, 0), 0, 0, 1, GPIO, (0 << 16) | 1065 },
  { xy2pos(2, 0), 1, 1, 1, GPIO, (0 << 16) | 1065 },
  { xy2pos(2, 0), 2, 2, 1, GPIO, (0 << 16) | 1065 },
  { xy2pos(2, 0), 3, 3, 1, GPIO, (0 << 16) | 1065 },
  { xy2pos(2, 61), 0, 0, 1, GPIO, (10 << 16) | 1921 },
  { xy2pos(2, 61), 1, 1, 1, GPIO, (10 << 16) | 1921 },
  { xy2pos(2, 61), 2, 2, 1, GPIO, (10 << 16) | 1921 },
  { xy2pos(2, 61), 3, 3, 1, GPIO, (10 << 16) | 1921 },
  { xy2pos(4, 0), 0, 0, 1, GPIO, (0 << 16) | 1512 },
  { xy2pos(4, 0), 1, 1, 1, GPIO, (0 << 16) | 1512 },
  { xy2pos(4, 0), 2, 2, 1, GPIO, (0 << 16) | 1512 },
  { xy2pos(4, 0), 3, 3, 1, GPIO, (0 << 16) | 1512 },
  { xy2pos(4, 61), 0, 0, 1, GPIO, (10 << 16) | 1474 },
  { xy2pos(4, 61), 1, 1, 1, GPIO, (10 << 16) | 1474 },
  { xy2pos(4, 61), 2, 2, 1, GPIO, (10 << 16) | 1474 },
  { xy2pos(4, 61), 3, 3, 1, GPIO, (10 << 16) | 1474 },
  { xy2pos(6, 0), 0, 0, 1, GPIO, (0 << 16) | 1959 },
  { xy2pos(6, 0), 1, 1, 1, GPIO, (0 << 16) | 1959 },
  { xy2pos(6, 0), 2, 2, 1, GPIO, (0 << 16) | 1959 },
  { xy2pos(6, 0), 3, 3, 1, GPIO, (0 << 16) | 1959 },
  { xy2pos(6, 61), 0, 0, 1, GPIO, (10 << 16) | 1027 },
  { xy2pos(6, 61), 1, 1, 1, GPIO, (10 << 16) | 1027 },
  { xy2pos(6, 61), 2, 2, 1, GPIO, (10 << 16) | 1027 },
  { xy2pos(6, 61), 3, 3, 1, GPIO, (10 << 16) | 1027 },
  { xy2pos(7, 0), 0, 0, 1, GPIO, (0 << 16) | 2406 },
  { xy2pos(7, 0), 1, 1, 1, GPIO, (0 << 16) | 2406 },
  { xy2pos(7, 0), 2, 2, 1, GPIO, (0 << 16) | 2406 },
  { xy2pos(7, 0), 3, 3, 1, GPIO, (0 << 16) | 2406 },
  { xy2pos(7, 61), 0, 0, 1, GPIO, (10 << 16) | 0 },
  { xy2pos(7, 61), 1, 1, 1, GPIO, (10 << 16) | 0 },
  { xy2pos(7, 61), 2, 2, 1, GPIO, (10 << 16) | 0 },
  { xy2pos(7, 61), 3, 3, 1, GPIO, (10 << 16) | 0 },
  { xy2pos(10, 0), 0, 0, 1, GPIO, (1 << 16) | 0 },
  { xy2pos(10, 0), 1, 1, 1, GPIO, (1 << 16) | 0 },
  { xy2pos(10, 0), 2, 2, 1, GPIO, (1 << 16) | 0 },
  { xy2pos(10, 0), 3, 3, 1, GPIO, (1 << 16) | 0 },
  { xy2pos(10, 61), 0, 0, 1, GPIO, (9 << 16) | 4619 },
  { xy2pos(10, 61), 1, 1, 1, GPIO, (9 << 16) | 4619 },
  { xy2pos(10, 61), 2, 2, 1, GPIO, (9 << 16) | 4619 },
  { xy2pos(10, 61), 3, 3, 1, GPIO, (9 << 16) | 4619 },
  { xy2pos(11, 0), 0, 0, 0, JTAG },
  { xy2pos(11, 0), 1, 0, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(11, 0), 2, 1, 0, JTAG },
  { xy2pos(11, 0), 3, 1, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(11, 61), 0, 6, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(11, 61), 1, 7, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(11, 61), 2, 8, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(11, 61), 3, 9, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(12, 0), 0, 0, 1, GPIO, (1 << 16) | 447 },
  { xy2pos(12, 0), 1, 1, 1, GPIO, (1 << 16) | 447 },
  { xy2pos(12, 0), 2, 2, 1, GPIO, (1 << 16) | 447 },
  { xy2pos(12, 0), 3, 3, 1, GPIO, (1 << 16) | 447 },
  { xy2pos(12, 61), 0, 0, 1, GPIO, (9 << 16) | 4172 },
  { xy2pos(12, 61), 1, 1, 1, GPIO, (9 << 16) | 4172 },
  { xy2pos(12, 61), 2, 2, 1, GPIO, (9 << 16) | 4172 },
  { xy2pos(12, 61), 3, 3, 1, GPIO, (9 << 16) | 4172 },
  { xy2pos(13, 0), 0, 2, 0, JTAG },
  { xy2pos(13, 0), 1, 2, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(13, 0), 2, 3, 0, JTAG },
  { xy2pos(13, 0), 3, 3, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(13, 61), 0, 10, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(13, 61), 1, 11, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(13, 61), 2, 12, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(13, 61), 3, 13, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(14, 0), 0, 0, 1, GPIO, (1 << 16) | 894 },
  { xy2pos(14, 0), 1, 1, 1, GPIO, (1 << 16) | 894 },
  { xy2pos(14, 0), 2, 2, 1, GPIO, (1 << 16) | 894 },
  { xy2pos(14, 0), 3, 3, 1, GPIO, (1 << 16) | 894 },
  { xy2pos(14, 61), 0, 0, 1, GPIO, (9 << 16) | 3725 },
  { xy2pos(14, 61), 1, 1, 1, GPIO, (9 << 16) | 3725 },
  { xy2pos(14, 61), 2, 2, 1, GPIO, (9 << 16) | 3725 },
  { xy2pos(14, 61), 3, 3, 1, GPIO, (9 << 16) | 3725 },
  { xy2pos(15, 0), 0, 0, 1, GPIO, (1 << 16) | 1341 },
  { xy2pos(15, 0), 1, 1, 1, GPIO, (1 << 16) | 1341 },
  { xy2pos(15, 0), 2, 2, 1, GPIO, (1 << 16) | 1341 },
  { xy2pos(15, 0), 3, 3, 1, GPIO, (1 << 16) | 1341 },
  { xy2pos(15, 61), 0, 0, 1, GPIO, (9 << 16) | 2698 },
  { xy2pos(15, 61), 1, 1, 1, GPIO, (9 << 16) | 2698 },
  { xy2pos(15, 61), 2, 2, 1, GPIO, (9 << 16) | 2698 },
  { xy2pos(15, 61), 3, 3, 1, GPIO, (9 << 16) | 2698 },
  { xy2pos(17, 0), 0, 0, 1, GPIO, (1 << 16) | 2423 },
  { xy2pos(17, 0), 1, 1, 1, GPIO, (1 << 16) | 2423 },
  { xy2pos(17, 0), 2, 2, 1, GPIO, (1 << 16) | 2423 },
  { xy2pos(17, 0), 3, 3, 1, GPIO, (1 << 16) | 2423 },
  { xy2pos(17, 61), 0, 0, 1, GPIO, (9 << 16) | 2201 },
  { xy2pos(17, 61), 1, 1, 1, GPIO, (9 << 16) | 2201 },
  { xy2pos(17, 61), 2, 2, 1, GPIO, (9 << 16) | 2201 },
  { xy2pos(17, 61), 3, 3, 1, GPIO, (9 << 16) | 2201 },
  { xy2pos(18, 0), 0, 0, 1, GPIO, (1 << 16) | 2870 },
  { xy2pos(18, 0), 1, 1, 1, GPIO, (1 << 16) | 2870 },
  { xy2pos(18, 0), 2, 2, 1, GPIO, (1 << 16) | 2870 },
  { xy2pos(18, 0), 3, 3, 1, GPIO, (1 << 16) | 2870 },
  { xy2pos(18, 61), 0, 0, 1, GPIO, (9 << 16) | 1754 },
  { xy2pos(18, 61), 1, 1, 1, GPIO, (9 << 16) | 1754 },
  { xy2pos(18, 61), 2, 2, 1, GPIO, (9 << 16) | 1754 },
  { xy2pos(18, 61), 3, 3, 1, GPIO, (9 << 16) | 1754 },
  { xy2pos(19, 0), 0, 0, 1, GPIO, (1 << 16) | 3317 },
  { xy2pos(19, 0), 1, 1, 1, GPIO, (1 << 16) | 3317 },
  { xy2pos(19, 0), 2, 2, 1, GPIO, (1 << 16) | 3317 },
  { xy2pos(19, 0), 3, 3, 1, GPIO, (1 << 16) | 3317 },
  { xy2pos(19, 61), 0, 0, 1, GPIO, (9 << 16) | 1307 },
  { xy2pos(19, 61), 1, 1, 1, GPIO, (9 << 16) | 1307 },
  { xy2pos(19, 61), 2, 2, 1, GPIO, (9 << 16) | 1307 },
  { xy2pos(19, 61), 3, 3, 1, GPIO, (9 << 16) | 1307 },
  { xy2pos(20, 61), 0, 14, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(20, 61), 1, 15, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(20, 61), 2, 16, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(20, 61), 3, 17, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(21, 0), 0, 0, 1, GPIO, (1 << 16) | 3764 },
  { xy2pos(21, 0), 1, 1, 1, GPIO, (1 << 16) | 3764 },
  { xy2pos(21, 0), 2, 2, 1, GPIO, (1 << 16) | 3764 },
  { xy2pos(21, 0), 3, 3, 1, GPIO, (1 << 16) | 3764 },
  { xy2pos(21, 61), 0, 0, 1, GPIO, (9 << 16) | 280 },
  { xy2pos(21, 61), 1, 1, 1, GPIO, (9 << 16) | 280 },
  { xy2pos(21, 61), 2, 2, 1, GPIO, (9 << 16) | 280 },
  { xy2pos(21, 61), 3, 3, 1, GPIO, (9 << 16) | 280 },
  { xy2pos(22, 0), 0, 4, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(22, 0), 1, 5, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(22, 61), 0, 18, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(22, 61), 1, 19, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(22, 61), 2, 20, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(22, 61), 3, 21, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(23, 61), 0, 22, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(23, 61), 1, 23, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(23, 61), 2, 24, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(23, 61), 3, 25, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(24, 61), 0, 26, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(24, 61), 1, 27, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(24, 61), 2, 28, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(24, 61), 3, 29, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(29, 61), 0, 0, 0, GPIO, (8 << 16) | 3247 },
  { xy2pos(29, 61), 1, 1, 0, GPIO, (8 << 16) | 3247 },
  { xy2pos(29, 61), 2, 2, 0, GPIO, (8 << 16) | 3247 },
  { xy2pos(29, 61), 3, 3, 0, GPIO, (8 << 16) | 3247 },
  { xy2pos(32, 0), 0, 0, 1, GPIO, (2 << 16) | 40 },
  { xy2pos(32, 0), 1, 1, 1, GPIO, (2 << 16) | 40 },
  { xy2pos(32, 0), 2, 2, 1, GPIO, (2 << 16) | 40 },
  { xy2pos(32, 0), 3, 3, 1, GPIO, (2 << 16) | 40 },
  { xy2pos(32, 61), 0, 0, 0, GPIO, (8 << 16) | 3056 },
  { xy2pos(32, 61), 1, 1, 0, GPIO, (8 << 16) | 3056 },
  { xy2pos(32, 61), 2, 2, 0, GPIO, (8 << 16) | 3056 },
  { xy2pos(32, 61), 3, 3, 0, GPIO, (8 << 16) | 3056 },
  { xy2pos(33, 61), 0, 0, 0, GPIO, (8 << 16) | 2865 },
  { xy2pos(33, 61), 1, 1, 0, GPIO, (8 << 16) | 2865 },
  { xy2pos(33, 61), 2, 2, 0, GPIO, (8 << 16) | 2865 },
  { xy2pos(33, 61), 3, 3, 0, GPIO, (8 << 16) | 2865 },
  { xy2pos(34, 0), 0, 0, 1, GPIO, (2 << 16) | 487 },
  { xy2pos(34, 0), 1, 1, 1, GPIO, (2 << 16) | 487 },
  { xy2pos(34, 0), 2, 2, 1, GPIO, (2 << 16) | 487 },
  { xy2pos(34, 0), 3, 3, 1, GPIO, (2 << 16) | 487 },
  { xy2pos(34, 61), 0, 0, 0, GPIO, (8 << 16) | 2674 },
  { xy2pos(34, 61), 1, 1, 0, GPIO, (8 << 16) | 2674 },
  { xy2pos(34, 61), 2, 2, 0, GPIO, (8 << 16) | 2674 },
  { xy2pos(34, 61), 3, 3, 0, GPIO, (8 << 16) | 2674 },
  { xy2pos(36, 0), 0, 0, 1, GPIO, (2 << 16) | 934 },
  { xy2pos(36, 0), 1, 1, 1, GPIO, (2 << 16) | 934 },
  { xy2pos(36, 0), 2, 2, 1, GPIO, (2 << 16) | 934 },
  { xy2pos(36, 0), 3, 3, 1, GPIO, (2 << 16) | 934 },
  { xy2pos(37, 61), 0, 0, 0, GPIO, (8 << 16) | 2483 },
  { xy2pos(37, 61), 1, 1, 0, GPIO, (8 << 16) | 2483 },
  { xy2pos(37, 61), 2, 2, 0, GPIO, (8 << 16) | 2483 },
  { xy2pos(37, 61), 3, 3, 0, GPIO, (8 << 16) | 2483 },
  { xy2pos(38, 0), 0, 0, 1, GPIO, (2 << 16) | 1381 },
  { xy2pos(38, 0), 1, 1, 1, GPIO, (2 << 16) | 1381 },
  { xy2pos(38, 0), 2, 2, 1, GPIO, (2 << 16) | 1381 },
  { xy2pos(38, 0), 3, 3, 1, GPIO, (2 << 16) | 1381 },
  { xy2pos(39, 61), 0, 0, 0, GPIO, (8 << 16) | 2292 },
  { xy2pos(39, 61), 1, 1, 0, GPIO, (8 << 16) | 2292 },
  { xy2pos(39, 61), 2, 2, 0, GPIO, (8 << 16) | 2292 },
  { xy2pos(39, 61), 3, 3, 0, GPIO, (8 << 16) | 2292 },
  { xy2pos(40, 0), 0, 0, 1, GPIO, (2 << 16) | 2458 },
  { xy2pos(40, 0), 1, 1, 1, GPIO, (2 << 16) | 2458 },
  { xy2pos(40, 0), 2, 2, 1, GPIO, (2 << 16) | 2458 },
  { xy2pos(40, 0), 3, 3, 1, GPIO, (2 << 16) | 2458 },
  { xy2pos(40, 61), 0, 0, 0, GPIO, (8 << 16) | 2101 },
  { xy2pos(40, 61), 1, 1, 0, GPIO, (8 << 16) | 2101 },
  { xy2pos(40, 61), 2, 2, 0, GPIO, (8 << 16) | 2101 },
  { xy2pos(40, 61), 3, 3, 0, GPIO, (8 << 16) | 2101 },
  { xy2pos(42, 0), 0, 0, 1, GPIO, (2 << 16) | 2905 },
  { xy2pos(42, 0), 1, 1, 1, GPIO, (2 << 16) | 2905 },
  { xy2pos(42, 0), 2, 2, 1, GPIO, (2 << 16) | 2905 },
  { xy2pos(42, 0), 3, 3, 1, GPIO, (2 << 16) | 2905 },
  { xy2pos(43, 61), 0, 0, 0, GPIO, (8 << 16) | 1910 },
  { xy2pos(43, 61), 1, 1, 0, GPIO, (8 << 16) | 1910 },
  { xy2pos(43, 61), 2, 2, 0, GPIO, (8 << 16) | 1910 },
  { xy2pos(43, 61), 3, 3, 0, GPIO, (8 << 16) | 1910 },
  { xy2pos(44, 0), 0, 0, 1, GPIO, (2 << 16) | 3352 },
  { xy2pos(44, 0), 1, 1, 1, GPIO, (2 << 16) | 3352 },
  { xy2pos(44, 0), 2, 2, 1, GPIO, (2 << 16) | 3352 },
  { xy2pos(44, 0), 3, 3, 1, GPIO, (2 << 16) | 3352 },
  { xy2pos(44, 61), 0, 0, 0, GPIO, (8 << 16) | 1719 },
  { xy2pos(44, 61), 1, 1, 0, GPIO, (8 << 16) | 1719 },
  { xy2pos(44, 61), 2, 2, 0, GPIO, (8 << 16) | 1719 },
  { xy2pos(44, 61), 3, 3, 0, GPIO, (8 << 16) | 1719 },
  { xy2pos(46, 0), 0, 0, 1, GPIO, (2 << 16) | 3799 },
  { xy2pos(46, 0), 1, 1, 1, GPIO, (2 << 16) | 3799 },
  { xy2pos(46, 0), 2, 2, 1, GPIO, (2 << 16) | 3799 },
  { xy2pos(46, 0), 3, 3, 1, GPIO, (2 << 16) | 3799 },
  { xy2pos(46, 61), 0, 0, 0, GPIO, (8 << 16) | 1528 },
  { xy2pos(46, 61), 1, 1, 0, GPIO, (8 << 16) | 1528 },
  { xy2pos(46, 61), 2, 2, 0, GPIO, (8 << 16) | 1528 },
  { xy2pos(46, 61), 3, 3, 0, GPIO, (8 << 16) | 1528 },
  { xy2pos(47, 61), 0, 0, 0, GPIO, (8 << 16) | 1337 },
  { xy2pos(47, 61), 1, 1, 0, GPIO, (8 << 16) | 1337 },
  { xy2pos(47, 61), 2, 2, 0, GPIO, (8 << 16) | 1337 },
  { xy2pos(47, 61), 3, 3, 0, GPIO, (8 << 16) | 1337 },
  { xy2pos(48, 0), 0, 0, 1, GPIO, (3 << 16) | 0 },
  { xy2pos(48, 0), 1, 1, 1, GPIO, (3 << 16) | 0 },
  { xy2pos(48, 0), 2, 2, 1, GPIO, (3 << 16) | 0 },
  { xy2pos(48, 0), 3, 3, 1, GPIO, (3 << 16) | 0 },
  { xy2pos(49, 61), 0, 0, 0, GPIO, (8 << 16) | 1146 },
  { xy2pos(49, 61), 1, 1, 0, GPIO, (8 << 16) | 1146 },
  { xy2pos(49, 61), 2, 2, 0, GPIO, (8 << 16) | 1146 },
  { xy2pos(49, 61), 3, 3, 0, GPIO, (8 << 16) | 1146 },
  { xy2pos(50, 0), 0, 0, 1, GPIO, (3 << 16) | 447 },
  { xy2pos(50, 0), 1, 1, 1, GPIO, (3 << 16) | 447 },
  { xy2pos(50, 0), 2, 2, 1, GPIO, (3 << 16) | 447 },
  { xy2pos(50, 0), 3, 3, 1, GPIO, (3 << 16) | 447 },
  { xy2pos(51, 0), 0, 0, 1, GPIO, (3 << 16) | 894 },
  { xy2pos(51, 0), 1, 1, 1, GPIO, (3 << 16) | 894 },
  { xy2pos(51, 0), 2, 2, 1, GPIO, (3 << 16) | 894 },
  { xy2pos(51, 0), 3, 3, 1, GPIO, (3 << 16) | 894 },
  { xy2pos(51, 61), 0, 0, 0, GPIO, (8 << 16) | 955 },
  { xy2pos(51, 61), 1, 1, 0, GPIO, (8 << 16) | 955 },
  { xy2pos(51, 61), 2, 2, 0, GPIO, (8 << 16) | 955 },
  { xy2pos(51, 61), 3, 3, 0, GPIO, (8 << 16) | 955 },
  { xy2pos(52, 61), 0, 0, 0, GPIO, (8 << 16) | 764 },
  { xy2pos(52, 61), 1, 1, 0, GPIO, (8 << 16) | 764 },
  { xy2pos(52, 61), 2, 2, 0, GPIO, (8 << 16) | 764 },
  { xy2pos(52, 61), 3, 3, 0, GPIO, (8 << 16) | 764 },
  { xy2pos(53, 0), 0, 0, 1, GPIO, (3 << 16) | 1341 },
  { xy2pos(53, 0), 1, 1, 1, GPIO, (3 << 16) | 1341 },
  { xy2pos(53, 0), 2, 2, 1, GPIO, (3 << 16) | 1341 },
  { xy2pos(53, 0), 3, 3, 1, GPIO, (3 << 16) | 1341 },
  { xy2pos(55, 0), 0, 0, 1, GPIO, (3 << 16) | 2418 },
  { xy2pos(55, 0), 1, 1, 1, GPIO, (3 << 16) | 2418 },
  { xy2pos(55, 0), 2, 2, 1, GPIO, (3 << 16) | 2418 },
  { xy2pos(55, 0), 3, 3, 1, GPIO, (3 << 16) | 2418 },
  { xy2pos(55, 61), 0, 0, 0, GPIO, (8 << 16) | 573 },
  { xy2pos(55, 61), 1, 1, 0, GPIO, (8 << 16) | 573 },
  { xy2pos(55, 61), 2, 2, 0, GPIO, (8 << 16) | 573 },
  { xy2pos(55, 61), 3, 3, 0, GPIO, (8 << 16) | 573 },
  { xy2pos(57, 0), 0, 0, 1, GPIO, (3 << 16) | 2865 },
  { xy2pos(57, 0), 1, 1, 1, GPIO, (3 << 16) | 2865 },
  { xy2pos(57, 0), 2, 2, 1, GPIO, (3 << 16) | 2865 },
  { xy2pos(57, 0), 3, 3, 1, GPIO, (3 << 16) | 2865 },
  { xy2pos(57, 61), 0, 0, 0, GPIO, (8 << 16) | 382 },
  { xy2pos(57, 61), 1, 1, 0, GPIO, (8 << 16) | 382 },
  { xy2pos(57, 61), 2, 2, 0, GPIO, (8 << 16) | 382 },
  { xy2pos(57, 61), 3, 3, 0, GPIO, (8 << 16) | 382 },
  { xy2pos(58, 61), 0, 0, 0, GPIO, (8 << 16) | 191 },
  { xy2pos(58, 61), 1, 1, 0, GPIO, (8 << 16) | 191 },
  { xy2pos(58, 61), 2, 2, 0, GPIO, (8 << 16) | 191 },
  { xy2pos(58, 61), 3, 3, 0, GPIO, (8 << 16) | 191 },
  { xy2pos(59, 0), 0, 0, 1, GPIO, (3 << 16) | 3312 },
  { xy2pos(59, 0), 1, 1, 1, GPIO, (3 << 16) | 3312 },
  { xy2pos(59, 0), 2, 2, 1, GPIO, (3 << 16) | 3312 },
  { xy2pos(59, 0), 3, 3, 1, GPIO, (3 << 16) | 3312 },
  { xy2pos(60, 61), 0, 0, 0, GPIO, (8 << 16) | 0 },
  { xy2pos(60, 61), 1, 1, 0, GPIO, (8 << 16) | 0 },
  { xy2pos(60, 61), 2, 2, 0, GPIO, (8 << 16) | 0 },
  { xy2pos(60, 61), 3, 3, 0, GPIO, (8 << 16) | 0 },
  { xy2pos(61, 0), 0, 0, 1, GPIO, (3 << 16) | 3759 },
  { xy2pos(61, 0), 1, 1, 1, GPIO, (3 << 16) | 3759 },
  { xy2pos(61, 0), 2, 2, 1, GPIO, (3 << 16) | 3759 },
  { xy2pos(61, 0), 3, 3, 1, GPIO, (3 << 16) | 3759 },
  { xy2pos(62, 0), 0, 0, 1, GPIO, (4 << 16) | 0 },
  { xy2pos(62, 0), 1, 1, 1, GPIO, (4 << 16) | 0 },
  { xy2pos(62, 0), 2, 2, 1, GPIO, (4 << 16) | 0 },
  { xy2pos(62, 0), 3, 3, 1, GPIO, (4 << 16) | 0 },
  { xy2pos(64, 0), 0, 0, 1, GPIO, (4 << 16) | 447 },
  { xy2pos(64, 0), 1, 1, 1, GPIO, (4 << 16) | 447 },
  { xy2pos(64, 0), 2, 2, 1, GPIO, (4 << 16) | 447 },
  { xy2pos(64, 0), 3, 3, 1, GPIO, (4 << 16) | 447 },
  { xy2pos(65, 0), 0, 0, 1, GPIO, (4 << 16) | 894 },
  { xy2pos(65, 0), 1, 1, 1, GPIO, (4 << 16) | 894 },
  { xy2pos(65, 0), 2, 2, 1, GPIO, (4 << 16) | 894 },
  { xy2pos(65, 0), 3, 3, 1, GPIO, (4 << 16) | 894 },
  { xy2pos(66, 0), 0, 0, 1, GPIO, (4 << 16) | 1341 },
  { xy2pos(66, 0), 1, 1, 1, GPIO, (4 << 16) | 1341 },
  { xy2pos(66, 0), 2, 2, 1, GPIO, (4 << 16) | 1341 },
  { xy2pos(66, 0), 3, 3, 1, GPIO, (4 << 16) | 1341 },
  { xy2pos(68, 10), 0, 0, 1, GPIO, (5 << 16) | 121 },
  { xy2pos(68, 10), 1, 1, 1, GPIO, (5 << 16) | 121 },
  { xy2pos(68, 10), 2, 2, 1, GPIO, (5 << 16) | 121 },
  { xy2pos(68, 10), 3, 3, 1, GPIO, (5 << 16) | 121 },
  { xy2pos(68, 11), 0, 0, 1, GPIO, (5 << 16) | 1148 },
  { xy2pos(68, 11), 1, 1, 1, GPIO, (5 << 16) | 1148 },
  { xy2pos(68, 11), 2, 2, 1, GPIO, (5 << 16) | 1148 },
  { xy2pos(68, 11), 3, 3, 1, GPIO, (5 << 16) | 1148 },
  { xy2pos(68, 12), 0, 0, 1, GPIO, (5 << 16) | 1595 },
  { xy2pos(68, 12), 1, 1, 1, GPIO, (5 << 16) | 1595 },
  { xy2pos(68, 12), 2, 2, 1, GPIO, (5 << 16) | 1595 },
  { xy2pos(68, 12), 3, 3, 1, GPIO, (5 << 16) | 1595 },
  { xy2pos(68, 13), 0, 0, 1, GPIO, (5 << 16) | 2042 },
  { xy2pos(68, 13), 1, 1, 1, GPIO, (5 << 16) | 2042 },
  { xy2pos(68, 13), 2, 2, 1, GPIO, (5 << 16) | 2042 },
  { xy2pos(68, 13), 3, 3, 1, GPIO, (5 << 16) | 2042 },
  { xy2pos(68, 14), 0, 0, 0, GPIO, (6 << 16) | 3 },
  { xy2pos(68, 14), 1, 1, 0, GPIO, (6 << 16) | 3 },
  { xy2pos(68, 14), 2, 2, 0, GPIO, (6 << 16) | 3 },
  { xy2pos(68, 14), 3, 3, 0, GPIO, (6 << 16) | 3 },
  { xy2pos(68, 15), 0, 0, 0, GPIO, (6 << 16) | 1030 },
  { xy2pos(68, 15), 1, 1, 0, GPIO, (6 << 16) | 1030 },
  { xy2pos(68, 15), 2, 2, 0, GPIO, (6 << 16) | 1030 },
  { xy2pos(68, 15), 3, 3, 0, GPIO, (6 << 16) | 1030 },
  { xy2pos(68, 16), 0, 0, 0, GPIO, (6 << 16) | 1477 },
  { xy2pos(68, 16), 1, 1, 0, GPIO, (6 << 16) | 1477 },
  { xy2pos(68, 16), 2, 2, 0, GPIO, (6 << 16) | 1477 },
  { xy2pos(68, 16), 3, 3, 0, GPIO, (6 << 16) | 1477 },
  { xy2pos(68, 17), 0, 0, 0, GPIO, (6 << 16) | 1924 },
  { xy2pos(68, 17), 1, 1, 0, GPIO, (6 << 16) | 1924 },
  { xy2pos(68, 17), 2, 2, 0, GPIO, (6 << 16) | 1924 },
  { xy2pos(68, 17), 3, 3, 0, GPIO, (6 << 16) | 1924 },
  { xy2pos(68, 22), 0, 0, 0, GPIO, (6 << 16) | 2426 },
  { xy2pos(68, 22), 1, 1, 0, GPIO, (6 << 16) | 2426 },
  { xy2pos(68, 22), 2, 2, 0, GPIO, (6 << 16) | 2426 },
  { xy2pos(68, 22), 3, 3, 0, GPIO, (6 << 16) | 2426 },
  { xy2pos(68, 23), 0, 0, 0, GPIO, (6 << 16) | 3453 },
  { xy2pos(68, 23), 1, 1, 0, GPIO, (6 << 16) | 3453 },
  { xy2pos(68, 23), 2, 2, 0, GPIO, (6 << 16) | 3453 },
  { xy2pos(68, 23), 3, 3, 0, GPIO, (6 << 16) | 3453 },
  { xy2pos(68, 24), 0, 0, 0, GPIO, (6 << 16) | 3900 },
  { xy2pos(68, 24), 1, 1, 0, GPIO, (6 << 16) | 3900 },
  { xy2pos(68, 24), 2, 2, 0, GPIO, (6 << 16) | 3900 },
  { xy2pos(68, 24), 3, 3, 0, GPIO, (6 << 16) | 3900 },
  { xy2pos(68, 25), 0, 0, 0, GPIO, (6 << 16) | 4347 },
  { xy2pos(68, 25), 1, 1, 0, GPIO, (6 << 16) | 4347 },
  { xy2pos(68, 25), 2, 2, 0, GPIO, (6 << 16) | 4347 },
  { xy2pos(68, 25), 3, 3, 0, GPIO, (6 << 16) | 4347 },
  { xy2pos(68, 29), 0, 0, 0, GPIO, (6 << 16) | 4794 },
  { xy2pos(68, 29), 1, 1, 0, GPIO, (6 << 16) | 4794 },
  { xy2pos(68, 29), 2, 2, 0, GPIO, (6 << 16) | 4794 },
  { xy2pos(68, 29), 3, 3, 0, GPIO, (6 << 16) | 4794 },
  { xy2pos(68, 30), 0, 0, 0, GPIO, (6 << 16) | 5821 },
  { xy2pos(68, 30), 1, 1, 0, GPIO, (6 << 16) | 5821 },
  { xy2pos(68, 30), 2, 2, 0, GPIO, (6 << 16) | 5821 },
  { xy2pos(68, 30), 3, 3, 0, GPIO, (6 << 16) | 5821 },
  { xy2pos(68, 31), 0, 0, 0, GPIO, (6 << 16) | 6268 },
  { xy2pos(68, 31), 1, 1, 0, GPIO, (6 << 16) | 6268 },
  { xy2pos(68, 31), 2, 2, 0, GPIO, (6 << 16) | 6268 },
  { xy2pos(68, 31), 3, 3, 0, GPIO, (6 << 16) | 6268 },
  { xy2pos(68, 32), 0, 0, 0, GPIO, (6 << 16) | 6715 },
  { xy2pos(68, 32), 1, 1, 0, GPIO, (6 << 16) | 6715 },
  { xy2pos(68, 32), 2, 2, 0, GPIO, (6 << 16) | 6715 },
  { xy2pos(68, 32), 3, 3, 0, GPIO, (6 << 16) | 6715 },
  { xy2pos(68, 36), 0, 0, 0, GPIO, (7 << 16) | 0 },
  { xy2pos(68, 36), 1, 1, 0, GPIO, (7 << 16) | 0 },
  { xy2pos(68, 36), 2, 2, 0, GPIO, (7 << 16) | 0 },
  { xy2pos(68, 36), 3, 3, 0, GPIO, (7 << 16) | 0 },
  { xy2pos(68, 37), 0, 0, 0, GPIO, (7 << 16) | 1027 },
  { xy2pos(68, 37), 1, 1, 0, GPIO, (7 << 16) | 1027 },
  { xy2pos(68, 37), 2, 2, 0, GPIO, (7 << 16) | 1027 },
  { xy2pos(68, 37), 3, 3, 0, GPIO, (7 << 16) | 1027 },
  { xy2pos(68, 38), 0, 0, 0, GPIO, (7 << 16) | 1474 },
  { xy2pos(68, 38), 1, 1, 0, GPIO, (7 << 16) | 1474 },
  { xy2pos(68, 38), 2, 2, 0, GPIO, (7 << 16) | 1474 },
  { xy2pos(68, 38), 3, 3, 0, GPIO, (7 << 16) | 1474 },
  { xy2pos(68, 39), 0, 0, 0, GPIO, (7 << 16) | 1921 },
  { xy2pos(68, 39), 1, 1, 0, GPIO, (7 << 16) | 1921 },
  { xy2pos(68, 39), 2, 2, 0, GPIO, (7 << 16) | 1921 },
  { xy2pos(68, 39), 3, 3, 0, GPIO, (7 << 16) | 1921 },
  { xy2pos(68, 43), 0, 0, 0, GPIO, (7 << 16) | 2368 },
  { xy2pos(68, 43), 1, 1, 0, GPIO, (7 << 16) | 2368 },
  { xy2pos(68, 43), 2, 2, 0, GPIO, (7 << 16) | 2368 },
  { xy2pos(68, 43), 3, 3, 0, GPIO, (7 << 16) | 2368 },
  { xy2pos(68, 44), 0, 0, 0, GPIO, (7 << 16) | 3395 },
  { xy2pos(68, 44), 1, 1, 0, GPIO, (7 << 16) | 3395 },
  { xy2pos(68, 44), 2, 2, 0, GPIO, (7 << 16) | 3395 },
  { xy2pos(68, 44), 3, 3, 0, GPIO, (7 << 16) | 3395 },
  { xy2pos(68, 45), 0, 0, 0, GPIO, (7 << 16) | 3842 },
  { xy2pos(68, 45), 1, 1, 0, GPIO, (7 << 16) | 3842 },
  { xy2pos(68, 45), 2, 2, 0, GPIO, (7 << 16) | 3842 },
  { xy2pos(68, 45), 3, 3, 0, GPIO, (7 << 16) | 3842 },
  { xy2pos(68, 46), 0, 0, 0, GPIO, (7 << 16) | 4289 },
  { xy2pos(68, 46), 1, 1, 0, GPIO, (7 << 16) | 4289 },
  { xy2pos(68, 46), 2, 2, 0, GPIO, (7 << 16) | 4289 },
  { xy2pos(68, 46), 3, 3, 0, GPIO, (7 << 16) | 4289 },
  { xy2pos(68, 51), 0, 0, 0, GPIO, (7 << 16) | 4791 },
  { xy2pos(68, 51), 1, 1, 0, GPIO, (7 << 16) | 4791 },
  { xy2pos(68, 51), 2, 2, 0, GPIO, (7 << 16) | 4791 },
  { xy2pos(68, 51), 3, 3, 0, GPIO, (7 << 16) | 4791 },
  { xy2pos(68, 52), 0, 0, 0, GPIO, (7 << 16) | 5818 },
  { xy2pos(68, 52), 1, 1, 0, GPIO, (7 << 16) | 5818 },
  { xy2pos(68, 52), 2, 2, 0, GPIO, (7 << 16) | 5818 },
  { xy2pos(68, 52), 3, 3, 0, GPIO, (7 << 16) | 5818 },
  { xy2pos(68, 53), 0, 0, 0, GPIO, (7 << 16) | 6265 },
  { xy2pos(68, 53), 1, 1, 0, GPIO, (7 << 16) | 6265 },
  { xy2pos(68, 53), 2, 2, 0, GPIO, (7 << 16) | 6265 },
  { xy2pos(68, 53), 3, 3, 0, GPIO, (7 << 16) | 6265 },
  { xy2pos(68, 54), 0, 0, 0, GPIO, (7 << 16) | 6712 },
  { xy2pos(68, 54), 1, 1, 0, GPIO, (7 << 16) | 6712 },
  { xy2pos(68, 54), 2, 2, 0, GPIO, (7 << 16) | 6712 },
  { xy2pos(68, 54), 3, 3, 0, GPIO, (7 << 16) | 6712 },
  { xy2pos(68, 57), 0, 0, 0, GPIO, (7 << 16) | 7159 },
  { xy2pos(68, 57), 1, 1, 0, GPIO, (7 << 16) | 7159 },
  { xy2pos(68, 57), 2, 2, 0, GPIO, (7 << 16) | 7159 },
  { xy2pos(68, 57), 3, 3, 0, GPIO, (7 << 16) | 7159 },
  { xy2pos(68, 58), 0, 0, 0, GPIO, (7 << 16) | 8186 },
  { xy2pos(68, 58), 1, 1, 0, GPIO, (7 << 16) | 8186 },
  { xy2pos(68, 58), 2, 2, 0, GPIO, (7 << 16) | 8186 },
  { xy2pos(68, 58), 3, 3, 0, GPIO, (7 << 16) | 8186 },
  { xy2pos(68, 59), 0, 0, 0, GPIO, (7 << 16) | 8633 },
  { xy2pos(68, 59), 1, 1, 0, GPIO, (7 << 16) | 8633 },
  { xy2pos(68, 59), 2, 2, 0, GPIO, (7 << 16) | 8633 },
  { xy2pos(68, 59), 3, 3, 0, GPIO, (7 << 16) | 8633 },
  { xy2pos(68, 60), 0, 0, 0, GPIO, (7 << 16) | 9080 },
  { xy2pos(68, 60), 1, 1, 0, GPIO, (7 << 16) | 9080 },
  { xy2pos(68, 60), 2, 2, 0, GPIO, (7 << 16) | 9080 },
  { xy2pos(68, 60), 3, 3, 0, GPIO, (7 << 16) | 9080 },
};

const mistral::CycloneV::dqs16_info mistral::CycloneV::sx50f_dqs16_info[] = {
  { xy2pos(4, 0), (1 << 23) | (1 << 22) | (0 << 16) | 1256 },
  { xy2pos(4, 61), (1 << 23) | (0 << 22) | (10 << 16) | 2112 },
  { xy2pos(12, 0), (1 << 23) | (1 << 22) | (1 << 16) | 191 },
  { xy2pos(12, 61), (1 << 23) | (0 << 22) | (9 << 16) | 4810 },
  { xy2pos(18, 0), (1 << 23) | (1 << 22) | (1 << 16) | 2614 },
  { xy2pos(18, 61), (1 << 23) | (0 << 22) | (9 << 16) | 2392 },
  { xy2pos(34, 0), (1 << 23) | (1 << 22) | (2 << 16) | 231 },
  { xy2pos(42, 0), (1 << 23) | (1 << 22) | (2 << 16) | 2649 },
  { xy2pos(50, 0), (1 << 23) | (1 << 22) | (3 << 16) | 191 },
  { xy2pos(57, 0), (1 << 23) | (1 << 22) | (3 << 16) | 2609 },
  { xy2pos(64, 0), (1 << 23) | (1 << 22) | (4 << 16) | 191 },
  { xy2pos(68, 12), (1 << 23) | (0 << 22) | (5 << 16) | 2233 },
  { xy2pos(68, 16), (1 << 23) | (0 << 22) | (6 << 16) | 2115 },
  { xy2pos(68, 24), (1 << 23) | (0 << 22) | (6 << 16) | 4538 },
  { xy2pos(68, 31), (1 << 23) | (0 << 22) | (6 << 16) | 6906 },
  { xy2pos(68, 38), (1 << 23) | (0 << 22) | (7 << 16) | 2112 },
  { xy2pos(68, 45), (1 << 23) | (0 << 22) | (7 << 16) | 4480 },
  { xy2pos(68, 53), (1 << 23) | (0 << 22) | (7 << 16) | 6903 },
  { xy2pos(68, 59), (1 << 23) | (0 << 22) | (7 << 16) | 9271 },
};

const mistral::CycloneV::fixed_block_info mistral::CycloneV::sx50f_fixed_blocks_info[FB_COUNT] = {
  { xy2pos(0, 0), (0 << 16) | 112 },
  { xy2pos(0, 13), (12 << 16) | 4816 },
  { xy2pos(0, 29), (12 << 16) | 3984 },
  { xy2pos(0, 53), (10 << 16) | 2601 },
  { xy2pos(68, 0), (4 << 16) | 2551 },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { xy2pos(0, 2), (0 << 16) | 0 },
  { xy2pos(5, 61), (10 << 16) | 2449 },
  { xy2pos(68, 2), (4 << 16) | 2439 },
  { 0xffff, 0xffffffff },
  { xy2pos(28, 0), (1 << 16) | 4791 },
  { xy2pos(28, 61), (9 << 16) | 0 },
  { xy2pos(0, 8), (13 << 16) | 9136 },
  { xy2pos(68, 8), (5 << 16) | 2489 },
  { xy2pos(0, 59), (10 << 16) | 2561 },
  { xy2pos(8, 0), (0 << 16) | 944 },
  { xy2pos(68, 3), (4 << 16) | 2399 },
  { xy2pos(68, 61), (7 << 16) | 9567 },
  { xy2pos(0, 11), (13 << 16) | 0 },
  { xy2pos(0, 23), (12 << 16) | 0 },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { xy2pos(3, 0), (0 << 16) | 984 },
  { xy2pos(3, 61), (4 << 16) | 2368 },
  { xy2pos(63, 0), (5 << 16) | 50 },
  { xy2pos(68, 4), (10 << 16) | 2418 },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { xy2pos(5, 0), (6 << 16) | 2376 },
  { xy2pos(8, 61), (7 << 16) | 4741 },
  { xy2pos(16, 0), (0 << 16) | 1010 },
  { xy2pos(16, 61), (1 << 16) | 2368 },
  { xy2pos(39, 0), (3 << 16) | 2368 },
  { xy2pos(54, 0), (10 << 16) | 2368 },
  { xy2pos(68, 7), (5 << 16) | 0 },
  { xy2pos(68, 21), (2 << 16) | 2408 },
  { xy2pos(68, 49), (9 << 16) | 2648 },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { xy2pos(0, 11), (0 << 24) | (12 << 16) | 5648 },
  { xy2pos(0, 23), (1 << 24) | (12 << 16) | 2832 },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { xy2pos(9, 0), (0 << 16) | 1060 },
  { xy2pos(9, 61), (10 << 16) | 2444 },
  { xy2pos(20, 0), (1 << 16) | 2418 },
  { xy2pos(60, 0), (4 << 16) | 2394 },
  { xy2pos(68, 6), (5 << 16) | 116 },
  { xy2pos(68, 21), (6 << 16) | 2371 },
  { xy2pos(68, 49), (7 << 16) | 4736 },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { xy2pos(29, 0), (2 << 16) | 0 },
  { xy2pos(68, 5), (5 << 16) | 76 },
  { xy2pos(68, 9), (7 << 16) | 9527 },
  { 0xffff, 0xffffffff },
  { xy2pos(1, 14), (13 << 16) | 2832 },
  { xy2pos(1, 36), (11 << 16) | 0 },
  { xy2pos(23, 0), (2 << 16) | 4826 },
  { 0xffff, 0xffffffff },
};

const mistral::CycloneV::pos_t mistral::CycloneV::sx50f_hps_info[] = {
  xy2pos(32, 46),
  xy2pos(31, 60),
  xy2pos(32, 50),
  xy2pos(32, 20),
  xy2pos(32, 53),
  xy2pos(32, 41),
  xy2pos(32, 23),
  xy2pos(32, 27),
  xy2pos(32, 24),
  xy2pos(32, 22),
  xy2pos(32, 19),
  xy2pos(32, 47),
  xy2pos(32, 34),
  xy2pos(32, 25),
  xy2pos(32, 51),
  xy2pos(32, 42),
  xy2pos(32, 43),
  xy2pos(32, 28),
  xy2pos(32, 49),
  xy2pos(32, 30),
  xy2pos(32, 31),
  xy2pos(32, 32),
  xy2pos(32, 33),
  xy2pos(32, 26),
  xy2pos(32, 37),
  xy2pos(32, 40),
  xy2pos(32, 44),
  xy2pos(32, 45),
  xy2pos(32, 35),
  xy2pos(32, 36),
  xy2pos(32, 38),
  xy2pos(32, 39),
  xy2pos(32, 29),
  xy2pos(32, 48),
  xy2pos(32, 21),
  xy2pos(32, 52),
  xy2pos(32, 18),
};

const mistral::CycloneV::dcram_info mistral::CycloneV::sx50f_dcram_pos[] = {
  { 8, 1160 },
  { 8, 1161 },
  { 9, 1161 },
  { 8, 1074 },
  { 8, 1075 },
  { 9, 1075 },
  { 828, 1762 },
  { 828, 1763 },
  { 829, 1763 },
  { 828, 1676 },
  { 828, 1677 },
  { 829, 1677 },
  { 828, 2450 },
  { 828, 2451 },
  { 829, 2451 },
  { 828, 2364 },
  { 828, 2365 },
  { 829, 2365 },
  { 8, 3052 },
  { 8, 3053 },
  { 9, 3053 },
  { 8, 2966 },
  { 8, 2967 },
  { 9, 2967 },
  { 828, 3654 },
  { 828, 3655 },
  { 829, 3655 },
  { 828, 3568 },
  { 828, 3569 },
  { 829, 3569 },
  { 828, 4342 },
  { 828, 4343 },
  { 829, 4343 },
  { 828, 4256 },
  { 828, 4257 },
  { 829, 4257 },
};

const mistral::CycloneV::p2r_info mistral::CycloneV::sx50f_p2r_info[] = {
  { pnode(GPIO, 2, 0, DATAIN, 0, 0), rnode(GOUT, 2, 0, 44) },
  { pnode(GPIO, 2, 0, DATAIN, 0, 1), rnode(GOUT, 2, 0, 34) },
  { pnode(GPIO, 2, 0, DATAIN, 0, 2), rnode(GOUT, 2, 0, 43) },
  { pnode(GPIO, 2, 0, DATAIN, 0, 3), rnode(GOUT, 2, 0, 29) },
  { pnode(GPIO, 2, 0, DATAOUT, 0, 0), rnode(GIN, 2, 0, 18) },
  { pnode(GPIO, 2, 0, DATAOUT, 0, 1), rnode(GIN, 2, 0, 17) },
  { pnode(GPIO, 2, 0, DATAOUT, 0, 2), rnode(GIN, 2, 0, 16) },
  { pnode(GPIO, 2, 0, DATAOUT, 0, 3), rnode(GIN, 2, 0, 15) },
  { pnode(GPIO, 2, 0, DATAOUT, 0, 4), rnode(GIN, 2, 0, 14) },
  { pnode(GPIO, 2, 0, OEIN, 0, 0), rnode(GOUT, 2, 0, 38) },
  { pnode(GPIO, 2, 0, OEIN, 0, 1), rnode(GOUT, 2, 0, 30) },
  { pnode(GPIO, 2, 0, BSLIPMAX, 0, -1), rnode(GIN, 2, 0, 19) },
  { pnode(GPIO, 2, 0, CEIN, 0, -1), rnode(GOUT, 2, 0, 27) },
  { pnode(GPIO, 2, 0, CEOUT, 0, -1), rnode(GOUT, 2, 0, 45) },
  { pnode(GPIO, 2, 0, ACLR, 0, -1), rnode(GOUT, 2, 0, 28) },
  { pnode(GPIO, 2, 0, SCLR, 0, -1), rnode(GOUT, 2, 0, 31) },
  { pnode(GPIO, 2, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 2, 0, 10) },
  { pnode(GPIO, 2, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 2, 0, 8) },
  { pnode(GPIO, 2, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 2, 0, 14) },
  { pnode(GPIO, 2, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 2, 0, 12) },
  { pnode(GPIO, 2, 0, DATAIN, 1, 0), rnode(GOUT, 2, 0, 49) },
  { pnode(GPIO, 2, 0, DATAIN, 1, 1), rnode(GOUT, 2, 0, 41) },
  { pnode(GPIO, 2, 0, DATAIN, 1, 2), rnode(GOUT, 2, 0, 48) },
  { pnode(GPIO, 2, 0, DATAIN, 1, 3), rnode(GOUT, 2, 0, 40) },
  { pnode(GPIO, 2, 0, DATAOUT, 1, 0), rnode(GIN, 2, 0, 24) },
  { pnode(GPIO, 2, 0, DATAOUT, 1, 1), rnode(GIN, 2, 0, 23) },
  { pnode(GPIO, 2, 0, DATAOUT, 1, 2), rnode(GIN, 2, 0, 22) },
  { pnode(GPIO, 2, 0, DATAOUT, 1, 3), rnode(GIN, 2, 0, 21) },
  { pnode(GPIO, 2, 0, DATAOUT, 1, 4), rnode(GIN, 2, 0, 20) },
  { pnode(GPIO, 2, 0, OEIN, 1, 0), rnode(GOUT, 2, 0, 47) },
  { pnode(GPIO, 2, 0, OEIN, 1, 1), rnode(GOUT, 2, 0, 39) },
  { pnode(GPIO, 2, 0, BSLIPMAX, 1, -1), rnode(GIN, 2, 0, 25) },
  { pnode(GPIO, 2, 0, CEIN, 1, -1), rnode(GOUT, 2, 0, 51) },
  { pnode(GPIO, 2, 0, CEOUT, 1, -1), rnode(GOUT, 2, 0, 50) },
  { pnode(GPIO, 2, 0, ACLR, 1, -1), rnode(GOUT, 2, 0, 42) },
  { pnode(GPIO, 2, 0, SCLR, 1, -1), rnode(GOUT, 2, 0, 46) },
  { pnode(GPIO, 2, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 2, 0, 11) },
  { pnode(GPIO, 2, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 2, 0, 9) },
  { pnode(GPIO, 2, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 2, 0, 15) },
  { pnode(GPIO, 2, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 2, 0, 13) },
  { pnode(GPIO, 2, 0, DATAIN, 2, 0), rnode(GOUT, 2, 0, 14) },
  { pnode(GPIO, 2, 0, DATAIN, 2, 1), rnode(GOUT, 2, 0, 22) },
  { pnode(GPIO, 2, 0, DATAIN, 2, 2), rnode(GOUT, 2, 0, 15) },
  { pnode(GPIO, 2, 0, DATAIN, 2, 3), rnode(GOUT, 2, 0, 23) },
  { pnode(GPIO, 2, 0, DATAOUT, 2, 0), rnode(GIN, 2, 0, 8) },
  { pnode(GPIO, 2, 0, DATAOUT, 2, 1), rnode(GIN, 2, 0, 9) },
  { pnode(GPIO, 2, 0, DATAOUT, 2, 2), rnode(GIN, 2, 0, 10) },
  { pnode(GPIO, 2, 0, DATAOUT, 2, 3), rnode(GIN, 2, 0, 11) },
  { pnode(GPIO, 2, 0, DATAOUT, 2, 4), rnode(GIN, 2, 0, 12) },
  { pnode(GPIO, 2, 0, OEIN, 2, 0), rnode(GOUT, 2, 0, 16) },
  { pnode(GPIO, 2, 0, OEIN, 2, 1), rnode(GOUT, 2, 0, 24) },
  { pnode(GPIO, 2, 0, BSLIPMAX, 2, -1), rnode(GIN, 2, 0, 7) },
  { pnode(GPIO, 2, 0, CEIN, 2, -1), rnode(GOUT, 2, 0, 20) },
  { pnode(GPIO, 2, 0, CEOUT, 2, -1), rnode(GOUT, 2, 0, 13) },
  { pnode(GPIO, 2, 0, ACLR, 2, -1), rnode(GOUT, 2, 0, 21) },
  { pnode(GPIO, 2, 0, SCLR, 2, -1), rnode(GOUT, 2, 0, 25) },
  { pnode(GPIO, 2, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 2, 0, 5) },
  { pnode(GPIO, 2, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 2, 0, 7) },
  { pnode(GPIO, 2, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 2, 0, 1) },
  { pnode(GPIO, 2, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 2, 0, 3) },
  { pnode(GPIO, 2, 0, DATAIN, 3, 0), rnode(GOUT, 2, 0, 3) },
  { pnode(GPIO, 2, 0, DATAIN, 3, 1), rnode(GOUT, 2, 0, 17) },
  { pnode(GPIO, 2, 0, DATAIN, 3, 2), rnode(GOUT, 2, 0, 8) },
  { pnode(GPIO, 2, 0, DATAIN, 3, 3), rnode(GOUT, 2, 0, 18) },
  { pnode(GPIO, 2, 0, DATAOUT, 3, 0), rnode(GIN, 2, 0, 2) },
  { pnode(GPIO, 2, 0, DATAOUT, 3, 1), rnode(GIN, 2, 0, 3) },
  { pnode(GPIO, 2, 0, DATAOUT, 3, 2), rnode(GIN, 2, 0, 4) },
  { pnode(GPIO, 2, 0, DATAOUT, 3, 3), rnode(GIN, 2, 0, 5) },
  { pnode(GPIO, 2, 0, DATAOUT, 3, 4), rnode(GIN, 2, 0, 6) },
  { pnode(GPIO, 2, 0, OEIN, 3, 0), rnode(GOUT, 2, 0, 2) },
  { pnode(GPIO, 2, 0, OEIN, 3, 1), rnode(GOUT, 2, 0, 19) },
  { pnode(GPIO, 2, 0, BSLIPMAX, 3, -1), rnode(GIN, 2, 0, 1) },
  { pnode(GPIO, 2, 0, CEIN, 3, -1), rnode(GOUT, 2, 0, 5) },
  { pnode(GPIO, 2, 0, CEOUT, 3, -1), rnode(GOUT, 2, 0, 4) },
  { pnode(GPIO, 2, 0, ACLR, 3, -1), rnode(GOUT, 2, 0, 12) },
  { pnode(GPIO, 2, 0, SCLR, 3, -1), rnode(GOUT, 2, 0, 1) },
  { pnode(GPIO, 2, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 2, 0, 4) },
  { pnode(GPIO, 2, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 2, 0, 6) },
  { pnode(GPIO, 2, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 2, 0, 0) },
  { pnode(GPIO, 2, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 2, 0, 2) },
  { pnode(GPIO, 2, 61, DATAIN, 0, 0), rnode(GOUT, 2, 61, 44) },
  { pnode(GPIO, 2, 61, DATAIN, 0, 1), rnode(GOUT, 2, 61, 34) },
  { pnode(GPIO, 2, 61, DATAIN, 0, 2), rnode(GOUT, 2, 61, 43) },
  { pnode(GPIO, 2, 61, DATAIN, 0, 3), rnode(GOUT, 2, 61, 29) },
  { pnode(GPIO, 2, 61, DATAOUT, 0, 0), rnode(GIN, 2, 61, 18) },
  { pnode(GPIO, 2, 61, DATAOUT, 0, 1), rnode(GIN, 2, 61, 17) },
  { pnode(GPIO, 2, 61, DATAOUT, 0, 2), rnode(GIN, 2, 61, 16) },
  { pnode(GPIO, 2, 61, DATAOUT, 0, 3), rnode(GIN, 2, 61, 15) },
  { pnode(GPIO, 2, 61, DATAOUT, 0, 4), rnode(GIN, 2, 61, 14) },
  { pnode(GPIO, 2, 61, OEIN, 0, 0), rnode(GOUT, 2, 61, 38) },
  { pnode(GPIO, 2, 61, OEIN, 0, 1), rnode(GOUT, 2, 61, 30) },
  { pnode(GPIO, 2, 61, BSLIPMAX, 0, -1), rnode(GIN, 2, 61, 19) },
  { pnode(GPIO, 2, 61, CEIN, 0, -1), rnode(GOUT, 2, 61, 27) },
  { pnode(GPIO, 2, 61, CEOUT, 0, -1), rnode(GOUT, 2, 61, 45) },
  { pnode(GPIO, 2, 61, ACLR, 0, -1), rnode(GOUT, 2, 61, 28) },
  { pnode(GPIO, 2, 61, SCLR, 0, -1), rnode(GOUT, 2, 61, 31) },
  { pnode(GPIO, 2, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 2, 61, 10) },
  { pnode(GPIO, 2, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 2, 61, 8) },
  { pnode(GPIO, 2, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 2, 61, 14) },
  { pnode(GPIO, 2, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 2, 61, 12) },
  { pnode(GPIO, 2, 61, DATAIN, 1, 0), rnode(GOUT, 2, 61, 49) },
  { pnode(GPIO, 2, 61, DATAIN, 1, 1), rnode(GOUT, 2, 61, 41) },
  { pnode(GPIO, 2, 61, DATAIN, 1, 2), rnode(GOUT, 2, 61, 48) },
  { pnode(GPIO, 2, 61, DATAIN, 1, 3), rnode(GOUT, 2, 61, 40) },
  { pnode(GPIO, 2, 61, DATAOUT, 1, 0), rnode(GIN, 2, 61, 24) },
  { pnode(GPIO, 2, 61, DATAOUT, 1, 1), rnode(GIN, 2, 61, 23) },
  { pnode(GPIO, 2, 61, DATAOUT, 1, 2), rnode(GIN, 2, 61, 22) },
  { pnode(GPIO, 2, 61, DATAOUT, 1, 3), rnode(GIN, 2, 61, 21) },
  { pnode(GPIO, 2, 61, DATAOUT, 1, 4), rnode(GIN, 2, 61, 20) },
  { pnode(GPIO, 2, 61, OEIN, 1, 0), rnode(GOUT, 2, 61, 47) },
  { pnode(GPIO, 2, 61, OEIN, 1, 1), rnode(GOUT, 2, 61, 39) },
  { pnode(GPIO, 2, 61, BSLIPMAX, 1, -1), rnode(GIN, 2, 61, 25) },
  { pnode(GPIO, 2, 61, CEIN, 1, -1), rnode(GOUT, 2, 61, 51) },
  { pnode(GPIO, 2, 61, CEOUT, 1, -1), rnode(GOUT, 2, 61, 50) },
  { pnode(GPIO, 2, 61, ACLR, 1, -1), rnode(GOUT, 2, 61, 42) },
  { pnode(GPIO, 2, 61, SCLR, 1, -1), rnode(GOUT, 2, 61, 46) },
  { pnode(GPIO, 2, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 2, 61, 11) },
  { pnode(GPIO, 2, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 2, 61, 9) },
  { pnode(GPIO, 2, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 2, 61, 15) },
  { pnode(GPIO, 2, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 2, 61, 13) },
  { pnode(GPIO, 2, 61, DATAIN, 2, 0), rnode(GOUT, 2, 61, 14) },
  { pnode(GPIO, 2, 61, DATAIN, 2, 1), rnode(GOUT, 2, 61, 22) },
  { pnode(GPIO, 2, 61, DATAIN, 2, 2), rnode(GOUT, 2, 61, 15) },
  { pnode(GPIO, 2, 61, DATAIN, 2, 3), rnode(GOUT, 2, 61, 23) },
  { pnode(GPIO, 2, 61, DATAOUT, 2, 0), rnode(GIN, 2, 61, 8) },
  { pnode(GPIO, 2, 61, DATAOUT, 2, 1), rnode(GIN, 2, 61, 9) },
  { pnode(GPIO, 2, 61, DATAOUT, 2, 2), rnode(GIN, 2, 61, 10) },
  { pnode(GPIO, 2, 61, DATAOUT, 2, 3), rnode(GIN, 2, 61, 11) },
  { pnode(GPIO, 2, 61, DATAOUT, 2, 4), rnode(GIN, 2, 61, 12) },
  { pnode(GPIO, 2, 61, OEIN, 2, 0), rnode(GOUT, 2, 61, 16) },
  { pnode(GPIO, 2, 61, OEIN, 2, 1), rnode(GOUT, 2, 61, 24) },
  { pnode(GPIO, 2, 61, BSLIPMAX, 2, -1), rnode(GIN, 2, 61, 7) },
  { pnode(GPIO, 2, 61, CEIN, 2, -1), rnode(GOUT, 2, 61, 20) },
  { pnode(GPIO, 2, 61, CEOUT, 2, -1), rnode(GOUT, 2, 61, 13) },
  { pnode(GPIO, 2, 61, ACLR, 2, -1), rnode(GOUT, 2, 61, 21) },
  { pnode(GPIO, 2, 61, SCLR, 2, -1), rnode(GOUT, 2, 61, 25) },
  { pnode(GPIO, 2, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 2, 61, 5) },
  { pnode(GPIO, 2, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 2, 61, 7) },
  { pnode(GPIO, 2, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 2, 61, 1) },
  { pnode(GPIO, 2, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 2, 61, 3) },
  { pnode(GPIO, 2, 61, DATAIN, 3, 0), rnode(GOUT, 2, 61, 3) },
  { pnode(GPIO, 2, 61, DATAIN, 3, 1), rnode(GOUT, 2, 61, 17) },
  { pnode(GPIO, 2, 61, DATAIN, 3, 2), rnode(GOUT, 2, 61, 8) },
  { pnode(GPIO, 2, 61, DATAIN, 3, 3), rnode(GOUT, 2, 61, 18) },
  { pnode(GPIO, 2, 61, DATAOUT, 3, 0), rnode(GIN, 2, 61, 2) },
  { pnode(GPIO, 2, 61, DATAOUT, 3, 1), rnode(GIN, 2, 61, 3) },
  { pnode(GPIO, 2, 61, DATAOUT, 3, 2), rnode(GIN, 2, 61, 4) },
  { pnode(GPIO, 2, 61, DATAOUT, 3, 3), rnode(GIN, 2, 61, 5) },
  { pnode(GPIO, 2, 61, DATAOUT, 3, 4), rnode(GIN, 2, 61, 6) },
  { pnode(GPIO, 2, 61, OEIN, 3, 0), rnode(GOUT, 2, 61, 2) },
  { pnode(GPIO, 2, 61, OEIN, 3, 1), rnode(GOUT, 2, 61, 19) },
  { pnode(GPIO, 2, 61, BSLIPMAX, 3, -1), rnode(GIN, 2, 61, 1) },
  { pnode(GPIO, 2, 61, CEIN, 3, -1), rnode(GOUT, 2, 61, 5) },
  { pnode(GPIO, 2, 61, CEOUT, 3, -1), rnode(GOUT, 2, 61, 4) },
  { pnode(GPIO, 2, 61, ACLR, 3, -1), rnode(GOUT, 2, 61, 12) },
  { pnode(GPIO, 2, 61, SCLR, 3, -1), rnode(GOUT, 2, 61, 1) },
  { pnode(GPIO, 2, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 2, 61, 4) },
  { pnode(GPIO, 2, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 2, 61, 6) },
  { pnode(GPIO, 2, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 2, 61, 0) },
  { pnode(GPIO, 2, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 2, 61, 2) },
  { pnode(GPIO, 4, 0, DATAIN, 0, 0), rnode(GOUT, 4, 0, 44) },
  { pnode(GPIO, 4, 0, DATAIN, 0, 1), rnode(GOUT, 4, 0, 34) },
  { pnode(GPIO, 4, 0, DATAIN, 0, 2), rnode(GOUT, 4, 0, 43) },
  { pnode(GPIO, 4, 0, DATAIN, 0, 3), rnode(GOUT, 4, 0, 29) },
  { pnode(GPIO, 4, 0, DATAOUT, 0, 0), rnode(GIN, 4, 0, 18) },
  { pnode(GPIO, 4, 0, DATAOUT, 0, 1), rnode(GIN, 4, 0, 17) },
  { pnode(GPIO, 4, 0, DATAOUT, 0, 2), rnode(GIN, 4, 0, 16) },
  { pnode(GPIO, 4, 0, DATAOUT, 0, 3), rnode(GIN, 4, 0, 15) },
  { pnode(GPIO, 4, 0, DATAOUT, 0, 4), rnode(GIN, 4, 0, 14) },
  { pnode(GPIO, 4, 0, OEIN, 0, 0), rnode(GOUT, 4, 0, 38) },
  { pnode(GPIO, 4, 0, OEIN, 0, 1), rnode(GOUT, 4, 0, 30) },
  { pnode(GPIO, 4, 0, BSLIPMAX, 0, -1), rnode(GIN, 4, 0, 19) },
  { pnode(GPIO, 4, 0, CEIN, 0, -1), rnode(GOUT, 4, 0, 27) },
  { pnode(GPIO, 4, 0, CEOUT, 0, -1), rnode(GOUT, 4, 0, 45) },
  { pnode(GPIO, 4, 0, ACLR, 0, -1), rnode(GOUT, 4, 0, 28) },
  { pnode(GPIO, 4, 0, SCLR, 0, -1), rnode(GOUT, 4, 0, 31) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 4, 0, 10) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 4, 0, 8) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 4, 0, 14) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 4, 0, 12) },
  { pnode(GPIO, 4, 0, DATAIN, 1, 0), rnode(GOUT, 4, 0, 49) },
  { pnode(GPIO, 4, 0, DATAIN, 1, 1), rnode(GOUT, 4, 0, 41) },
  { pnode(GPIO, 4, 0, DATAIN, 1, 2), rnode(GOUT, 4, 0, 48) },
  { pnode(GPIO, 4, 0, DATAIN, 1, 3), rnode(GOUT, 4, 0, 40) },
  { pnode(GPIO, 4, 0, DATAOUT, 1, 0), rnode(GIN, 4, 0, 24) },
  { pnode(GPIO, 4, 0, DATAOUT, 1, 1), rnode(GIN, 4, 0, 23) },
  { pnode(GPIO, 4, 0, DATAOUT, 1, 2), rnode(GIN, 4, 0, 22) },
  { pnode(GPIO, 4, 0, DATAOUT, 1, 3), rnode(GIN, 4, 0, 21) },
  { pnode(GPIO, 4, 0, DATAOUT, 1, 4), rnode(GIN, 4, 0, 20) },
  { pnode(GPIO, 4, 0, OEIN, 1, 0), rnode(GOUT, 4, 0, 47) },
  { pnode(GPIO, 4, 0, OEIN, 1, 1), rnode(GOUT, 4, 0, 39) },
  { pnode(GPIO, 4, 0, BSLIPMAX, 1, -1), rnode(GIN, 4, 0, 25) },
  { pnode(GPIO, 4, 0, CEIN, 1, -1), rnode(GOUT, 4, 0, 51) },
  { pnode(GPIO, 4, 0, CEOUT, 1, -1), rnode(GOUT, 4, 0, 50) },
  { pnode(GPIO, 4, 0, ACLR, 1, -1), rnode(GOUT, 4, 0, 42) },
  { pnode(GPIO, 4, 0, SCLR, 1, -1), rnode(GOUT, 4, 0, 46) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 4, 0, 11) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 4, 0, 9) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 4, 0, 15) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 4, 0, 13) },
  { pnode(GPIO, 4, 0, DATAIN, 2, 0), rnode(GOUT, 4, 0, 14) },
  { pnode(GPIO, 4, 0, DATAIN, 2, 1), rnode(GOUT, 4, 0, 22) },
  { pnode(GPIO, 4, 0, DATAIN, 2, 2), rnode(GOUT, 4, 0, 15) },
  { pnode(GPIO, 4, 0, DATAIN, 2, 3), rnode(GOUT, 4, 0, 23) },
  { pnode(GPIO, 4, 0, DATAOUT, 2, 0), rnode(GIN, 4, 0, 8) },
  { pnode(GPIO, 4, 0, DATAOUT, 2, 1), rnode(GIN, 4, 0, 9) },
  { pnode(GPIO, 4, 0, DATAOUT, 2, 2), rnode(GIN, 4, 0, 10) },
  { pnode(GPIO, 4, 0, DATAOUT, 2, 3), rnode(GIN, 4, 0, 11) },
  { pnode(GPIO, 4, 0, DATAOUT, 2, 4), rnode(GIN, 4, 0, 12) },
  { pnode(GPIO, 4, 0, OEIN, 2, 0), rnode(GOUT, 4, 0, 16) },
  { pnode(GPIO, 4, 0, OEIN, 2, 1), rnode(GOUT, 4, 0, 24) },
  { pnode(GPIO, 4, 0, BSLIPMAX, 2, -1), rnode(GIN, 4, 0, 7) },
  { pnode(GPIO, 4, 0, CEIN, 2, -1), rnode(GOUT, 4, 0, 20) },
  { pnode(GPIO, 4, 0, CEOUT, 2, -1), rnode(GOUT, 4, 0, 13) },
  { pnode(GPIO, 4, 0, ACLR, 2, -1), rnode(GOUT, 4, 0, 21) },
  { pnode(GPIO, 4, 0, SCLR, 2, -1), rnode(GOUT, 4, 0, 25) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 4, 0, 5) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 4, 0, 7) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 4, 0, 1) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 4, 0, 3) },
  { pnode(GPIO, 4, 0, DATAIN, 3, 0), rnode(GOUT, 4, 0, 3) },
  { pnode(GPIO, 4, 0, DATAIN, 3, 1), rnode(GOUT, 4, 0, 17) },
  { pnode(GPIO, 4, 0, DATAIN, 3, 2), rnode(GOUT, 4, 0, 8) },
  { pnode(GPIO, 4, 0, DATAIN, 3, 3), rnode(GOUT, 4, 0, 18) },
  { pnode(GPIO, 4, 0, DATAOUT, 3, 0), rnode(GIN, 4, 0, 2) },
  { pnode(GPIO, 4, 0, DATAOUT, 3, 1), rnode(GIN, 4, 0, 3) },
  { pnode(GPIO, 4, 0, DATAOUT, 3, 2), rnode(GIN, 4, 0, 4) },
  { pnode(GPIO, 4, 0, DATAOUT, 3, 3), rnode(GIN, 4, 0, 5) },
  { pnode(GPIO, 4, 0, DATAOUT, 3, 4), rnode(GIN, 4, 0, 6) },
  { pnode(GPIO, 4, 0, OEIN, 3, 0), rnode(GOUT, 4, 0, 2) },
  { pnode(GPIO, 4, 0, OEIN, 3, 1), rnode(GOUT, 4, 0, 19) },
  { pnode(GPIO, 4, 0, BSLIPMAX, 3, -1), rnode(GIN, 4, 0, 1) },
  { pnode(GPIO, 4, 0, CEIN, 3, -1), rnode(GOUT, 4, 0, 5) },
  { pnode(GPIO, 4, 0, CEOUT, 3, -1), rnode(GOUT, 4, 0, 4) },
  { pnode(GPIO, 4, 0, ACLR, 3, -1), rnode(GOUT, 4, 0, 12) },
  { pnode(GPIO, 4, 0, SCLR, 3, -1), rnode(GOUT, 4, 0, 1) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 4, 0, 4) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 4, 0, 6) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 4, 0, 0) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 4, 0, 2) },
  { pnode(GPIO, 4, 61, DATAIN, 0, 0), rnode(GOUT, 4, 61, 44) },
  { pnode(GPIO, 4, 61, DATAIN, 0, 1), rnode(GOUT, 4, 61, 34) },
  { pnode(GPIO, 4, 61, DATAIN, 0, 2), rnode(GOUT, 4, 61, 43) },
  { pnode(GPIO, 4, 61, DATAIN, 0, 3), rnode(GOUT, 4, 61, 29) },
  { pnode(GPIO, 4, 61, DATAOUT, 0, 0), rnode(GIN, 4, 61, 18) },
  { pnode(GPIO, 4, 61, DATAOUT, 0, 1), rnode(GIN, 4, 61, 17) },
  { pnode(GPIO, 4, 61, DATAOUT, 0, 2), rnode(GIN, 4, 61, 16) },
  { pnode(GPIO, 4, 61, DATAOUT, 0, 3), rnode(GIN, 4, 61, 15) },
  { pnode(GPIO, 4, 61, DATAOUT, 0, 4), rnode(GIN, 4, 61, 14) },
  { pnode(GPIO, 4, 61, OEIN, 0, 0), rnode(GOUT, 4, 61, 38) },
  { pnode(GPIO, 4, 61, OEIN, 0, 1), rnode(GOUT, 4, 61, 30) },
  { pnode(GPIO, 4, 61, BSLIPMAX, 0, -1), rnode(GIN, 4, 61, 19) },
  { pnode(GPIO, 4, 61, CEIN, 0, -1), rnode(GOUT, 4, 61, 27) },
  { pnode(GPIO, 4, 61, CEOUT, 0, -1), rnode(GOUT, 4, 61, 45) },
  { pnode(GPIO, 4, 61, ACLR, 0, -1), rnode(GOUT, 4, 61, 28) },
  { pnode(GPIO, 4, 61, SCLR, 0, -1), rnode(GOUT, 4, 61, 31) },
  { pnode(GPIO, 4, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 4, 61, 10) },
  { pnode(GPIO, 4, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 4, 61, 8) },
  { pnode(GPIO, 4, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 4, 61, 14) },
  { pnode(GPIO, 4, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 4, 61, 12) },
  { pnode(GPIO, 4, 61, DATAIN, 1, 0), rnode(GOUT, 4, 61, 49) },
  { pnode(GPIO, 4, 61, DATAIN, 1, 1), rnode(GOUT, 4, 61, 41) },
  { pnode(GPIO, 4, 61, DATAIN, 1, 2), rnode(GOUT, 4, 61, 48) },
  { pnode(GPIO, 4, 61, DATAIN, 1, 3), rnode(GOUT, 4, 61, 40) },
  { pnode(GPIO, 4, 61, DATAOUT, 1, 0), rnode(GIN, 4, 61, 24) },
  { pnode(GPIO, 4, 61, DATAOUT, 1, 1), rnode(GIN, 4, 61, 23) },
  { pnode(GPIO, 4, 61, DATAOUT, 1, 2), rnode(GIN, 4, 61, 22) },
  { pnode(GPIO, 4, 61, DATAOUT, 1, 3), rnode(GIN, 4, 61, 21) },
  { pnode(GPIO, 4, 61, DATAOUT, 1, 4), rnode(GIN, 4, 61, 20) },
  { pnode(GPIO, 4, 61, OEIN, 1, 0), rnode(GOUT, 4, 61, 47) },
  { pnode(GPIO, 4, 61, OEIN, 1, 1), rnode(GOUT, 4, 61, 39) },
  { pnode(GPIO, 4, 61, BSLIPMAX, 1, -1), rnode(GIN, 4, 61, 25) },
  { pnode(GPIO, 4, 61, CEIN, 1, -1), rnode(GOUT, 4, 61, 51) },
  { pnode(GPIO, 4, 61, CEOUT, 1, -1), rnode(GOUT, 4, 61, 50) },
  { pnode(GPIO, 4, 61, ACLR, 1, -1), rnode(GOUT, 4, 61, 42) },
  { pnode(GPIO, 4, 61, SCLR, 1, -1), rnode(GOUT, 4, 61, 46) },
  { pnode(GPIO, 4, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 4, 61, 11) },
  { pnode(GPIO, 4, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 4, 61, 9) },
  { pnode(GPIO, 4, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 4, 61, 15) },
  { pnode(GPIO, 4, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 4, 61, 13) },
  { pnode(GPIO, 4, 61, DATAIN, 2, 0), rnode(GOUT, 4, 61, 14) },
  { pnode(GPIO, 4, 61, DATAIN, 2, 1), rnode(GOUT, 4, 61, 22) },
  { pnode(GPIO, 4, 61, DATAIN, 2, 2), rnode(GOUT, 4, 61, 15) },
  { pnode(GPIO, 4, 61, DATAIN, 2, 3), rnode(GOUT, 4, 61, 23) },
  { pnode(GPIO, 4, 61, DATAOUT, 2, 0), rnode(GIN, 4, 61, 8) },
  { pnode(GPIO, 4, 61, DATAOUT, 2, 1), rnode(GIN, 4, 61, 9) },
  { pnode(GPIO, 4, 61, DATAOUT, 2, 2), rnode(GIN, 4, 61, 10) },
  { pnode(GPIO, 4, 61, DATAOUT, 2, 3), rnode(GIN, 4, 61, 11) },
  { pnode(GPIO, 4, 61, DATAOUT, 2, 4), rnode(GIN, 4, 61, 12) },
  { pnode(GPIO, 4, 61, OEIN, 2, 0), rnode(GOUT, 4, 61, 16) },
  { pnode(GPIO, 4, 61, OEIN, 2, 1), rnode(GOUT, 4, 61, 24) },
  { pnode(GPIO, 4, 61, BSLIPMAX, 2, -1), rnode(GIN, 4, 61, 7) },
  { pnode(GPIO, 4, 61, CEIN, 2, -1), rnode(GOUT, 4, 61, 20) },
  { pnode(GPIO, 4, 61, CEOUT, 2, -1), rnode(GOUT, 4, 61, 13) },
  { pnode(GPIO, 4, 61, ACLR, 2, -1), rnode(GOUT, 4, 61, 21) },
  { pnode(GPIO, 4, 61, SCLR, 2, -1), rnode(GOUT, 4, 61, 25) },
  { pnode(GPIO, 4, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 4, 61, 5) },
  { pnode(GPIO, 4, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 4, 61, 7) },
  { pnode(GPIO, 4, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 4, 61, 1) },
  { pnode(GPIO, 4, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 4, 61, 3) },
  { pnode(GPIO, 4, 61, DATAIN, 3, 0), rnode(GOUT, 4, 61, 3) },
  { pnode(GPIO, 4, 61, DATAIN, 3, 1), rnode(GOUT, 4, 61, 17) },
  { pnode(GPIO, 4, 61, DATAIN, 3, 2), rnode(GOUT, 4, 61, 8) },
  { pnode(GPIO, 4, 61, DATAIN, 3, 3), rnode(GOUT, 4, 61, 18) },
  { pnode(GPIO, 4, 61, DATAOUT, 3, 0), rnode(GIN, 4, 61, 2) },
  { pnode(GPIO, 4, 61, DATAOUT, 3, 1), rnode(GIN, 4, 61, 3) },
  { pnode(GPIO, 4, 61, DATAOUT, 3, 2), rnode(GIN, 4, 61, 4) },
  { pnode(GPIO, 4, 61, DATAOUT, 3, 3), rnode(GIN, 4, 61, 5) },
  { pnode(GPIO, 4, 61, DATAOUT, 3, 4), rnode(GIN, 4, 61, 6) },
  { pnode(GPIO, 4, 61, OEIN, 3, 0), rnode(GOUT, 4, 61, 2) },
  { pnode(GPIO, 4, 61, OEIN, 3, 1), rnode(GOUT, 4, 61, 19) },
  { pnode(GPIO, 4, 61, BSLIPMAX, 3, -1), rnode(GIN, 4, 61, 1) },
  { pnode(GPIO, 4, 61, CEIN, 3, -1), rnode(GOUT, 4, 61, 5) },
  { pnode(GPIO, 4, 61, CEOUT, 3, -1), rnode(GOUT, 4, 61, 4) },
  { pnode(GPIO, 4, 61, ACLR, 3, -1), rnode(GOUT, 4, 61, 12) },
  { pnode(GPIO, 4, 61, SCLR, 3, -1), rnode(GOUT, 4, 61, 1) },
  { pnode(GPIO, 4, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 4, 61, 4) },
  { pnode(GPIO, 4, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 4, 61, 6) },
  { pnode(GPIO, 4, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 4, 61, 0) },
  { pnode(GPIO, 4, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 4, 61, 2) },
  { pnode(GPIO, 6, 0, DATAIN, 0, 0), rnode(GOUT, 6, 0, 44) },
  { pnode(GPIO, 6, 0, DATAIN, 0, 1), rnode(GOUT, 6, 0, 34) },
  { pnode(GPIO, 6, 0, DATAIN, 0, 2), rnode(GOUT, 6, 0, 43) },
  { pnode(GPIO, 6, 0, DATAIN, 0, 3), rnode(GOUT, 6, 0, 29) },
  { pnode(GPIO, 6, 0, DATAOUT, 0, 0), rnode(GIN, 6, 0, 18) },
  { pnode(GPIO, 6, 0, DATAOUT, 0, 1), rnode(GIN, 6, 0, 17) },
  { pnode(GPIO, 6, 0, DATAOUT, 0, 2), rnode(GIN, 6, 0, 16) },
  { pnode(GPIO, 6, 0, DATAOUT, 0, 3), rnode(GIN, 6, 0, 15) },
  { pnode(GPIO, 6, 0, DATAOUT, 0, 4), rnode(GIN, 6, 0, 14) },
  { pnode(GPIO, 6, 0, OEIN, 0, 0), rnode(GOUT, 6, 0, 38) },
  { pnode(GPIO, 6, 0, OEIN, 0, 1), rnode(GOUT, 6, 0, 30) },
  { pnode(GPIO, 6, 0, BSLIPMAX, 0, -1), rnode(GIN, 6, 0, 19) },
  { pnode(GPIO, 6, 0, CEIN, 0, -1), rnode(GOUT, 6, 0, 27) },
  { pnode(GPIO, 6, 0, CEOUT, 0, -1), rnode(GOUT, 6, 0, 45) },
  { pnode(GPIO, 6, 0, ACLR, 0, -1), rnode(GOUT, 6, 0, 28) },
  { pnode(GPIO, 6, 0, SCLR, 0, -1), rnode(GOUT, 6, 0, 31) },
  { pnode(GPIO, 6, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 6, 0, 10) },
  { pnode(GPIO, 6, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 6, 0, 8) },
  { pnode(GPIO, 6, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 6, 0, 14) },
  { pnode(GPIO, 6, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 6, 0, 12) },
  { pnode(GPIO, 6, 0, DATAIN, 1, 0), rnode(GOUT, 6, 0, 49) },
  { pnode(GPIO, 6, 0, DATAIN, 1, 1), rnode(GOUT, 6, 0, 41) },
  { pnode(GPIO, 6, 0, DATAIN, 1, 2), rnode(GOUT, 6, 0, 48) },
  { pnode(GPIO, 6, 0, DATAIN, 1, 3), rnode(GOUT, 6, 0, 40) },
  { pnode(GPIO, 6, 0, DATAOUT, 1, 0), rnode(GIN, 6, 0, 24) },
  { pnode(GPIO, 6, 0, DATAOUT, 1, 1), rnode(GIN, 6, 0, 23) },
  { pnode(GPIO, 6, 0, DATAOUT, 1, 2), rnode(GIN, 6, 0, 22) },
  { pnode(GPIO, 6, 0, DATAOUT, 1, 3), rnode(GIN, 6, 0, 21) },
  { pnode(GPIO, 6, 0, DATAOUT, 1, 4), rnode(GIN, 6, 0, 20) },
  { pnode(GPIO, 6, 0, OEIN, 1, 0), rnode(GOUT, 6, 0, 47) },
  { pnode(GPIO, 6, 0, OEIN, 1, 1), rnode(GOUT, 6, 0, 39) },
  { pnode(GPIO, 6, 0, BSLIPMAX, 1, -1), rnode(GIN, 6, 0, 25) },
  { pnode(GPIO, 6, 0, CEIN, 1, -1), rnode(GOUT, 6, 0, 51) },
  { pnode(GPIO, 6, 0, CEOUT, 1, -1), rnode(GOUT, 6, 0, 50) },
  { pnode(GPIO, 6, 0, ACLR, 1, -1), rnode(GOUT, 6, 0, 42) },
  { pnode(GPIO, 6, 0, SCLR, 1, -1), rnode(GOUT, 6, 0, 46) },
  { pnode(GPIO, 6, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 6, 0, 11) },
  { pnode(GPIO, 6, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 6, 0, 9) },
  { pnode(GPIO, 6, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 6, 0, 15) },
  { pnode(GPIO, 6, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 6, 0, 13) },
  { pnode(GPIO, 6, 0, DATAIN, 2, 0), rnode(GOUT, 6, 0, 14) },
  { pnode(GPIO, 6, 0, DATAIN, 2, 1), rnode(GOUT, 6, 0, 22) },
  { pnode(GPIO, 6, 0, DATAIN, 2, 2), rnode(GOUT, 6, 0, 15) },
  { pnode(GPIO, 6, 0, DATAIN, 2, 3), rnode(GOUT, 6, 0, 23) },
  { pnode(GPIO, 6, 0, DATAOUT, 2, 0), rnode(GIN, 6, 0, 8) },
  { pnode(GPIO, 6, 0, DATAOUT, 2, 1), rnode(GIN, 6, 0, 9) },
  { pnode(GPIO, 6, 0, DATAOUT, 2, 2), rnode(GIN, 6, 0, 10) },
  { pnode(GPIO, 6, 0, DATAOUT, 2, 3), rnode(GIN, 6, 0, 11) },
  { pnode(GPIO, 6, 0, DATAOUT, 2, 4), rnode(GIN, 6, 0, 12) },
  { pnode(GPIO, 6, 0, OEIN, 2, 0), rnode(GOUT, 6, 0, 16) },
  { pnode(GPIO, 6, 0, OEIN, 2, 1), rnode(GOUT, 6, 0, 24) },
  { pnode(GPIO, 6, 0, BSLIPMAX, 2, -1), rnode(GIN, 6, 0, 7) },
  { pnode(GPIO, 6, 0, CEIN, 2, -1), rnode(GOUT, 6, 0, 20) },
  { pnode(GPIO, 6, 0, CEOUT, 2, -1), rnode(GOUT, 6, 0, 13) },
  { pnode(GPIO, 6, 0, ACLR, 2, -1), rnode(GOUT, 6, 0, 21) },
  { pnode(GPIO, 6, 0, SCLR, 2, -1), rnode(GOUT, 6, 0, 25) },
  { pnode(GPIO, 6, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 6, 0, 5) },
  { pnode(GPIO, 6, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 6, 0, 7) },
  { pnode(GPIO, 6, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 6, 0, 1) },
  { pnode(GPIO, 6, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 6, 0, 3) },
  { pnode(GPIO, 6, 0, DATAIN, 3, 0), rnode(GOUT, 6, 0, 3) },
  { pnode(GPIO, 6, 0, DATAIN, 3, 1), rnode(GOUT, 6, 0, 17) },
  { pnode(GPIO, 6, 0, DATAIN, 3, 2), rnode(GOUT, 6, 0, 8) },
  { pnode(GPIO, 6, 0, DATAIN, 3, 3), rnode(GOUT, 6, 0, 18) },
  { pnode(GPIO, 6, 0, DATAOUT, 3, 0), rnode(GIN, 6, 0, 2) },
  { pnode(GPIO, 6, 0, DATAOUT, 3, 1), rnode(GIN, 6, 0, 3) },
  { pnode(GPIO, 6, 0, DATAOUT, 3, 2), rnode(GIN, 6, 0, 4) },
  { pnode(GPIO, 6, 0, DATAOUT, 3, 3), rnode(GIN, 6, 0, 5) },
  { pnode(GPIO, 6, 0, DATAOUT, 3, 4), rnode(GIN, 6, 0, 6) },
  { pnode(GPIO, 6, 0, OEIN, 3, 0), rnode(GOUT, 6, 0, 2) },
  { pnode(GPIO, 6, 0, OEIN, 3, 1), rnode(GOUT, 6, 0, 19) },
  { pnode(GPIO, 6, 0, BSLIPMAX, 3, -1), rnode(GIN, 6, 0, 1) },
  { pnode(GPIO, 6, 0, CEIN, 3, -1), rnode(GOUT, 6, 0, 5) },
  { pnode(GPIO, 6, 0, CEOUT, 3, -1), rnode(GOUT, 6, 0, 4) },
  { pnode(GPIO, 6, 0, ACLR, 3, -1), rnode(GOUT, 6, 0, 12) },
  { pnode(GPIO, 6, 0, SCLR, 3, -1), rnode(GOUT, 6, 0, 1) },
  { pnode(GPIO, 6, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 6, 0, 4) },
  { pnode(GPIO, 6, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 6, 0, 6) },
  { pnode(GPIO, 6, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 6, 0, 0) },
  { pnode(GPIO, 6, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 6, 0, 2) },
  { pnode(GPIO, 6, 61, DATAIN, 0, 0), rnode(GOUT, 6, 61, 44) },
  { pnode(GPIO, 6, 61, DATAIN, 0, 1), rnode(GOUT, 6, 61, 34) },
  { pnode(GPIO, 6, 61, DATAIN, 0, 2), rnode(GOUT, 6, 61, 43) },
  { pnode(GPIO, 6, 61, DATAIN, 0, 3), rnode(GOUT, 6, 61, 29) },
  { pnode(GPIO, 6, 61, DATAOUT, 0, 0), rnode(GIN, 6, 61, 18) },
  { pnode(GPIO, 6, 61, DATAOUT, 0, 1), rnode(GIN, 6, 61, 17) },
  { pnode(GPIO, 6, 61, DATAOUT, 0, 2), rnode(GIN, 6, 61, 16) },
  { pnode(GPIO, 6, 61, DATAOUT, 0, 3), rnode(GIN, 6, 61, 15) },
  { pnode(GPIO, 6, 61, DATAOUT, 0, 4), rnode(GIN, 6, 61, 14) },
  { pnode(GPIO, 6, 61, OEIN, 0, 0), rnode(GOUT, 6, 61, 38) },
  { pnode(GPIO, 6, 61, OEIN, 0, 1), rnode(GOUT, 6, 61, 30) },
  { pnode(GPIO, 6, 61, BSLIPMAX, 0, -1), rnode(GIN, 6, 61, 19) },
  { pnode(GPIO, 6, 61, CEIN, 0, -1), rnode(GOUT, 6, 61, 27) },
  { pnode(GPIO, 6, 61, CEOUT, 0, -1), rnode(GOUT, 6, 61, 45) },
  { pnode(GPIO, 6, 61, ACLR, 0, -1), rnode(GOUT, 6, 61, 28) },
  { pnode(GPIO, 6, 61, SCLR, 0, -1), rnode(GOUT, 6, 61, 31) },
  { pnode(GPIO, 6, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 6, 61, 10) },
  { pnode(GPIO, 6, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 6, 61, 8) },
  { pnode(GPIO, 6, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 6, 61, 14) },
  { pnode(GPIO, 6, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 6, 61, 12) },
  { pnode(GPIO, 6, 61, DATAIN, 1, 0), rnode(GOUT, 6, 61, 49) },
  { pnode(GPIO, 6, 61, DATAIN, 1, 1), rnode(GOUT, 6, 61, 41) },
  { pnode(GPIO, 6, 61, DATAIN, 1, 2), rnode(GOUT, 6, 61, 48) },
  { pnode(GPIO, 6, 61, DATAIN, 1, 3), rnode(GOUT, 6, 61, 40) },
  { pnode(GPIO, 6, 61, DATAOUT, 1, 0), rnode(GIN, 6, 61, 24) },
  { pnode(GPIO, 6, 61, DATAOUT, 1, 1), rnode(GIN, 6, 61, 23) },
  { pnode(GPIO, 6, 61, DATAOUT, 1, 2), rnode(GIN, 6, 61, 22) },
  { pnode(GPIO, 6, 61, DATAOUT, 1, 3), rnode(GIN, 6, 61, 21) },
  { pnode(GPIO, 6, 61, DATAOUT, 1, 4), rnode(GIN, 6, 61, 20) },
  { pnode(GPIO, 6, 61, OEIN, 1, 0), rnode(GOUT, 6, 61, 47) },
  { pnode(GPIO, 6, 61, OEIN, 1, 1), rnode(GOUT, 6, 61, 39) },
  { pnode(GPIO, 6, 61, BSLIPMAX, 1, -1), rnode(GIN, 6, 61, 25) },
  { pnode(GPIO, 6, 61, CEIN, 1, -1), rnode(GOUT, 6, 61, 51) },
  { pnode(GPIO, 6, 61, CEOUT, 1, -1), rnode(GOUT, 6, 61, 50) },
  { pnode(GPIO, 6, 61, ACLR, 1, -1), rnode(GOUT, 6, 61, 42) },
  { pnode(GPIO, 6, 61, SCLR, 1, -1), rnode(GOUT, 6, 61, 46) },
  { pnode(GPIO, 6, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 6, 61, 11) },
  { pnode(GPIO, 6, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 6, 61, 9) },
  { pnode(GPIO, 6, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 6, 61, 15) },
  { pnode(GPIO, 6, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 6, 61, 13) },
  { pnode(GPIO, 6, 61, DATAIN, 2, 0), rnode(GOUT, 6, 61, 14) },
  { pnode(GPIO, 6, 61, DATAIN, 2, 1), rnode(GOUT, 6, 61, 22) },
  { pnode(GPIO, 6, 61, DATAIN, 2, 2), rnode(GOUT, 6, 61, 15) },
  { pnode(GPIO, 6, 61, DATAIN, 2, 3), rnode(GOUT, 6, 61, 23) },
  { pnode(GPIO, 6, 61, DATAOUT, 2, 0), rnode(GIN, 6, 61, 8) },
  { pnode(GPIO, 6, 61, DATAOUT, 2, 1), rnode(GIN, 6, 61, 9) },
  { pnode(GPIO, 6, 61, DATAOUT, 2, 2), rnode(GIN, 6, 61, 10) },
  { pnode(GPIO, 6, 61, DATAOUT, 2, 3), rnode(GIN, 6, 61, 11) },
  { pnode(GPIO, 6, 61, DATAOUT, 2, 4), rnode(GIN, 6, 61, 12) },
  { pnode(GPIO, 6, 61, OEIN, 2, 0), rnode(GOUT, 6, 61, 16) },
  { pnode(GPIO, 6, 61, OEIN, 2, 1), rnode(GOUT, 6, 61, 24) },
  { pnode(GPIO, 6, 61, BSLIPMAX, 2, -1), rnode(GIN, 6, 61, 7) },
  { pnode(GPIO, 6, 61, CEIN, 2, -1), rnode(GOUT, 6, 61, 20) },
  { pnode(GPIO, 6, 61, CEOUT, 2, -1), rnode(GOUT, 6, 61, 13) },
  { pnode(GPIO, 6, 61, ACLR, 2, -1), rnode(GOUT, 6, 61, 21) },
  { pnode(GPIO, 6, 61, SCLR, 2, -1), rnode(GOUT, 6, 61, 25) },
  { pnode(GPIO, 6, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 6, 61, 5) },
  { pnode(GPIO, 6, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 6, 61, 7) },
  { pnode(GPIO, 6, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 6, 61, 1) },
  { pnode(GPIO, 6, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 6, 61, 3) },
  { pnode(GPIO, 6, 61, DATAIN, 3, 0), rnode(GOUT, 6, 61, 3) },
  { pnode(GPIO, 6, 61, DATAIN, 3, 1), rnode(GOUT, 6, 61, 17) },
  { pnode(GPIO, 6, 61, DATAIN, 3, 2), rnode(GOUT, 6, 61, 8) },
  { pnode(GPIO, 6, 61, DATAIN, 3, 3), rnode(GOUT, 6, 61, 18) },
  { pnode(GPIO, 6, 61, DATAOUT, 3, 0), rnode(GIN, 6, 61, 2) },
  { pnode(GPIO, 6, 61, DATAOUT, 3, 1), rnode(GIN, 6, 61, 3) },
  { pnode(GPIO, 6, 61, DATAOUT, 3, 2), rnode(GIN, 6, 61, 4) },
  { pnode(GPIO, 6, 61, DATAOUT, 3, 3), rnode(GIN, 6, 61, 5) },
  { pnode(GPIO, 6, 61, DATAOUT, 3, 4), rnode(GIN, 6, 61, 6) },
  { pnode(GPIO, 6, 61, OEIN, 3, 0), rnode(GOUT, 6, 61, 2) },
  { pnode(GPIO, 6, 61, OEIN, 3, 1), rnode(GOUT, 6, 61, 19) },
  { pnode(GPIO, 6, 61, BSLIPMAX, 3, -1), rnode(GIN, 6, 61, 1) },
  { pnode(GPIO, 6, 61, CEIN, 3, -1), rnode(GOUT, 6, 61, 5) },
  { pnode(GPIO, 6, 61, CEOUT, 3, -1), rnode(GOUT, 6, 61, 4) },
  { pnode(GPIO, 6, 61, ACLR, 3, -1), rnode(GOUT, 6, 61, 12) },
  { pnode(GPIO, 6, 61, SCLR, 3, -1), rnode(GOUT, 6, 61, 1) },
  { pnode(GPIO, 6, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 6, 61, 4) },
  { pnode(GPIO, 6, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 6, 61, 6) },
  { pnode(GPIO, 6, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 6, 61, 0) },
  { pnode(GPIO, 6, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 6, 61, 2) },
  { pnode(GPIO, 7, 0, DATAIN, 0, 0), rnode(GOUT, 7, 0, 44) },
  { pnode(GPIO, 7, 0, DATAIN, 0, 1), rnode(GOUT, 7, 0, 34) },
  { pnode(GPIO, 7, 0, DATAIN, 0, 2), rnode(GOUT, 7, 0, 43) },
  { pnode(GPIO, 7, 0, DATAIN, 0, 3), rnode(GOUT, 7, 0, 29) },
  { pnode(GPIO, 7, 0, DATAOUT, 0, 0), rnode(GIN, 7, 0, 18) },
  { pnode(GPIO, 7, 0, DATAOUT, 0, 1), rnode(GIN, 7, 0, 17) },
  { pnode(GPIO, 7, 0, DATAOUT, 0, 2), rnode(GIN, 7, 0, 16) },
  { pnode(GPIO, 7, 0, DATAOUT, 0, 3), rnode(GIN, 7, 0, 15) },
  { pnode(GPIO, 7, 0, DATAOUT, 0, 4), rnode(GIN, 7, 0, 14) },
  { pnode(GPIO, 7, 0, OEIN, 0, 0), rnode(GOUT, 7, 0, 38) },
  { pnode(GPIO, 7, 0, OEIN, 0, 1), rnode(GOUT, 7, 0, 30) },
  { pnode(GPIO, 7, 0, BSLIPMAX, 0, -1), rnode(GIN, 7, 0, 19) },
  { pnode(GPIO, 7, 0, CEIN, 0, -1), rnode(GOUT, 7, 0, 27) },
  { pnode(GPIO, 7, 0, CEOUT, 0, -1), rnode(GOUT, 7, 0, 45) },
  { pnode(GPIO, 7, 0, ACLR, 0, -1), rnode(GOUT, 7, 0, 28) },
  { pnode(GPIO, 7, 0, SCLR, 0, -1), rnode(GOUT, 7, 0, 31) },
  { pnode(GPIO, 7, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 7, 0, 10) },
  { pnode(GPIO, 7, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 7, 0, 8) },
  { pnode(GPIO, 7, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 7, 0, 14) },
  { pnode(GPIO, 7, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 7, 0, 12) },
  { pnode(GPIO, 7, 0, DATAIN, 1, 0), rnode(GOUT, 7, 0, 49) },
  { pnode(GPIO, 7, 0, DATAIN, 1, 1), rnode(GOUT, 7, 0, 41) },
  { pnode(GPIO, 7, 0, DATAIN, 1, 2), rnode(GOUT, 7, 0, 48) },
  { pnode(GPIO, 7, 0, DATAIN, 1, 3), rnode(GOUT, 7, 0, 40) },
  { pnode(GPIO, 7, 0, DATAOUT, 1, 0), rnode(GIN, 7, 0, 24) },
  { pnode(GPIO, 7, 0, DATAOUT, 1, 1), rnode(GIN, 7, 0, 23) },
  { pnode(GPIO, 7, 0, DATAOUT, 1, 2), rnode(GIN, 7, 0, 22) },
  { pnode(GPIO, 7, 0, DATAOUT, 1, 3), rnode(GIN, 7, 0, 21) },
  { pnode(GPIO, 7, 0, DATAOUT, 1, 4), rnode(GIN, 7, 0, 20) },
  { pnode(GPIO, 7, 0, OEIN, 1, 0), rnode(GOUT, 7, 0, 47) },
  { pnode(GPIO, 7, 0, OEIN, 1, 1), rnode(GOUT, 7, 0, 39) },
  { pnode(GPIO, 7, 0, BSLIPMAX, 1, -1), rnode(GIN, 7, 0, 25) },
  { pnode(GPIO, 7, 0, CEIN, 1, -1), rnode(GOUT, 7, 0, 51) },
  { pnode(GPIO, 7, 0, CEOUT, 1, -1), rnode(GOUT, 7, 0, 50) },
  { pnode(GPIO, 7, 0, ACLR, 1, -1), rnode(GOUT, 7, 0, 42) },
  { pnode(GPIO, 7, 0, SCLR, 1, -1), rnode(GOUT, 7, 0, 46) },
  { pnode(GPIO, 7, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 7, 0, 11) },
  { pnode(GPIO, 7, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 7, 0, 9) },
  { pnode(GPIO, 7, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 7, 0, 15) },
  { pnode(GPIO, 7, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 7, 0, 13) },
  { pnode(GPIO, 7, 0, DATAIN, 2, 0), rnode(GOUT, 7, 0, 14) },
  { pnode(GPIO, 7, 0, DATAIN, 2, 1), rnode(GOUT, 7, 0, 22) },
  { pnode(GPIO, 7, 0, DATAIN, 2, 2), rnode(GOUT, 7, 0, 15) },
  { pnode(GPIO, 7, 0, DATAIN, 2, 3), rnode(GOUT, 7, 0, 23) },
  { pnode(GPIO, 7, 0, DATAOUT, 2, 0), rnode(GIN, 7, 0, 8) },
  { pnode(GPIO, 7, 0, DATAOUT, 2, 1), rnode(GIN, 7, 0, 9) },
  { pnode(GPIO, 7, 0, DATAOUT, 2, 2), rnode(GIN, 7, 0, 10) },
  { pnode(GPIO, 7, 0, DATAOUT, 2, 3), rnode(GIN, 7, 0, 11) },
  { pnode(GPIO, 7, 0, DATAOUT, 2, 4), rnode(GIN, 7, 0, 12) },
  { pnode(GPIO, 7, 0, OEIN, 2, 0), rnode(GOUT, 7, 0, 16) },
  { pnode(GPIO, 7, 0, OEIN, 2, 1), rnode(GOUT, 7, 0, 24) },
  { pnode(GPIO, 7, 0, BSLIPMAX, 2, -1), rnode(GIN, 7, 0, 7) },
  { pnode(GPIO, 7, 0, CEIN, 2, -1), rnode(GOUT, 7, 0, 20) },
  { pnode(GPIO, 7, 0, CEOUT, 2, -1), rnode(GOUT, 7, 0, 13) },
  { pnode(GPIO, 7, 0, ACLR, 2, -1), rnode(GOUT, 7, 0, 21) },
  { pnode(GPIO, 7, 0, SCLR, 2, -1), rnode(GOUT, 7, 0, 25) },
  { pnode(GPIO, 7, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 7, 0, 5) },
  { pnode(GPIO, 7, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 7, 0, 7) },
  { pnode(GPIO, 7, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 7, 0, 1) },
  { pnode(GPIO, 7, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 7, 0, 3) },
  { pnode(GPIO, 7, 0, DATAIN, 3, 0), rnode(GOUT, 7, 0, 3) },
  { pnode(GPIO, 7, 0, DATAIN, 3, 1), rnode(GOUT, 7, 0, 17) },
  { pnode(GPIO, 7, 0, DATAIN, 3, 2), rnode(GOUT, 7, 0, 8) },
  { pnode(GPIO, 7, 0, DATAIN, 3, 3), rnode(GOUT, 7, 0, 18) },
  { pnode(GPIO, 7, 0, DATAOUT, 3, 0), rnode(GIN, 7, 0, 2) },
  { pnode(GPIO, 7, 0, DATAOUT, 3, 1), rnode(GIN, 7, 0, 3) },
  { pnode(GPIO, 7, 0, DATAOUT, 3, 2), rnode(GIN, 7, 0, 4) },
  { pnode(GPIO, 7, 0, DATAOUT, 3, 3), rnode(GIN, 7, 0, 5) },
  { pnode(GPIO, 7, 0, DATAOUT, 3, 4), rnode(GIN, 7, 0, 6) },
  { pnode(GPIO, 7, 0, OEIN, 3, 0), rnode(GOUT, 7, 0, 2) },
  { pnode(GPIO, 7, 0, OEIN, 3, 1), rnode(GOUT, 7, 0, 19) },
  { pnode(GPIO, 7, 0, BSLIPMAX, 3, -1), rnode(GIN, 7, 0, 1) },
  { pnode(GPIO, 7, 0, CEIN, 3, -1), rnode(GOUT, 7, 0, 5) },
  { pnode(GPIO, 7, 0, CEOUT, 3, -1), rnode(GOUT, 7, 0, 4) },
  { pnode(GPIO, 7, 0, ACLR, 3, -1), rnode(GOUT, 7, 0, 12) },
  { pnode(GPIO, 7, 0, SCLR, 3, -1), rnode(GOUT, 7, 0, 1) },
  { pnode(GPIO, 7, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 7, 0, 4) },
  { pnode(GPIO, 7, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 7, 0, 6) },
  { pnode(GPIO, 7, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 7, 0, 0) },
  { pnode(GPIO, 7, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 7, 0, 2) },
  { pnode(GPIO, 7, 61, DATAIN, 0, 0), rnode(GOUT, 7, 61, 44) },
  { pnode(GPIO, 7, 61, DATAIN, 0, 1), rnode(GOUT, 7, 61, 34) },
  { pnode(GPIO, 7, 61, DATAIN, 0, 2), rnode(GOUT, 7, 61, 43) },
  { pnode(GPIO, 7, 61, DATAIN, 0, 3), rnode(GOUT, 7, 61, 29) },
  { pnode(GPIO, 7, 61, DATAOUT, 0, 0), rnode(GIN, 7, 61, 18) },
  { pnode(GPIO, 7, 61, DATAOUT, 0, 1), rnode(GIN, 7, 61, 17) },
  { pnode(GPIO, 7, 61, DATAOUT, 0, 2), rnode(GIN, 7, 61, 16) },
  { pnode(GPIO, 7, 61, DATAOUT, 0, 3), rnode(GIN, 7, 61, 15) },
  { pnode(GPIO, 7, 61, DATAOUT, 0, 4), rnode(GIN, 7, 61, 14) },
  { pnode(GPIO, 7, 61, OEIN, 0, 0), rnode(GOUT, 7, 61, 38) },
  { pnode(GPIO, 7, 61, OEIN, 0, 1), rnode(GOUT, 7, 61, 30) },
  { pnode(GPIO, 7, 61, BSLIPMAX, 0, -1), rnode(GIN, 7, 61, 19) },
  { pnode(GPIO, 7, 61, CEIN, 0, -1), rnode(GOUT, 7, 61, 27) },
  { pnode(GPIO, 7, 61, CEOUT, 0, -1), rnode(GOUT, 7, 61, 45) },
  { pnode(GPIO, 7, 61, ACLR, 0, -1), rnode(GOUT, 7, 61, 28) },
  { pnode(GPIO, 7, 61, SCLR, 0, -1), rnode(GOUT, 7, 61, 31) },
  { pnode(GPIO, 7, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 7, 61, 10) },
  { pnode(GPIO, 7, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 7, 61, 8) },
  { pnode(GPIO, 7, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 7, 61, 14) },
  { pnode(GPIO, 7, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 7, 61, 12) },
  { pnode(GPIO, 7, 61, DATAIN, 1, 0), rnode(GOUT, 7, 61, 49) },
  { pnode(GPIO, 7, 61, DATAIN, 1, 1), rnode(GOUT, 7, 61, 41) },
  { pnode(GPIO, 7, 61, DATAIN, 1, 2), rnode(GOUT, 7, 61, 48) },
  { pnode(GPIO, 7, 61, DATAIN, 1, 3), rnode(GOUT, 7, 61, 40) },
  { pnode(GPIO, 7, 61, DATAOUT, 1, 0), rnode(GIN, 7, 61, 24) },
  { pnode(GPIO, 7, 61, DATAOUT, 1, 1), rnode(GIN, 7, 61, 23) },
  { pnode(GPIO, 7, 61, DATAOUT, 1, 2), rnode(GIN, 7, 61, 22) },
  { pnode(GPIO, 7, 61, DATAOUT, 1, 3), rnode(GIN, 7, 61, 21) },
  { pnode(GPIO, 7, 61, DATAOUT, 1, 4), rnode(GIN, 7, 61, 20) },
  { pnode(GPIO, 7, 61, OEIN, 1, 0), rnode(GOUT, 7, 61, 47) },
  { pnode(GPIO, 7, 61, OEIN, 1, 1), rnode(GOUT, 7, 61, 39) },
  { pnode(GPIO, 7, 61, BSLIPMAX, 1, -1), rnode(GIN, 7, 61, 25) },
  { pnode(GPIO, 7, 61, CEIN, 1, -1), rnode(GOUT, 7, 61, 51) },
  { pnode(GPIO, 7, 61, CEOUT, 1, -1), rnode(GOUT, 7, 61, 50) },
  { pnode(GPIO, 7, 61, ACLR, 1, -1), rnode(GOUT, 7, 61, 42) },
  { pnode(GPIO, 7, 61, SCLR, 1, -1), rnode(GOUT, 7, 61, 46) },
  { pnode(GPIO, 7, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 7, 61, 11) },
  { pnode(GPIO, 7, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 7, 61, 9) },
  { pnode(GPIO, 7, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 7, 61, 15) },
  { pnode(GPIO, 7, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 7, 61, 13) },
  { pnode(GPIO, 7, 61, DATAIN, 2, 0), rnode(GOUT, 7, 61, 14) },
  { pnode(GPIO, 7, 61, DATAIN, 2, 1), rnode(GOUT, 7, 61, 22) },
  { pnode(GPIO, 7, 61, DATAIN, 2, 2), rnode(GOUT, 7, 61, 15) },
  { pnode(GPIO, 7, 61, DATAIN, 2, 3), rnode(GOUT, 7, 61, 23) },
  { pnode(GPIO, 7, 61, DATAOUT, 2, 0), rnode(GIN, 7, 61, 8) },
  { pnode(GPIO, 7, 61, DATAOUT, 2, 1), rnode(GIN, 7, 61, 9) },
  { pnode(GPIO, 7, 61, DATAOUT, 2, 2), rnode(GIN, 7, 61, 10) },
  { pnode(GPIO, 7, 61, DATAOUT, 2, 3), rnode(GIN, 7, 61, 11) },
  { pnode(GPIO, 7, 61, DATAOUT, 2, 4), rnode(GIN, 7, 61, 12) },
  { pnode(GPIO, 7, 61, OEIN, 2, 0), rnode(GOUT, 7, 61, 16) },
  { pnode(GPIO, 7, 61, OEIN, 2, 1), rnode(GOUT, 7, 61, 24) },
  { pnode(GPIO, 7, 61, BSLIPMAX, 2, -1), rnode(GIN, 7, 61, 7) },
  { pnode(GPIO, 7, 61, CEIN, 2, -1), rnode(GOUT, 7, 61, 20) },
  { pnode(GPIO, 7, 61, CEOUT, 2, -1), rnode(GOUT, 7, 61, 13) },
  { pnode(GPIO, 7, 61, ACLR, 2, -1), rnode(GOUT, 7, 61, 21) },
  { pnode(GPIO, 7, 61, SCLR, 2, -1), rnode(GOUT, 7, 61, 25) },
  { pnode(GPIO, 7, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 7, 61, 5) },
  { pnode(GPIO, 7, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 7, 61, 7) },
  { pnode(GPIO, 7, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 7, 61, 1) },
  { pnode(GPIO, 7, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 7, 61, 3) },
  { pnode(GPIO, 7, 61, DATAIN, 3, 0), rnode(GOUT, 7, 61, 3) },
  { pnode(GPIO, 7, 61, DATAIN, 3, 1), rnode(GOUT, 7, 61, 17) },
  { pnode(GPIO, 7, 61, DATAIN, 3, 2), rnode(GOUT, 7, 61, 8) },
  { pnode(GPIO, 7, 61, DATAIN, 3, 3), rnode(GOUT, 7, 61, 18) },
  { pnode(GPIO, 7, 61, DATAOUT, 3, 0), rnode(GIN, 7, 61, 2) },
  { pnode(GPIO, 7, 61, DATAOUT, 3, 1), rnode(GIN, 7, 61, 3) },
  { pnode(GPIO, 7, 61, DATAOUT, 3, 2), rnode(GIN, 7, 61, 4) },
  { pnode(GPIO, 7, 61, DATAOUT, 3, 3), rnode(GIN, 7, 61, 5) },
  { pnode(GPIO, 7, 61, DATAOUT, 3, 4), rnode(GIN, 7, 61, 6) },
  { pnode(GPIO, 7, 61, OEIN, 3, 0), rnode(GOUT, 7, 61, 2) },
  { pnode(GPIO, 7, 61, OEIN, 3, 1), rnode(GOUT, 7, 61, 19) },
  { pnode(GPIO, 7, 61, BSLIPMAX, 3, -1), rnode(GIN, 7, 61, 1) },
  { pnode(GPIO, 7, 61, CEIN, 3, -1), rnode(GOUT, 7, 61, 5) },
  { pnode(GPIO, 7, 61, CEOUT, 3, -1), rnode(GOUT, 7, 61, 4) },
  { pnode(GPIO, 7, 61, ACLR, 3, -1), rnode(GOUT, 7, 61, 12) },
  { pnode(GPIO, 7, 61, SCLR, 3, -1), rnode(GOUT, 7, 61, 1) },
  { pnode(GPIO, 7, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 7, 61, 4) },
  { pnode(GPIO, 7, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 7, 61, 6) },
  { pnode(GPIO, 7, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 7, 61, 0) },
  { pnode(GPIO, 7, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 7, 61, 2) },
  { pnode(GPIO, 10, 0, DATAOUT, 0, 0), rnode(GIN, 10, 0, 18) },
  { pnode(GPIO, 10, 0, DATAOUT, 0, 1), rnode(GIN, 10, 0, 17) },
  { pnode(GPIO, 10, 0, DATAOUT, 0, 2), rnode(GIN, 10, 0, 16) },
  { pnode(GPIO, 10, 0, DATAOUT, 0, 3), rnode(GIN, 10, 0, 15) },
  { pnode(GPIO, 10, 0, DATAOUT, 0, 4), rnode(GIN, 10, 0, 14) },
  { pnode(GPIO, 10, 0, OEIN, 0, 0), rnode(GOUT, 10, 0, 38) },
  { pnode(GPIO, 10, 0, OEIN, 0, 1), rnode(GOUT, 10, 0, 30) },
  { pnode(GPIO, 10, 0, BSLIPMAX, 0, -1), rnode(GIN, 10, 0, 19) },
  { pnode(GPIO, 10, 0, CEIN, 0, -1), rnode(GOUT, 10, 0, 27) },
  { pnode(GPIO, 10, 0, CEOUT, 0, -1), rnode(GOUT, 10, 0, 45) },
  { pnode(GPIO, 10, 0, SCLR, 0, -1), rnode(GOUT, 10, 0, 31) },
  { pnode(GPIO, 10, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 10, 0, 10) },
  { pnode(GPIO, 10, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 10, 0, 8) },
  { pnode(GPIO, 10, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 10, 0, 14) },
  { pnode(GPIO, 10, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 10, 0, 12) },
  { pnode(GPIO, 10, 0, DATAOUT, 1, 0), rnode(GIN, 10, 0, 24) },
  { pnode(GPIO, 10, 0, DATAOUT, 1, 1), rnode(GIN, 10, 0, 23) },
  { pnode(GPIO, 10, 0, DATAOUT, 1, 2), rnode(GIN, 10, 0, 22) },
  { pnode(GPIO, 10, 0, DATAOUT, 1, 3), rnode(GIN, 10, 0, 21) },
  { pnode(GPIO, 10, 0, DATAOUT, 1, 4), rnode(GIN, 10, 0, 20) },
  { pnode(GPIO, 10, 0, OEIN, 1, 0), rnode(GOUT, 10, 0, 47) },
  { pnode(GPIO, 10, 0, OEIN, 1, 1), rnode(GOUT, 10, 0, 39) },
  { pnode(GPIO, 10, 0, BSLIPMAX, 1, -1), rnode(GIN, 10, 0, 25) },
  { pnode(GPIO, 10, 0, CEIN, 1, -1), rnode(GOUT, 10, 0, 51) },
  { pnode(GPIO, 10, 0, CEOUT, 1, -1), rnode(GOUT, 10, 0, 50) },
  { pnode(GPIO, 10, 0, SCLR, 1, -1), rnode(GOUT, 10, 0, 46) },
  { pnode(GPIO, 10, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 10, 0, 11) },
  { pnode(GPIO, 10, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 10, 0, 9) },
  { pnode(GPIO, 10, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 10, 0, 15) },
  { pnode(GPIO, 10, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 10, 0, 13) },
  { pnode(GPIO, 10, 0, DATAOUT, 2, 0), rnode(GIN, 10, 0, 8) },
  { pnode(GPIO, 10, 0, DATAOUT, 2, 1), rnode(GIN, 10, 0, 9) },
  { pnode(GPIO, 10, 0, DATAOUT, 2, 2), rnode(GIN, 10, 0, 10) },
  { pnode(GPIO, 10, 0, DATAOUT, 2, 3), rnode(GIN, 10, 0, 11) },
  { pnode(GPIO, 10, 0, DATAOUT, 2, 4), rnode(GIN, 10, 0, 12) },
  { pnode(GPIO, 10, 0, OEIN, 2, 0), rnode(GOUT, 10, 0, 16) },
  { pnode(GPIO, 10, 0, OEIN, 2, 1), rnode(GOUT, 10, 0, 24) },
  { pnode(GPIO, 10, 0, BSLIPMAX, 2, -1), rnode(GIN, 10, 0, 7) },
  { pnode(GPIO, 10, 0, CEIN, 2, -1), rnode(GOUT, 10, 0, 20) },
  { pnode(GPIO, 10, 0, CEOUT, 2, -1), rnode(GOUT, 10, 0, 13) },
  { pnode(GPIO, 10, 0, SCLR, 2, -1), rnode(GOUT, 10, 0, 25) },
  { pnode(GPIO, 10, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 10, 0, 5) },
  { pnode(GPIO, 10, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 10, 0, 7) },
  { pnode(GPIO, 10, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 10, 0, 1) },
  { pnode(GPIO, 10, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 10, 0, 3) },
  { pnode(GPIO, 10, 0, DATAIN, 3, 0), rnode(GOUT, 10, 0, 3) },
  { pnode(GPIO, 10, 0, DATAIN, 3, 1), rnode(GOUT, 10, 0, 17) },
  { pnode(GPIO, 10, 0, DATAIN, 3, 2), rnode(GOUT, 10, 0, 8) },
  { pnode(GPIO, 10, 0, DATAIN, 3, 3), rnode(GOUT, 10, 0, 18) },
  { pnode(GPIO, 10, 0, DATAOUT, 3, 0), rnode(GIN, 10, 0, 2) },
  { pnode(GPIO, 10, 0, DATAOUT, 3, 1), rnode(GIN, 10, 0, 3) },
  { pnode(GPIO, 10, 0, DATAOUT, 3, 2), rnode(GIN, 10, 0, 4) },
  { pnode(GPIO, 10, 0, DATAOUT, 3, 3), rnode(GIN, 10, 0, 5) },
  { pnode(GPIO, 10, 0, DATAOUT, 3, 4), rnode(GIN, 10, 0, 6) },
  { pnode(GPIO, 10, 0, OEIN, 3, 0), rnode(GOUT, 10, 0, 2) },
  { pnode(GPIO, 10, 0, OEIN, 3, 1), rnode(GOUT, 10, 0, 19) },
  { pnode(GPIO, 10, 0, BSLIPMAX, 3, -1), rnode(GIN, 10, 0, 1) },
  { pnode(GPIO, 10, 0, CEIN, 3, -1), rnode(GOUT, 10, 0, 5) },
  { pnode(GPIO, 10, 0, CEOUT, 3, -1), rnode(GOUT, 10, 0, 4) },
  { pnode(GPIO, 10, 0, ACLR, 3, -1), rnode(GOUT, 10, 0, 12) },
  { pnode(GPIO, 10, 0, SCLR, 3, -1), rnode(GOUT, 10, 0, 1) },
  { pnode(GPIO, 10, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 10, 0, 4) },
  { pnode(GPIO, 10, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 10, 0, 6) },
  { pnode(GPIO, 10, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 10, 0, 0) },
  { pnode(GPIO, 10, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 10, 0, 2) },
  { pnode(GPIO, 10, 61, DATAIN, 0, 0), rnode(GOUT, 10, 61, 44) },
  { pnode(GPIO, 10, 61, DATAIN, 0, 1), rnode(GOUT, 10, 61, 34) },
  { pnode(GPIO, 10, 61, DATAIN, 0, 2), rnode(GOUT, 10, 61, 43) },
  { pnode(GPIO, 10, 61, DATAIN, 0, 3), rnode(GOUT, 10, 61, 29) },
  { pnode(GPIO, 10, 61, DATAOUT, 0, 0), rnode(GIN, 10, 61, 18) },
  { pnode(GPIO, 10, 61, DATAOUT, 0, 1), rnode(GIN, 10, 61, 17) },
  { pnode(GPIO, 10, 61, DATAOUT, 0, 2), rnode(GIN, 10, 61, 16) },
  { pnode(GPIO, 10, 61, DATAOUT, 0, 3), rnode(GIN, 10, 61, 15) },
  { pnode(GPIO, 10, 61, DATAOUT, 0, 4), rnode(GIN, 10, 61, 14) },
  { pnode(GPIO, 10, 61, OEIN, 0, 0), rnode(GOUT, 10, 61, 38) },
  { pnode(GPIO, 10, 61, OEIN, 0, 1), rnode(GOUT, 10, 61, 30) },
  { pnode(GPIO, 10, 61, BSLIPMAX, 0, -1), rnode(GIN, 10, 61, 19) },
  { pnode(GPIO, 10, 61, CEIN, 0, -1), rnode(GOUT, 10, 61, 27) },
  { pnode(GPIO, 10, 61, CEOUT, 0, -1), rnode(GOUT, 10, 61, 45) },
  { pnode(GPIO, 10, 61, ACLR, 0, -1), rnode(GOUT, 10, 61, 28) },
  { pnode(GPIO, 10, 61, SCLR, 0, -1), rnode(GOUT, 10, 61, 31) },
  { pnode(GPIO, 10, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 10, 61, 10) },
  { pnode(GPIO, 10, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 10, 61, 8) },
  { pnode(GPIO, 10, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 10, 61, 14) },
  { pnode(GPIO, 10, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 10, 61, 12) },
  { pnode(GPIO, 10, 61, DATAIN, 1, 0), rnode(GOUT, 10, 61, 49) },
  { pnode(GPIO, 10, 61, DATAIN, 1, 1), rnode(GOUT, 10, 61, 41) },
  { pnode(GPIO, 10, 61, DATAIN, 1, 2), rnode(GOUT, 10, 61, 48) },
  { pnode(GPIO, 10, 61, DATAIN, 1, 3), rnode(GOUT, 10, 61, 40) },
  { pnode(GPIO, 10, 61, DATAOUT, 1, 0), rnode(GIN, 10, 61, 24) },
  { pnode(GPIO, 10, 61, DATAOUT, 1, 1), rnode(GIN, 10, 61, 23) },
  { pnode(GPIO, 10, 61, DATAOUT, 1, 2), rnode(GIN, 10, 61, 22) },
  { pnode(GPIO, 10, 61, DATAOUT, 1, 3), rnode(GIN, 10, 61, 21) },
  { pnode(GPIO, 10, 61, DATAOUT, 1, 4), rnode(GIN, 10, 61, 20) },
  { pnode(GPIO, 10, 61, OEIN, 1, 0), rnode(GOUT, 10, 61, 47) },
  { pnode(GPIO, 10, 61, OEIN, 1, 1), rnode(GOUT, 10, 61, 39) },
  { pnode(GPIO, 10, 61, BSLIPMAX, 1, -1), rnode(GIN, 10, 61, 25) },
  { pnode(GPIO, 10, 61, CEIN, 1, -1), rnode(GOUT, 10, 61, 51) },
  { pnode(GPIO, 10, 61, CEOUT, 1, -1), rnode(GOUT, 10, 61, 50) },
  { pnode(GPIO, 10, 61, ACLR, 1, -1), rnode(GOUT, 10, 61, 42) },
  { pnode(GPIO, 10, 61, SCLR, 1, -1), rnode(GOUT, 10, 61, 46) },
  { pnode(GPIO, 10, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 10, 61, 11) },
  { pnode(GPIO, 10, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 10, 61, 9) },
  { pnode(GPIO, 10, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 10, 61, 15) },
  { pnode(GPIO, 10, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 10, 61, 13) },
  { pnode(GPIO, 10, 61, DATAIN, 2, 0), rnode(GOUT, 10, 61, 14) },
  { pnode(GPIO, 10, 61, DATAIN, 2, 1), rnode(GOUT, 10, 61, 22) },
  { pnode(GPIO, 10, 61, DATAIN, 2, 2), rnode(GOUT, 10, 61, 15) },
  { pnode(GPIO, 10, 61, DATAIN, 2, 3), rnode(GOUT, 10, 61, 23) },
  { pnode(GPIO, 10, 61, DATAOUT, 2, 0), rnode(GIN, 10, 61, 8) },
  { pnode(GPIO, 10, 61, DATAOUT, 2, 1), rnode(GIN, 10, 61, 9) },
  { pnode(GPIO, 10, 61, DATAOUT, 2, 2), rnode(GIN, 10, 61, 10) },
  { pnode(GPIO, 10, 61, DATAOUT, 2, 3), rnode(GIN, 10, 61, 11) },
  { pnode(GPIO, 10, 61, DATAOUT, 2, 4), rnode(GIN, 10, 61, 12) },
  { pnode(GPIO, 10, 61, OEIN, 2, 0), rnode(GOUT, 10, 61, 16) },
  { pnode(GPIO, 10, 61, OEIN, 2, 1), rnode(GOUT, 10, 61, 24) },
  { pnode(GPIO, 10, 61, BSLIPMAX, 2, -1), rnode(GIN, 10, 61, 7) },
  { pnode(GPIO, 10, 61, CEIN, 2, -1), rnode(GOUT, 10, 61, 20) },
  { pnode(GPIO, 10, 61, CEOUT, 2, -1), rnode(GOUT, 10, 61, 13) },
  { pnode(GPIO, 10, 61, ACLR, 2, -1), rnode(GOUT, 10, 61, 21) },
  { pnode(GPIO, 10, 61, SCLR, 2, -1), rnode(GOUT, 10, 61, 25) },
  { pnode(GPIO, 10, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 10, 61, 5) },
  { pnode(GPIO, 10, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 10, 61, 7) },
  { pnode(GPIO, 10, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 10, 61, 1) },
  { pnode(GPIO, 10, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 10, 61, 3) },
  { pnode(GPIO, 10, 61, DATAIN, 3, 0), rnode(GOUT, 10, 61, 3) },
  { pnode(GPIO, 10, 61, DATAIN, 3, 1), rnode(GOUT, 10, 61, 17) },
  { pnode(GPIO, 10, 61, DATAIN, 3, 2), rnode(GOUT, 10, 61, 8) },
  { pnode(GPIO, 10, 61, DATAIN, 3, 3), rnode(GOUT, 10, 61, 18) },
  { pnode(GPIO, 10, 61, DATAOUT, 3, 0), rnode(GIN, 10, 61, 2) },
  { pnode(GPIO, 10, 61, DATAOUT, 3, 1), rnode(GIN, 10, 61, 3) },
  { pnode(GPIO, 10, 61, DATAOUT, 3, 2), rnode(GIN, 10, 61, 4) },
  { pnode(GPIO, 10, 61, DATAOUT, 3, 3), rnode(GIN, 10, 61, 5) },
  { pnode(GPIO, 10, 61, DATAOUT, 3, 4), rnode(GIN, 10, 61, 6) },
  { pnode(GPIO, 10, 61, OEIN, 3, 0), rnode(GOUT, 10, 61, 2) },
  { pnode(GPIO, 10, 61, OEIN, 3, 1), rnode(GOUT, 10, 61, 19) },
  { pnode(GPIO, 10, 61, BSLIPMAX, 3, -1), rnode(GIN, 10, 61, 1) },
  { pnode(GPIO, 10, 61, CEIN, 3, -1), rnode(GOUT, 10, 61, 5) },
  { pnode(GPIO, 10, 61, CEOUT, 3, -1), rnode(GOUT, 10, 61, 4) },
  { pnode(GPIO, 10, 61, ACLR, 3, -1), rnode(GOUT, 10, 61, 12) },
  { pnode(GPIO, 10, 61, SCLR, 3, -1), rnode(GOUT, 10, 61, 1) },
  { pnode(GPIO, 10, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 10, 61, 4) },
  { pnode(GPIO, 10, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 10, 61, 6) },
  { pnode(GPIO, 10, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 10, 61, 0) },
  { pnode(GPIO, 10, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 10, 61, 2) },
  { pnode(GPIO, 12, 0, DATAOUT, 0, 0), rnode(GIN, 12, 0, 18) },
  { pnode(GPIO, 12, 0, DATAOUT, 0, 1), rnode(GIN, 12, 0, 17) },
  { pnode(GPIO, 12, 0, DATAOUT, 0, 2), rnode(GIN, 12, 0, 16) },
  { pnode(GPIO, 12, 0, DATAOUT, 0, 3), rnode(GIN, 12, 0, 15) },
  { pnode(GPIO, 12, 0, DATAOUT, 0, 4), rnode(GIN, 12, 0, 14) },
  { pnode(GPIO, 12, 0, OEIN, 0, 0), rnode(GOUT, 12, 0, 38) },
  { pnode(GPIO, 12, 0, OEIN, 0, 1), rnode(GOUT, 12, 0, 30) },
  { pnode(GPIO, 12, 0, BSLIPMAX, 0, -1), rnode(GIN, 12, 0, 19) },
  { pnode(GPIO, 12, 0, CEIN, 0, -1), rnode(GOUT, 12, 0, 27) },
  { pnode(GPIO, 12, 0, CEOUT, 0, -1), rnode(GOUT, 12, 0, 45) },
  { pnode(GPIO, 12, 0, SCLR, 0, -1), rnode(GOUT, 12, 0, 31) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 12, 0, 10) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 12, 0, 8) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 12, 0, 14) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 12, 0, 12) },
  { pnode(GPIO, 12, 0, DATAOUT, 1, 0), rnode(GIN, 12, 0, 24) },
  { pnode(GPIO, 12, 0, DATAOUT, 1, 1), rnode(GIN, 12, 0, 23) },
  { pnode(GPIO, 12, 0, DATAOUT, 1, 2), rnode(GIN, 12, 0, 22) },
  { pnode(GPIO, 12, 0, DATAOUT, 1, 3), rnode(GIN, 12, 0, 21) },
  { pnode(GPIO, 12, 0, DATAOUT, 1, 4), rnode(GIN, 12, 0, 20) },
  { pnode(GPIO, 12, 0, OEIN, 1, 0), rnode(GOUT, 12, 0, 47) },
  { pnode(GPIO, 12, 0, OEIN, 1, 1), rnode(GOUT, 12, 0, 39) },
  { pnode(GPIO, 12, 0, BSLIPMAX, 1, -1), rnode(GIN, 12, 0, 25) },
  { pnode(GPIO, 12, 0, CEIN, 1, -1), rnode(GOUT, 12, 0, 51) },
  { pnode(GPIO, 12, 0, CEOUT, 1, -1), rnode(GOUT, 12, 0, 50) },
  { pnode(GPIO, 12, 0, SCLR, 1, -1), rnode(GOUT, 12, 0, 46) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 12, 0, 11) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 12, 0, 9) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 12, 0, 15) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 12, 0, 13) },
  { pnode(GPIO, 12, 0, DATAOUT, 2, 0), rnode(GIN, 12, 0, 8) },
  { pnode(GPIO, 12, 0, DATAOUT, 2, 1), rnode(GIN, 12, 0, 9) },
  { pnode(GPIO, 12, 0, DATAOUT, 2, 2), rnode(GIN, 12, 0, 10) },
  { pnode(GPIO, 12, 0, DATAOUT, 2, 3), rnode(GIN, 12, 0, 11) },
  { pnode(GPIO, 12, 0, DATAOUT, 2, 4), rnode(GIN, 12, 0, 12) },
  { pnode(GPIO, 12, 0, OEIN, 2, 0), rnode(GOUT, 12, 0, 16) },
  { pnode(GPIO, 12, 0, OEIN, 2, 1), rnode(GOUT, 12, 0, 24) },
  { pnode(GPIO, 12, 0, BSLIPMAX, 2, -1), rnode(GIN, 12, 0, 7) },
  { pnode(GPIO, 12, 0, CEIN, 2, -1), rnode(GOUT, 12, 0, 20) },
  { pnode(GPIO, 12, 0, CEOUT, 2, -1), rnode(GOUT, 12, 0, 13) },
  { pnode(GPIO, 12, 0, SCLR, 2, -1), rnode(GOUT, 12, 0, 25) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 12, 0, 5) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 12, 0, 7) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 12, 0, 1) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 12, 0, 3) },
  { pnode(GPIO, 12, 0, DATAOUT, 3, 0), rnode(GIN, 12, 0, 2) },
  { pnode(GPIO, 12, 0, DATAOUT, 3, 1), rnode(GIN, 12, 0, 3) },
  { pnode(GPIO, 12, 0, DATAOUT, 3, 2), rnode(GIN, 12, 0, 4) },
  { pnode(GPIO, 12, 0, DATAOUT, 3, 3), rnode(GIN, 12, 0, 5) },
  { pnode(GPIO, 12, 0, DATAOUT, 3, 4), rnode(GIN, 12, 0, 6) },
  { pnode(GPIO, 12, 0, OEIN, 3, 0), rnode(GOUT, 12, 0, 2) },
  { pnode(GPIO, 12, 0, OEIN, 3, 1), rnode(GOUT, 12, 0, 19) },
  { pnode(GPIO, 12, 0, BSLIPMAX, 3, -1), rnode(GIN, 12, 0, 1) },
  { pnode(GPIO, 12, 0, CEIN, 3, -1), rnode(GOUT, 12, 0, 5) },
  { pnode(GPIO, 12, 0, CEOUT, 3, -1), rnode(GOUT, 12, 0, 4) },
  { pnode(GPIO, 12, 0, SCLR, 3, -1), rnode(GOUT, 12, 0, 1) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 12, 0, 4) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 12, 0, 6) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 12, 0, 0) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 12, 0, 2) },
  { pnode(GPIO, 12, 61, DATAIN, 0, 0), rnode(GOUT, 12, 61, 44) },
  { pnode(GPIO, 12, 61, DATAIN, 0, 1), rnode(GOUT, 12, 61, 34) },
  { pnode(GPIO, 12, 61, DATAIN, 0, 2), rnode(GOUT, 12, 61, 43) },
  { pnode(GPIO, 12, 61, DATAIN, 0, 3), rnode(GOUT, 12, 61, 29) },
  { pnode(GPIO, 12, 61, DATAOUT, 0, 0), rnode(GIN, 12, 61, 18) },
  { pnode(GPIO, 12, 61, DATAOUT, 0, 1), rnode(GIN, 12, 61, 17) },
  { pnode(GPIO, 12, 61, DATAOUT, 0, 2), rnode(GIN, 12, 61, 16) },
  { pnode(GPIO, 12, 61, DATAOUT, 0, 3), rnode(GIN, 12, 61, 15) },
  { pnode(GPIO, 12, 61, DATAOUT, 0, 4), rnode(GIN, 12, 61, 14) },
  { pnode(GPIO, 12, 61, OEIN, 0, 0), rnode(GOUT, 12, 61, 38) },
  { pnode(GPIO, 12, 61, OEIN, 0, 1), rnode(GOUT, 12, 61, 30) },
  { pnode(GPIO, 12, 61, BSLIPMAX, 0, -1), rnode(GIN, 12, 61, 19) },
  { pnode(GPIO, 12, 61, CEIN, 0, -1), rnode(GOUT, 12, 61, 27) },
  { pnode(GPIO, 12, 61, CEOUT, 0, -1), rnode(GOUT, 12, 61, 45) },
  { pnode(GPIO, 12, 61, ACLR, 0, -1), rnode(GOUT, 12, 61, 28) },
  { pnode(GPIO, 12, 61, SCLR, 0, -1), rnode(GOUT, 12, 61, 31) },
  { pnode(GPIO, 12, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 12, 61, 10) },
  { pnode(GPIO, 12, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 12, 61, 8) },
  { pnode(GPIO, 12, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 12, 61, 14) },
  { pnode(GPIO, 12, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 12, 61, 12) },
  { pnode(GPIO, 12, 61, DATAIN, 1, 0), rnode(GOUT, 12, 61, 49) },
  { pnode(GPIO, 12, 61, DATAIN, 1, 1), rnode(GOUT, 12, 61, 41) },
  { pnode(GPIO, 12, 61, DATAIN, 1, 2), rnode(GOUT, 12, 61, 48) },
  { pnode(GPIO, 12, 61, DATAIN, 1, 3), rnode(GOUT, 12, 61, 40) },
  { pnode(GPIO, 12, 61, DATAOUT, 1, 0), rnode(GIN, 12, 61, 24) },
  { pnode(GPIO, 12, 61, DATAOUT, 1, 1), rnode(GIN, 12, 61, 23) },
  { pnode(GPIO, 12, 61, DATAOUT, 1, 2), rnode(GIN, 12, 61, 22) },
  { pnode(GPIO, 12, 61, DATAOUT, 1, 3), rnode(GIN, 12, 61, 21) },
  { pnode(GPIO, 12, 61, DATAOUT, 1, 4), rnode(GIN, 12, 61, 20) },
  { pnode(GPIO, 12, 61, OEIN, 1, 0), rnode(GOUT, 12, 61, 47) },
  { pnode(GPIO, 12, 61, OEIN, 1, 1), rnode(GOUT, 12, 61, 39) },
  { pnode(GPIO, 12, 61, BSLIPMAX, 1, -1), rnode(GIN, 12, 61, 25) },
  { pnode(GPIO, 12, 61, CEIN, 1, -1), rnode(GOUT, 12, 61, 51) },
  { pnode(GPIO, 12, 61, CEOUT, 1, -1), rnode(GOUT, 12, 61, 50) },
  { pnode(GPIO, 12, 61, ACLR, 1, -1), rnode(GOUT, 12, 61, 42) },
  { pnode(GPIO, 12, 61, SCLR, 1, -1), rnode(GOUT, 12, 61, 46) },
  { pnode(GPIO, 12, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 12, 61, 11) },
  { pnode(GPIO, 12, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 12, 61, 9) },
  { pnode(GPIO, 12, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 12, 61, 15) },
  { pnode(GPIO, 12, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 12, 61, 13) },
  { pnode(GPIO, 12, 61, DATAIN, 2, 0), rnode(GOUT, 12, 61, 14) },
  { pnode(GPIO, 12, 61, DATAIN, 2, 1), rnode(GOUT, 12, 61, 22) },
  { pnode(GPIO, 12, 61, DATAIN, 2, 2), rnode(GOUT, 12, 61, 15) },
  { pnode(GPIO, 12, 61, DATAIN, 2, 3), rnode(GOUT, 12, 61, 23) },
  { pnode(GPIO, 12, 61, DATAOUT, 2, 0), rnode(GIN, 12, 61, 8) },
  { pnode(GPIO, 12, 61, DATAOUT, 2, 1), rnode(GIN, 12, 61, 9) },
  { pnode(GPIO, 12, 61, DATAOUT, 2, 2), rnode(GIN, 12, 61, 10) },
  { pnode(GPIO, 12, 61, DATAOUT, 2, 3), rnode(GIN, 12, 61, 11) },
  { pnode(GPIO, 12, 61, DATAOUT, 2, 4), rnode(GIN, 12, 61, 12) },
  { pnode(GPIO, 12, 61, OEIN, 2, 0), rnode(GOUT, 12, 61, 16) },
  { pnode(GPIO, 12, 61, OEIN, 2, 1), rnode(GOUT, 12, 61, 24) },
  { pnode(GPIO, 12, 61, BSLIPMAX, 2, -1), rnode(GIN, 12, 61, 7) },
  { pnode(GPIO, 12, 61, CEIN, 2, -1), rnode(GOUT, 12, 61, 20) },
  { pnode(GPIO, 12, 61, CEOUT, 2, -1), rnode(GOUT, 12, 61, 13) },
  { pnode(GPIO, 12, 61, ACLR, 2, -1), rnode(GOUT, 12, 61, 21) },
  { pnode(GPIO, 12, 61, SCLR, 2, -1), rnode(GOUT, 12, 61, 25) },
  { pnode(GPIO, 12, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 12, 61, 5) },
  { pnode(GPIO, 12, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 12, 61, 7) },
  { pnode(GPIO, 12, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 12, 61, 1) },
  { pnode(GPIO, 12, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 12, 61, 3) },
  { pnode(GPIO, 12, 61, DATAIN, 3, 0), rnode(GOUT, 12, 61, 3) },
  { pnode(GPIO, 12, 61, DATAIN, 3, 1), rnode(GOUT, 12, 61, 17) },
  { pnode(GPIO, 12, 61, DATAIN, 3, 2), rnode(GOUT, 12, 61, 8) },
  { pnode(GPIO, 12, 61, DATAIN, 3, 3), rnode(GOUT, 12, 61, 18) },
  { pnode(GPIO, 12, 61, DATAOUT, 3, 0), rnode(GIN, 12, 61, 2) },
  { pnode(GPIO, 12, 61, DATAOUT, 3, 1), rnode(GIN, 12, 61, 3) },
  { pnode(GPIO, 12, 61, DATAOUT, 3, 2), rnode(GIN, 12, 61, 4) },
  { pnode(GPIO, 12, 61, DATAOUT, 3, 3), rnode(GIN, 12, 61, 5) },
  { pnode(GPIO, 12, 61, DATAOUT, 3, 4), rnode(GIN, 12, 61, 6) },
  { pnode(GPIO, 12, 61, OEIN, 3, 0), rnode(GOUT, 12, 61, 2) },
  { pnode(GPIO, 12, 61, OEIN, 3, 1), rnode(GOUT, 12, 61, 19) },
  { pnode(GPIO, 12, 61, BSLIPMAX, 3, -1), rnode(GIN, 12, 61, 1) },
  { pnode(GPIO, 12, 61, CEIN, 3, -1), rnode(GOUT, 12, 61, 5) },
  { pnode(GPIO, 12, 61, CEOUT, 3, -1), rnode(GOUT, 12, 61, 4) },
  { pnode(GPIO, 12, 61, ACLR, 3, -1), rnode(GOUT, 12, 61, 12) },
  { pnode(GPIO, 12, 61, SCLR, 3, -1), rnode(GOUT, 12, 61, 1) },
  { pnode(GPIO, 12, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 12, 61, 4) },
  { pnode(GPIO, 12, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 12, 61, 6) },
  { pnode(GPIO, 12, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 12, 61, 0) },
  { pnode(GPIO, 12, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 12, 61, 2) },
  { pnode(GPIO, 14, 0, DATAOUT, 0, 0), rnode(GIN, 14, 0, 18) },
  { pnode(GPIO, 14, 0, DATAOUT, 0, 1), rnode(GIN, 14, 0, 17) },
  { pnode(GPIO, 14, 0, DATAOUT, 0, 2), rnode(GIN, 14, 0, 16) },
  { pnode(GPIO, 14, 0, DATAOUT, 0, 3), rnode(GIN, 14, 0, 15) },
  { pnode(GPIO, 14, 0, DATAOUT, 0, 4), rnode(GIN, 14, 0, 14) },
  { pnode(GPIO, 14, 0, OEIN, 0, 0), rnode(GOUT, 14, 0, 38) },
  { pnode(GPIO, 14, 0, OEIN, 0, 1), rnode(GOUT, 14, 0, 30) },
  { pnode(GPIO, 14, 0, BSLIPMAX, 0, -1), rnode(GIN, 14, 0, 19) },
  { pnode(GPIO, 14, 0, CEIN, 0, -1), rnode(GOUT, 14, 0, 27) },
  { pnode(GPIO, 14, 0, CEOUT, 0, -1), rnode(GOUT, 14, 0, 45) },
  { pnode(GPIO, 14, 0, SCLR, 0, -1), rnode(GOUT, 14, 0, 31) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 14, 0, 10) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 14, 0, 8) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 14, 0, 14) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 14, 0, 12) },
  { pnode(GPIO, 14, 0, DATAOUT, 1, 0), rnode(GIN, 14, 0, 24) },
  { pnode(GPIO, 14, 0, DATAOUT, 1, 1), rnode(GIN, 14, 0, 23) },
  { pnode(GPIO, 14, 0, DATAOUT, 1, 2), rnode(GIN, 14, 0, 22) },
  { pnode(GPIO, 14, 0, DATAOUT, 1, 3), rnode(GIN, 14, 0, 21) },
  { pnode(GPIO, 14, 0, DATAOUT, 1, 4), rnode(GIN, 14, 0, 20) },
  { pnode(GPIO, 14, 0, OEIN, 1, 0), rnode(GOUT, 14, 0, 47) },
  { pnode(GPIO, 14, 0, OEIN, 1, 1), rnode(GOUT, 14, 0, 39) },
  { pnode(GPIO, 14, 0, BSLIPMAX, 1, -1), rnode(GIN, 14, 0, 25) },
  { pnode(GPIO, 14, 0, CEIN, 1, -1), rnode(GOUT, 14, 0, 51) },
  { pnode(GPIO, 14, 0, CEOUT, 1, -1), rnode(GOUT, 14, 0, 50) },
  { pnode(GPIO, 14, 0, SCLR, 1, -1), rnode(GOUT, 14, 0, 46) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 14, 0, 11) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 14, 0, 9) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 14, 0, 15) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 14, 0, 13) },
  { pnode(GPIO, 14, 0, DATAOUT, 2, 0), rnode(GIN, 14, 0, 8) },
  { pnode(GPIO, 14, 0, DATAOUT, 2, 1), rnode(GIN, 14, 0, 9) },
  { pnode(GPIO, 14, 0, DATAOUT, 2, 2), rnode(GIN, 14, 0, 10) },
  { pnode(GPIO, 14, 0, DATAOUT, 2, 3), rnode(GIN, 14, 0, 11) },
  { pnode(GPIO, 14, 0, DATAOUT, 2, 4), rnode(GIN, 14, 0, 12) },
  { pnode(GPIO, 14, 0, OEIN, 2, 0), rnode(GOUT, 14, 0, 16) },
  { pnode(GPIO, 14, 0, OEIN, 2, 1), rnode(GOUT, 14, 0, 24) },
  { pnode(GPIO, 14, 0, BSLIPMAX, 2, -1), rnode(GIN, 14, 0, 7) },
  { pnode(GPIO, 14, 0, CEIN, 2, -1), rnode(GOUT, 14, 0, 20) },
  { pnode(GPIO, 14, 0, CEOUT, 2, -1), rnode(GOUT, 14, 0, 13) },
  { pnode(GPIO, 14, 0, SCLR, 2, -1), rnode(GOUT, 14, 0, 25) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 14, 0, 5) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 14, 0, 7) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 14, 0, 1) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 14, 0, 3) },
  { pnode(GPIO, 14, 0, DATAOUT, 3, 0), rnode(GIN, 14, 0, 2) },
  { pnode(GPIO, 14, 0, DATAOUT, 3, 1), rnode(GIN, 14, 0, 3) },
  { pnode(GPIO, 14, 0, DATAOUT, 3, 2), rnode(GIN, 14, 0, 4) },
  { pnode(GPIO, 14, 0, DATAOUT, 3, 3), rnode(GIN, 14, 0, 5) },
  { pnode(GPIO, 14, 0, DATAOUT, 3, 4), rnode(GIN, 14, 0, 6) },
  { pnode(GPIO, 14, 0, OEIN, 3, 0), rnode(GOUT, 14, 0, 2) },
  { pnode(GPIO, 14, 0, OEIN, 3, 1), rnode(GOUT, 14, 0, 19) },
  { pnode(GPIO, 14, 0, BSLIPMAX, 3, -1), rnode(GIN, 14, 0, 1) },
  { pnode(GPIO, 14, 0, CEIN, 3, -1), rnode(GOUT, 14, 0, 5) },
  { pnode(GPIO, 14, 0, CEOUT, 3, -1), rnode(GOUT, 14, 0, 4) },
  { pnode(GPIO, 14, 0, SCLR, 3, -1), rnode(GOUT, 14, 0, 1) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 14, 0, 4) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 14, 0, 6) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 14, 0, 0) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 14, 0, 2) },
  { pnode(GPIO, 14, 61, DATAIN, 0, 0), rnode(GOUT, 14, 61, 44) },
  { pnode(GPIO, 14, 61, DATAIN, 0, 1), rnode(GOUT, 14, 61, 34) },
  { pnode(GPIO, 14, 61, DATAIN, 0, 2), rnode(GOUT, 14, 61, 43) },
  { pnode(GPIO, 14, 61, DATAIN, 0, 3), rnode(GOUT, 14, 61, 29) },
  { pnode(GPIO, 14, 61, DATAOUT, 0, 0), rnode(GIN, 14, 61, 18) },
  { pnode(GPIO, 14, 61, DATAOUT, 0, 1), rnode(GIN, 14, 61, 17) },
  { pnode(GPIO, 14, 61, DATAOUT, 0, 2), rnode(GIN, 14, 61, 16) },
  { pnode(GPIO, 14, 61, DATAOUT, 0, 3), rnode(GIN, 14, 61, 15) },
  { pnode(GPIO, 14, 61, DATAOUT, 0, 4), rnode(GIN, 14, 61, 14) },
  { pnode(GPIO, 14, 61, OEIN, 0, 0), rnode(GOUT, 14, 61, 38) },
  { pnode(GPIO, 14, 61, OEIN, 0, 1), rnode(GOUT, 14, 61, 30) },
  { pnode(GPIO, 14, 61, BSLIPMAX, 0, -1), rnode(GIN, 14, 61, 19) },
  { pnode(GPIO, 14, 61, CEIN, 0, -1), rnode(GOUT, 14, 61, 27) },
  { pnode(GPIO, 14, 61, CEOUT, 0, -1), rnode(GOUT, 14, 61, 45) },
  { pnode(GPIO, 14, 61, ACLR, 0, -1), rnode(GOUT, 14, 61, 28) },
  { pnode(GPIO, 14, 61, SCLR, 0, -1), rnode(GOUT, 14, 61, 31) },
  { pnode(GPIO, 14, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 14, 61, 10) },
  { pnode(GPIO, 14, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 14, 61, 8) },
  { pnode(GPIO, 14, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 14, 61, 14) },
  { pnode(GPIO, 14, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 14, 61, 12) },
  { pnode(GPIO, 14, 61, DATAIN, 1, 0), rnode(GOUT, 14, 61, 49) },
  { pnode(GPIO, 14, 61, DATAIN, 1, 1), rnode(GOUT, 14, 61, 41) },
  { pnode(GPIO, 14, 61, DATAIN, 1, 2), rnode(GOUT, 14, 61, 48) },
  { pnode(GPIO, 14, 61, DATAIN, 1, 3), rnode(GOUT, 14, 61, 40) },
  { pnode(GPIO, 14, 61, DATAOUT, 1, 0), rnode(GIN, 14, 61, 24) },
  { pnode(GPIO, 14, 61, DATAOUT, 1, 1), rnode(GIN, 14, 61, 23) },
  { pnode(GPIO, 14, 61, DATAOUT, 1, 2), rnode(GIN, 14, 61, 22) },
  { pnode(GPIO, 14, 61, DATAOUT, 1, 3), rnode(GIN, 14, 61, 21) },
  { pnode(GPIO, 14, 61, DATAOUT, 1, 4), rnode(GIN, 14, 61, 20) },
  { pnode(GPIO, 14, 61, OEIN, 1, 0), rnode(GOUT, 14, 61, 47) },
  { pnode(GPIO, 14, 61, OEIN, 1, 1), rnode(GOUT, 14, 61, 39) },
  { pnode(GPIO, 14, 61, BSLIPMAX, 1, -1), rnode(GIN, 14, 61, 25) },
  { pnode(GPIO, 14, 61, CEIN, 1, -1), rnode(GOUT, 14, 61, 51) },
  { pnode(GPIO, 14, 61, CEOUT, 1, -1), rnode(GOUT, 14, 61, 50) },
  { pnode(GPIO, 14, 61, ACLR, 1, -1), rnode(GOUT, 14, 61, 42) },
  { pnode(GPIO, 14, 61, SCLR, 1, -1), rnode(GOUT, 14, 61, 46) },
  { pnode(GPIO, 14, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 14, 61, 11) },
  { pnode(GPIO, 14, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 14, 61, 9) },
  { pnode(GPIO, 14, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 14, 61, 15) },
  { pnode(GPIO, 14, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 14, 61, 13) },
  { pnode(GPIO, 14, 61, DATAIN, 2, 0), rnode(GOUT, 14, 61, 14) },
  { pnode(GPIO, 14, 61, DATAIN, 2, 1), rnode(GOUT, 14, 61, 22) },
  { pnode(GPIO, 14, 61, DATAIN, 2, 2), rnode(GOUT, 14, 61, 15) },
  { pnode(GPIO, 14, 61, DATAIN, 2, 3), rnode(GOUT, 14, 61, 23) },
  { pnode(GPIO, 14, 61, DATAOUT, 2, 0), rnode(GIN, 14, 61, 8) },
  { pnode(GPIO, 14, 61, DATAOUT, 2, 1), rnode(GIN, 14, 61, 9) },
  { pnode(GPIO, 14, 61, DATAOUT, 2, 2), rnode(GIN, 14, 61, 10) },
  { pnode(GPIO, 14, 61, DATAOUT, 2, 3), rnode(GIN, 14, 61, 11) },
  { pnode(GPIO, 14, 61, DATAOUT, 2, 4), rnode(GIN, 14, 61, 12) },
  { pnode(GPIO, 14, 61, OEIN, 2, 0), rnode(GOUT, 14, 61, 16) },
  { pnode(GPIO, 14, 61, OEIN, 2, 1), rnode(GOUT, 14, 61, 24) },
  { pnode(GPIO, 14, 61, BSLIPMAX, 2, -1), rnode(GIN, 14, 61, 7) },
  { pnode(GPIO, 14, 61, CEIN, 2, -1), rnode(GOUT, 14, 61, 20) },
  { pnode(GPIO, 14, 61, CEOUT, 2, -1), rnode(GOUT, 14, 61, 13) },
  { pnode(GPIO, 14, 61, ACLR, 2, -1), rnode(GOUT, 14, 61, 21) },
  { pnode(GPIO, 14, 61, SCLR, 2, -1), rnode(GOUT, 14, 61, 25) },
  { pnode(GPIO, 14, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 14, 61, 5) },
  { pnode(GPIO, 14, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 14, 61, 7) },
  { pnode(GPIO, 14, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 14, 61, 1) },
  { pnode(GPIO, 14, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 14, 61, 3) },
  { pnode(GPIO, 14, 61, DATAIN, 3, 0), rnode(GOUT, 14, 61, 3) },
  { pnode(GPIO, 14, 61, DATAIN, 3, 1), rnode(GOUT, 14, 61, 17) },
  { pnode(GPIO, 14, 61, DATAIN, 3, 2), rnode(GOUT, 14, 61, 8) },
  { pnode(GPIO, 14, 61, DATAIN, 3, 3), rnode(GOUT, 14, 61, 18) },
  { pnode(GPIO, 14, 61, DATAOUT, 3, 0), rnode(GIN, 14, 61, 2) },
  { pnode(GPIO, 14, 61, DATAOUT, 3, 1), rnode(GIN, 14, 61, 3) },
  { pnode(GPIO, 14, 61, DATAOUT, 3, 2), rnode(GIN, 14, 61, 4) },
  { pnode(GPIO, 14, 61, DATAOUT, 3, 3), rnode(GIN, 14, 61, 5) },
  { pnode(GPIO, 14, 61, DATAOUT, 3, 4), rnode(GIN, 14, 61, 6) },
  { pnode(GPIO, 14, 61, OEIN, 3, 0), rnode(GOUT, 14, 61, 2) },
  { pnode(GPIO, 14, 61, OEIN, 3, 1), rnode(GOUT, 14, 61, 19) },
  { pnode(GPIO, 14, 61, BSLIPMAX, 3, -1), rnode(GIN, 14, 61, 1) },
  { pnode(GPIO, 14, 61, CEIN, 3, -1), rnode(GOUT, 14, 61, 5) },
  { pnode(GPIO, 14, 61, CEOUT, 3, -1), rnode(GOUT, 14, 61, 4) },
  { pnode(GPIO, 14, 61, ACLR, 3, -1), rnode(GOUT, 14, 61, 12) },
  { pnode(GPIO, 14, 61, SCLR, 3, -1), rnode(GOUT, 14, 61, 1) },
  { pnode(GPIO, 14, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 14, 61, 4) },
  { pnode(GPIO, 14, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 14, 61, 6) },
  { pnode(GPIO, 14, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 14, 61, 0) },
  { pnode(GPIO, 14, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 14, 61, 2) },
  { pnode(GPIO, 15, 0, DATAIN, 0, 0), rnode(GOUT, 15, 0, 44) },
  { pnode(GPIO, 15, 0, DATAIN, 0, 1), rnode(GOUT, 15, 0, 34) },
  { pnode(GPIO, 15, 0, DATAIN, 0, 2), rnode(GOUT, 15, 0, 43) },
  { pnode(GPIO, 15, 0, DATAIN, 0, 3), rnode(GOUT, 15, 0, 29) },
  { pnode(GPIO, 15, 0, DATAOUT, 0, 0), rnode(GIN, 15, 0, 18) },
  { pnode(GPIO, 15, 0, DATAOUT, 0, 1), rnode(GIN, 15, 0, 17) },
  { pnode(GPIO, 15, 0, DATAOUT, 0, 2), rnode(GIN, 15, 0, 16) },
  { pnode(GPIO, 15, 0, DATAOUT, 0, 3), rnode(GIN, 15, 0, 15) },
  { pnode(GPIO, 15, 0, DATAOUT, 0, 4), rnode(GIN, 15, 0, 14) },
  { pnode(GPIO, 15, 0, OEIN, 0, 0), rnode(GOUT, 15, 0, 38) },
  { pnode(GPIO, 15, 0, OEIN, 0, 1), rnode(GOUT, 15, 0, 30) },
  { pnode(GPIO, 15, 0, BSLIPMAX, 0, -1), rnode(GIN, 15, 0, 19) },
  { pnode(GPIO, 15, 0, CEIN, 0, -1), rnode(GOUT, 15, 0, 27) },
  { pnode(GPIO, 15, 0, CEOUT, 0, -1), rnode(GOUT, 15, 0, 45) },
  { pnode(GPIO, 15, 0, ACLR, 0, -1), rnode(GOUT, 15, 0, 28) },
  { pnode(GPIO, 15, 0, SCLR, 0, -1), rnode(GOUT, 15, 0, 31) },
  { pnode(GPIO, 15, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 15, 0, 10) },
  { pnode(GPIO, 15, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 15, 0, 8) },
  { pnode(GPIO, 15, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 15, 0, 14) },
  { pnode(GPIO, 15, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 15, 0, 12) },
  { pnode(GPIO, 15, 0, DATAIN, 1, 0), rnode(GOUT, 15, 0, 49) },
  { pnode(GPIO, 15, 0, DATAIN, 1, 1), rnode(GOUT, 15, 0, 41) },
  { pnode(GPIO, 15, 0, DATAIN, 1, 2), rnode(GOUT, 15, 0, 48) },
  { pnode(GPIO, 15, 0, DATAIN, 1, 3), rnode(GOUT, 15, 0, 40) },
  { pnode(GPIO, 15, 0, DATAOUT, 1, 0), rnode(GIN, 15, 0, 24) },
  { pnode(GPIO, 15, 0, DATAOUT, 1, 1), rnode(GIN, 15, 0, 23) },
  { pnode(GPIO, 15, 0, DATAOUT, 1, 2), rnode(GIN, 15, 0, 22) },
  { pnode(GPIO, 15, 0, DATAOUT, 1, 3), rnode(GIN, 15, 0, 21) },
  { pnode(GPIO, 15, 0, DATAOUT, 1, 4), rnode(GIN, 15, 0, 20) },
  { pnode(GPIO, 15, 0, OEIN, 1, 0), rnode(GOUT, 15, 0, 47) },
  { pnode(GPIO, 15, 0, OEIN, 1, 1), rnode(GOUT, 15, 0, 39) },
  { pnode(GPIO, 15, 0, BSLIPMAX, 1, -1), rnode(GIN, 15, 0, 25) },
  { pnode(GPIO, 15, 0, CEIN, 1, -1), rnode(GOUT, 15, 0, 51) },
  { pnode(GPIO, 15, 0, CEOUT, 1, -1), rnode(GOUT, 15, 0, 50) },
  { pnode(GPIO, 15, 0, ACLR, 1, -1), rnode(GOUT, 15, 0, 42) },
  { pnode(GPIO, 15, 0, SCLR, 1, -1), rnode(GOUT, 15, 0, 46) },
  { pnode(GPIO, 15, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 15, 0, 11) },
  { pnode(GPIO, 15, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 15, 0, 9) },
  { pnode(GPIO, 15, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 15, 0, 15) },
  { pnode(GPIO, 15, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 15, 0, 13) },
  { pnode(GPIO, 15, 0, DATAOUT, 2, 0), rnode(GIN, 15, 0, 8) },
  { pnode(GPIO, 15, 0, DATAOUT, 2, 1), rnode(GIN, 15, 0, 9) },
  { pnode(GPIO, 15, 0, DATAOUT, 2, 2), rnode(GIN, 15, 0, 10) },
  { pnode(GPIO, 15, 0, DATAOUT, 2, 3), rnode(GIN, 15, 0, 11) },
  { pnode(GPIO, 15, 0, DATAOUT, 2, 4), rnode(GIN, 15, 0, 12) },
  { pnode(GPIO, 15, 0, OEIN, 2, 0), rnode(GOUT, 15, 0, 16) },
  { pnode(GPIO, 15, 0, OEIN, 2, 1), rnode(GOUT, 15, 0, 24) },
  { pnode(GPIO, 15, 0, BSLIPMAX, 2, -1), rnode(GIN, 15, 0, 7) },
  { pnode(GPIO, 15, 0, CEIN, 2, -1), rnode(GOUT, 15, 0, 20) },
  { pnode(GPIO, 15, 0, CEOUT, 2, -1), rnode(GOUT, 15, 0, 13) },
  { pnode(GPIO, 15, 0, SCLR, 2, -1), rnode(GOUT, 15, 0, 25) },
  { pnode(GPIO, 15, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 15, 0, 5) },
  { pnode(GPIO, 15, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 15, 0, 7) },
  { pnode(GPIO, 15, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 15, 0, 1) },
  { pnode(GPIO, 15, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 15, 0, 3) },
  { pnode(GPIO, 15, 0, DATAOUT, 3, 0), rnode(GIN, 15, 0, 2) },
  { pnode(GPIO, 15, 0, DATAOUT, 3, 1), rnode(GIN, 15, 0, 3) },
  { pnode(GPIO, 15, 0, DATAOUT, 3, 2), rnode(GIN, 15, 0, 4) },
  { pnode(GPIO, 15, 0, DATAOUT, 3, 3), rnode(GIN, 15, 0, 5) },
  { pnode(GPIO, 15, 0, DATAOUT, 3, 4), rnode(GIN, 15, 0, 6) },
  { pnode(GPIO, 15, 0, OEIN, 3, 0), rnode(GOUT, 15, 0, 2) },
  { pnode(GPIO, 15, 0, OEIN, 3, 1), rnode(GOUT, 15, 0, 19) },
  { pnode(GPIO, 15, 0, BSLIPMAX, 3, -1), rnode(GIN, 15, 0, 1) },
  { pnode(GPIO, 15, 0, CEIN, 3, -1), rnode(GOUT, 15, 0, 5) },
  { pnode(GPIO, 15, 0, CEOUT, 3, -1), rnode(GOUT, 15, 0, 4) },
  { pnode(GPIO, 15, 0, SCLR, 3, -1), rnode(GOUT, 15, 0, 1) },
  { pnode(GPIO, 15, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 15, 0, 4) },
  { pnode(GPIO, 15, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 15, 0, 6) },
  { pnode(GPIO, 15, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 15, 0, 0) },
  { pnode(GPIO, 15, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 15, 0, 2) },
  { pnode(GPIO, 15, 61, DATAIN, 0, 0), rnode(GOUT, 15, 61, 44) },
  { pnode(GPIO, 15, 61, DATAIN, 0, 1), rnode(GOUT, 15, 61, 34) },
  { pnode(GPIO, 15, 61, DATAIN, 0, 2), rnode(GOUT, 15, 61, 43) },
  { pnode(GPIO, 15, 61, DATAIN, 0, 3), rnode(GOUT, 15, 61, 29) },
  { pnode(GPIO, 15, 61, DATAOUT, 0, 0), rnode(GIN, 15, 61, 18) },
  { pnode(GPIO, 15, 61, DATAOUT, 0, 1), rnode(GIN, 15, 61, 17) },
  { pnode(GPIO, 15, 61, DATAOUT, 0, 2), rnode(GIN, 15, 61, 16) },
  { pnode(GPIO, 15, 61, DATAOUT, 0, 3), rnode(GIN, 15, 61, 15) },
  { pnode(GPIO, 15, 61, DATAOUT, 0, 4), rnode(GIN, 15, 61, 14) },
  { pnode(GPIO, 15, 61, OEIN, 0, 0), rnode(GOUT, 15, 61, 38) },
  { pnode(GPIO, 15, 61, OEIN, 0, 1), rnode(GOUT, 15, 61, 30) },
  { pnode(GPIO, 15, 61, BSLIPMAX, 0, -1), rnode(GIN, 15, 61, 19) },
  { pnode(GPIO, 15, 61, CEIN, 0, -1), rnode(GOUT, 15, 61, 27) },
  { pnode(GPIO, 15, 61, CEOUT, 0, -1), rnode(GOUT, 15, 61, 45) },
  { pnode(GPIO, 15, 61, ACLR, 0, -1), rnode(GOUT, 15, 61, 28) },
  { pnode(GPIO, 15, 61, SCLR, 0, -1), rnode(GOUT, 15, 61, 31) },
  { pnode(GPIO, 15, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 15, 61, 10) },
  { pnode(GPIO, 15, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 15, 61, 8) },
  { pnode(GPIO, 15, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 15, 61, 14) },
  { pnode(GPIO, 15, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 15, 61, 12) },
  { pnode(GPIO, 15, 61, DATAIN, 1, 0), rnode(GOUT, 15, 61, 49) },
  { pnode(GPIO, 15, 61, DATAIN, 1, 1), rnode(GOUT, 15, 61, 41) },
  { pnode(GPIO, 15, 61, DATAIN, 1, 2), rnode(GOUT, 15, 61, 48) },
  { pnode(GPIO, 15, 61, DATAIN, 1, 3), rnode(GOUT, 15, 61, 40) },
  { pnode(GPIO, 15, 61, DATAOUT, 1, 0), rnode(GIN, 15, 61, 24) },
  { pnode(GPIO, 15, 61, DATAOUT, 1, 1), rnode(GIN, 15, 61, 23) },
  { pnode(GPIO, 15, 61, DATAOUT, 1, 2), rnode(GIN, 15, 61, 22) },
  { pnode(GPIO, 15, 61, DATAOUT, 1, 3), rnode(GIN, 15, 61, 21) },
  { pnode(GPIO, 15, 61, DATAOUT, 1, 4), rnode(GIN, 15, 61, 20) },
  { pnode(GPIO, 15, 61, OEIN, 1, 0), rnode(GOUT, 15, 61, 47) },
  { pnode(GPIO, 15, 61, OEIN, 1, 1), rnode(GOUT, 15, 61, 39) },
  { pnode(GPIO, 15, 61, BSLIPMAX, 1, -1), rnode(GIN, 15, 61, 25) },
  { pnode(GPIO, 15, 61, CEIN, 1, -1), rnode(GOUT, 15, 61, 51) },
  { pnode(GPIO, 15, 61, CEOUT, 1, -1), rnode(GOUT, 15, 61, 50) },
  { pnode(GPIO, 15, 61, ACLR, 1, -1), rnode(GOUT, 15, 61, 42) },
  { pnode(GPIO, 15, 61, SCLR, 1, -1), rnode(GOUT, 15, 61, 46) },
  { pnode(GPIO, 15, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 15, 61, 11) },
  { pnode(GPIO, 15, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 15, 61, 9) },
  { pnode(GPIO, 15, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 15, 61, 15) },
  { pnode(GPIO, 15, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 15, 61, 13) },
  { pnode(GPIO, 15, 61, DATAIN, 2, 0), rnode(GOUT, 15, 61, 14) },
  { pnode(GPIO, 15, 61, DATAIN, 2, 1), rnode(GOUT, 15, 61, 22) },
  { pnode(GPIO, 15, 61, DATAIN, 2, 2), rnode(GOUT, 15, 61, 15) },
  { pnode(GPIO, 15, 61, DATAIN, 2, 3), rnode(GOUT, 15, 61, 23) },
  { pnode(GPIO, 15, 61, DATAOUT, 2, 0), rnode(GIN, 15, 61, 8) },
  { pnode(GPIO, 15, 61, DATAOUT, 2, 1), rnode(GIN, 15, 61, 9) },
  { pnode(GPIO, 15, 61, DATAOUT, 2, 2), rnode(GIN, 15, 61, 10) },
  { pnode(GPIO, 15, 61, DATAOUT, 2, 3), rnode(GIN, 15, 61, 11) },
  { pnode(GPIO, 15, 61, DATAOUT, 2, 4), rnode(GIN, 15, 61, 12) },
  { pnode(GPIO, 15, 61, OEIN, 2, 0), rnode(GOUT, 15, 61, 16) },
  { pnode(GPIO, 15, 61, OEIN, 2, 1), rnode(GOUT, 15, 61, 24) },
  { pnode(GPIO, 15, 61, BSLIPMAX, 2, -1), rnode(GIN, 15, 61, 7) },
  { pnode(GPIO, 15, 61, CEIN, 2, -1), rnode(GOUT, 15, 61, 20) },
  { pnode(GPIO, 15, 61, CEOUT, 2, -1), rnode(GOUT, 15, 61, 13) },
  { pnode(GPIO, 15, 61, ACLR, 2, -1), rnode(GOUT, 15, 61, 21) },
  { pnode(GPIO, 15, 61, SCLR, 2, -1), rnode(GOUT, 15, 61, 25) },
  { pnode(GPIO, 15, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 15, 61, 5) },
  { pnode(GPIO, 15, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 15, 61, 7) },
  { pnode(GPIO, 15, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 15, 61, 1) },
  { pnode(GPIO, 15, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 15, 61, 3) },
  { pnode(GPIO, 15, 61, DATAIN, 3, 0), rnode(GOUT, 15, 61, 3) },
  { pnode(GPIO, 15, 61, DATAIN, 3, 1), rnode(GOUT, 15, 61, 17) },
  { pnode(GPIO, 15, 61, DATAIN, 3, 2), rnode(GOUT, 15, 61, 8) },
  { pnode(GPIO, 15, 61, DATAIN, 3, 3), rnode(GOUT, 15, 61, 18) },
  { pnode(GPIO, 15, 61, DATAOUT, 3, 0), rnode(GIN, 15, 61, 2) },
  { pnode(GPIO, 15, 61, DATAOUT, 3, 1), rnode(GIN, 15, 61, 3) },
  { pnode(GPIO, 15, 61, DATAOUT, 3, 2), rnode(GIN, 15, 61, 4) },
  { pnode(GPIO, 15, 61, DATAOUT, 3, 3), rnode(GIN, 15, 61, 5) },
  { pnode(GPIO, 15, 61, DATAOUT, 3, 4), rnode(GIN, 15, 61, 6) },
  { pnode(GPIO, 15, 61, OEIN, 3, 0), rnode(GOUT, 15, 61, 2) },
  { pnode(GPIO, 15, 61, OEIN, 3, 1), rnode(GOUT, 15, 61, 19) },
  { pnode(GPIO, 15, 61, BSLIPMAX, 3, -1), rnode(GIN, 15, 61, 1) },
  { pnode(GPIO, 15, 61, CEIN, 3, -1), rnode(GOUT, 15, 61, 5) },
  { pnode(GPIO, 15, 61, CEOUT, 3, -1), rnode(GOUT, 15, 61, 4) },
  { pnode(GPIO, 15, 61, ACLR, 3, -1), rnode(GOUT, 15, 61, 12) },
  { pnode(GPIO, 15, 61, SCLR, 3, -1), rnode(GOUT, 15, 61, 1) },
  { pnode(GPIO, 15, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 15, 61, 4) },
  { pnode(GPIO, 15, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 15, 61, 6) },
  { pnode(GPIO, 15, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 15, 61, 0) },
  { pnode(GPIO, 15, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 15, 61, 2) },
  { pnode(GPIO, 17, 0, DATAOUT, 0, 0), rnode(GIN, 17, 0, 18) },
  { pnode(GPIO, 17, 0, DATAOUT, 0, 1), rnode(GIN, 17, 0, 17) },
  { pnode(GPIO, 17, 0, DATAOUT, 0, 2), rnode(GIN, 17, 0, 16) },
  { pnode(GPIO, 17, 0, DATAOUT, 0, 3), rnode(GIN, 17, 0, 15) },
  { pnode(GPIO, 17, 0, DATAOUT, 0, 4), rnode(GIN, 17, 0, 14) },
  { pnode(GPIO, 17, 0, OEIN, 0, 0), rnode(GOUT, 17, 0, 38) },
  { pnode(GPIO, 17, 0, OEIN, 0, 1), rnode(GOUT, 17, 0, 30) },
  { pnode(GPIO, 17, 0, BSLIPMAX, 0, -1), rnode(GIN, 17, 0, 19) },
  { pnode(GPIO, 17, 0, CEIN, 0, -1), rnode(GOUT, 17, 0, 27) },
  { pnode(GPIO, 17, 0, CEOUT, 0, -1), rnode(GOUT, 17, 0, 45) },
  { pnode(GPIO, 17, 0, SCLR, 0, -1), rnode(GOUT, 17, 0, 31) },
  { pnode(GPIO, 17, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 17, 0, 10) },
  { pnode(GPIO, 17, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 17, 0, 8) },
  { pnode(GPIO, 17, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 17, 0, 14) },
  { pnode(GPIO, 17, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 17, 0, 12) },
  { pnode(GPIO, 17, 0, DATAOUT, 1, 0), rnode(GIN, 17, 0, 24) },
  { pnode(GPIO, 17, 0, DATAOUT, 1, 1), rnode(GIN, 17, 0, 23) },
  { pnode(GPIO, 17, 0, DATAOUT, 1, 2), rnode(GIN, 17, 0, 22) },
  { pnode(GPIO, 17, 0, DATAOUT, 1, 3), rnode(GIN, 17, 0, 21) },
  { pnode(GPIO, 17, 0, DATAOUT, 1, 4), rnode(GIN, 17, 0, 20) },
  { pnode(GPIO, 17, 0, OEIN, 1, 0), rnode(GOUT, 17, 0, 47) },
  { pnode(GPIO, 17, 0, OEIN, 1, 1), rnode(GOUT, 17, 0, 39) },
  { pnode(GPIO, 17, 0, BSLIPMAX, 1, -1), rnode(GIN, 17, 0, 25) },
  { pnode(GPIO, 17, 0, CEIN, 1, -1), rnode(GOUT, 17, 0, 51) },
  { pnode(GPIO, 17, 0, CEOUT, 1, -1), rnode(GOUT, 17, 0, 50) },
  { pnode(GPIO, 17, 0, SCLR, 1, -1), rnode(GOUT, 17, 0, 46) },
  { pnode(GPIO, 17, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 17, 0, 11) },
  { pnode(GPIO, 17, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 17, 0, 9) },
  { pnode(GPIO, 17, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 17, 0, 15) },
  { pnode(GPIO, 17, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 17, 0, 13) },
  { pnode(GPIO, 17, 0, DATAOUT, 2, 0), rnode(GIN, 17, 0, 8) },
  { pnode(GPIO, 17, 0, DATAOUT, 2, 1), rnode(GIN, 17, 0, 9) },
  { pnode(GPIO, 17, 0, DATAOUT, 2, 2), rnode(GIN, 17, 0, 10) },
  { pnode(GPIO, 17, 0, DATAOUT, 2, 3), rnode(GIN, 17, 0, 11) },
  { pnode(GPIO, 17, 0, DATAOUT, 2, 4), rnode(GIN, 17, 0, 12) },
  { pnode(GPIO, 17, 0, OEIN, 2, 0), rnode(GOUT, 17, 0, 16) },
  { pnode(GPIO, 17, 0, OEIN, 2, 1), rnode(GOUT, 17, 0, 24) },
  { pnode(GPIO, 17, 0, BSLIPMAX, 2, -1), rnode(GIN, 17, 0, 7) },
  { pnode(GPIO, 17, 0, CEIN, 2, -1), rnode(GOUT, 17, 0, 20) },
  { pnode(GPIO, 17, 0, CEOUT, 2, -1), rnode(GOUT, 17, 0, 13) },
  { pnode(GPIO, 17, 0, SCLR, 2, -1), rnode(GOUT, 17, 0, 25) },
  { pnode(GPIO, 17, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 17, 0, 5) },
  { pnode(GPIO, 17, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 17, 0, 7) },
  { pnode(GPIO, 17, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 17, 0, 1) },
  { pnode(GPIO, 17, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 17, 0, 3) },
  { pnode(GPIO, 17, 0, DATAIN, 3, 0), rnode(GOUT, 17, 0, 3) },
  { pnode(GPIO, 17, 0, DATAIN, 3, 1), rnode(GOUT, 17, 0, 17) },
  { pnode(GPIO, 17, 0, DATAIN, 3, 2), rnode(GOUT, 17, 0, 8) },
  { pnode(GPIO, 17, 0, DATAIN, 3, 3), rnode(GOUT, 17, 0, 18) },
  { pnode(GPIO, 17, 0, DATAOUT, 3, 0), rnode(GIN, 17, 0, 2) },
  { pnode(GPIO, 17, 0, DATAOUT, 3, 1), rnode(GIN, 17, 0, 3) },
  { pnode(GPIO, 17, 0, DATAOUT, 3, 2), rnode(GIN, 17, 0, 4) },
  { pnode(GPIO, 17, 0, DATAOUT, 3, 3), rnode(GIN, 17, 0, 5) },
  { pnode(GPIO, 17, 0, DATAOUT, 3, 4), rnode(GIN, 17, 0, 6) },
  { pnode(GPIO, 17, 0, OEIN, 3, 0), rnode(GOUT, 17, 0, 2) },
  { pnode(GPIO, 17, 0, OEIN, 3, 1), rnode(GOUT, 17, 0, 19) },
  { pnode(GPIO, 17, 0, BSLIPMAX, 3, -1), rnode(GIN, 17, 0, 1) },
  { pnode(GPIO, 17, 0, CEIN, 3, -1), rnode(GOUT, 17, 0, 5) },
  { pnode(GPIO, 17, 0, CEOUT, 3, -1), rnode(GOUT, 17, 0, 4) },
  { pnode(GPIO, 17, 0, ACLR, 3, -1), rnode(GOUT, 17, 0, 12) },
  { pnode(GPIO, 17, 0, SCLR, 3, -1), rnode(GOUT, 17, 0, 1) },
  { pnode(GPIO, 17, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 17, 0, 4) },
  { pnode(GPIO, 17, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 17, 0, 6) },
  { pnode(GPIO, 17, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 17, 0, 0) },
  { pnode(GPIO, 17, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 17, 0, 2) },
  { pnode(GPIO, 17, 61, DATAIN, 0, 0), rnode(GOUT, 17, 61, 44) },
  { pnode(GPIO, 17, 61, DATAIN, 0, 1), rnode(GOUT, 17, 61, 34) },
  { pnode(GPIO, 17, 61, DATAIN, 0, 2), rnode(GOUT, 17, 61, 43) },
  { pnode(GPIO, 17, 61, DATAIN, 0, 3), rnode(GOUT, 17, 61, 29) },
  { pnode(GPIO, 17, 61, DATAOUT, 0, 0), rnode(GIN, 17, 61, 18) },
  { pnode(GPIO, 17, 61, DATAOUT, 0, 1), rnode(GIN, 17, 61, 17) },
  { pnode(GPIO, 17, 61, DATAOUT, 0, 2), rnode(GIN, 17, 61, 16) },
  { pnode(GPIO, 17, 61, DATAOUT, 0, 3), rnode(GIN, 17, 61, 15) },
  { pnode(GPIO, 17, 61, DATAOUT, 0, 4), rnode(GIN, 17, 61, 14) },
  { pnode(GPIO, 17, 61, OEIN, 0, 0), rnode(GOUT, 17, 61, 38) },
  { pnode(GPIO, 17, 61, OEIN, 0, 1), rnode(GOUT, 17, 61, 30) },
  { pnode(GPIO, 17, 61, BSLIPMAX, 0, -1), rnode(GIN, 17, 61, 19) },
  { pnode(GPIO, 17, 61, CEIN, 0, -1), rnode(GOUT, 17, 61, 27) },
  { pnode(GPIO, 17, 61, CEOUT, 0, -1), rnode(GOUT, 17, 61, 45) },
  { pnode(GPIO, 17, 61, ACLR, 0, -1), rnode(GOUT, 17, 61, 28) },
  { pnode(GPIO, 17, 61, SCLR, 0, -1), rnode(GOUT, 17, 61, 31) },
  { pnode(GPIO, 17, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 17, 61, 10) },
  { pnode(GPIO, 17, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 17, 61, 8) },
  { pnode(GPIO, 17, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 17, 61, 14) },
  { pnode(GPIO, 17, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 17, 61, 12) },
  { pnode(GPIO, 17, 61, DATAIN, 1, 0), rnode(GOUT, 17, 61, 49) },
  { pnode(GPIO, 17, 61, DATAIN, 1, 1), rnode(GOUT, 17, 61, 41) },
  { pnode(GPIO, 17, 61, DATAIN, 1, 2), rnode(GOUT, 17, 61, 48) },
  { pnode(GPIO, 17, 61, DATAIN, 1, 3), rnode(GOUT, 17, 61, 40) },
  { pnode(GPIO, 17, 61, DATAOUT, 1, 0), rnode(GIN, 17, 61, 24) },
  { pnode(GPIO, 17, 61, DATAOUT, 1, 1), rnode(GIN, 17, 61, 23) },
  { pnode(GPIO, 17, 61, DATAOUT, 1, 2), rnode(GIN, 17, 61, 22) },
  { pnode(GPIO, 17, 61, DATAOUT, 1, 3), rnode(GIN, 17, 61, 21) },
  { pnode(GPIO, 17, 61, DATAOUT, 1, 4), rnode(GIN, 17, 61, 20) },
  { pnode(GPIO, 17, 61, OEIN, 1, 0), rnode(GOUT, 17, 61, 47) },
  { pnode(GPIO, 17, 61, OEIN, 1, 1), rnode(GOUT, 17, 61, 39) },
  { pnode(GPIO, 17, 61, BSLIPMAX, 1, -1), rnode(GIN, 17, 61, 25) },
  { pnode(GPIO, 17, 61, CEIN, 1, -1), rnode(GOUT, 17, 61, 51) },
  { pnode(GPIO, 17, 61, CEOUT, 1, -1), rnode(GOUT, 17, 61, 50) },
  { pnode(GPIO, 17, 61, ACLR, 1, -1), rnode(GOUT, 17, 61, 42) },
  { pnode(GPIO, 17, 61, SCLR, 1, -1), rnode(GOUT, 17, 61, 46) },
  { pnode(GPIO, 17, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 17, 61, 11) },
  { pnode(GPIO, 17, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 17, 61, 9) },
  { pnode(GPIO, 17, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 17, 61, 15) },
  { pnode(GPIO, 17, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 17, 61, 13) },
  { pnode(GPIO, 17, 61, DATAIN, 2, 0), rnode(GOUT, 17, 61, 14) },
  { pnode(GPIO, 17, 61, DATAIN, 2, 1), rnode(GOUT, 17, 61, 22) },
  { pnode(GPIO, 17, 61, DATAIN, 2, 2), rnode(GOUT, 17, 61, 15) },
  { pnode(GPIO, 17, 61, DATAIN, 2, 3), rnode(GOUT, 17, 61, 23) },
  { pnode(GPIO, 17, 61, DATAOUT, 2, 0), rnode(GIN, 17, 61, 8) },
  { pnode(GPIO, 17, 61, DATAOUT, 2, 1), rnode(GIN, 17, 61, 9) },
  { pnode(GPIO, 17, 61, DATAOUT, 2, 2), rnode(GIN, 17, 61, 10) },
  { pnode(GPIO, 17, 61, DATAOUT, 2, 3), rnode(GIN, 17, 61, 11) },
  { pnode(GPIO, 17, 61, DATAOUT, 2, 4), rnode(GIN, 17, 61, 12) },
  { pnode(GPIO, 17, 61, OEIN, 2, 0), rnode(GOUT, 17, 61, 16) },
  { pnode(GPIO, 17, 61, OEIN, 2, 1), rnode(GOUT, 17, 61, 24) },
  { pnode(GPIO, 17, 61, BSLIPMAX, 2, -1), rnode(GIN, 17, 61, 7) },
  { pnode(GPIO, 17, 61, CEIN, 2, -1), rnode(GOUT, 17, 61, 20) },
  { pnode(GPIO, 17, 61, CEOUT, 2, -1), rnode(GOUT, 17, 61, 13) },
  { pnode(GPIO, 17, 61, ACLR, 2, -1), rnode(GOUT, 17, 61, 21) },
  { pnode(GPIO, 17, 61, SCLR, 2, -1), rnode(GOUT, 17, 61, 25) },
  { pnode(GPIO, 17, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 17, 61, 5) },
  { pnode(GPIO, 17, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 17, 61, 7) },
  { pnode(GPIO, 17, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 17, 61, 1) },
  { pnode(GPIO, 17, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 17, 61, 3) },
  { pnode(GPIO, 17, 61, DATAIN, 3, 0), rnode(GOUT, 17, 61, 3) },
  { pnode(GPIO, 17, 61, DATAIN, 3, 1), rnode(GOUT, 17, 61, 17) },
  { pnode(GPIO, 17, 61, DATAIN, 3, 2), rnode(GOUT, 17, 61, 8) },
  { pnode(GPIO, 17, 61, DATAIN, 3, 3), rnode(GOUT, 17, 61, 18) },
  { pnode(GPIO, 17, 61, DATAOUT, 3, 0), rnode(GIN, 17, 61, 2) },
  { pnode(GPIO, 17, 61, DATAOUT, 3, 1), rnode(GIN, 17, 61, 3) },
  { pnode(GPIO, 17, 61, DATAOUT, 3, 2), rnode(GIN, 17, 61, 4) },
  { pnode(GPIO, 17, 61, DATAOUT, 3, 3), rnode(GIN, 17, 61, 5) },
  { pnode(GPIO, 17, 61, DATAOUT, 3, 4), rnode(GIN, 17, 61, 6) },
  { pnode(GPIO, 17, 61, OEIN, 3, 0), rnode(GOUT, 17, 61, 2) },
  { pnode(GPIO, 17, 61, OEIN, 3, 1), rnode(GOUT, 17, 61, 19) },
  { pnode(GPIO, 17, 61, BSLIPMAX, 3, -1), rnode(GIN, 17, 61, 1) },
  { pnode(GPIO, 17, 61, CEIN, 3, -1), rnode(GOUT, 17, 61, 5) },
  { pnode(GPIO, 17, 61, CEOUT, 3, -1), rnode(GOUT, 17, 61, 4) },
  { pnode(GPIO, 17, 61, ACLR, 3, -1), rnode(GOUT, 17, 61, 12) },
  { pnode(GPIO, 17, 61, SCLR, 3, -1), rnode(GOUT, 17, 61, 1) },
  { pnode(GPIO, 17, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 17, 61, 4) },
  { pnode(GPIO, 17, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 17, 61, 6) },
  { pnode(GPIO, 17, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 17, 61, 0) },
  { pnode(GPIO, 17, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 17, 61, 2) },
  { pnode(GPIO, 18, 0, DATAOUT, 0, 0), rnode(GIN, 18, 0, 18) },
  { pnode(GPIO, 18, 0, DATAOUT, 0, 1), rnode(GIN, 18, 0, 17) },
  { pnode(GPIO, 18, 0, DATAOUT, 0, 2), rnode(GIN, 18, 0, 16) },
  { pnode(GPIO, 18, 0, DATAOUT, 0, 3), rnode(GIN, 18, 0, 15) },
  { pnode(GPIO, 18, 0, DATAOUT, 0, 4), rnode(GIN, 18, 0, 14) },
  { pnode(GPIO, 18, 0, OEIN, 0, 0), rnode(GOUT, 18, 0, 38) },
  { pnode(GPIO, 18, 0, OEIN, 0, 1), rnode(GOUT, 18, 0, 30) },
  { pnode(GPIO, 18, 0, BSLIPMAX, 0, -1), rnode(GIN, 18, 0, 19) },
  { pnode(GPIO, 18, 0, CEIN, 0, -1), rnode(GOUT, 18, 0, 27) },
  { pnode(GPIO, 18, 0, CEOUT, 0, -1), rnode(GOUT, 18, 0, 45) },
  { pnode(GPIO, 18, 0, ACLR, 0, -1), rnode(GOUT, 18, 0, 28) },
  { pnode(GPIO, 18, 0, SCLR, 0, -1), rnode(GOUT, 18, 0, 31) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 18, 0, 10) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 18, 0, 8) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 18, 0, 14) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 18, 0, 12) },
  { pnode(GPIO, 18, 0, DATAOUT, 1, 0), rnode(GIN, 18, 0, 24) },
  { pnode(GPIO, 18, 0, DATAOUT, 1, 1), rnode(GIN, 18, 0, 23) },
  { pnode(GPIO, 18, 0, DATAOUT, 1, 2), rnode(GIN, 18, 0, 22) },
  { pnode(GPIO, 18, 0, DATAOUT, 1, 3), rnode(GIN, 18, 0, 21) },
  { pnode(GPIO, 18, 0, DATAOUT, 1, 4), rnode(GIN, 18, 0, 20) },
  { pnode(GPIO, 18, 0, OEIN, 1, 0), rnode(GOUT, 18, 0, 47) },
  { pnode(GPIO, 18, 0, OEIN, 1, 1), rnode(GOUT, 18, 0, 39) },
  { pnode(GPIO, 18, 0, BSLIPMAX, 1, -1), rnode(GIN, 18, 0, 25) },
  { pnode(GPIO, 18, 0, CEIN, 1, -1), rnode(GOUT, 18, 0, 51) },
  { pnode(GPIO, 18, 0, CEOUT, 1, -1), rnode(GOUT, 18, 0, 50) },
  { pnode(GPIO, 18, 0, ACLR, 1, -1), rnode(GOUT, 18, 0, 42) },
  { pnode(GPIO, 18, 0, SCLR, 1, -1), rnode(GOUT, 18, 0, 46) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 18, 0, 11) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 18, 0, 9) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 18, 0, 15) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 18, 0, 13) },
  { pnode(GPIO, 18, 0, DATAOUT, 2, 0), rnode(GIN, 18, 0, 8) },
  { pnode(GPIO, 18, 0, DATAOUT, 2, 1), rnode(GIN, 18, 0, 9) },
  { pnode(GPIO, 18, 0, DATAOUT, 2, 2), rnode(GIN, 18, 0, 10) },
  { pnode(GPIO, 18, 0, DATAOUT, 2, 3), rnode(GIN, 18, 0, 11) },
  { pnode(GPIO, 18, 0, DATAOUT, 2, 4), rnode(GIN, 18, 0, 12) },
  { pnode(GPIO, 18, 0, OEIN, 2, 0), rnode(GOUT, 18, 0, 16) },
  { pnode(GPIO, 18, 0, OEIN, 2, 1), rnode(GOUT, 18, 0, 24) },
  { pnode(GPIO, 18, 0, BSLIPMAX, 2, -1), rnode(GIN, 18, 0, 7) },
  { pnode(GPIO, 18, 0, CEIN, 2, -1), rnode(GOUT, 18, 0, 20) },
  { pnode(GPIO, 18, 0, CEOUT, 2, -1), rnode(GOUT, 18, 0, 13) },
  { pnode(GPIO, 18, 0, SCLR, 2, -1), rnode(GOUT, 18, 0, 25) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 18, 0, 5) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 18, 0, 7) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 18, 0, 1) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 18, 0, 3) },
  { pnode(GPIO, 18, 0, DATAOUT, 3, 0), rnode(GIN, 18, 0, 2) },
  { pnode(GPIO, 18, 0, DATAOUT, 3, 1), rnode(GIN, 18, 0, 3) },
  { pnode(GPIO, 18, 0, DATAOUT, 3, 2), rnode(GIN, 18, 0, 4) },
  { pnode(GPIO, 18, 0, DATAOUT, 3, 3), rnode(GIN, 18, 0, 5) },
  { pnode(GPIO, 18, 0, DATAOUT, 3, 4), rnode(GIN, 18, 0, 6) },
  { pnode(GPIO, 18, 0, OEIN, 3, 0), rnode(GOUT, 18, 0, 2) },
  { pnode(GPIO, 18, 0, OEIN, 3, 1), rnode(GOUT, 18, 0, 19) },
  { pnode(GPIO, 18, 0, BSLIPMAX, 3, -1), rnode(GIN, 18, 0, 1) },
  { pnode(GPIO, 18, 0, CEIN, 3, -1), rnode(GOUT, 18, 0, 5) },
  { pnode(GPIO, 18, 0, CEOUT, 3, -1), rnode(GOUT, 18, 0, 4) },
  { pnode(GPIO, 18, 0, SCLR, 3, -1), rnode(GOUT, 18, 0, 1) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 18, 0, 4) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 18, 0, 6) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 18, 0, 0) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 18, 0, 2) },
  { pnode(GPIO, 18, 61, DATAIN, 0, 0), rnode(GOUT, 18, 61, 44) },
  { pnode(GPIO, 18, 61, DATAIN, 0, 1), rnode(GOUT, 18, 61, 34) },
  { pnode(GPIO, 18, 61, DATAIN, 0, 2), rnode(GOUT, 18, 61, 43) },
  { pnode(GPIO, 18, 61, DATAIN, 0, 3), rnode(GOUT, 18, 61, 29) },
  { pnode(GPIO, 18, 61, DATAOUT, 0, 0), rnode(GIN, 18, 61, 18) },
  { pnode(GPIO, 18, 61, DATAOUT, 0, 1), rnode(GIN, 18, 61, 17) },
  { pnode(GPIO, 18, 61, DATAOUT, 0, 2), rnode(GIN, 18, 61, 16) },
  { pnode(GPIO, 18, 61, DATAOUT, 0, 3), rnode(GIN, 18, 61, 15) },
  { pnode(GPIO, 18, 61, DATAOUT, 0, 4), rnode(GIN, 18, 61, 14) },
  { pnode(GPIO, 18, 61, OEIN, 0, 0), rnode(GOUT, 18, 61, 38) },
  { pnode(GPIO, 18, 61, OEIN, 0, 1), rnode(GOUT, 18, 61, 30) },
  { pnode(GPIO, 18, 61, BSLIPMAX, 0, -1), rnode(GIN, 18, 61, 19) },
  { pnode(GPIO, 18, 61, CEIN, 0, -1), rnode(GOUT, 18, 61, 27) },
  { pnode(GPIO, 18, 61, CEOUT, 0, -1), rnode(GOUT, 18, 61, 45) },
  { pnode(GPIO, 18, 61, ACLR, 0, -1), rnode(GOUT, 18, 61, 28) },
  { pnode(GPIO, 18, 61, SCLR, 0, -1), rnode(GOUT, 18, 61, 31) },
  { pnode(GPIO, 18, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 18, 61, 10) },
  { pnode(GPIO, 18, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 18, 61, 8) },
  { pnode(GPIO, 18, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 18, 61, 14) },
  { pnode(GPIO, 18, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 18, 61, 12) },
  { pnode(GPIO, 18, 61, DATAIN, 1, 0), rnode(GOUT, 18, 61, 49) },
  { pnode(GPIO, 18, 61, DATAIN, 1, 1), rnode(GOUT, 18, 61, 41) },
  { pnode(GPIO, 18, 61, DATAIN, 1, 2), rnode(GOUT, 18, 61, 48) },
  { pnode(GPIO, 18, 61, DATAIN, 1, 3), rnode(GOUT, 18, 61, 40) },
  { pnode(GPIO, 18, 61, DATAOUT, 1, 0), rnode(GIN, 18, 61, 24) },
  { pnode(GPIO, 18, 61, DATAOUT, 1, 1), rnode(GIN, 18, 61, 23) },
  { pnode(GPIO, 18, 61, DATAOUT, 1, 2), rnode(GIN, 18, 61, 22) },
  { pnode(GPIO, 18, 61, DATAOUT, 1, 3), rnode(GIN, 18, 61, 21) },
  { pnode(GPIO, 18, 61, DATAOUT, 1, 4), rnode(GIN, 18, 61, 20) },
  { pnode(GPIO, 18, 61, OEIN, 1, 0), rnode(GOUT, 18, 61, 47) },
  { pnode(GPIO, 18, 61, OEIN, 1, 1), rnode(GOUT, 18, 61, 39) },
  { pnode(GPIO, 18, 61, BSLIPMAX, 1, -1), rnode(GIN, 18, 61, 25) },
  { pnode(GPIO, 18, 61, CEIN, 1, -1), rnode(GOUT, 18, 61, 51) },
  { pnode(GPIO, 18, 61, CEOUT, 1, -1), rnode(GOUT, 18, 61, 50) },
  { pnode(GPIO, 18, 61, ACLR, 1, -1), rnode(GOUT, 18, 61, 42) },
  { pnode(GPIO, 18, 61, SCLR, 1, -1), rnode(GOUT, 18, 61, 46) },
  { pnode(GPIO, 18, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 18, 61, 11) },
  { pnode(GPIO, 18, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 18, 61, 9) },
  { pnode(GPIO, 18, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 18, 61, 15) },
  { pnode(GPIO, 18, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 18, 61, 13) },
  { pnode(GPIO, 18, 61, DATAIN, 2, 0), rnode(GOUT, 18, 61, 14) },
  { pnode(GPIO, 18, 61, DATAIN, 2, 1), rnode(GOUT, 18, 61, 22) },
  { pnode(GPIO, 18, 61, DATAIN, 2, 2), rnode(GOUT, 18, 61, 15) },
  { pnode(GPIO, 18, 61, DATAIN, 2, 3), rnode(GOUT, 18, 61, 23) },
  { pnode(GPIO, 18, 61, DATAOUT, 2, 0), rnode(GIN, 18, 61, 8) },
  { pnode(GPIO, 18, 61, DATAOUT, 2, 1), rnode(GIN, 18, 61, 9) },
  { pnode(GPIO, 18, 61, DATAOUT, 2, 2), rnode(GIN, 18, 61, 10) },
  { pnode(GPIO, 18, 61, DATAOUT, 2, 3), rnode(GIN, 18, 61, 11) },
  { pnode(GPIO, 18, 61, DATAOUT, 2, 4), rnode(GIN, 18, 61, 12) },
  { pnode(GPIO, 18, 61, OEIN, 2, 0), rnode(GOUT, 18, 61, 16) },
  { pnode(GPIO, 18, 61, OEIN, 2, 1), rnode(GOUT, 18, 61, 24) },
  { pnode(GPIO, 18, 61, BSLIPMAX, 2, -1), rnode(GIN, 18, 61, 7) },
  { pnode(GPIO, 18, 61, CEIN, 2, -1), rnode(GOUT, 18, 61, 20) },
  { pnode(GPIO, 18, 61, CEOUT, 2, -1), rnode(GOUT, 18, 61, 13) },
  { pnode(GPIO, 18, 61, ACLR, 2, -1), rnode(GOUT, 18, 61, 21) },
  { pnode(GPIO, 18, 61, SCLR, 2, -1), rnode(GOUT, 18, 61, 25) },
  { pnode(GPIO, 18, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 18, 61, 5) },
  { pnode(GPIO, 18, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 18, 61, 7) },
  { pnode(GPIO, 18, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 18, 61, 1) },
  { pnode(GPIO, 18, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 18, 61, 3) },
  { pnode(GPIO, 18, 61, DATAIN, 3, 0), rnode(GOUT, 18, 61, 3) },
  { pnode(GPIO, 18, 61, DATAIN, 3, 1), rnode(GOUT, 18, 61, 17) },
  { pnode(GPIO, 18, 61, DATAIN, 3, 2), rnode(GOUT, 18, 61, 8) },
  { pnode(GPIO, 18, 61, DATAIN, 3, 3), rnode(GOUT, 18, 61, 18) },
  { pnode(GPIO, 18, 61, DATAOUT, 3, 0), rnode(GIN, 18, 61, 2) },
  { pnode(GPIO, 18, 61, DATAOUT, 3, 1), rnode(GIN, 18, 61, 3) },
  { pnode(GPIO, 18, 61, DATAOUT, 3, 2), rnode(GIN, 18, 61, 4) },
  { pnode(GPIO, 18, 61, DATAOUT, 3, 3), rnode(GIN, 18, 61, 5) },
  { pnode(GPIO, 18, 61, DATAOUT, 3, 4), rnode(GIN, 18, 61, 6) },
  { pnode(GPIO, 18, 61, OEIN, 3, 0), rnode(GOUT, 18, 61, 2) },
  { pnode(GPIO, 18, 61, OEIN, 3, 1), rnode(GOUT, 18, 61, 19) },
  { pnode(GPIO, 18, 61, BSLIPMAX, 3, -1), rnode(GIN, 18, 61, 1) },
  { pnode(GPIO, 18, 61, CEIN, 3, -1), rnode(GOUT, 18, 61, 5) },
  { pnode(GPIO, 18, 61, CEOUT, 3, -1), rnode(GOUT, 18, 61, 4) },
  { pnode(GPIO, 18, 61, ACLR, 3, -1), rnode(GOUT, 18, 61, 12) },
  { pnode(GPIO, 18, 61, SCLR, 3, -1), rnode(GOUT, 18, 61, 1) },
  { pnode(GPIO, 18, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 18, 61, 4) },
  { pnode(GPIO, 18, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 18, 61, 6) },
  { pnode(GPIO, 18, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 18, 61, 0) },
  { pnode(GPIO, 18, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 18, 61, 2) },
  { pnode(GPIO, 19, 0, DATAOUT, 0, 0), rnode(GIN, 19, 0, 18) },
  { pnode(GPIO, 19, 0, DATAOUT, 0, 1), rnode(GIN, 19, 0, 17) },
  { pnode(GPIO, 19, 0, DATAOUT, 0, 2), rnode(GIN, 19, 0, 16) },
  { pnode(GPIO, 19, 0, DATAOUT, 0, 3), rnode(GIN, 19, 0, 15) },
  { pnode(GPIO, 19, 0, DATAOUT, 0, 4), rnode(GIN, 19, 0, 14) },
  { pnode(GPIO, 19, 0, OEIN, 0, 0), rnode(GOUT, 19, 0, 38) },
  { pnode(GPIO, 19, 0, OEIN, 0, 1), rnode(GOUT, 19, 0, 30) },
  { pnode(GPIO, 19, 0, BSLIPMAX, 0, -1), rnode(GIN, 19, 0, 19) },
  { pnode(GPIO, 19, 0, CEIN, 0, -1), rnode(GOUT, 19, 0, 27) },
  { pnode(GPIO, 19, 0, CEOUT, 0, -1), rnode(GOUT, 19, 0, 45) },
  { pnode(GPIO, 19, 0, SCLR, 0, -1), rnode(GOUT, 19, 0, 31) },
  { pnode(GPIO, 19, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 19, 0, 10) },
  { pnode(GPIO, 19, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 19, 0, 8) },
  { pnode(GPIO, 19, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 19, 0, 14) },
  { pnode(GPIO, 19, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 19, 0, 12) },
  { pnode(GPIO, 19, 0, DATAOUT, 1, 0), rnode(GIN, 19, 0, 24) },
  { pnode(GPIO, 19, 0, DATAOUT, 1, 1), rnode(GIN, 19, 0, 23) },
  { pnode(GPIO, 19, 0, DATAOUT, 1, 2), rnode(GIN, 19, 0, 22) },
  { pnode(GPIO, 19, 0, DATAOUT, 1, 3), rnode(GIN, 19, 0, 21) },
  { pnode(GPIO, 19, 0, DATAOUT, 1, 4), rnode(GIN, 19, 0, 20) },
  { pnode(GPIO, 19, 0, OEIN, 1, 0), rnode(GOUT, 19, 0, 47) },
  { pnode(GPIO, 19, 0, OEIN, 1, 1), rnode(GOUT, 19, 0, 39) },
  { pnode(GPIO, 19, 0, BSLIPMAX, 1, -1), rnode(GIN, 19, 0, 25) },
  { pnode(GPIO, 19, 0, CEIN, 1, -1), rnode(GOUT, 19, 0, 51) },
  { pnode(GPIO, 19, 0, CEOUT, 1, -1), rnode(GOUT, 19, 0, 50) },
  { pnode(GPIO, 19, 0, SCLR, 1, -1), rnode(GOUT, 19, 0, 46) },
  { pnode(GPIO, 19, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 19, 0, 11) },
  { pnode(GPIO, 19, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 19, 0, 9) },
  { pnode(GPIO, 19, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 19, 0, 15) },
  { pnode(GPIO, 19, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 19, 0, 13) },
  { pnode(GPIO, 19, 0, DATAOUT, 2, 0), rnode(GIN, 19, 0, 8) },
  { pnode(GPIO, 19, 0, DATAOUT, 2, 1), rnode(GIN, 19, 0, 9) },
  { pnode(GPIO, 19, 0, DATAOUT, 2, 2), rnode(GIN, 19, 0, 10) },
  { pnode(GPIO, 19, 0, DATAOUT, 2, 3), rnode(GIN, 19, 0, 11) },
  { pnode(GPIO, 19, 0, DATAOUT, 2, 4), rnode(GIN, 19, 0, 12) },
  { pnode(GPIO, 19, 0, OEIN, 2, 0), rnode(GOUT, 19, 0, 16) },
  { pnode(GPIO, 19, 0, OEIN, 2, 1), rnode(GOUT, 19, 0, 24) },
  { pnode(GPIO, 19, 0, BSLIPMAX, 2, -1), rnode(GIN, 19, 0, 7) },
  { pnode(GPIO, 19, 0, CEIN, 2, -1), rnode(GOUT, 19, 0, 20) },
  { pnode(GPIO, 19, 0, CEOUT, 2, -1), rnode(GOUT, 19, 0, 13) },
  { pnode(GPIO, 19, 0, SCLR, 2, -1), rnode(GOUT, 19, 0, 25) },
  { pnode(GPIO, 19, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 19, 0, 5) },
  { pnode(GPIO, 19, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 19, 0, 7) },
  { pnode(GPIO, 19, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 19, 0, 1) },
  { pnode(GPIO, 19, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 19, 0, 3) },
  { pnode(GPIO, 19, 0, DATAOUT, 3, 0), rnode(GIN, 19, 0, 2) },
  { pnode(GPIO, 19, 0, DATAOUT, 3, 1), rnode(GIN, 19, 0, 3) },
  { pnode(GPIO, 19, 0, DATAOUT, 3, 2), rnode(GIN, 19, 0, 4) },
  { pnode(GPIO, 19, 0, DATAOUT, 3, 3), rnode(GIN, 19, 0, 5) },
  { pnode(GPIO, 19, 0, DATAOUT, 3, 4), rnode(GIN, 19, 0, 6) },
  { pnode(GPIO, 19, 0, OEIN, 3, 0), rnode(GOUT, 19, 0, 2) },
  { pnode(GPIO, 19, 0, OEIN, 3, 1), rnode(GOUT, 19, 0, 19) },
  { pnode(GPIO, 19, 0, BSLIPMAX, 3, -1), rnode(GIN, 19, 0, 1) },
  { pnode(GPIO, 19, 0, CEIN, 3, -1), rnode(GOUT, 19, 0, 5) },
  { pnode(GPIO, 19, 0, CEOUT, 3, -1), rnode(GOUT, 19, 0, 4) },
  { pnode(GPIO, 19, 0, SCLR, 3, -1), rnode(GOUT, 19, 0, 1) },
  { pnode(GPIO, 19, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 19, 0, 4) },
  { pnode(GPIO, 19, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 19, 0, 6) },
  { pnode(GPIO, 19, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 19, 0, 0) },
  { pnode(GPIO, 19, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 19, 0, 2) },
  { pnode(GPIO, 19, 61, DATAIN, 0, 0), rnode(GOUT, 19, 61, 44) },
  { pnode(GPIO, 19, 61, DATAIN, 0, 1), rnode(GOUT, 19, 61, 34) },
  { pnode(GPIO, 19, 61, DATAIN, 0, 2), rnode(GOUT, 19, 61, 43) },
  { pnode(GPIO, 19, 61, DATAIN, 0, 3), rnode(GOUT, 19, 61, 29) },
  { pnode(GPIO, 19, 61, DATAOUT, 0, 0), rnode(GIN, 19, 61, 18) },
  { pnode(GPIO, 19, 61, DATAOUT, 0, 1), rnode(GIN, 19, 61, 17) },
  { pnode(GPIO, 19, 61, DATAOUT, 0, 2), rnode(GIN, 19, 61, 16) },
  { pnode(GPIO, 19, 61, DATAOUT, 0, 3), rnode(GIN, 19, 61, 15) },
  { pnode(GPIO, 19, 61, DATAOUT, 0, 4), rnode(GIN, 19, 61, 14) },
  { pnode(GPIO, 19, 61, OEIN, 0, 0), rnode(GOUT, 19, 61, 38) },
  { pnode(GPIO, 19, 61, OEIN, 0, 1), rnode(GOUT, 19, 61, 30) },
  { pnode(GPIO, 19, 61, BSLIPMAX, 0, -1), rnode(GIN, 19, 61, 19) },
  { pnode(GPIO, 19, 61, CEIN, 0, -1), rnode(GOUT, 19, 61, 27) },
  { pnode(GPIO, 19, 61, CEOUT, 0, -1), rnode(GOUT, 19, 61, 45) },
  { pnode(GPIO, 19, 61, ACLR, 0, -1), rnode(GOUT, 19, 61, 28) },
  { pnode(GPIO, 19, 61, SCLR, 0, -1), rnode(GOUT, 19, 61, 31) },
  { pnode(GPIO, 19, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 19, 61, 10) },
  { pnode(GPIO, 19, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 19, 61, 8) },
  { pnode(GPIO, 19, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 19, 61, 14) },
  { pnode(GPIO, 19, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 19, 61, 12) },
  { pnode(GPIO, 19, 61, DATAIN, 1, 0), rnode(GOUT, 19, 61, 49) },
  { pnode(GPIO, 19, 61, DATAIN, 1, 1), rnode(GOUT, 19, 61, 41) },
  { pnode(GPIO, 19, 61, DATAIN, 1, 2), rnode(GOUT, 19, 61, 48) },
  { pnode(GPIO, 19, 61, DATAIN, 1, 3), rnode(GOUT, 19, 61, 40) },
  { pnode(GPIO, 19, 61, DATAOUT, 1, 0), rnode(GIN, 19, 61, 24) },
  { pnode(GPIO, 19, 61, DATAOUT, 1, 1), rnode(GIN, 19, 61, 23) },
  { pnode(GPIO, 19, 61, DATAOUT, 1, 2), rnode(GIN, 19, 61, 22) },
  { pnode(GPIO, 19, 61, DATAOUT, 1, 3), rnode(GIN, 19, 61, 21) },
  { pnode(GPIO, 19, 61, DATAOUT, 1, 4), rnode(GIN, 19, 61, 20) },
  { pnode(GPIO, 19, 61, OEIN, 1, 0), rnode(GOUT, 19, 61, 47) },
  { pnode(GPIO, 19, 61, OEIN, 1, 1), rnode(GOUT, 19, 61, 39) },
  { pnode(GPIO, 19, 61, BSLIPMAX, 1, -1), rnode(GIN, 19, 61, 25) },
  { pnode(GPIO, 19, 61, CEIN, 1, -1), rnode(GOUT, 19, 61, 51) },
  { pnode(GPIO, 19, 61, CEOUT, 1, -1), rnode(GOUT, 19, 61, 50) },
  { pnode(GPIO, 19, 61, ACLR, 1, -1), rnode(GOUT, 19, 61, 42) },
  { pnode(GPIO, 19, 61, SCLR, 1, -1), rnode(GOUT, 19, 61, 46) },
  { pnode(GPIO, 19, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 19, 61, 11) },
  { pnode(GPIO, 19, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 19, 61, 9) },
  { pnode(GPIO, 19, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 19, 61, 15) },
  { pnode(GPIO, 19, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 19, 61, 13) },
  { pnode(GPIO, 19, 61, DATAIN, 2, 0), rnode(GOUT, 19, 61, 14) },
  { pnode(GPIO, 19, 61, DATAIN, 2, 1), rnode(GOUT, 19, 61, 22) },
  { pnode(GPIO, 19, 61, DATAIN, 2, 2), rnode(GOUT, 19, 61, 15) },
  { pnode(GPIO, 19, 61, DATAIN, 2, 3), rnode(GOUT, 19, 61, 23) },
  { pnode(GPIO, 19, 61, DATAOUT, 2, 0), rnode(GIN, 19, 61, 8) },
  { pnode(GPIO, 19, 61, DATAOUT, 2, 1), rnode(GIN, 19, 61, 9) },
  { pnode(GPIO, 19, 61, DATAOUT, 2, 2), rnode(GIN, 19, 61, 10) },
  { pnode(GPIO, 19, 61, DATAOUT, 2, 3), rnode(GIN, 19, 61, 11) },
  { pnode(GPIO, 19, 61, DATAOUT, 2, 4), rnode(GIN, 19, 61, 12) },
  { pnode(GPIO, 19, 61, OEIN, 2, 0), rnode(GOUT, 19, 61, 16) },
  { pnode(GPIO, 19, 61, OEIN, 2, 1), rnode(GOUT, 19, 61, 24) },
  { pnode(GPIO, 19, 61, BSLIPMAX, 2, -1), rnode(GIN, 19, 61, 7) },
  { pnode(GPIO, 19, 61, CEIN, 2, -1), rnode(GOUT, 19, 61, 20) },
  { pnode(GPIO, 19, 61, CEOUT, 2, -1), rnode(GOUT, 19, 61, 13) },
  { pnode(GPIO, 19, 61, ACLR, 2, -1), rnode(GOUT, 19, 61, 21) },
  { pnode(GPIO, 19, 61, SCLR, 2, -1), rnode(GOUT, 19, 61, 25) },
  { pnode(GPIO, 19, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 19, 61, 5) },
  { pnode(GPIO, 19, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 19, 61, 7) },
  { pnode(GPIO, 19, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 19, 61, 1) },
  { pnode(GPIO, 19, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 19, 61, 3) },
  { pnode(GPIO, 19, 61, DATAIN, 3, 0), rnode(GOUT, 19, 61, 3) },
  { pnode(GPIO, 19, 61, DATAIN, 3, 1), rnode(GOUT, 19, 61, 17) },
  { pnode(GPIO, 19, 61, DATAIN, 3, 2), rnode(GOUT, 19, 61, 8) },
  { pnode(GPIO, 19, 61, DATAIN, 3, 3), rnode(GOUT, 19, 61, 18) },
  { pnode(GPIO, 19, 61, DATAOUT, 3, 0), rnode(GIN, 19, 61, 2) },
  { pnode(GPIO, 19, 61, DATAOUT, 3, 1), rnode(GIN, 19, 61, 3) },
  { pnode(GPIO, 19, 61, DATAOUT, 3, 2), rnode(GIN, 19, 61, 4) },
  { pnode(GPIO, 19, 61, DATAOUT, 3, 3), rnode(GIN, 19, 61, 5) },
  { pnode(GPIO, 19, 61, DATAOUT, 3, 4), rnode(GIN, 19, 61, 6) },
  { pnode(GPIO, 19, 61, OEIN, 3, 0), rnode(GOUT, 19, 61, 2) },
  { pnode(GPIO, 19, 61, OEIN, 3, 1), rnode(GOUT, 19, 61, 19) },
  { pnode(GPIO, 19, 61, BSLIPMAX, 3, -1), rnode(GIN, 19, 61, 1) },
  { pnode(GPIO, 19, 61, CEIN, 3, -1), rnode(GOUT, 19, 61, 5) },
  { pnode(GPIO, 19, 61, CEOUT, 3, -1), rnode(GOUT, 19, 61, 4) },
  { pnode(GPIO, 19, 61, ACLR, 3, -1), rnode(GOUT, 19, 61, 12) },
  { pnode(GPIO, 19, 61, SCLR, 3, -1), rnode(GOUT, 19, 61, 1) },
  { pnode(GPIO, 19, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 19, 61, 4) },
  { pnode(GPIO, 19, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 19, 61, 6) },
  { pnode(GPIO, 19, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 19, 61, 0) },
  { pnode(GPIO, 19, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 19, 61, 2) },
  { pnode(GPIO, 21, 0, DATAIN, 0, 0), rnode(GOUT, 21, 0, 44) },
  { pnode(GPIO, 21, 0, DATAIN, 0, 1), rnode(GOUT, 21, 0, 34) },
  { pnode(GPIO, 21, 0, DATAIN, 0, 2), rnode(GOUT, 21, 0, 43) },
  { pnode(GPIO, 21, 0, DATAIN, 0, 3), rnode(GOUT, 21, 0, 29) },
  { pnode(GPIO, 21, 0, DATAOUT, 0, 0), rnode(GIN, 21, 0, 18) },
  { pnode(GPIO, 21, 0, DATAOUT, 0, 1), rnode(GIN, 21, 0, 17) },
  { pnode(GPIO, 21, 0, DATAOUT, 0, 2), rnode(GIN, 21, 0, 16) },
  { pnode(GPIO, 21, 0, DATAOUT, 0, 3), rnode(GIN, 21, 0, 15) },
  { pnode(GPIO, 21, 0, DATAOUT, 0, 4), rnode(GIN, 21, 0, 14) },
  { pnode(GPIO, 21, 0, OEIN, 0, 0), rnode(GOUT, 21, 0, 38) },
  { pnode(GPIO, 21, 0, OEIN, 0, 1), rnode(GOUT, 21, 0, 30) },
  { pnode(GPIO, 21, 0, BSLIPMAX, 0, -1), rnode(GIN, 21, 0, 19) },
  { pnode(GPIO, 21, 0, CEIN, 0, -1), rnode(GOUT, 21, 0, 27) },
  { pnode(GPIO, 21, 0, CEOUT, 0, -1), rnode(GOUT, 21, 0, 45) },
  { pnode(GPIO, 21, 0, ACLR, 0, -1), rnode(GOUT, 21, 0, 28) },
  { pnode(GPIO, 21, 0, SCLR, 0, -1), rnode(GOUT, 21, 0, 31) },
  { pnode(GPIO, 21, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 21, 0, 10) },
  { pnode(GPIO, 21, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 21, 0, 8) },
  { pnode(GPIO, 21, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 21, 0, 14) },
  { pnode(GPIO, 21, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 21, 0, 12) },
  { pnode(GPIO, 21, 0, DATAIN, 1, 0), rnode(GOUT, 21, 0, 49) },
  { pnode(GPIO, 21, 0, DATAIN, 1, 1), rnode(GOUT, 21, 0, 41) },
  { pnode(GPIO, 21, 0, DATAIN, 1, 2), rnode(GOUT, 21, 0, 48) },
  { pnode(GPIO, 21, 0, DATAIN, 1, 3), rnode(GOUT, 21, 0, 40) },
  { pnode(GPIO, 21, 0, DATAOUT, 1, 0), rnode(GIN, 21, 0, 24) },
  { pnode(GPIO, 21, 0, DATAOUT, 1, 1), rnode(GIN, 21, 0, 23) },
  { pnode(GPIO, 21, 0, DATAOUT, 1, 2), rnode(GIN, 21, 0, 22) },
  { pnode(GPIO, 21, 0, DATAOUT, 1, 3), rnode(GIN, 21, 0, 21) },
  { pnode(GPIO, 21, 0, DATAOUT, 1, 4), rnode(GIN, 21, 0, 20) },
  { pnode(GPIO, 21, 0, OEIN, 1, 0), rnode(GOUT, 21, 0, 47) },
  { pnode(GPIO, 21, 0, OEIN, 1, 1), rnode(GOUT, 21, 0, 39) },
  { pnode(GPIO, 21, 0, BSLIPMAX, 1, -1), rnode(GIN, 21, 0, 25) },
  { pnode(GPIO, 21, 0, CEIN, 1, -1), rnode(GOUT, 21, 0, 51) },
  { pnode(GPIO, 21, 0, CEOUT, 1, -1), rnode(GOUT, 21, 0, 50) },
  { pnode(GPIO, 21, 0, ACLR, 1, -1), rnode(GOUT, 21, 0, 42) },
  { pnode(GPIO, 21, 0, SCLR, 1, -1), rnode(GOUT, 21, 0, 46) },
  { pnode(GPIO, 21, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 21, 0, 11) },
  { pnode(GPIO, 21, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 21, 0, 9) },
  { pnode(GPIO, 21, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 21, 0, 15) },
  { pnode(GPIO, 21, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 21, 0, 13) },
  { pnode(GPIO, 21, 0, DATAOUT, 2, 0), rnode(GIN, 21, 0, 8) },
  { pnode(GPIO, 21, 0, DATAOUT, 2, 1), rnode(GIN, 21, 0, 9) },
  { pnode(GPIO, 21, 0, DATAOUT, 2, 2), rnode(GIN, 21, 0, 10) },
  { pnode(GPIO, 21, 0, DATAOUT, 2, 3), rnode(GIN, 21, 0, 11) },
  { pnode(GPIO, 21, 0, DATAOUT, 2, 4), rnode(GIN, 21, 0, 12) },
  { pnode(GPIO, 21, 0, OEIN, 2, 0), rnode(GOUT, 21, 0, 16) },
  { pnode(GPIO, 21, 0, OEIN, 2, 1), rnode(GOUT, 21, 0, 24) },
  { pnode(GPIO, 21, 0, BSLIPMAX, 2, -1), rnode(GIN, 21, 0, 7) },
  { pnode(GPIO, 21, 0, CEIN, 2, -1), rnode(GOUT, 21, 0, 20) },
  { pnode(GPIO, 21, 0, CEOUT, 2, -1), rnode(GOUT, 21, 0, 13) },
  { pnode(GPIO, 21, 0, SCLR, 2, -1), rnode(GOUT, 21, 0, 25) },
  { pnode(GPIO, 21, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 21, 0, 5) },
  { pnode(GPIO, 21, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 21, 0, 7) },
  { pnode(GPIO, 21, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 21, 0, 1) },
  { pnode(GPIO, 21, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 21, 0, 3) },
  { pnode(GPIO, 21, 0, DATAOUT, 3, 0), rnode(GIN, 21, 0, 2) },
  { pnode(GPIO, 21, 0, DATAOUT, 3, 1), rnode(GIN, 21, 0, 3) },
  { pnode(GPIO, 21, 0, DATAOUT, 3, 2), rnode(GIN, 21, 0, 4) },
  { pnode(GPIO, 21, 0, DATAOUT, 3, 3), rnode(GIN, 21, 0, 5) },
  { pnode(GPIO, 21, 0, DATAOUT, 3, 4), rnode(GIN, 21, 0, 6) },
  { pnode(GPIO, 21, 0, OEIN, 3, 0), rnode(GOUT, 21, 0, 2) },
  { pnode(GPIO, 21, 0, OEIN, 3, 1), rnode(GOUT, 21, 0, 19) },
  { pnode(GPIO, 21, 0, BSLIPMAX, 3, -1), rnode(GIN, 21, 0, 1) },
  { pnode(GPIO, 21, 0, CEIN, 3, -1), rnode(GOUT, 21, 0, 5) },
  { pnode(GPIO, 21, 0, CEOUT, 3, -1), rnode(GOUT, 21, 0, 4) },
  { pnode(GPIO, 21, 0, SCLR, 3, -1), rnode(GOUT, 21, 0, 1) },
  { pnode(GPIO, 21, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 21, 0, 4) },
  { pnode(GPIO, 21, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 21, 0, 6) },
  { pnode(GPIO, 21, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 21, 0, 0) },
  { pnode(GPIO, 21, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 21, 0, 2) },
  { pnode(GPIO, 21, 61, DATAIN, 0, 0), rnode(GOUT, 21, 61, 44) },
  { pnode(GPIO, 21, 61, DATAIN, 0, 1), rnode(GOUT, 21, 61, 34) },
  { pnode(GPIO, 21, 61, DATAIN, 0, 2), rnode(GOUT, 21, 61, 43) },
  { pnode(GPIO, 21, 61, DATAIN, 0, 3), rnode(GOUT, 21, 61, 29) },
  { pnode(GPIO, 21, 61, DATAOUT, 0, 0), rnode(GIN, 21, 61, 18) },
  { pnode(GPIO, 21, 61, DATAOUT, 0, 1), rnode(GIN, 21, 61, 17) },
  { pnode(GPIO, 21, 61, DATAOUT, 0, 2), rnode(GIN, 21, 61, 16) },
  { pnode(GPIO, 21, 61, DATAOUT, 0, 3), rnode(GIN, 21, 61, 15) },
  { pnode(GPIO, 21, 61, DATAOUT, 0, 4), rnode(GIN, 21, 61, 14) },
  { pnode(GPIO, 21, 61, OEIN, 0, 0), rnode(GOUT, 21, 61, 38) },
  { pnode(GPIO, 21, 61, OEIN, 0, 1), rnode(GOUT, 21, 61, 30) },
  { pnode(GPIO, 21, 61, BSLIPMAX, 0, -1), rnode(GIN, 21, 61, 19) },
  { pnode(GPIO, 21, 61, CEIN, 0, -1), rnode(GOUT, 21, 61, 27) },
  { pnode(GPIO, 21, 61, CEOUT, 0, -1), rnode(GOUT, 21, 61, 45) },
  { pnode(GPIO, 21, 61, ACLR, 0, -1), rnode(GOUT, 21, 61, 28) },
  { pnode(GPIO, 21, 61, SCLR, 0, -1), rnode(GOUT, 21, 61, 31) },
  { pnode(GPIO, 21, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 21, 61, 10) },
  { pnode(GPIO, 21, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 21, 61, 8) },
  { pnode(GPIO, 21, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 21, 61, 14) },
  { pnode(GPIO, 21, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 21, 61, 12) },
  { pnode(GPIO, 21, 61, DATAIN, 1, 0), rnode(GOUT, 21, 61, 49) },
  { pnode(GPIO, 21, 61, DATAIN, 1, 1), rnode(GOUT, 21, 61, 41) },
  { pnode(GPIO, 21, 61, DATAIN, 1, 2), rnode(GOUT, 21, 61, 48) },
  { pnode(GPIO, 21, 61, DATAIN, 1, 3), rnode(GOUT, 21, 61, 40) },
  { pnode(GPIO, 21, 61, DATAOUT, 1, 0), rnode(GIN, 21, 61, 24) },
  { pnode(GPIO, 21, 61, DATAOUT, 1, 1), rnode(GIN, 21, 61, 23) },
  { pnode(GPIO, 21, 61, DATAOUT, 1, 2), rnode(GIN, 21, 61, 22) },
  { pnode(GPIO, 21, 61, DATAOUT, 1, 3), rnode(GIN, 21, 61, 21) },
  { pnode(GPIO, 21, 61, DATAOUT, 1, 4), rnode(GIN, 21, 61, 20) },
  { pnode(GPIO, 21, 61, OEIN, 1, 0), rnode(GOUT, 21, 61, 47) },
  { pnode(GPIO, 21, 61, OEIN, 1, 1), rnode(GOUT, 21, 61, 39) },
  { pnode(GPIO, 21, 61, BSLIPMAX, 1, -1), rnode(GIN, 21, 61, 25) },
  { pnode(GPIO, 21, 61, CEIN, 1, -1), rnode(GOUT, 21, 61, 51) },
  { pnode(GPIO, 21, 61, CEOUT, 1, -1), rnode(GOUT, 21, 61, 50) },
  { pnode(GPIO, 21, 61, ACLR, 1, -1), rnode(GOUT, 21, 61, 42) },
  { pnode(GPIO, 21, 61, SCLR, 1, -1), rnode(GOUT, 21, 61, 46) },
  { pnode(GPIO, 21, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 21, 61, 11) },
  { pnode(GPIO, 21, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 21, 61, 9) },
  { pnode(GPIO, 21, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 21, 61, 15) },
  { pnode(GPIO, 21, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 21, 61, 13) },
  { pnode(GPIO, 21, 61, DATAIN, 2, 0), rnode(GOUT, 21, 61, 14) },
  { pnode(GPIO, 21, 61, DATAIN, 2, 1), rnode(GOUT, 21, 61, 22) },
  { pnode(GPIO, 21, 61, DATAIN, 2, 2), rnode(GOUT, 21, 61, 15) },
  { pnode(GPIO, 21, 61, DATAIN, 2, 3), rnode(GOUT, 21, 61, 23) },
  { pnode(GPIO, 21, 61, DATAOUT, 2, 0), rnode(GIN, 21, 61, 8) },
  { pnode(GPIO, 21, 61, DATAOUT, 2, 1), rnode(GIN, 21, 61, 9) },
  { pnode(GPIO, 21, 61, DATAOUT, 2, 2), rnode(GIN, 21, 61, 10) },
  { pnode(GPIO, 21, 61, DATAOUT, 2, 3), rnode(GIN, 21, 61, 11) },
  { pnode(GPIO, 21, 61, DATAOUT, 2, 4), rnode(GIN, 21, 61, 12) },
  { pnode(GPIO, 21, 61, OEIN, 2, 0), rnode(GOUT, 21, 61, 16) },
  { pnode(GPIO, 21, 61, OEIN, 2, 1), rnode(GOUT, 21, 61, 24) },
  { pnode(GPIO, 21, 61, BSLIPMAX, 2, -1), rnode(GIN, 21, 61, 7) },
  { pnode(GPIO, 21, 61, CEIN, 2, -1), rnode(GOUT, 21, 61, 20) },
  { pnode(GPIO, 21, 61, CEOUT, 2, -1), rnode(GOUT, 21, 61, 13) },
  { pnode(GPIO, 21, 61, ACLR, 2, -1), rnode(GOUT, 21, 61, 21) },
  { pnode(GPIO, 21, 61, SCLR, 2, -1), rnode(GOUT, 21, 61, 25) },
  { pnode(GPIO, 21, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 21, 61, 5) },
  { pnode(GPIO, 21, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 21, 61, 7) },
  { pnode(GPIO, 21, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 21, 61, 1) },
  { pnode(GPIO, 21, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 21, 61, 3) },
  { pnode(GPIO, 21, 61, DATAIN, 3, 0), rnode(GOUT, 21, 61, 3) },
  { pnode(GPIO, 21, 61, DATAIN, 3, 1), rnode(GOUT, 21, 61, 17) },
  { pnode(GPIO, 21, 61, DATAIN, 3, 2), rnode(GOUT, 21, 61, 8) },
  { pnode(GPIO, 21, 61, DATAIN, 3, 3), rnode(GOUT, 21, 61, 18) },
  { pnode(GPIO, 21, 61, DATAOUT, 3, 0), rnode(GIN, 21, 61, 2) },
  { pnode(GPIO, 21, 61, DATAOUT, 3, 1), rnode(GIN, 21, 61, 3) },
  { pnode(GPIO, 21, 61, DATAOUT, 3, 2), rnode(GIN, 21, 61, 4) },
  { pnode(GPIO, 21, 61, DATAOUT, 3, 3), rnode(GIN, 21, 61, 5) },
  { pnode(GPIO, 21, 61, DATAOUT, 3, 4), rnode(GIN, 21, 61, 6) },
  { pnode(GPIO, 21, 61, OEIN, 3, 0), rnode(GOUT, 21, 61, 2) },
  { pnode(GPIO, 21, 61, OEIN, 3, 1), rnode(GOUT, 21, 61, 19) },
  { pnode(GPIO, 21, 61, BSLIPMAX, 3, -1), rnode(GIN, 21, 61, 1) },
  { pnode(GPIO, 21, 61, CEIN, 3, -1), rnode(GOUT, 21, 61, 5) },
  { pnode(GPIO, 21, 61, CEOUT, 3, -1), rnode(GOUT, 21, 61, 4) },
  { pnode(GPIO, 21, 61, ACLR, 3, -1), rnode(GOUT, 21, 61, 12) },
  { pnode(GPIO, 21, 61, SCLR, 3, -1), rnode(GOUT, 21, 61, 1) },
  { pnode(GPIO, 21, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 21, 61, 4) },
  { pnode(GPIO, 21, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 21, 61, 6) },
  { pnode(GPIO, 21, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 21, 61, 0) },
  { pnode(GPIO, 21, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 21, 61, 2) },
  { pnode(GPIO, 32, 0, DATAOUT, 0, 4), rnode(GIN, 32, 0, 14) },
  { pnode(GPIO, 32, 0, BSLIPMAX, 0, -1), rnode(GIN, 32, 0, 19) },
  { pnode(GPIO, 32, 0, CEIN, 0, -1), rnode(GOUT, 32, 0, 27) },
  { pnode(GPIO, 32, 0, CEOUT, 0, -1), rnode(GOUT, 32, 0, 45) },
  { pnode(GPIO, 32, 0, ACLR, 0, -1), rnode(GOUT, 32, 0, 28) },
  { pnode(GPIO, 32, 0, SCLR, 0, -1), rnode(GOUT, 32, 0, 31) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 32, 0, 10) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 32, 0, 8) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 32, 0, 14) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 32, 0, 12) },
  { pnode(GPIO, 32, 0, DATAOUT, 1, 4), rnode(GIN, 32, 0, 20) },
  { pnode(GPIO, 32, 0, BSLIPMAX, 1, -1), rnode(GIN, 32, 0, 25) },
  { pnode(GPIO, 32, 0, CEIN, 1, -1), rnode(GOUT, 32, 0, 51) },
  { pnode(GPIO, 32, 0, CEOUT, 1, -1), rnode(GOUT, 32, 0, 50) },
  { pnode(GPIO, 32, 0, ACLR, 1, -1), rnode(GOUT, 32, 0, 42) },
  { pnode(GPIO, 32, 0, SCLR, 1, -1), rnode(GOUT, 32, 0, 46) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 32, 0, 11) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 32, 0, 9) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 32, 0, 15) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 32, 0, 13) },
  { pnode(GPIO, 32, 0, DATAOUT, 2, 4), rnode(GIN, 32, 0, 12) },
  { pnode(GPIO, 32, 0, BSLIPMAX, 2, -1), rnode(GIN, 32, 0, 7) },
  { pnode(GPIO, 32, 0, CEIN, 2, -1), rnode(GOUT, 32, 0, 20) },
  { pnode(GPIO, 32, 0, CEOUT, 2, -1), rnode(GOUT, 32, 0, 13) },
  { pnode(GPIO, 32, 0, ACLR, 2, -1), rnode(GOUT, 32, 0, 21) },
  { pnode(GPIO, 32, 0, SCLR, 2, -1), rnode(GOUT, 32, 0, 25) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 32, 0, 5) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 32, 0, 7) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 32, 0, 1) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 32, 0, 3) },
  { pnode(GPIO, 32, 0, DATAIN, 3, 0), rnode(GOUT, 32, 0, 3) },
  { pnode(GPIO, 32, 0, DATAIN, 3, 1), rnode(GOUT, 32, 0, 17) },
  { pnode(GPIO, 32, 0, DATAIN, 3, 2), rnode(GOUT, 32, 0, 8) },
  { pnode(GPIO, 32, 0, DATAIN, 3, 3), rnode(GOUT, 32, 0, 18) },
  { pnode(GPIO, 32, 0, DATAOUT, 3, 0), rnode(GIN, 32, 0, 2) },
  { pnode(GPIO, 32, 0, DATAOUT, 3, 1), rnode(GIN, 32, 0, 3) },
  { pnode(GPIO, 32, 0, DATAOUT, 3, 2), rnode(GIN, 32, 0, 4) },
  { pnode(GPIO, 32, 0, DATAOUT, 3, 3), rnode(GIN, 32, 0, 5) },
  { pnode(GPIO, 32, 0, DATAOUT, 3, 4), rnode(GIN, 32, 0, 6) },
  { pnode(GPIO, 32, 0, OEIN, 3, 0), rnode(GOUT, 32, 0, 2) },
  { pnode(GPIO, 32, 0, OEIN, 3, 1), rnode(GOUT, 32, 0, 19) },
  { pnode(GPIO, 32, 0, BSLIPMAX, 3, -1), rnode(GIN, 32, 0, 1) },
  { pnode(GPIO, 32, 0, CEIN, 3, -1), rnode(GOUT, 32, 0, 5) },
  { pnode(GPIO, 32, 0, CEOUT, 3, -1), rnode(GOUT, 32, 0, 4) },
  { pnode(GPIO, 32, 0, ACLR, 3, -1), rnode(GOUT, 32, 0, 12) },
  { pnode(GPIO, 32, 0, SCLR, 3, -1), rnode(GOUT, 32, 0, 1) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 32, 0, 4) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 32, 0, 6) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 32, 0, 0) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 32, 0, 2) },
  { pnode(GPIO, 34, 0, DATAOUT, 0, 0), rnode(GIN, 34, 0, 18) },
  { pnode(GPIO, 34, 0, DATAOUT, 0, 1), rnode(GIN, 34, 0, 17) },
  { pnode(GPIO, 34, 0, DATAOUT, 0, 2), rnode(GIN, 34, 0, 16) },
  { pnode(GPIO, 34, 0, DATAOUT, 0, 3), rnode(GIN, 34, 0, 15) },
  { pnode(GPIO, 34, 0, DATAOUT, 0, 4), rnode(GIN, 34, 0, 14) },
  { pnode(GPIO, 34, 0, BSLIPMAX, 0, -1), rnode(GIN, 34, 0, 19) },
  { pnode(GPIO, 34, 0, CEIN, 0, -1), rnode(GOUT, 34, 0, 27) },
  { pnode(GPIO, 34, 0, CEOUT, 0, -1), rnode(GOUT, 34, 0, 45) },
  { pnode(GPIO, 34, 0, ACLR, 0, -1), rnode(GOUT, 34, 0, 28) },
  { pnode(GPIO, 34, 0, SCLR, 0, -1), rnode(GOUT, 34, 0, 31) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 34, 0, 10) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 34, 0, 8) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 34, 0, 14) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 34, 0, 12) },
  { pnode(GPIO, 34, 0, DATAOUT, 1, 0), rnode(GIN, 34, 0, 24) },
  { pnode(GPIO, 34, 0, DATAOUT, 1, 1), rnode(GIN, 34, 0, 23) },
  { pnode(GPIO, 34, 0, DATAOUT, 1, 2), rnode(GIN, 34, 0, 22) },
  { pnode(GPIO, 34, 0, DATAOUT, 1, 3), rnode(GIN, 34, 0, 21) },
  { pnode(GPIO, 34, 0, DATAOUT, 1, 4), rnode(GIN, 34, 0, 20) },
  { pnode(GPIO, 34, 0, BSLIPMAX, 1, -1), rnode(GIN, 34, 0, 25) },
  { pnode(GPIO, 34, 0, CEIN, 1, -1), rnode(GOUT, 34, 0, 51) },
  { pnode(GPIO, 34, 0, CEOUT, 1, -1), rnode(GOUT, 34, 0, 50) },
  { pnode(GPIO, 34, 0, ACLR, 1, -1), rnode(GOUT, 34, 0, 42) },
  { pnode(GPIO, 34, 0, SCLR, 1, -1), rnode(GOUT, 34, 0, 46) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 34, 0, 11) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 34, 0, 9) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 34, 0, 15) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 34, 0, 13) },
  { pnode(GPIO, 34, 0, DATAOUT, 2, 0), rnode(GIN, 34, 0, 8) },
  { pnode(GPIO, 34, 0, DATAOUT, 2, 1), rnode(GIN, 34, 0, 9) },
  { pnode(GPIO, 34, 0, DATAOUT, 2, 2), rnode(GIN, 34, 0, 10) },
  { pnode(GPIO, 34, 0, DATAOUT, 2, 3), rnode(GIN, 34, 0, 11) },
  { pnode(GPIO, 34, 0, DATAOUT, 2, 4), rnode(GIN, 34, 0, 12) },
  { pnode(GPIO, 34, 0, OEIN, 2, 0), rnode(GOUT, 34, 0, 16) },
  { pnode(GPIO, 34, 0, OEIN, 2, 1), rnode(GOUT, 34, 0, 24) },
  { pnode(GPIO, 34, 0, BSLIPMAX, 2, -1), rnode(GIN, 34, 0, 7) },
  { pnode(GPIO, 34, 0, CEIN, 2, -1), rnode(GOUT, 34, 0, 20) },
  { pnode(GPIO, 34, 0, CEOUT, 2, -1), rnode(GOUT, 34, 0, 13) },
  { pnode(GPIO, 34, 0, SCLR, 2, -1), rnode(GOUT, 34, 0, 25) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 34, 0, 5) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 34, 0, 7) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 34, 0, 1) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 34, 0, 3) },
  { pnode(GPIO, 34, 0, DATAOUT, 3, 4), rnode(GIN, 34, 0, 6) },
  { pnode(GPIO, 34, 0, BSLIPMAX, 3, -1), rnode(GIN, 34, 0, 1) },
  { pnode(GPIO, 34, 0, CEIN, 3, -1), rnode(GOUT, 34, 0, 5) },
  { pnode(GPIO, 34, 0, CEOUT, 3, -1), rnode(GOUT, 34, 0, 4) },
  { pnode(GPIO, 34, 0, ACLR, 3, -1), rnode(GOUT, 34, 0, 12) },
  { pnode(GPIO, 34, 0, SCLR, 3, -1), rnode(GOUT, 34, 0, 1) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 34, 0, 4) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 34, 0, 6) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 34, 0, 0) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 34, 0, 2) },
  { pnode(GPIO, 36, 0, DATAOUT, 0, 4), rnode(GIN, 36, 0, 14) },
  { pnode(GPIO, 36, 0, BSLIPMAX, 0, -1), rnode(GIN, 36, 0, 19) },
  { pnode(GPIO, 36, 0, CEIN, 0, -1), rnode(GOUT, 36, 0, 27) },
  { pnode(GPIO, 36, 0, CEOUT, 0, -1), rnode(GOUT, 36, 0, 45) },
  { pnode(GPIO, 36, 0, ACLR, 0, -1), rnode(GOUT, 36, 0, 28) },
  { pnode(GPIO, 36, 0, SCLR, 0, -1), rnode(GOUT, 36, 0, 31) },
  { pnode(GPIO, 36, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 36, 0, 10) },
  { pnode(GPIO, 36, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 36, 0, 8) },
  { pnode(GPIO, 36, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 36, 0, 14) },
  { pnode(GPIO, 36, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 36, 0, 12) },
  { pnode(GPIO, 36, 0, DATAOUT, 1, 4), rnode(GIN, 36, 0, 20) },
  { pnode(GPIO, 36, 0, BSLIPMAX, 1, -1), rnode(GIN, 36, 0, 25) },
  { pnode(GPIO, 36, 0, CEIN, 1, -1), rnode(GOUT, 36, 0, 51) },
  { pnode(GPIO, 36, 0, CEOUT, 1, -1), rnode(GOUT, 36, 0, 50) },
  { pnode(GPIO, 36, 0, ACLR, 1, -1), rnode(GOUT, 36, 0, 42) },
  { pnode(GPIO, 36, 0, SCLR, 1, -1), rnode(GOUT, 36, 0, 46) },
  { pnode(GPIO, 36, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 36, 0, 11) },
  { pnode(GPIO, 36, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 36, 0, 9) },
  { pnode(GPIO, 36, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 36, 0, 15) },
  { pnode(GPIO, 36, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 36, 0, 13) },
  { pnode(GPIO, 36, 0, DATAOUT, 2, 4), rnode(GIN, 36, 0, 12) },
  { pnode(GPIO, 36, 0, BSLIPMAX, 2, -1), rnode(GIN, 36, 0, 7) },
  { pnode(GPIO, 36, 0, CEIN, 2, -1), rnode(GOUT, 36, 0, 20) },
  { pnode(GPIO, 36, 0, CEOUT, 2, -1), rnode(GOUT, 36, 0, 13) },
  { pnode(GPIO, 36, 0, ACLR, 2, -1), rnode(GOUT, 36, 0, 21) },
  { pnode(GPIO, 36, 0, SCLR, 2, -1), rnode(GOUT, 36, 0, 25) },
  { pnode(GPIO, 36, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 36, 0, 5) },
  { pnode(GPIO, 36, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 36, 0, 7) },
  { pnode(GPIO, 36, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 36, 0, 1) },
  { pnode(GPIO, 36, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 36, 0, 3) },
  { pnode(GPIO, 36, 0, DATAOUT, 3, 0), rnode(GIN, 36, 0, 2) },
  { pnode(GPIO, 36, 0, DATAOUT, 3, 1), rnode(GIN, 36, 0, 3) },
  { pnode(GPIO, 36, 0, DATAOUT, 3, 2), rnode(GIN, 36, 0, 4) },
  { pnode(GPIO, 36, 0, DATAOUT, 3, 3), rnode(GIN, 36, 0, 5) },
  { pnode(GPIO, 36, 0, DATAOUT, 3, 4), rnode(GIN, 36, 0, 6) },
  { pnode(GPIO, 36, 0, OEIN, 3, 0), rnode(GOUT, 36, 0, 2) },
  { pnode(GPIO, 36, 0, OEIN, 3, 1), rnode(GOUT, 36, 0, 19) },
  { pnode(GPIO, 36, 0, BSLIPMAX, 3, -1), rnode(GIN, 36, 0, 1) },
  { pnode(GPIO, 36, 0, CEIN, 3, -1), rnode(GOUT, 36, 0, 5) },
  { pnode(GPIO, 36, 0, CEOUT, 3, -1), rnode(GOUT, 36, 0, 4) },
  { pnode(GPIO, 36, 0, SCLR, 3, -1), rnode(GOUT, 36, 0, 1) },
  { pnode(GPIO, 36, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 36, 0, 4) },
  { pnode(GPIO, 36, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 36, 0, 6) },
  { pnode(GPIO, 36, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 36, 0, 0) },
  { pnode(GPIO, 36, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 36, 0, 2) },
  { pnode(GPIO, 38, 0, DATAIN, 0, 0), rnode(GOUT, 38, 0, 44) },
  { pnode(GPIO, 38, 0, DATAIN, 0, 1), rnode(GOUT, 38, 0, 34) },
  { pnode(GPIO, 38, 0, DATAIN, 0, 2), rnode(GOUT, 38, 0, 43) },
  { pnode(GPIO, 38, 0, DATAIN, 0, 3), rnode(GOUT, 38, 0, 29) },
  { pnode(GPIO, 38, 0, DATAOUT, 0, 0), rnode(GIN, 38, 0, 18) },
  { pnode(GPIO, 38, 0, DATAOUT, 0, 1), rnode(GIN, 38, 0, 17) },
  { pnode(GPIO, 38, 0, DATAOUT, 0, 2), rnode(GIN, 38, 0, 16) },
  { pnode(GPIO, 38, 0, DATAOUT, 0, 3), rnode(GIN, 38, 0, 15) },
  { pnode(GPIO, 38, 0, DATAOUT, 0, 4), rnode(GIN, 38, 0, 14) },
  { pnode(GPIO, 38, 0, OEIN, 0, 0), rnode(GOUT, 38, 0, 38) },
  { pnode(GPIO, 38, 0, OEIN, 0, 1), rnode(GOUT, 38, 0, 30) },
  { pnode(GPIO, 38, 0, BSLIPMAX, 0, -1), rnode(GIN, 38, 0, 19) },
  { pnode(GPIO, 38, 0, CEIN, 0, -1), rnode(GOUT, 38, 0, 27) },
  { pnode(GPIO, 38, 0, CEOUT, 0, -1), rnode(GOUT, 38, 0, 45) },
  { pnode(GPIO, 38, 0, ACLR, 0, -1), rnode(GOUT, 38, 0, 28) },
  { pnode(GPIO, 38, 0, SCLR, 0, -1), rnode(GOUT, 38, 0, 31) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 38, 0, 10) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 38, 0, 8) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 38, 0, 14) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 38, 0, 12) },
  { pnode(GPIO, 38, 0, DATAIN, 1, 0), rnode(GOUT, 38, 0, 49) },
  { pnode(GPIO, 38, 0, DATAIN, 1, 1), rnode(GOUT, 38, 0, 41) },
  { pnode(GPIO, 38, 0, DATAIN, 1, 2), rnode(GOUT, 38, 0, 48) },
  { pnode(GPIO, 38, 0, DATAIN, 1, 3), rnode(GOUT, 38, 0, 40) },
  { pnode(GPIO, 38, 0, DATAOUT, 1, 0), rnode(GIN, 38, 0, 24) },
  { pnode(GPIO, 38, 0, DATAOUT, 1, 1), rnode(GIN, 38, 0, 23) },
  { pnode(GPIO, 38, 0, DATAOUT, 1, 2), rnode(GIN, 38, 0, 22) },
  { pnode(GPIO, 38, 0, DATAOUT, 1, 3), rnode(GIN, 38, 0, 21) },
  { pnode(GPIO, 38, 0, DATAOUT, 1, 4), rnode(GIN, 38, 0, 20) },
  { pnode(GPIO, 38, 0, OEIN, 1, 0), rnode(GOUT, 38, 0, 47) },
  { pnode(GPIO, 38, 0, OEIN, 1, 1), rnode(GOUT, 38, 0, 39) },
  { pnode(GPIO, 38, 0, BSLIPMAX, 1, -1), rnode(GIN, 38, 0, 25) },
  { pnode(GPIO, 38, 0, CEIN, 1, -1), rnode(GOUT, 38, 0, 51) },
  { pnode(GPIO, 38, 0, CEOUT, 1, -1), rnode(GOUT, 38, 0, 50) },
  { pnode(GPIO, 38, 0, ACLR, 1, -1), rnode(GOUT, 38, 0, 42) },
  { pnode(GPIO, 38, 0, SCLR, 1, -1), rnode(GOUT, 38, 0, 46) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 38, 0, 11) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 38, 0, 9) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 38, 0, 15) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 38, 0, 13) },
  { pnode(GPIO, 38, 0, DATAOUT, 2, 0), rnode(GIN, 38, 0, 8) },
  { pnode(GPIO, 38, 0, DATAOUT, 2, 1), rnode(GIN, 38, 0, 9) },
  { pnode(GPIO, 38, 0, DATAOUT, 2, 2), rnode(GIN, 38, 0, 10) },
  { pnode(GPIO, 38, 0, DATAOUT, 2, 3), rnode(GIN, 38, 0, 11) },
  { pnode(GPIO, 38, 0, DATAOUT, 2, 4), rnode(GIN, 38, 0, 12) },
  { pnode(GPIO, 38, 0, OEIN, 2, 0), rnode(GOUT, 38, 0, 16) },
  { pnode(GPIO, 38, 0, OEIN, 2, 1), rnode(GOUT, 38, 0, 24) },
  { pnode(GPIO, 38, 0, BSLIPMAX, 2, -1), rnode(GIN, 38, 0, 7) },
  { pnode(GPIO, 38, 0, CEIN, 2, -1), rnode(GOUT, 38, 0, 20) },
  { pnode(GPIO, 38, 0, CEOUT, 2, -1), rnode(GOUT, 38, 0, 13) },
  { pnode(GPIO, 38, 0, ACLR, 2, -1), rnode(GOUT, 38, 0, 21) },
  { pnode(GPIO, 38, 0, SCLR, 2, -1), rnode(GOUT, 38, 0, 25) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 38, 0, 5) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 38, 0, 7) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 38, 0, 1) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 38, 0, 3) },
  { pnode(GPIO, 38, 0, DATAOUT, 3, 4), rnode(GIN, 38, 0, 6) },
  { pnode(GPIO, 38, 0, BSLIPMAX, 3, -1), rnode(GIN, 38, 0, 1) },
  { pnode(GPIO, 38, 0, CEIN, 3, -1), rnode(GOUT, 38, 0, 5) },
  { pnode(GPIO, 38, 0, CEOUT, 3, -1), rnode(GOUT, 38, 0, 4) },
  { pnode(GPIO, 38, 0, ACLR, 3, -1), rnode(GOUT, 38, 0, 12) },
  { pnode(GPIO, 38, 0, SCLR, 3, -1), rnode(GOUT, 38, 0, 1) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 38, 0, 4) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 38, 0, 6) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 38, 0, 0) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 38, 0, 2) },
  { pnode(GPIO, 40, 0, DATAOUT, 0, 4), rnode(GIN, 40, 0, 14) },
  { pnode(GPIO, 40, 0, BSLIPMAX, 0, -1), rnode(GIN, 40, 0, 19) },
  { pnode(GPIO, 40, 0, CEIN, 0, -1), rnode(GOUT, 40, 0, 27) },
  { pnode(GPIO, 40, 0, CEOUT, 0, -1), rnode(GOUT, 40, 0, 45) },
  { pnode(GPIO, 40, 0, ACLR, 0, -1), rnode(GOUT, 40, 0, 28) },
  { pnode(GPIO, 40, 0, SCLR, 0, -1), rnode(GOUT, 40, 0, 31) },
  { pnode(GPIO, 40, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 40, 0, 10) },
  { pnode(GPIO, 40, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 40, 0, 8) },
  { pnode(GPIO, 40, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 40, 0, 14) },
  { pnode(GPIO, 40, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 40, 0, 12) },
  { pnode(GPIO, 40, 0, DATAOUT, 1, 4), rnode(GIN, 40, 0, 20) },
  { pnode(GPIO, 40, 0, BSLIPMAX, 1, -1), rnode(GIN, 40, 0, 25) },
  { pnode(GPIO, 40, 0, CEIN, 1, -1), rnode(GOUT, 40, 0, 51) },
  { pnode(GPIO, 40, 0, CEOUT, 1, -1), rnode(GOUT, 40, 0, 50) },
  { pnode(GPIO, 40, 0, ACLR, 1, -1), rnode(GOUT, 40, 0, 42) },
  { pnode(GPIO, 40, 0, SCLR, 1, -1), rnode(GOUT, 40, 0, 46) },
  { pnode(GPIO, 40, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 40, 0, 11) },
  { pnode(GPIO, 40, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 40, 0, 9) },
  { pnode(GPIO, 40, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 40, 0, 15) },
  { pnode(GPIO, 40, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 40, 0, 13) },
  { pnode(GPIO, 40, 0, DATAOUT, 2, 4), rnode(GIN, 40, 0, 12) },
  { pnode(GPIO, 40, 0, BSLIPMAX, 2, -1), rnode(GIN, 40, 0, 7) },
  { pnode(GPIO, 40, 0, CEIN, 2, -1), rnode(GOUT, 40, 0, 20) },
  { pnode(GPIO, 40, 0, CEOUT, 2, -1), rnode(GOUT, 40, 0, 13) },
  { pnode(GPIO, 40, 0, ACLR, 2, -1), rnode(GOUT, 40, 0, 21) },
  { pnode(GPIO, 40, 0, SCLR, 2, -1), rnode(GOUT, 40, 0, 25) },
  { pnode(GPIO, 40, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 40, 0, 5) },
  { pnode(GPIO, 40, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 40, 0, 7) },
  { pnode(GPIO, 40, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 40, 0, 1) },
  { pnode(GPIO, 40, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 40, 0, 3) },
  { pnode(GPIO, 40, 0, DATAIN, 3, 0), rnode(GOUT, 40, 0, 3) },
  { pnode(GPIO, 40, 0, DATAIN, 3, 1), rnode(GOUT, 40, 0, 17) },
  { pnode(GPIO, 40, 0, DATAIN, 3, 2), rnode(GOUT, 40, 0, 8) },
  { pnode(GPIO, 40, 0, DATAIN, 3, 3), rnode(GOUT, 40, 0, 18) },
  { pnode(GPIO, 40, 0, DATAOUT, 3, 0), rnode(GIN, 40, 0, 2) },
  { pnode(GPIO, 40, 0, DATAOUT, 3, 1), rnode(GIN, 40, 0, 3) },
  { pnode(GPIO, 40, 0, DATAOUT, 3, 2), rnode(GIN, 40, 0, 4) },
  { pnode(GPIO, 40, 0, DATAOUT, 3, 3), rnode(GIN, 40, 0, 5) },
  { pnode(GPIO, 40, 0, DATAOUT, 3, 4), rnode(GIN, 40, 0, 6) },
  { pnode(GPIO, 40, 0, OEIN, 3, 0), rnode(GOUT, 40, 0, 2) },
  { pnode(GPIO, 40, 0, OEIN, 3, 1), rnode(GOUT, 40, 0, 19) },
  { pnode(GPIO, 40, 0, BSLIPMAX, 3, -1), rnode(GIN, 40, 0, 1) },
  { pnode(GPIO, 40, 0, CEIN, 3, -1), rnode(GOUT, 40, 0, 5) },
  { pnode(GPIO, 40, 0, CEOUT, 3, -1), rnode(GOUT, 40, 0, 4) },
  { pnode(GPIO, 40, 0, ACLR, 3, -1), rnode(GOUT, 40, 0, 12) },
  { pnode(GPIO, 40, 0, SCLR, 3, -1), rnode(GOUT, 40, 0, 1) },
  { pnode(GPIO, 40, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 40, 0, 4) },
  { pnode(GPIO, 40, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 40, 0, 6) },
  { pnode(GPIO, 40, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 40, 0, 0) },
  { pnode(GPIO, 40, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 40, 0, 2) },
  { pnode(GPIO, 42, 0, DATAOUT, 0, 0), rnode(GIN, 42, 0, 18) },
  { pnode(GPIO, 42, 0, DATAOUT, 0, 1), rnode(GIN, 42, 0, 17) },
  { pnode(GPIO, 42, 0, DATAOUT, 0, 2), rnode(GIN, 42, 0, 16) },
  { pnode(GPIO, 42, 0, DATAOUT, 0, 3), rnode(GIN, 42, 0, 15) },
  { pnode(GPIO, 42, 0, DATAOUT, 0, 4), rnode(GIN, 42, 0, 14) },
  { pnode(GPIO, 42, 0, BSLIPMAX, 0, -1), rnode(GIN, 42, 0, 19) },
  { pnode(GPIO, 42, 0, CEIN, 0, -1), rnode(GOUT, 42, 0, 27) },
  { pnode(GPIO, 42, 0, CEOUT, 0, -1), rnode(GOUT, 42, 0, 45) },
  { pnode(GPIO, 42, 0, ACLR, 0, -1), rnode(GOUT, 42, 0, 28) },
  { pnode(GPIO, 42, 0, SCLR, 0, -1), rnode(GOUT, 42, 0, 31) },
  { pnode(GPIO, 42, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 42, 0, 10) },
  { pnode(GPIO, 42, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 42, 0, 8) },
  { pnode(GPIO, 42, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 42, 0, 14) },
  { pnode(GPIO, 42, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 42, 0, 12) },
  { pnode(GPIO, 42, 0, DATAOUT, 1, 0), rnode(GIN, 42, 0, 24) },
  { pnode(GPIO, 42, 0, DATAOUT, 1, 1), rnode(GIN, 42, 0, 23) },
  { pnode(GPIO, 42, 0, DATAOUT, 1, 2), rnode(GIN, 42, 0, 22) },
  { pnode(GPIO, 42, 0, DATAOUT, 1, 3), rnode(GIN, 42, 0, 21) },
  { pnode(GPIO, 42, 0, DATAOUT, 1, 4), rnode(GIN, 42, 0, 20) },
  { pnode(GPIO, 42, 0, BSLIPMAX, 1, -1), rnode(GIN, 42, 0, 25) },
  { pnode(GPIO, 42, 0, CEIN, 1, -1), rnode(GOUT, 42, 0, 51) },
  { pnode(GPIO, 42, 0, CEOUT, 1, -1), rnode(GOUT, 42, 0, 50) },
  { pnode(GPIO, 42, 0, ACLR, 1, -1), rnode(GOUT, 42, 0, 42) },
  { pnode(GPIO, 42, 0, SCLR, 1, -1), rnode(GOUT, 42, 0, 46) },
  { pnode(GPIO, 42, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 42, 0, 11) },
  { pnode(GPIO, 42, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 42, 0, 9) },
  { pnode(GPIO, 42, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 42, 0, 15) },
  { pnode(GPIO, 42, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 42, 0, 13) },
  { pnode(GPIO, 42, 0, DATAOUT, 2, 0), rnode(GIN, 42, 0, 8) },
  { pnode(GPIO, 42, 0, DATAOUT, 2, 1), rnode(GIN, 42, 0, 9) },
  { pnode(GPIO, 42, 0, DATAOUT, 2, 2), rnode(GIN, 42, 0, 10) },
  { pnode(GPIO, 42, 0, DATAOUT, 2, 3), rnode(GIN, 42, 0, 11) },
  { pnode(GPIO, 42, 0, DATAOUT, 2, 4), rnode(GIN, 42, 0, 12) },
  { pnode(GPIO, 42, 0, OEIN, 2, 0), rnode(GOUT, 42, 0, 16) },
  { pnode(GPIO, 42, 0, OEIN, 2, 1), rnode(GOUT, 42, 0, 24) },
  { pnode(GPIO, 42, 0, BSLIPMAX, 2, -1), rnode(GIN, 42, 0, 7) },
  { pnode(GPIO, 42, 0, CEIN, 2, -1), rnode(GOUT, 42, 0, 20) },
  { pnode(GPIO, 42, 0, CEOUT, 2, -1), rnode(GOUT, 42, 0, 13) },
  { pnode(GPIO, 42, 0, SCLR, 2, -1), rnode(GOUT, 42, 0, 25) },
  { pnode(GPIO, 42, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 42, 0, 5) },
  { pnode(GPIO, 42, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 42, 0, 7) },
  { pnode(GPIO, 42, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 42, 0, 1) },
  { pnode(GPIO, 42, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 42, 0, 3) },
  { pnode(GPIO, 42, 0, DATAOUT, 3, 4), rnode(GIN, 42, 0, 6) },
  { pnode(GPIO, 42, 0, BSLIPMAX, 3, -1), rnode(GIN, 42, 0, 1) },
  { pnode(GPIO, 42, 0, CEIN, 3, -1), rnode(GOUT, 42, 0, 5) },
  { pnode(GPIO, 42, 0, CEOUT, 3, -1), rnode(GOUT, 42, 0, 4) },
  { pnode(GPIO, 42, 0, ACLR, 3, -1), rnode(GOUT, 42, 0, 12) },
  { pnode(GPIO, 42, 0, SCLR, 3, -1), rnode(GOUT, 42, 0, 1) },
  { pnode(GPIO, 42, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 42, 0, 4) },
  { pnode(GPIO, 42, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 42, 0, 6) },
  { pnode(GPIO, 42, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 42, 0, 0) },
  { pnode(GPIO, 42, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 42, 0, 2) },
  { pnode(GPIO, 44, 0, DATAOUT, 0, 4), rnode(GIN, 44, 0, 14) },
  { pnode(GPIO, 44, 0, BSLIPMAX, 0, -1), rnode(GIN, 44, 0, 19) },
  { pnode(GPIO, 44, 0, CEIN, 0, -1), rnode(GOUT, 44, 0, 27) },
  { pnode(GPIO, 44, 0, CEOUT, 0, -1), rnode(GOUT, 44, 0, 45) },
  { pnode(GPIO, 44, 0, ACLR, 0, -1), rnode(GOUT, 44, 0, 28) },
  { pnode(GPIO, 44, 0, SCLR, 0, -1), rnode(GOUT, 44, 0, 31) },
  { pnode(GPIO, 44, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 44, 0, 10) },
  { pnode(GPIO, 44, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 44, 0, 8) },
  { pnode(GPIO, 44, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 44, 0, 14) },
  { pnode(GPIO, 44, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 44, 0, 12) },
  { pnode(GPIO, 44, 0, DATAOUT, 1, 4), rnode(GIN, 44, 0, 20) },
  { pnode(GPIO, 44, 0, BSLIPMAX, 1, -1), rnode(GIN, 44, 0, 25) },
  { pnode(GPIO, 44, 0, CEIN, 1, -1), rnode(GOUT, 44, 0, 51) },
  { pnode(GPIO, 44, 0, CEOUT, 1, -1), rnode(GOUT, 44, 0, 50) },
  { pnode(GPIO, 44, 0, ACLR, 1, -1), rnode(GOUT, 44, 0, 42) },
  { pnode(GPIO, 44, 0, SCLR, 1, -1), rnode(GOUT, 44, 0, 46) },
  { pnode(GPIO, 44, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 44, 0, 11) },
  { pnode(GPIO, 44, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 44, 0, 9) },
  { pnode(GPIO, 44, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 44, 0, 15) },
  { pnode(GPIO, 44, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 44, 0, 13) },
  { pnode(GPIO, 44, 0, DATAOUT, 2, 4), rnode(GIN, 44, 0, 12) },
  { pnode(GPIO, 44, 0, BSLIPMAX, 2, -1), rnode(GIN, 44, 0, 7) },
  { pnode(GPIO, 44, 0, CEIN, 2, -1), rnode(GOUT, 44, 0, 20) },
  { pnode(GPIO, 44, 0, CEOUT, 2, -1), rnode(GOUT, 44, 0, 13) },
  { pnode(GPIO, 44, 0, ACLR, 2, -1), rnode(GOUT, 44, 0, 21) },
  { pnode(GPIO, 44, 0, SCLR, 2, -1), rnode(GOUT, 44, 0, 25) },
  { pnode(GPIO, 44, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 44, 0, 5) },
  { pnode(GPIO, 44, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 44, 0, 7) },
  { pnode(GPIO, 44, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 44, 0, 1) },
  { pnode(GPIO, 44, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 44, 0, 3) },
  { pnode(GPIO, 44, 0, DATAOUT, 3, 0), rnode(GIN, 44, 0, 2) },
  { pnode(GPIO, 44, 0, DATAOUT, 3, 1), rnode(GIN, 44, 0, 3) },
  { pnode(GPIO, 44, 0, DATAOUT, 3, 2), rnode(GIN, 44, 0, 4) },
  { pnode(GPIO, 44, 0, DATAOUT, 3, 3), rnode(GIN, 44, 0, 5) },
  { pnode(GPIO, 44, 0, DATAOUT, 3, 4), rnode(GIN, 44, 0, 6) },
  { pnode(GPIO, 44, 0, OEIN, 3, 0), rnode(GOUT, 44, 0, 2) },
  { pnode(GPIO, 44, 0, OEIN, 3, 1), rnode(GOUT, 44, 0, 19) },
  { pnode(GPIO, 44, 0, BSLIPMAX, 3, -1), rnode(GIN, 44, 0, 1) },
  { pnode(GPIO, 44, 0, CEIN, 3, -1), rnode(GOUT, 44, 0, 5) },
  { pnode(GPIO, 44, 0, CEOUT, 3, -1), rnode(GOUT, 44, 0, 4) },
  { pnode(GPIO, 44, 0, SCLR, 3, -1), rnode(GOUT, 44, 0, 1) },
  { pnode(GPIO, 44, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 44, 0, 4) },
  { pnode(GPIO, 44, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 44, 0, 6) },
  { pnode(GPIO, 44, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 44, 0, 0) },
  { pnode(GPIO, 44, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 44, 0, 2) },
  { pnode(GPIO, 46, 0, DATAIN, 0, 0), rnode(GOUT, 46, 0, 44) },
  { pnode(GPIO, 46, 0, DATAIN, 0, 1), rnode(GOUT, 46, 0, 34) },
  { pnode(GPIO, 46, 0, DATAIN, 0, 2), rnode(GOUT, 46, 0, 43) },
  { pnode(GPIO, 46, 0, DATAIN, 0, 3), rnode(GOUT, 46, 0, 29) },
  { pnode(GPIO, 46, 0, DATAOUT, 0, 0), rnode(GIN, 46, 0, 18) },
  { pnode(GPIO, 46, 0, DATAOUT, 0, 1), rnode(GIN, 46, 0, 17) },
  { pnode(GPIO, 46, 0, DATAOUT, 0, 2), rnode(GIN, 46, 0, 16) },
  { pnode(GPIO, 46, 0, DATAOUT, 0, 3), rnode(GIN, 46, 0, 15) },
  { pnode(GPIO, 46, 0, DATAOUT, 0, 4), rnode(GIN, 46, 0, 14) },
  { pnode(GPIO, 46, 0, OEIN, 0, 0), rnode(GOUT, 46, 0, 38) },
  { pnode(GPIO, 46, 0, OEIN, 0, 1), rnode(GOUT, 46, 0, 30) },
  { pnode(GPIO, 46, 0, BSLIPMAX, 0, -1), rnode(GIN, 46, 0, 19) },
  { pnode(GPIO, 46, 0, CEIN, 0, -1), rnode(GOUT, 46, 0, 27) },
  { pnode(GPIO, 46, 0, CEOUT, 0, -1), rnode(GOUT, 46, 0, 45) },
  { pnode(GPIO, 46, 0, ACLR, 0, -1), rnode(GOUT, 46, 0, 28) },
  { pnode(GPIO, 46, 0, SCLR, 0, -1), rnode(GOUT, 46, 0, 31) },
  { pnode(GPIO, 46, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 46, 0, 10) },
  { pnode(GPIO, 46, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 46, 0, 8) },
  { pnode(GPIO, 46, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 46, 0, 14) },
  { pnode(GPIO, 46, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 46, 0, 12) },
  { pnode(GPIO, 46, 0, DATAIN, 1, 0), rnode(GOUT, 46, 0, 49) },
  { pnode(GPIO, 46, 0, DATAIN, 1, 1), rnode(GOUT, 46, 0, 41) },
  { pnode(GPIO, 46, 0, DATAIN, 1, 2), rnode(GOUT, 46, 0, 48) },
  { pnode(GPIO, 46, 0, DATAIN, 1, 3), rnode(GOUT, 46, 0, 40) },
  { pnode(GPIO, 46, 0, DATAOUT, 1, 0), rnode(GIN, 46, 0, 24) },
  { pnode(GPIO, 46, 0, DATAOUT, 1, 1), rnode(GIN, 46, 0, 23) },
  { pnode(GPIO, 46, 0, DATAOUT, 1, 2), rnode(GIN, 46, 0, 22) },
  { pnode(GPIO, 46, 0, DATAOUT, 1, 3), rnode(GIN, 46, 0, 21) },
  { pnode(GPIO, 46, 0, DATAOUT, 1, 4), rnode(GIN, 46, 0, 20) },
  { pnode(GPIO, 46, 0, OEIN, 1, 0), rnode(GOUT, 46, 0, 47) },
  { pnode(GPIO, 46, 0, OEIN, 1, 1), rnode(GOUT, 46, 0, 39) },
  { pnode(GPIO, 46, 0, BSLIPMAX, 1, -1), rnode(GIN, 46, 0, 25) },
  { pnode(GPIO, 46, 0, CEIN, 1, -1), rnode(GOUT, 46, 0, 51) },
  { pnode(GPIO, 46, 0, CEOUT, 1, -1), rnode(GOUT, 46, 0, 50) },
  { pnode(GPIO, 46, 0, ACLR, 1, -1), rnode(GOUT, 46, 0, 42) },
  { pnode(GPIO, 46, 0, SCLR, 1, -1), rnode(GOUT, 46, 0, 46) },
  { pnode(GPIO, 46, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 46, 0, 11) },
  { pnode(GPIO, 46, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 46, 0, 9) },
  { pnode(GPIO, 46, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 46, 0, 15) },
  { pnode(GPIO, 46, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 46, 0, 13) },
  { pnode(GPIO, 46, 0, DATAOUT, 2, 0), rnode(GIN, 46, 0, 8) },
  { pnode(GPIO, 46, 0, DATAOUT, 2, 1), rnode(GIN, 46, 0, 9) },
  { pnode(GPIO, 46, 0, DATAOUT, 2, 2), rnode(GIN, 46, 0, 10) },
  { pnode(GPIO, 46, 0, DATAOUT, 2, 3), rnode(GIN, 46, 0, 11) },
  { pnode(GPIO, 46, 0, DATAOUT, 2, 4), rnode(GIN, 46, 0, 12) },
  { pnode(GPIO, 46, 0, OEIN, 2, 0), rnode(GOUT, 46, 0, 16) },
  { pnode(GPIO, 46, 0, OEIN, 2, 1), rnode(GOUT, 46, 0, 24) },
  { pnode(GPIO, 46, 0, BSLIPMAX, 2, -1), rnode(GIN, 46, 0, 7) },
  { pnode(GPIO, 46, 0, CEIN, 2, -1), rnode(GOUT, 46, 0, 20) },
  { pnode(GPIO, 46, 0, CEOUT, 2, -1), rnode(GOUT, 46, 0, 13) },
  { pnode(GPIO, 46, 0, ACLR, 2, -1), rnode(GOUT, 46, 0, 21) },
  { pnode(GPIO, 46, 0, SCLR, 2, -1), rnode(GOUT, 46, 0, 25) },
  { pnode(GPIO, 46, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 46, 0, 5) },
  { pnode(GPIO, 46, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 46, 0, 7) },
  { pnode(GPIO, 46, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 46, 0, 1) },
  { pnode(GPIO, 46, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 46, 0, 3) },
  { pnode(GPIO, 46, 0, DATAOUT, 3, 4), rnode(GIN, 46, 0, 6) },
  { pnode(GPIO, 46, 0, BSLIPMAX, 3, -1), rnode(GIN, 46, 0, 1) },
  { pnode(GPIO, 46, 0, CEIN, 3, -1), rnode(GOUT, 46, 0, 5) },
  { pnode(GPIO, 46, 0, CEOUT, 3, -1), rnode(GOUT, 46, 0, 4) },
  { pnode(GPIO, 46, 0, ACLR, 3, -1), rnode(GOUT, 46, 0, 12) },
  { pnode(GPIO, 46, 0, SCLR, 3, -1), rnode(GOUT, 46, 0, 1) },
  { pnode(GPIO, 46, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 46, 0, 4) },
  { pnode(GPIO, 46, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 46, 0, 6) },
  { pnode(GPIO, 46, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 46, 0, 0) },
  { pnode(GPIO, 46, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 46, 0, 2) },
  { pnode(GPIO, 48, 0, DATAOUT, 0, 4), rnode(GIN, 48, 0, 14) },
  { pnode(GPIO, 48, 0, BSLIPMAX, 0, -1), rnode(GIN, 48, 0, 19) },
  { pnode(GPIO, 48, 0, CEIN, 0, -1), rnode(GOUT, 48, 0, 27) },
  { pnode(GPIO, 48, 0, CEOUT, 0, -1), rnode(GOUT, 48, 0, 45) },
  { pnode(GPIO, 48, 0, ACLR, 0, -1), rnode(GOUT, 48, 0, 28) },
  { pnode(GPIO, 48, 0, SCLR, 0, -1), rnode(GOUT, 48, 0, 31) },
  { pnode(GPIO, 48, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 48, 0, 10) },
  { pnode(GPIO, 48, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 48, 0, 8) },
  { pnode(GPIO, 48, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 48, 0, 14) },
  { pnode(GPIO, 48, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 48, 0, 12) },
  { pnode(GPIO, 48, 0, DATAOUT, 1, 4), rnode(GIN, 48, 0, 20) },
  { pnode(GPIO, 48, 0, BSLIPMAX, 1, -1), rnode(GIN, 48, 0, 25) },
  { pnode(GPIO, 48, 0, CEIN, 1, -1), rnode(GOUT, 48, 0, 51) },
  { pnode(GPIO, 48, 0, CEOUT, 1, -1), rnode(GOUT, 48, 0, 50) },
  { pnode(GPIO, 48, 0, ACLR, 1, -1), rnode(GOUT, 48, 0, 42) },
  { pnode(GPIO, 48, 0, SCLR, 1, -1), rnode(GOUT, 48, 0, 46) },
  { pnode(GPIO, 48, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 48, 0, 11) },
  { pnode(GPIO, 48, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 48, 0, 9) },
  { pnode(GPIO, 48, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 48, 0, 15) },
  { pnode(GPIO, 48, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 48, 0, 13) },
  { pnode(GPIO, 48, 0, DATAOUT, 2, 4), rnode(GIN, 48, 0, 12) },
  { pnode(GPIO, 48, 0, BSLIPMAX, 2, -1), rnode(GIN, 48, 0, 7) },
  { pnode(GPIO, 48, 0, CEIN, 2, -1), rnode(GOUT, 48, 0, 20) },
  { pnode(GPIO, 48, 0, CEOUT, 2, -1), rnode(GOUT, 48, 0, 13) },
  { pnode(GPIO, 48, 0, ACLR, 2, -1), rnode(GOUT, 48, 0, 21) },
  { pnode(GPIO, 48, 0, SCLR, 2, -1), rnode(GOUT, 48, 0, 25) },
  { pnode(GPIO, 48, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 48, 0, 5) },
  { pnode(GPIO, 48, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 48, 0, 7) },
  { pnode(GPIO, 48, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 48, 0, 1) },
  { pnode(GPIO, 48, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 48, 0, 3) },
  { pnode(GPIO, 48, 0, DATAIN, 3, 0), rnode(GOUT, 48, 0, 3) },
  { pnode(GPIO, 48, 0, DATAIN, 3, 1), rnode(GOUT, 48, 0, 17) },
  { pnode(GPIO, 48, 0, DATAIN, 3, 2), rnode(GOUT, 48, 0, 8) },
  { pnode(GPIO, 48, 0, DATAIN, 3, 3), rnode(GOUT, 48, 0, 18) },
  { pnode(GPIO, 48, 0, DATAOUT, 3, 0), rnode(GIN, 48, 0, 2) },
  { pnode(GPIO, 48, 0, DATAOUT, 3, 1), rnode(GIN, 48, 0, 3) },
  { pnode(GPIO, 48, 0, DATAOUT, 3, 2), rnode(GIN, 48, 0, 4) },
  { pnode(GPIO, 48, 0, DATAOUT, 3, 3), rnode(GIN, 48, 0, 5) },
  { pnode(GPIO, 48, 0, DATAOUT, 3, 4), rnode(GIN, 48, 0, 6) },
  { pnode(GPIO, 48, 0, OEIN, 3, 0), rnode(GOUT, 48, 0, 2) },
  { pnode(GPIO, 48, 0, OEIN, 3, 1), rnode(GOUT, 48, 0, 19) },
  { pnode(GPIO, 48, 0, BSLIPMAX, 3, -1), rnode(GIN, 48, 0, 1) },
  { pnode(GPIO, 48, 0, CEIN, 3, -1), rnode(GOUT, 48, 0, 5) },
  { pnode(GPIO, 48, 0, CEOUT, 3, -1), rnode(GOUT, 48, 0, 4) },
  { pnode(GPIO, 48, 0, ACLR, 3, -1), rnode(GOUT, 48, 0, 12) },
  { pnode(GPIO, 48, 0, SCLR, 3, -1), rnode(GOUT, 48, 0, 1) },
  { pnode(GPIO, 48, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 48, 0, 4) },
  { pnode(GPIO, 48, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 48, 0, 6) },
  { pnode(GPIO, 48, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 48, 0, 0) },
  { pnode(GPIO, 48, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 48, 0, 2) },
  { pnode(GPIO, 50, 0, DATAOUT, 0, 0), rnode(GIN, 50, 0, 18) },
  { pnode(GPIO, 50, 0, DATAOUT, 0, 1), rnode(GIN, 50, 0, 17) },
  { pnode(GPIO, 50, 0, DATAOUT, 0, 2), rnode(GIN, 50, 0, 16) },
  { pnode(GPIO, 50, 0, DATAOUT, 0, 3), rnode(GIN, 50, 0, 15) },
  { pnode(GPIO, 50, 0, DATAOUT, 0, 4), rnode(GIN, 50, 0, 14) },
  { pnode(GPIO, 50, 0, BSLIPMAX, 0, -1), rnode(GIN, 50, 0, 19) },
  { pnode(GPIO, 50, 0, CEIN, 0, -1), rnode(GOUT, 50, 0, 27) },
  { pnode(GPIO, 50, 0, CEOUT, 0, -1), rnode(GOUT, 50, 0, 45) },
  { pnode(GPIO, 50, 0, ACLR, 0, -1), rnode(GOUT, 50, 0, 28) },
  { pnode(GPIO, 50, 0, SCLR, 0, -1), rnode(GOUT, 50, 0, 31) },
  { pnode(GPIO, 50, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 50, 0, 10) },
  { pnode(GPIO, 50, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 50, 0, 8) },
  { pnode(GPIO, 50, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 50, 0, 14) },
  { pnode(GPIO, 50, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 50, 0, 12) },
  { pnode(GPIO, 50, 0, DATAOUT, 1, 0), rnode(GIN, 50, 0, 24) },
  { pnode(GPIO, 50, 0, DATAOUT, 1, 1), rnode(GIN, 50, 0, 23) },
  { pnode(GPIO, 50, 0, DATAOUT, 1, 2), rnode(GIN, 50, 0, 22) },
  { pnode(GPIO, 50, 0, DATAOUT, 1, 3), rnode(GIN, 50, 0, 21) },
  { pnode(GPIO, 50, 0, DATAOUT, 1, 4), rnode(GIN, 50, 0, 20) },
  { pnode(GPIO, 50, 0, BSLIPMAX, 1, -1), rnode(GIN, 50, 0, 25) },
  { pnode(GPIO, 50, 0, CEIN, 1, -1), rnode(GOUT, 50, 0, 51) },
  { pnode(GPIO, 50, 0, CEOUT, 1, -1), rnode(GOUT, 50, 0, 50) },
  { pnode(GPIO, 50, 0, ACLR, 1, -1), rnode(GOUT, 50, 0, 42) },
  { pnode(GPIO, 50, 0, SCLR, 1, -1), rnode(GOUT, 50, 0, 46) },
  { pnode(GPIO, 50, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 50, 0, 11) },
  { pnode(GPIO, 50, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 50, 0, 9) },
  { pnode(GPIO, 50, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 50, 0, 15) },
  { pnode(GPIO, 50, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 50, 0, 13) },
  { pnode(GPIO, 50, 0, DATAOUT, 2, 0), rnode(GIN, 50, 0, 8) },
  { pnode(GPIO, 50, 0, DATAOUT, 2, 1), rnode(GIN, 50, 0, 9) },
  { pnode(GPIO, 50, 0, DATAOUT, 2, 2), rnode(GIN, 50, 0, 10) },
  { pnode(GPIO, 50, 0, DATAOUT, 2, 3), rnode(GIN, 50, 0, 11) },
  { pnode(GPIO, 50, 0, DATAOUT, 2, 4), rnode(GIN, 50, 0, 12) },
  { pnode(GPIO, 50, 0, OEIN, 2, 0), rnode(GOUT, 50, 0, 16) },
  { pnode(GPIO, 50, 0, OEIN, 2, 1), rnode(GOUT, 50, 0, 24) },
  { pnode(GPIO, 50, 0, BSLIPMAX, 2, -1), rnode(GIN, 50, 0, 7) },
  { pnode(GPIO, 50, 0, CEIN, 2, -1), rnode(GOUT, 50, 0, 20) },
  { pnode(GPIO, 50, 0, CEOUT, 2, -1), rnode(GOUT, 50, 0, 13) },
  { pnode(GPIO, 50, 0, SCLR, 2, -1), rnode(GOUT, 50, 0, 25) },
  { pnode(GPIO, 50, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 50, 0, 5) },
  { pnode(GPIO, 50, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 50, 0, 7) },
  { pnode(GPIO, 50, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 50, 0, 1) },
  { pnode(GPIO, 50, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 50, 0, 3) },
  { pnode(GPIO, 50, 0, DATAOUT, 3, 4), rnode(GIN, 50, 0, 6) },
  { pnode(GPIO, 50, 0, BSLIPMAX, 3, -1), rnode(GIN, 50, 0, 1) },
  { pnode(GPIO, 50, 0, CEIN, 3, -1), rnode(GOUT, 50, 0, 5) },
  { pnode(GPIO, 50, 0, CEOUT, 3, -1), rnode(GOUT, 50, 0, 4) },
  { pnode(GPIO, 50, 0, ACLR, 3, -1), rnode(GOUT, 50, 0, 12) },
  { pnode(GPIO, 50, 0, SCLR, 3, -1), rnode(GOUT, 50, 0, 1) },
  { pnode(GPIO, 50, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 50, 0, 4) },
  { pnode(GPIO, 50, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 50, 0, 6) },
  { pnode(GPIO, 50, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 50, 0, 0) },
  { pnode(GPIO, 50, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 50, 0, 2) },
  { pnode(GPIO, 51, 0, DATAOUT, 0, 4), rnode(GIN, 51, 0, 14) },
  { pnode(GPIO, 51, 0, BSLIPMAX, 0, -1), rnode(GIN, 51, 0, 19) },
  { pnode(GPIO, 51, 0, CEIN, 0, -1), rnode(GOUT, 51, 0, 27) },
  { pnode(GPIO, 51, 0, CEOUT, 0, -1), rnode(GOUT, 51, 0, 45) },
  { pnode(GPIO, 51, 0, ACLR, 0, -1), rnode(GOUT, 51, 0, 28) },
  { pnode(GPIO, 51, 0, SCLR, 0, -1), rnode(GOUT, 51, 0, 31) },
  { pnode(GPIO, 51, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 51, 0, 10) },
  { pnode(GPIO, 51, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 51, 0, 8) },
  { pnode(GPIO, 51, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 51, 0, 14) },
  { pnode(GPIO, 51, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 51, 0, 12) },
  { pnode(GPIO, 51, 0, DATAOUT, 1, 4), rnode(GIN, 51, 0, 20) },
  { pnode(GPIO, 51, 0, BSLIPMAX, 1, -1), rnode(GIN, 51, 0, 25) },
  { pnode(GPIO, 51, 0, CEIN, 1, -1), rnode(GOUT, 51, 0, 51) },
  { pnode(GPIO, 51, 0, CEOUT, 1, -1), rnode(GOUT, 51, 0, 50) },
  { pnode(GPIO, 51, 0, ACLR, 1, -1), rnode(GOUT, 51, 0, 42) },
  { pnode(GPIO, 51, 0, SCLR, 1, -1), rnode(GOUT, 51, 0, 46) },
  { pnode(GPIO, 51, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 51, 0, 11) },
  { pnode(GPIO, 51, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 51, 0, 9) },
  { pnode(GPIO, 51, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 51, 0, 15) },
  { pnode(GPIO, 51, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 51, 0, 13) },
  { pnode(GPIO, 51, 0, DATAOUT, 2, 4), rnode(GIN, 51, 0, 12) },
  { pnode(GPIO, 51, 0, BSLIPMAX, 2, -1), rnode(GIN, 51, 0, 7) },
  { pnode(GPIO, 51, 0, CEIN, 2, -1), rnode(GOUT, 51, 0, 20) },
  { pnode(GPIO, 51, 0, CEOUT, 2, -1), rnode(GOUT, 51, 0, 13) },
  { pnode(GPIO, 51, 0, ACLR, 2, -1), rnode(GOUT, 51, 0, 21) },
  { pnode(GPIO, 51, 0, SCLR, 2, -1), rnode(GOUT, 51, 0, 25) },
  { pnode(GPIO, 51, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 51, 0, 5) },
  { pnode(GPIO, 51, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 51, 0, 7) },
  { pnode(GPIO, 51, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 51, 0, 1) },
  { pnode(GPIO, 51, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 51, 0, 3) },
  { pnode(GPIO, 51, 0, DATAIN, 3, 0), rnode(GOUT, 51, 0, 3) },
  { pnode(GPIO, 51, 0, DATAIN, 3, 1), rnode(GOUT, 51, 0, 17) },
  { pnode(GPIO, 51, 0, DATAIN, 3, 2), rnode(GOUT, 51, 0, 8) },
  { pnode(GPIO, 51, 0, DATAIN, 3, 3), rnode(GOUT, 51, 0, 18) },
  { pnode(GPIO, 51, 0, DATAOUT, 3, 0), rnode(GIN, 51, 0, 2) },
  { pnode(GPIO, 51, 0, DATAOUT, 3, 1), rnode(GIN, 51, 0, 3) },
  { pnode(GPIO, 51, 0, DATAOUT, 3, 2), rnode(GIN, 51, 0, 4) },
  { pnode(GPIO, 51, 0, DATAOUT, 3, 3), rnode(GIN, 51, 0, 5) },
  { pnode(GPIO, 51, 0, DATAOUT, 3, 4), rnode(GIN, 51, 0, 6) },
  { pnode(GPIO, 51, 0, OEIN, 3, 0), rnode(GOUT, 51, 0, 2) },
  { pnode(GPIO, 51, 0, OEIN, 3, 1), rnode(GOUT, 51, 0, 19) },
  { pnode(GPIO, 51, 0, BSLIPMAX, 3, -1), rnode(GIN, 51, 0, 1) },
  { pnode(GPIO, 51, 0, CEIN, 3, -1), rnode(GOUT, 51, 0, 5) },
  { pnode(GPIO, 51, 0, CEOUT, 3, -1), rnode(GOUT, 51, 0, 4) },
  { pnode(GPIO, 51, 0, ACLR, 3, -1), rnode(GOUT, 51, 0, 12) },
  { pnode(GPIO, 51, 0, SCLR, 3, -1), rnode(GOUT, 51, 0, 1) },
  { pnode(GPIO, 51, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 51, 0, 4) },
  { pnode(GPIO, 51, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 51, 0, 6) },
  { pnode(GPIO, 51, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 51, 0, 0) },
  { pnode(GPIO, 51, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 51, 0, 2) },
  { pnode(GPIO, 53, 0, DATAIN, 0, 0), rnode(GOUT, 53, 0, 44) },
  { pnode(GPIO, 53, 0, DATAIN, 0, 1), rnode(GOUT, 53, 0, 34) },
  { pnode(GPIO, 53, 0, DATAIN, 0, 2), rnode(GOUT, 53, 0, 43) },
  { pnode(GPIO, 53, 0, DATAIN, 0, 3), rnode(GOUT, 53, 0, 29) },
  { pnode(GPIO, 53, 0, DATAOUT, 0, 0), rnode(GIN, 53, 0, 18) },
  { pnode(GPIO, 53, 0, DATAOUT, 0, 1), rnode(GIN, 53, 0, 17) },
  { pnode(GPIO, 53, 0, DATAOUT, 0, 2), rnode(GIN, 53, 0, 16) },
  { pnode(GPIO, 53, 0, DATAOUT, 0, 3), rnode(GIN, 53, 0, 15) },
  { pnode(GPIO, 53, 0, DATAOUT, 0, 4), rnode(GIN, 53, 0, 14) },
  { pnode(GPIO, 53, 0, OEIN, 0, 0), rnode(GOUT, 53, 0, 38) },
  { pnode(GPIO, 53, 0, OEIN, 0, 1), rnode(GOUT, 53, 0, 30) },
  { pnode(GPIO, 53, 0, BSLIPMAX, 0, -1), rnode(GIN, 53, 0, 19) },
  { pnode(GPIO, 53, 0, CEIN, 0, -1), rnode(GOUT, 53, 0, 27) },
  { pnode(GPIO, 53, 0, CEOUT, 0, -1), rnode(GOUT, 53, 0, 45) },
  { pnode(GPIO, 53, 0, ACLR, 0, -1), rnode(GOUT, 53, 0, 28) },
  { pnode(GPIO, 53, 0, SCLR, 0, -1), rnode(GOUT, 53, 0, 31) },
  { pnode(GPIO, 53, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 53, 0, 10) },
  { pnode(GPIO, 53, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 53, 0, 8) },
  { pnode(GPIO, 53, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 53, 0, 14) },
  { pnode(GPIO, 53, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 53, 0, 12) },
  { pnode(GPIO, 53, 0, DATAIN, 1, 0), rnode(GOUT, 53, 0, 49) },
  { pnode(GPIO, 53, 0, DATAIN, 1, 1), rnode(GOUT, 53, 0, 41) },
  { pnode(GPIO, 53, 0, DATAIN, 1, 2), rnode(GOUT, 53, 0, 48) },
  { pnode(GPIO, 53, 0, DATAIN, 1, 3), rnode(GOUT, 53, 0, 40) },
  { pnode(GPIO, 53, 0, DATAOUT, 1, 0), rnode(GIN, 53, 0, 24) },
  { pnode(GPIO, 53, 0, DATAOUT, 1, 1), rnode(GIN, 53, 0, 23) },
  { pnode(GPIO, 53, 0, DATAOUT, 1, 2), rnode(GIN, 53, 0, 22) },
  { pnode(GPIO, 53, 0, DATAOUT, 1, 3), rnode(GIN, 53, 0, 21) },
  { pnode(GPIO, 53, 0, DATAOUT, 1, 4), rnode(GIN, 53, 0, 20) },
  { pnode(GPIO, 53, 0, OEIN, 1, 0), rnode(GOUT, 53, 0, 47) },
  { pnode(GPIO, 53, 0, OEIN, 1, 1), rnode(GOUT, 53, 0, 39) },
  { pnode(GPIO, 53, 0, BSLIPMAX, 1, -1), rnode(GIN, 53, 0, 25) },
  { pnode(GPIO, 53, 0, CEIN, 1, -1), rnode(GOUT, 53, 0, 51) },
  { pnode(GPIO, 53, 0, CEOUT, 1, -1), rnode(GOUT, 53, 0, 50) },
  { pnode(GPIO, 53, 0, ACLR, 1, -1), rnode(GOUT, 53, 0, 42) },
  { pnode(GPIO, 53, 0, SCLR, 1, -1), rnode(GOUT, 53, 0, 46) },
  { pnode(GPIO, 53, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 53, 0, 11) },
  { pnode(GPIO, 53, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 53, 0, 9) },
  { pnode(GPIO, 53, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 53, 0, 15) },
  { pnode(GPIO, 53, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 53, 0, 13) },
  { pnode(GPIO, 53, 0, DATAOUT, 2, 0), rnode(GIN, 53, 0, 8) },
  { pnode(GPIO, 53, 0, DATAOUT, 2, 1), rnode(GIN, 53, 0, 9) },
  { pnode(GPIO, 53, 0, DATAOUT, 2, 2), rnode(GIN, 53, 0, 10) },
  { pnode(GPIO, 53, 0, DATAOUT, 2, 3), rnode(GIN, 53, 0, 11) },
  { pnode(GPIO, 53, 0, DATAOUT, 2, 4), rnode(GIN, 53, 0, 12) },
  { pnode(GPIO, 53, 0, OEIN, 2, 0), rnode(GOUT, 53, 0, 16) },
  { pnode(GPIO, 53, 0, OEIN, 2, 1), rnode(GOUT, 53, 0, 24) },
  { pnode(GPIO, 53, 0, BSLIPMAX, 2, -1), rnode(GIN, 53, 0, 7) },
  { pnode(GPIO, 53, 0, CEIN, 2, -1), rnode(GOUT, 53, 0, 20) },
  { pnode(GPIO, 53, 0, CEOUT, 2, -1), rnode(GOUT, 53, 0, 13) },
  { pnode(GPIO, 53, 0, ACLR, 2, -1), rnode(GOUT, 53, 0, 21) },
  { pnode(GPIO, 53, 0, SCLR, 2, -1), rnode(GOUT, 53, 0, 25) },
  { pnode(GPIO, 53, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 53, 0, 5) },
  { pnode(GPIO, 53, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 53, 0, 7) },
  { pnode(GPIO, 53, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 53, 0, 1) },
  { pnode(GPIO, 53, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 53, 0, 3) },
  { pnode(GPIO, 53, 0, DATAOUT, 3, 4), rnode(GIN, 53, 0, 6) },
  { pnode(GPIO, 53, 0, BSLIPMAX, 3, -1), rnode(GIN, 53, 0, 1) },
  { pnode(GPIO, 53, 0, CEIN, 3, -1), rnode(GOUT, 53, 0, 5) },
  { pnode(GPIO, 53, 0, CEOUT, 3, -1), rnode(GOUT, 53, 0, 4) },
  { pnode(GPIO, 53, 0, ACLR, 3, -1), rnode(GOUT, 53, 0, 12) },
  { pnode(GPIO, 53, 0, SCLR, 3, -1), rnode(GOUT, 53, 0, 1) },
  { pnode(GPIO, 53, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 53, 0, 4) },
  { pnode(GPIO, 53, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 53, 0, 6) },
  { pnode(GPIO, 53, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 53, 0, 0) },
  { pnode(GPIO, 53, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 53, 0, 2) },
  { pnode(GPIO, 55, 0, DATAOUT, 0, 4), rnode(GIN, 55, 0, 14) },
  { pnode(GPIO, 55, 0, BSLIPMAX, 0, -1), rnode(GIN, 55, 0, 19) },
  { pnode(GPIO, 55, 0, CEIN, 0, -1), rnode(GOUT, 55, 0, 27) },
  { pnode(GPIO, 55, 0, CEOUT, 0, -1), rnode(GOUT, 55, 0, 45) },
  { pnode(GPIO, 55, 0, ACLR, 0, -1), rnode(GOUT, 55, 0, 28) },
  { pnode(GPIO, 55, 0, SCLR, 0, -1), rnode(GOUT, 55, 0, 31) },
  { pnode(GPIO, 55, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 55, 0, 10) },
  { pnode(GPIO, 55, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 55, 0, 8) },
  { pnode(GPIO, 55, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 55, 0, 14) },
  { pnode(GPIO, 55, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 55, 0, 12) },
  { pnode(GPIO, 55, 0, DATAOUT, 1, 4), rnode(GIN, 55, 0, 20) },
  { pnode(GPIO, 55, 0, BSLIPMAX, 1, -1), rnode(GIN, 55, 0, 25) },
  { pnode(GPIO, 55, 0, CEIN, 1, -1), rnode(GOUT, 55, 0, 51) },
  { pnode(GPIO, 55, 0, CEOUT, 1, -1), rnode(GOUT, 55, 0, 50) },
  { pnode(GPIO, 55, 0, ACLR, 1, -1), rnode(GOUT, 55, 0, 42) },
  { pnode(GPIO, 55, 0, SCLR, 1, -1), rnode(GOUT, 55, 0, 46) },
  { pnode(GPIO, 55, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 55, 0, 11) },
  { pnode(GPIO, 55, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 55, 0, 9) },
  { pnode(GPIO, 55, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 55, 0, 15) },
  { pnode(GPIO, 55, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 55, 0, 13) },
  { pnode(GPIO, 55, 0, DATAOUT, 2, 4), rnode(GIN, 55, 0, 12) },
  { pnode(GPIO, 55, 0, BSLIPMAX, 2, -1), rnode(GIN, 55, 0, 7) },
  { pnode(GPIO, 55, 0, CEIN, 2, -1), rnode(GOUT, 55, 0, 20) },
  { pnode(GPIO, 55, 0, CEOUT, 2, -1), rnode(GOUT, 55, 0, 13) },
  { pnode(GPIO, 55, 0, ACLR, 2, -1), rnode(GOUT, 55, 0, 21) },
  { pnode(GPIO, 55, 0, SCLR, 2, -1), rnode(GOUT, 55, 0, 25) },
  { pnode(GPIO, 55, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 55, 0, 5) },
  { pnode(GPIO, 55, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 55, 0, 7) },
  { pnode(GPIO, 55, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 55, 0, 1) },
  { pnode(GPIO, 55, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 55, 0, 3) },
  { pnode(GPIO, 55, 0, DATAIN, 3, 0), rnode(GOUT, 55, 0, 3) },
  { pnode(GPIO, 55, 0, DATAIN, 3, 1), rnode(GOUT, 55, 0, 17) },
  { pnode(GPIO, 55, 0, DATAIN, 3, 2), rnode(GOUT, 55, 0, 8) },
  { pnode(GPIO, 55, 0, DATAIN, 3, 3), rnode(GOUT, 55, 0, 18) },
  { pnode(GPIO, 55, 0, DATAOUT, 3, 0), rnode(GIN, 55, 0, 2) },
  { pnode(GPIO, 55, 0, DATAOUT, 3, 1), rnode(GIN, 55, 0, 3) },
  { pnode(GPIO, 55, 0, DATAOUT, 3, 2), rnode(GIN, 55, 0, 4) },
  { pnode(GPIO, 55, 0, DATAOUT, 3, 3), rnode(GIN, 55, 0, 5) },
  { pnode(GPIO, 55, 0, DATAOUT, 3, 4), rnode(GIN, 55, 0, 6) },
  { pnode(GPIO, 55, 0, OEIN, 3, 0), rnode(GOUT, 55, 0, 2) },
  { pnode(GPIO, 55, 0, OEIN, 3, 1), rnode(GOUT, 55, 0, 19) },
  { pnode(GPIO, 55, 0, BSLIPMAX, 3, -1), rnode(GIN, 55, 0, 1) },
  { pnode(GPIO, 55, 0, CEIN, 3, -1), rnode(GOUT, 55, 0, 5) },
  { pnode(GPIO, 55, 0, CEOUT, 3, -1), rnode(GOUT, 55, 0, 4) },
  { pnode(GPIO, 55, 0, ACLR, 3, -1), rnode(GOUT, 55, 0, 12) },
  { pnode(GPIO, 55, 0, SCLR, 3, -1), rnode(GOUT, 55, 0, 1) },
  { pnode(GPIO, 55, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 55, 0, 4) },
  { pnode(GPIO, 55, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 55, 0, 6) },
  { pnode(GPIO, 55, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 55, 0, 0) },
  { pnode(GPIO, 55, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 55, 0, 2) },
  { pnode(GPIO, 57, 0, DATAOUT, 0, 0), rnode(GIN, 57, 0, 18) },
  { pnode(GPIO, 57, 0, DATAOUT, 0, 1), rnode(GIN, 57, 0, 17) },
  { pnode(GPIO, 57, 0, DATAOUT, 0, 2), rnode(GIN, 57, 0, 16) },
  { pnode(GPIO, 57, 0, DATAOUT, 0, 3), rnode(GIN, 57, 0, 15) },
  { pnode(GPIO, 57, 0, DATAOUT, 0, 4), rnode(GIN, 57, 0, 14) },
  { pnode(GPIO, 57, 0, BSLIPMAX, 0, -1), rnode(GIN, 57, 0, 19) },
  { pnode(GPIO, 57, 0, CEIN, 0, -1), rnode(GOUT, 57, 0, 27) },
  { pnode(GPIO, 57, 0, CEOUT, 0, -1), rnode(GOUT, 57, 0, 45) },
  { pnode(GPIO, 57, 0, ACLR, 0, -1), rnode(GOUT, 57, 0, 28) },
  { pnode(GPIO, 57, 0, SCLR, 0, -1), rnode(GOUT, 57, 0, 31) },
  { pnode(GPIO, 57, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 57, 0, 10) },
  { pnode(GPIO, 57, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 57, 0, 8) },
  { pnode(GPIO, 57, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 57, 0, 14) },
  { pnode(GPIO, 57, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 57, 0, 12) },
  { pnode(GPIO, 57, 0, DATAOUT, 1, 0), rnode(GIN, 57, 0, 24) },
  { pnode(GPIO, 57, 0, DATAOUT, 1, 1), rnode(GIN, 57, 0, 23) },
  { pnode(GPIO, 57, 0, DATAOUT, 1, 2), rnode(GIN, 57, 0, 22) },
  { pnode(GPIO, 57, 0, DATAOUT, 1, 3), rnode(GIN, 57, 0, 21) },
  { pnode(GPIO, 57, 0, DATAOUT, 1, 4), rnode(GIN, 57, 0, 20) },
  { pnode(GPIO, 57, 0, BSLIPMAX, 1, -1), rnode(GIN, 57, 0, 25) },
  { pnode(GPIO, 57, 0, CEIN, 1, -1), rnode(GOUT, 57, 0, 51) },
  { pnode(GPIO, 57, 0, CEOUT, 1, -1), rnode(GOUT, 57, 0, 50) },
  { pnode(GPIO, 57, 0, ACLR, 1, -1), rnode(GOUT, 57, 0, 42) },
  { pnode(GPIO, 57, 0, SCLR, 1, -1), rnode(GOUT, 57, 0, 46) },
  { pnode(GPIO, 57, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 57, 0, 11) },
  { pnode(GPIO, 57, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 57, 0, 9) },
  { pnode(GPIO, 57, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 57, 0, 15) },
  { pnode(GPIO, 57, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 57, 0, 13) },
  { pnode(GPIO, 57, 0, DATAIN, 2, 0), rnode(GOUT, 57, 0, 14) },
  { pnode(GPIO, 57, 0, DATAIN, 2, 1), rnode(GOUT, 57, 0, 22) },
  { pnode(GPIO, 57, 0, DATAIN, 2, 2), rnode(GOUT, 57, 0, 15) },
  { pnode(GPIO, 57, 0, DATAIN, 2, 3), rnode(GOUT, 57, 0, 23) },
  { pnode(GPIO, 57, 0, DATAOUT, 2, 0), rnode(GIN, 57, 0, 8) },
  { pnode(GPIO, 57, 0, DATAOUT, 2, 1), rnode(GIN, 57, 0, 9) },
  { pnode(GPIO, 57, 0, DATAOUT, 2, 2), rnode(GIN, 57, 0, 10) },
  { pnode(GPIO, 57, 0, DATAOUT, 2, 3), rnode(GIN, 57, 0, 11) },
  { pnode(GPIO, 57, 0, DATAOUT, 2, 4), rnode(GIN, 57, 0, 12) },
  { pnode(GPIO, 57, 0, OEIN, 2, 0), rnode(GOUT, 57, 0, 16) },
  { pnode(GPIO, 57, 0, OEIN, 2, 1), rnode(GOUT, 57, 0, 24) },
  { pnode(GPIO, 57, 0, BSLIPMAX, 2, -1), rnode(GIN, 57, 0, 7) },
  { pnode(GPIO, 57, 0, CEIN, 2, -1), rnode(GOUT, 57, 0, 20) },
  { pnode(GPIO, 57, 0, CEOUT, 2, -1), rnode(GOUT, 57, 0, 13) },
  { pnode(GPIO, 57, 0, ACLR, 2, -1), rnode(GOUT, 57, 0, 21) },
  { pnode(GPIO, 57, 0, SCLR, 2, -1), rnode(GOUT, 57, 0, 25) },
  { pnode(GPIO, 57, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 57, 0, 5) },
  { pnode(GPIO, 57, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 57, 0, 7) },
  { pnode(GPIO, 57, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 57, 0, 1) },
  { pnode(GPIO, 57, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 57, 0, 3) },
  { pnode(GPIO, 57, 0, DATAOUT, 3, 4), rnode(GIN, 57, 0, 6) },
  { pnode(GPIO, 57, 0, BSLIPMAX, 3, -1), rnode(GIN, 57, 0, 1) },
  { pnode(GPIO, 57, 0, CEIN, 3, -1), rnode(GOUT, 57, 0, 5) },
  { pnode(GPIO, 57, 0, CEOUT, 3, -1), rnode(GOUT, 57, 0, 4) },
  { pnode(GPIO, 57, 0, ACLR, 3, -1), rnode(GOUT, 57, 0, 12) },
  { pnode(GPIO, 57, 0, SCLR, 3, -1), rnode(GOUT, 57, 0, 1) },
  { pnode(GPIO, 57, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 57, 0, 4) },
  { pnode(GPIO, 57, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 57, 0, 6) },
  { pnode(GPIO, 57, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 57, 0, 0) },
  { pnode(GPIO, 57, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 57, 0, 2) },
  { pnode(GPIO, 59, 0, DATAOUT, 0, 4), rnode(GIN, 59, 0, 14) },
  { pnode(GPIO, 59, 0, BSLIPMAX, 0, -1), rnode(GIN, 59, 0, 19) },
  { pnode(GPIO, 59, 0, CEIN, 0, -1), rnode(GOUT, 59, 0, 27) },
  { pnode(GPIO, 59, 0, CEOUT, 0, -1), rnode(GOUT, 59, 0, 45) },
  { pnode(GPIO, 59, 0, ACLR, 0, -1), rnode(GOUT, 59, 0, 28) },
  { pnode(GPIO, 59, 0, SCLR, 0, -1), rnode(GOUT, 59, 0, 31) },
  { pnode(GPIO, 59, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 59, 0, 10) },
  { pnode(GPIO, 59, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 59, 0, 8) },
  { pnode(GPIO, 59, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 59, 0, 14) },
  { pnode(GPIO, 59, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 59, 0, 12) },
  { pnode(GPIO, 59, 0, DATAOUT, 1, 4), rnode(GIN, 59, 0, 20) },
  { pnode(GPIO, 59, 0, BSLIPMAX, 1, -1), rnode(GIN, 59, 0, 25) },
  { pnode(GPIO, 59, 0, CEIN, 1, -1), rnode(GOUT, 59, 0, 51) },
  { pnode(GPIO, 59, 0, CEOUT, 1, -1), rnode(GOUT, 59, 0, 50) },
  { pnode(GPIO, 59, 0, ACLR, 1, -1), rnode(GOUT, 59, 0, 42) },
  { pnode(GPIO, 59, 0, SCLR, 1, -1), rnode(GOUT, 59, 0, 46) },
  { pnode(GPIO, 59, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 59, 0, 11) },
  { pnode(GPIO, 59, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 59, 0, 9) },
  { pnode(GPIO, 59, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 59, 0, 15) },
  { pnode(GPIO, 59, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 59, 0, 13) },
  { pnode(GPIO, 59, 0, DATAOUT, 2, 4), rnode(GIN, 59, 0, 12) },
  { pnode(GPIO, 59, 0, BSLIPMAX, 2, -1), rnode(GIN, 59, 0, 7) },
  { pnode(GPIO, 59, 0, CEIN, 2, -1), rnode(GOUT, 59, 0, 20) },
  { pnode(GPIO, 59, 0, CEOUT, 2, -1), rnode(GOUT, 59, 0, 13) },
  { pnode(GPIO, 59, 0, ACLR, 2, -1), rnode(GOUT, 59, 0, 21) },
  { pnode(GPIO, 59, 0, SCLR, 2, -1), rnode(GOUT, 59, 0, 25) },
  { pnode(GPIO, 59, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 59, 0, 5) },
  { pnode(GPIO, 59, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 59, 0, 7) },
  { pnode(GPIO, 59, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 59, 0, 1) },
  { pnode(GPIO, 59, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 59, 0, 3) },
  { pnode(GPIO, 59, 0, DATAIN, 3, 0), rnode(GOUT, 59, 0, 3) },
  { pnode(GPIO, 59, 0, DATAIN, 3, 1), rnode(GOUT, 59, 0, 17) },
  { pnode(GPIO, 59, 0, DATAIN, 3, 2), rnode(GOUT, 59, 0, 8) },
  { pnode(GPIO, 59, 0, DATAIN, 3, 3), rnode(GOUT, 59, 0, 18) },
  { pnode(GPIO, 59, 0, DATAOUT, 3, 0), rnode(GIN, 59, 0, 2) },
  { pnode(GPIO, 59, 0, DATAOUT, 3, 1), rnode(GIN, 59, 0, 3) },
  { pnode(GPIO, 59, 0, DATAOUT, 3, 2), rnode(GIN, 59, 0, 4) },
  { pnode(GPIO, 59, 0, DATAOUT, 3, 3), rnode(GIN, 59, 0, 5) },
  { pnode(GPIO, 59, 0, DATAOUT, 3, 4), rnode(GIN, 59, 0, 6) },
  { pnode(GPIO, 59, 0, OEIN, 3, 0), rnode(GOUT, 59, 0, 2) },
  { pnode(GPIO, 59, 0, OEIN, 3, 1), rnode(GOUT, 59, 0, 19) },
  { pnode(GPIO, 59, 0, BSLIPMAX, 3, -1), rnode(GIN, 59, 0, 1) },
  { pnode(GPIO, 59, 0, CEIN, 3, -1), rnode(GOUT, 59, 0, 5) },
  { pnode(GPIO, 59, 0, CEOUT, 3, -1), rnode(GOUT, 59, 0, 4) },
  { pnode(GPIO, 59, 0, ACLR, 3, -1), rnode(GOUT, 59, 0, 12) },
  { pnode(GPIO, 59, 0, SCLR, 3, -1), rnode(GOUT, 59, 0, 1) },
  { pnode(GPIO, 59, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 59, 0, 4) },
  { pnode(GPIO, 59, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 59, 0, 6) },
  { pnode(GPIO, 59, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 59, 0, 0) },
  { pnode(GPIO, 59, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 59, 0, 2) },
  { pnode(GPIO, 61, 0, DATAIN, 0, 0), rnode(GOUT, 61, 0, 44) },
  { pnode(GPIO, 61, 0, DATAIN, 0, 1), rnode(GOUT, 61, 0, 34) },
  { pnode(GPIO, 61, 0, DATAIN, 0, 2), rnode(GOUT, 61, 0, 43) },
  { pnode(GPIO, 61, 0, DATAIN, 0, 3), rnode(GOUT, 61, 0, 29) },
  { pnode(GPIO, 61, 0, DATAOUT, 0, 0), rnode(GIN, 61, 0, 18) },
  { pnode(GPIO, 61, 0, DATAOUT, 0, 1), rnode(GIN, 61, 0, 17) },
  { pnode(GPIO, 61, 0, DATAOUT, 0, 2), rnode(GIN, 61, 0, 16) },
  { pnode(GPIO, 61, 0, DATAOUT, 0, 3), rnode(GIN, 61, 0, 15) },
  { pnode(GPIO, 61, 0, DATAOUT, 0, 4), rnode(GIN, 61, 0, 14) },
  { pnode(GPIO, 61, 0, OEIN, 0, 0), rnode(GOUT, 61, 0, 38) },
  { pnode(GPIO, 61, 0, OEIN, 0, 1), rnode(GOUT, 61, 0, 30) },
  { pnode(GPIO, 61, 0, BSLIPMAX, 0, -1), rnode(GIN, 61, 0, 19) },
  { pnode(GPIO, 61, 0, CEIN, 0, -1), rnode(GOUT, 61, 0, 27) },
  { pnode(GPIO, 61, 0, CEOUT, 0, -1), rnode(GOUT, 61, 0, 45) },
  { pnode(GPIO, 61, 0, ACLR, 0, -1), rnode(GOUT, 61, 0, 28) },
  { pnode(GPIO, 61, 0, SCLR, 0, -1), rnode(GOUT, 61, 0, 31) },
  { pnode(GPIO, 61, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 61, 0, 10) },
  { pnode(GPIO, 61, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 61, 0, 8) },
  { pnode(GPIO, 61, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 61, 0, 14) },
  { pnode(GPIO, 61, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 61, 0, 12) },
  { pnode(GPIO, 61, 0, DATAIN, 1, 0), rnode(GOUT, 61, 0, 49) },
  { pnode(GPIO, 61, 0, DATAIN, 1, 1), rnode(GOUT, 61, 0, 41) },
  { pnode(GPIO, 61, 0, DATAIN, 1, 2), rnode(GOUT, 61, 0, 48) },
  { pnode(GPIO, 61, 0, DATAIN, 1, 3), rnode(GOUT, 61, 0, 40) },
  { pnode(GPIO, 61, 0, DATAOUT, 1, 0), rnode(GIN, 61, 0, 24) },
  { pnode(GPIO, 61, 0, DATAOUT, 1, 1), rnode(GIN, 61, 0, 23) },
  { pnode(GPIO, 61, 0, DATAOUT, 1, 2), rnode(GIN, 61, 0, 22) },
  { pnode(GPIO, 61, 0, DATAOUT, 1, 3), rnode(GIN, 61, 0, 21) },
  { pnode(GPIO, 61, 0, DATAOUT, 1, 4), rnode(GIN, 61, 0, 20) },
  { pnode(GPIO, 61, 0, OEIN, 1, 0), rnode(GOUT, 61, 0, 47) },
  { pnode(GPIO, 61, 0, OEIN, 1, 1), rnode(GOUT, 61, 0, 39) },
  { pnode(GPIO, 61, 0, BSLIPMAX, 1, -1), rnode(GIN, 61, 0, 25) },
  { pnode(GPIO, 61, 0, CEIN, 1, -1), rnode(GOUT, 61, 0, 51) },
  { pnode(GPIO, 61, 0, CEOUT, 1, -1), rnode(GOUT, 61, 0, 50) },
  { pnode(GPIO, 61, 0, ACLR, 1, -1), rnode(GOUT, 61, 0, 42) },
  { pnode(GPIO, 61, 0, SCLR, 1, -1), rnode(GOUT, 61, 0, 46) },
  { pnode(GPIO, 61, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 61, 0, 11) },
  { pnode(GPIO, 61, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 61, 0, 9) },
  { pnode(GPIO, 61, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 61, 0, 15) },
  { pnode(GPIO, 61, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 61, 0, 13) },
  { pnode(GPIO, 61, 0, DATAOUT, 2, 0), rnode(GIN, 61, 0, 8) },
  { pnode(GPIO, 61, 0, DATAOUT, 2, 1), rnode(GIN, 61, 0, 9) },
  { pnode(GPIO, 61, 0, DATAOUT, 2, 2), rnode(GIN, 61, 0, 10) },
  { pnode(GPIO, 61, 0, DATAOUT, 2, 3), rnode(GIN, 61, 0, 11) },
  { pnode(GPIO, 61, 0, DATAOUT, 2, 4), rnode(GIN, 61, 0, 12) },
  { pnode(GPIO, 61, 0, OEIN, 2, 0), rnode(GOUT, 61, 0, 16) },
  { pnode(GPIO, 61, 0, OEIN, 2, 1), rnode(GOUT, 61, 0, 24) },
  { pnode(GPIO, 61, 0, BSLIPMAX, 2, -1), rnode(GIN, 61, 0, 7) },
  { pnode(GPIO, 61, 0, CEIN, 2, -1), rnode(GOUT, 61, 0, 20) },
  { pnode(GPIO, 61, 0, CEOUT, 2, -1), rnode(GOUT, 61, 0, 13) },
  { pnode(GPIO, 61, 0, ACLR, 2, -1), rnode(GOUT, 61, 0, 21) },
  { pnode(GPIO, 61, 0, SCLR, 2, -1), rnode(GOUT, 61, 0, 25) },
  { pnode(GPIO, 61, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 61, 0, 5) },
  { pnode(GPIO, 61, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 61, 0, 7) },
  { pnode(GPIO, 61, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 61, 0, 1) },
  { pnode(GPIO, 61, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 61, 0, 3) },
  { pnode(GPIO, 61, 0, DATAOUT, 3, 4), rnode(GIN, 61, 0, 6) },
  { pnode(GPIO, 61, 0, BSLIPMAX, 3, -1), rnode(GIN, 61, 0, 1) },
  { pnode(GPIO, 61, 0, CEIN, 3, -1), rnode(GOUT, 61, 0, 5) },
  { pnode(GPIO, 61, 0, CEOUT, 3, -1), rnode(GOUT, 61, 0, 4) },
  { pnode(GPIO, 61, 0, ACLR, 3, -1), rnode(GOUT, 61, 0, 12) },
  { pnode(GPIO, 61, 0, SCLR, 3, -1), rnode(GOUT, 61, 0, 1) },
  { pnode(GPIO, 61, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 61, 0, 4) },
  { pnode(GPIO, 61, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 61, 0, 6) },
  { pnode(GPIO, 61, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 61, 0, 0) },
  { pnode(GPIO, 61, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 61, 0, 2) },
  { pnode(GPIO, 62, 0, DATAOUT, 0, 4), rnode(GIN, 62, 0, 14) },
  { pnode(GPIO, 62, 0, BSLIPMAX, 0, -1), rnode(GIN, 62, 0, 19) },
  { pnode(GPIO, 62, 0, CEIN, 0, -1), rnode(GOUT, 62, 0, 27) },
  { pnode(GPIO, 62, 0, CEOUT, 0, -1), rnode(GOUT, 62, 0, 45) },
  { pnode(GPIO, 62, 0, ACLR, 0, -1), rnode(GOUT, 62, 0, 28) },
  { pnode(GPIO, 62, 0, SCLR, 0, -1), rnode(GOUT, 62, 0, 31) },
  { pnode(GPIO, 62, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 62, 0, 10) },
  { pnode(GPIO, 62, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 62, 0, 8) },
  { pnode(GPIO, 62, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 62, 0, 14) },
  { pnode(GPIO, 62, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 62, 0, 12) },
  { pnode(GPIO, 62, 0, DATAOUT, 1, 4), rnode(GIN, 62, 0, 20) },
  { pnode(GPIO, 62, 0, BSLIPMAX, 1, -1), rnode(GIN, 62, 0, 25) },
  { pnode(GPIO, 62, 0, CEIN, 1, -1), rnode(GOUT, 62, 0, 51) },
  { pnode(GPIO, 62, 0, CEOUT, 1, -1), rnode(GOUT, 62, 0, 50) },
  { pnode(GPIO, 62, 0, ACLR, 1, -1), rnode(GOUT, 62, 0, 42) },
  { pnode(GPIO, 62, 0, SCLR, 1, -1), rnode(GOUT, 62, 0, 46) },
  { pnode(GPIO, 62, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 62, 0, 11) },
  { pnode(GPIO, 62, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 62, 0, 9) },
  { pnode(GPIO, 62, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 62, 0, 15) },
  { pnode(GPIO, 62, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 62, 0, 13) },
  { pnode(GPIO, 62, 0, DATAOUT, 2, 4), rnode(GIN, 62, 0, 12) },
  { pnode(GPIO, 62, 0, BSLIPMAX, 2, -1), rnode(GIN, 62, 0, 7) },
  { pnode(GPIO, 62, 0, CEIN, 2, -1), rnode(GOUT, 62, 0, 20) },
  { pnode(GPIO, 62, 0, CEOUT, 2, -1), rnode(GOUT, 62, 0, 13) },
  { pnode(GPIO, 62, 0, ACLR, 2, -1), rnode(GOUT, 62, 0, 21) },
  { pnode(GPIO, 62, 0, SCLR, 2, -1), rnode(GOUT, 62, 0, 25) },
  { pnode(GPIO, 62, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 62, 0, 5) },
  { pnode(GPIO, 62, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 62, 0, 7) },
  { pnode(GPIO, 62, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 62, 0, 1) },
  { pnode(GPIO, 62, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 62, 0, 3) },
  { pnode(GPIO, 62, 0, DATAIN, 3, 0), rnode(GOUT, 62, 0, 3) },
  { pnode(GPIO, 62, 0, DATAIN, 3, 1), rnode(GOUT, 62, 0, 17) },
  { pnode(GPIO, 62, 0, DATAIN, 3, 2), rnode(GOUT, 62, 0, 8) },
  { pnode(GPIO, 62, 0, DATAIN, 3, 3), rnode(GOUT, 62, 0, 18) },
  { pnode(GPIO, 62, 0, DATAOUT, 3, 0), rnode(GIN, 62, 0, 2) },
  { pnode(GPIO, 62, 0, DATAOUT, 3, 1), rnode(GIN, 62, 0, 3) },
  { pnode(GPIO, 62, 0, DATAOUT, 3, 2), rnode(GIN, 62, 0, 4) },
  { pnode(GPIO, 62, 0, DATAOUT, 3, 3), rnode(GIN, 62, 0, 5) },
  { pnode(GPIO, 62, 0, DATAOUT, 3, 4), rnode(GIN, 62, 0, 6) },
  { pnode(GPIO, 62, 0, OEIN, 3, 0), rnode(GOUT, 62, 0, 2) },
  { pnode(GPIO, 62, 0, OEIN, 3, 1), rnode(GOUT, 62, 0, 19) },
  { pnode(GPIO, 62, 0, BSLIPMAX, 3, -1), rnode(GIN, 62, 0, 1) },
  { pnode(GPIO, 62, 0, CEIN, 3, -1), rnode(GOUT, 62, 0, 5) },
  { pnode(GPIO, 62, 0, CEOUT, 3, -1), rnode(GOUT, 62, 0, 4) },
  { pnode(GPIO, 62, 0, ACLR, 3, -1), rnode(GOUT, 62, 0, 12) },
  { pnode(GPIO, 62, 0, SCLR, 3, -1), rnode(GOUT, 62, 0, 1) },
  { pnode(GPIO, 62, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 62, 0, 4) },
  { pnode(GPIO, 62, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 62, 0, 6) },
  { pnode(GPIO, 62, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 62, 0, 0) },
  { pnode(GPIO, 62, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 62, 0, 2) },
  { pnode(GPIO, 64, 0, DATAOUT, 0, 0), rnode(GIN, 64, 0, 18) },
  { pnode(GPIO, 64, 0, DATAOUT, 0, 1), rnode(GIN, 64, 0, 17) },
  { pnode(GPIO, 64, 0, DATAOUT, 0, 2), rnode(GIN, 64, 0, 16) },
  { pnode(GPIO, 64, 0, DATAOUT, 0, 3), rnode(GIN, 64, 0, 15) },
  { pnode(GPIO, 64, 0, DATAOUT, 0, 4), rnode(GIN, 64, 0, 14) },
  { pnode(GPIO, 64, 0, BSLIPMAX, 0, -1), rnode(GIN, 64, 0, 19) },
  { pnode(GPIO, 64, 0, CEIN, 0, -1), rnode(GOUT, 64, 0, 27) },
  { pnode(GPIO, 64, 0, CEOUT, 0, -1), rnode(GOUT, 64, 0, 45) },
  { pnode(GPIO, 64, 0, ACLR, 0, -1), rnode(GOUT, 64, 0, 28) },
  { pnode(GPIO, 64, 0, SCLR, 0, -1), rnode(GOUT, 64, 0, 31) },
  { pnode(GPIO, 64, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 64, 0, 10) },
  { pnode(GPIO, 64, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 64, 0, 8) },
  { pnode(GPIO, 64, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 64, 0, 14) },
  { pnode(GPIO, 64, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 64, 0, 12) },
  { pnode(GPIO, 64, 0, DATAOUT, 1, 0), rnode(GIN, 64, 0, 24) },
  { pnode(GPIO, 64, 0, DATAOUT, 1, 1), rnode(GIN, 64, 0, 23) },
  { pnode(GPIO, 64, 0, DATAOUT, 1, 2), rnode(GIN, 64, 0, 22) },
  { pnode(GPIO, 64, 0, DATAOUT, 1, 3), rnode(GIN, 64, 0, 21) },
  { pnode(GPIO, 64, 0, DATAOUT, 1, 4), rnode(GIN, 64, 0, 20) },
  { pnode(GPIO, 64, 0, BSLIPMAX, 1, -1), rnode(GIN, 64, 0, 25) },
  { pnode(GPIO, 64, 0, CEIN, 1, -1), rnode(GOUT, 64, 0, 51) },
  { pnode(GPIO, 64, 0, CEOUT, 1, -1), rnode(GOUT, 64, 0, 50) },
  { pnode(GPIO, 64, 0, ACLR, 1, -1), rnode(GOUT, 64, 0, 42) },
  { pnode(GPIO, 64, 0, SCLR, 1, -1), rnode(GOUT, 64, 0, 46) },
  { pnode(GPIO, 64, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 64, 0, 11) },
  { pnode(GPIO, 64, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 64, 0, 9) },
  { pnode(GPIO, 64, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 64, 0, 15) },
  { pnode(GPIO, 64, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 64, 0, 13) },
  { pnode(GPIO, 64, 0, DATAIN, 2, 0), rnode(GOUT, 64, 0, 14) },
  { pnode(GPIO, 64, 0, DATAIN, 2, 1), rnode(GOUT, 64, 0, 22) },
  { pnode(GPIO, 64, 0, DATAIN, 2, 2), rnode(GOUT, 64, 0, 15) },
  { pnode(GPIO, 64, 0, DATAIN, 2, 3), rnode(GOUT, 64, 0, 23) },
  { pnode(GPIO, 64, 0, DATAOUT, 2, 0), rnode(GIN, 64, 0, 8) },
  { pnode(GPIO, 64, 0, DATAOUT, 2, 1), rnode(GIN, 64, 0, 9) },
  { pnode(GPIO, 64, 0, DATAOUT, 2, 2), rnode(GIN, 64, 0, 10) },
  { pnode(GPIO, 64, 0, DATAOUT, 2, 3), rnode(GIN, 64, 0, 11) },
  { pnode(GPIO, 64, 0, DATAOUT, 2, 4), rnode(GIN, 64, 0, 12) },
  { pnode(GPIO, 64, 0, OEIN, 2, 0), rnode(GOUT, 64, 0, 16) },
  { pnode(GPIO, 64, 0, OEIN, 2, 1), rnode(GOUT, 64, 0, 24) },
  { pnode(GPIO, 64, 0, BSLIPMAX, 2, -1), rnode(GIN, 64, 0, 7) },
  { pnode(GPIO, 64, 0, CEIN, 2, -1), rnode(GOUT, 64, 0, 20) },
  { pnode(GPIO, 64, 0, CEOUT, 2, -1), rnode(GOUT, 64, 0, 13) },
  { pnode(GPIO, 64, 0, ACLR, 2, -1), rnode(GOUT, 64, 0, 21) },
  { pnode(GPIO, 64, 0, SCLR, 2, -1), rnode(GOUT, 64, 0, 25) },
  { pnode(GPIO, 64, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 64, 0, 5) },
  { pnode(GPIO, 64, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 64, 0, 7) },
  { pnode(GPIO, 64, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 64, 0, 1) },
  { pnode(GPIO, 64, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 64, 0, 3) },
  { pnode(GPIO, 64, 0, DATAOUT, 3, 4), rnode(GIN, 64, 0, 6) },
  { pnode(GPIO, 64, 0, BSLIPMAX, 3, -1), rnode(GIN, 64, 0, 1) },
  { pnode(GPIO, 64, 0, CEIN, 3, -1), rnode(GOUT, 64, 0, 5) },
  { pnode(GPIO, 64, 0, CEOUT, 3, -1), rnode(GOUT, 64, 0, 4) },
  { pnode(GPIO, 64, 0, ACLR, 3, -1), rnode(GOUT, 64, 0, 12) },
  { pnode(GPIO, 64, 0, SCLR, 3, -1), rnode(GOUT, 64, 0, 1) },
  { pnode(GPIO, 64, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 64, 0, 4) },
  { pnode(GPIO, 64, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 64, 0, 6) },
  { pnode(GPIO, 64, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 64, 0, 0) },
  { pnode(GPIO, 64, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 64, 0, 2) },
  { pnode(GPIO, 65, 0, DATAOUT, 0, 4), rnode(GIN, 65, 0, 14) },
  { pnode(GPIO, 65, 0, BSLIPMAX, 0, -1), rnode(GIN, 65, 0, 19) },
  { pnode(GPIO, 65, 0, CEIN, 0, -1), rnode(GOUT, 65, 0, 27) },
  { pnode(GPIO, 65, 0, CEOUT, 0, -1), rnode(GOUT, 65, 0, 45) },
  { pnode(GPIO, 65, 0, ACLR, 0, -1), rnode(GOUT, 65, 0, 28) },
  { pnode(GPIO, 65, 0, SCLR, 0, -1), rnode(GOUT, 65, 0, 31) },
  { pnode(GPIO, 65, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 65, 0, 10) },
  { pnode(GPIO, 65, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 65, 0, 8) },
  { pnode(GPIO, 65, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 65, 0, 14) },
  { pnode(GPIO, 65, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 65, 0, 12) },
  { pnode(GPIO, 65, 0, DATAOUT, 1, 4), rnode(GIN, 65, 0, 20) },
  { pnode(GPIO, 65, 0, BSLIPMAX, 1, -1), rnode(GIN, 65, 0, 25) },
  { pnode(GPIO, 65, 0, CEIN, 1, -1), rnode(GOUT, 65, 0, 51) },
  { pnode(GPIO, 65, 0, CEOUT, 1, -1), rnode(GOUT, 65, 0, 50) },
  { pnode(GPIO, 65, 0, ACLR, 1, -1), rnode(GOUT, 65, 0, 42) },
  { pnode(GPIO, 65, 0, SCLR, 1, -1), rnode(GOUT, 65, 0, 46) },
  { pnode(GPIO, 65, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 65, 0, 11) },
  { pnode(GPIO, 65, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 65, 0, 9) },
  { pnode(GPIO, 65, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 65, 0, 15) },
  { pnode(GPIO, 65, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 65, 0, 13) },
  { pnode(GPIO, 65, 0, DATAOUT, 2, 4), rnode(GIN, 65, 0, 12) },
  { pnode(GPIO, 65, 0, BSLIPMAX, 2, -1), rnode(GIN, 65, 0, 7) },
  { pnode(GPIO, 65, 0, CEIN, 2, -1), rnode(GOUT, 65, 0, 20) },
  { pnode(GPIO, 65, 0, CEOUT, 2, -1), rnode(GOUT, 65, 0, 13) },
  { pnode(GPIO, 65, 0, ACLR, 2, -1), rnode(GOUT, 65, 0, 21) },
  { pnode(GPIO, 65, 0, SCLR, 2, -1), rnode(GOUT, 65, 0, 25) },
  { pnode(GPIO, 65, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 65, 0, 5) },
  { pnode(GPIO, 65, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 65, 0, 7) },
  { pnode(GPIO, 65, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 65, 0, 1) },
  { pnode(GPIO, 65, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 65, 0, 3) },
  { pnode(GPIO, 65, 0, DATAIN, 3, 0), rnode(GOUT, 65, 0, 3) },
  { pnode(GPIO, 65, 0, DATAIN, 3, 1), rnode(GOUT, 65, 0, 17) },
  { pnode(GPIO, 65, 0, DATAIN, 3, 2), rnode(GOUT, 65, 0, 8) },
  { pnode(GPIO, 65, 0, DATAIN, 3, 3), rnode(GOUT, 65, 0, 18) },
  { pnode(GPIO, 65, 0, DATAOUT, 3, 0), rnode(GIN, 65, 0, 2) },
  { pnode(GPIO, 65, 0, DATAOUT, 3, 1), rnode(GIN, 65, 0, 3) },
  { pnode(GPIO, 65, 0, DATAOUT, 3, 2), rnode(GIN, 65, 0, 4) },
  { pnode(GPIO, 65, 0, DATAOUT, 3, 3), rnode(GIN, 65, 0, 5) },
  { pnode(GPIO, 65, 0, DATAOUT, 3, 4), rnode(GIN, 65, 0, 6) },
  { pnode(GPIO, 65, 0, OEIN, 3, 0), rnode(GOUT, 65, 0, 2) },
  { pnode(GPIO, 65, 0, OEIN, 3, 1), rnode(GOUT, 65, 0, 19) },
  { pnode(GPIO, 65, 0, BSLIPMAX, 3, -1), rnode(GIN, 65, 0, 1) },
  { pnode(GPIO, 65, 0, CEIN, 3, -1), rnode(GOUT, 65, 0, 5) },
  { pnode(GPIO, 65, 0, CEOUT, 3, -1), rnode(GOUT, 65, 0, 4) },
  { pnode(GPIO, 65, 0, ACLR, 3, -1), rnode(GOUT, 65, 0, 12) },
  { pnode(GPIO, 65, 0, SCLR, 3, -1), rnode(GOUT, 65, 0, 1) },
  { pnode(GPIO, 65, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 65, 0, 4) },
  { pnode(GPIO, 65, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 65, 0, 6) },
  { pnode(GPIO, 65, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 65, 0, 0) },
  { pnode(GPIO, 65, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 65, 0, 2) },
  { pnode(GPIO, 66, 0, DATAIN, 0, 0), rnode(GOUT, 66, 0, 44) },
  { pnode(GPIO, 66, 0, DATAIN, 0, 1), rnode(GOUT, 66, 0, 34) },
  { pnode(GPIO, 66, 0, DATAIN, 0, 2), rnode(GOUT, 66, 0, 43) },
  { pnode(GPIO, 66, 0, DATAIN, 0, 3), rnode(GOUT, 66, 0, 29) },
  { pnode(GPIO, 66, 0, DATAOUT, 0, 0), rnode(GIN, 66, 0, 18) },
  { pnode(GPIO, 66, 0, DATAOUT, 0, 1), rnode(GIN, 66, 0, 17) },
  { pnode(GPIO, 66, 0, DATAOUT, 0, 2), rnode(GIN, 66, 0, 16) },
  { pnode(GPIO, 66, 0, DATAOUT, 0, 3), rnode(GIN, 66, 0, 15) },
  { pnode(GPIO, 66, 0, DATAOUT, 0, 4), rnode(GIN, 66, 0, 14) },
  { pnode(GPIO, 66, 0, OEIN, 0, 0), rnode(GOUT, 66, 0, 38) },
  { pnode(GPIO, 66, 0, OEIN, 0, 1), rnode(GOUT, 66, 0, 30) },
  { pnode(GPIO, 66, 0, BSLIPMAX, 0, -1), rnode(GIN, 66, 0, 19) },
  { pnode(GPIO, 66, 0, CEIN, 0, -1), rnode(GOUT, 66, 0, 27) },
  { pnode(GPIO, 66, 0, CEOUT, 0, -1), rnode(GOUT, 66, 0, 45) },
  { pnode(GPIO, 66, 0, ACLR, 0, -1), rnode(GOUT, 66, 0, 28) },
  { pnode(GPIO, 66, 0, SCLR, 0, -1), rnode(GOUT, 66, 0, 31) },
  { pnode(GPIO, 66, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 66, 0, 10) },
  { pnode(GPIO, 66, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 66, 0, 8) },
  { pnode(GPIO, 66, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 66, 0, 14) },
  { pnode(GPIO, 66, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 66, 0, 12) },
  { pnode(GPIO, 66, 0, DATAIN, 1, 0), rnode(GOUT, 66, 0, 49) },
  { pnode(GPIO, 66, 0, DATAIN, 1, 1), rnode(GOUT, 66, 0, 41) },
  { pnode(GPIO, 66, 0, DATAIN, 1, 2), rnode(GOUT, 66, 0, 48) },
  { pnode(GPIO, 66, 0, DATAIN, 1, 3), rnode(GOUT, 66, 0, 40) },
  { pnode(GPIO, 66, 0, DATAOUT, 1, 0), rnode(GIN, 66, 0, 24) },
  { pnode(GPIO, 66, 0, DATAOUT, 1, 1), rnode(GIN, 66, 0, 23) },
  { pnode(GPIO, 66, 0, DATAOUT, 1, 2), rnode(GIN, 66, 0, 22) },
  { pnode(GPIO, 66, 0, DATAOUT, 1, 3), rnode(GIN, 66, 0, 21) },
  { pnode(GPIO, 66, 0, DATAOUT, 1, 4), rnode(GIN, 66, 0, 20) },
  { pnode(GPIO, 66, 0, OEIN, 1, 0), rnode(GOUT, 66, 0, 47) },
  { pnode(GPIO, 66, 0, OEIN, 1, 1), rnode(GOUT, 66, 0, 39) },
  { pnode(GPIO, 66, 0, BSLIPMAX, 1, -1), rnode(GIN, 66, 0, 25) },
  { pnode(GPIO, 66, 0, CEIN, 1, -1), rnode(GOUT, 66, 0, 51) },
  { pnode(GPIO, 66, 0, CEOUT, 1, -1), rnode(GOUT, 66, 0, 50) },
  { pnode(GPIO, 66, 0, ACLR, 1, -1), rnode(GOUT, 66, 0, 42) },
  { pnode(GPIO, 66, 0, SCLR, 1, -1), rnode(GOUT, 66, 0, 46) },
  { pnode(GPIO, 66, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 66, 0, 11) },
  { pnode(GPIO, 66, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 66, 0, 9) },
  { pnode(GPIO, 66, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 66, 0, 15) },
  { pnode(GPIO, 66, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 66, 0, 13) },
  { pnode(GPIO, 66, 0, DATAOUT, 2, 0), rnode(GIN, 66, 0, 8) },
  { pnode(GPIO, 66, 0, DATAOUT, 2, 1), rnode(GIN, 66, 0, 9) },
  { pnode(GPIO, 66, 0, DATAOUT, 2, 2), rnode(GIN, 66, 0, 10) },
  { pnode(GPIO, 66, 0, DATAOUT, 2, 3), rnode(GIN, 66, 0, 11) },
  { pnode(GPIO, 66, 0, DATAOUT, 2, 4), rnode(GIN, 66, 0, 12) },
  { pnode(GPIO, 66, 0, OEIN, 2, 0), rnode(GOUT, 66, 0, 16) },
  { pnode(GPIO, 66, 0, OEIN, 2, 1), rnode(GOUT, 66, 0, 24) },
  { pnode(GPIO, 66, 0, BSLIPMAX, 2, -1), rnode(GIN, 66, 0, 7) },
  { pnode(GPIO, 66, 0, CEIN, 2, -1), rnode(GOUT, 66, 0, 20) },
  { pnode(GPIO, 66, 0, CEOUT, 2, -1), rnode(GOUT, 66, 0, 13) },
  { pnode(GPIO, 66, 0, ACLR, 2, -1), rnode(GOUT, 66, 0, 21) },
  { pnode(GPIO, 66, 0, SCLR, 2, -1), rnode(GOUT, 66, 0, 25) },
  { pnode(GPIO, 66, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 66, 0, 5) },
  { pnode(GPIO, 66, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 66, 0, 7) },
  { pnode(GPIO, 66, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 66, 0, 1) },
  { pnode(GPIO, 66, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 66, 0, 3) },
  { pnode(GPIO, 66, 0, DATAOUT, 3, 4), rnode(GIN, 66, 0, 6) },
  { pnode(GPIO, 66, 0, BSLIPMAX, 3, -1), rnode(GIN, 66, 0, 1) },
  { pnode(GPIO, 66, 0, CEIN, 3, -1), rnode(GOUT, 66, 0, 5) },
  { pnode(GPIO, 66, 0, CEOUT, 3, -1), rnode(GOUT, 66, 0, 4) },
  { pnode(GPIO, 66, 0, ACLR, 3, -1), rnode(GOUT, 66, 0, 12) },
  { pnode(GPIO, 66, 0, SCLR, 3, -1), rnode(GOUT, 66, 0, 1) },
  { pnode(GPIO, 66, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 66, 0, 4) },
  { pnode(GPIO, 66, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 66, 0, 6) },
  { pnode(GPIO, 66, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 66, 0, 0) },
  { pnode(GPIO, 66, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 66, 0, 2) },
  { pnode(GPIO, 68, 10, DATAIN, 0, 0), rnode(GOUT, 68, 10, 49) },
  { pnode(GPIO, 68, 10, DATAIN, 0, 1), rnode(GOUT, 68, 10, 50) },
  { pnode(GPIO, 68, 10, DATAIN, 0, 2), rnode(GOUT, 68, 10, 51) },
  { pnode(GPIO, 68, 10, DATAIN, 0, 3), rnode(GOUT, 68, 10, 52) },
  { pnode(GPIO, 68, 10, DATAOUT, 0, 0), rnode(GIN, 68, 10, 48) },
  { pnode(GPIO, 68, 10, DATAOUT, 0, 1), rnode(GIN, 68, 10, 49) },
  { pnode(GPIO, 68, 10, DATAOUT, 0, 2), rnode(GIN, 68, 10, 50) },
  { pnode(GPIO, 68, 10, DATAOUT, 0, 3), rnode(GIN, 68, 10, 51) },
  { pnode(GPIO, 68, 10, DATAOUT, 0, 4), rnode(GIN, 68, 10, 52) },
  { pnode(GPIO, 68, 10, OEIN, 0, 0), rnode(GOUT, 68, 10, 53) },
  { pnode(GPIO, 68, 10, OEIN, 0, 1), rnode(GOUT, 68, 10, 54) },
  { pnode(GPIO, 68, 10, BSLIPMAX, 0, -1), rnode(GIN, 68, 10, 47) },
  { pnode(GPIO, 68, 10, CEIN, 0, -1), rnode(GOUT, 68, 10, 46) },
  { pnode(GPIO, 68, 10, CEOUT, 0, -1), rnode(GOUT, 68, 10, 47) },
  { pnode(GPIO, 68, 10, ACLR, 0, -1), rnode(GOUT, 68, 10, 48) },
  { pnode(GPIO, 68, 10, SCLR, 0, -1), rnode(GOUT, 68, 10, 55) },
  { pnode(GPIO, 68, 10, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 10, 14) },
  { pnode(GPIO, 68, 10, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 10, 15) },
  { pnode(GPIO, 68, 10, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 10, 12) },
  { pnode(GPIO, 68, 10, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 10, 13) },
  { pnode(GPIO, 68, 10, DATAIN, 1, 0), rnode(GOUT, 68, 10, 39) },
  { pnode(GPIO, 68, 10, DATAIN, 1, 1), rnode(GOUT, 68, 10, 40) },
  { pnode(GPIO, 68, 10, DATAIN, 1, 2), rnode(GOUT, 68, 10, 41) },
  { pnode(GPIO, 68, 10, DATAIN, 1, 3), rnode(GOUT, 68, 10, 42) },
  { pnode(GPIO, 68, 10, DATAOUT, 1, 0), rnode(GIN, 68, 10, 42) },
  { pnode(GPIO, 68, 10, DATAOUT, 1, 1), rnode(GIN, 68, 10, 43) },
  { pnode(GPIO, 68, 10, DATAOUT, 1, 2), rnode(GIN, 68, 10, 44) },
  { pnode(GPIO, 68, 10, DATAOUT, 1, 3), rnode(GIN, 68, 10, 45) },
  { pnode(GPIO, 68, 10, DATAOUT, 1, 4), rnode(GIN, 68, 10, 46) },
  { pnode(GPIO, 68, 10, OEIN, 1, 0), rnode(GOUT, 68, 10, 43) },
  { pnode(GPIO, 68, 10, OEIN, 1, 1), rnode(GOUT, 68, 10, 44) },
  { pnode(GPIO, 68, 10, BSLIPMAX, 1, -1), rnode(GIN, 68, 10, 41) },
  { pnode(GPIO, 68, 10, CEIN, 1, -1), rnode(GOUT, 68, 10, 36) },
  { pnode(GPIO, 68, 10, CEOUT, 1, -1), rnode(GOUT, 68, 10, 37) },
  { pnode(GPIO, 68, 10, ACLR, 1, -1), rnode(GOUT, 68, 10, 38) },
  { pnode(GPIO, 68, 10, SCLR, 1, -1), rnode(GOUT, 68, 10, 45) },
  { pnode(GPIO, 68, 10, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 10, 10) },
  { pnode(GPIO, 68, 10, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 10, 11) },
  { pnode(GPIO, 68, 10, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 10, 8) },
  { pnode(GPIO, 68, 10, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 10, 9) },
  { pnode(GPIO, 68, 10, DATAIN, 2, 0), rnode(GOUT, 68, 10, 29) },
  { pnode(GPIO, 68, 10, DATAIN, 2, 1), rnode(GOUT, 68, 10, 30) },
  { pnode(GPIO, 68, 10, DATAIN, 2, 2), rnode(GOUT, 68, 10, 32) },
  { pnode(GPIO, 68, 10, DATAIN, 2, 3), rnode(GOUT, 68, 10, 33) },
  { pnode(GPIO, 68, 10, DATAOUT, 2, 0), rnode(GIN, 68, 10, 36) },
  { pnode(GPIO, 68, 10, DATAOUT, 2, 1), rnode(GIN, 68, 10, 37) },
  { pnode(GPIO, 68, 10, DATAOUT, 2, 2), rnode(GIN, 68, 10, 40) },
  { pnode(GPIO, 68, 10, DATAOUT, 2, 3), rnode(GIN, 68, 10, 38) },
  { pnode(GPIO, 68, 10, DATAOUT, 2, 4), rnode(GIN, 68, 10, 39) },
  { pnode(GPIO, 68, 10, OEIN, 2, 0), rnode(GOUT, 68, 10, 34) },
  { pnode(GPIO, 68, 10, OEIN, 2, 1), rnode(GOUT, 68, 10, 35) },
  { pnode(GPIO, 68, 10, BSLIPMAX, 2, -1), rnode(GIN, 68, 10, 35) },
  { pnode(GPIO, 68, 10, CEIN, 2, -1), rnode(GOUT, 68, 10, 26) },
  { pnode(GPIO, 68, 10, CEOUT, 2, -1), rnode(GOUT, 68, 10, 27) },
  { pnode(GPIO, 68, 10, ACLR, 2, -1), rnode(GOUT, 68, 10, 28) },
  { pnode(GPIO, 68, 10, SCLR, 2, -1), rnode(GOUT, 68, 10, 31) },
  { pnode(GPIO, 68, 10, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 10, 6) },
  { pnode(GPIO, 68, 10, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 10, 7) },
  { pnode(GPIO, 68, 10, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 10, 4) },
  { pnode(GPIO, 68, 10, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 10, 5) },
  { pnode(GPIO, 68, 10, DATAIN, 3, 0), rnode(GOUT, 68, 10, 19) },
  { pnode(GPIO, 68, 10, DATAIN, 3, 1), rnode(GOUT, 68, 10, 20) },
  { pnode(GPIO, 68, 10, DATAIN, 3, 2), rnode(GOUT, 68, 10, 21) },
  { pnode(GPIO, 68, 10, DATAIN, 3, 3), rnode(GOUT, 68, 10, 22) },
  { pnode(GPIO, 68, 10, DATAOUT, 3, 0), rnode(GIN, 68, 10, 30) },
  { pnode(GPIO, 68, 10, DATAOUT, 3, 1), rnode(GIN, 68, 10, 31) },
  { pnode(GPIO, 68, 10, DATAOUT, 3, 2), rnode(GIN, 68, 10, 32) },
  { pnode(GPIO, 68, 10, DATAOUT, 3, 3), rnode(GIN, 68, 10, 33) },
  { pnode(GPIO, 68, 10, DATAOUT, 3, 4), rnode(GIN, 68, 10, 34) },
  { pnode(GPIO, 68, 10, OEIN, 3, 0), rnode(GOUT, 68, 10, 23) },
  { pnode(GPIO, 68, 10, OEIN, 3, 1), rnode(GOUT, 68, 10, 24) },
  { pnode(GPIO, 68, 10, BSLIPMAX, 3, -1), rnode(GIN, 68, 10, 29) },
  { pnode(GPIO, 68, 10, CEIN, 3, -1), rnode(GOUT, 68, 10, 16) },
  { pnode(GPIO, 68, 10, CEOUT, 3, -1), rnode(GOUT, 68, 10, 17) },
  { pnode(GPIO, 68, 10, ACLR, 3, -1), rnode(GOUT, 68, 10, 18) },
  { pnode(GPIO, 68, 10, SCLR, 3, -1), rnode(GOUT, 68, 10, 25) },
  { pnode(GPIO, 68, 10, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 10, 2) },
  { pnode(GPIO, 68, 10, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 10, 3) },
  { pnode(GPIO, 68, 10, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 10, 0) },
  { pnode(GPIO, 68, 10, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 10, 1) },
  { pnode(GPIO, 68, 11, DATAIN, 0, 0), rnode(GOUT, 68, 11, 49) },
  { pnode(GPIO, 68, 11, DATAIN, 0, 1), rnode(GOUT, 68, 11, 50) },
  { pnode(GPIO, 68, 11, DATAIN, 0, 2), rnode(GOUT, 68, 11, 51) },
  { pnode(GPIO, 68, 11, DATAIN, 0, 3), rnode(GOUT, 68, 11, 52) },
  { pnode(GPIO, 68, 11, DATAOUT, 0, 0), rnode(GIN, 68, 11, 48) },
  { pnode(GPIO, 68, 11, DATAOUT, 0, 1), rnode(GIN, 68, 11, 49) },
  { pnode(GPIO, 68, 11, DATAOUT, 0, 2), rnode(GIN, 68, 11, 50) },
  { pnode(GPIO, 68, 11, DATAOUT, 0, 3), rnode(GIN, 68, 11, 51) },
  { pnode(GPIO, 68, 11, DATAOUT, 0, 4), rnode(GIN, 68, 11, 52) },
  { pnode(GPIO, 68, 11, OEIN, 0, 0), rnode(GOUT, 68, 11, 53) },
  { pnode(GPIO, 68, 11, OEIN, 0, 1), rnode(GOUT, 68, 11, 54) },
  { pnode(GPIO, 68, 11, BSLIPMAX, 0, -1), rnode(GIN, 68, 11, 47) },
  { pnode(GPIO, 68, 11, CEIN, 0, -1), rnode(GOUT, 68, 11, 46) },
  { pnode(GPIO, 68, 11, CEOUT, 0, -1), rnode(GOUT, 68, 11, 47) },
  { pnode(GPIO, 68, 11, ACLR, 0, -1), rnode(GOUT, 68, 11, 48) },
  { pnode(GPIO, 68, 11, SCLR, 0, -1), rnode(GOUT, 68, 11, 55) },
  { pnode(GPIO, 68, 11, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 11, 14) },
  { pnode(GPIO, 68, 11, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 11, 15) },
  { pnode(GPIO, 68, 11, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 11, 12) },
  { pnode(GPIO, 68, 11, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 11, 13) },
  { pnode(GPIO, 68, 11, DATAIN, 1, 0), rnode(GOUT, 68, 11, 39) },
  { pnode(GPIO, 68, 11, DATAIN, 1, 1), rnode(GOUT, 68, 11, 40) },
  { pnode(GPIO, 68, 11, DATAIN, 1, 2), rnode(GOUT, 68, 11, 41) },
  { pnode(GPIO, 68, 11, DATAIN, 1, 3), rnode(GOUT, 68, 11, 42) },
  { pnode(GPIO, 68, 11, DATAOUT, 1, 0), rnode(GIN, 68, 11, 42) },
  { pnode(GPIO, 68, 11, DATAOUT, 1, 1), rnode(GIN, 68, 11, 43) },
  { pnode(GPIO, 68, 11, DATAOUT, 1, 2), rnode(GIN, 68, 11, 44) },
  { pnode(GPIO, 68, 11, DATAOUT, 1, 3), rnode(GIN, 68, 11, 45) },
  { pnode(GPIO, 68, 11, DATAOUT, 1, 4), rnode(GIN, 68, 11, 46) },
  { pnode(GPIO, 68, 11, OEIN, 1, 0), rnode(GOUT, 68, 11, 43) },
  { pnode(GPIO, 68, 11, OEIN, 1, 1), rnode(GOUT, 68, 11, 44) },
  { pnode(GPIO, 68, 11, BSLIPMAX, 1, -1), rnode(GIN, 68, 11, 41) },
  { pnode(GPIO, 68, 11, CEIN, 1, -1), rnode(GOUT, 68, 11, 36) },
  { pnode(GPIO, 68, 11, CEOUT, 1, -1), rnode(GOUT, 68, 11, 37) },
  { pnode(GPIO, 68, 11, ACLR, 1, -1), rnode(GOUT, 68, 11, 38) },
  { pnode(GPIO, 68, 11, SCLR, 1, -1), rnode(GOUT, 68, 11, 45) },
  { pnode(GPIO, 68, 11, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 11, 10) },
  { pnode(GPIO, 68, 11, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 11, 11) },
  { pnode(GPIO, 68, 11, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 11, 8) },
  { pnode(GPIO, 68, 11, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 11, 9) },
  { pnode(GPIO, 68, 11, DATAIN, 2, 0), rnode(GOUT, 68, 11, 29) },
  { pnode(GPIO, 68, 11, DATAIN, 2, 1), rnode(GOUT, 68, 11, 30) },
  { pnode(GPIO, 68, 11, DATAIN, 2, 2), rnode(GOUT, 68, 11, 31) },
  { pnode(GPIO, 68, 11, DATAIN, 2, 3), rnode(GOUT, 68, 11, 32) },
  { pnode(GPIO, 68, 11, DATAOUT, 2, 0), rnode(GIN, 68, 11, 36) },
  { pnode(GPIO, 68, 11, DATAOUT, 2, 1), rnode(GIN, 68, 11, 37) },
  { pnode(GPIO, 68, 11, DATAOUT, 2, 2), rnode(GIN, 68, 11, 40) },
  { pnode(GPIO, 68, 11, DATAOUT, 2, 3), rnode(GIN, 68, 11, 38) },
  { pnode(GPIO, 68, 11, DATAOUT, 2, 4), rnode(GIN, 68, 11, 39) },
  { pnode(GPIO, 68, 11, OEIN, 2, 0), rnode(GOUT, 68, 11, 33) },
  { pnode(GPIO, 68, 11, OEIN, 2, 1), rnode(GOUT, 68, 11, 34) },
  { pnode(GPIO, 68, 11, BSLIPMAX, 2, -1), rnode(GIN, 68, 11, 35) },
  { pnode(GPIO, 68, 11, CEIN, 2, -1), rnode(GOUT, 68, 11, 26) },
  { pnode(GPIO, 68, 11, CEOUT, 2, -1), rnode(GOUT, 68, 11, 27) },
  { pnode(GPIO, 68, 11, ACLR, 2, -1), rnode(GOUT, 68, 11, 28) },
  { pnode(GPIO, 68, 11, SCLR, 2, -1), rnode(GOUT, 68, 11, 35) },
  { pnode(GPIO, 68, 11, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 11, 6) },
  { pnode(GPIO, 68, 11, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 11, 7) },
  { pnode(GPIO, 68, 11, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 11, 4) },
  { pnode(GPIO, 68, 11, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 11, 5) },
  { pnode(GPIO, 68, 11, DATAIN, 3, 0), rnode(GOUT, 68, 11, 19) },
  { pnode(GPIO, 68, 11, DATAIN, 3, 1), rnode(GOUT, 68, 11, 20) },
  { pnode(GPIO, 68, 11, DATAIN, 3, 2), rnode(GOUT, 68, 11, 21) },
  { pnode(GPIO, 68, 11, DATAIN, 3, 3), rnode(GOUT, 68, 11, 22) },
  { pnode(GPIO, 68, 11, DATAOUT, 3, 0), rnode(GIN, 68, 11, 30) },
  { pnode(GPIO, 68, 11, DATAOUT, 3, 1), rnode(GIN, 68, 11, 31) },
  { pnode(GPIO, 68, 11, DATAOUT, 3, 2), rnode(GIN, 68, 11, 32) },
  { pnode(GPIO, 68, 11, DATAOUT, 3, 3), rnode(GIN, 68, 11, 33) },
  { pnode(GPIO, 68, 11, DATAOUT, 3, 4), rnode(GIN, 68, 11, 34) },
  { pnode(GPIO, 68, 11, OEIN, 3, 0), rnode(GOUT, 68, 11, 23) },
  { pnode(GPIO, 68, 11, OEIN, 3, 1), rnode(GOUT, 68, 11, 24) },
  { pnode(GPIO, 68, 11, BSLIPMAX, 3, -1), rnode(GIN, 68, 11, 29) },
  { pnode(GPIO, 68, 11, CEIN, 3, -1), rnode(GOUT, 68, 11, 16) },
  { pnode(GPIO, 68, 11, CEOUT, 3, -1), rnode(GOUT, 68, 11, 17) },
  { pnode(GPIO, 68, 11, ACLR, 3, -1), rnode(GOUT, 68, 11, 18) },
  { pnode(GPIO, 68, 11, SCLR, 3, -1), rnode(GOUT, 68, 11, 25) },
  { pnode(GPIO, 68, 11, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 11, 2) },
  { pnode(GPIO, 68, 11, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 11, 3) },
  { pnode(GPIO, 68, 11, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 11, 0) },
  { pnode(GPIO, 68, 11, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 11, 1) },
  { pnode(GPIO, 68, 12, DATAIN, 0, 0), rnode(GOUT, 68, 12, 49) },
  { pnode(GPIO, 68, 12, DATAIN, 0, 1), rnode(GOUT, 68, 12, 50) },
  { pnode(GPIO, 68, 12, DATAIN, 0, 2), rnode(GOUT, 68, 12, 51) },
  { pnode(GPIO, 68, 12, DATAIN, 0, 3), rnode(GOUT, 68, 12, 52) },
  { pnode(GPIO, 68, 12, DATAOUT, 0, 0), rnode(GIN, 68, 12, 48) },
  { pnode(GPIO, 68, 12, DATAOUT, 0, 1), rnode(GIN, 68, 12, 49) },
  { pnode(GPIO, 68, 12, DATAOUT, 0, 2), rnode(GIN, 68, 12, 50) },
  { pnode(GPIO, 68, 12, DATAOUT, 0, 3), rnode(GIN, 68, 12, 51) },
  { pnode(GPIO, 68, 12, DATAOUT, 0, 4), rnode(GIN, 68, 12, 52) },
  { pnode(GPIO, 68, 12, OEIN, 0, 0), rnode(GOUT, 68, 12, 53) },
  { pnode(GPIO, 68, 12, OEIN, 0, 1), rnode(GOUT, 68, 12, 54) },
  { pnode(GPIO, 68, 12, BSLIPMAX, 0, -1), rnode(GIN, 68, 12, 47) },
  { pnode(GPIO, 68, 12, CEIN, 0, -1), rnode(GOUT, 68, 12, 46) },
  { pnode(GPIO, 68, 12, CEOUT, 0, -1), rnode(GOUT, 68, 12, 47) },
  { pnode(GPIO, 68, 12, ACLR, 0, -1), rnode(GOUT, 68, 12, 48) },
  { pnode(GPIO, 68, 12, SCLR, 0, -1), rnode(GOUT, 68, 12, 55) },
  { pnode(GPIO, 68, 12, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 12, 14) },
  { pnode(GPIO, 68, 12, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 12, 15) },
  { pnode(GPIO, 68, 12, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 12, 12) },
  { pnode(GPIO, 68, 12, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 12, 13) },
  { pnode(GPIO, 68, 12, DATAIN, 1, 0), rnode(GOUT, 68, 12, 39) },
  { pnode(GPIO, 68, 12, DATAIN, 1, 1), rnode(GOUT, 68, 12, 40) },
  { pnode(GPIO, 68, 12, DATAIN, 1, 2), rnode(GOUT, 68, 12, 41) },
  { pnode(GPIO, 68, 12, DATAIN, 1, 3), rnode(GOUT, 68, 12, 42) },
  { pnode(GPIO, 68, 12, DATAOUT, 1, 0), rnode(GIN, 68, 12, 42) },
  { pnode(GPIO, 68, 12, DATAOUT, 1, 1), rnode(GIN, 68, 12, 43) },
  { pnode(GPIO, 68, 12, DATAOUT, 1, 2), rnode(GIN, 68, 12, 44) },
  { pnode(GPIO, 68, 12, DATAOUT, 1, 3), rnode(GIN, 68, 12, 45) },
  { pnode(GPIO, 68, 12, DATAOUT, 1, 4), rnode(GIN, 68, 12, 46) },
  { pnode(GPIO, 68, 12, OEIN, 1, 0), rnode(GOUT, 68, 12, 43) },
  { pnode(GPIO, 68, 12, OEIN, 1, 1), rnode(GOUT, 68, 12, 44) },
  { pnode(GPIO, 68, 12, BSLIPMAX, 1, -1), rnode(GIN, 68, 12, 41) },
  { pnode(GPIO, 68, 12, CEIN, 1, -1), rnode(GOUT, 68, 12, 36) },
  { pnode(GPIO, 68, 12, CEOUT, 1, -1), rnode(GOUT, 68, 12, 37) },
  { pnode(GPIO, 68, 12, ACLR, 1, -1), rnode(GOUT, 68, 12, 38) },
  { pnode(GPIO, 68, 12, SCLR, 1, -1), rnode(GOUT, 68, 12, 45) },
  { pnode(GPIO, 68, 12, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 12, 10) },
  { pnode(GPIO, 68, 12, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 12, 11) },
  { pnode(GPIO, 68, 12, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 12, 8) },
  { pnode(GPIO, 68, 12, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 12, 9) },
  { pnode(GPIO, 68, 12, DATAIN, 2, 0), rnode(GOUT, 68, 12, 29) },
  { pnode(GPIO, 68, 12, DATAIN, 2, 1), rnode(GOUT, 68, 12, 30) },
  { pnode(GPIO, 68, 12, DATAIN, 2, 2), rnode(GOUT, 68, 12, 31) },
  { pnode(GPIO, 68, 12, DATAIN, 2, 3), rnode(GOUT, 68, 12, 32) },
  { pnode(GPIO, 68, 12, DATAOUT, 2, 0), rnode(GIN, 68, 12, 36) },
  { pnode(GPIO, 68, 12, DATAOUT, 2, 1), rnode(GIN, 68, 12, 37) },
  { pnode(GPIO, 68, 12, DATAOUT, 2, 2), rnode(GIN, 68, 12, 40) },
  { pnode(GPIO, 68, 12, DATAOUT, 2, 3), rnode(GIN, 68, 12, 38) },
  { pnode(GPIO, 68, 12, DATAOUT, 2, 4), rnode(GIN, 68, 12, 39) },
  { pnode(GPIO, 68, 12, OEIN, 2, 0), rnode(GOUT, 68, 12, 33) },
  { pnode(GPIO, 68, 12, OEIN, 2, 1), rnode(GOUT, 68, 12, 34) },
  { pnode(GPIO, 68, 12, BSLIPMAX, 2, -1), rnode(GIN, 68, 12, 35) },
  { pnode(GPIO, 68, 12, CEIN, 2, -1), rnode(GOUT, 68, 12, 26) },
  { pnode(GPIO, 68, 12, CEOUT, 2, -1), rnode(GOUT, 68, 12, 27) },
  { pnode(GPIO, 68, 12, ACLR, 2, -1), rnode(GOUT, 68, 12, 28) },
  { pnode(GPIO, 68, 12, SCLR, 2, -1), rnode(GOUT, 68, 12, 35) },
  { pnode(GPIO, 68, 12, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 12, 6) },
  { pnode(GPIO, 68, 12, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 12, 7) },
  { pnode(GPIO, 68, 12, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 12, 4) },
  { pnode(GPIO, 68, 12, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 12, 5) },
  { pnode(GPIO, 68, 12, DATAIN, 3, 0), rnode(GOUT, 68, 12, 19) },
  { pnode(GPIO, 68, 12, DATAIN, 3, 1), rnode(GOUT, 68, 12, 20) },
  { pnode(GPIO, 68, 12, DATAIN, 3, 2), rnode(GOUT, 68, 12, 21) },
  { pnode(GPIO, 68, 12, DATAIN, 3, 3), rnode(GOUT, 68, 12, 22) },
  { pnode(GPIO, 68, 12, DATAOUT, 3, 0), rnode(GIN, 68, 12, 30) },
  { pnode(GPIO, 68, 12, DATAOUT, 3, 1), rnode(GIN, 68, 12, 31) },
  { pnode(GPIO, 68, 12, DATAOUT, 3, 2), rnode(GIN, 68, 12, 32) },
  { pnode(GPIO, 68, 12, DATAOUT, 3, 3), rnode(GIN, 68, 12, 33) },
  { pnode(GPIO, 68, 12, DATAOUT, 3, 4), rnode(GIN, 68, 12, 34) },
  { pnode(GPIO, 68, 12, OEIN, 3, 0), rnode(GOUT, 68, 12, 23) },
  { pnode(GPIO, 68, 12, OEIN, 3, 1), rnode(GOUT, 68, 12, 24) },
  { pnode(GPIO, 68, 12, BSLIPMAX, 3, -1), rnode(GIN, 68, 12, 29) },
  { pnode(GPIO, 68, 12, CEIN, 3, -1), rnode(GOUT, 68, 12, 16) },
  { pnode(GPIO, 68, 12, CEOUT, 3, -1), rnode(GOUT, 68, 12, 17) },
  { pnode(GPIO, 68, 12, ACLR, 3, -1), rnode(GOUT, 68, 12, 18) },
  { pnode(GPIO, 68, 12, SCLR, 3, -1), rnode(GOUT, 68, 12, 25) },
  { pnode(GPIO, 68, 12, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 12, 2) },
  { pnode(GPIO, 68, 12, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 12, 3) },
  { pnode(GPIO, 68, 12, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 12, 0) },
  { pnode(GPIO, 68, 12, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 12, 1) },
  { pnode(GPIO, 68, 13, DATAIN, 0, 0), rnode(GOUT, 68, 13, 49) },
  { pnode(GPIO, 68, 13, DATAIN, 0, 1), rnode(GOUT, 68, 13, 50) },
  { pnode(GPIO, 68, 13, DATAIN, 0, 2), rnode(GOUT, 68, 13, 51) },
  { pnode(GPIO, 68, 13, DATAIN, 0, 3), rnode(GOUT, 68, 13, 52) },
  { pnode(GPIO, 68, 13, DATAOUT, 0, 0), rnode(GIN, 68, 13, 48) },
  { pnode(GPIO, 68, 13, DATAOUT, 0, 1), rnode(GIN, 68, 13, 49) },
  { pnode(GPIO, 68, 13, DATAOUT, 0, 2), rnode(GIN, 68, 13, 50) },
  { pnode(GPIO, 68, 13, DATAOUT, 0, 3), rnode(GIN, 68, 13, 51) },
  { pnode(GPIO, 68, 13, DATAOUT, 0, 4), rnode(GIN, 68, 13, 52) },
  { pnode(GPIO, 68, 13, OEIN, 0, 0), rnode(GOUT, 68, 13, 53) },
  { pnode(GPIO, 68, 13, OEIN, 0, 1), rnode(GOUT, 68, 13, 55) },
  { pnode(GPIO, 68, 13, BSLIPMAX, 0, -1), rnode(GIN, 68, 13, 47) },
  { pnode(GPIO, 68, 13, CEIN, 0, -1), rnode(GOUT, 68, 13, 46) },
  { pnode(GPIO, 68, 13, CEOUT, 0, -1), rnode(GOUT, 68, 13, 47) },
  { pnode(GPIO, 68, 13, ACLR, 0, -1), rnode(GOUT, 68, 13, 48) },
  { pnode(GPIO, 68, 13, SCLR, 0, -1), rnode(GOUT, 68, 13, 54) },
  { pnode(GPIO, 68, 13, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 13, 14) },
  { pnode(GPIO, 68, 13, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 13, 15) },
  { pnode(GPIO, 68, 13, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 13, 12) },
  { pnode(GPIO, 68, 13, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 13, 13) },
  { pnode(GPIO, 68, 13, DATAIN, 1, 0), rnode(GOUT, 68, 13, 39) },
  { pnode(GPIO, 68, 13, DATAIN, 1, 1), rnode(GOUT, 68, 13, 40) },
  { pnode(GPIO, 68, 13, DATAIN, 1, 2), rnode(GOUT, 68, 13, 41) },
  { pnode(GPIO, 68, 13, DATAIN, 1, 3), rnode(GOUT, 68, 13, 42) },
  { pnode(GPIO, 68, 13, DATAOUT, 1, 0), rnode(GIN, 68, 13, 42) },
  { pnode(GPIO, 68, 13, DATAOUT, 1, 1), rnode(GIN, 68, 13, 43) },
  { pnode(GPIO, 68, 13, DATAOUT, 1, 2), rnode(GIN, 68, 13, 44) },
  { pnode(GPIO, 68, 13, DATAOUT, 1, 3), rnode(GIN, 68, 13, 45) },
  { pnode(GPIO, 68, 13, DATAOUT, 1, 4), rnode(GIN, 68, 13, 46) },
  { pnode(GPIO, 68, 13, OEIN, 1, 0), rnode(GOUT, 68, 13, 43) },
  { pnode(GPIO, 68, 13, OEIN, 1, 1), rnode(GOUT, 68, 13, 44) },
  { pnode(GPIO, 68, 13, BSLIPMAX, 1, -1), rnode(GIN, 68, 13, 41) },
  { pnode(GPIO, 68, 13, CEIN, 1, -1), rnode(GOUT, 68, 13, 36) },
  { pnode(GPIO, 68, 13, CEOUT, 1, -1), rnode(GOUT, 68, 13, 37) },
  { pnode(GPIO, 68, 13, ACLR, 1, -1), rnode(GOUT, 68, 13, 38) },
  { pnode(GPIO, 68, 13, SCLR, 1, -1), rnode(GOUT, 68, 13, 45) },
  { pnode(GPIO, 68, 13, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 13, 10) },
  { pnode(GPIO, 68, 13, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 13, 11) },
  { pnode(GPIO, 68, 13, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 13, 8) },
  { pnode(GPIO, 68, 13, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 13, 9) },
  { pnode(GPIO, 68, 13, DATAIN, 2, 0), rnode(GOUT, 68, 13, 29) },
  { pnode(GPIO, 68, 13, DATAIN, 2, 1), rnode(GOUT, 68, 13, 30) },
  { pnode(GPIO, 68, 13, DATAIN, 2, 2), rnode(GOUT, 68, 13, 31) },
  { pnode(GPIO, 68, 13, DATAIN, 2, 3), rnode(GOUT, 68, 13, 32) },
  { pnode(GPIO, 68, 13, DATAOUT, 2, 0), rnode(GIN, 68, 13, 36) },
  { pnode(GPIO, 68, 13, DATAOUT, 2, 1), rnode(GIN, 68, 13, 37) },
  { pnode(GPIO, 68, 13, DATAOUT, 2, 2), rnode(GIN, 68, 13, 40) },
  { pnode(GPIO, 68, 13, DATAOUT, 2, 3), rnode(GIN, 68, 13, 38) },
  { pnode(GPIO, 68, 13, DATAOUT, 2, 4), rnode(GIN, 68, 13, 39) },
  { pnode(GPIO, 68, 13, OEIN, 2, 0), rnode(GOUT, 68, 13, 33) },
  { pnode(GPIO, 68, 13, OEIN, 2, 1), rnode(GOUT, 68, 13, 34) },
  { pnode(GPIO, 68, 13, BSLIPMAX, 2, -1), rnode(GIN, 68, 13, 35) },
  { pnode(GPIO, 68, 13, CEIN, 2, -1), rnode(GOUT, 68, 13, 26) },
  { pnode(GPIO, 68, 13, CEOUT, 2, -1), rnode(GOUT, 68, 13, 27) },
  { pnode(GPIO, 68, 13, ACLR, 2, -1), rnode(GOUT, 68, 13, 28) },
  { pnode(GPIO, 68, 13, SCLR, 2, -1), rnode(GOUT, 68, 13, 35) },
  { pnode(GPIO, 68, 13, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 13, 6) },
  { pnode(GPIO, 68, 13, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 13, 7) },
  { pnode(GPIO, 68, 13, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 13, 4) },
  { pnode(GPIO, 68, 13, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 13, 5) },
  { pnode(GPIO, 68, 13, DATAIN, 3, 0), rnode(GOUT, 68, 13, 19) },
  { pnode(GPIO, 68, 13, DATAIN, 3, 1), rnode(GOUT, 68, 13, 20) },
  { pnode(GPIO, 68, 13, DATAIN, 3, 2), rnode(GOUT, 68, 13, 21) },
  { pnode(GPIO, 68, 13, DATAIN, 3, 3), rnode(GOUT, 68, 13, 22) },
  { pnode(GPIO, 68, 13, DATAOUT, 3, 0), rnode(GIN, 68, 13, 30) },
  { pnode(GPIO, 68, 13, DATAOUT, 3, 1), rnode(GIN, 68, 13, 31) },
  { pnode(GPIO, 68, 13, DATAOUT, 3, 2), rnode(GIN, 68, 13, 32) },
  { pnode(GPIO, 68, 13, DATAOUT, 3, 3), rnode(GIN, 68, 13, 33) },
  { pnode(GPIO, 68, 13, DATAOUT, 3, 4), rnode(GIN, 68, 13, 34) },
  { pnode(GPIO, 68, 13, OEIN, 3, 0), rnode(GOUT, 68, 13, 23) },
  { pnode(GPIO, 68, 13, OEIN, 3, 1), rnode(GOUT, 68, 13, 24) },
  { pnode(GPIO, 68, 13, BSLIPMAX, 3, -1), rnode(GIN, 68, 13, 29) },
  { pnode(GPIO, 68, 13, CEIN, 3, -1), rnode(GOUT, 68, 13, 16) },
  { pnode(GPIO, 68, 13, CEOUT, 3, -1), rnode(GOUT, 68, 13, 17) },
  { pnode(GPIO, 68, 13, ACLR, 3, -1), rnode(GOUT, 68, 13, 18) },
  { pnode(GPIO, 68, 13, SCLR, 3, -1), rnode(GOUT, 68, 13, 25) },
  { pnode(GPIO, 68, 13, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 13, 2) },
  { pnode(GPIO, 68, 13, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 13, 3) },
  { pnode(GPIO, 68, 13, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 13, 0) },
  { pnode(GPIO, 68, 13, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 13, 1) },
  { pnode(HMC, 23, 0, AFISEQBUSY, -1, 0), rnode(GOUT, 60, 0, 48) },
  { pnode(HMC, 23, 0, AFISEQBUSY, -1, 1), rnode(GOUT, 60, 0, 47) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 0), rnode(GOUT, 58, 0, 41) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 1), rnode(GOUT, 58, 0, 45) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 2), rnode(GOUT, 58, 0, 40) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 3), rnode(GOUT, 58, 0, 44) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 4), rnode(GOUT, 58, 0, 39) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 5), rnode(GOUT, 58, 0, 43) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 6), rnode(GOUT, 58, 0, 38) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 7), rnode(GOUT, 58, 0, 27) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 8), rnode(GOUT, 58, 0, 28) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 9), rnode(GOUT, 58, 0, 34) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 10), rnode(GOUT, 58, 0, 29) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 11), rnode(GOUT, 58, 0, 32) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 12), rnode(GOUT, 58, 0, 37) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 13), rnode(GOUT, 58, 0, 35) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 14), rnode(GOUT, 58, 0, 36) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 15), rnode(GOUT, 58, 0, 26) },
  { pnode(HMC, 23, 0, AVLREAD, -1, -1), rnode(GOUT, 59, 0, 9) },
  { pnode(HMC, 23, 0, AVLRESETN, -1, -1), rnode(GOUT, 59, 0, 0) },
  { pnode(HMC, 23, 0, AVLWRITE, -1, -1), rnode(GOUT, 58, 0, 46) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 0), rnode(GOUT, 56, 0, 36) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 1), rnode(GOUT, 56, 0, 26) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 2), rnode(GOUT, 57, 0, 0) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 3), rnode(GOUT, 57, 0, 10) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 4), rnode(GOUT, 57, 0, 9) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 5), rnode(GOUT, 57, 0, 11) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 6), rnode(GOUT, 57, 0, 6) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 7), rnode(GOUT, 57, 0, 33) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 8), rnode(GOUT, 57, 0, 32) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 9), rnode(GOUT, 57, 0, 37) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 10), rnode(GOUT, 57, 0, 35) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 11), rnode(GOUT, 57, 0, 36) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 12), rnode(GOUT, 57, 0, 26) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 13), rnode(GOUT, 58, 0, 0) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 14), rnode(GOUT, 58, 0, 10) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 15), rnode(GOUT, 58, 0, 6) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 16), rnode(GOUT, 58, 0, 4) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 17), rnode(GOUT, 58, 0, 3) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 18), rnode(GOUT, 58, 0, 12) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 19), rnode(GOUT, 58, 0, 17) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 20), rnode(GOUT, 58, 0, 19) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 21), rnode(GOUT, 58, 0, 20) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 22), rnode(GOUT, 58, 0, 16) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 23), rnode(GOUT, 58, 0, 21) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 24), rnode(GOUT, 58, 0, 22) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 25), rnode(GOUT, 58, 0, 24) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 26), rnode(GOUT, 58, 0, 25) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 27), rnode(GOUT, 58, 0, 50) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 28), rnode(GOUT, 58, 0, 49) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 29), rnode(GOUT, 58, 0, 48) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 30), rnode(GOUT, 58, 0, 47) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 31), rnode(GOUT, 58, 0, 42) },
  { pnode(HMC, 23, 0, BONDINGIN, 0, 0), rnode(GOUT, 28, 0, 16) },
  { pnode(HMC, 23, 0, BONDINGIN, 0, 1), rnode(GOUT, 34, 0, 6) },
  { pnode(HMC, 23, 0, BONDINGIN, 0, 2), rnode(GOUT, 33, 0, 26) },
  { pnode(HMC, 23, 0, BONDINGIN, 0, 3), rnode(GOUT, 40, 0, 33) },
  { pnode(HMC, 23, 0, BONDINGIN, 1, 0), rnode(GOUT, 23, 0, 44) },
  { pnode(HMC, 23, 0, BONDINGIN, 1, 1), rnode(GOUT, 24, 0, 33) },
  { pnode(HMC, 23, 0, BONDINGIN, 1, 2), rnode(GOUT, 28, 0, 14) },
  { pnode(HMC, 23, 0, BONDINGIN, 1, 3), rnode(GOUT, 29, 0, 21) },
  { pnode(HMC, 23, 0, BONDINGIN, 1, 4), rnode(GOUT, 30, 0, 21) },
  { pnode(HMC, 23, 0, BONDINGIN, 1, 5), rnode(GOUT, 33, 0, 10) },
  { pnode(HMC, 23, 0, BONDINGIN, 2, 0), rnode(GOUT, 23, 0, 39) },
  { pnode(HMC, 23, 0, BONDINGIN, 2, 1), rnode(GOUT, 24, 0, 32) },
  { pnode(HMC, 23, 0, BONDINGIN, 2, 2), rnode(GOUT, 28, 0, 19) },
  { pnode(HMC, 23, 0, BONDINGIN, 2, 3), rnode(GOUT, 29, 0, 22) },
  { pnode(HMC, 23, 0, BONDINGIN, 2, 4), rnode(GOUT, 30, 0, 16) },
  { pnode(HMC, 23, 0, BONDINGIN, 2, 5), rnode(GOUT, 33, 0, 9) },
  { pnode(HMC, 23, 0, GLOBALRESETN, -1, -1), rnode(GOUT, 59, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 0), rnode(GOUT, 22, 0, 34) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 1), rnode(GOUT, 22, 0, 29) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 2), rnode(GOUT, 22, 0, 30) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 3), rnode(GOUT, 22, 0, 31) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 4), rnode(GOUT, 22, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 5), rnode(GOUT, 22, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 6), rnode(GOUT, 22, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 7), rnode(GOUT, 22, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 8), rnode(GOUT, 22, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 9), rnode(GOUT, 22, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 10), rnode(GOUT, 23, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 11), rnode(GOUT, 23, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 12), rnode(GOUT, 23, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 13), rnode(GOUT, 23, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 14), rnode(GOUT, 23, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 15), rnode(GOUT, 23, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 16), rnode(GOUT, 23, 0, 5) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 17), rnode(GOUT, 23, 0, 4) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 18), rnode(GOUT, 23, 0, 3) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 19), rnode(GOUT, 23, 0, 8) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 20), rnode(GOUT, 23, 0, 2) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 21), rnode(GOUT, 23, 0, 1) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 22), rnode(GOUT, 23, 0, 12) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 23), rnode(GOUT, 23, 0, 17) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 24), rnode(GOUT, 23, 0, 13) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 25), rnode(GOUT, 23, 0, 18) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 26), rnode(GOUT, 23, 0, 14) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 27), rnode(GOUT, 23, 0, 19) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 28), rnode(GOUT, 23, 0, 15) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 29), rnode(GOUT, 23, 0, 20) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 30), rnode(GOUT, 23, 0, 16) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 31), rnode(GOUT, 23, 0, 21) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 32), rnode(GOUT, 23, 0, 22) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 33), rnode(GOUT, 23, 0, 23) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 34), rnode(GOUT, 23, 0, 24) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 35), rnode(GOUT, 23, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 36), rnode(GOUT, 23, 0, 50) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 37), rnode(GOUT, 23, 0, 49) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 38), rnode(GOUT, 23, 0, 48) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 39), rnode(GOUT, 23, 0, 47) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 40), rnode(GOUT, 23, 0, 42) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 41), rnode(GOUT, 23, 0, 46) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 0), rnode(GOUT, 23, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 1), rnode(GOUT, 23, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 2), rnode(GOUT, 24, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 3), rnode(GOUT, 24, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 4), rnode(GOUT, 24, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 5), rnode(GOUT, 24, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 6), rnode(GOUT, 24, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 7), rnode(GOUT, 24, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 8), rnode(GOUT, 24, 0, 5) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 9), rnode(GOUT, 24, 0, 4) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 10), rnode(GOUT, 24, 0, 3) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 11), rnode(GOUT, 24, 0, 8) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 12), rnode(GOUT, 24, 0, 2) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 13), rnode(GOUT, 24, 0, 1) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 14), rnode(GOUT, 24, 0, 12) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 15), rnode(GOUT, 24, 0, 17) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 16), rnode(GOUT, 24, 0, 13) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 17), rnode(GOUT, 24, 0, 18) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 18), rnode(GOUT, 24, 0, 14) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 19), rnode(GOUT, 24, 0, 19) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 20), rnode(GOUT, 24, 0, 15) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 21), rnode(GOUT, 24, 0, 20) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 22), rnode(GOUT, 24, 0, 16) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 23), rnode(GOUT, 24, 0, 21) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 24), rnode(GOUT, 24, 0, 22) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 25), rnode(GOUT, 24, 0, 23) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 26), rnode(GOUT, 24, 0, 24) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 27), rnode(GOUT, 24, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 28), rnode(GOUT, 24, 0, 50) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 29), rnode(GOUT, 24, 0, 49) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 30), rnode(GOUT, 24, 0, 48) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 31), rnode(GOUT, 24, 0, 47) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 32), rnode(GOUT, 24, 0, 42) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 33), rnode(GOUT, 24, 0, 41) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 34), rnode(GOUT, 24, 0, 45) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 35), rnode(GOUT, 24, 0, 40) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 36), rnode(GOUT, 24, 0, 44) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 37), rnode(GOUT, 24, 0, 39) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 38), rnode(GOUT, 24, 0, 27) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 39), rnode(GOUT, 24, 0, 28) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 40), rnode(GOUT, 24, 0, 34) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 41), rnode(GOUT, 24, 0, 29) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 0), rnode(GOUT, 24, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 1), rnode(GOUT, 24, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 2), rnode(GOUT, 24, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 3), rnode(GOUT, 24, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 4), rnode(GOUT, 25, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 5), rnode(GOUT, 25, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 6), rnode(GOUT, 25, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 7), rnode(GOUT, 25, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 8), rnode(GOUT, 25, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 9), rnode(GOUT, 25, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 10), rnode(GOUT, 25, 0, 5) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 11), rnode(GOUT, 25, 0, 4) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 12), rnode(GOUT, 25, 0, 3) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 13), rnode(GOUT, 25, 0, 8) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 14), rnode(GOUT, 25, 0, 2) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 15), rnode(GOUT, 25, 0, 1) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 16), rnode(GOUT, 25, 0, 12) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 17), rnode(GOUT, 25, 0, 17) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 18), rnode(GOUT, 25, 0, 13) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 19), rnode(GOUT, 25, 0, 18) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 20), rnode(GOUT, 25, 0, 14) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 21), rnode(GOUT, 25, 0, 19) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 22), rnode(GOUT, 25, 0, 15) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 23), rnode(GOUT, 25, 0, 20) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 24), rnode(GOUT, 25, 0, 16) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 25), rnode(GOUT, 25, 0, 21) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 26), rnode(GOUT, 25, 0, 22) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 27), rnode(GOUT, 25, 0, 23) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 28), rnode(GOUT, 25, 0, 24) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 29), rnode(GOUT, 25, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 30), rnode(GOUT, 25, 0, 50) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 31), rnode(GOUT, 25, 0, 49) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 32), rnode(GOUT, 25, 0, 48) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 33), rnode(GOUT, 25, 0, 47) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 34), rnode(GOUT, 25, 0, 46) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 35), rnode(GOUT, 25, 0, 41) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 36), rnode(GOUT, 25, 0, 45) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 37), rnode(GOUT, 25, 0, 40) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 38), rnode(GOUT, 25, 0, 44) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 39), rnode(GOUT, 25, 0, 39) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 40), rnode(GOUT, 25, 0, 43) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 41), rnode(GOUT, 28, 0, 17) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 0), rnode(GOUT, 28, 0, 21) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 1), rnode(GOUT, 28, 0, 22) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 2), rnode(GOUT, 28, 0, 23) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 3), rnode(GOUT, 28, 0, 24) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 4), rnode(GOUT, 28, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 5), rnode(GOUT, 28, 0, 50) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 6), rnode(GOUT, 28, 0, 49) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 7), rnode(GOUT, 28, 0, 48) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 8), rnode(GOUT, 28, 0, 47) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 9), rnode(GOUT, 28, 0, 42) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 10), rnode(GOUT, 28, 0, 46) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 11), rnode(GOUT, 28, 0, 41) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 12), rnode(GOUT, 28, 0, 45) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 13), rnode(GOUT, 28, 0, 40) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 14), rnode(GOUT, 28, 0, 44) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 15), rnode(GOUT, 28, 0, 39) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 16), rnode(GOUT, 28, 0, 43) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 17), rnode(GOUT, 28, 0, 38) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 18), rnode(GOUT, 28, 0, 27) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 19), rnode(GOUT, 28, 0, 28) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 20), rnode(GOUT, 28, 0, 34) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 21), rnode(GOUT, 28, 0, 29) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 22), rnode(GOUT, 28, 0, 30) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 23), rnode(GOUT, 28, 0, 31) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 24), rnode(GOUT, 28, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 25), rnode(GOUT, 28, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 26), rnode(GOUT, 28, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 27), rnode(GOUT, 28, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 28), rnode(GOUT, 28, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 29), rnode(GOUT, 28, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 30), rnode(GOUT, 29, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 31), rnode(GOUT, 29, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 32), rnode(GOUT, 29, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 33), rnode(GOUT, 29, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 34), rnode(GOUT, 29, 0, 1) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 35), rnode(GOUT, 29, 0, 12) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 36), rnode(GOUT, 29, 0, 17) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 37), rnode(GOUT, 29, 0, 13) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 38), rnode(GOUT, 29, 0, 18) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 39), rnode(GOUT, 29, 0, 14) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 40), rnode(GOUT, 29, 0, 19) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 41), rnode(GOUT, 29, 0, 15) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 0), rnode(GOUT, 29, 0, 23) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 1), rnode(GOUT, 29, 0, 24) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 2), rnode(GOUT, 29, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 3), rnode(GOUT, 29, 0, 50) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 4), rnode(GOUT, 29, 0, 49) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 5), rnode(GOUT, 29, 0, 48) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 6), rnode(GOUT, 29, 0, 47) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 7), rnode(GOUT, 29, 0, 42) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 8), rnode(GOUT, 29, 0, 46) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 9), rnode(GOUT, 29, 0, 41) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 10), rnode(GOUT, 29, 0, 45) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 11), rnode(GOUT, 29, 0, 40) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 12), rnode(GOUT, 29, 0, 44) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 13), rnode(GOUT, 29, 0, 39) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 14), rnode(GOUT, 29, 0, 43) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 15), rnode(GOUT, 29, 0, 38) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 16), rnode(GOUT, 29, 0, 27) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 17), rnode(GOUT, 29, 0, 28) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 18), rnode(GOUT, 29, 0, 34) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 19), rnode(GOUT, 29, 0, 29) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 20), rnode(GOUT, 29, 0, 30) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 21), rnode(GOUT, 29, 0, 31) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 22), rnode(GOUT, 29, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 23), rnode(GOUT, 29, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 24), rnode(GOUT, 29, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 25), rnode(GOUT, 29, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 26), rnode(GOUT, 29, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 27), rnode(GOUT, 29, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 28), rnode(GOUT, 30, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 29), rnode(GOUT, 30, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 30), rnode(GOUT, 30, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 31), rnode(GOUT, 30, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 32), rnode(GOUT, 30, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 33), rnode(GOUT, 30, 0, 5) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 34), rnode(GOUT, 30, 0, 2) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 35), rnode(GOUT, 30, 0, 1) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 36), rnode(GOUT, 30, 0, 12) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 37), rnode(GOUT, 30, 0, 17) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 38), rnode(GOUT, 30, 0, 13) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 39), rnode(GOUT, 30, 0, 18) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 40), rnode(GOUT, 30, 0, 14) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 41), rnode(GOUT, 30, 0, 19) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 0), rnode(GOUT, 30, 0, 22) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 1), rnode(GOUT, 30, 0, 23) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 2), rnode(GOUT, 30, 0, 24) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 3), rnode(GOUT, 30, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 4), rnode(GOUT, 30, 0, 50) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 5), rnode(GOUT, 30, 0, 49) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 6), rnode(GOUT, 30, 0, 48) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 7), rnode(GOUT, 30, 0, 47) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 8), rnode(GOUT, 30, 0, 42) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 9), rnode(GOUT, 30, 0, 46) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 10), rnode(GOUT, 30, 0, 41) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 11), rnode(GOUT, 30, 0, 45) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 12), rnode(GOUT, 30, 0, 40) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 13), rnode(GOUT, 30, 0, 44) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 14), rnode(GOUT, 30, 0, 39) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 15), rnode(GOUT, 30, 0, 43) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 16), rnode(GOUT, 30, 0, 38) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 17), rnode(GOUT, 30, 0, 27) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 18), rnode(GOUT, 30, 0, 28) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 19), rnode(GOUT, 30, 0, 34) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 20), rnode(GOUT, 30, 0, 29) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 21), rnode(GOUT, 30, 0, 30) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 22), rnode(GOUT, 30, 0, 31) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 23), rnode(GOUT, 30, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 24), rnode(GOUT, 30, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 25), rnode(GOUT, 30, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 26), rnode(GOUT, 30, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 27), rnode(GOUT, 30, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 28), rnode(GOUT, 30, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 29), rnode(GOUT, 31, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 30), rnode(GOUT, 31, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 31), rnode(GOUT, 32, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 32), rnode(GOUT, 32, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 33), rnode(GOUT, 32, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 34), rnode(GOUT, 32, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 35), rnode(GOUT, 32, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 36), rnode(GOUT, 32, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 37), rnode(GOUT, 32, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 38), rnode(GOUT, 32, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 39), rnode(GOUT, 32, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 40), rnode(GOUT, 32, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 41), rnode(GOUT, 32, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTCMDRESETN, 0, -1), rnode(GOUT, 23, 0, 45) },
  { pnode(HMC, 23, 0, IAVSTCMDRESETN, 1, -1), rnode(GOUT, 24, 0, 30) },
  { pnode(HMC, 23, 0, IAVSTCMDRESETN, 2, -1), rnode(GOUT, 28, 0, 13) },
  { pnode(HMC, 23, 0, IAVSTCMDRESETN, 3, -1), rnode(GOUT, 29, 0, 20) },
  { pnode(HMC, 23, 0, IAVSTCMDRESETN, 4, -1), rnode(GOUT, 30, 0, 15) },
  { pnode(HMC, 23, 0, IAVSTCMDRESETN, 5, -1), rnode(GOUT, 32, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTRDCLK, 0, -1), rnode(DCMUX, 28, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTRDCLK, 1, -1), rnode(DCMUX, 33, 0, 8) },
  { pnode(HMC, 23, 0, IAVSTRDCLK, 2, -1), rnode(DCMUX, 33, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTRDCLK, 3, -1), rnode(DCMUX, 39, 0, 8) },
  { pnode(HMC, 23, 0, IAVSTRDREADY, 0, -1), rnode(GOUT, 28, 0, 15) },
  { pnode(HMC, 23, 0, IAVSTRDREADY, 1, -1), rnode(GOUT, 34, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTRDREADY, 2, -1), rnode(GOUT, 40, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTRDREADY, 3, -1), rnode(GOUT, 48, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTRDRESETN, 0, -1), rnode(GOUT, 28, 0, 20) },
  { pnode(HMC, 23, 0, IAVSTRDRESETN, 1, -1), rnode(GOUT, 34, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTRDRESETN, 2, -1), rnode(GOUT, 40, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTRDRESETN, 3, -1), rnode(GOUT, 48, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTWRACKREADY, 0, -1), rnode(GOUT, 23, 0, 40) },
  { pnode(HMC, 23, 0, IAVSTWRACKREADY, 1, -1), rnode(GOUT, 24, 0, 31) },
  { pnode(HMC, 23, 0, IAVSTWRACKREADY, 2, -1), rnode(GOUT, 28, 0, 18) },
  { pnode(HMC, 23, 0, IAVSTWRACKREADY, 3, -1), rnode(GOUT, 29, 0, 16) },
  { pnode(HMC, 23, 0, IAVSTWRACKREADY, 4, -1), rnode(GOUT, 30, 0, 20) },
  { pnode(HMC, 23, 0, IAVSTWRACKREADY, 5, -1), rnode(GOUT, 33, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRCLK, -1, 0), rnode(DCMUX, 41, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRCLK, -1, 1), rnode(DCMUX, 49, 0, 2) },
  { pnode(HMC, 23, 0, IAVSTWRCLK, -1, 2), rnode(DCMUX, 43, 0, 8) },
  { pnode(HMC, 23, 0, IAVSTWRCLK, -1, 3), rnode(DCMUX, 49, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 0), rnode(GOUT, 33, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 1), rnode(GOUT, 33, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 2), rnode(GOUT, 33, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 3), rnode(GOUT, 33, 0, 5) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 4), rnode(GOUT, 33, 0, 4) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 5), rnode(GOUT, 33, 0, 3) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 6), rnode(GOUT, 33, 0, 8) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 7), rnode(GOUT, 33, 0, 2) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 8), rnode(GOUT, 33, 0, 1) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 9), rnode(GOUT, 33, 0, 12) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 10), rnode(GOUT, 33, 0, 17) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 11), rnode(GOUT, 33, 0, 13) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 12), rnode(GOUT, 33, 0, 18) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 13), rnode(GOUT, 33, 0, 14) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 14), rnode(GOUT, 33, 0, 19) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 15), rnode(GOUT, 33, 0, 15) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 16), rnode(GOUT, 33, 0, 20) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 17), rnode(GOUT, 33, 0, 16) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 18), rnode(GOUT, 33, 0, 21) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 19), rnode(GOUT, 33, 0, 22) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 20), rnode(GOUT, 33, 0, 23) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 21), rnode(GOUT, 33, 0, 24) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 22), rnode(GOUT, 33, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 23), rnode(GOUT, 33, 0, 50) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 24), rnode(GOUT, 33, 0, 49) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 25), rnode(GOUT, 33, 0, 48) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 26), rnode(GOUT, 33, 0, 47) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 27), rnode(GOUT, 33, 0, 42) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 28), rnode(GOUT, 33, 0, 46) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 29), rnode(GOUT, 33, 0, 41) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 30), rnode(GOUT, 33, 0, 45) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 31), rnode(GOUT, 33, 0, 40) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 32), rnode(GOUT, 33, 0, 44) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 33), rnode(GOUT, 33, 0, 39) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 34), rnode(GOUT, 33, 0, 43) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 35), rnode(GOUT, 33, 0, 27) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 36), rnode(GOUT, 33, 0, 28) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 37), rnode(GOUT, 33, 0, 34) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 38), rnode(GOUT, 33, 0, 29) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 39), rnode(GOUT, 33, 0, 30) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 40), rnode(GOUT, 33, 0, 31) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 41), rnode(GOUT, 33, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 42), rnode(GOUT, 33, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 43), rnode(GOUT, 33, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 44), rnode(GOUT, 33, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 45), rnode(GOUT, 34, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 46), rnode(GOUT, 34, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 47), rnode(GOUT, 35, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 48), rnode(GOUT, 35, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 49), rnode(GOUT, 35, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 50), rnode(GOUT, 35, 0, 4) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 51), rnode(GOUT, 35, 0, 3) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 52), rnode(GOUT, 35, 0, 8) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 53), rnode(GOUT, 35, 0, 2) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 54), rnode(GOUT, 35, 0, 12) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 55), rnode(GOUT, 35, 0, 17) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 56), rnode(GOUT, 35, 0, 13) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 57), rnode(GOUT, 35, 0, 18) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 58), rnode(GOUT, 35, 0, 14) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 59), rnode(GOUT, 35, 0, 19) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 60), rnode(GOUT, 35, 0, 15) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 61), rnode(GOUT, 35, 0, 20) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 62), rnode(GOUT, 35, 0, 16) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 63), rnode(GOUT, 35, 0, 21) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 64), rnode(GOUT, 35, 0, 22) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 65), rnode(GOUT, 35, 0, 23) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 66), rnode(GOUT, 35, 0, 24) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 67), rnode(GOUT, 35, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 68), rnode(GOUT, 35, 0, 50) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 69), rnode(GOUT, 35, 0, 49) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 70), rnode(GOUT, 35, 0, 48) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 71), rnode(GOUT, 35, 0, 47) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 72), rnode(GOUT, 35, 0, 42) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 73), rnode(GOUT, 35, 0, 40) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 74), rnode(GOUT, 35, 0, 39) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 75), rnode(GOUT, 35, 0, 43) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 76), rnode(GOUT, 35, 0, 38) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 77), rnode(GOUT, 35, 0, 30) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 78), rnode(GOUT, 35, 0, 31) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 79), rnode(GOUT, 35, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 80), rnode(GOUT, 35, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 81), rnode(GOUT, 35, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 82), rnode(GOUT, 35, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 83), rnode(GOUT, 35, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 84), rnode(GOUT, 35, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 85), rnode(GOUT, 36, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 86), rnode(GOUT, 36, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 87), rnode(GOUT, 36, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 88), rnode(GOUT, 36, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 89), rnode(GOUT, 36, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 0), rnode(GOUT, 36, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 1), rnode(GOUT, 36, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 2), rnode(GOUT, 36, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 3), rnode(GOUT, 36, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 4), rnode(GOUT, 37, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 5), rnode(GOUT, 37, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 6), rnode(GOUT, 37, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 7), rnode(GOUT, 37, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 8), rnode(GOUT, 37, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 9), rnode(GOUT, 37, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 10), rnode(GOUT, 37, 0, 5) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 11), rnode(GOUT, 37, 0, 4) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 12), rnode(GOUT, 37, 0, 3) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 13), rnode(GOUT, 37, 0, 8) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 14), rnode(GOUT, 37, 0, 2) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 15), rnode(GOUT, 37, 0, 1) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 16), rnode(GOUT, 37, 0, 12) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 17), rnode(GOUT, 37, 0, 17) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 18), rnode(GOUT, 37, 0, 13) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 19), rnode(GOUT, 37, 0, 18) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 20), rnode(GOUT, 37, 0, 24) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 21), rnode(GOUT, 37, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 22), rnode(GOUT, 37, 0, 44) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 23), rnode(GOUT, 37, 0, 39) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 24), rnode(GOUT, 37, 0, 27) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 25), rnode(GOUT, 37, 0, 29) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 26), rnode(GOUT, 37, 0, 30) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 27), rnode(GOUT, 37, 0, 31) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 28), rnode(GOUT, 37, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 29), rnode(GOUT, 37, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 30), rnode(GOUT, 37, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 31), rnode(GOUT, 37, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 32), rnode(GOUT, 37, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 33), rnode(GOUT, 37, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 34), rnode(GOUT, 38, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 35), rnode(GOUT, 38, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 36), rnode(GOUT, 38, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 37), rnode(GOUT, 39, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 38), rnode(GOUT, 39, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 39), rnode(GOUT, 40, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 40), rnode(GOUT, 40, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 41), rnode(GOUT, 40, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 42), rnode(GOUT, 40, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 43), rnode(GOUT, 40, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 44), rnode(GOUT, 40, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 45), rnode(GOUT, 40, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 46), rnode(GOUT, 40, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 47), rnode(GOUT, 41, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 48), rnode(GOUT, 41, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 49), rnode(GOUT, 41, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 50), rnode(GOUT, 41, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 51), rnode(GOUT, 41, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 52), rnode(GOUT, 41, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 53), rnode(GOUT, 41, 0, 5) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 54), rnode(GOUT, 41, 0, 4) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 55), rnode(GOUT, 41, 0, 3) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 56), rnode(GOUT, 41, 0, 8) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 57), rnode(GOUT, 41, 0, 2) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 58), rnode(GOUT, 41, 0, 1) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 59), rnode(GOUT, 41, 0, 12) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 60), rnode(GOUT, 41, 0, 19) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 61), rnode(GOUT, 41, 0, 15) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 62), rnode(GOUT, 41, 0, 20) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 63), rnode(GOUT, 41, 0, 16) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 64), rnode(GOUT, 41, 0, 21) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 65), rnode(GOUT, 41, 0, 22) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 66), rnode(GOUT, 41, 0, 23) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 67), rnode(GOUT, 41, 0, 24) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 68), rnode(GOUT, 41, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 69), rnode(GOUT, 41, 0, 50) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 70), rnode(GOUT, 41, 0, 49) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 71), rnode(GOUT, 41, 0, 48) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 72), rnode(GOUT, 41, 0, 47) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 73), rnode(GOUT, 41, 0, 42) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 74), rnode(GOUT, 41, 0, 46) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 75), rnode(GOUT, 41, 0, 41) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 76), rnode(GOUT, 41, 0, 27) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 77), rnode(GOUT, 41, 0, 28) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 78), rnode(GOUT, 41, 0, 34) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 79), rnode(GOUT, 41, 0, 29) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 80), rnode(GOUT, 41, 0, 30) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 81), rnode(GOUT, 41, 0, 31) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 82), rnode(GOUT, 41, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 83), rnode(GOUT, 41, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 84), rnode(GOUT, 41, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 85), rnode(GOUT, 41, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 86), rnode(GOUT, 41, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 87), rnode(GOUT, 42, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 88), rnode(GOUT, 42, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 89), rnode(GOUT, 42, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 0), rnode(GOUT, 42, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 1), rnode(GOUT, 42, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 2), rnode(GOUT, 42, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 3), rnode(GOUT, 42, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 4), rnode(GOUT, 43, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 5), rnode(GOUT, 43, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 6), rnode(GOUT, 43, 0, 4) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 7), rnode(GOUT, 43, 0, 8) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 8), rnode(GOUT, 43, 0, 2) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 9), rnode(GOUT, 43, 0, 1) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 10), rnode(GOUT, 43, 0, 12) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 11), rnode(GOUT, 43, 0, 13) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 12), rnode(GOUT, 43, 0, 18) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 13), rnode(GOUT, 43, 0, 14) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 14), rnode(GOUT, 43, 0, 19) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 15), rnode(GOUT, 43, 0, 15) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 16), rnode(GOUT, 43, 0, 20) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 17), rnode(GOUT, 43, 0, 16) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 18), rnode(GOUT, 43, 0, 21) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 19), rnode(GOUT, 43, 0, 22) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 20), rnode(GOUT, 43, 0, 23) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 21), rnode(GOUT, 43, 0, 24) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 22), rnode(GOUT, 43, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 23), rnode(GOUT, 43, 0, 50) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 24), rnode(GOUT, 43, 0, 49) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 25), rnode(GOUT, 43, 0, 48) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 26), rnode(GOUT, 43, 0, 47) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 27), rnode(GOUT, 43, 0, 42) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 28), rnode(GOUT, 43, 0, 46) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 29), rnode(GOUT, 43, 0, 41) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 30), rnode(GOUT, 43, 0, 39) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 31), rnode(GOUT, 43, 0, 43) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 32), rnode(GOUT, 43, 0, 38) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 33), rnode(GOUT, 43, 0, 30) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 34), rnode(GOUT, 43, 0, 31) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 35), rnode(GOUT, 43, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 36), rnode(GOUT, 43, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 37), rnode(GOUT, 43, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 38), rnode(GOUT, 43, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 39), rnode(GOUT, 43, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 40), rnode(GOUT, 43, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 41), rnode(GOUT, 44, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 42), rnode(GOUT, 44, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 43), rnode(GOUT, 44, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 44), rnode(GOUT, 44, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 45), rnode(GOUT, 44, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 46), rnode(GOUT, 44, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 47), rnode(GOUT, 44, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 48), rnode(GOUT, 44, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 49), rnode(GOUT, 45, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 50), rnode(GOUT, 45, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 51), rnode(GOUT, 45, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 52), rnode(GOUT, 45, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 53), rnode(GOUT, 45, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 54), rnode(GOUT, 45, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 55), rnode(GOUT, 45, 0, 5) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 56), rnode(GOUT, 45, 0, 4) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 57), rnode(GOUT, 45, 0, 3) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 58), rnode(GOUT, 45, 0, 8) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 59), rnode(GOUT, 45, 0, 2) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 60), rnode(GOUT, 45, 0, 1) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 61), rnode(GOUT, 45, 0, 12) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 62), rnode(GOUT, 45, 0, 17) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 63), rnode(GOUT, 45, 0, 13) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 64), rnode(GOUT, 45, 0, 18) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 65), rnode(GOUT, 45, 0, 14) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 66), rnode(GOUT, 45, 0, 15) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 67), rnode(GOUT, 45, 0, 20) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 68), rnode(GOUT, 45, 0, 22) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 69), rnode(GOUT, 45, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 70), rnode(GOUT, 45, 0, 50) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 71), rnode(GOUT, 45, 0, 49) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 72), rnode(GOUT, 45, 0, 48) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 73), rnode(GOUT, 45, 0, 47) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 74), rnode(GOUT, 45, 0, 42) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 75), rnode(GOUT, 45, 0, 46) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 76), rnode(GOUT, 45, 0, 45) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 77), rnode(GOUT, 45, 0, 40) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 78), rnode(GOUT, 45, 0, 44) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 79), rnode(GOUT, 45, 0, 39) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 80), rnode(GOUT, 47, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 81), rnode(GOUT, 47, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 82), rnode(GOUT, 47, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 83), rnode(GOUT, 47, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 84), rnode(GOUT, 47, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 85), rnode(GOUT, 47, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 86), rnode(GOUT, 47, 0, 5) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 87), rnode(GOUT, 47, 0, 4) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 88), rnode(GOUT, 47, 0, 3) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 89), rnode(GOUT, 47, 0, 8) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 0), rnode(GOUT, 47, 0, 2) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 1), rnode(GOUT, 47, 0, 1) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 2), rnode(GOUT, 47, 0, 12) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 3), rnode(GOUT, 47, 0, 17) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 4), rnode(GOUT, 47, 0, 13) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 5), rnode(GOUT, 47, 0, 18) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 6), rnode(GOUT, 47, 0, 14) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 7), rnode(GOUT, 47, 0, 19) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 8), rnode(GOUT, 47, 0, 15) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 9), rnode(GOUT, 47, 0, 20) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 10), rnode(GOUT, 47, 0, 16) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 11), rnode(GOUT, 47, 0, 21) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 12), rnode(GOUT, 47, 0, 22) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 13), rnode(GOUT, 47, 0, 23) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 14), rnode(GOUT, 47, 0, 24) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 15), rnode(GOUT, 47, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 16), rnode(GOUT, 47, 0, 50) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 17), rnode(GOUT, 47, 0, 49) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 18), rnode(GOUT, 47, 0, 48) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 19), rnode(GOUT, 47, 0, 47) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 20), rnode(GOUT, 47, 0, 42) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 21), rnode(GOUT, 47, 0, 46) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 22), rnode(GOUT, 47, 0, 41) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 23), rnode(GOUT, 47, 0, 45) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 24), rnode(GOUT, 47, 0, 40) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 25), rnode(GOUT, 47, 0, 44) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 26), rnode(GOUT, 47, 0, 39) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 27), rnode(GOUT, 47, 0, 43) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 28), rnode(GOUT, 47, 0, 38) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 29), rnode(GOUT, 47, 0, 27) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 30), rnode(GOUT, 47, 0, 28) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 31), rnode(GOUT, 47, 0, 34) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 32), rnode(GOUT, 47, 0, 29) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 33), rnode(GOUT, 47, 0, 30) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 34), rnode(GOUT, 47, 0, 31) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 35), rnode(GOUT, 47, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 36), rnode(GOUT, 47, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 37), rnode(GOUT, 47, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 38), rnode(GOUT, 47, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 39), rnode(GOUT, 47, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 40), rnode(GOUT, 47, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 41), rnode(GOUT, 48, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 42), rnode(GOUT, 48, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 43), rnode(GOUT, 48, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 44), rnode(GOUT, 48, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 45), rnode(GOUT, 48, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 46), rnode(GOUT, 48, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 47), rnode(GOUT, 48, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 48), rnode(GOUT, 49, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 49), rnode(GOUT, 49, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 50), rnode(GOUT, 49, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 51), rnode(GOUT, 49, 0, 4) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 52), rnode(GOUT, 49, 0, 3) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 53), rnode(GOUT, 49, 0, 12) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 54), rnode(GOUT, 49, 0, 17) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 55), rnode(GOUT, 49, 0, 19) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 56), rnode(GOUT, 49, 0, 20) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 57), rnode(GOUT, 49, 0, 16) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 58), rnode(GOUT, 49, 0, 21) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 59), rnode(GOUT, 49, 0, 22) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 60), rnode(GOUT, 49, 0, 24) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 61), rnode(GOUT, 49, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 62), rnode(GOUT, 49, 0, 50) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 63), rnode(GOUT, 49, 0, 49) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 64), rnode(GOUT, 49, 0, 48) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 65), rnode(GOUT, 49, 0, 47) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 66), rnode(GOUT, 49, 0, 42) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 67), rnode(GOUT, 49, 0, 46) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 68), rnode(GOUT, 49, 0, 41) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 69), rnode(GOUT, 49, 0, 45) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 70), rnode(GOUT, 49, 0, 40) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 71), rnode(GOUT, 49, 0, 44) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 72), rnode(GOUT, 49, 0, 39) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 73), rnode(GOUT, 49, 0, 43) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 74), rnode(GOUT, 49, 0, 38) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 75), rnode(GOUT, 49, 0, 27) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 76), rnode(GOUT, 49, 0, 28) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 77), rnode(GOUT, 49, 0, 34) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 78), rnode(GOUT, 49, 0, 29) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 79), rnode(GOUT, 49, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 80), rnode(GOUT, 50, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 81), rnode(GOUT, 50, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 82), rnode(GOUT, 50, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 83), rnode(GOUT, 50, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 84), rnode(GOUT, 50, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 85), rnode(GOUT, 50, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 86), rnode(GOUT, 55, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 87), rnode(GOUT, 55, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 88), rnode(GOUT, 55, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 89), rnode(GOUT, 55, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTWRRESETN, 0, -1), rnode(GOUT, 40, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTWRRESETN, 1, -1), rnode(GOUT, 48, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTWRRESETN, 2, -1), rnode(GOUT, 44, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTWRRESETN, 3, -1), rnode(GOUT, 48, 0, 6) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 0), rnode(GOUT, 21, 0, 21) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 1), rnode(GOUT, 21, 0, 12) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 2), rnode(GOUT, 19, 0, 21) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 3), rnode(GOUT, 19, 0, 12) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 4), rnode(GOUT, 19, 0, 28) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 5), rnode(GOUT, 19, 0, 42) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 6), rnode(GOUT, 18, 0, 21) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 7), rnode(GOUT, 18, 0, 12) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 8), rnode(GOUT, 14, 0, 28) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 9), rnode(GOUT, 14, 0, 42) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 10), rnode(GOUT, 14, 0, 21) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 11), rnode(GOUT, 14, 0, 12) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 12), rnode(GOUT, 12, 0, 21) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 13), rnode(GOUT, 12, 0, 12) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 14), rnode(GOUT, 10, 0, 28) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 15), rnode(GOUT, 10, 0, 42) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 0), rnode(GOUT, 21, 0, 14) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 1), rnode(GOUT, 21, 0, 22) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 2), rnode(GOUT, 21, 0, 15) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 3), rnode(GOUT, 21, 0, 23) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 4), rnode(GOUT, 21, 0, 3) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 5), rnode(GOUT, 21, 0, 17) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 6), rnode(GOUT, 21, 0, 8) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 7), rnode(GOUT, 21, 0, 18) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 8), rnode(GOUT, 19, 0, 14) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 9), rnode(GOUT, 19, 0, 22) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 10), rnode(GOUT, 19, 0, 15) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 11), rnode(GOUT, 19, 0, 23) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 12), rnode(GOUT, 19, 0, 3) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 13), rnode(GOUT, 19, 0, 17) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 14), rnode(GOUT, 19, 0, 8) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 15), rnode(GOUT, 19, 0, 18) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 16), rnode(GOUT, 19, 0, 44) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 17), rnode(GOUT, 19, 0, 34) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 18), rnode(GOUT, 19, 0, 43) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 19), rnode(GOUT, 19, 0, 29) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 20), rnode(GOUT, 19, 0, 49) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 21), rnode(GOUT, 19, 0, 41) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 22), rnode(GOUT, 19, 0, 48) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 23), rnode(GOUT, 19, 0, 40) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 24), rnode(GOUT, 18, 0, 14) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 25), rnode(GOUT, 18, 0, 22) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 26), rnode(GOUT, 18, 0, 15) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 27), rnode(GOUT, 18, 0, 23) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 28), rnode(GOUT, 18, 0, 3) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 29), rnode(GOUT, 18, 0, 17) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 30), rnode(GOUT, 18, 0, 8) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 31), rnode(GOUT, 18, 0, 18) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 32), rnode(GOUT, 14, 0, 44) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 33), rnode(GOUT, 14, 0, 34) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 34), rnode(GOUT, 14, 0, 43) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 35), rnode(GOUT, 14, 0, 29) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 36), rnode(GOUT, 14, 0, 49) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 37), rnode(GOUT, 14, 0, 41) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 38), rnode(GOUT, 14, 0, 48) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 39), rnode(GOUT, 14, 0, 40) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 40), rnode(GOUT, 14, 0, 14) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 41), rnode(GOUT, 14, 0, 22) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 42), rnode(GOUT, 14, 0, 15) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 43), rnode(GOUT, 14, 0, 23) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 44), rnode(GOUT, 14, 0, 3) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 45), rnode(GOUT, 14, 0, 17) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 46), rnode(GOUT, 14, 0, 8) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 47), rnode(GOUT, 14, 0, 18) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 48), rnode(GOUT, 12, 0, 14) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 49), rnode(GOUT, 12, 0, 22) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 50), rnode(GOUT, 12, 0, 15) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 51), rnode(GOUT, 12, 0, 23) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 52), rnode(GOUT, 12, 0, 3) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 53), rnode(GOUT, 12, 0, 17) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 54), rnode(GOUT, 12, 0, 8) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 55), rnode(GOUT, 12, 0, 18) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 56), rnode(GOUT, 10, 0, 44) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 57), rnode(GOUT, 10, 0, 34) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 58), rnode(GOUT, 10, 0, 43) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 59), rnode(GOUT, 10, 0, 29) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 60), rnode(GOUT, 10, 0, 49) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 61), rnode(GOUT, 10, 0, 41) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 62), rnode(GOUT, 10, 0, 48) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 63), rnode(GOUT, 10, 0, 40) },
  { pnode(HMC, 23, 0, IOINTBAACLR, -1, 0), rnode(GOUT, 17, 0, 21) },
  { pnode(HMC, 23, 0, IOINTBAACLR, -1, 1), rnode(GOUT, 17, 0, 28) },
  { pnode(HMC, 23, 0, IOINTBAACLR, -1, 2), rnode(GOUT, 17, 0, 42) },
  { pnode(HMC, 23, 0, IOINTBADOUT, -1, 0), rnode(GOUT, 17, 0, 14) },
  { pnode(HMC, 23, 0, IOINTBADOUT, -1, 1), rnode(GOUT, 17, 0, 22) },
  { pnode(HMC, 23, 0, IOINTBADOUT, -1, 2), rnode(GOUT, 17, 0, 15) },
  { pnode(HMC, 23, 0, IOINTBADOUT, -1, 3), rnode(GOUT, 17, 0, 23) },
  { pnode(HMC, 23, 0, IOINTBADOUT, -1, 4), rnode(GOUT, 17, 0, 44) },
  { pnode(HMC, 23, 0, IOINTBADOUT, -1, 5), rnode(GOUT, 17, 0, 34) },
  { pnode(HMC, 23, 0, IOINTBADOUT, -1, 6), rnode(GOUT, 17, 0, 43) },
  { pnode(HMC, 23, 0, IOINTBADOUT, -1, 7), rnode(GOUT, 17, 0, 29) },
  { pnode(HMC, 23, 0, IOINTBADOUT, -1, 8), rnode(GOUT, 17, 0, 49) },
  { pnode(HMC, 23, 0, IOINTBADOUT, -1, 9), rnode(GOUT, 17, 0, 41) },
  { pnode(HMC, 23, 0, IOINTBADOUT, -1, 10), rnode(GOUT, 17, 0, 48) },
  { pnode(HMC, 23, 0, IOINTBADOUT, -1, 11), rnode(GOUT, 17, 0, 40) },
  { pnode(HMC, 23, 0, IOINTCASNACLR, -1, -1), rnode(GOUT, 15, 0, 21) },
  { pnode(HMC, 23, 0, IOINTCASNDOUT, -1, 0), rnode(GOUT, 15, 0, 14) },
  { pnode(HMC, 23, 0, IOINTCASNDOUT, -1, 1), rnode(GOUT, 15, 0, 22) },
  { pnode(HMC, 23, 0, IOINTCASNDOUT, -1, 2), rnode(GOUT, 15, 0, 15) },
  { pnode(HMC, 23, 0, IOINTCASNDOUT, -1, 3), rnode(GOUT, 15, 0, 23) },
  { pnode(HMC, 23, 0, IOINTCKDOUT, -1, 0), rnode(GOUT, 18, 0, 44) },
  { pnode(HMC, 23, 0, IOINTCKDOUT, -1, 1), rnode(GOUT, 18, 0, 34) },
  { pnode(HMC, 23, 0, IOINTCKDOUT, -1, 2), rnode(GOUT, 18, 0, 43) },
  { pnode(HMC, 23, 0, IOINTCKDOUT, -1, 3), rnode(GOUT, 18, 0, 29) },
  { pnode(HMC, 23, 0, IOINTCKEACLR, -1, 0), rnode(GOUT, 44, 0, 12) },
  { pnode(HMC, 23, 0, IOINTCKEACLR, -1, 1), rnode(GOUT, 42, 0, 21) },
  { pnode(HMC, 23, 0, IOINTCKEDOUT, -1, 0), rnode(GOUT, 44, 0, 3) },
  { pnode(HMC, 23, 0, IOINTCKEDOUT, -1, 1), rnode(GOUT, 44, 0, 17) },
  { pnode(HMC, 23, 0, IOINTCKEDOUT, -1, 2), rnode(GOUT, 44, 0, 8) },
  { pnode(HMC, 23, 0, IOINTCKEDOUT, -1, 3), rnode(GOUT, 44, 0, 18) },
  { pnode(HMC, 23, 0, IOINTCKEDOUT, -1, 4), rnode(GOUT, 42, 0, 14) },
  { pnode(HMC, 23, 0, IOINTCKEDOUT, -1, 5), rnode(GOUT, 42, 0, 22) },
  { pnode(HMC, 23, 0, IOINTCKEDOUT, -1, 6), rnode(GOUT, 42, 0, 15) },
  { pnode(HMC, 23, 0, IOINTCKEDOUT, -1, 7), rnode(GOUT, 42, 0, 23) },
  { pnode(HMC, 23, 0, IOINTCKNDOUT, -1, 0), rnode(GOUT, 18, 0, 49) },
  { pnode(HMC, 23, 0, IOINTCKNDOUT, -1, 1), rnode(GOUT, 18, 0, 41) },
  { pnode(HMC, 23, 0, IOINTCKNDOUT, -1, 2), rnode(GOUT, 18, 0, 48) },
  { pnode(HMC, 23, 0, IOINTCKNDOUT, -1, 3), rnode(GOUT, 18, 0, 40) },
  { pnode(HMC, 23, 0, IOINTCSNACLR, -1, 0), rnode(GOUT, 12, 0, 28) },
  { pnode(HMC, 23, 0, IOINTCSNACLR, -1, 1), rnode(GOUT, 12, 0, 42) },
  { pnode(HMC, 23, 0, IOINTCSNDOUT, -1, 0), rnode(GOUT, 12, 0, 44) },
  { pnode(HMC, 23, 0, IOINTCSNDOUT, -1, 1), rnode(GOUT, 12, 0, 34) },
  { pnode(HMC, 23, 0, IOINTCSNDOUT, -1, 2), rnode(GOUT, 12, 0, 43) },
  { pnode(HMC, 23, 0, IOINTCSNDOUT, -1, 3), rnode(GOUT, 12, 0, 29) },
  { pnode(HMC, 23, 0, IOINTCSNDOUT, -1, 4), rnode(GOUT, 12, 0, 49) },
  { pnode(HMC, 23, 0, IOINTCSNDOUT, -1, 5), rnode(GOUT, 12, 0, 41) },
  { pnode(HMC, 23, 0, IOINTCSNDOUT, -1, 6), rnode(GOUT, 12, 0, 48) },
  { pnode(HMC, 23, 0, IOINTCSNDOUT, -1, 7), rnode(GOUT, 12, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 0), rnode(GOUT, 38, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 1), rnode(GOUT, 38, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 2), rnode(GOUT, 38, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 3), rnode(GOUT, 38, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 4), rnode(GOUT, 46, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 5), rnode(GOUT, 46, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 6), rnode(GOUT, 46, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 7), rnode(GOUT, 46, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 8), rnode(GOUT, 53, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 9), rnode(GOUT, 53, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 10), rnode(GOUT, 53, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 11), rnode(GOUT, 53, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 12), rnode(GOUT, 61, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 13), rnode(GOUT, 61, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 14), rnode(GOUT, 61, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 15), rnode(GOUT, 61, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 16), rnode(GOUT, 66, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 17), rnode(GOUT, 66, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 18), rnode(GOUT, 66, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 19), rnode(GOUT, 66, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 0), rnode(GOUT, 32, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 1), rnode(GOUT, 32, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 2), rnode(GOUT, 32, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 3), rnode(GOUT, 32, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 4), rnode(GOUT, 32, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 5), rnode(GOUT, 32, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 6), rnode(GOUT, 32, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 7), rnode(GOUT, 32, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 8), rnode(GOUT, 32, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 9), rnode(GOUT, 32, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 10), rnode(GOUT, 32, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 11), rnode(GOUT, 32, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 12), rnode(GOUT, 34, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 13), rnode(GOUT, 34, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 14), rnode(GOUT, 34, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 15), rnode(GOUT, 34, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 16), rnode(GOUT, 36, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 17), rnode(GOUT, 36, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 18), rnode(GOUT, 36, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 19), rnode(GOUT, 36, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 20), rnode(GOUT, 36, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 21), rnode(GOUT, 36, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 22), rnode(GOUT, 36, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 23), rnode(GOUT, 36, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 24), rnode(GOUT, 36, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 25), rnode(GOUT, 36, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 26), rnode(GOUT, 36, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 27), rnode(GOUT, 36, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 28), rnode(GOUT, 38, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 29), rnode(GOUT, 38, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 30), rnode(GOUT, 38, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 31), rnode(GOUT, 38, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 36), rnode(GOUT, 40, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 37), rnode(GOUT, 40, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 38), rnode(GOUT, 40, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 39), rnode(GOUT, 40, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 40), rnode(GOUT, 40, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 41), rnode(GOUT, 40, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 42), rnode(GOUT, 40, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 43), rnode(GOUT, 40, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 44), rnode(GOUT, 40, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 45), rnode(GOUT, 40, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 46), rnode(GOUT, 40, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 47), rnode(GOUT, 40, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 48), rnode(GOUT, 42, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 49), rnode(GOUT, 42, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 50), rnode(GOUT, 42, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 51), rnode(GOUT, 42, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 52), rnode(GOUT, 44, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 53), rnode(GOUT, 44, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 54), rnode(GOUT, 44, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 55), rnode(GOUT, 44, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 56), rnode(GOUT, 44, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 57), rnode(GOUT, 44, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 58), rnode(GOUT, 44, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 59), rnode(GOUT, 44, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 60), rnode(GOUT, 44, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 61), rnode(GOUT, 44, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 62), rnode(GOUT, 44, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 63), rnode(GOUT, 44, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 64), rnode(GOUT, 46, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 65), rnode(GOUT, 46, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 66), rnode(GOUT, 46, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 67), rnode(GOUT, 46, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 72), rnode(GOUT, 48, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 73), rnode(GOUT, 48, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 74), rnode(GOUT, 48, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 75), rnode(GOUT, 48, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 76), rnode(GOUT, 48, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 77), rnode(GOUT, 48, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 78), rnode(GOUT, 48, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 79), rnode(GOUT, 48, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 80), rnode(GOUT, 48, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 81), rnode(GOUT, 48, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 82), rnode(GOUT, 48, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 83), rnode(GOUT, 48, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 84), rnode(GOUT, 50, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 85), rnode(GOUT, 50, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 86), rnode(GOUT, 50, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 87), rnode(GOUT, 50, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 88), rnode(GOUT, 51, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 89), rnode(GOUT, 51, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 90), rnode(GOUT, 51, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 91), rnode(GOUT, 51, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 92), rnode(GOUT, 51, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 93), rnode(GOUT, 51, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 94), rnode(GOUT, 51, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 95), rnode(GOUT, 51, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 96), rnode(GOUT, 51, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 97), rnode(GOUT, 51, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 98), rnode(GOUT, 51, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 99), rnode(GOUT, 51, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 100), rnode(GOUT, 53, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 101), rnode(GOUT, 53, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 102), rnode(GOUT, 53, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 103), rnode(GOUT, 53, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 108), rnode(GOUT, 55, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 109), rnode(GOUT, 55, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 110), rnode(GOUT, 55, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 111), rnode(GOUT, 55, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 112), rnode(GOUT, 55, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 113), rnode(GOUT, 55, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 114), rnode(GOUT, 55, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 115), rnode(GOUT, 55, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 116), rnode(GOUT, 55, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 117), rnode(GOUT, 55, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 118), rnode(GOUT, 55, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 119), rnode(GOUT, 55, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 120), rnode(GOUT, 57, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 121), rnode(GOUT, 57, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 122), rnode(GOUT, 57, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 123), rnode(GOUT, 57, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 124), rnode(GOUT, 59, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 125), rnode(GOUT, 59, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 126), rnode(GOUT, 59, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 127), rnode(GOUT, 59, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 128), rnode(GOUT, 59, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 129), rnode(GOUT, 59, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 130), rnode(GOUT, 59, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 131), rnode(GOUT, 59, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 132), rnode(GOUT, 59, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 133), rnode(GOUT, 59, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 134), rnode(GOUT, 59, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 135), rnode(GOUT, 59, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 136), rnode(GOUT, 61, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 137), rnode(GOUT, 61, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 138), rnode(GOUT, 61, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 139), rnode(GOUT, 61, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 144), rnode(GOUT, 62, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 145), rnode(GOUT, 62, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 146), rnode(GOUT, 62, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 147), rnode(GOUT, 62, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 148), rnode(GOUT, 62, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 149), rnode(GOUT, 62, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 150), rnode(GOUT, 62, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 151), rnode(GOUT, 62, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 152), rnode(GOUT, 62, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 153), rnode(GOUT, 62, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 154), rnode(GOUT, 62, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 155), rnode(GOUT, 62, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 156), rnode(GOUT, 64, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 157), rnode(GOUT, 64, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 158), rnode(GOUT, 64, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 159), rnode(GOUT, 64, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 160), rnode(GOUT, 65, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 161), rnode(GOUT, 65, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 162), rnode(GOUT, 65, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 163), rnode(GOUT, 65, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 164), rnode(GOUT, 65, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 165), rnode(GOUT, 65, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 166), rnode(GOUT, 65, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 167), rnode(GOUT, 65, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 168), rnode(GOUT, 65, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 169), rnode(GOUT, 65, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 170), rnode(GOUT, 65, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 171), rnode(GOUT, 65, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 172), rnode(GOUT, 66, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 173), rnode(GOUT, 66, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 174), rnode(GOUT, 66, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 175), rnode(GOUT, 66, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 0), rnode(GOUT, 32, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 1), rnode(GOUT, 32, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 2), rnode(GOUT, 32, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 3), rnode(GOUT, 32, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 4), rnode(GOUT, 32, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 5), rnode(GOUT, 32, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 6), rnode(GOUT, 34, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 7), rnode(GOUT, 34, 0, 19) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 8), rnode(GOUT, 36, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 9), rnode(GOUT, 36, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 10), rnode(GOUT, 36, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 11), rnode(GOUT, 36, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 12), rnode(GOUT, 36, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 13), rnode(GOUT, 36, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 14), rnode(GOUT, 38, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 15), rnode(GOUT, 38, 0, 19) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 18), rnode(GOUT, 40, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 19), rnode(GOUT, 40, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 20), rnode(GOUT, 40, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 21), rnode(GOUT, 40, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 22), rnode(GOUT, 40, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 23), rnode(GOUT, 40, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 24), rnode(GOUT, 42, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 25), rnode(GOUT, 42, 0, 19) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 26), rnode(GOUT, 44, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 27), rnode(GOUT, 44, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 28), rnode(GOUT, 44, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 29), rnode(GOUT, 44, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 30), rnode(GOUT, 44, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 31), rnode(GOUT, 44, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 32), rnode(GOUT, 46, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 33), rnode(GOUT, 46, 0, 19) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 36), rnode(GOUT, 48, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 37), rnode(GOUT, 48, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 38), rnode(GOUT, 48, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 39), rnode(GOUT, 48, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 40), rnode(GOUT, 48, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 41), rnode(GOUT, 48, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 42), rnode(GOUT, 50, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 43), rnode(GOUT, 50, 0, 19) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 44), rnode(GOUT, 51, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 45), rnode(GOUT, 51, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 46), rnode(GOUT, 51, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 47), rnode(GOUT, 51, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 48), rnode(GOUT, 51, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 49), rnode(GOUT, 51, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 50), rnode(GOUT, 53, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 51), rnode(GOUT, 53, 0, 19) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 54), rnode(GOUT, 55, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 55), rnode(GOUT, 55, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 56), rnode(GOUT, 55, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 57), rnode(GOUT, 55, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 58), rnode(GOUT, 55, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 59), rnode(GOUT, 55, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 60), rnode(GOUT, 57, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 61), rnode(GOUT, 57, 0, 19) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 62), rnode(GOUT, 59, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 63), rnode(GOUT, 59, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 64), rnode(GOUT, 59, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 65), rnode(GOUT, 59, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 66), rnode(GOUT, 59, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 67), rnode(GOUT, 59, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 68), rnode(GOUT, 61, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 69), rnode(GOUT, 61, 0, 19) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 72), rnode(GOUT, 62, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 73), rnode(GOUT, 62, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 74), rnode(GOUT, 62, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 75), rnode(GOUT, 62, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 76), rnode(GOUT, 62, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 77), rnode(GOUT, 62, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 78), rnode(GOUT, 64, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 79), rnode(GOUT, 64, 0, 19) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 80), rnode(GOUT, 65, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 81), rnode(GOUT, 65, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 82), rnode(GOUT, 65, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 83), rnode(GOUT, 65, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 84), rnode(GOUT, 65, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 85), rnode(GOUT, 65, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 86), rnode(GOUT, 66, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 87), rnode(GOUT, 66, 0, 19) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 0), rnode(GOUT, 34, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 1), rnode(GOUT, 34, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 2), rnode(GOUT, 34, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 3), rnode(GOUT, 34, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 4), rnode(GOUT, 42, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 5), rnode(GOUT, 42, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 6), rnode(GOUT, 42, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 7), rnode(GOUT, 42, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 8), rnode(GOUT, 50, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 9), rnode(GOUT, 50, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 10), rnode(GOUT, 50, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 11), rnode(GOUT, 50, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 12), rnode(GOUT, 57, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 13), rnode(GOUT, 57, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 14), rnode(GOUT, 57, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 15), rnode(GOUT, 57, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 16), rnode(GOUT, 64, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 17), rnode(GOUT, 64, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 18), rnode(GOUT, 64, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 19), rnode(GOUT, 64, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQSBOE, -1, 0), rnode(GOUT, 34, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQSBOE, -1, 1), rnode(GOUT, 34, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQSBOE, -1, 2), rnode(GOUT, 42, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQSBOE, -1, 3), rnode(GOUT, 42, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQSBOE, -1, 4), rnode(GOUT, 50, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQSBOE, -1, 5), rnode(GOUT, 50, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQSBOE, -1, 6), rnode(GOUT, 57, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQSBOE, -1, 7), rnode(GOUT, 57, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQSBOE, -1, 8), rnode(GOUT, 64, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQSBOE, -1, 9), rnode(GOUT, 64, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 0), rnode(GOUT, 34, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 1), rnode(GOUT, 34, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 2), rnode(GOUT, 34, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 3), rnode(GOUT, 34, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 4), rnode(GOUT, 42, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 5), rnode(GOUT, 42, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 6), rnode(GOUT, 42, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 7), rnode(GOUT, 42, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 8), rnode(GOUT, 50, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 9), rnode(GOUT, 50, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 10), rnode(GOUT, 50, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 11), rnode(GOUT, 50, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 12), rnode(GOUT, 57, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 13), rnode(GOUT, 57, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 14), rnode(GOUT, 57, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 15), rnode(GOUT, 57, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 16), rnode(GOUT, 64, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 17), rnode(GOUT, 64, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 18), rnode(GOUT, 64, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 19), rnode(GOUT, 64, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICACLRFIFOCTRL, -1, 0), rnode(GOUT, 35, 0, 45) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICACLRFIFOCTRL, -1, 1), rnode(GOUT, 43, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICACLRFIFOCTRL, -1, 2), rnode(GOUT, 49, 0, 33) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICACLRFIFOCTRL, -1, 3), rnode(GOUT, 58, 0, 33) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICACLRFIFOCTRL, -1, 4), rnode(GOUT, 66, 0, 7) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICACLRPSTAMBLE, -1, 0), rnode(GOUT, 35, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICACLRPSTAMBLE, -1, 1), rnode(GOUT, 43, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICACLRPSTAMBLE, -1, 2), rnode(GOUT, 49, 0, 31) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICACLRPSTAMBLE, -1, 3), rnode(GOUT, 58, 0, 31) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICACLRPSTAMBLE, -1, 4), rnode(GOUT, 66, 0, 6) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICDQSENA, -1, 0), rnode(GOUT, 38, 0, 36) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICDQSENA, -1, 1), rnode(GOUT, 38, 0, 35) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICDQSENA, -1, 2), rnode(GOUT, 45, 0, 33) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICDQSENA, -1, 3), rnode(GOUT, 45, 0, 27) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICDQSENA, -1, 4), rnode(GOUT, 52, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICDQSENA, -1, 5), rnode(GOUT, 52, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICDQSENA, -1, 6), rnode(GOUT, 61, 0, 10) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICDQSENA, -1, 7), rnode(GOUT, 61, 0, 0) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICDQSENA, -1, 8), rnode(GOUT, 67, 0, 25) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICDQSENA, -1, 9), rnode(GOUT, 67, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICFIFORESET, -1, 0), rnode(GOUT, 33, 0, 32) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICFIFORESET, -1, 1), rnode(GOUT, 41, 0, 32) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICFIFORESET, -1, 2), rnode(GOUT, 48, 0, 7) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICFIFORESET, -1, 3), rnode(GOUT, 57, 0, 7) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICFIFORESET, -1, 4), rnode(GOUT, 64, 0, 26) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCRDATAEN, -1, 0), rnode(GOUT, 36, 0, 35) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCRDATAEN, -1, 1), rnode(GOUT, 36, 0, 36) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCRDATAEN, -1, 2), rnode(GOUT, 44, 0, 37) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCRDATAEN, -1, 3), rnode(GOUT, 44, 0, 35) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCRDATAEN, -1, 4), rnode(GOUT, 51, 0, 32) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCRDATAEN, -1, 5), rnode(GOUT, 51, 0, 37) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCRDATAEN, -1, 6), rnode(GOUT, 60, 0, 4) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCRDATAEN, -1, 7), rnode(GOUT, 60, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCRDATAEN, -1, 8), rnode(GOUT, 67, 0, 0) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCRDATAEN, -1, 9), rnode(GOUT, 67, 0, 10) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCWRPTR, -1, 0), rnode(GOUT, 34, 0, 7) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCWRPTR, -1, 1), rnode(GOUT, 34, 0, 33) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCWRPTR, -1, 2), rnode(GOUT, 42, 0, 32) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCWRPTR, -1, 3), rnode(GOUT, 42, 0, 37) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCWRPTR, -1, 4), rnode(GOUT, 49, 0, 7) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCWRPTR, -1, 5), rnode(GOUT, 49, 0, 5) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCWRPTR, -1, 6), rnode(GOUT, 58, 0, 7) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCWRPTR, -1, 7), rnode(GOUT, 58, 0, 5) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCWRPTR, -1, 8), rnode(GOUT, 65, 0, 6) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCWRPTR, -1, 9), rnode(GOUT, 65, 0, 7) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICOCT, -1, 0), rnode(GOUT, 35, 0, 11) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICOCT, -1, 1), rnode(GOUT, 35, 0, 6) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICOCT, -1, 2), rnode(GOUT, 43, 0, 7) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICOCT, -1, 3), rnode(GOUT, 43, 0, 5) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICOCT, -1, 4), rnode(GOUT, 49, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICOCT, -1, 5), rnode(GOUT, 49, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICOCT, -1, 6), rnode(GOUT, 58, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICOCT, -1, 7), rnode(GOUT, 58, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICOCT, -1, 8), rnode(GOUT, 65, 0, 26) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICOCT, -1, 9), rnode(GOUT, 66, 0, 0) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 0), rnode(GOUT, 37, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 1), rnode(GOUT, 37, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 2), rnode(GOUT, 37, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 3), rnode(GOUT, 37, 0, 28) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 4), rnode(GOUT, 37, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 5), rnode(GOUT, 45, 0, 19) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 6), rnode(GOUT, 45, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 7), rnode(GOUT, 45, 0, 21) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 8), rnode(GOUT, 45, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 9), rnode(GOUT, 45, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 10), rnode(GOUT, 52, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 11), rnode(GOUT, 52, 0, 20) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 12), rnode(GOUT, 52, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 13), rnode(GOUT, 52, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 14), rnode(GOUT, 52, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 15), rnode(GOUT, 60, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 16), rnode(GOUT, 60, 0, 42) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 17), rnode(GOUT, 60, 0, 46) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 18), rnode(GOUT, 60, 0, 45) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 19), rnode(GOUT, 60, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 20), rnode(GOUT, 67, 0, 20) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 21), rnode(GOUT, 67, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 22), rnode(GOUT, 67, 0, 21) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 23), rnode(GOUT, 67, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 24), rnode(GOUT, 67, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQSOE, -1, 0), rnode(GOUT, 34, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQSOE, -1, 1), rnode(GOUT, 34, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQSOE, -1, 2), rnode(GOUT, 42, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQSOE, -1, 3), rnode(GOUT, 42, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQSOE, -1, 4), rnode(GOUT, 50, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQSOE, -1, 5), rnode(GOUT, 50, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQSOE, -1, 6), rnode(GOUT, 57, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQSOE, -1, 7), rnode(GOUT, 57, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQSOE, -1, 8), rnode(GOUT, 64, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQSOE, -1, 9), rnode(GOUT, 64, 0, 30) },
  { pnode(HMC, 23, 0, IOINTODTACLR, -1, 0), rnode(GOUT, 34, 0, 21) },
  { pnode(HMC, 23, 0, IOINTODTACLR, -1, 1), rnode(GOUT, 36, 0, 12) },
  { pnode(HMC, 23, 0, IOINTODTDOUT, -1, 0), rnode(GOUT, 34, 0, 14) },
  { pnode(HMC, 23, 0, IOINTODTDOUT, -1, 1), rnode(GOUT, 34, 0, 22) },
  { pnode(HMC, 23, 0, IOINTODTDOUT, -1, 2), rnode(GOUT, 34, 0, 15) },
  { pnode(HMC, 23, 0, IOINTODTDOUT, -1, 3), rnode(GOUT, 34, 0, 23) },
  { pnode(HMC, 23, 0, IOINTODTDOUT, -1, 4), rnode(GOUT, 36, 0, 3) },
  { pnode(HMC, 23, 0, IOINTODTDOUT, -1, 5), rnode(GOUT, 36, 0, 17) },
  { pnode(HMC, 23, 0, IOINTODTDOUT, -1, 6), rnode(GOUT, 36, 0, 8) },
  { pnode(HMC, 23, 0, IOINTODTDOUT, -1, 7), rnode(GOUT, 36, 0, 18) },
  { pnode(HMC, 23, 0, IOINTRASNACLR, -1, -1), rnode(GOUT, 15, 0, 12) },
  { pnode(HMC, 23, 0, IOINTRASNDOUT, -1, 0), rnode(GOUT, 15, 0, 3) },
  { pnode(HMC, 23, 0, IOINTRASNDOUT, -1, 1), rnode(GOUT, 15, 0, 17) },
  { pnode(HMC, 23, 0, IOINTRASNDOUT, -1, 2), rnode(GOUT, 15, 0, 8) },
  { pnode(HMC, 23, 0, IOINTRASNDOUT, -1, 3), rnode(GOUT, 15, 0, 18) },
  { pnode(HMC, 23, 0, IOINTRESETNACLR, -1, -1), rnode(GOUT, 50, 0, 21) },
  { pnode(HMC, 23, 0, IOINTRESETNDOUT, -1, 0), rnode(GOUT, 50, 0, 14) },
  { pnode(HMC, 23, 0, IOINTRESETNDOUT, -1, 1), rnode(GOUT, 50, 0, 22) },
  { pnode(HMC, 23, 0, IOINTRESETNDOUT, -1, 2), rnode(GOUT, 50, 0, 15) },
  { pnode(HMC, 23, 0, IOINTRESETNDOUT, -1, 3), rnode(GOUT, 50, 0, 23) },
  { pnode(HMC, 23, 0, IOINTWENACLR, -1, -1), rnode(GOUT, 10, 0, 21) },
  { pnode(HMC, 23, 0, IOINTWENDOUT, -1, 0), rnode(GOUT, 10, 0, 14) },
  { pnode(HMC, 23, 0, IOINTWENDOUT, -1, 1), rnode(GOUT, 10, 0, 22) },
  { pnode(HMC, 23, 0, IOINTWENDOUT, -1, 2), rnode(GOUT, 10, 0, 15) },
  { pnode(HMC, 23, 0, IOINTWENDOUT, -1, 3), rnode(GOUT, 10, 0, 23) },
  { pnode(HMC, 23, 0, LOCALDEEPPOWERDNCHIP, -1, 0), rnode(GOUT, 23, 0, 28) },
  { pnode(HMC, 23, 0, LOCALDEEPPOWERDNCHIP, -1, 1), rnode(GOUT, 23, 0, 34) },
  { pnode(HMC, 23, 0, LOCALDEEPPOWERDNREQ, -1, -1), rnode(GOUT, 23, 0, 29) },
  { pnode(HMC, 23, 0, LOCALREFRESHCHIP, -1, 0), rnode(GOUT, 23, 0, 31) },
  { pnode(HMC, 23, 0, LOCALREFRESHCHIP, -1, 1), rnode(GOUT, 23, 0, 33) },
  { pnode(HMC, 23, 0, LOCALREFRESHREQ, -1, -1), rnode(GOUT, 23, 0, 30) },
  { pnode(HMC, 23, 0, LOCALSELFRFSHCHIP, -1, 0), rnode(GOUT, 23, 0, 32) },
  { pnode(HMC, 23, 0, LOCALSELFRFSHCHIP, -1, 1), rnode(GOUT, 23, 0, 37) },
  { pnode(HMC, 23, 0, LOCALSELFRFSHREQ, -1, -1), rnode(GOUT, 23, 0, 35) },
  { pnode(HMC, 23, 0, MMRADDR, -1, 0), rnode(GOUT, 56, 0, 0) },
  { pnode(HMC, 23, 0, MMRADDR, -1, 1), rnode(GOUT, 56, 0, 10) },
  { pnode(HMC, 23, 0, MMRADDR, -1, 2), rnode(GOUT, 56, 0, 9) },
  { pnode(HMC, 23, 0, MMRADDR, -1, 3), rnode(GOUT, 56, 0, 11) },
  { pnode(HMC, 23, 0, MMRADDR, -1, 4), rnode(GOUT, 56, 0, 6) },
  { pnode(HMC, 23, 0, MMRADDR, -1, 5), rnode(GOUT, 56, 0, 7) },
  { pnode(HMC, 23, 0, MMRADDR, -1, 6), rnode(GOUT, 56, 0, 5) },
  { pnode(HMC, 23, 0, MMRADDR, -1, 7), rnode(GOUT, 56, 0, 2) },
  { pnode(HMC, 23, 0, MMRADDR, -1, 8), rnode(GOUT, 56, 0, 1) },
  { pnode(HMC, 23, 0, MMRADDR, -1, 9), rnode(GOUT, 56, 0, 12) },
  { pnode(HMC, 23, 0, MMRBE, -1, -1), rnode(GOUT, 56, 0, 21) },
  { pnode(HMC, 23, 0, MMRBURSTBEGIN, -1, -1), rnode(GOUT, 56, 0, 22) },
  { pnode(HMC, 23, 0, MMRBURSTCOUNT, -1, 0), rnode(GOUT, 59, 0, 33) },
  { pnode(HMC, 23, 0, MMRBURSTCOUNT, -1, 1), rnode(GOUT, 59, 0, 32) },
  { pnode(HMC, 23, 0, MMRCLK, -1, -1), rnode(DCMUX, 56, 0, 0) },
  { pnode(HMC, 23, 0, MMRREADREQ, -1, -1), rnode(GOUT, 59, 0, 11) },
  { pnode(HMC, 23, 0, MMRRESETN, -1, -1), rnode(GOUT, 59, 0, 6) },
  { pnode(HMC, 23, 0, MMRWDATA, -1, 0), rnode(GOUT, 56, 0, 17) },
  { pnode(HMC, 23, 0, MMRWDATA, -1, 1), rnode(GOUT, 56, 0, 13) },
  { pnode(HMC, 23, 0, MMRWDATA, -1, 2), rnode(GOUT, 56, 0, 18) },
  { pnode(HMC, 23, 0, MMRWDATA, -1, 3), rnode(GOUT, 56, 0, 14) },
  { pnode(HMC, 23, 0, MMRWDATA, -1, 4), rnode(GOUT, 56, 0, 19) },
  { pnode(HMC, 23, 0, MMRWDATA, -1, 5), rnode(GOUT, 56, 0, 15) },
  { pnode(HMC, 23, 0, MMRWDATA, -1, 6), rnode(GOUT, 56, 0, 20) },
  { pnode(HMC, 23, 0, MMRWDATA, -1, 7), rnode(GOUT, 56, 0, 16) },
  { pnode(HMC, 23, 0, MMRWRITEREQ, -1, -1), rnode(GOUT, 56, 0, 23) },
  { pnode(HMC, 23, 0, PLLLOCKED, -1, -1), rnode(GOUT, 59, 0, 7) },
  { pnode(HMC, 23, 0, PORTCLK, 0, -1), rnode(DCMUX, 24, 0, 7) },
  { pnode(HMC, 23, 0, PORTCLK, 1, -1), rnode(DCMUX, 24, 0, 15) },
  { pnode(HMC, 23, 0, PORTCLK, 2, -1), rnode(DCMUX, 25, 0, 9) },
  { pnode(HMC, 23, 0, PORTCLK, 3, -1), rnode(DCMUX, 28, 0, 8) },
  { pnode(HMC, 23, 0, PORTCLK, 4, -1), rnode(DCMUX, 29, 0, 15) },
  { pnode(HMC, 23, 0, PORTCLK, 5, -1), rnode(DCMUX, 30, 0, 0) },
  { pnode(HMC, 23, 0, SCADDR, -1, 0), rnode(GOUT, 59, 0, 36) },
  { pnode(HMC, 23, 0, SCADDR, -1, 1), rnode(GOUT, 59, 0, 26) },
  { pnode(HMC, 23, 0, SCADDR, -1, 2), rnode(GOUT, 60, 0, 0) },
  { pnode(HMC, 23, 0, SCADDR, -1, 3), rnode(GOUT, 60, 0, 9) },
  { pnode(HMC, 23, 0, SCADDR, -1, 4), rnode(GOUT, 60, 0, 11) },
  { pnode(HMC, 23, 0, SCADDR, -1, 5), rnode(GOUT, 60, 0, 6) },
  { pnode(HMC, 23, 0, SCADDR, -1, 6), rnode(GOUT, 60, 0, 7) },
  { pnode(HMC, 23, 0, SCADDR, -1, 7), rnode(GOUT, 60, 0, 5) },
  { pnode(HMC, 23, 0, SCADDR, -1, 8), rnode(GOUT, 60, 0, 8) },
  { pnode(HMC, 23, 0, SCADDR, -1, 9), rnode(GOUT, 60, 0, 2) },
  { pnode(HMC, 23, 0, SCANEN, -1, -1), rnode(GOUT, 60, 0, 50) },
  { pnode(HMC, 23, 0, SCBE, -1, -1), rnode(GOUT, 60, 0, 13) },
  { pnode(HMC, 23, 0, SCBURSTBEGIN, -1, -1), rnode(GOUT, 60, 0, 25) },
  { pnode(HMC, 23, 0, SCBURSTCOUNT, -1, 0), rnode(GOUT, 60, 0, 23) },
  { pnode(HMC, 23, 0, SCBURSTCOUNT, -1, 1), rnode(GOUT, 60, 0, 24) },
  { pnode(HMC, 23, 0, SCCLK, -1, -1), rnode(DCMUX, 60, 0, 0) },
  { pnode(HMC, 23, 0, SCREADREQ, -1, -1), rnode(GOUT, 60, 0, 12) },
  { pnode(HMC, 23, 0, SCRESETN, -1, -1), rnode(GOUT, 60, 0, 17) },
  { pnode(HMC, 23, 0, SCWDATA, -1, 0), rnode(GOUT, 60, 0, 18) },
  { pnode(HMC, 23, 0, SCWDATA, -1, 1), rnode(GOUT, 60, 0, 14) },
  { pnode(HMC, 23, 0, SCWDATA, -1, 2), rnode(GOUT, 60, 0, 19) },
  { pnode(HMC, 23, 0, SCWDATA, -1, 3), rnode(GOUT, 60, 0, 15) },
  { pnode(HMC, 23, 0, SCWDATA, -1, 4), rnode(GOUT, 60, 0, 20) },
  { pnode(HMC, 23, 0, SCWDATA, -1, 5), rnode(GOUT, 60, 0, 16) },
  { pnode(HMC, 23, 0, SCWDATA, -1, 6), rnode(GOUT, 60, 0, 21) },
  { pnode(HMC, 23, 0, SCWDATA, -1, 7), rnode(GOUT, 60, 0, 22) },
  { pnode(HMC, 23, 0, SCWRITEREQ, -1, -1), rnode(GOUT, 60, 0, 1) },
  { pnode(HMC, 23, 0, SOFTRESETN, -1, -1), rnode(GOUT, 59, 0, 35) },
  { pnode(HMC, 23, 0, AFICTLLONGIDLE, -1, 0), rnode(GIN, 58, 0, 14) },
  { pnode(HMC, 23, 0, AFICTLLONGIDLE, -1, 1), rnode(GIN, 58, 0, 13) },
  { pnode(HMC, 23, 0, AFICTLREFRESHDONE, -1, 0), rnode(GIN, 59, 0, 0) },
  { pnode(HMC, 23, 0, AFICTLREFRESHDONE, -1, 1), rnode(GIN, 59, 0, 13) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 0), rnode(GIN, 58, 0, 4) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 1), rnode(GIN, 58, 0, 5) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 2), rnode(GIN, 58, 0, 6) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 3), rnode(GIN, 58, 0, 7) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 4), rnode(GIN, 58, 0, 8) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 5), rnode(GIN, 58, 0, 9) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 6), rnode(GIN, 58, 0, 10) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 7), rnode(GIN, 58, 0, 11) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 8), rnode(GIN, 58, 0, 12) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 9), rnode(GIN, 58, 0, 25) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 10), rnode(GIN, 58, 0, 24) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 11), rnode(GIN, 58, 0, 23) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 12), rnode(GIN, 58, 0, 22) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 13), rnode(GIN, 58, 0, 21) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 14), rnode(GIN, 58, 0, 20) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 15), rnode(GIN, 58, 0, 19) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 16), rnode(GIN, 60, 0, 6) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 17), rnode(GIN, 60, 0, 7) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 18), rnode(GIN, 60, 0, 8) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 19), rnode(GIN, 60, 0, 9) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 20), rnode(GIN, 60, 0, 10) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 21), rnode(GIN, 60, 0, 11) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 22), rnode(GIN, 60, 0, 12) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 23), rnode(GIN, 60, 0, 25) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 24), rnode(GIN, 60, 0, 24) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 25), rnode(GIN, 60, 0, 23) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 26), rnode(GIN, 60, 0, 22) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 27), rnode(GIN, 60, 0, 21) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 28), rnode(GIN, 60, 0, 20) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 29), rnode(GIN, 60, 0, 19) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 30), rnode(GIN, 60, 0, 18) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 31), rnode(GIN, 60, 0, 17) },
  { pnode(HMC, 23, 0, AVLWAITREQUEST, -1, -1), rnode(GIN, 60, 0, 0) },
  { pnode(HMC, 23, 0, BONDINGOUT, 0, 0), rnode(GIN, 24, 0, 11) },
  { pnode(HMC, 23, 0, BONDINGOUT, 0, 1), rnode(GIN, 23, 0, 6) },
  { pnode(HMC, 23, 0, BONDINGOUT, 0, 2), rnode(GIN, 41, 0, 10) },
  { pnode(HMC, 23, 0, BONDINGOUT, 0, 3), rnode(GIN, 48, 0, 0) },
  { pnode(HMC, 23, 0, BONDINGOUT, 1, 0), rnode(GIN, 23, 0, 4) },
  { pnode(HMC, 23, 0, BONDINGOUT, 1, 1), rnode(GIN, 23, 0, 9) },
  { pnode(HMC, 23, 0, BONDINGOUT, 1, 2), rnode(GIN, 23, 0, 24) },
  { pnode(HMC, 23, 0, BONDINGOUT, 1, 3), rnode(GIN, 29, 0, 18) },
  { pnode(HMC, 23, 0, BONDINGOUT, 1, 4), rnode(GIN, 29, 0, 13) },
  { pnode(HMC, 23, 0, BONDINGOUT, 1, 5), rnode(GIN, 30, 0, 4) },
  { pnode(HMC, 23, 0, BONDINGOUT, 2, 0), rnode(GIN, 23, 0, 5) },
  { pnode(HMC, 23, 0, BONDINGOUT, 2, 1), rnode(GIN, 23, 0, 10) },
  { pnode(HMC, 23, 0, BONDINGOUT, 2, 2), rnode(GIN, 23, 0, 23) },
  { pnode(HMC, 23, 0, BONDINGOUT, 2, 3), rnode(GIN, 29, 0, 17) },
  { pnode(HMC, 23, 0, BONDINGOUT, 2, 4), rnode(GIN, 30, 0, 0) },
  { pnode(HMC, 23, 0, BONDINGOUT, 2, 5), rnode(GIN, 30, 0, 5) },
  { pnode(HMC, 23, 0, CTLCALREQ, -1, -1), rnode(GIN, 28, 0, 17) },
  { pnode(HMC, 23, 0, IOINTAFICALFAIL, -1, -1), rnode(GIN, 60, 0, 16) },
  { pnode(HMC, 23, 0, IOINTAFICALSUCCESS, -1, -1), rnode(GIN, 60, 0, 15) },
  { pnode(HMC, 23, 0, IOINTAFIRLAT, -1, 0), rnode(GIN, 60, 0, 14) },
  { pnode(HMC, 23, 0, IOINTAFIRLAT, -1, 1), rnode(GIN, 60, 0, 13) },
  { pnode(HMC, 23, 0, IOINTAFIRLAT, -1, 2), rnode(GIN, 61, 0, 0) },
  { pnode(HMC, 23, 0, IOINTAFIRLAT, -1, 3), rnode(GIN, 61, 0, 13) },
  { pnode(HMC, 23, 0, IOINTAFIRLAT, -1, 4), rnode(GIN, 62, 0, 0) },
  { pnode(HMC, 23, 0, IOINTAFIWLAT, -1, 0), rnode(GIN, 58, 0, 18) },
  { pnode(HMC, 23, 0, IOINTAFIWLAT, -1, 1), rnode(GIN, 58, 0, 17) },
  { pnode(HMC, 23, 0, IOINTAFIWLAT, -1, 2), rnode(GIN, 58, 0, 16) },
  { pnode(HMC, 23, 0, IOINTAFIWLAT, -1, 3), rnode(GIN, 58, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 0), rnode(GIN, 32, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 1), rnode(GIN, 32, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 2), rnode(GIN, 32, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 3), rnode(GIN, 32, 0, 21) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 4), rnode(GIN, 32, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 5), rnode(GIN, 32, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 6), rnode(GIN, 32, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 7), rnode(GIN, 32, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 8), rnode(GIN, 32, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 9), rnode(GIN, 32, 0, 9) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 10), rnode(GIN, 32, 0, 10) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 11), rnode(GIN, 32, 0, 11) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 12), rnode(GIN, 34, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 13), rnode(GIN, 34, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 14), rnode(GIN, 34, 0, 4) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 15), rnode(GIN, 34, 0, 5) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 16), rnode(GIN, 36, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 17), rnode(GIN, 36, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 18), rnode(GIN, 36, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 19), rnode(GIN, 36, 0, 21) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 20), rnode(GIN, 36, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 21), rnode(GIN, 36, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 22), rnode(GIN, 36, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 23), rnode(GIN, 36, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 24), rnode(GIN, 36, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 25), rnode(GIN, 36, 0, 9) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 26), rnode(GIN, 36, 0, 10) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 27), rnode(GIN, 36, 0, 11) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 28), rnode(GIN, 38, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 29), rnode(GIN, 38, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 30), rnode(GIN, 38, 0, 4) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 31), rnode(GIN, 38, 0, 5) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 36), rnode(GIN, 40, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 37), rnode(GIN, 40, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 38), rnode(GIN, 40, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 39), rnode(GIN, 40, 0, 21) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 40), rnode(GIN, 40, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 41), rnode(GIN, 40, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 42), rnode(GIN, 40, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 43), rnode(GIN, 40, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 44), rnode(GIN, 40, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 45), rnode(GIN, 40, 0, 9) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 46), rnode(GIN, 40, 0, 10) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 47), rnode(GIN, 40, 0, 11) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 48), rnode(GIN, 42, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 49), rnode(GIN, 42, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 50), rnode(GIN, 42, 0, 4) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 51), rnode(GIN, 42, 0, 5) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 52), rnode(GIN, 44, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 53), rnode(GIN, 44, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 54), rnode(GIN, 44, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 55), rnode(GIN, 44, 0, 21) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 56), rnode(GIN, 44, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 57), rnode(GIN, 44, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 58), rnode(GIN, 44, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 59), rnode(GIN, 44, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 60), rnode(GIN, 44, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 61), rnode(GIN, 44, 0, 9) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 62), rnode(GIN, 44, 0, 10) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 63), rnode(GIN, 44, 0, 11) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 64), rnode(GIN, 46, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 65), rnode(GIN, 46, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 66), rnode(GIN, 46, 0, 4) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 67), rnode(GIN, 46, 0, 5) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 72), rnode(GIN, 48, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 73), rnode(GIN, 48, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 74), rnode(GIN, 48, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 75), rnode(GIN, 48, 0, 21) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 76), rnode(GIN, 48, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 77), rnode(GIN, 48, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 78), rnode(GIN, 48, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 79), rnode(GIN, 48, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 80), rnode(GIN, 48, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 81), rnode(GIN, 48, 0, 9) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 82), rnode(GIN, 48, 0, 10) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 83), rnode(GIN, 48, 0, 11) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 84), rnode(GIN, 50, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 85), rnode(GIN, 50, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 86), rnode(GIN, 50, 0, 4) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 87), rnode(GIN, 50, 0, 5) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 88), rnode(GIN, 51, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 89), rnode(GIN, 51, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 90), rnode(GIN, 51, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 91), rnode(GIN, 51, 0, 21) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 92), rnode(GIN, 51, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 93), rnode(GIN, 51, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 94), rnode(GIN, 51, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 95), rnode(GIN, 51, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 96), rnode(GIN, 51, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 97), rnode(GIN, 51, 0, 9) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 98), rnode(GIN, 51, 0, 10) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 99), rnode(GIN, 51, 0, 11) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 100), rnode(GIN, 53, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 101), rnode(GIN, 53, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 102), rnode(GIN, 53, 0, 4) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 103), rnode(GIN, 53, 0, 5) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 108), rnode(GIN, 55, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 109), rnode(GIN, 55, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 110), rnode(GIN, 55, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 111), rnode(GIN, 55, 0, 21) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 112), rnode(GIN, 55, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 113), rnode(GIN, 55, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 114), rnode(GIN, 55, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 115), rnode(GIN, 55, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 116), rnode(GIN, 55, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 117), rnode(GIN, 55, 0, 9) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 118), rnode(GIN, 55, 0, 10) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 119), rnode(GIN, 55, 0, 11) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 120), rnode(GIN, 57, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 121), rnode(GIN, 57, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 122), rnode(GIN, 57, 0, 4) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 123), rnode(GIN, 57, 0, 5) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 124), rnode(GIN, 59, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 125), rnode(GIN, 59, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 126), rnode(GIN, 59, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 127), rnode(GIN, 59, 0, 21) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 128), rnode(GIN, 59, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 129), rnode(GIN, 59, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 130), rnode(GIN, 59, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 131), rnode(GIN, 59, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 132), rnode(GIN, 59, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 133), rnode(GIN, 59, 0, 9) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 134), rnode(GIN, 59, 0, 10) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 135), rnode(GIN, 59, 0, 11) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 136), rnode(GIN, 61, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 137), rnode(GIN, 61, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 138), rnode(GIN, 61, 0, 4) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 139), rnode(GIN, 61, 0, 5) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 144), rnode(GIN, 62, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 145), rnode(GIN, 62, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 146), rnode(GIN, 62, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 147), rnode(GIN, 62, 0, 21) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 148), rnode(GIN, 62, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 149), rnode(GIN, 62, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 150), rnode(GIN, 62, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 151), rnode(GIN, 62, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 152), rnode(GIN, 62, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 153), rnode(GIN, 62, 0, 9) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 154), rnode(GIN, 62, 0, 10) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 155), rnode(GIN, 62, 0, 11) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 156), rnode(GIN, 64, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 157), rnode(GIN, 64, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 158), rnode(GIN, 64, 0, 4) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 159), rnode(GIN, 64, 0, 5) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 160), rnode(GIN, 65, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 161), rnode(GIN, 65, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 162), rnode(GIN, 65, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 163), rnode(GIN, 65, 0, 21) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 164), rnode(GIN, 65, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 165), rnode(GIN, 65, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 166), rnode(GIN, 65, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 167), rnode(GIN, 65, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 168), rnode(GIN, 65, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 169), rnode(GIN, 65, 0, 9) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 170), rnode(GIN, 65, 0, 10) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 171), rnode(GIN, 65, 0, 11) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 172), rnode(GIN, 66, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 173), rnode(GIN, 66, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 174), rnode(GIN, 66, 0, 4) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 175), rnode(GIN, 66, 0, 5) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICRDATAVALID, -1, 0), rnode(GIN, 36, 0, 13) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICRDATAVALID, -1, 1), rnode(GIN, 45, 0, 0) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICRDATAVALID, -1, 2), rnode(GIN, 52, 0, 4) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICRDATAVALID, -1, 3), rnode(GIN, 60, 0, 4) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICRDATAVALID, -1, 4), rnode(GIN, 67, 0, 1) },
  { pnode(HMC, 23, 0, LOCALDEEPPOWERDNACK, -1, -1), rnode(GIN, 22, 0, 16) },
  { pnode(HMC, 23, 0, LOCALINITDONE, -1, -1), rnode(GIN, 22, 0, 15) },
  { pnode(HMC, 23, 0, LOCALPOWERDOWNACK, -1, -1), rnode(GIN, 22, 0, 14) },
  { pnode(HMC, 23, 0, LOCALREFRESHACK, -1, -1), rnode(GIN, 22, 0, 13) },
  { pnode(HMC, 23, 0, LOCALSELFRFSHACK, -1, -1), rnode(GIN, 23, 0, 0) },
  { pnode(HMC, 23, 0, MMRRDATA, -1, 0), rnode(GIN, 56, 0, 24) },
  { pnode(HMC, 23, 0, MMRRDATA, -1, 1), rnode(GIN, 56, 0, 23) },
  { pnode(HMC, 23, 0, MMRRDATA, -1, 2), rnode(GIN, 56, 0, 22) },
  { pnode(HMC, 23, 0, MMRRDATA, -1, 3), rnode(GIN, 56, 0, 21) },
  { pnode(HMC, 23, 0, MMRRDATA, -1, 4), rnode(GIN, 56, 0, 20) },
  { pnode(HMC, 23, 0, MMRRDATA, -1, 5), rnode(GIN, 56, 0, 19) },
  { pnode(HMC, 23, 0, MMRRDATA, -1, 6), rnode(GIN, 56, 0, 18) },
  { pnode(HMC, 23, 0, MMRRDATA, -1, 7), rnode(GIN, 56, 0, 17) },
  { pnode(HMC, 23, 0, MMRRDATAVALID, -1, -1), rnode(GIN, 56, 0, 25) },
  { pnode(HMC, 23, 0, MMRWAITREQUEST, -1, -1), rnode(GIN, 58, 0, 2) },
  { pnode(HMC, 23, 0, OAMMREADY, -1, 0), rnode(GIN, 23, 0, 1) },
  { pnode(HMC, 23, 0, OAMMREADY, -1, 1), rnode(GIN, 33, 0, 16) },
  { pnode(HMC, 23, 0, OAMMREADY, -1, 2), rnode(GIN, 23, 0, 11) },
  { pnode(HMC, 23, 0, OAMMREADY, -1, 3), rnode(GIN, 29, 0, 21) },
  { pnode(HMC, 23, 0, OAMMREADY, -1, 4), rnode(GIN, 29, 0, 16) },
  { pnode(HMC, 23, 0, OAMMREADY, -1, 5), rnode(GIN, 30, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 0), rnode(GIN, 23, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 1), rnode(GIN, 23, 0, 21) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 2), rnode(GIN, 23, 0, 20) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 3), rnode(GIN, 23, 0, 19) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 4), rnode(GIN, 23, 0, 18) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 5), rnode(GIN, 23, 0, 17) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 6), rnode(GIN, 23, 0, 16) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 7), rnode(GIN, 23, 0, 15) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 8), rnode(GIN, 23, 0, 14) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 9), rnode(GIN, 23, 0, 13) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 10), rnode(GIN, 24, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 11), rnode(GIN, 24, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 12), rnode(GIN, 24, 0, 2) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 13), rnode(GIN, 24, 0, 3) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 14), rnode(GIN, 24, 0, 4) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 15), rnode(GIN, 24, 0, 5) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 16), rnode(GIN, 24, 0, 6) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 17), rnode(GIN, 24, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 18), rnode(GIN, 24, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 19), rnode(GIN, 24, 0, 9) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 20), rnode(GIN, 24, 0, 12) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 21), rnode(GIN, 24, 0, 25) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 22), rnode(GIN, 24, 0, 24) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 23), rnode(GIN, 24, 0, 23) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 24), rnode(GIN, 24, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 25), rnode(GIN, 24, 0, 21) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 26), rnode(GIN, 24, 0, 16) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 27), rnode(GIN, 24, 0, 15) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 28), rnode(GIN, 24, 0, 14) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 29), rnode(GIN, 24, 0, 13) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 30), rnode(GIN, 25, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 31), rnode(GIN, 25, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 32), rnode(GIN, 25, 0, 2) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 33), rnode(GIN, 25, 0, 3) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 34), rnode(GIN, 25, 0, 4) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 35), rnode(GIN, 25, 0, 5) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 36), rnode(GIN, 25, 0, 6) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 37), rnode(GIN, 25, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 38), rnode(GIN, 25, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 39), rnode(GIN, 25, 0, 9) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 40), rnode(GIN, 25, 0, 10) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 41), rnode(GIN, 25, 0, 11) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 42), rnode(GIN, 25, 0, 12) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 43), rnode(GIN, 25, 0, 25) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 44), rnode(GIN, 25, 0, 24) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 45), rnode(GIN, 25, 0, 23) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 46), rnode(GIN, 25, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 47), rnode(GIN, 25, 0, 21) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 48), rnode(GIN, 25, 0, 20) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 49), rnode(GIN, 25, 0, 19) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 50), rnode(GIN, 25, 0, 18) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 51), rnode(GIN, 25, 0, 17) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 52), rnode(GIN, 28, 0, 25) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 53), rnode(GIN, 28, 0, 24) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 54), rnode(GIN, 28, 0, 23) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 55), rnode(GIN, 28, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 56), rnode(GIN, 28, 0, 21) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 57), rnode(GIN, 28, 0, 20) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 58), rnode(GIN, 28, 0, 19) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 59), rnode(GIN, 28, 0, 18) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 60), rnode(GIN, 28, 0, 16) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 61), rnode(GIN, 28, 0, 15) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 62), rnode(GIN, 28, 0, 14) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 63), rnode(GIN, 28, 0, 13) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 64), rnode(GIN, 29, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 65), rnode(GIN, 29, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 66), rnode(GIN, 29, 0, 2) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 67), rnode(GIN, 29, 0, 3) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 68), rnode(GIN, 29, 0, 4) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 69), rnode(GIN, 29, 0, 5) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 70), rnode(GIN, 29, 0, 6) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 71), rnode(GIN, 29, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 72), rnode(GIN, 29, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 73), rnode(GIN, 29, 0, 9) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 74), rnode(GIN, 29, 0, 10) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 75), rnode(GIN, 29, 0, 11) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 76), rnode(GIN, 29, 0, 25) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 77), rnode(GIN, 29, 0, 24) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 78), rnode(GIN, 29, 0, 23) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 79), rnode(GIN, 29, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 0), rnode(GIN, 30, 0, 6) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 1), rnode(GIN, 30, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 2), rnode(GIN, 30, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 3), rnode(GIN, 30, 0, 25) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 4), rnode(GIN, 30, 0, 24) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 5), rnode(GIN, 30, 0, 23) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 6), rnode(GIN, 30, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 7), rnode(GIN, 30, 0, 21) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 8), rnode(GIN, 30, 0, 20) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 9), rnode(GIN, 30, 0, 19) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 10), rnode(GIN, 30, 0, 18) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 11), rnode(GIN, 30, 0, 17) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 12), rnode(GIN, 30, 0, 16) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 13), rnode(GIN, 30, 0, 15) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 14), rnode(GIN, 30, 0, 14) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 15), rnode(GIN, 30, 0, 13) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 16), rnode(GIN, 31, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 17), rnode(GIN, 31, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 18), rnode(GIN, 31, 0, 2) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 19), rnode(GIN, 31, 0, 3) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 20), rnode(GIN, 31, 0, 4) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 21), rnode(GIN, 31, 0, 5) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 22), rnode(GIN, 31, 0, 6) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 23), rnode(GIN, 31, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 24), rnode(GIN, 31, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 25), rnode(GIN, 33, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 26), rnode(GIN, 33, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 27), rnode(GIN, 33, 0, 2) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 28), rnode(GIN, 33, 0, 3) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 29), rnode(GIN, 33, 0, 4) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 30), rnode(GIN, 33, 0, 5) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 31), rnode(GIN, 33, 0, 6) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 32), rnode(GIN, 33, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 33), rnode(GIN, 33, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 34), rnode(GIN, 33, 0, 9) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 35), rnode(GIN, 33, 0, 10) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 36), rnode(GIN, 33, 0, 11) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 37), rnode(GIN, 33, 0, 12) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 38), rnode(GIN, 33, 0, 25) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 39), rnode(GIN, 33, 0, 24) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 40), rnode(GIN, 33, 0, 23) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 41), rnode(GIN, 33, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 42), rnode(GIN, 33, 0, 21) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 43), rnode(GIN, 33, 0, 20) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 44), rnode(GIN, 33, 0, 19) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 45), rnode(GIN, 33, 0, 15) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 46), rnode(GIN, 33, 0, 14) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 47), rnode(GIN, 34, 0, 13) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 48), rnode(GIN, 35, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 49), rnode(GIN, 35, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 50), rnode(GIN, 35, 0, 2) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 51), rnode(GIN, 35, 0, 3) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 52), rnode(GIN, 35, 0, 4) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 53), rnode(GIN, 35, 0, 5) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 54), rnode(GIN, 35, 0, 6) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 55), rnode(GIN, 35, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 56), rnode(GIN, 35, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 57), rnode(GIN, 35, 0, 9) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 58), rnode(GIN, 35, 0, 10) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 59), rnode(GIN, 35, 0, 11) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 60), rnode(GIN, 35, 0, 12) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 61), rnode(GIN, 35, 0, 25) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 62), rnode(GIN, 35, 0, 24) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 63), rnode(GIN, 35, 0, 23) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 64), rnode(GIN, 35, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 65), rnode(GIN, 35, 0, 21) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 66), rnode(GIN, 35, 0, 20) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 67), rnode(GIN, 35, 0, 19) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 68), rnode(GIN, 35, 0, 17) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 69), rnode(GIN, 35, 0, 16) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 70), rnode(GIN, 35, 0, 15) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 71), rnode(GIN, 37, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 72), rnode(GIN, 37, 0, 21) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 73), rnode(GIN, 37, 0, 20) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 74), rnode(GIN, 37, 0, 19) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 75), rnode(GIN, 37, 0, 18) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 76), rnode(GIN, 37, 0, 17) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 77), rnode(GIN, 37, 0, 16) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 78), rnode(GIN, 37, 0, 15) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 79), rnode(GIN, 37, 0, 14) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 0), rnode(GIN, 37, 0, 13) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 1), rnode(GIN, 38, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 2), rnode(GIN, 38, 0, 13) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 3), rnode(GIN, 39, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 4), rnode(GIN, 39, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 5), rnode(GIN, 39, 0, 2) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 6), rnode(GIN, 39, 0, 3) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 7), rnode(GIN, 39, 0, 4) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 8), rnode(GIN, 39, 0, 5) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 9), rnode(GIN, 39, 0, 6) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 10), rnode(GIN, 39, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 11), rnode(GIN, 39, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 12), rnode(GIN, 41, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 13), rnode(GIN, 41, 0, 2) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 14), rnode(GIN, 41, 0, 3) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 15), rnode(GIN, 41, 0, 4) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 16), rnode(GIN, 41, 0, 5) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 17), rnode(GIN, 41, 0, 6) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 18), rnode(GIN, 41, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 19), rnode(GIN, 41, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 20), rnode(GIN, 41, 0, 11) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 21), rnode(GIN, 41, 0, 12) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 22), rnode(GIN, 41, 0, 25) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 23), rnode(GIN, 41, 0, 24) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 24), rnode(GIN, 41, 0, 23) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 25), rnode(GIN, 41, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 26), rnode(GIN, 41, 0, 21) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 27), rnode(GIN, 41, 0, 20) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 28), rnode(GIN, 41, 0, 19) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 29), rnode(GIN, 41, 0, 18) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 30), rnode(GIN, 41, 0, 17) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 31), rnode(GIN, 43, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 32), rnode(GIN, 43, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 33), rnode(GIN, 43, 0, 2) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 34), rnode(GIN, 43, 0, 3) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 35), rnode(GIN, 43, 0, 4) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 36), rnode(GIN, 43, 0, 5) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 37), rnode(GIN, 43, 0, 6) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 38), rnode(GIN, 43, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 39), rnode(GIN, 43, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 40), rnode(GIN, 43, 0, 9) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 41), rnode(GIN, 43, 0, 10) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 42), rnode(GIN, 43, 0, 11) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 43), rnode(GIN, 43, 0, 12) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 44), rnode(GIN, 43, 0, 25) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 45), rnode(GIN, 43, 0, 24) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 46), rnode(GIN, 43, 0, 23) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 47), rnode(GIN, 43, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 48), rnode(GIN, 43, 0, 21) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 49), rnode(GIN, 43, 0, 20) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 50), rnode(GIN, 43, 0, 19) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 51), rnode(GIN, 43, 0, 18) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 52), rnode(GIN, 43, 0, 17) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 53), rnode(GIN, 43, 0, 16) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 54), rnode(GIN, 43, 0, 15) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 55), rnode(GIN, 43, 0, 14) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 56), rnode(GIN, 45, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 57), rnode(GIN, 45, 0, 2) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 58), rnode(GIN, 45, 0, 3) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 59), rnode(GIN, 45, 0, 4) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 60), rnode(GIN, 45, 0, 5) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 61), rnode(GIN, 45, 0, 10) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 62), rnode(GIN, 45, 0, 11) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 63), rnode(GIN, 45, 0, 12) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 64), rnode(GIN, 45, 0, 25) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 65), rnode(GIN, 45, 0, 24) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 66), rnode(GIN, 45, 0, 23) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 67), rnode(GIN, 45, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 68), rnode(GIN, 45, 0, 18) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 69), rnode(GIN, 45, 0, 17) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 70), rnode(GIN, 45, 0, 16) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 71), rnode(GIN, 45, 0, 15) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 72), rnode(GIN, 45, 0, 14) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 73), rnode(GIN, 45, 0, 13) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 74), rnode(GIN, 46, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 75), rnode(GIN, 46, 0, 13) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 76), rnode(GIN, 47, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 77), rnode(GIN, 47, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 78), rnode(GIN, 47, 0, 2) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 79), rnode(GIN, 47, 0, 3) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 0), rnode(GIN, 47, 0, 4) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 1), rnode(GIN, 47, 0, 5) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 2), rnode(GIN, 47, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 3), rnode(GIN, 47, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 4), rnode(GIN, 47, 0, 9) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 5), rnode(GIN, 47, 0, 10) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 6), rnode(GIN, 47, 0, 11) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 7), rnode(GIN, 47, 0, 12) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 8), rnode(GIN, 47, 0, 25) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 9), rnode(GIN, 47, 0, 24) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 10), rnode(GIN, 47, 0, 23) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 11), rnode(GIN, 47, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 12), rnode(GIN, 47, 0, 21) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 13), rnode(GIN, 47, 0, 20) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 14), rnode(GIN, 47, 0, 19) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 15), rnode(GIN, 47, 0, 18) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 16), rnode(GIN, 47, 0, 17) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 17), rnode(GIN, 47, 0, 16) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 18), rnode(GIN, 47, 0, 15) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 19), rnode(GIN, 47, 0, 14) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 20), rnode(GIN, 48, 0, 13) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 21), rnode(GIN, 49, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 22), rnode(GIN, 49, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 23), rnode(GIN, 49, 0, 2) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 24), rnode(GIN, 49, 0, 3) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 25), rnode(GIN, 49, 0, 4) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 26), rnode(GIN, 49, 0, 6) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 27), rnode(GIN, 49, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 28), rnode(GIN, 49, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 29), rnode(GIN, 49, 0, 9) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 30), rnode(GIN, 49, 0, 10) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 31), rnode(GIN, 49, 0, 11) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 32), rnode(GIN, 49, 0, 12) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 33), rnode(GIN, 49, 0, 25) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 34), rnode(GIN, 49, 0, 24) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 35), rnode(GIN, 49, 0, 23) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 36), rnode(GIN, 49, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 37), rnode(GIN, 49, 0, 21) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 38), rnode(GIN, 49, 0, 20) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 39), rnode(GIN, 49, 0, 19) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 40), rnode(GIN, 49, 0, 17) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 41), rnode(GIN, 49, 0, 16) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 42), rnode(GIN, 49, 0, 15) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 43), rnode(GIN, 49, 0, 14) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 44), rnode(GIN, 49, 0, 13) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 45), rnode(GIN, 50, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 46), rnode(GIN, 49, 0, 18) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 47), rnode(GIN, 52, 0, 5) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 48), rnode(GIN, 52, 0, 6) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 49), rnode(GIN, 52, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 50), rnode(GIN, 52, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 51), rnode(GIN, 52, 0, 9) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 52), rnode(GIN, 52, 0, 10) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 53), rnode(GIN, 52, 0, 11) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 54), rnode(GIN, 52, 0, 12) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 55), rnode(GIN, 52, 0, 25) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 56), rnode(GIN, 52, 0, 24) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 57), rnode(GIN, 52, 0, 23) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 58), rnode(GIN, 52, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 59), rnode(GIN, 52, 0, 21) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 60), rnode(GIN, 52, 0, 20) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 61), rnode(GIN, 52, 0, 19) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 62), rnode(GIN, 52, 0, 18) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 63), rnode(GIN, 52, 0, 17) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 64), rnode(GIN, 52, 0, 16) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 65), rnode(GIN, 52, 0, 15) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 66), rnode(GIN, 52, 0, 14) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 67), rnode(GIN, 52, 0, 13) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 68), rnode(GIN, 53, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 69), rnode(GIN, 53, 0, 13) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 70), rnode(GIN, 54, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 71), rnode(GIN, 54, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 72), rnode(GIN, 56, 0, 5) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 73), rnode(GIN, 56, 0, 6) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 74), rnode(GIN, 56, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 75), rnode(GIN, 56, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 76), rnode(GIN, 56, 0, 9) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 77), rnode(GIN, 56, 0, 10) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 78), rnode(GIN, 56, 0, 11) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 79), rnode(GIN, 56, 0, 12) },
  { pnode(HMC, 23, 0, ORDAVSTVALID, 0, -1), rnode(GIN, 24, 0, 10) },
  { pnode(HMC, 23, 0, ORDAVSTVALID, 1, -1), rnode(GIN, 33, 0, 18) },
  { pnode(HMC, 23, 0, ORDAVSTVALID, 2, -1), rnode(GIN, 41, 0, 9) },
  { pnode(HMC, 23, 0, ORDAVSTVALID, 3, -1), rnode(GIN, 47, 0, 13) },
  { pnode(HMC, 23, 0, OWRACKAVSTDATA, 0, -1), rnode(GIN, 23, 0, 2) },
  { pnode(HMC, 23, 0, OWRACKAVSTDATA, 1, -1), rnode(GIN, 23, 0, 7) },
  { pnode(HMC, 23, 0, OWRACKAVSTDATA, 2, -1), rnode(GIN, 23, 0, 12) },
  { pnode(HMC, 23, 0, OWRACKAVSTDATA, 3, -1), rnode(GIN, 29, 0, 20) },
  { pnode(HMC, 23, 0, OWRACKAVSTDATA, 4, -1), rnode(GIN, 29, 0, 15) },
  { pnode(HMC, 23, 0, OWRACKAVSTDATA, 5, -1), rnode(GIN, 30, 0, 2) },
  { pnode(HMC, 23, 0, OWRACKAVSTVALID, 0, -1), rnode(GIN, 23, 0, 3) },
  { pnode(HMC, 23, 0, OWRACKAVSTVALID, 1, -1), rnode(GIN, 23, 0, 8) },
  { pnode(HMC, 23, 0, OWRACKAVSTVALID, 2, -1), rnode(GIN, 23, 0, 25) },
  { pnode(HMC, 23, 0, OWRACKAVSTVALID, 3, -1), rnode(GIN, 29, 0, 19) },
  { pnode(HMC, 23, 0, OWRACKAVSTVALID, 4, -1), rnode(GIN, 29, 0, 14) },
  { pnode(HMC, 23, 0, OWRACKAVSTVALID, 5, -1), rnode(GIN, 30, 0, 3) },
  { pnode(HMC, 23, 0, PHYRESETN, -1, -1), rnode(GIN, 62, 0, 13) },
  { pnode(HMC, 23, 0, SCRDATA, -1, 0), rnode(GIN, 56, 0, 16) },
  { pnode(HMC, 23, 0, SCRDATA, -1, 1), rnode(GIN, 56, 0, 15) },
  { pnode(HMC, 23, 0, SCRDATA, -1, 2), rnode(GIN, 56, 0, 14) },
  { pnode(HMC, 23, 0, SCRDATA, -1, 3), rnode(GIN, 56, 0, 13) },
  { pnode(HMC, 23, 0, SCRDATA, -1, 4), rnode(GIN, 57, 0, 0) },
  { pnode(HMC, 23, 0, SCRDATA, -1, 5), rnode(GIN, 57, 0, 13) },
  { pnode(HMC, 23, 0, SCRDATA, -1, 6), rnode(GIN, 58, 0, 0) },
  { pnode(HMC, 23, 0, SCRDATA, -1, 7), rnode(GIN, 58, 0, 1) },
  { pnode(HMC, 23, 0, SCRDATAVALID, -1, -1), rnode(GIN, 63, 0, 0) },
  { pnode(HMC, 23, 0, SCWAITREQUEST, -1, -1), rnode(GIN, 63, 0, 1) },
  { pnode(CMUXCR, 0, 2, CLKOUT, 0, -1), rnode(RCLK, 0, 4, 16) },
  { pnode(CMUXCR, 0, 2, CLKOUT, 1, -1), rnode(RCLK, 0, 4, 17) },
  { pnode(CMUXCR, 0, 2, CLKOUT, 2, -1), rnode(RCLK, 0, 4, 18) },
  { pnode(CMUXCR, 0, 2, CLKOUT, 3, -1), rnode(RCLK, 0, 4, 19) },
  { pnode(CMUXCR, 0, 2, CLKOUT, 4, -1), rnode(RCLK, 0, 4, 20) },
  { pnode(CMUXCR, 0, 2, CLKOUT, 5, -1), rnode(RCLK, 0, 4, 21) },
  { pnode(CMUXCR, 0, 2, CLKFBOUT, -1, 0), rnode(RCLKFB, 13, 4, 0) },
  { pnode(CMUXCR, 0, 2, CLKIN, -1, 0), rnode(DCMUX, 1, 0, 0) },
  { pnode(CMUXCR, 0, 2, CLKIN, -1, 1), rnode(DCMUX, 1, 0, 2) },
  { pnode(CMUXCR, 0, 2, CLKIN, -1, 2), rnode(DCMUX, 1, 0, 4) },
  { pnode(CMUXCR, 0, 2, CLKIN, -1, 3), rnode(DCMUX, 1, 0, 6) },
  { pnode(CMUXCR, 0, 2, ENABLE, 0, -1), rnode(GOUT, 1, 0, 0) },
  { pnode(CMUXCR, 0, 2, ENABLE, 1, -1), rnode(GOUT, 1, 0, 10) },
  { pnode(CMUXCR, 0, 2, ENABLE, 2, -1), rnode(GOUT, 1, 0, 9) },
  { pnode(CMUXCR, 0, 2, ENABLE, 3, -1), rnode(GOUT, 1, 0, 11) },
  { pnode(CMUXCR, 0, 2, ENABLE, 4, -1), rnode(GOUT, 1, 0, 6) },
  { pnode(CMUXCR, 0, 2, ENABLE, 5, -1), rnode(GOUT, 1, 0, 7) },
  { pnode(CMUXHG, 0, 8, CLKOUT, 0, -1), rnode(GCLK, 0, 8, 0) },
  { pnode(CMUXHG, 0, 8, CLKOUT, 1, -1), rnode(GCLK, 0, 8, 1) },
  { pnode(CMUXHG, 0, 8, CLKOUT, 2, -1), rnode(GCLK, 0, 8, 2) },
  { pnode(CMUXHG, 0, 8, CLKOUT, 3, -1), rnode(GCLK, 0, 8, 3) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 0, -1), rnode(RCLK, 0, 35, 10) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 1, -1), rnode(RCLK, 0, 35, 11) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 2, -1), rnode(RCLK, 0, 35, 12) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 3, -1), rnode(RCLK, 0, 35, 13) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 4, -1), rnode(RCLK, 0, 35, 14) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 5, -1), rnode(RCLK, 0, 35, 15) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 6, -1), rnode(RCLK, 0, 4, 10) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 7, -1), rnode(RCLK, 0, 4, 11) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 8, -1), rnode(RCLK, 0, 4, 12) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 9, -1), rnode(RCLK, 0, 4, 13) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 10, -1), rnode(RCLK, 0, 4, 14) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 11, -1), rnode(RCLK, 0, 4, 15) },
  { pnode(CMUXHG, 0, 8, CLKFBOUT, -1, 1), rnode(GCLKFB, 13, 34, 1) },
  { pnode(CMUXHR, 0, 8, CLKFBOUT, -1, 0), rnode(RCLKFB, 13, 34, 1) },
  { pnode(CMUXHG, 0, 8, SWITCHCLK, 0, -1), rnode(GIN, 0, 8, 4) },
  { pnode(CMUXHG, 0, 8, SWITCHCLK, 1, -1), rnode(GIN, 0, 8, 5) },
  { pnode(CMUXHG, 0, 8, SWITCHCLK, 2, -1), rnode(GIN, 0, 8, 6) },
  { pnode(CMUXHG, 0, 8, SWITCHCLK, 3, -1), rnode(GIN, 0, 8, 7) },
  { pnode(CMUXHG, 0, 8, SYN_EN, 0, -1), rnode(GIN, 0, 8, 0) },
  { pnode(CMUXHG, 0, 8, SYN_EN, 1, -1), rnode(GIN, 0, 8, 1) },
  { pnode(CMUXHG, 0, 8, SYN_EN, 2, -1), rnode(GIN, 0, 8, 2) },
  { pnode(CMUXHG, 0, 8, SYN_EN, 3, -1), rnode(GIN, 0, 8, 3) },
  { pnode(CMUXHG, 0, 8, CLKIN, -1, 0), rnode(DCMUX, 0, 9, 13) },
  { pnode(CMUXHG, 0, 8, CLKIN, -1, 1), rnode(DCMUX, 0, 9, 6) },
  { pnode(CMUXHG, 0, 8, CLKIN, -1, 2), rnode(DCMUX, 0, 8, 10) },
  { pnode(CMUXHG, 0, 8, CLKIN, -1, 3), rnode(DCMUX, 0, 8, 4) },
  { pnode(CMUXHR, 0, 8, CLKIN, -1, 0), rnode(DCMUX, 0, 9, 5) },
  { pnode(CMUXHR, 0, 8, CLKIN, -1, 1), rnode(DCMUX, 0, 9, 11) },
  { pnode(CMUXHR, 0, 8, CLKIN, -1, 2), rnode(DCMUX, 0, 8, 5) },
  { pnode(CMUXHR, 0, 8, CLKIN, -1, 3), rnode(DCMUX, 0, 8, 11) },
  { pnode(CMUXHR, 0, 8, CLKFBIN, -1, 0), rnode(DCMUX, 0, 9, 4) },
  { pnode(CMUXHR, 0, 8, CLKFBIN, -1, 1), rnode(DCMUX, 0, 60, 5) },
  { pnode(CMUXHG, 0, 8, SWITCHIN, 0, 0), rnode(GOUT, 0, 9, 55) },
  { pnode(CMUXHG, 0, 8, SWITCHIN, 1, 0), rnode(GOUT, 0, 9, 64) },
  { pnode(CMUXHG, 0, 8, SWITCHIN, 2, 0), rnode(GOUT, 0, 9, 29) },
  { pnode(CMUXHG, 0, 8, SWITCHIN, 3, 0), rnode(GOUT, 0, 9, 39) },
  { pnode(CMUXHG, 0, 8, SWITCHIN, 0, 1), rnode(GOUT, 0, 8, 68) },
  { pnode(CMUXHG, 0, 8, SWITCHIN, 1, 1), rnode(GOUT, 0, 8, 29) },
  { pnode(CMUXHG, 0, 8, SWITCHIN, 2, 1), rnode(GOUT, 0, 8, 55) },
  { pnode(CMUXHG, 0, 8, SWITCHIN, 3, 1), rnode(GOUT, 0, 8, 62) },
  { pnode(CMUXHG, 0, 8, BURSTCNT, -1, 0), rnode(GOUT, 0, 9, 13) },
  { pnode(CMUXHG, 0, 8, BURSTCNT, -1, 1), rnode(GOUT, 0, 8, 39) },
  { pnode(CMUXHG, 0, 8, BURSTCNT, -1, 2), rnode(GOUT, 0, 8, 13) },
  { pnode(CMUXHG, 0, 8, ENABLE, 0, -1), rnode(GOUT, 0, 9, 45) },
  { pnode(CMUXHG, 0, 8, ENABLE, 1, -1), rnode(GOUT, 0, 9, 68) },
  { pnode(CMUXHG, 0, 8, ENABLE, 2, -1), rnode(GOUT, 0, 8, 59) },
  { pnode(CMUXHG, 0, 8, ENABLE, 3, -1), rnode(GOUT, 0, 8, 45) },
  { pnode(CMUXHR, 0, 8, ENABLE, 0, -1), rnode(GOUT, 0, 9, 2) },
  { pnode(CMUXHR, 0, 8, ENABLE, 1, -1), rnode(GOUT, 0, 9, 61) },
  { pnode(CMUXHR, 0, 8, ENABLE, 2, -1), rnode(GOUT, 0, 9, 10) },
  { pnode(CMUXHR, 0, 8, ENABLE, 3, -1), rnode(GOUT, 0, 9, 3) },
  { pnode(CMUXHR, 0, 8, ENABLE, 4, -1), rnode(GOUT, 0, 9, 65) },
  { pnode(CMUXHR, 0, 8, ENABLE, 5, -1), rnode(GOUT, 0, 9, 58) },
  { pnode(CMUXHR, 0, 8, ENABLE, 6, -1), rnode(GOUT, 0, 8, 8) },
  { pnode(CMUXHR, 0, 8, ENABLE, 7, -1), rnode(GOUT, 0, 8, 2) },
  { pnode(CMUXHR, 0, 8, ENABLE, 8, -1), rnode(GOUT, 0, 8, 60) },
  { pnode(CMUXHR, 0, 8, ENABLE, 9, -1), rnode(GOUT, 0, 8, 10) },
  { pnode(CMUXHR, 0, 8, ENABLE, 10, -1), rnode(GOUT, 0, 8, 3) },
  { pnode(CMUXHR, 0, 8, ENABLE, 11, -1), rnode(GOUT, 0, 8, 63) },
  { pnode(CMUXP, 0, 55, CLKOUT, -1, 0), rnode(PCLK, 1, 21, 1) },
  { pnode(CMUXP, 0, 55, CLKOUT, -1, 1), rnode(PCLK, 1, 48, 7) },
  { pnode(CMUXP, 0, 55, CLKIN, -1, 0), rnode(DCMUX, 0, 35, 0) },
  { pnode(CMUXP, 0, 56, CLKOUT, -1, 0), rnode(PCLK, 1, 21, 0) },
  { pnode(CMUXP, 0, 56, CLKOUT, -1, 1), rnode(PCLK, 1, 48, 6) },
  { pnode(CMUXP, 0, 56, CLKIN, -1, 0), rnode(DCMUX, 0, 34, 0) },
  { pnode(CMUXP, 0, 57, CLKOUT, -1, 0), rnode(PCLK, 1, 21, 3) },
  { pnode(CMUXP, 0, 57, CLKOUT, -1, 1), rnode(PCLK, 1, 48, 9) },
  { pnode(CMUXP, 0, 57, CLKIN, -1, 0), rnode(DCMUX, 9, 42, 0) },
  { pnode(CMUXP, 0, 58, CLKOUT, -1, 0), rnode(PCLK, 1, 21, 2) },
  { pnode(CMUXP, 0, 58, CLKOUT, -1, 1), rnode(PCLK, 1, 48, 8) },
  { pnode(CMUXP, 0, 58, CLKIN, -1, 0), rnode(DCMUX, 9, 41, 0) },
  { pnode(CMUXP, 0, 59, CLKOUT, -1, 0), rnode(PCLK, 1, 21, 5) },
  { pnode(CMUXP, 0, 59, CLKOUT, -1, 1), rnode(PCLK, 1, 48, 11) },
  { pnode(CMUXP, 0, 59, CLKIN, -1, 0), rnode(DCMUX, 9, 50, 0) },
  { pnode(CMUXP, 0, 60, CLKOUT, -1, 0), rnode(PCLK, 1, 21, 4) },
  { pnode(CMUXP, 0, 60, CLKOUT, -1, 1), rnode(PCLK, 1, 48, 10) },
  { pnode(CMUXP, 0, 60, CLKIN, -1, 0), rnode(DCMUX, 9, 49, 0) },
  { pnode(CMUXCR, 5, 61, CLKOUT, 0, -1), rnode(RCLK, 0, 35, 16) },
  { pnode(CMUXCR, 5, 61, CLKOUT, 1, -1), rnode(RCLK, 0, 35, 17) },
  { pnode(CMUXCR, 5, 61, CLKOUT, 2, -1), rnode(RCLK, 0, 35, 18) },
  { pnode(CMUXCR, 5, 61, CLKOUT, 3, -1), rnode(RCLK, 0, 35, 19) },
  { pnode(CMUXCR, 5, 61, CLKOUT, 4, -1), rnode(RCLK, 0, 35, 20) },
  { pnode(CMUXCR, 5, 61, CLKOUT, 5, -1), rnode(RCLK, 0, 35, 21) },
  { pnode(CMUXCR, 5, 61, CLKFBOUT, -1, 0), rnode(RCLKFB, 13, 34, 0) },
  { pnode(CMUXCR, 5, 61, CLKFBOUT, -1, 1), rnode(RCLKFB, 13, 34, 2) },
  { pnode(CMUXCR, 5, 61, CLKIN, -1, 0), rnode(DCMUX, 1, 61, 0) },
  { pnode(CMUXCR, 5, 61, CLKIN, -1, 1), rnode(DCMUX, 1, 61, 2) },
  { pnode(CMUXCR, 5, 61, CLKIN, -1, 2), rnode(DCMUX, 1, 61, 4) },
  { pnode(CMUXCR, 5, 61, CLKIN, -1, 3), rnode(DCMUX, 1, 61, 6) },
  { pnode(CMUXCR, 5, 61, ENABLE, 0, -1), rnode(GOUT, 1, 61, 0) },
  { pnode(CMUXCR, 5, 61, ENABLE, 1, -1), rnode(GOUT, 1, 61, 10) },
  { pnode(CMUXCR, 5, 61, ENABLE, 2, -1), rnode(GOUT, 1, 61, 9) },
  { pnode(CMUXCR, 5, 61, ENABLE, 3, -1), rnode(GOUT, 1, 61, 11) },
  { pnode(CMUXCR, 5, 61, ENABLE, 4, -1), rnode(GOUT, 1, 61, 6) },
  { pnode(CMUXCR, 5, 61, ENABLE, 5, -1), rnode(GOUT, 1, 61, 7) },
  { pnode(CMUXVG, 28, 0, CLKOUT, 0, -1), rnode(GCLK, 0, 8, 4) },
  { pnode(CMUXVG, 28, 0, CLKOUT, 1, -1), rnode(GCLK, 0, 8, 5) },
  { pnode(CMUXVG, 28, 0, CLKOUT, 2, -1), rnode(GCLK, 0, 8, 6) },
  { pnode(CMUXVG, 28, 0, CLKOUT, 3, -1), rnode(GCLK, 0, 8, 7) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 0, -1), rnode(RCLK, 0, 4, 0) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 1, -1), rnode(RCLK, 0, 4, 1) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 2, -1), rnode(RCLK, 0, 4, 2) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 3, -1), rnode(RCLK, 0, 4, 3) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 4, -1), rnode(RCLK, 0, 4, 4) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 5, -1), rnode(RCLK, 0, 4, 5) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 6, -1), rnode(RCLK, 0, 4, 6) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 7, -1), rnode(RCLK, 0, 4, 7) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 8, -1), rnode(RCLK, 0, 4, 8) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 9, -1), rnode(RCLK, 0, 4, 9) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 10, -1), rnode(RCLK, 27, 4, 0) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 11, -1), rnode(RCLK, 27, 4, 1) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 12, -1), rnode(RCLK, 27, 4, 2) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 13, -1), rnode(RCLK, 27, 4, 3) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 14, -1), rnode(RCLK, 27, 4, 4) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 15, -1), rnode(RCLK, 27, 4, 5) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 16, -1), rnode(RCLK, 27, 4, 6) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 17, -1), rnode(RCLK, 27, 4, 7) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 18, -1), rnode(RCLK, 27, 4, 8) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 19, -1), rnode(RCLK, 27, 4, 9) },
  { pnode(CMUXVG, 28, 0, CLKFBOUT, -1, 1), rnode(GCLKFB, 13, 4, 0) },
  { pnode(CMUXVG, 28, 0, CLKFBOUT, -1, 2), rnode(GCLKFB, 47, 4, 0) },
  { pnode(CMUXVG, 28, 0, SWITCHCLK, 0, -1), rnode(GIN, 25, 0, 16) },
  { pnode(CMUXVG, 28, 0, SWITCHCLK, 1, -1), rnode(GIN, 27, 0, 2) },
  { pnode(CMUXVG, 28, 0, SWITCHCLK, 2, -1), rnode(GIN, 25, 0, 14) },
  { pnode(CMUXVG, 28, 0, SWITCHCLK, 3, -1), rnode(GIN, 27, 0, 0) },
  { pnode(CMUXVG, 28, 0, SYN_EN, 0, -1), rnode(GIN, 25, 0, 15) },
  { pnode(CMUXVG, 28, 0, SYN_EN, 1, -1), rnode(GIN, 27, 0, 3) },
  { pnode(CMUXVG, 28, 0, SYN_EN, 2, -1), rnode(GIN, 25, 0, 13) },
  { pnode(CMUXVG, 28, 0, SYN_EN, 3, -1), rnode(GIN, 27, 0, 1) },
  { pnode(CMUXVG, 28, 0, CLKIN, -1, 0), rnode(DCMUX, 25, 0, 14) },
  { pnode(CMUXVG, 28, 0, CLKIN, -1, 1), rnode(DCMUX, 27, 0, 2) },
  { pnode(CMUXVG, 28, 0, CLKIN, -1, 2), rnode(DCMUX, 25, 0, 12) },
  { pnode(CMUXVG, 28, 0, CLKIN, -1, 3), rnode(DCMUX, 27, 0, 0) },
  { pnode(CMUXVR, 28, 0, CLKIN, -1, 0), rnode(DCMUX, 25, 0, 8) },
  { pnode(CMUXVR, 28, 0, CLKIN, -1, 1), rnode(DCMUX, 27, 0, 6) },
  { pnode(CMUXVR, 28, 0, CLKIN, -1, 2), rnode(DCMUX, 25, 0, 10) },
  { pnode(CMUXVR, 28, 0, CLKIN, -1, 3), rnode(DCMUX, 27, 0, 4) },
  { pnode(CMUXVG, 28, 0, SWITCHIN, 0, 0), rnode(GOUT, 25, 0, 32) },
  { pnode(CMUXVG, 28, 0, SWITCHIN, 1, 0), rnode(GOUT, 25, 0, 37) },
  { pnode(CMUXVG, 28, 0, SWITCHIN, 2, 0), rnode(GOUT, 27, 0, 2) },
  { pnode(CMUXVG, 28, 0, SWITCHIN, 3, 0), rnode(GOUT, 27, 0, 1) },
  { pnode(CMUXVG, 28, 0, SWITCHIN, 0, 1), rnode(GOUT, 25, 0, 35) },
  { pnode(CMUXVG, 28, 0, SWITCHIN, 1, 1), rnode(GOUT, 25, 0, 36) },
  { pnode(CMUXVG, 28, 0, SWITCHIN, 2, 1), rnode(GOUT, 27, 0, 6) },
  { pnode(CMUXVG, 28, 0, SWITCHIN, 3, 1), rnode(GOUT, 27, 0, 7) },
  { pnode(CMUXVG, 28, 0, BURSTCNT, -1, 0), rnode(GOUT, 25, 0, 26) },
  { pnode(CMUXVG, 28, 0, BURSTCNT, -1, 1), rnode(GOUT, 27, 0, 3) },
  { pnode(CMUXVG, 28, 0, BURSTCNT, -1, 2), rnode(GOUT, 27, 0, 8) },
  { pnode(CMUXVG, 28, 0, ENABLE, 0, -1), rnode(GOUT, 27, 0, 9) },
  { pnode(CMUXVG, 28, 0, ENABLE, 1, -1), rnode(GOUT, 27, 0, 4) },
  { pnode(CMUXVG, 28, 0, ENABLE, 2, -1), rnode(GOUT, 27, 0, 11) },
  { pnode(CMUXVG, 28, 0, ENABLE, 3, -1), rnode(GOUT, 27, 0, 5) },
  { pnode(CMUXVR, 28, 0, ENABLE, 0, -1), rnode(GOUT, 27, 0, 10) },
  { pnode(CMUXVR, 28, 0, ENABLE, 1, -1), rnode(GOUT, 27, 0, 0) },
  { pnode(CMUXVR, 28, 0, ENABLE, 2, -1), rnode(GOUT, 25, 0, 33) },
  { pnode(CMUXVR, 28, 0, ENABLE, 3, -1), rnode(GOUT, 25, 0, 31) },
  { pnode(CMUXVR, 28, 0, ENABLE, 4, -1), rnode(GOUT, 25, 0, 30) },
  { pnode(CMUXVR, 28, 0, ENABLE, 5, -1), rnode(GOUT, 25, 0, 29) },
  { pnode(CMUXVR, 28, 0, ENABLE, 6, -1), rnode(GOUT, 25, 0, 34) },
  { pnode(CMUXVR, 28, 0, ENABLE, 7, -1), rnode(GOUT, 25, 0, 28) },
  { pnode(CMUXVR, 28, 0, ENABLE, 8, -1), rnode(GOUT, 25, 0, 27) },
  { pnode(CMUXVR, 28, 0, ENABLE, 9, -1), rnode(GOUT, 25, 0, 38) },
  { pnode(CMUXVR, 28, 0, ENABLE, 10, -1), rnode(GOUT, 27, 0, 12) },
  { pnode(CMUXVR, 28, 0, ENABLE, 11, -1), rnode(GOUT, 27, 0, 17) },
  { pnode(CMUXVR, 28, 0, ENABLE, 12, -1), rnode(GOUT, 27, 0, 13) },
  { pnode(CMUXVR, 28, 0, ENABLE, 13, -1), rnode(GOUT, 27, 0, 18) },
  { pnode(CMUXVR, 28, 0, ENABLE, 14, -1), rnode(GOUT, 27, 0, 14) },
  { pnode(CMUXVR, 28, 0, ENABLE, 15, -1), rnode(GOUT, 27, 0, 19) },
  { pnode(CMUXVR, 28, 0, ENABLE, 16, -1), rnode(GOUT, 27, 0, 15) },
  { pnode(CMUXVR, 28, 0, ENABLE, 17, -1), rnode(GOUT, 27, 0, 20) },
  { pnode(CMUXVR, 28, 0, ENABLE, 18, -1), rnode(GOUT, 27, 0, 16) },
  { pnode(CMUXVR, 28, 0, ENABLE, 19, -1), rnode(GOUT, 27, 0, 21) },
  { pnode(CMUXVG, 28, 61, CLKOUT, 0, -1), rnode(GCLK, 0, 8, 12) },
  { pnode(CMUXVG, 28, 61, CLKOUT, 1, -1), rnode(GCLK, 0, 8, 13) },
  { pnode(CMUXVG, 28, 61, CLKOUT, 2, -1), rnode(GCLK, 0, 8, 14) },
  { pnode(CMUXVG, 28, 61, CLKOUT, 3, -1), rnode(GCLK, 0, 8, 15) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 0, -1), rnode(RCLK, 0, 35, 0) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 1, -1), rnode(RCLK, 0, 35, 1) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 2, -1), rnode(RCLK, 0, 35, 2) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 3, -1), rnode(RCLK, 0, 35, 3) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 4, -1), rnode(RCLK, 0, 35, 4) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 5, -1), rnode(RCLK, 0, 35, 5) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 6, -1), rnode(RCLK, 0, 35, 6) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 7, -1), rnode(RCLK, 0, 35, 7) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 8, -1), rnode(RCLK, 0, 35, 8) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 9, -1), rnode(RCLK, 0, 35, 9) },
  { pnode(CMUXVG, 28, 61, CLKFBOUT, -1, 0), rnode(GCLKFB, 13, 34, 2) },
  { pnode(CMUXVG, 28, 61, CLKFBOUT, -1, 1), rnode(GCLKFB, 13, 34, 0) },
  { pnode(CMUXVG, 28, 61, SWITCHCLK, 0, -1), rnode(GIN, 25, 61, 16) },
  { pnode(CMUXVG, 28, 61, SWITCHCLK, 1, -1), rnode(GIN, 25, 61, 2) },
  { pnode(CMUXVG, 28, 61, SWITCHCLK, 2, -1), rnode(GIN, 25, 61, 14) },
  { pnode(CMUXVG, 28, 61, SWITCHCLK, 3, -1), rnode(GIN, 25, 61, 0) },
  { pnode(CMUXVG, 28, 61, SYN_EN, 0, -1), rnode(GIN, 25, 61, 15) },
  { pnode(CMUXVG, 28, 61, SYN_EN, 1, -1), rnode(GIN, 25, 61, 3) },
  { pnode(CMUXVG, 28, 61, SYN_EN, 2, -1), rnode(GIN, 25, 61, 13) },
  { pnode(CMUXVG, 28, 61, SYN_EN, 3, -1), rnode(GIN, 25, 61, 1) },
  { pnode(CMUXVG, 28, 61, CLKIN, -1, 0), rnode(DCMUX, 25, 61, 14) },
  { pnode(CMUXVG, 28, 61, CLKIN, -1, 1), rnode(DCMUX, 25, 61, 2) },
  { pnode(CMUXVG, 28, 61, CLKIN, -1, 2), rnode(DCMUX, 25, 61, 12) },
  { pnode(CMUXVG, 28, 61, CLKIN, -1, 3), rnode(DCMUX, 25, 61, 0) },
  { pnode(CMUXVR, 28, 61, CLKIN, -1, 0), rnode(DCMUX, 25, 61, 8) },
  { pnode(CMUXVR, 28, 61, CLKIN, -1, 1), rnode(DCMUX, 25, 61, 6) },
  { pnode(CMUXVR, 28, 61, CLKIN, -1, 2), rnode(DCMUX, 25, 61, 10) },
  { pnode(CMUXVR, 28, 61, CLKIN, -1, 3), rnode(DCMUX, 25, 61, 4) },
  { pnode(CMUXVG, 28, 61, SWITCHIN, 0, 0), rnode(GOUT, 25, 61, 32) },
  { pnode(CMUXVG, 28, 61, SWITCHIN, 1, 0), rnode(GOUT, 25, 61, 37) },
  { pnode(CMUXVG, 28, 61, SWITCHIN, 2, 0), rnode(GOUT, 25, 61, 2) },
  { pnode(CMUXVG, 28, 61, SWITCHIN, 3, 0), rnode(GOUT, 25, 61, 1) },
  { pnode(CMUXVG, 28, 61, SWITCHIN, 0, 1), rnode(GOUT, 25, 61, 35) },
  { pnode(CMUXVG, 28, 61, SWITCHIN, 1, 1), rnode(GOUT, 25, 61, 36) },
  { pnode(CMUXVG, 28, 61, SWITCHIN, 2, 1), rnode(GOUT, 25, 61, 6) },
  { pnode(CMUXVG, 28, 61, SWITCHIN, 3, 1), rnode(GOUT, 25, 61, 7) },
  { pnode(CMUXVG, 28, 61, BURSTCNT, -1, 0), rnode(GOUT, 25, 61, 26) },
  { pnode(CMUXVG, 28, 61, BURSTCNT, -1, 1), rnode(GOUT, 25, 61, 3) },
  { pnode(CMUXVG, 28, 61, BURSTCNT, -1, 2), rnode(GOUT, 25, 61, 8) },
  { pnode(CMUXVG, 28, 61, ENABLE, 0, -1), rnode(GOUT, 25, 61, 9) },
  { pnode(CMUXVG, 28, 61, ENABLE, 1, -1), rnode(GOUT, 25, 61, 4) },
  { pnode(CMUXVG, 28, 61, ENABLE, 2, -1), rnode(GOUT, 25, 61, 11) },
  { pnode(CMUXVG, 28, 61, ENABLE, 3, -1), rnode(GOUT, 25, 61, 5) },
  { pnode(CMUXVR, 28, 61, ENABLE, 0, -1), rnode(GOUT, 25, 61, 10) },
  { pnode(CMUXVR, 28, 61, ENABLE, 1, -1), rnode(GOUT, 25, 61, 0) },
  { pnode(CMUXVR, 28, 61, ENABLE, 2, -1), rnode(GOUT, 25, 61, 33) },
  { pnode(CMUXVR, 28, 61, ENABLE, 3, -1), rnode(GOUT, 25, 61, 31) },
  { pnode(CMUXVR, 28, 61, ENABLE, 4, -1), rnode(GOUT, 25, 61, 30) },
  { pnode(CMUXVR, 28, 61, ENABLE, 5, -1), rnode(GOUT, 25, 61, 29) },
  { pnode(CMUXVR, 28, 61, ENABLE, 6, -1), rnode(GOUT, 25, 61, 34) },
  { pnode(CMUXVR, 28, 61, ENABLE, 7, -1), rnode(GOUT, 25, 61, 28) },
  { pnode(CMUXVR, 28, 61, ENABLE, 8, -1), rnode(GOUT, 25, 61, 27) },
  { pnode(CMUXVR, 28, 61, ENABLE, 9, -1), rnode(GOUT, 25, 61, 38) },
  { pnode(CMUXVR, 28, 61, ENABLE, 10, -1), rnode(GOUT, 27, 61, 12) },
  { pnode(CMUXVR, 28, 61, ENABLE, 11, -1), rnode(GOUT, 27, 61, 17) },
  { pnode(CMUXVR, 28, 61, ENABLE, 12, -1), rnode(GOUT, 27, 61, 13) },
  { pnode(CMUXVR, 28, 61, ENABLE, 13, -1), rnode(GOUT, 27, 61, 18) },
  { pnode(CMUXVR, 28, 61, ENABLE, 14, -1), rnode(GOUT, 27, 61, 14) },
  { pnode(CMUXVR, 28, 61, ENABLE, 15, -1), rnode(GOUT, 27, 61, 19) },
  { pnode(CMUXVR, 28, 61, ENABLE, 16, -1), rnode(GOUT, 27, 61, 15) },
  { pnode(CMUXVR, 28, 61, ENABLE, 17, -1), rnode(GOUT, 27, 61, 20) },
  { pnode(CMUXVR, 28, 61, ENABLE, 18, -1), rnode(GOUT, 27, 61, 16) },
  { pnode(CMUXVR, 28, 61, ENABLE, 19, -1), rnode(GOUT, 27, 61, 21) },
  { pnode(CMUXCR, 68, 2, CLKOUT, 0, -1), rnode(RCLK, 27, 4, 16) },
  { pnode(CMUXCR, 68, 2, CLKOUT, 1, -1), rnode(RCLK, 27, 4, 17) },
  { pnode(CMUXCR, 68, 2, CLKOUT, 2, -1), rnode(RCLK, 27, 4, 18) },
  { pnode(CMUXCR, 68, 2, CLKOUT, 3, -1), rnode(RCLK, 27, 4, 19) },
  { pnode(CMUXCR, 68, 2, CLKOUT, 4, -1), rnode(RCLK, 27, 4, 20) },
  { pnode(CMUXCR, 68, 2, CLKOUT, 5, -1), rnode(RCLK, 27, 4, 21) },
  { pnode(CMUXCR, 68, 2, CLKFBOUT, -1, 0), rnode(RCLKFB, 47, 4, 0) },
  { pnode(CMUXCR, 68, 2, CLKIN, -1, 0), rnode(DCMUX, 67, 0, 14) },
  { pnode(CMUXCR, 68, 2, CLKIN, -1, 1), rnode(DCMUX, 67, 0, 12) },
  { pnode(CMUXCR, 68, 2, CLKIN, -1, 2), rnode(DCMUX, 67, 0, 10) },
  { pnode(CMUXCR, 68, 2, CLKIN, -1, 3), rnode(DCMUX, 67, 0, 8) },
  { pnode(CMUXCR, 68, 2, ENABLE, 0, -1), rnode(GOUT, 67, 0, 33) },
  { pnode(CMUXCR, 68, 2, ENABLE, 1, -1), rnode(GOUT, 67, 0, 32) },
  { pnode(CMUXCR, 68, 2, ENABLE, 2, -1), rnode(GOUT, 67, 0, 37) },
  { pnode(CMUXCR, 68, 2, ENABLE, 3, -1), rnode(GOUT, 67, 0, 35) },
  { pnode(CMUXCR, 68, 2, ENABLE, 4, -1), rnode(GOUT, 67, 0, 36) },
  { pnode(CMUXCR, 68, 2, ENABLE, 5, -1), rnode(GOUT, 67, 0, 26) },
  { pnode(CMUXHG, 68, 8, CLKOUT, 0, -1), rnode(GCLK, 0, 8, 8) },
  { pnode(CMUXHG, 68, 8, CLKOUT, 1, -1), rnode(GCLK, 0, 8, 9) },
  { pnode(CMUXHG, 68, 8, CLKOUT, 2, -1), rnode(GCLK, 0, 8, 10) },
  { pnode(CMUXHG, 68, 8, CLKOUT, 3, -1), rnode(GCLK, 0, 8, 11) },
  { pnode(CMUXHR, 68, 8, CLKOUT, 0, -1), rnode(RCLK, 32, 35, 0) },
  { pnode(CMUXHR, 68, 8, CLKOUT, 1, -1), rnode(RCLK, 32, 35, 1) },
  { pnode(CMUXHR, 68, 8, CLKOUT, 2, -1), rnode(RCLK, 32, 35, 2) },
  { pnode(CMUXHR, 68, 8, CLKOUT, 3, -1), rnode(RCLK, 32, 35, 3) },
  { pnode(CMUXHR, 68, 8, CLKOUT, 4, -1), rnode(RCLK, 32, 35, 4) },
  { pnode(CMUXHR, 68, 8, CLKOUT, 5, -1), rnode(RCLK, 32, 35, 5) },
  { pnode(CMUXHR, 68, 8, CLKOUT, 6, -1), rnode(RCLK, 27, 4, 10) },
  { pnode(CMUXHR, 68, 8, CLKOUT, 7, -1), rnode(RCLK, 27, 4, 11) },
  { pnode(CMUXHR, 68, 8, CLKOUT, 8, -1), rnode(RCLK, 27, 4, 12) },
  { pnode(CMUXHR, 68, 8, CLKOUT, 9, -1), rnode(RCLK, 27, 4, 13) },
  { pnode(CMUXHR, 68, 8, CLKOUT, 10, -1), rnode(RCLK, 27, 4, 14) },
  { pnode(CMUXHR, 68, 8, CLKOUT, 11, -1), rnode(RCLK, 27, 4, 15) },
  { pnode(CMUXHG, 68, 8, SWITCHCLK, 0, -1), rnode(GIN, 68, 9, 77) },
  { pnode(CMUXHG, 68, 8, SWITCHCLK, 1, -1), rnode(GIN, 68, 9, 79) },
  { pnode(CMUXHG, 68, 8, SWITCHCLK, 2, -1), rnode(GIN, 68, 8, 1) },
  { pnode(CMUXHG, 68, 8, SWITCHCLK, 3, -1), rnode(GIN, 68, 8, 2) },
  { pnode(CMUXHG, 68, 8, SYN_EN, 0, -1), rnode(GIN, 68, 9, 78) },
  { pnode(CMUXHG, 68, 8, SYN_EN, 1, -1), rnode(GIN, 68, 9, 80) },
  { pnode(CMUXHG, 68, 8, SYN_EN, 2, -1), rnode(GIN, 68, 8, 0) },
  { pnode(CMUXHG, 68, 8, SYN_EN, 3, -1), rnode(GIN, 68, 8, 3) },
  { pnode(CMUXHG, 68, 8, CLKIN, -1, 0), rnode(DCMUX, 68, 9, 12) },
  { pnode(CMUXHG, 68, 8, CLKIN, -1, 1), rnode(DCMUX, 68, 9, 14) },
  { pnode(CMUXHG, 68, 8, CLKIN, -1, 2), rnode(DCMUX, 68, 8, 3) },
  { pnode(CMUXHG, 68, 8, CLKIN, -1, 3), rnode(DCMUX, 68, 8, 1) },
  { pnode(CMUXHR, 68, 8, CLKIN, -1, 0), rnode(DCMUX, 68, 9, 13) },
  { pnode(CMUXHR, 68, 8, CLKIN, -1, 1), rnode(DCMUX, 68, 9, 15) },
  { pnode(CMUXHR, 68, 8, CLKIN, -1, 2), rnode(DCMUX, 68, 8, 0) },
  { pnode(CMUXHR, 68, 8, CLKIN, -1, 3), rnode(DCMUX, 68, 8, 2) },
  { pnode(CMUXHG, 68, 8, SWITCHIN, 0, 0), rnode(GOUT, 68, 9, 66) },
  { pnode(CMUXHG, 68, 8, SWITCHIN, 1, 0), rnode(GOUT, 68, 9, 65) },
  { pnode(CMUXHG, 68, 8, SWITCHIN, 2, 0), rnode(GOUT, 68, 9, 71) },
  { pnode(CMUXHG, 68, 8, SWITCHIN, 3, 0), rnode(GOUT, 68, 9, 70) },
  { pnode(CMUXHG, 68, 8, SWITCHIN, 0, 1), rnode(GOUT, 68, 8, 2) },
  { pnode(CMUXHG, 68, 8, SWITCHIN, 1, 1), rnode(GOUT, 68, 8, 3) },
  { pnode(CMUXHG, 68, 8, SWITCHIN, 2, 1), rnode(GOUT, 68, 8, 7) },
  { pnode(CMUXHG, 68, 8, SWITCHIN, 3, 1), rnode(GOUT, 68, 8, 6) },
  { pnode(CMUXHG, 68, 8, BURSTCNT, -1, 0), rnode(GOUT, 68, 9, 69) },
  { pnode(CMUXHG, 68, 8, BURSTCNT, -1, 1), rnode(GOUT, 68, 8, 0) },
  { pnode(CMUXHG, 68, 8, BURSTCNT, -1, 2), rnode(GOUT, 68, 8, 1) },
  { pnode(CMUXHG, 68, 8, ENABLE, 0, -1), rnode(GOUT, 68, 9, 68) },
  { pnode(CMUXHG, 68, 8, ENABLE, 1, -1), rnode(GOUT, 68, 9, 67) },
  { pnode(CMUXHG, 68, 8, ENABLE, 2, -1), rnode(GOUT, 68, 8, 4) },
  { pnode(CMUXHG, 68, 8, ENABLE, 3, -1), rnode(GOUT, 68, 8, 5) },
  { pnode(CMUXHR, 68, 8, ENABLE, 0, -1), rnode(GOUT, 68, 9, 9) },
  { pnode(CMUXHR, 68, 8, ENABLE, 1, -1), rnode(GOUT, 68, 9, 22) },
  { pnode(CMUXHR, 68, 8, ENABLE, 2, -1), rnode(GOUT, 68, 9, 32) },
  { pnode(CMUXHR, 68, 8, ENABLE, 3, -1), rnode(GOUT, 68, 9, 55) },
  { pnode(CMUXHR, 68, 8, ENABLE, 4, -1), rnode(GOUT, 68, 9, 63) },
  { pnode(CMUXHR, 68, 8, ENABLE, 5, -1), rnode(GOUT, 68, 9, 64) },
  { pnode(CMUXHR, 68, 8, ENABLE, 6, -1), rnode(GOUT, 68, 8, 40) },
  { pnode(CMUXHR, 68, 8, ENABLE, 7, -1), rnode(GOUT, 68, 8, 27) },
  { pnode(CMUXHR, 68, 8, ENABLE, 8, -1), rnode(GOUT, 68, 8, 17) },
  { pnode(CMUXHR, 68, 8, ENABLE, 9, -1), rnode(GOUT, 68, 8, 9) },
  { pnode(CMUXHR, 68, 8, ENABLE, 10, -1), rnode(GOUT, 68, 8, 10) },
  { pnode(CMUXHR, 68, 8, ENABLE, 11, -1), rnode(GOUT, 68, 8, 8) },
  { pnode(FPLL, 0, 0, ATPGMODE, -1, -1), rnode(GOUT, 1, 0, 5) },
  { pnode(FPLL, 0, 0, CLKEN, -1, 0), rnode(GOUT, 1, 0, 3) },
  { pnode(FPLL, 0, 0, CLKEN, -1, 1), rnode(GOUT, 1, 0, 4) },
  { pnode(FPLL, 0, 0, CNT_SEL, -1, 0), rnode(GOUT, 1, 0, 17) },
  { pnode(FPLL, 0, 0, CNT_SEL, -1, 1), rnode(GOUT, 1, 0, 12) },
  { pnode(FPLL, 0, 0, CNT_SEL, -1, 2), rnode(GOUT, 1, 0, 1) },
  { pnode(FPLL, 0, 0, CNT_SEL, -1, 3), rnode(GOUT, 1, 0, 2) },
  { pnode(FPLL, 0, 0, CNT_SEL, -1, 4), rnode(GOUT, 1, 0, 8) },
  { pnode(FPLL, 0, 0, REG_BYTE_EN, -1, 0), rnode(GOUT, 1, 0, 18) },
  { pnode(FPLL, 0, 0, REG_BYTE_EN, -1, 1), rnode(GOUT, 1, 0, 13) },
  { pnode(FPLL, 0, 0, REG_CLK, -1, -1), rnode(GOUT, 1, 0, 14) },
  { pnode(FPLL, 0, 0, REG_MDIO_DIS, -1, -1), rnode(GOUT, 1, 0, 19) },
  { pnode(FPLL, 0, 0, REG_READ, -1, -1), rnode(GOUT, 1, 0, 15) },
  { pnode(FPLL, 0, 0, REG_REG_ADDR, -1, 0), rnode(GOUT, 1, 0, 24) },
  { pnode(FPLL, 0, 0, REG_REG_ADDR, -1, 1), rnode(GOUT, 1, 0, 23) },
  { pnode(FPLL, 0, 0, REG_REG_ADDR, -1, 2), rnode(GOUT, 1, 0, 22) },
  { pnode(FPLL, 0, 0, REG_REG_ADDR, -1, 3), rnode(GOUT, 1, 0, 21) },
  { pnode(FPLL, 0, 0, REG_REG_ADDR, -1, 4), rnode(GOUT, 1, 0, 16) },
  { pnode(FPLL, 0, 0, REG_REG_ADDR, -1, 5), rnode(GOUT, 1, 0, 20) },
  { pnode(FPLL, 0, 0, REG_RST_N, -1, -1), rnode(GOUT, 1, 0, 25) },
  { pnode(FPLL, 0, 0, REG_SER_SHIFT_LOAD, -1, -1), rnode(GOUT, 1, 0, 50) },
  { pnode(FPLL, 0, 0, REG_WRITE, -1, -1), rnode(GOUT, 1, 0, 49) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 0), rnode(GOUT, 1, 0, 30) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 1), rnode(GOUT, 1, 0, 29) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 2), rnode(GOUT, 1, 0, 34) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 3), rnode(GOUT, 1, 0, 28) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 4), rnode(GOUT, 1, 0, 27) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 5), rnode(GOUT, 1, 0, 38) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 6), rnode(GOUT, 1, 0, 43) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 7), rnode(GOUT, 1, 0, 39) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 8), rnode(GOUT, 1, 0, 44) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 9), rnode(GOUT, 1, 0, 40) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 10), rnode(GOUT, 1, 0, 45) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 11), rnode(GOUT, 1, 0, 41) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 12), rnode(GOUT, 1, 0, 46) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 13), rnode(GOUT, 1, 0, 42) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 14), rnode(GOUT, 1, 0, 47) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 15), rnode(GOUT, 1, 0, 48) },
  { pnode(FPLL, 0, 0, EXTSWITCH, -1, -1), rnode(GOUT, 1, 0, 31) },
  { pnode(FPLL, 0, 0, FBCLK_IN_R, -1, -1), rnode(DCMUX, 0, 1, 4) },
  { pnode(FPLL, 0, 0, CSR_TEST, -1, -1), rnode(GOUT, 1, 0, 33) },
  { pnode(FPLL, 0, 0, NRESET, -1, -1), rnode(GOUT, 1, 0, 32) },
  { pnode(FPLL, 0, 0, PFDEN, -1, -1), rnode(GOUT, 1, 0, 37) },
  { pnode(FPLL, 0, 0, PHASE_EN, -1, -1), rnode(GOUT, 1, 0, 35) },
  { pnode(FPLL, 0, 0, SCANEN, -1, -1), rnode(GOUT, 1, 0, 36) },
  { pnode(FPLL, 0, 0, UP_DN, -1, -1), rnode(GOUT, 1, 0, 26) },
  { pnode(FPLL, 0, 0, CLK0_BAD, -1, -1), rnode(GIN, 1, 0, 0) },
  { pnode(FPLL, 0, 0, CLK1_BAD, -1, -1), rnode(GIN, 1, 0, 1) },
  { pnode(FPLL, 0, 0, CLKSEL, -1, -1), rnode(GIN, 1, 0, 2) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 0), rnode(GIN, 1, 0, 20) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 1), rnode(GIN, 1, 0, 21) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 2), rnode(GIN, 1, 0, 22) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 3), rnode(GIN, 1, 0, 23) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 4), rnode(GIN, 1, 0, 24) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 5), rnode(GIN, 1, 0, 25) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 6), rnode(GIN, 1, 0, 12) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 7), rnode(GIN, 1, 0, 11) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 8), rnode(GIN, 1, 0, 10) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 9), rnode(GIN, 1, 0, 9) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 10), rnode(GIN, 1, 0, 8) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 11), rnode(GIN, 1, 0, 7) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 12), rnode(GIN, 1, 0, 6) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 13), rnode(GIN, 1, 0, 5) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 14), rnode(GIN, 1, 0, 4) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 15), rnode(GIN, 1, 0, 3) },
  { pnode(FPLL, 0, 0, LOCK, -1, -1), rnode(GIN, 1, 0, 19) },
  { pnode(FPLL, 0, 0, PHASE_DONE, -1, -1), rnode(GIN, 1, 0, 18) },
  { pnode(FPLL, 0, 13, ATPGMODE, -1, -1), rnode(GOUT, 9, 27, 17) },
  { pnode(FPLL, 0, 13, CLKEN, -1, 0), rnode(GOUT, 9, 28, 53) },
  { pnode(FPLL, 0, 13, CLKEN, -1, 1), rnode(GOUT, 9, 28, 52) },
  { pnode(FPLL, 0, 13, CNT_SEL, -1, 0), rnode(GOUT, 9, 27, 69) },
  { pnode(FPLL, 0, 13, CNT_SEL, -1, 1), rnode(GOUT, 9, 27, 67) },
  { pnode(FPLL, 0, 13, CNT_SEL, -1, 2), rnode(GOUT, 9, 27, 66) },
  { pnode(FPLL, 0, 13, CNT_SEL, -1, 3), rnode(GOUT, 9, 27, 53) },
  { pnode(FPLL, 0, 13, CNT_SEL, -1, 4), rnode(GOUT, 9, 27, 52) },
  { pnode(FPLL, 0, 13, REG_BYTE_EN, -1, 0), rnode(GOUT, 9, 25, 13) },
  { pnode(FPLL, 0, 13, REG_BYTE_EN, -1, 1), rnode(GOUT, 9, 27, 71) },
  { pnode(FPLL, 0, 13, REG_CLK, -1, -1), rnode(DCMUX, 9, 27, 2) },
  { pnode(FPLL, 0, 13, REG_MDIO_DIS, -1, -1), rnode(GOUT, 9, 25, 17) },
  { pnode(FPLL, 0, 13, REG_READ, -1, -1), rnode(GOUT, 9, 25, 18) },
  { pnode(FPLL, 0, 13, REG_REG_ADDR, -1, 0), rnode(GOUT, 9, 27, 49) },
  { pnode(FPLL, 0, 13, REG_REG_ADDR, -1, 1), rnode(GOUT, 9, 27, 48) },
  { pnode(FPLL, 0, 13, REG_REG_ADDR, -1, 2), rnode(GOUT, 9, 27, 35) },
  { pnode(FPLL, 0, 13, REG_REG_ADDR, -1, 3), rnode(GOUT, 9, 27, 34) },
  { pnode(FPLL, 0, 13, REG_REG_ADDR, -1, 4), rnode(GOUT, 9, 27, 32) },
  { pnode(FPLL, 0, 13, REG_REG_ADDR, -1, 5), rnode(GOUT, 9, 27, 31) },
  { pnode(FPLL, 0, 13, REG_RST_N, -1, -1), rnode(GOUT, 9, 28, 71) },
  { pnode(FPLL, 0, 13, REG_SER_SHIFT_LOAD, -1, -1), rnode(GOUT, 9, 25, 14) },
  { pnode(FPLL, 0, 13, REG_WRITE, -1, -1), rnode(GOUT, 9, 25, 32) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 0), rnode(GOUT, 9, 24, 35) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 1), rnode(GOUT, 9, 24, 34) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 2), rnode(GOUT, 9, 24, 32) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 3), rnode(GOUT, 9, 24, 31) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 4), rnode(GOUT, 9, 24, 18) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 5), rnode(GOUT, 9, 24, 17) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 6), rnode(GOUT, 9, 24, 14) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 7), rnode(GOUT, 9, 24, 13) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 8), rnode(GOUT, 9, 25, 71) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 9), rnode(GOUT, 9, 25, 69) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 10), rnode(GOUT, 9, 25, 67) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 11), rnode(GOUT, 9, 25, 66) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 12), rnode(GOUT, 9, 25, 53) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 13), rnode(GOUT, 9, 25, 52) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 14), rnode(GOUT, 9, 25, 49) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 15), rnode(GOUT, 9, 25, 48) },
  { pnode(FPLL, 0, 13, EXTSWITCH, -1, -1), rnode(GOUT, 9, 20, 14) },
  { pnode(FPLL, 0, 13, CSR_TEST, -1, -1), rnode(GOUT, 9, 27, 14) },
  { pnode(FPLL, 0, 13, NRESET, -1, -1), rnode(GOUT, 9, 28, 48) },
  { pnode(FPLL, 0, 13, PFDEN, -1, -1), rnode(GOUT, 9, 28, 67) },
  { pnode(FPLL, 0, 13, PHASE_EN, -1, -1), rnode(GOUT, 9, 25, 31) },
  { pnode(FPLL, 0, 13, SCANEN, -1, -1), rnode(GOUT, 9, 27, 18) },
  { pnode(FPLL, 0, 13, UP_DN, -1, -1), rnode(GOUT, 9, 20, 13) },
  { pnode(FPLL, 0, 13, CLK0_BAD, -1, -1), rnode(GIN, 9, 20, 19) },
  { pnode(FPLL, 0, 13, CLK1_BAD, -1, -1), rnode(GIN, 9, 20, 18) },
  { pnode(FPLL, 0, 13, CLKSEL, -1, -1), rnode(GIN, 9, 20, 15) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 0), rnode(GIN, 9, 25, 80) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 1), rnode(GIN, 9, 25, 79) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 2), rnode(GIN, 9, 25, 76) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 3), rnode(GIN, 9, 25, 75) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 4), rnode(GIN, 9, 25, 60) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 5), rnode(GIN, 9, 25, 59) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 6), rnode(GIN, 9, 25, 56) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 7), rnode(GIN, 9, 25, 55) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 8), rnode(GIN, 9, 24, 39) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 9), rnode(GIN, 9, 24, 38) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 10), rnode(GIN, 9, 24, 35) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 11), rnode(GIN, 9, 24, 34) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 12), rnode(GIN, 9, 24, 19) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 13), rnode(GIN, 9, 24, 18) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 14), rnode(GIN, 9, 24, 15) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 15), rnode(GIN, 9, 24, 14) },
  { pnode(FPLL, 0, 13, LOCK, -1, -1), rnode(GIN, 9, 28, 60) },
  { pnode(FPLL, 0, 13, PHASE_DONE, -1, -1), rnode(GIN, 9, 25, 38) },
  { pnode(FPLL, 0, 29, ATPGMODE, -1, -1), rnode(GOUT, 0, 32, 67) },
  { pnode(FPLL, 0, 29, CLKEN, -1, 0), rnode(GOUT, 0, 31, 31) },
  { pnode(FPLL, 0, 29, CLKEN, -1, 1), rnode(GOUT, 0, 31, 32) },
  { pnode(FPLL, 0, 29, CNT_SEL, -1, 0), rnode(GOUT, 0, 32, 14) },
  { pnode(FPLL, 0, 29, CNT_SEL, -1, 1), rnode(GOUT, 0, 32, 17) },
  { pnode(FPLL, 0, 29, CNT_SEL, -1, 2), rnode(GOUT, 0, 32, 18) },
  { pnode(FPLL, 0, 29, CNT_SEL, -1, 3), rnode(GOUT, 0, 32, 31) },
  { pnode(FPLL, 0, 29, CNT_SEL, -1, 4), rnode(GOUT, 0, 32, 32) },
  { pnode(FPLL, 0, 29, REG_BYTE_EN, -1, 0), rnode(GOUT, 0, 34, 71) },
  { pnode(FPLL, 0, 29, REG_BYTE_EN, -1, 1), rnode(GOUT, 0, 32, 13) },
  { pnode(FPLL, 0, 29, REG_CLK, -1, -1), rnode(DCMUX, 0, 31, 1) },
  { pnode(FPLL, 0, 29, REG_MDIO_DIS, -1, -1), rnode(GOUT, 0, 34, 67) },
  { pnode(FPLL, 0, 29, REG_READ, -1, -1), rnode(GOUT, 0, 34, 66) },
  { pnode(FPLL, 0, 29, REG_REG_ADDR, -1, 0), rnode(GOUT, 0, 32, 34) },
  { pnode(FPLL, 0, 29, REG_REG_ADDR, -1, 1), rnode(GOUT, 0, 32, 35) },
  { pnode(FPLL, 0, 29, REG_REG_ADDR, -1, 2), rnode(GOUT, 0, 32, 48) },
  { pnode(FPLL, 0, 29, REG_REG_ADDR, -1, 3), rnode(GOUT, 0, 32, 49) },
  { pnode(FPLL, 0, 29, REG_REG_ADDR, -1, 4), rnode(GOUT, 0, 32, 52) },
  { pnode(FPLL, 0, 29, REG_REG_ADDR, -1, 5), rnode(GOUT, 0, 32, 53) },
  { pnode(FPLL, 0, 29, REG_RST_N, -1, -1), rnode(GOUT, 0, 31, 13) },
  { pnode(FPLL, 0, 29, REG_SER_SHIFT_LOAD, -1, -1), rnode(GOUT, 0, 34, 69) },
  { pnode(FPLL, 0, 29, REG_WRITE, -1, -1), rnode(GOUT, 0, 34, 52) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 0), rnode(GOUT, 0, 35, 48) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 1), rnode(GOUT, 0, 35, 49) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 2), rnode(GOUT, 0, 35, 52) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 3), rnode(GOUT, 0, 35, 53) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 4), rnode(GOUT, 0, 35, 66) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 5), rnode(GOUT, 0, 35, 67) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 6), rnode(GOUT, 0, 35, 69) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 7), rnode(GOUT, 0, 35, 71) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 8), rnode(GOUT, 0, 34, 13) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 9), rnode(GOUT, 0, 34, 14) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 10), rnode(GOUT, 0, 34, 17) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 11), rnode(GOUT, 0, 34, 18) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 12), rnode(GOUT, 0, 34, 31) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 13), rnode(GOUT, 0, 34, 32) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 14), rnode(GOUT, 0, 34, 34) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 15), rnode(GOUT, 0, 34, 35) },
  { pnode(FPLL, 0, 29, EXTSWITCH, -1, -1), rnode(GOUT, 9, 39, 69) },
  { pnode(FPLL, 0, 29, FBCLK_IN_L, -1, -1), rnode(DCMUX, 0, 60, 6) },
  { pnode(FPLL, 0, 29, CSR_TEST, -1, -1), rnode(GOUT, 0, 32, 69) },
  { pnode(FPLL, 0, 29, NRESET, -1, -1), rnode(GOUT, 0, 31, 35) },
  { pnode(FPLL, 0, 29, PFDEN, -1, -1), rnode(GOUT, 0, 31, 17) },
  { pnode(FPLL, 0, 29, PHASE_EN, -1, -1), rnode(GOUT, 0, 34, 53) },
  { pnode(FPLL, 0, 29, SCANEN, -1, -1), rnode(GOUT, 0, 32, 66) },
  { pnode(FPLL, 0, 29, UP_DN, -1, -1), rnode(GOUT, 9, 39, 71) },
  { pnode(FPLL, 0, 29, CLK0_BAD, -1, -1), rnode(GIN, 9, 39, 75) },
  { pnode(FPLL, 0, 29, CLK1_BAD, -1, -1), rnode(GIN, 9, 39, 76) },
  { pnode(FPLL, 0, 29, CLKSEL, -1, -1), rnode(GIN, 9, 39, 79) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 0), rnode(GIN, 0, 34, 14) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 1), rnode(GIN, 0, 34, 15) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 2), rnode(GIN, 0, 34, 18) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 3), rnode(GIN, 0, 34, 19) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 4), rnode(GIN, 0, 34, 34) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 5), rnode(GIN, 0, 34, 35) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 6), rnode(GIN, 0, 34, 38) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 7), rnode(GIN, 0, 34, 39) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 8), rnode(GIN, 0, 35, 55) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 9), rnode(GIN, 0, 35, 56) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 10), rnode(GIN, 0, 35, 59) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 11), rnode(GIN, 0, 35, 60) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 12), rnode(GIN, 0, 35, 75) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 13), rnode(GIN, 0, 35, 76) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 14), rnode(GIN, 0, 35, 79) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 15), rnode(GIN, 0, 35, 80) },
  { pnode(FPLL, 0, 29, LOCK, -1, -1), rnode(GIN, 0, 31, 34) },
  { pnode(FPLL, 0, 29, PHASE_DONE, -1, -1), rnode(GIN, 0, 34, 56) },
  { pnode(FPLL, 0, 53, ATPGMODE, -1, -1), rnode(GOUT, 1, 61, 5) },
  { pnode(FPLL, 0, 53, CLKEN, -1, 0), rnode(GOUT, 1, 61, 3) },
  { pnode(FPLL, 0, 53, CLKEN, -1, 1), rnode(GOUT, 1, 61, 4) },
  { pnode(FPLL, 0, 53, CNT_SEL, -1, 0), rnode(GOUT, 1, 61, 17) },
  { pnode(FPLL, 0, 53, CNT_SEL, -1, 1), rnode(GOUT, 1, 61, 12) },
  { pnode(FPLL, 0, 53, CNT_SEL, -1, 2), rnode(GOUT, 1, 61, 1) },
  { pnode(FPLL, 0, 53, CNT_SEL, -1, 3), rnode(GOUT, 1, 61, 2) },
  { pnode(FPLL, 0, 53, CNT_SEL, -1, 4), rnode(GOUT, 1, 61, 8) },
  { pnode(FPLL, 0, 53, REG_BYTE_EN, -1, 0), rnode(GOUT, 1, 61, 18) },
  { pnode(FPLL, 0, 53, REG_BYTE_EN, -1, 1), rnode(GOUT, 1, 61, 13) },
  { pnode(FPLL, 0, 53, REG_CLK, -1, -1), rnode(GOUT, 1, 61, 14) },
  { pnode(FPLL, 0, 53, REG_MDIO_DIS, -1, -1), rnode(GOUT, 1, 61, 19) },
  { pnode(FPLL, 0, 53, REG_READ, -1, -1), rnode(GOUT, 1, 61, 15) },
  { pnode(FPLL, 0, 53, REG_REG_ADDR, -1, 0), rnode(GOUT, 1, 61, 24) },
  { pnode(FPLL, 0, 53, REG_REG_ADDR, -1, 1), rnode(GOUT, 1, 61, 23) },
  { pnode(FPLL, 0, 53, REG_REG_ADDR, -1, 2), rnode(GOUT, 1, 61, 22) },
  { pnode(FPLL, 0, 53, REG_REG_ADDR, -1, 3), rnode(GOUT, 1, 61, 21) },
  { pnode(FPLL, 0, 53, REG_REG_ADDR, -1, 4), rnode(GOUT, 1, 61, 16) },
  { pnode(FPLL, 0, 53, REG_REG_ADDR, -1, 5), rnode(GOUT, 1, 61, 20) },
  { pnode(FPLL, 0, 53, REG_RST_N, -1, -1), rnode(GOUT, 1, 61, 25) },
  { pnode(FPLL, 0, 53, REG_SER_SHIFT_LOAD, -1, -1), rnode(GOUT, 1, 61, 50) },
  { pnode(FPLL, 0, 53, REG_WRITE, -1, -1), rnode(GOUT, 1, 61, 49) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 0), rnode(GOUT, 1, 61, 30) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 1), rnode(GOUT, 1, 61, 29) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 2), rnode(GOUT, 1, 61, 34) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 3), rnode(GOUT, 1, 61, 28) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 4), rnode(GOUT, 1, 61, 27) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 5), rnode(GOUT, 1, 61, 38) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 6), rnode(GOUT, 1, 61, 43) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 7), rnode(GOUT, 1, 61, 39) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 8), rnode(GOUT, 1, 61, 44) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 9), rnode(GOUT, 1, 61, 40) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 10), rnode(GOUT, 1, 61, 45) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 11), rnode(GOUT, 1, 61, 41) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 12), rnode(GOUT, 1, 61, 46) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 13), rnode(GOUT, 1, 61, 42) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 14), rnode(GOUT, 1, 61, 47) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 15), rnode(GOUT, 1, 61, 48) },
  { pnode(FPLL, 0, 53, EXTSWITCH, -1, -1), rnode(GOUT, 1, 61, 31) },
  { pnode(FPLL, 0, 53, FBCLK_IN_R, -1, -1), rnode(DCMUX, 0, 60, 4) },
  { pnode(FPLL, 0, 53, CSR_TEST, -1, -1), rnode(GOUT, 1, 61, 33) },
  { pnode(FPLL, 0, 53, NRESET, -1, -1), rnode(GOUT, 1, 61, 32) },
  { pnode(FPLL, 0, 53, PFDEN, -1, -1), rnode(GOUT, 1, 61, 37) },
  { pnode(FPLL, 0, 53, PHASE_EN, -1, -1), rnode(GOUT, 1, 61, 35) },
  { pnode(FPLL, 0, 53, SCANEN, -1, -1), rnode(GOUT, 1, 61, 36) },
  { pnode(FPLL, 0, 53, UP_DN, -1, -1), rnode(GOUT, 1, 61, 26) },
  { pnode(FPLL, 0, 53, CLK0_BAD, -1, -1), rnode(GIN, 1, 61, 0) },
  { pnode(FPLL, 0, 53, CLK1_BAD, -1, -1), rnode(GIN, 1, 61, 1) },
  { pnode(FPLL, 0, 53, CLKSEL, -1, -1), rnode(GIN, 1, 61, 2) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 0), rnode(GIN, 1, 61, 20) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 1), rnode(GIN, 1, 61, 21) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 2), rnode(GIN, 1, 61, 22) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 3), rnode(GIN, 1, 61, 23) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 4), rnode(GIN, 1, 61, 24) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 5), rnode(GIN, 1, 61, 25) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 6), rnode(GIN, 1, 61, 12) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 7), rnode(GIN, 1, 61, 11) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 8), rnode(GIN, 1, 61, 10) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 9), rnode(GIN, 1, 61, 9) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 10), rnode(GIN, 1, 61, 8) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 11), rnode(GIN, 1, 61, 7) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 12), rnode(GIN, 1, 61, 6) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 13), rnode(GIN, 1, 61, 5) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 14), rnode(GIN, 1, 61, 4) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 15), rnode(GIN, 1, 61, 3) },
  { pnode(FPLL, 0, 53, LOCK, -1, -1), rnode(GIN, 1, 61, 19) },
  { pnode(FPLL, 0, 53, PHASE_DONE, -1, -1), rnode(GIN, 1, 61, 18) },
  { pnode(FPLL, 68, 0, ATPGMODE, -1, -1), rnode(GOUT, 68, 1, 30) },
  { pnode(FPLL, 68, 0, CLKEN, -1, 0), rnode(GOUT, 68, 1, 25) },
  { pnode(FPLL, 68, 0, CLKEN, -1, 1), rnode(GOUT, 68, 1, 23) },
  { pnode(FPLL, 68, 0, CNT_SEL, -1, 0), rnode(GOUT, 68, 1, 42) },
  { pnode(FPLL, 68, 0, CNT_SEL, -1, 1), rnode(GOUT, 68, 1, 41) },
  { pnode(FPLL, 68, 0, CNT_SEL, -1, 2), rnode(GOUT, 68, 1, 39) },
  { pnode(FPLL, 68, 0, CNT_SEL, -1, 3), rnode(GOUT, 68, 1, 37) },
  { pnode(FPLL, 68, 0, CNT_SEL, -1, 4), rnode(GOUT, 68, 1, 36) },
  { pnode(FPLL, 68, 0, REG_BYTE_EN, -1, 0), rnode(GOUT, 68, 1, 60) },
  { pnode(FPLL, 68, 0, REG_BYTE_EN, -1, 1), rnode(GOUT, 68, 1, 43) },
  { pnode(FPLL, 68, 0, REG_CLK, -1, -1), rnode(GOUT, 68, 1, 28) },
  { pnode(FPLL, 68, 0, REG_MDIO_DIS, -1, -1), rnode(GOUT, 68, 1, 65) },
  { pnode(FPLL, 68, 0, REG_READ, -1, -1), rnode(GOUT, 68, 1, 64) },
  { pnode(FPLL, 68, 0, REG_REG_ADDR, -1, 0), rnode(GOUT, 68, 1, 40) },
  { pnode(FPLL, 68, 0, REG_REG_ADDR, -1, 1), rnode(GOUT, 68, 1, 38) },
  { pnode(FPLL, 68, 0, REG_REG_ADDR, -1, 2), rnode(GOUT, 68, 1, 35) },
  { pnode(FPLL, 68, 0, REG_REG_ADDR, -1, 3), rnode(GOUT, 68, 1, 33) },
  { pnode(FPLL, 68, 0, REG_REG_ADDR, -1, 4), rnode(GOUT, 68, 1, 34) },
  { pnode(FPLL, 68, 0, REG_REG_ADDR, -1, 5), rnode(GOUT, 68, 1, 32) },
  { pnode(FPLL, 68, 0, REG_RST_N, -1, -1), rnode(GOUT, 68, 1, 27) },
  { pnode(FPLL, 68, 0, REG_SER_SHIFT_LOAD, -1, -1), rnode(GOUT, 68, 1, 62) },
  { pnode(FPLL, 68, 0, REG_WRITE, -1, -1), rnode(GOUT, 68, 1, 67) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 0), rnode(GOUT, 68, 1, 58) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 1), rnode(GOUT, 68, 1, 59) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 2), rnode(GOUT, 68, 1, 56) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 3), rnode(GOUT, 68, 1, 57) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 4), rnode(GOUT, 68, 1, 54) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 5), rnode(GOUT, 68, 1, 55) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 6), rnode(GOUT, 68, 1, 52) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 7), rnode(GOUT, 68, 1, 53) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 8), rnode(GOUT, 68, 1, 50) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 9), rnode(GOUT, 68, 1, 51) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 10), rnode(GOUT, 68, 1, 48) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 11), rnode(GOUT, 68, 1, 49) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 12), rnode(GOUT, 68, 1, 46) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 13), rnode(GOUT, 68, 1, 47) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 14), rnode(GOUT, 68, 1, 44) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 15), rnode(GOUT, 68, 1, 45) },
  { pnode(FPLL, 68, 0, EXTSWITCH, -1, -1), rnode(GOUT, 68, 1, 63) },
  { pnode(FPLL, 68, 0, FBCLK_IN_R, -1, -1), rnode(DCMUX, 68, 1, 4) },
  { pnode(FPLL, 68, 0, CSR_TEST, -1, -1), rnode(GOUT, 68, 1, 29) },
  { pnode(FPLL, 68, 0, NRESET, -1, -1), rnode(GOUT, 68, 1, 24) },
  { pnode(FPLL, 68, 0, PFDEN, -1, -1), rnode(GOUT, 68, 1, 26) },
  { pnode(FPLL, 68, 0, PHASE_EN, -1, -1), rnode(GOUT, 68, 1, 66) },
  { pnode(FPLL, 68, 0, SCANEN, -1, -1), rnode(GOUT, 68, 1, 31) },
  { pnode(FPLL, 68, 0, UP_DN, -1, -1), rnode(GOUT, 68, 1, 61) },
  { pnode(FPLL, 68, 0, CLK0_BAD, -1, -1), rnode(GIN, 68, 1, 71) },
  { pnode(FPLL, 68, 0, CLK1_BAD, -1, -1), rnode(GIN, 68, 1, 69) },
  { pnode(FPLL, 68, 0, CLKSEL, -1, -1), rnode(GIN, 68, 1, 70) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 0), rnode(GIN, 68, 1, 59) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 1), rnode(GIN, 68, 1, 60) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 2), rnode(GIN, 68, 1, 57) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 3), rnode(GIN, 68, 1, 58) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 4), rnode(GIN, 68, 1, 55) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 5), rnode(GIN, 68, 1, 56) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 6), rnode(GIN, 68, 1, 53) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 7), rnode(GIN, 68, 1, 54) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 8), rnode(GIN, 68, 1, 67) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 9), rnode(GIN, 68, 1, 68) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 10), rnode(GIN, 68, 1, 65) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 11), rnode(GIN, 68, 1, 66) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 12), rnode(GIN, 68, 1, 63) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 13), rnode(GIN, 68, 1, 64) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 14), rnode(GIN, 68, 1, 61) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 15), rnode(GIN, 68, 1, 62) },
  { pnode(FPLL, 68, 0, LOCK, -1, -1), rnode(GIN, 68, 1, 51) },
  { pnode(FPLL, 68, 0, PHASE_DONE, -1, -1), rnode(GIN, 68, 1, 52) },
  { pnode(CTRL, 0, 3, CAPTNUPDT_RU, -1, -1), rnode(GOUT, 0, 2, 33) },
  { pnode(CTRL, 0, 3, CLOCK_CHIPID, -1, -1), rnode(DCMUX, 0, 2, 0) },
  { pnode(CTRL, 0, 3, CLOCK_CRC, -1, -1), rnode(DCMUX, 0, 2, 4) },
  { pnode(CTRL, 0, 3, CLOCK_OPREG, -1, -1), rnode(DCMUX, 0, 1, 0) },
  { pnode(CTRL, 0, 3, CLOCK_PR, -1, -1), rnode(DCMUX, 0, 2, 6) },
  { pnode(CTRL, 0, 3, CLOCK_RU, -1, -1), rnode(DCMUX, 0, 2, 11) },
  { pnode(CTRL, 0, 3, CLOCK_SPI, -1, -1), rnode(DCMUX, 0, 2, 2) },
  { pnode(CTRL, 0, 3, CONFIG, -1, -1), rnode(GOUT, 0, 2, 37) },
  { pnode(CTRL, 0, 3, CORECTL_JTAG, -1, -1), rnode(GOUT, 0, 2, 8) },
  { pnode(CTRL, 0, 3, CORECTL_PR, -1, -1), rnode(GOUT, 0, 2, 12) },
  { pnode(CTRL, 0, 3, DATA, -1, 0), rnode(GOUT, 0, 2, 14) },
  { pnode(CTRL, 0, 3, DATA, -1, 1), rnode(GOUT, 0, 2, 15) },
  { pnode(CTRL, 0, 3, DATA, -1, 2), rnode(GOUT, 0, 2, 16) },
  { pnode(CTRL, 0, 3, DATA, -1, 3), rnode(GOUT, 0, 2, 17) },
  { pnode(CTRL, 0, 3, DATA, -1, 4), rnode(GOUT, 0, 2, 18) },
  { pnode(CTRL, 0, 3, DATA, -1, 5), rnode(GOUT, 0, 2, 19) },
  { pnode(CTRL, 0, 3, DATA, -1, 6), rnode(GOUT, 0, 2, 20) },
  { pnode(CTRL, 0, 3, DATA, -1, 7), rnode(GOUT, 0, 2, 21) },
  { pnode(CTRL, 0, 3, DATA, -1, 8), rnode(GOUT, 0, 2, 22) },
  { pnode(CTRL, 0, 3, DATA, -1, 9), rnode(GOUT, 0, 2, 23) },
  { pnode(CTRL, 0, 3, DATA, -1, 10), rnode(GOUT, 0, 2, 24) },
  { pnode(CTRL, 0, 3, DATA, -1, 11), rnode(GOUT, 0, 2, 25) },
  { pnode(CTRL, 0, 3, DATA, -1, 12), rnode(GOUT, 0, 2, 26) },
  { pnode(CTRL, 0, 3, DATA, -1, 13), rnode(GOUT, 0, 2, 27) },
  { pnode(CTRL, 0, 3, DATA, -1, 14), rnode(GOUT, 0, 2, 28) },
  { pnode(CTRL, 0, 3, DATA, -1, 15), rnode(GOUT, 0, 2, 29) },
  { pnode(CTRL, 0, 3, DATA0OE, -1, -1), rnode(GOUT, 0, 1, 6) },
  { pnode(CTRL, 0, 3, DATA0OUT, -1, -1), rnode(GOUT, 0, 1, 14) },
  { pnode(CTRL, 0, 3, DATA1OE, -1, -1), rnode(GOUT, 0, 1, 7) },
  { pnode(CTRL, 0, 3, DATA1OUT, -1, -1), rnode(GOUT, 0, 1, 15) },
  { pnode(CTRL, 0, 3, DATA2OE, -1, -1), rnode(GOUT, 0, 1, 8) },
  { pnode(CTRL, 0, 3, DATA2OUT, -1, -1), rnode(GOUT, 0, 1, 16) },
  { pnode(CTRL, 0, 3, DATA3OE, -1, -1), rnode(GOUT, 0, 1, 9) },
  { pnode(CTRL, 0, 3, DATA3OUT, -1, -1), rnode(GOUT, 0, 1, 17) },
  { pnode(CTRL, 0, 3, DFT_IN, -1, 0), rnode(GOUT, 0, 1, 23) },
  { pnode(CTRL, 0, 3, DFT_IN, -1, 1), rnode(GOUT, 0, 1, 24) },
  { pnode(CTRL, 0, 3, DFT_IN, -1, 2), rnode(GOUT, 0, 1, 25) },
  { pnode(CTRL, 0, 3, DFT_IN, -1, 3), rnode(GOUT, 0, 1, 26) },
  { pnode(CTRL, 0, 3, DFT_IN, -1, 4), rnode(GOUT, 0, 1, 27) },
  { pnode(CTRL, 0, 3, DFT_IN, -1, 5), rnode(GOUT, 0, 1, 28) },
  { pnode(CTRL, 0, 3, NTDOPINENA, -1, -1), rnode(GOUT, 0, 1, 34) },
  { pnode(CTRL, 0, 3, OSC_ENA, -1, -1), rnode(GOUT, 0, 2, 10) },
  { pnode(CTRL, 0, 3, OUTPUT_ENABLE, -1, -1), rnode(GOUT, 0, 2, 4) },
  { pnode(CTRL, 0, 3, PRREQUEST, -1, -1), rnode(GOUT, 0, 2, 31) },
  { pnode(CTRL, 0, 3, REGIN, -1, -1), rnode(GOUT, 0, 2, 35) },
  { pnode(CTRL, 0, 3, RSTTIMER, -1, -1), rnode(GOUT, 0, 2, 39) },
  { pnode(CTRL, 0, 3, SCE_IN, -1, -1), rnode(GOUT, 0, 2, 2) },
  { pnode(CTRL, 0, 3, SHIFTNLD_CHIPID, -1, -1), rnode(GOUT, 0, 2, 0) },
  { pnode(CTRL, 0, 3, SHIFTNLD_CRC, -1, -1), rnode(GOUT, 0, 2, 6) },
  { pnode(CTRL, 0, 3, SHIFTNLD_OPREG, -1, -1), rnode(GOUT, 0, 1, 0) },
  { pnode(CTRL, 0, 3, SHIFTNLD_RU, -1, -1), rnode(GOUT, 0, 2, 41) },
  { pnode(CTRL, 0, 3, TCKCORE, -1, -1), rnode(DCMUX, 0, 2, 15) },
  { pnode(CTRL, 0, 3, TDICORE, -1, -1), rnode(GOUT, 0, 2, 43) },
  { pnode(CTRL, 0, 3, TDOUTAP, -1, -1), rnode(GOUT, 0, 2, 45) },
  { pnode(CTRL, 0, 3, TMSCORE, -1, -1), rnode(GOUT, 0, 2, 47) },
  { pnode(CTRL, 0, 3, CLKDRUSER, -1, -1), rnode(GIN, 0, 2, 2) },
  { pnode(CTRL, 0, 3, CLK_OUT, -1, -1), rnode(GIN, 0, 1, 36) },
  { pnode(CTRL, 0, 3, CLK_OUT1, -1, -1), rnode(GIN, 0, 1, 38) },
  { pnode(CTRL, 0, 3, CRCERROR, -1, -1), rnode(GIN, 0, 2, 9) },
  { pnode(CTRL, 0, 3, DATA0IN, -1, -1), rnode(GIN, 0, 2, 4) },
  { pnode(CTRL, 0, 3, DATA1IN, -1, -1), rnode(GIN, 0, 2, 5) },
  { pnode(CTRL, 0, 3, DATA2IN, -1, -1), rnode(GIN, 0, 2, 6) },
  { pnode(CTRL, 0, 3, DATA3IN, -1, -1), rnode(GIN, 0, 2, 7) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 0), rnode(GIN, 0, 1, 6) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 1), rnode(GIN, 0, 1, 7) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 2), rnode(GIN, 0, 1, 8) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 3), rnode(GIN, 0, 1, 9) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 4), rnode(GIN, 0, 1, 10) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 5), rnode(GIN, 0, 1, 11) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 6), rnode(GIN, 0, 1, 12) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 7), rnode(GIN, 0, 1, 13) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 8), rnode(GIN, 0, 1, 14) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 9), rnode(GIN, 0, 1, 15) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 10), rnode(GIN, 0, 1, 16) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 11), rnode(GIN, 0, 1, 17) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 12), rnode(GIN, 0, 1, 18) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 13), rnode(GIN, 0, 1, 19) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 14), rnode(GIN, 0, 1, 20) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 15), rnode(GIN, 0, 1, 21) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 16), rnode(GIN, 0, 1, 22) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 17), rnode(GIN, 0, 1, 23) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 18), rnode(GIN, 0, 1, 24) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 19), rnode(GIN, 0, 1, 25) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 20), rnode(GIN, 0, 1, 26) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 21), rnode(GIN, 0, 1, 27) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 22), rnode(GIN, 0, 1, 28) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 23), rnode(GIN, 0, 1, 29) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 24), rnode(GIN, 0, 1, 30) },
  { pnode(CTRL, 0, 3, DONE, -1, -1), rnode(GIN, 0, 2, 17) },
  { pnode(CTRL, 0, 3, END_OF_ED_FULLCHIP, -1, -1), rnode(GIN, 0, 2, 13) },
  { pnode(CTRL, 0, 3, EXTERNALREQUEST, -1, -1), rnode(GIN, 0, 2, 21) },
  { pnode(CTRL, 0, 3, NCE_OUT, -1, -1), rnode(GIN, 0, 2, 15) },
  { pnode(CTRL, 0, 3, OERROR, -1, -1), rnode(GIN, 0, 2, 19) },
  { pnode(CTRL, 0, 3, READY, -1, -1), rnode(GIN, 0, 2, 23) },
  { pnode(CTRL, 0, 3, REG_OUT_CHIPID, -1, -1), rnode(GIN, 0, 2, 0) },
  { pnode(CTRL, 0, 3, REG_OUT_CRC, -1, -1), rnode(GIN, 0, 2, 11) },
  { pnode(CTRL, 0, 3, REG_OUT_OPREG, -1, -1), rnode(GIN, 0, 1, 0) },
  { pnode(CTRL, 0, 3, REG_OUT_RU, -1, -1), rnode(GIN, 0, 2, 27) },
  { pnode(CTRL, 0, 3, RUNIDLEUSER, -1, -1), rnode(GIN, 0, 2, 25) },
  { pnode(CTRL, 0, 3, SHIFTUSER, -1, -1), rnode(GIN, 0, 2, 33) },
  { pnode(CTRL, 0, 3, TCKUTAP, -1, -1), rnode(GIN, 0, 2, 35) },
  { pnode(CTRL, 0, 3, TDIUTAP, -1, -1), rnode(GIN, 0, 2, 37) },
  { pnode(CTRL, 0, 3, TDOCORE, -1, -1), rnode(GIN, 0, 2, 39) },
  { pnode(CTRL, 0, 3, TMSUTAP, -1, -1), rnode(GIN, 0, 2, 41) },
  { pnode(CTRL, 0, 3, UPDATEUSER, -1, -1), rnode(GIN, 0, 2, 43) },
  { pnode(CTRL, 0, 3, USR1USER, -1, -1), rnode(GIN, 0, 2, 45) },
  { pnode(HPS_BOOT, 32, 46, BOOT_FROM_FPGA_ON_FAILURE, -1, -1), rnode(GOUT, 31, 57, 2) },
  { pnode(HPS_BOOT, 32, 46, BOOT_FROM_FPGA_READY, -1, -1), rnode(GOUT, 31, 57, 1) },
  { pnode(HPS_BOOT, 32, 46, BSEL, -1, 0), rnode(GOUT, 31, 56, 10) },
  { pnode(HPS_BOOT, 32, 46, BSEL, -1, 1), rnode(GOUT, 31, 56, 9) },
  { pnode(HPS_BOOT, 32, 46, BSEL, -1, 2), rnode(GOUT, 31, 56, 8) },
  { pnode(HPS_BOOT, 32, 46, BSEL_EN, -1, -1), rnode(GOUT, 31, 56, 7) },
  { pnode(HPS_BOOT, 32, 46, CSEL, -1, 0), rnode(GOUT, 31, 56, 6) },
  { pnode(HPS_BOOT, 32, 46, CSEL, -1, 1), rnode(GOUT, 31, 56, 5) },
  { pnode(HPS_BOOT, 32, 46, CSEL_EN, -1, -1), rnode(GOUT, 31, 56, 4) },
  { pnode(HPS_CLOCKS_RESETS, 32, 50, F2H_COLD_RST_REQ_N, -1, -1), rnode(GOUT, 31, 57, 31) },
  { pnode(HPS_CLOCKS_RESETS, 32, 50, F2H_DBG_RST_REQ_N, -1, -1), rnode(GOUT, 31, 57, 30) },
  { pnode(HPS_CLOCKS_RESETS, 32, 50, F2H_PENDING_RST_ACK, -1, -1), rnode(GOUT, 31, 57, 29) },
  { pnode(HPS_CLOCKS_RESETS, 32, 50, F2H_PERIPH_REF_CLK, -1, -1), rnode(DCMUX, 31, 60, 2) },
  { pnode(HPS_CLOCKS_RESETS, 32, 50, F2H_SDRAM_REF_CLK, -1, -1), rnode(DCMUX, 31, 60, 1) },
  { pnode(HPS_CLOCKS_RESETS, 32, 50, F2H_WARM_RST_REQ_N, -1, -1), rnode(GOUT, 31, 57, 28) },
  { pnode(HPS_CLOCKS_RESETS, 32, 50, PTP_REF_CLK, -1, -1), rnode(DCMUX, 31, 46, 2) },
  { pnode(HPS_CLOCKS_RESETS, 32, 50, H2F_PENDING_RST_REQ_N, -1, -1), rnode(GIN, 31, 59, 21) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, CLK, -1, -1), rnode(DCMUX, 31, 28, 2) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, CLK_EN, -1, -1), rnode(GOUT, 31, 21, 46) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_IN, -1, 0), rnode(GOUT, 31, 21, 45) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_IN, -1, 1), rnode(GOUT, 31, 21, 44) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_IN, -1, 2), rnode(GOUT, 31, 21, 43) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_IN, -1, 3), rnode(GOUT, 31, 21, 42) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_IN, -1, 4), rnode(GOUT, 31, 21, 41) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_IN, -1, 5), rnode(GOUT, 31, 21, 40) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_IN, -1, 6), rnode(GOUT, 31, 21, 39) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_IN, -1, 7), rnode(GOUT, 31, 21, 38) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_OUTACK, -1, 0), rnode(GOUT, 31, 21, 37) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_OUTACK, -1, 1), rnode(GOUT, 31, 21, 36) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_OUTACK, -1, 2), rnode(GOUT, 31, 21, 35) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_OUTACK, -1, 3), rnode(GOUT, 31, 21, 34) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_OUTACK, -1, 4), rnode(GOUT, 31, 21, 33) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_OUTACK, -1, 5), rnode(GOUT, 31, 21, 32) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_OUTACK, -1, 6), rnode(GOUT, 31, 21, 31) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_OUTACK, -1, 7), rnode(GOUT, 31, 21, 30) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, ASICCTL, -1, 0), rnode(GIN, 31, 21, 2) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, ASICCTL, -1, 1), rnode(GIN, 31, 21, 1) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, ASICCTL, -1, 2), rnode(GIN, 31, 21, 0) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, ASICCTL, -1, 3), rnode(GIN, 31, 20, 53) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, ASICCTL, -1, 4), rnode(GIN, 31, 20, 52) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, ASICCTL, -1, 5), rnode(GIN, 31, 20, 51) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, ASICCTL, -1, 6), rnode(GIN, 31, 20, 50) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, ASICCTL, -1, 7), rnode(GIN, 31, 20, 49) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_INACK, -1, 0), rnode(GIN, 31, 20, 48) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_INACK, -1, 1), rnode(GIN, 31, 20, 47) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_INACK, -1, 2), rnode(GIN, 31, 20, 46) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_INACK, -1, 3), rnode(GIN, 31, 20, 45) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_INACK, -1, 4), rnode(GIN, 31, 20, 44) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_INACK, -1, 5), rnode(GIN, 31, 20, 43) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_INACK, -1, 6), rnode(GIN, 31, 20, 42) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_INACK, -1, 7), rnode(GIN, 31, 20, 41) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_OUT, -1, 0), rnode(GIN, 31, 20, 40) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_OUT, -1, 1), rnode(GIN, 31, 20, 39) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_OUT, -1, 2), rnode(GIN, 31, 20, 38) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_OUT, -1, 3), rnode(GIN, 31, 20, 37) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_OUT, -1, 4), rnode(GIN, 31, 20, 36) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_OUT, -1, 5), rnode(GIN, 31, 20, 35) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_OUT, -1, 6), rnode(GIN, 31, 20, 34) },
  { pnode(HPS_CROSS_TRIGGER, 32, 20, TRIG_OUT, -1, 7), rnode(GIN, 31, 20, 33) },
  { pnode(HPS_DBG_APB, 32, 53, DBG_APB_DISABLE, -1, -1), rnode(GOUT, 31, 21, 1) },
  { pnode(HPS_DBG_APB, 32, 53, P_CLK, -1, -1), rnode(DCMUX, 31, 28, 1) },
  { pnode(HPS_DBG_APB, 32, 53, P_CLK_EN, -1, -1), rnode(GOUT, 31, 21, 0) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 0), rnode(GOUT, 31, 20, 51) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 1), rnode(GOUT, 31, 20, 40) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 2), rnode(GOUT, 31, 20, 29) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 3), rnode(GOUT, 31, 20, 26) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 4), rnode(GOUT, 31, 20, 25) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 5), rnode(GOUT, 31, 20, 24) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 6), rnode(GOUT, 31, 20, 23) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 7), rnode(GOUT, 31, 20, 22) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 8), rnode(GOUT, 31, 20, 21) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 9), rnode(GOUT, 31, 20, 20) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 10), rnode(GOUT, 31, 20, 50) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 11), rnode(GOUT, 31, 20, 49) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 12), rnode(GOUT, 31, 20, 48) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 13), rnode(GOUT, 31, 20, 47) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 14), rnode(GOUT, 31, 20, 46) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 15), rnode(GOUT, 31, 20, 45) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 16), rnode(GOUT, 31, 20, 44) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 17), rnode(GOUT, 31, 20, 43) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 18), rnode(GOUT, 31, 20, 42) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 19), rnode(GOUT, 31, 20, 41) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 20), rnode(GOUT, 31, 20, 39) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 21), rnode(GOUT, 31, 20, 38) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 22), rnode(GOUT, 31, 20, 37) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 23), rnode(GOUT, 31, 20, 36) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 24), rnode(GOUT, 31, 20, 35) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 25), rnode(GOUT, 31, 20, 34) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 26), rnode(GOUT, 31, 20, 33) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 27), rnode(GOUT, 31, 20, 32) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 28), rnode(GOUT, 31, 20, 31) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 29), rnode(GOUT, 31, 20, 30) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 30), rnode(GOUT, 31, 20, 28) },
  { pnode(HPS_DBG_APB, 32, 53, P_RDATA, -1, 31), rnode(GOUT, 31, 20, 27) },
  { pnode(HPS_DBG_APB, 32, 53, P_READY, -1, -1), rnode(GOUT, 31, 20, 19) },
  { pnode(HPS_DBG_APB, 32, 53, P_SLV_ERR, -1, -1), rnode(GOUT, 31, 20, 18) },
  { pnode(HPS_DBG_APB, 32, 53, P_ADDR, -1, 0), rnode(GIN, 31, 20, 21) },
  { pnode(HPS_DBG_APB, 32, 53, P_ADDR, -1, 1), rnode(GIN, 31, 20, 20) },
  { pnode(HPS_DBG_APB, 32, 53, P_ADDR, -1, 2), rnode(GIN, 31, 20, 19) },
  { pnode(HPS_DBG_APB, 32, 53, P_ADDR, -1, 3), rnode(GIN, 31, 20, 18) },
  { pnode(HPS_DBG_APB, 32, 53, P_ADDR, -1, 4), rnode(GIN, 31, 20, 17) },
  { pnode(HPS_DBG_APB, 32, 53, P_ADDR, -1, 5), rnode(GIN, 31, 20, 16) },
  { pnode(HPS_DBG_APB, 32, 53, P_ADDR, -1, 6), rnode(GIN, 31, 20, 15) },
  { pnode(HPS_DBG_APB, 32, 53, P_ADDR, -1, 7), rnode(GIN, 31, 20, 14) },
  { pnode(HPS_DBG_APB, 32, 53, P_ADDR, -1, 8), rnode(GIN, 31, 20, 31) },
  { pnode(HPS_DBG_APB, 32, 53, P_ADDR, -1, 9), rnode(GIN, 31, 20, 30) },
  { pnode(HPS_DBG_APB, 32, 53, P_ADDR, -1, 10), rnode(GIN, 31, 20, 29) },
  { pnode(HPS_DBG_APB, 32, 53, P_ADDR, -1, 11), rnode(GIN, 31, 20, 28) },
  { pnode(HPS_DBG_APB, 32, 53, P_ADDR, -1, 12), rnode(GIN, 31, 20, 27) },
  { pnode(HPS_DBG_APB, 32, 53, P_ADDR, -1, 13), rnode(GIN, 31, 20, 26) },
  { pnode(HPS_DBG_APB, 32, 53, P_ADDR, -1, 14), rnode(GIN, 31, 20, 25) },
  { pnode(HPS_DBG_APB, 32, 53, P_ADDR, -1, 15), rnode(GIN, 31, 20, 24) },
  { pnode(HPS_DBG_APB, 32, 53, P_ADDR, -1, 16), rnode(GIN, 31, 20, 23) },
  { pnode(HPS_DBG_APB, 32, 53, P_ADDR, -1, 17), rnode(GIN, 31, 20, 22) },
  { pnode(HPS_DBG_APB, 32, 53, P_ADDR_31, -1, -1), rnode(GIN, 31, 20, 32) },
  { pnode(HPS_DBG_APB, 32, 53, P_ENABLE, -1, -1), rnode(GIN, 31, 20, 13) },
  { pnode(HPS_DBG_APB, 32, 53, P_RESET_N, -1, -1), rnode(GIN, 31, 20, 12) },
  { pnode(HPS_DBG_APB, 32, 53, P_SEL, -1, -1), rnode(GIN, 31, 20, 11) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 0), rnode(GIN, 31, 20, 10) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 1), rnode(GIN, 31, 19, 53) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 2), rnode(GIN, 31, 19, 42) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 3), rnode(GIN, 31, 19, 39) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 4), rnode(GIN, 31, 19, 38) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 5), rnode(GIN, 31, 19, 37) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 6), rnode(GIN, 31, 19, 36) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 7), rnode(GIN, 31, 19, 35) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 8), rnode(GIN, 31, 19, 34) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 9), rnode(GIN, 31, 19, 33) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 10), rnode(GIN, 31, 20, 9) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 11), rnode(GIN, 31, 20, 8) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 12), rnode(GIN, 31, 20, 7) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 13), rnode(GIN, 31, 20, 6) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 14), rnode(GIN, 31, 20, 5) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 15), rnode(GIN, 31, 20, 4) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 16), rnode(GIN, 31, 20, 3) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 17), rnode(GIN, 31, 20, 2) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 18), rnode(GIN, 31, 20, 1) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 19), rnode(GIN, 31, 20, 0) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 20), rnode(GIN, 31, 19, 52) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 21), rnode(GIN, 31, 19, 51) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 22), rnode(GIN, 31, 19, 50) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 23), rnode(GIN, 31, 19, 49) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 24), rnode(GIN, 31, 19, 48) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 25), rnode(GIN, 31, 19, 47) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 26), rnode(GIN, 31, 19, 46) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 27), rnode(GIN, 31, 19, 45) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 28), rnode(GIN, 31, 19, 44) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 29), rnode(GIN, 31, 19, 43) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 30), rnode(GIN, 31, 19, 41) },
  { pnode(HPS_DBG_APB, 32, 53, P_WDATA, -1, 31), rnode(GIN, 31, 19, 40) },
  { pnode(HPS_DBG_APB, 32, 53, P_WRITE, -1, -1), rnode(GIN, 31, 19, 32) },
  { pnode(HPS_DMA, 32, 41, REQ, 0, -1), rnode(GOUT, 31, 55, 40) },
  { pnode(HPS_DMA, 32, 41, SINGLE, 0, -1), rnode(GOUT, 31, 55, 39) },
  { pnode(HPS_DMA, 32, 41, REQ, 1, -1), rnode(GOUT, 31, 55, 38) },
  { pnode(HPS_DMA, 32, 41, SINGLE, 1, -1), rnode(GOUT, 31, 55, 37) },
  { pnode(HPS_DMA, 32, 41, REQ, 2, -1), rnode(GOUT, 31, 55, 36) },
  { pnode(HPS_DMA, 32, 41, SINGLE, 2, -1), rnode(GOUT, 31, 55, 35) },
  { pnode(HPS_DMA, 32, 41, REQ, 3, -1), rnode(GOUT, 31, 55, 34) },
  { pnode(HPS_DMA, 32, 41, SINGLE, 3, -1), rnode(GOUT, 31, 55, 33) },
  { pnode(HPS_DMA, 32, 41, REQ, 4, -1), rnode(GOUT, 31, 55, 32) },
  { pnode(HPS_DMA, 32, 41, SINGLE, 4, -1), rnode(GOUT, 31, 55, 31) },
  { pnode(HPS_DMA, 32, 41, REQ, 5, -1), rnode(GOUT, 31, 55, 30) },
  { pnode(HPS_DMA, 32, 41, SINGLE, 5, -1), rnode(GOUT, 31, 55, 29) },
  { pnode(HPS_DMA, 32, 41, REQ, 6, -1), rnode(GOUT, 31, 55, 28) },
  { pnode(HPS_DMA, 32, 41, SINGLE, 6, -1), rnode(GOUT, 31, 55, 27) },
  { pnode(HPS_DMA, 32, 41, REQ, 7, -1), rnode(GOUT, 31, 55, 26) },
  { pnode(HPS_DMA, 32, 41, SINGLE, 7, -1), rnode(GOUT, 31, 55, 25) },
  { pnode(HPS_DMA, 32, 41, ACK, 0, -1), rnode(GIN, 31, 55, 32) },
  { pnode(HPS_DMA, 32, 41, ACK, 1, -1), rnode(GIN, 31, 55, 31) },
  { pnode(HPS_DMA, 32, 41, ACK, 2, -1), rnode(GIN, 31, 55, 30) },
  { pnode(HPS_DMA, 32, 41, ACK, 3, -1), rnode(GIN, 31, 55, 29) },
  { pnode(HPS_DMA, 32, 41, ACK, 4, -1), rnode(GIN, 31, 55, 28) },
  { pnode(HPS_DMA, 32, 41, ACK, 5, -1), rnode(GIN, 31, 55, 27) },
  { pnode(HPS_DMA, 32, 41, ACK, 6, -1), rnode(GIN, 31, 55, 26) },
  { pnode(HPS_DMA, 32, 41, ACK, 7, -1), rnode(GIN, 31, 55, 25) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 0), rnode(GOUT, 31, 28, 36) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 1), rnode(GOUT, 31, 28, 25) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 2), rnode(GOUT, 31, 28, 14) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 3), rnode(GOUT, 31, 28, 11) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 4), rnode(GOUT, 31, 28, 10) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 5), rnode(GOUT, 31, 28, 9) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 6), rnode(GOUT, 31, 28, 8) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 7), rnode(GOUT, 31, 28, 7) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 8), rnode(GOUT, 31, 28, 6) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 9), rnode(GOUT, 31, 28, 5) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 10), rnode(GOUT, 31, 28, 35) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 11), rnode(GOUT, 31, 28, 34) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 12), rnode(GOUT, 31, 28, 33) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 13), rnode(GOUT, 31, 28, 32) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 14), rnode(GOUT, 31, 28, 31) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 15), rnode(GOUT, 31, 28, 30) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 16), rnode(GOUT, 31, 28, 29) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 17), rnode(GOUT, 31, 28, 28) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 18), rnode(GOUT, 31, 28, 27) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 19), rnode(GOUT, 31, 28, 26) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 20), rnode(GOUT, 31, 28, 24) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 21), rnode(GOUT, 31, 28, 23) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 22), rnode(GOUT, 31, 28, 22) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 23), rnode(GOUT, 31, 28, 21) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 24), rnode(GOUT, 31, 28, 20) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 25), rnode(GOUT, 31, 28, 19) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 26), rnode(GOUT, 31, 28, 18) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 27), rnode(GOUT, 31, 28, 17) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 28), rnode(GOUT, 31, 28, 16) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 29), rnode(GOUT, 31, 28, 15) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 30), rnode(GOUT, 31, 28, 13) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARADDR, -1, 31), rnode(GOUT, 31, 28, 12) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARBURST, -1, 0), rnode(GOUT, 31, 28, 4) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARBURST, -1, 1), rnode(GOUT, 31, 28, 3) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARCACHE, -1, 0), rnode(GOUT, 31, 28, 2) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARCACHE, -1, 1), rnode(GOUT, 31, 28, 1) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARCACHE, -1, 2), rnode(GOUT, 31, 28, 0) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARCACHE, -1, 3), rnode(GOUT, 31, 27, 51) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARID, -1, 0), rnode(GOUT, 31, 27, 50) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARID, -1, 1), rnode(GOUT, 31, 27, 49) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARID, -1, 2), rnode(GOUT, 31, 27, 48) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARID, -1, 3), rnode(GOUT, 31, 27, 47) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARID, -1, 4), rnode(GOUT, 31, 27, 46) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARID, -1, 5), rnode(GOUT, 31, 27, 45) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARID, -1, 6), rnode(GOUT, 31, 27, 44) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARID, -1, 7), rnode(GOUT, 31, 27, 43) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARLEN, -1, 0), rnode(GOUT, 31, 27, 42) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARLEN, -1, 1), rnode(GOUT, 31, 27, 41) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARLEN, -1, 2), rnode(GOUT, 31, 27, 40) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARLEN, -1, 3), rnode(GOUT, 31, 27, 39) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARLOCK, -1, 0), rnode(GOUT, 31, 27, 38) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARLOCK, -1, 1), rnode(GOUT, 31, 27, 37) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARPROT, -1, 0), rnode(GOUT, 31, 27, 36) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARPROT, -1, 1), rnode(GOUT, 31, 27, 35) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARPROT, -1, 2), rnode(GOUT, 31, 27, 34) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARSIZE, -1, 0), rnode(GOUT, 31, 27, 33) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARSIZE, -1, 1), rnode(GOUT, 31, 27, 32) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARSIZE, -1, 2), rnode(GOUT, 31, 27, 31) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARUSER, -1, 0), rnode(GOUT, 31, 27, 30) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARUSER, -1, 1), rnode(GOUT, 31, 27, 29) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARUSER, -1, 2), rnode(GOUT, 31, 27, 28) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARUSER, -1, 3), rnode(GOUT, 31, 27, 27) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARUSER, -1, 4), rnode(GOUT, 31, 27, 26) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARVALID, -1, -1), rnode(GOUT, 31, 27, 25) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 0), rnode(GOUT, 31, 27, 24) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 1), rnode(GOUT, 31, 27, 13) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 2), rnode(GOUT, 31, 27, 2) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 3), rnode(GOUT, 31, 26, 51) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 4), rnode(GOUT, 31, 26, 50) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 5), rnode(GOUT, 31, 26, 49) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 6), rnode(GOUT, 31, 26, 48) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 7), rnode(GOUT, 31, 26, 47) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 8), rnode(GOUT, 31, 26, 46) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 9), rnode(GOUT, 31, 26, 45) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 10), rnode(GOUT, 31, 27, 23) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 11), rnode(GOUT, 31, 27, 22) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 12), rnode(GOUT, 31, 27, 21) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 13), rnode(GOUT, 31, 27, 20) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 14), rnode(GOUT, 31, 27, 19) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 15), rnode(GOUT, 31, 27, 18) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 16), rnode(GOUT, 31, 27, 17) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 17), rnode(GOUT, 31, 27, 16) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 18), rnode(GOUT, 31, 27, 15) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 19), rnode(GOUT, 31, 27, 14) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 20), rnode(GOUT, 31, 27, 12) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 21), rnode(GOUT, 31, 27, 11) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 22), rnode(GOUT, 31, 27, 10) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 23), rnode(GOUT, 31, 27, 9) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 24), rnode(GOUT, 31, 27, 8) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 25), rnode(GOUT, 31, 27, 7) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 26), rnode(GOUT, 31, 27, 6) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 27), rnode(GOUT, 31, 27, 5) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 28), rnode(GOUT, 31, 27, 4) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 29), rnode(GOUT, 31, 27, 3) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 30), rnode(GOUT, 31, 27, 1) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWADDR, -1, 31), rnode(GOUT, 31, 27, 0) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWBURST, -1, 0), rnode(GOUT, 31, 26, 44) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWBURST, -1, 1), rnode(GOUT, 31, 26, 43) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWCACHE, -1, 0), rnode(GOUT, 31, 26, 42) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWCACHE, -1, 1), rnode(GOUT, 31, 26, 41) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWCACHE, -1, 2), rnode(GOUT, 31, 26, 40) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWCACHE, -1, 3), rnode(GOUT, 31, 26, 39) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWID, -1, 0), rnode(GOUT, 31, 26, 38) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWID, -1, 1), rnode(GOUT, 31, 26, 37) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWID, -1, 2), rnode(GOUT, 31, 26, 36) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWID, -1, 3), rnode(GOUT, 31, 26, 35) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWID, -1, 4), rnode(GOUT, 31, 26, 34) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWID, -1, 5), rnode(GOUT, 31, 26, 33) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWID, -1, 6), rnode(GOUT, 31, 26, 32) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWID, -1, 7), rnode(GOUT, 31, 26, 31) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWLEN, -1, 0), rnode(GOUT, 31, 26, 30) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWLEN, -1, 1), rnode(GOUT, 31, 26, 29) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWLEN, -1, 2), rnode(GOUT, 31, 26, 28) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWLEN, -1, 3), rnode(GOUT, 31, 26, 27) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWLOCK, -1, 0), rnode(GOUT, 31, 26, 26) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWLOCK, -1, 1), rnode(GOUT, 31, 26, 25) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWPROT, -1, 0), rnode(GOUT, 31, 26, 24) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWPROT, -1, 1), rnode(GOUT, 31, 26, 23) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWPROT, -1, 2), rnode(GOUT, 31, 26, 22) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWSIZE, -1, 0), rnode(GOUT, 31, 26, 21) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWSIZE, -1, 1), rnode(GOUT, 31, 26, 20) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWSIZE, -1, 2), rnode(GOUT, 31, 26, 19) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWUSER, -1, 0), rnode(GOUT, 31, 26, 18) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWUSER, -1, 1), rnode(GOUT, 31, 26, 17) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWUSER, -1, 2), rnode(GOUT, 31, 26, 16) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWUSER, -1, 3), rnode(GOUT, 31, 26, 15) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWUSER, -1, 4), rnode(GOUT, 31, 26, 14) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWVALID, -1, -1), rnode(GOUT, 31, 26, 13) },
  { pnode(HPS_FPGA2HPS, 32, 23, BREADY, -1, -1), rnode(GOUT, 31, 26, 12) },
  { pnode(HPS_FPGA2HPS, 32, 23, CLK, -1, -1), rnode(DCMUX, 31, 27, 2) },
  { pnode(HPS_FPGA2HPS, 32, 23, PORT_SIZE_CONFIG, -1, 0), rnode(GOUT, 31, 23, 12) },
  { pnode(HPS_FPGA2HPS, 32, 23, PORT_SIZE_CONFIG, -1, 1), rnode(GOUT, 31, 23, 11) },
  { pnode(HPS_FPGA2HPS, 32, 23, RREADY, -1, -1), rnode(GOUT, 31, 26, 11) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 0), rnode(GOUT, 31, 26, 10) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 1), rnode(GOUT, 31, 25, 23) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 2), rnode(GOUT, 31, 25, 12) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 3), rnode(GOUT, 31, 25, 1) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 4), rnode(GOUT, 31, 24, 42) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 5), rnode(GOUT, 31, 24, 31) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 6), rnode(GOUT, 31, 24, 20) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 7), rnode(GOUT, 31, 24, 9) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 8), rnode(GOUT, 31, 23, 50) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 9), rnode(GOUT, 31, 23, 39) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 10), rnode(GOUT, 31, 25, 51) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 11), rnode(GOUT, 31, 25, 40) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 12), rnode(GOUT, 31, 25, 31) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 13), rnode(GOUT, 31, 25, 30) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 14), rnode(GOUT, 31, 25, 29) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 15), rnode(GOUT, 31, 25, 28) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 16), rnode(GOUT, 31, 25, 27) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 17), rnode(GOUT, 31, 25, 26) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 18), rnode(GOUT, 31, 25, 25) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 19), rnode(GOUT, 31, 25, 24) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 20), rnode(GOUT, 31, 25, 22) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 21), rnode(GOUT, 31, 25, 21) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 22), rnode(GOUT, 31, 25, 20) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 23), rnode(GOUT, 31, 25, 19) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 24), rnode(GOUT, 31, 25, 18) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 25), rnode(GOUT, 31, 25, 17) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 26), rnode(GOUT, 31, 25, 16) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 27), rnode(GOUT, 31, 25, 15) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 28), rnode(GOUT, 31, 25, 14) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 29), rnode(GOUT, 31, 25, 13) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 30), rnode(GOUT, 31, 25, 11) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 31), rnode(GOUT, 31, 25, 10) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 32), rnode(GOUT, 31, 25, 9) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 33), rnode(GOUT, 31, 25, 8) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 34), rnode(GOUT, 31, 25, 7) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 35), rnode(GOUT, 31, 25, 6) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 36), rnode(GOUT, 31, 25, 5) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 37), rnode(GOUT, 31, 25, 4) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 38), rnode(GOUT, 31, 25, 3) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 39), rnode(GOUT, 31, 25, 2) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 40), rnode(GOUT, 31, 25, 0) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 41), rnode(GOUT, 31, 24, 51) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 42), rnode(GOUT, 31, 24, 50) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 43), rnode(GOUT, 31, 24, 49) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 44), rnode(GOUT, 31, 24, 48) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 45), rnode(GOUT, 31, 24, 47) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 46), rnode(GOUT, 31, 24, 46) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 47), rnode(GOUT, 31, 24, 45) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 48), rnode(GOUT, 31, 24, 44) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 49), rnode(GOUT, 31, 24, 43) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 50), rnode(GOUT, 31, 24, 41) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 51), rnode(GOUT, 31, 24, 40) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 52), rnode(GOUT, 31, 24, 39) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 53), rnode(GOUT, 31, 24, 38) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 54), rnode(GOUT, 31, 24, 37) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 55), rnode(GOUT, 31, 24, 36) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 56), rnode(GOUT, 31, 24, 35) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 57), rnode(GOUT, 31, 24, 34) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 58), rnode(GOUT, 31, 24, 33) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 59), rnode(GOUT, 31, 24, 32) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 60), rnode(GOUT, 31, 24, 30) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 61), rnode(GOUT, 31, 24, 29) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 62), rnode(GOUT, 31, 24, 28) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 63), rnode(GOUT, 31, 24, 27) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 64), rnode(GOUT, 31, 24, 26) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 65), rnode(GOUT, 31, 24, 25) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 66), rnode(GOUT, 31, 24, 24) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 67), rnode(GOUT, 31, 24, 23) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 68), rnode(GOUT, 31, 24, 22) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 69), rnode(GOUT, 31, 24, 21) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 70), rnode(GOUT, 31, 24, 19) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 71), rnode(GOUT, 31, 24, 18) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 72), rnode(GOUT, 31, 24, 17) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 73), rnode(GOUT, 31, 24, 16) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 74), rnode(GOUT, 31, 24, 15) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 75), rnode(GOUT, 31, 24, 14) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 76), rnode(GOUT, 31, 24, 13) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 77), rnode(GOUT, 31, 24, 12) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 78), rnode(GOUT, 31, 24, 11) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 79), rnode(GOUT, 31, 24, 10) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 80), rnode(GOUT, 31, 24, 8) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 81), rnode(GOUT, 31, 24, 7) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 82), rnode(GOUT, 31, 24, 6) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 83), rnode(GOUT, 31, 24, 5) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 84), rnode(GOUT, 31, 24, 4) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 85), rnode(GOUT, 31, 24, 3) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 86), rnode(GOUT, 31, 24, 2) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 87), rnode(GOUT, 31, 24, 1) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 88), rnode(GOUT, 31, 24, 0) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 89), rnode(GOUT, 31, 23, 51) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 90), rnode(GOUT, 31, 23, 49) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 91), rnode(GOUT, 31, 23, 48) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 92), rnode(GOUT, 31, 23, 47) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 93), rnode(GOUT, 31, 23, 46) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 94), rnode(GOUT, 31, 23, 45) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 95), rnode(GOUT, 31, 23, 44) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 96), rnode(GOUT, 31, 23, 43) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 97), rnode(GOUT, 31, 23, 42) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 98), rnode(GOUT, 31, 23, 41) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 99), rnode(GOUT, 31, 23, 40) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 100), rnode(GOUT, 31, 26, 9) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 101), rnode(GOUT, 31, 26, 8) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 102), rnode(GOUT, 31, 26, 7) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 103), rnode(GOUT, 31, 26, 6) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 104), rnode(GOUT, 31, 26, 5) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 105), rnode(GOUT, 31, 26, 4) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 106), rnode(GOUT, 31, 26, 3) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 107), rnode(GOUT, 31, 26, 2) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 108), rnode(GOUT, 31, 26, 1) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 109), rnode(GOUT, 31, 26, 0) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 110), rnode(GOUT, 31, 25, 50) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 111), rnode(GOUT, 31, 25, 49) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 112), rnode(GOUT, 31, 25, 48) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 113), rnode(GOUT, 31, 25, 47) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 114), rnode(GOUT, 31, 25, 46) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 115), rnode(GOUT, 31, 25, 45) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 116), rnode(GOUT, 31, 25, 44) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 117), rnode(GOUT, 31, 25, 43) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 118), rnode(GOUT, 31, 25, 42) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 119), rnode(GOUT, 31, 25, 41) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 120), rnode(GOUT, 31, 25, 39) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 121), rnode(GOUT, 31, 25, 38) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 122), rnode(GOUT, 31, 25, 37) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 123), rnode(GOUT, 31, 25, 36) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 124), rnode(GOUT, 31, 25, 35) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 125), rnode(GOUT, 31, 25, 34) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 126), rnode(GOUT, 31, 25, 33) },
  { pnode(HPS_FPGA2HPS, 32, 23, WDATA, -1, 127), rnode(GOUT, 31, 25, 32) },
  { pnode(HPS_FPGA2HPS, 32, 23, WID, -1, 0), rnode(GOUT, 31, 23, 38) },
  { pnode(HPS_FPGA2HPS, 32, 23, WID, -1, 1), rnode(GOUT, 31, 23, 37) },
  { pnode(HPS_FPGA2HPS, 32, 23, WID, -1, 2), rnode(GOUT, 31, 23, 36) },
  { pnode(HPS_FPGA2HPS, 32, 23, WID, -1, 3), rnode(GOUT, 31, 23, 35) },
  { pnode(HPS_FPGA2HPS, 32, 23, WID, -1, 4), rnode(GOUT, 31, 23, 34) },
  { pnode(HPS_FPGA2HPS, 32, 23, WID, -1, 5), rnode(GOUT, 31, 23, 33) },
  { pnode(HPS_FPGA2HPS, 32, 23, WID, -1, 6), rnode(GOUT, 31, 23, 32) },
  { pnode(HPS_FPGA2HPS, 32, 23, WID, -1, 7), rnode(GOUT, 31, 23, 31) },
  { pnode(HPS_FPGA2HPS, 32, 23, WLAST, -1, -1), rnode(GOUT, 31, 23, 30) },
  { pnode(HPS_FPGA2HPS, 32, 23, WSTRB, -1, 0), rnode(GOUT, 31, 23, 29) },
  { pnode(HPS_FPGA2HPS, 32, 23, WSTRB, -1, 1), rnode(GOUT, 31, 23, 22) },
  { pnode(HPS_FPGA2HPS, 32, 23, WSTRB, -1, 2), rnode(GOUT, 31, 23, 21) },
  { pnode(HPS_FPGA2HPS, 32, 23, WSTRB, -1, 3), rnode(GOUT, 31, 23, 20) },
  { pnode(HPS_FPGA2HPS, 32, 23, WSTRB, -1, 4), rnode(GOUT, 31, 23, 19) },
  { pnode(HPS_FPGA2HPS, 32, 23, WSTRB, -1, 5), rnode(GOUT, 31, 23, 18) },
  { pnode(HPS_FPGA2HPS, 32, 23, WSTRB, -1, 6), rnode(GOUT, 31, 23, 17) },
  { pnode(HPS_FPGA2HPS, 32, 23, WSTRB, -1, 7), rnode(GOUT, 31, 23, 16) },
  { pnode(HPS_FPGA2HPS, 32, 23, WSTRB, -1, 8), rnode(GOUT, 31, 23, 15) },
  { pnode(HPS_FPGA2HPS, 32, 23, WSTRB, -1, 9), rnode(GOUT, 31, 23, 14) },
  { pnode(HPS_FPGA2HPS, 32, 23, WSTRB, -1, 10), rnode(GOUT, 31, 23, 28) },
  { pnode(HPS_FPGA2HPS, 32, 23, WSTRB, -1, 11), rnode(GOUT, 31, 23, 27) },
  { pnode(HPS_FPGA2HPS, 32, 23, WSTRB, -1, 12), rnode(GOUT, 31, 23, 26) },
  { pnode(HPS_FPGA2HPS, 32, 23, WSTRB, -1, 13), rnode(GOUT, 31, 23, 25) },
  { pnode(HPS_FPGA2HPS, 32, 23, WSTRB, -1, 14), rnode(GOUT, 31, 23, 24) },
  { pnode(HPS_FPGA2HPS, 32, 23, WSTRB, -1, 15), rnode(GOUT, 31, 23, 23) },
  { pnode(HPS_FPGA2HPS, 32, 23, WVALID, -1, -1), rnode(GOUT, 31, 23, 13) },
  { pnode(HPS_FPGA2HPS, 32, 23, ARREADY, -1, -1), rnode(GIN, 31, 26, 40) },
  { pnode(HPS_FPGA2HPS, 32, 23, AWREADY, -1, -1), rnode(GIN, 31, 26, 39) },
  { pnode(HPS_FPGA2HPS, 32, 23, BID, -1, 0), rnode(GIN, 31, 26, 38) },
  { pnode(HPS_FPGA2HPS, 32, 23, BID, -1, 1), rnode(GIN, 31, 26, 37) },
  { pnode(HPS_FPGA2HPS, 32, 23, BID, -1, 2), rnode(GIN, 31, 26, 36) },
  { pnode(HPS_FPGA2HPS, 32, 23, BID, -1, 3), rnode(GIN, 31, 26, 35) },
  { pnode(HPS_FPGA2HPS, 32, 23, BID, -1, 4), rnode(GIN, 31, 26, 34) },
  { pnode(HPS_FPGA2HPS, 32, 23, BID, -1, 5), rnode(GIN, 31, 26, 33) },
  { pnode(HPS_FPGA2HPS, 32, 23, BID, -1, 6), rnode(GIN, 31, 26, 32) },
  { pnode(HPS_FPGA2HPS, 32, 23, BID, -1, 7), rnode(GIN, 31, 26, 31) },
  { pnode(HPS_FPGA2HPS, 32, 23, BRESP, -1, 0), rnode(GIN, 31, 26, 30) },
  { pnode(HPS_FPGA2HPS, 32, 23, BRESP, -1, 1), rnode(GIN, 31, 26, 29) },
  { pnode(HPS_FPGA2HPS, 32, 23, BVALID, -1, -1), rnode(GIN, 31, 26, 28) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 0), rnode(GIN, 31, 26, 27) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 1), rnode(GIN, 31, 25, 43) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 2), rnode(GIN, 31, 25, 32) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 3), rnode(GIN, 31, 25, 21) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 4), rnode(GIN, 31, 25, 10) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 5), rnode(GIN, 31, 24, 54) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 6), rnode(GIN, 31, 24, 43) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 7), rnode(GIN, 31, 24, 32) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 8), rnode(GIN, 31, 24, 21) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 9), rnode(GIN, 31, 24, 10) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 10), rnode(GIN, 31, 26, 16) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 11), rnode(GIN, 31, 26, 5) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 12), rnode(GIN, 31, 25, 51) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 13), rnode(GIN, 31, 25, 50) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 14), rnode(GIN, 31, 25, 49) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 15), rnode(GIN, 31, 25, 48) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 16), rnode(GIN, 31, 25, 47) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 17), rnode(GIN, 31, 25, 46) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 18), rnode(GIN, 31, 25, 45) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 19), rnode(GIN, 31, 25, 44) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 20), rnode(GIN, 31, 25, 42) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 21), rnode(GIN, 31, 25, 41) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 22), rnode(GIN, 31, 25, 40) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 23), rnode(GIN, 31, 25, 39) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 24), rnode(GIN, 31, 25, 38) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 25), rnode(GIN, 31, 25, 37) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 26), rnode(GIN, 31, 25, 36) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 27), rnode(GIN, 31, 25, 35) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 28), rnode(GIN, 31, 25, 34) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 29), rnode(GIN, 31, 25, 33) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 30), rnode(GIN, 31, 25, 31) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 31), rnode(GIN, 31, 25, 30) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 32), rnode(GIN, 31, 25, 29) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 33), rnode(GIN, 31, 25, 28) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 34), rnode(GIN, 31, 25, 27) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 35), rnode(GIN, 31, 25, 26) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 36), rnode(GIN, 31, 25, 25) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 37), rnode(GIN, 31, 25, 24) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 38), rnode(GIN, 31, 25, 23) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 39), rnode(GIN, 31, 25, 22) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 40), rnode(GIN, 31, 25, 20) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 41), rnode(GIN, 31, 25, 19) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 42), rnode(GIN, 31, 25, 18) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 43), rnode(GIN, 31, 25, 17) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 44), rnode(GIN, 31, 25, 16) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 45), rnode(GIN, 31, 25, 15) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 46), rnode(GIN, 31, 25, 14) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 47), rnode(GIN, 31, 25, 13) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 48), rnode(GIN, 31, 25, 12) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 49), rnode(GIN, 31, 25, 11) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 50), rnode(GIN, 31, 25, 9) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 51), rnode(GIN, 31, 25, 8) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 52), rnode(GIN, 31, 25, 7) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 53), rnode(GIN, 31, 25, 6) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 54), rnode(GIN, 31, 25, 5) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 55), rnode(GIN, 31, 25, 4) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 56), rnode(GIN, 31, 25, 3) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 57), rnode(GIN, 31, 25, 2) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 58), rnode(GIN, 31, 25, 1) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 59), rnode(GIN, 31, 25, 0) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 60), rnode(GIN, 31, 24, 53) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 61), rnode(GIN, 31, 24, 52) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 62), rnode(GIN, 31, 24, 51) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 63), rnode(GIN, 31, 24, 50) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 64), rnode(GIN, 31, 24, 49) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 65), rnode(GIN, 31, 24, 48) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 66), rnode(GIN, 31, 24, 47) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 67), rnode(GIN, 31, 24, 46) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 68), rnode(GIN, 31, 24, 45) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 69), rnode(GIN, 31, 24, 44) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 70), rnode(GIN, 31, 24, 42) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 71), rnode(GIN, 31, 24, 41) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 72), rnode(GIN, 31, 24, 40) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 73), rnode(GIN, 31, 24, 39) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 74), rnode(GIN, 31, 24, 38) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 75), rnode(GIN, 31, 24, 37) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 76), rnode(GIN, 31, 24, 36) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 77), rnode(GIN, 31, 24, 35) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 78), rnode(GIN, 31, 24, 34) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 79), rnode(GIN, 31, 24, 33) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 80), rnode(GIN, 31, 24, 31) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 81), rnode(GIN, 31, 24, 30) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 82), rnode(GIN, 31, 24, 29) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 83), rnode(GIN, 31, 24, 28) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 84), rnode(GIN, 31, 24, 27) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 85), rnode(GIN, 31, 24, 26) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 86), rnode(GIN, 31, 24, 25) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 87), rnode(GIN, 31, 24, 24) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 88), rnode(GIN, 31, 24, 23) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 89), rnode(GIN, 31, 24, 22) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 90), rnode(GIN, 31, 24, 20) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 91), rnode(GIN, 31, 24, 19) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 92), rnode(GIN, 31, 24, 18) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 93), rnode(GIN, 31, 24, 17) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 94), rnode(GIN, 31, 24, 16) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 95), rnode(GIN, 31, 24, 15) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 96), rnode(GIN, 31, 24, 14) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 97), rnode(GIN, 31, 24, 13) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 98), rnode(GIN, 31, 24, 12) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 99), rnode(GIN, 31, 24, 11) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 100), rnode(GIN, 31, 26, 26) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 101), rnode(GIN, 31, 26, 25) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 102), rnode(GIN, 31, 26, 24) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 103), rnode(GIN, 31, 26, 23) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 104), rnode(GIN, 31, 26, 22) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 105), rnode(GIN, 31, 26, 21) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 106), rnode(GIN, 31, 26, 20) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 107), rnode(GIN, 31, 26, 19) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 108), rnode(GIN, 31, 26, 18) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 109), rnode(GIN, 31, 26, 17) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 110), rnode(GIN, 31, 26, 15) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 111), rnode(GIN, 31, 26, 14) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 112), rnode(GIN, 31, 26, 13) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 113), rnode(GIN, 31, 26, 12) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 114), rnode(GIN, 31, 26, 11) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 115), rnode(GIN, 31, 26, 10) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 116), rnode(GIN, 31, 26, 9) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 117), rnode(GIN, 31, 26, 8) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 118), rnode(GIN, 31, 26, 7) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 119), rnode(GIN, 31, 26, 6) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 120), rnode(GIN, 31, 26, 4) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 121), rnode(GIN, 31, 26, 3) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 122), rnode(GIN, 31, 26, 2) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 123), rnode(GIN, 31, 26, 1) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 124), rnode(GIN, 31, 26, 0) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 125), rnode(GIN, 31, 25, 54) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 126), rnode(GIN, 31, 25, 53) },
  { pnode(HPS_FPGA2HPS, 32, 23, RDATA, -1, 127), rnode(GIN, 31, 25, 52) },
  { pnode(HPS_FPGA2HPS, 32, 23, RID, -1, 0), rnode(GIN, 31, 24, 9) },
  { pnode(HPS_FPGA2HPS, 32, 23, RID, -1, 1), rnode(GIN, 31, 24, 8) },
  { pnode(HPS_FPGA2HPS, 32, 23, RID, -1, 2), rnode(GIN, 31, 24, 7) },
  { pnode(HPS_FPGA2HPS, 32, 23, RID, -1, 3), rnode(GIN, 31, 24, 6) },
  { pnode(HPS_FPGA2HPS, 32, 23, RID, -1, 4), rnode(GIN, 31, 24, 5) },
  { pnode(HPS_FPGA2HPS, 32, 23, RID, -1, 5), rnode(GIN, 31, 24, 4) },
  { pnode(HPS_FPGA2HPS, 32, 23, RID, -1, 6), rnode(GIN, 31, 24, 3) },
  { pnode(HPS_FPGA2HPS, 32, 23, RID, -1, 7), rnode(GIN, 31, 24, 2) },
  { pnode(HPS_FPGA2HPS, 32, 23, RLAST, -1, -1), rnode(GIN, 31, 24, 1) },
  { pnode(HPS_FPGA2HPS, 32, 23, RRESP, -1, 0), rnode(GIN, 31, 24, 0) },
  { pnode(HPS_FPGA2HPS, 32, 23, RRESP, -1, 1), rnode(GIN, 31, 23, 53) },
  { pnode(HPS_FPGA2HPS, 32, 23, RVALID, -1, -1), rnode(GIN, 31, 23, 52) },
  { pnode(HPS_FPGA2HPS, 32, 23, WREADY, -1, -1), rnode(GIN, 31, 23, 51) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_AXI_MM_SELECT, -1, 0), rnode(GOUT, 31, 42, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_AXI_MM_SELECT, -1, 1), rnode(GOUT, 31, 42, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_AXI_MM_SELECT, -1, 2), rnode(GOUT, 31, 42, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_AXI_MM_SELECT, -1, 3), rnode(GOUT, 31, 42, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_AXI_MM_SELECT, -1, 4), rnode(GOUT, 31, 42, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_AXI_MM_SELECT, -1, 5), rnode(GOUT, 31, 42, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_RFIFO_MAP, -1, 0), rnode(GOUT, 31, 41, 53) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_RFIFO_MAP, -1, 1), rnode(GOUT, 31, 41, 44) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_RFIFO_MAP, -1, 2), rnode(GOUT, 31, 41, 43) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_RFIFO_MAP, -1, 3), rnode(GOUT, 31, 41, 42) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_RFIFO_MAP, -1, 4), rnode(GOUT, 31, 41, 41) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_RFIFO_MAP, -1, 5), rnode(GOUT, 31, 41, 40) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_RFIFO_MAP, -1, 6), rnode(GOUT, 31, 41, 39) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_RFIFO_MAP, -1, 7), rnode(GOUT, 31, 41, 38) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_RFIFO_MAP, -1, 8), rnode(GOUT, 31, 41, 37) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_RFIFO_MAP, -1, 9), rnode(GOUT, 31, 41, 36) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_RFIFO_MAP, -1, 10), rnode(GOUT, 31, 41, 52) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_RFIFO_MAP, -1, 11), rnode(GOUT, 31, 41, 51) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_RFIFO_MAP, -1, 12), rnode(GOUT, 31, 41, 50) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_RFIFO_MAP, -1, 13), rnode(GOUT, 31, 41, 49) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_RFIFO_MAP, -1, 14), rnode(GOUT, 31, 41, 48) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_RFIFO_MAP, -1, 15), rnode(GOUT, 31, 41, 47) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_RFIFO_MAP, -1, 16), rnode(GOUT, 31, 41, 46) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_RFIFO_MAP, -1, 17), rnode(GOUT, 31, 41, 45) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_TYPE, -1, 0), rnode(GOUT, 31, 41, 35) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_TYPE, -1, 1), rnode(GOUT, 31, 41, 32) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_TYPE, -1, 2), rnode(GOUT, 31, 41, 31) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_TYPE, -1, 3), rnode(GOUT, 31, 41, 30) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_TYPE, -1, 4), rnode(GOUT, 31, 41, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_TYPE, -1, 5), rnode(GOUT, 31, 41, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_TYPE, -1, 6), rnode(GOUT, 31, 41, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_TYPE, -1, 7), rnode(GOUT, 31, 41, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_TYPE, -1, 8), rnode(GOUT, 31, 41, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_TYPE, -1, 9), rnode(GOUT, 31, 41, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_TYPE, -1, 10), rnode(GOUT, 31, 41, 34) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_TYPE, -1, 11), rnode(GOUT, 31, 41, 33) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_WFIFO_MAP, -1, 0), rnode(GOUT, 31, 41, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_WFIFO_MAP, -1, 1), rnode(GOUT, 31, 41, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_WFIFO_MAP, -1, 2), rnode(GOUT, 31, 41, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_WFIFO_MAP, -1, 3), rnode(GOUT, 31, 41, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_WFIFO_MAP, -1, 4), rnode(GOUT, 31, 41, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_WFIFO_MAP, -1, 5), rnode(GOUT, 31, 41, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_WFIFO_MAP, -1, 6), rnode(GOUT, 31, 41, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_WFIFO_MAP, -1, 7), rnode(GOUT, 31, 41, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_WFIFO_MAP, -1, 8), rnode(GOUT, 31, 41, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_WFIFO_MAP, -1, 9), rnode(GOUT, 31, 41, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_WFIFO_MAP, -1, 10), rnode(GOUT, 31, 41, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_WFIFO_MAP, -1, 11), rnode(GOUT, 31, 41, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_WFIFO_MAP, -1, 12), rnode(GOUT, 31, 41, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_WFIFO_MAP, -1, 13), rnode(GOUT, 31, 41, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_WFIFO_MAP, -1, 14), rnode(GOUT, 31, 41, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_WFIFO_MAP, -1, 15), rnode(GOUT, 31, 41, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_WFIFO_MAP, -1, 16), rnode(GOUT, 31, 41, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_CPORT_WFIFO_MAP, -1, 17), rnode(GOUT, 31, 41, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_PORT_WIDTH, -1, 0), rnode(GOUT, 31, 41, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_PORT_WIDTH, -1, 1), rnode(GOUT, 31, 41, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_PORT_WIDTH, -1, 2), rnode(GOUT, 31, 41, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_PORT_WIDTH, -1, 3), rnode(GOUT, 31, 41, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_PORT_WIDTH, -1, 4), rnode(GOUT, 31, 40, 53) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_PORT_WIDTH, -1, 5), rnode(GOUT, 31, 40, 52) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_PORT_WIDTH, -1, 6), rnode(GOUT, 31, 40, 51) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_PORT_WIDTH, -1, 7), rnode(GOUT, 31, 40, 50) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_PORT_WIDTH, -1, 8), rnode(GOUT, 31, 40, 49) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_PORT_WIDTH, -1, 9), rnode(GOUT, 31, 40, 48) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_PORT_WIDTH, -1, 10), rnode(GOUT, 31, 41, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_PORT_WIDTH, -1, 11), rnode(GOUT, 31, 41, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_RFIFO_CPORT_MAP, -1, 0), rnode(GOUT, 31, 40, 47) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_RFIFO_CPORT_MAP, -1, 1), rnode(GOUT, 31, 40, 40) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_RFIFO_CPORT_MAP, -1, 2), rnode(GOUT, 31, 40, 39) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_RFIFO_CPORT_MAP, -1, 3), rnode(GOUT, 31, 40, 38) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_RFIFO_CPORT_MAP, -1, 4), rnode(GOUT, 31, 40, 37) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_RFIFO_CPORT_MAP, -1, 5), rnode(GOUT, 31, 40, 36) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_RFIFO_CPORT_MAP, -1, 6), rnode(GOUT, 31, 40, 35) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_RFIFO_CPORT_MAP, -1, 7), rnode(GOUT, 31, 40, 34) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_RFIFO_CPORT_MAP, -1, 8), rnode(GOUT, 31, 40, 33) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_RFIFO_CPORT_MAP, -1, 9), rnode(GOUT, 31, 40, 32) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_RFIFO_CPORT_MAP, -1, 10), rnode(GOUT, 31, 40, 46) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_RFIFO_CPORT_MAP, -1, 11), rnode(GOUT, 31, 40, 45) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_RFIFO_CPORT_MAP, -1, 12), rnode(GOUT, 31, 40, 44) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_RFIFO_CPORT_MAP, -1, 13), rnode(GOUT, 31, 40, 43) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_RFIFO_CPORT_MAP, -1, 14), rnode(GOUT, 31, 40, 42) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_RFIFO_CPORT_MAP, -1, 15), rnode(GOUT, 31, 40, 41) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_WFIFO_CPORT_MAP, -1, 0), rnode(GOUT, 31, 40, 31) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_WFIFO_CPORT_MAP, -1, 1), rnode(GOUT, 31, 40, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_WFIFO_CPORT_MAP, -1, 2), rnode(GOUT, 31, 40, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_WFIFO_CPORT_MAP, -1, 3), rnode(GOUT, 31, 40, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_WFIFO_CPORT_MAP, -1, 4), rnode(GOUT, 31, 40, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_WFIFO_CPORT_MAP, -1, 5), rnode(GOUT, 31, 40, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_WFIFO_CPORT_MAP, -1, 6), rnode(GOUT, 31, 40, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_WFIFO_CPORT_MAP, -1, 7), rnode(GOUT, 31, 40, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_WFIFO_CPORT_MAP, -1, 8), rnode(GOUT, 31, 40, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_WFIFO_CPORT_MAP, -1, 9), rnode(GOUT, 31, 40, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_WFIFO_CPORT_MAP, -1, 10), rnode(GOUT, 31, 40, 30) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_WFIFO_CPORT_MAP, -1, 11), rnode(GOUT, 31, 40, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_WFIFO_CPORT_MAP, -1, 12), rnode(GOUT, 31, 40, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_WFIFO_CPORT_MAP, -1, 13), rnode(GOUT, 31, 40, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_WFIFO_CPORT_MAP, -1, 14), rnode(GOUT, 31, 40, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CFG_WFIFO_CPORT_MAP, -1, 15), rnode(GOUT, 31, 40, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 0), rnode(GOUT, 31, 40, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 1), rnode(GOUT, 31, 40, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 2), rnode(GOUT, 31, 39, 47) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 3), rnode(GOUT, 31, 39, 36) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 4), rnode(GOUT, 31, 39, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 5), rnode(GOUT, 31, 39, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 6), rnode(GOUT, 31, 39, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 7), rnode(GOUT, 31, 39, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 8), rnode(GOUT, 31, 39, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 9), rnode(GOUT, 31, 39, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 10), rnode(GOUT, 31, 40, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 11), rnode(GOUT, 31, 40, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 12), rnode(GOUT, 31, 40, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 13), rnode(GOUT, 31, 40, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 14), rnode(GOUT, 31, 40, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 15), rnode(GOUT, 31, 40, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 16), rnode(GOUT, 31, 40, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 17), rnode(GOUT, 31, 40, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 18), rnode(GOUT, 31, 40, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 19), rnode(GOUT, 31, 40, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 20), rnode(GOUT, 31, 40, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 21), rnode(GOUT, 31, 40, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 22), rnode(GOUT, 31, 40, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 23), rnode(GOUT, 31, 40, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 24), rnode(GOUT, 31, 39, 53) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 25), rnode(GOUT, 31, 39, 52) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 26), rnode(GOUT, 31, 39, 51) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 27), rnode(GOUT, 31, 39, 50) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 28), rnode(GOUT, 31, 39, 49) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 29), rnode(GOUT, 31, 39, 48) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 30), rnode(GOUT, 31, 39, 46) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 31), rnode(GOUT, 31, 39, 45) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 32), rnode(GOUT, 31, 39, 44) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 33), rnode(GOUT, 31, 39, 43) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 34), rnode(GOUT, 31, 39, 42) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 35), rnode(GOUT, 31, 39, 41) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 36), rnode(GOUT, 31, 39, 40) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 37), rnode(GOUT, 31, 39, 39) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 38), rnode(GOUT, 31, 39, 38) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 39), rnode(GOUT, 31, 39, 37) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 40), rnode(GOUT, 31, 39, 35) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 41), rnode(GOUT, 31, 39, 34) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 42), rnode(GOUT, 31, 39, 33) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 43), rnode(GOUT, 31, 39, 32) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 44), rnode(GOUT, 31, 39, 31) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 45), rnode(GOUT, 31, 39, 30) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 46), rnode(GOUT, 31, 39, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 47), rnode(GOUT, 31, 39, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 48), rnode(GOUT, 31, 39, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 49), rnode(GOUT, 31, 39, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 50), rnode(GOUT, 31, 39, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 51), rnode(GOUT, 31, 39, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 52), rnode(GOUT, 31, 39, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 53), rnode(GOUT, 31, 39, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 54), rnode(GOUT, 31, 39, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 55), rnode(GOUT, 31, 39, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 56), rnode(GOUT, 31, 39, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 57), rnode(GOUT, 31, 39, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 58), rnode(GOUT, 31, 39, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 0, 59), rnode(GOUT, 31, 39, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 0), rnode(GOUT, 31, 39, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 1), rnode(GOUT, 31, 38, 51) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 2), rnode(GOUT, 31, 38, 40) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 3), rnode(GOUT, 31, 38, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 4), rnode(GOUT, 31, 38, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 5), rnode(GOUT, 31, 38, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 6), rnode(GOUT, 31, 38, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 7), rnode(GOUT, 31, 38, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 8), rnode(GOUT, 31, 38, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 9), rnode(GOUT, 31, 38, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 10), rnode(GOUT, 31, 39, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 11), rnode(GOUT, 31, 39, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 12), rnode(GOUT, 31, 39, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 13), rnode(GOUT, 31, 39, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 14), rnode(GOUT, 31, 39, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 15), rnode(GOUT, 31, 39, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 16), rnode(GOUT, 31, 39, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 17), rnode(GOUT, 31, 39, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 18), rnode(GOUT, 31, 38, 53) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 19), rnode(GOUT, 31, 38, 52) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 20), rnode(GOUT, 31, 38, 50) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 21), rnode(GOUT, 31, 38, 49) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 22), rnode(GOUT, 31, 38, 48) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 23), rnode(GOUT, 31, 38, 47) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 24), rnode(GOUT, 31, 38, 46) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 25), rnode(GOUT, 31, 38, 45) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 26), rnode(GOUT, 31, 38, 44) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 27), rnode(GOUT, 31, 38, 43) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 28), rnode(GOUT, 31, 38, 42) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 29), rnode(GOUT, 31, 38, 41) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 30), rnode(GOUT, 31, 38, 39) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 31), rnode(GOUT, 31, 38, 38) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 32), rnode(GOUT, 31, 38, 37) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 33), rnode(GOUT, 31, 38, 36) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 34), rnode(GOUT, 31, 38, 35) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 35), rnode(GOUT, 31, 38, 34) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 36), rnode(GOUT, 31, 38, 33) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 37), rnode(GOUT, 31, 38, 32) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 38), rnode(GOUT, 31, 38, 31) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 39), rnode(GOUT, 31, 38, 30) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 40), rnode(GOUT, 31, 38, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 41), rnode(GOUT, 31, 38, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 42), rnode(GOUT, 31, 38, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 43), rnode(GOUT, 31, 38, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 44), rnode(GOUT, 31, 38, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 45), rnode(GOUT, 31, 38, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 46), rnode(GOUT, 31, 38, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 47), rnode(GOUT, 31, 38, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 48), rnode(GOUT, 31, 38, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 49), rnode(GOUT, 31, 38, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 50), rnode(GOUT, 31, 38, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 51), rnode(GOUT, 31, 38, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 52), rnode(GOUT, 31, 38, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 53), rnode(GOUT, 31, 38, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 54), rnode(GOUT, 31, 38, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 55), rnode(GOUT, 31, 38, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 56), rnode(GOUT, 31, 38, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 57), rnode(GOUT, 31, 38, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 58), rnode(GOUT, 31, 38, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 1, 59), rnode(GOUT, 31, 38, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 0), rnode(GOUT, 31, 38, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 1), rnode(GOUT, 31, 37, 44) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 2), rnode(GOUT, 31, 37, 33) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 3), rnode(GOUT, 31, 37, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 4), rnode(GOUT, 31, 37, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 5), rnode(GOUT, 31, 37, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 6), rnode(GOUT, 31, 36, 53) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 7), rnode(GOUT, 31, 36, 52) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 8), rnode(GOUT, 31, 36, 51) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 9), rnode(GOUT, 31, 36, 50) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 10), rnode(GOUT, 31, 38, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 11), rnode(GOUT, 31, 37, 53) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 12), rnode(GOUT, 31, 37, 52) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 13), rnode(GOUT, 31, 37, 51) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 14), rnode(GOUT, 31, 37, 50) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 15), rnode(GOUT, 31, 37, 49) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 16), rnode(GOUT, 31, 37, 48) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 17), rnode(GOUT, 31, 37, 47) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 18), rnode(GOUT, 31, 37, 46) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 19), rnode(GOUT, 31, 37, 45) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 20), rnode(GOUT, 31, 37, 43) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 21), rnode(GOUT, 31, 37, 42) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 22), rnode(GOUT, 31, 37, 41) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 23), rnode(GOUT, 31, 37, 40) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 24), rnode(GOUT, 31, 37, 39) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 25), rnode(GOUT, 31, 37, 38) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 26), rnode(GOUT, 31, 37, 37) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 27), rnode(GOUT, 31, 37, 36) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 28), rnode(GOUT, 31, 37, 35) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 29), rnode(GOUT, 31, 37, 34) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 30), rnode(GOUT, 31, 37, 32) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 31), rnode(GOUT, 31, 37, 31) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 32), rnode(GOUT, 31, 37, 30) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 33), rnode(GOUT, 31, 37, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 34), rnode(GOUT, 31, 37, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 35), rnode(GOUT, 31, 37, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 36), rnode(GOUT, 31, 37, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 37), rnode(GOUT, 31, 37, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 38), rnode(GOUT, 31, 37, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 39), rnode(GOUT, 31, 37, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 40), rnode(GOUT, 31, 37, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 41), rnode(GOUT, 31, 37, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 42), rnode(GOUT, 31, 37, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 43), rnode(GOUT, 31, 37, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 44), rnode(GOUT, 31, 37, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 45), rnode(GOUT, 31, 37, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 46), rnode(GOUT, 31, 37, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 47), rnode(GOUT, 31, 37, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 48), rnode(GOUT, 31, 37, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 49), rnode(GOUT, 31, 37, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 50), rnode(GOUT, 31, 37, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 51), rnode(GOUT, 31, 37, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 52), rnode(GOUT, 31, 37, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 53), rnode(GOUT, 31, 37, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 54), rnode(GOUT, 31, 37, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 55), rnode(GOUT, 31, 37, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 56), rnode(GOUT, 31, 37, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 57), rnode(GOUT, 31, 37, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 58), rnode(GOUT, 31, 37, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 2, 59), rnode(GOUT, 31, 37, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 0), rnode(GOUT, 31, 36, 48) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 1), rnode(GOUT, 31, 36, 37) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 2), rnode(GOUT, 31, 36, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 3), rnode(GOUT, 31, 36, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 4), rnode(GOUT, 31, 36, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 5), rnode(GOUT, 31, 35, 47) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 6), rnode(GOUT, 31, 35, 46) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 7), rnode(GOUT, 31, 35, 45) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 8), rnode(GOUT, 31, 35, 44) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 9), rnode(GOUT, 31, 35, 43) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 10), rnode(GOUT, 31, 36, 47) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 11), rnode(GOUT, 31, 36, 46) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 12), rnode(GOUT, 31, 36, 45) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 13), rnode(GOUT, 31, 36, 44) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 14), rnode(GOUT, 31, 36, 43) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 15), rnode(GOUT, 31, 36, 42) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 16), rnode(GOUT, 31, 36, 41) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 17), rnode(GOUT, 31, 36, 40) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 18), rnode(GOUT, 31, 36, 39) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 19), rnode(GOUT, 31, 36, 38) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 20), rnode(GOUT, 31, 36, 36) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 21), rnode(GOUT, 31, 36, 35) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 22), rnode(GOUT, 31, 36, 34) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 23), rnode(GOUT, 31, 36, 33) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 24), rnode(GOUT, 31, 36, 32) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 25), rnode(GOUT, 31, 36, 31) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 26), rnode(GOUT, 31, 36, 30) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 27), rnode(GOUT, 31, 36, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 28), rnode(GOUT, 31, 36, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 29), rnode(GOUT, 31, 36, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 30), rnode(GOUT, 31, 36, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 31), rnode(GOUT, 31, 36, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 32), rnode(GOUT, 31, 36, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 33), rnode(GOUT, 31, 36, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 34), rnode(GOUT, 31, 36, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 35), rnode(GOUT, 31, 36, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 36), rnode(GOUT, 31, 36, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 37), rnode(GOUT, 31, 36, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 38), rnode(GOUT, 31, 36, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 39), rnode(GOUT, 31, 36, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 40), rnode(GOUT, 31, 36, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 41), rnode(GOUT, 31, 36, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 42), rnode(GOUT, 31, 36, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 43), rnode(GOUT, 31, 36, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 44), rnode(GOUT, 31, 36, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 45), rnode(GOUT, 31, 36, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 46), rnode(GOUT, 31, 36, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 47), rnode(GOUT, 31, 36, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 48), rnode(GOUT, 31, 36, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 49), rnode(GOUT, 31, 36, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 50), rnode(GOUT, 31, 36, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 51), rnode(GOUT, 31, 36, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 52), rnode(GOUT, 31, 36, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 53), rnode(GOUT, 31, 36, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 54), rnode(GOUT, 31, 35, 53) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 55), rnode(GOUT, 31, 35, 52) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 56), rnode(GOUT, 31, 35, 51) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 57), rnode(GOUT, 31, 35, 50) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 58), rnode(GOUT, 31, 35, 49) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 3, 59), rnode(GOUT, 31, 35, 48) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 0), rnode(GOUT, 31, 35, 41) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 1), rnode(GOUT, 31, 35, 30) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 2), rnode(GOUT, 31, 35, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 3), rnode(GOUT, 31, 35, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 4), rnode(GOUT, 31, 34, 51) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 5), rnode(GOUT, 31, 34, 40) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 6), rnode(GOUT, 31, 34, 39) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 7), rnode(GOUT, 31, 34, 38) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 8), rnode(GOUT, 31, 34, 37) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 9), rnode(GOUT, 31, 34, 36) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 10), rnode(GOUT, 31, 35, 40) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 11), rnode(GOUT, 31, 35, 39) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 12), rnode(GOUT, 31, 35, 38) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 13), rnode(GOUT, 31, 35, 37) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 14), rnode(GOUT, 31, 35, 36) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 15), rnode(GOUT, 31, 35, 35) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 16), rnode(GOUT, 31, 35, 34) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 17), rnode(GOUT, 31, 35, 33) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 18), rnode(GOUT, 31, 35, 32) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 19), rnode(GOUT, 31, 35, 31) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 20), rnode(GOUT, 31, 35, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 21), rnode(GOUT, 31, 35, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 22), rnode(GOUT, 31, 35, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 23), rnode(GOUT, 31, 35, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 24), rnode(GOUT, 31, 35, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 25), rnode(GOUT, 31, 35, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 26), rnode(GOUT, 31, 35, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 27), rnode(GOUT, 31, 35, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 28), rnode(GOUT, 31, 35, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 29), rnode(GOUT, 31, 35, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 30), rnode(GOUT, 31, 35, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 31), rnode(GOUT, 31, 35, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 32), rnode(GOUT, 31, 35, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 33), rnode(GOUT, 31, 35, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 34), rnode(GOUT, 31, 35, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 35), rnode(GOUT, 31, 35, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 36), rnode(GOUT, 31, 35, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 37), rnode(GOUT, 31, 35, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 38), rnode(GOUT, 31, 35, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 39), rnode(GOUT, 31, 35, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 40), rnode(GOUT, 31, 35, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 41), rnode(GOUT, 31, 35, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 42), rnode(GOUT, 31, 35, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 43), rnode(GOUT, 31, 35, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 44), rnode(GOUT, 31, 35, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 45), rnode(GOUT, 31, 35, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 46), rnode(GOUT, 31, 35, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 47), rnode(GOUT, 31, 35, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 48), rnode(GOUT, 31, 34, 53) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 49), rnode(GOUT, 31, 34, 52) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 50), rnode(GOUT, 31, 34, 50) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 51), rnode(GOUT, 31, 34, 49) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 52), rnode(GOUT, 31, 34, 48) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 53), rnode(GOUT, 31, 34, 47) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 54), rnode(GOUT, 31, 34, 46) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 55), rnode(GOUT, 31, 34, 45) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 56), rnode(GOUT, 31, 34, 44) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 57), rnode(GOUT, 31, 34, 43) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 58), rnode(GOUT, 31, 34, 42) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 4, 59), rnode(GOUT, 31, 34, 41) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 0), rnode(GOUT, 31, 34, 34) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 1), rnode(GOUT, 31, 34, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 2), rnode(GOUT, 31, 34, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 3), rnode(GOUT, 31, 34, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 4), rnode(GOUT, 31, 33, 44) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 5), rnode(GOUT, 31, 33, 33) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 6), rnode(GOUT, 31, 33, 32) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 7), rnode(GOUT, 31, 33, 31) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 8), rnode(GOUT, 31, 33, 30) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 9), rnode(GOUT, 31, 33, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 10), rnode(GOUT, 31, 34, 33) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 11), rnode(GOUT, 31, 34, 32) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 12), rnode(GOUT, 31, 34, 31) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 13), rnode(GOUT, 31, 34, 30) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 14), rnode(GOUT, 31, 34, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 15), rnode(GOUT, 31, 34, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 16), rnode(GOUT, 31, 34, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 17), rnode(GOUT, 31, 34, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 18), rnode(GOUT, 31, 34, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 19), rnode(GOUT, 31, 34, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 20), rnode(GOUT, 31, 34, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 21), rnode(GOUT, 31, 34, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 22), rnode(GOUT, 31, 34, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 23), rnode(GOUT, 31, 34, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 24), rnode(GOUT, 31, 34, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 25), rnode(GOUT, 31, 34, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 26), rnode(GOUT, 31, 34, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 27), rnode(GOUT, 31, 34, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 28), rnode(GOUT, 31, 34, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 29), rnode(GOUT, 31, 34, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 30), rnode(GOUT, 31, 34, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 31), rnode(GOUT, 31, 34, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 32), rnode(GOUT, 31, 34, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 33), rnode(GOUT, 31, 34, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 34), rnode(GOUT, 31, 34, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 35), rnode(GOUT, 31, 34, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 36), rnode(GOUT, 31, 34, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 37), rnode(GOUT, 31, 34, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 38), rnode(GOUT, 31, 34, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 39), rnode(GOUT, 31, 34, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 40), rnode(GOUT, 31, 34, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 41), rnode(GOUT, 31, 33, 53) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 42), rnode(GOUT, 31, 33, 52) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 43), rnode(GOUT, 31, 33, 51) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 44), rnode(GOUT, 31, 33, 50) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 45), rnode(GOUT, 31, 33, 49) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 46), rnode(GOUT, 31, 33, 48) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 47), rnode(GOUT, 31, 33, 47) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 48), rnode(GOUT, 31, 33, 46) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 49), rnode(GOUT, 31, 33, 45) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 50), rnode(GOUT, 31, 33, 43) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 51), rnode(GOUT, 31, 33, 42) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 52), rnode(GOUT, 31, 33, 41) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 53), rnode(GOUT, 31, 33, 40) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 54), rnode(GOUT, 31, 33, 39) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 55), rnode(GOUT, 31, 33, 38) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 56), rnode(GOUT, 31, 33, 37) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 57), rnode(GOUT, 31, 33, 36) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 58), rnode(GOUT, 31, 33, 35) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_DATA, 5, 59), rnode(GOUT, 31, 33, 34) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_PORT_CLK, 0, -1), rnode(DCMUX, 31, 43, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_PORT_CLK, 1, -1), rnode(DCMUX, 31, 42, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_PORT_CLK, 2, -1), rnode(DCMUX, 31, 41, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_PORT_CLK, 3, -1), rnode(DCMUX, 31, 40, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_PORT_CLK, 4, -1), rnode(DCMUX, 31, 39, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_PORT_CLK, 5, -1), rnode(DCMUX, 31, 38, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_VALID, 0, -1), rnode(GOUT, 31, 39, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_VALID, 1, -1), rnode(GOUT, 31, 38, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_VALID, 2, -1), rnode(GOUT, 31, 36, 49) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_VALID, 3, -1), rnode(GOUT, 31, 35, 42) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_VALID, 4, -1), rnode(GOUT, 31, 34, 35) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_VALID, 5, -1), rnode(GOUT, 31, 33, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_CLK, 0, -1), rnode(DCMUX, 31, 44, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_CLK, 1, -1), rnode(DCMUX, 31, 42, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_CLK, 2, -1), rnode(DCMUX, 31, 40, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_CLK, 3, -1), rnode(DCMUX, 31, 38, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_READY, 0, -1), rnode(GOUT, 31, 33, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_READY, 1, -1), rnode(GOUT, 31, 33, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_READY, 2, -1), rnode(GOUT, 31, 33, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_READY, 3, -1), rnode(GOUT, 31, 33, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_READY, 0, -1), rnode(GOUT, 31, 42, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_READY, 1, -1), rnode(GOUT, 31, 42, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_READY, 2, -1), rnode(GOUT, 31, 42, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_READY, 3, -1), rnode(GOUT, 31, 42, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_READY, 4, -1), rnode(GOUT, 31, 42, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_READY, 5, -1), rnode(GOUT, 31, 42, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_CLK, 0, -1), rnode(DCMUX, 31, 44, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_CLK, 1, -1), rnode(DCMUX, 31, 43, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_CLK, 2, -1), rnode(DCMUX, 31, 41, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_CLK, 3, -1), rnode(DCMUX, 31, 39, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 0), rnode(GOUT, 31, 48, 49) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 1), rnode(GOUT, 31, 48, 38) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 2), rnode(GOUT, 31, 48, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 3), rnode(GOUT, 31, 48, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 4), rnode(GOUT, 31, 48, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 5), rnode(GOUT, 31, 47, 49) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 6), rnode(GOUT, 31, 47, 38) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 7), rnode(GOUT, 31, 47, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 8), rnode(GOUT, 31, 47, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 9), rnode(GOUT, 31, 47, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 10), rnode(GOUT, 31, 48, 48) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 11), rnode(GOUT, 31, 48, 47) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 12), rnode(GOUT, 31, 48, 46) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 13), rnode(GOUT, 31, 48, 45) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 14), rnode(GOUT, 31, 48, 44) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 15), rnode(GOUT, 31, 48, 43) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 16), rnode(GOUT, 31, 48, 42) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 17), rnode(GOUT, 31, 48, 41) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 18), rnode(GOUT, 31, 48, 40) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 19), rnode(GOUT, 31, 48, 39) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 20), rnode(GOUT, 31, 48, 37) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 21), rnode(GOUT, 31, 48, 36) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 22), rnode(GOUT, 31, 48, 35) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 23), rnode(GOUT, 31, 48, 34) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 24), rnode(GOUT, 31, 48, 33) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 25), rnode(GOUT, 31, 48, 32) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 26), rnode(GOUT, 31, 48, 31) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 27), rnode(GOUT, 31, 48, 30) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 28), rnode(GOUT, 31, 48, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 29), rnode(GOUT, 31, 48, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 30), rnode(GOUT, 31, 48, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 31), rnode(GOUT, 31, 48, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 32), rnode(GOUT, 31, 48, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 33), rnode(GOUT, 31, 48, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 34), rnode(GOUT, 31, 48, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 35), rnode(GOUT, 31, 48, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 36), rnode(GOUT, 31, 48, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 37), rnode(GOUT, 31, 48, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 38), rnode(GOUT, 31, 48, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 39), rnode(GOUT, 31, 48, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 40), rnode(GOUT, 31, 48, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 41), rnode(GOUT, 31, 48, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 42), rnode(GOUT, 31, 48, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 43), rnode(GOUT, 31, 48, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 44), rnode(GOUT, 31, 48, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 45), rnode(GOUT, 31, 48, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 46), rnode(GOUT, 31, 48, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 47), rnode(GOUT, 31, 48, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 48), rnode(GOUT, 31, 48, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 49), rnode(GOUT, 31, 48, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 50), rnode(GOUT, 31, 48, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 51), rnode(GOUT, 31, 48, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 52), rnode(GOUT, 31, 48, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 53), rnode(GOUT, 31, 48, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 54), rnode(GOUT, 31, 48, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 55), rnode(GOUT, 31, 47, 54) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 56), rnode(GOUT, 31, 47, 53) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 57), rnode(GOUT, 31, 47, 52) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 58), rnode(GOUT, 31, 47, 51) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 59), rnode(GOUT, 31, 47, 50) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 60), rnode(GOUT, 31, 47, 48) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 61), rnode(GOUT, 31, 47, 47) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 62), rnode(GOUT, 31, 47, 46) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 63), rnode(GOUT, 31, 47, 45) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 64), rnode(GOUT, 31, 47, 44) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 65), rnode(GOUT, 31, 47, 43) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 66), rnode(GOUT, 31, 47, 42) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 67), rnode(GOUT, 31, 47, 41) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 68), rnode(GOUT, 31, 47, 40) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 69), rnode(GOUT, 31, 47, 39) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 70), rnode(GOUT, 31, 47, 37) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 71), rnode(GOUT, 31, 47, 36) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 72), rnode(GOUT, 31, 47, 35) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 73), rnode(GOUT, 31, 47, 34) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 74), rnode(GOUT, 31, 47, 33) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 75), rnode(GOUT, 31, 47, 32) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 76), rnode(GOUT, 31, 47, 31) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 77), rnode(GOUT, 31, 47, 30) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 78), rnode(GOUT, 31, 47, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 79), rnode(GOUT, 31, 47, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 80), rnode(GOUT, 31, 47, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 81), rnode(GOUT, 31, 47, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 82), rnode(GOUT, 31, 47, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 83), rnode(GOUT, 31, 47, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 84), rnode(GOUT, 31, 47, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 85), rnode(GOUT, 31, 47, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 86), rnode(GOUT, 31, 47, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 87), rnode(GOUT, 31, 47, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 88), rnode(GOUT, 31, 47, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 0, 89), rnode(GOUT, 31, 47, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 0), rnode(GOUT, 31, 47, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 1), rnode(GOUT, 31, 47, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 2), rnode(GOUT, 31, 46, 46) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 3), rnode(GOUT, 31, 46, 35) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 4), rnode(GOUT, 31, 46, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 5), rnode(GOUT, 31, 46, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 6), rnode(GOUT, 31, 46, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 7), rnode(GOUT, 31, 45, 45) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 8), rnode(GOUT, 31, 45, 34) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 9), rnode(GOUT, 31, 45, 33) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 10), rnode(GOUT, 31, 47, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 11), rnode(GOUT, 31, 47, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 12), rnode(GOUT, 31, 47, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 13), rnode(GOUT, 31, 47, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 14), rnode(GOUT, 31, 47, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 15), rnode(GOUT, 31, 47, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 16), rnode(GOUT, 31, 47, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 17), rnode(GOUT, 31, 47, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 18), rnode(GOUT, 31, 47, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 19), rnode(GOUT, 31, 47, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 20), rnode(GOUT, 31, 47, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 21), rnode(GOUT, 31, 47, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 22), rnode(GOUT, 31, 46, 54) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 23), rnode(GOUT, 31, 46, 53) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 24), rnode(GOUT, 31, 46, 52) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 25), rnode(GOUT, 31, 46, 51) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 26), rnode(GOUT, 31, 46, 50) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 27), rnode(GOUT, 31, 46, 49) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 28), rnode(GOUT, 31, 46, 48) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 29), rnode(GOUT, 31, 46, 47) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 30), rnode(GOUT, 31, 46, 45) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 31), rnode(GOUT, 31, 46, 44) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 32), rnode(GOUT, 31, 46, 43) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 33), rnode(GOUT, 31, 46, 42) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 34), rnode(GOUT, 31, 46, 41) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 35), rnode(GOUT, 31, 46, 40) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 36), rnode(GOUT, 31, 46, 39) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 37), rnode(GOUT, 31, 46, 38) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 38), rnode(GOUT, 31, 46, 37) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 39), rnode(GOUT, 31, 46, 36) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 40), rnode(GOUT, 31, 46, 34) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 41), rnode(GOUT, 31, 46, 33) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 42), rnode(GOUT, 31, 46, 32) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 43), rnode(GOUT, 31, 46, 31) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 44), rnode(GOUT, 31, 46, 30) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 45), rnode(GOUT, 31, 46, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 46), rnode(GOUT, 31, 46, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 47), rnode(GOUT, 31, 46, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 48), rnode(GOUT, 31, 46, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 49), rnode(GOUT, 31, 46, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 50), rnode(GOUT, 31, 46, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 51), rnode(GOUT, 31, 46, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 52), rnode(GOUT, 31, 46, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 53), rnode(GOUT, 31, 46, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 54), rnode(GOUT, 31, 46, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 55), rnode(GOUT, 31, 46, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 56), rnode(GOUT, 31, 46, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 57), rnode(GOUT, 31, 46, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 58), rnode(GOUT, 31, 46, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 59), rnode(GOUT, 31, 46, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 60), rnode(GOUT, 31, 46, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 61), rnode(GOUT, 31, 46, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 62), rnode(GOUT, 31, 46, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 63), rnode(GOUT, 31, 46, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 64), rnode(GOUT, 31, 46, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 65), rnode(GOUT, 31, 46, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 66), rnode(GOUT, 31, 46, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 67), rnode(GOUT, 31, 46, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 68), rnode(GOUT, 31, 46, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 69), rnode(GOUT, 31, 46, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 70), rnode(GOUT, 31, 46, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 71), rnode(GOUT, 31, 46, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 72), rnode(GOUT, 31, 45, 53) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 73), rnode(GOUT, 31, 45, 52) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 74), rnode(GOUT, 31, 45, 51) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 75), rnode(GOUT, 31, 45, 50) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 76), rnode(GOUT, 31, 45, 49) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 77), rnode(GOUT, 31, 45, 48) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 78), rnode(GOUT, 31, 45, 47) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 79), rnode(GOUT, 31, 45, 46) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 80), rnode(GOUT, 31, 45, 44) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 81), rnode(GOUT, 31, 45, 43) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 82), rnode(GOUT, 31, 45, 42) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 83), rnode(GOUT, 31, 45, 41) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 84), rnode(GOUT, 31, 45, 40) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 85), rnode(GOUT, 31, 45, 39) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 86), rnode(GOUT, 31, 45, 38) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 87), rnode(GOUT, 31, 45, 37) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 88), rnode(GOUT, 31, 45, 36) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 1, 89), rnode(GOUT, 31, 45, 35) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 0), rnode(GOUT, 31, 45, 31) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 1), rnode(GOUT, 31, 45, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 2), rnode(GOUT, 31, 45, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 3), rnode(GOUT, 31, 44, 52) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 4), rnode(GOUT, 31, 44, 41) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 5), rnode(GOUT, 31, 44, 30) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 6), rnode(GOUT, 31, 44, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 7), rnode(GOUT, 31, 44, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 8), rnode(GOUT, 31, 43, 51) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 9), rnode(GOUT, 31, 43, 50) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 10), rnode(GOUT, 31, 45, 30) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 11), rnode(GOUT, 31, 45, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 12), rnode(GOUT, 31, 45, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 13), rnode(GOUT, 31, 45, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 14), rnode(GOUT, 31, 45, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 15), rnode(GOUT, 31, 45, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 16), rnode(GOUT, 31, 45, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 17), rnode(GOUT, 31, 45, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 18), rnode(GOUT, 31, 45, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 19), rnode(GOUT, 31, 45, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 20), rnode(GOUT, 31, 45, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 21), rnode(GOUT, 31, 45, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 22), rnode(GOUT, 31, 45, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 23), rnode(GOUT, 31, 45, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 24), rnode(GOUT, 31, 45, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 25), rnode(GOUT, 31, 45, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 26), rnode(GOUT, 31, 45, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 27), rnode(GOUT, 31, 45, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 28), rnode(GOUT, 31, 45, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 29), rnode(GOUT, 31, 45, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 30), rnode(GOUT, 31, 45, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 31), rnode(GOUT, 31, 45, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 32), rnode(GOUT, 31, 45, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 33), rnode(GOUT, 31, 45, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 34), rnode(GOUT, 31, 45, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 35), rnode(GOUT, 31, 45, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 36), rnode(GOUT, 31, 45, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 37), rnode(GOUT, 31, 45, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 38), rnode(GOUT, 31, 45, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 39), rnode(GOUT, 31, 44, 53) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 40), rnode(GOUT, 31, 44, 51) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 41), rnode(GOUT, 31, 44, 50) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 42), rnode(GOUT, 31, 44, 49) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 43), rnode(GOUT, 31, 44, 48) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 44), rnode(GOUT, 31, 44, 47) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 45), rnode(GOUT, 31, 44, 46) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 46), rnode(GOUT, 31, 44, 45) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 47), rnode(GOUT, 31, 44, 44) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 48), rnode(GOUT, 31, 44, 43) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 49), rnode(GOUT, 31, 44, 42) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 50), rnode(GOUT, 31, 44, 40) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 51), rnode(GOUT, 31, 44, 39) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 52), rnode(GOUT, 31, 44, 38) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 53), rnode(GOUT, 31, 44, 37) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 54), rnode(GOUT, 31, 44, 36) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 55), rnode(GOUT, 31, 44, 35) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 56), rnode(GOUT, 31, 44, 34) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 57), rnode(GOUT, 31, 44, 33) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 58), rnode(GOUT, 31, 44, 32) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 59), rnode(GOUT, 31, 44, 31) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 60), rnode(GOUT, 31, 44, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 61), rnode(GOUT, 31, 44, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 62), rnode(GOUT, 31, 44, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 63), rnode(GOUT, 31, 44, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 64), rnode(GOUT, 31, 44, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 65), rnode(GOUT, 31, 44, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 66), rnode(GOUT, 31, 44, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 67), rnode(GOUT, 31, 44, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 68), rnode(GOUT, 31, 44, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 69), rnode(GOUT, 31, 44, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 70), rnode(GOUT, 31, 44, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 71), rnode(GOUT, 31, 44, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 72), rnode(GOUT, 31, 44, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 73), rnode(GOUT, 31, 44, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 74), rnode(GOUT, 31, 44, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 75), rnode(GOUT, 31, 44, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 76), rnode(GOUT, 31, 44, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 77), rnode(GOUT, 31, 44, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 78), rnode(GOUT, 31, 44, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 79), rnode(GOUT, 31, 44, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 80), rnode(GOUT, 31, 44, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 81), rnode(GOUT, 31, 44, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 82), rnode(GOUT, 31, 44, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 83), rnode(GOUT, 31, 44, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 84), rnode(GOUT, 31, 44, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 85), rnode(GOUT, 31, 44, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 86), rnode(GOUT, 31, 44, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 87), rnode(GOUT, 31, 44, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 88), rnode(GOUT, 31, 43, 53) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 2, 89), rnode(GOUT, 31, 43, 52) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 0), rnode(GOUT, 31, 43, 48) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 1), rnode(GOUT, 31, 43, 37) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 2), rnode(GOUT, 31, 43, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 3), rnode(GOUT, 31, 43, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 4), rnode(GOUT, 31, 43, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 5), rnode(GOUT, 31, 42, 47) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 6), rnode(GOUT, 31, 42, 36) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 7), rnode(GOUT, 31, 42, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 8), rnode(GOUT, 31, 42, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 9), rnode(GOUT, 31, 42, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 10), rnode(GOUT, 31, 43, 47) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 11), rnode(GOUT, 31, 43, 46) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 12), rnode(GOUT, 31, 43, 45) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 13), rnode(GOUT, 31, 43, 44) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 14), rnode(GOUT, 31, 43, 43) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 15), rnode(GOUT, 31, 43, 42) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 16), rnode(GOUT, 31, 43, 41) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 17), rnode(GOUT, 31, 43, 40) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 18), rnode(GOUT, 31, 43, 39) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 19), rnode(GOUT, 31, 43, 38) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 20), rnode(GOUT, 31, 43, 36) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 21), rnode(GOUT, 31, 43, 35) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 22), rnode(GOUT, 31, 43, 34) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 23), rnode(GOUT, 31, 43, 33) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 24), rnode(GOUT, 31, 43, 32) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 25), rnode(GOUT, 31, 43, 31) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 26), rnode(GOUT, 31, 43, 30) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 27), rnode(GOUT, 31, 43, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 28), rnode(GOUT, 31, 43, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 29), rnode(GOUT, 31, 43, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 30), rnode(GOUT, 31, 43, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 31), rnode(GOUT, 31, 43, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 32), rnode(GOUT, 31, 43, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 33), rnode(GOUT, 31, 43, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 34), rnode(GOUT, 31, 43, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 35), rnode(GOUT, 31, 43, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 36), rnode(GOUT, 31, 43, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 37), rnode(GOUT, 31, 43, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 38), rnode(GOUT, 31, 43, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 39), rnode(GOUT, 31, 43, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 40), rnode(GOUT, 31, 43, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 41), rnode(GOUT, 31, 43, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 42), rnode(GOUT, 31, 43, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 43), rnode(GOUT, 31, 43, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 44), rnode(GOUT, 31, 43, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 45), rnode(GOUT, 31, 43, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 46), rnode(GOUT, 31, 43, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 47), rnode(GOUT, 31, 43, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 48), rnode(GOUT, 31, 43, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 49), rnode(GOUT, 31, 43, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 50), rnode(GOUT, 31, 43, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 51), rnode(GOUT, 31, 43, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 52), rnode(GOUT, 31, 43, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 53), rnode(GOUT, 31, 43, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 54), rnode(GOUT, 31, 42, 53) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 55), rnode(GOUT, 31, 42, 52) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 56), rnode(GOUT, 31, 42, 51) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 57), rnode(GOUT, 31, 42, 50) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 58), rnode(GOUT, 31, 42, 49) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 59), rnode(GOUT, 31, 42, 48) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 60), rnode(GOUT, 31, 42, 46) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 61), rnode(GOUT, 31, 42, 45) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 62), rnode(GOUT, 31, 42, 44) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 63), rnode(GOUT, 31, 42, 43) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 64), rnode(GOUT, 31, 42, 42) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 65), rnode(GOUT, 31, 42, 41) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 66), rnode(GOUT, 31, 42, 40) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 67), rnode(GOUT, 31, 42, 39) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 68), rnode(GOUT, 31, 42, 38) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 69), rnode(GOUT, 31, 42, 37) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 70), rnode(GOUT, 31, 42, 35) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 71), rnode(GOUT, 31, 42, 34) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 72), rnode(GOUT, 31, 42, 33) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 73), rnode(GOUT, 31, 42, 32) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 74), rnode(GOUT, 31, 42, 31) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 75), rnode(GOUT, 31, 42, 30) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 76), rnode(GOUT, 31, 42, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 77), rnode(GOUT, 31, 42, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 78), rnode(GOUT, 31, 42, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 79), rnode(GOUT, 31, 42, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 80), rnode(GOUT, 31, 42, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 81), rnode(GOUT, 31, 42, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 82), rnode(GOUT, 31, 42, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 83), rnode(GOUT, 31, 42, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 84), rnode(GOUT, 31, 42, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 85), rnode(GOUT, 31, 42, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 86), rnode(GOUT, 31, 42, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 87), rnode(GOUT, 31, 42, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 88), rnode(GOUT, 31, 42, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_DATA, 3, 89), rnode(GOUT, 31, 42, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_VALID, 0, -1), rnode(GOUT, 31, 47, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_VALID, 1, -1), rnode(GOUT, 31, 45, 32) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_VALID, 2, -1), rnode(GOUT, 31, 43, 49) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_VALID, 3, -1), rnode(GOUT, 31, 42, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, BONDING_OUT, 0, 0), rnode(GIN, 31, 44, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, BONDING_OUT, 0, 1), rnode(GIN, 31, 44, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, BONDING_OUT, 0, 2), rnode(GIN, 31, 44, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, BONDING_OUT, 0, 3), rnode(GIN, 31, 44, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, BONDING_OUT, 1, 0), rnode(GIN, 31, 44, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, BONDING_OUT, 1, 1), rnode(GIN, 31, 44, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, BONDING_OUT, 1, 2), rnode(GIN, 31, 44, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, BONDING_OUT, 1, 3), rnode(GIN, 31, 44, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_READY, 0, -1), rnode(GIN, 31, 44, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_READY, 1, -1), rnode(GIN, 31, 44, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_READY, 2, -1), rnode(GIN, 31, 44, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_READY, 3, -1), rnode(GIN, 31, 44, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_READY, 4, -1), rnode(GIN, 31, 44, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, CMD_READY, 5, -1), rnode(GIN, 31, 44, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 0), rnode(GIN, 31, 43, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 1), rnode(GIN, 31, 43, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 2), rnode(GIN, 31, 43, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 3), rnode(GIN, 31, 42, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 4), rnode(GIN, 31, 42, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 5), rnode(GIN, 31, 41, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 6), rnode(GIN, 31, 41, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 7), rnode(GIN, 31, 41, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 8), rnode(GIN, 31, 41, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 9), rnode(GIN, 31, 41, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 10), rnode(GIN, 31, 43, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 11), rnode(GIN, 31, 43, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 12), rnode(GIN, 31, 43, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 13), rnode(GIN, 31, 43, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 14), rnode(GIN, 31, 43, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 15), rnode(GIN, 31, 43, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 16), rnode(GIN, 31, 43, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 17), rnode(GIN, 31, 43, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 18), rnode(GIN, 31, 43, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 19), rnode(GIN, 31, 43, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 20), rnode(GIN, 31, 43, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 21), rnode(GIN, 31, 43, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 22), rnode(GIN, 31, 43, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 23), rnode(GIN, 31, 43, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 24), rnode(GIN, 31, 43, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 25), rnode(GIN, 31, 43, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 26), rnode(GIN, 31, 43, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 27), rnode(GIN, 31, 43, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 28), rnode(GIN, 31, 43, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 29), rnode(GIN, 31, 43, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 30), rnode(GIN, 31, 43, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 31), rnode(GIN, 31, 42, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 32), rnode(GIN, 31, 42, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 33), rnode(GIN, 31, 42, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 34), rnode(GIN, 31, 42, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 35), rnode(GIN, 31, 42, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 36), rnode(GIN, 31, 42, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 37), rnode(GIN, 31, 42, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 38), rnode(GIN, 31, 42, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 39), rnode(GIN, 31, 42, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 40), rnode(GIN, 31, 42, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 41), rnode(GIN, 31, 42, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 42), rnode(GIN, 31, 42, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 43), rnode(GIN, 31, 42, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 44), rnode(GIN, 31, 42, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 45), rnode(GIN, 31, 42, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 46), rnode(GIN, 31, 42, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 47), rnode(GIN, 31, 42, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 48), rnode(GIN, 31, 42, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 49), rnode(GIN, 31, 42, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 50), rnode(GIN, 31, 42, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 51), rnode(GIN, 31, 42, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 52), rnode(GIN, 31, 42, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 53), rnode(GIN, 31, 42, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 54), rnode(GIN, 31, 42, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 55), rnode(GIN, 31, 42, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 56), rnode(GIN, 31, 42, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 57), rnode(GIN, 31, 42, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 58), rnode(GIN, 31, 42, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 59), rnode(GIN, 31, 41, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 60), rnode(GIN, 31, 41, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 61), rnode(GIN, 31, 41, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 62), rnode(GIN, 31, 41, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 63), rnode(GIN, 31, 41, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 64), rnode(GIN, 31, 41, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 65), rnode(GIN, 31, 41, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 66), rnode(GIN, 31, 41, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 67), rnode(GIN, 31, 41, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 68), rnode(GIN, 31, 41, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 69), rnode(GIN, 31, 41, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 70), rnode(GIN, 31, 41, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 71), rnode(GIN, 31, 41, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 72), rnode(GIN, 31, 41, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 73), rnode(GIN, 31, 41, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 74), rnode(GIN, 31, 41, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 75), rnode(GIN, 31, 41, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 76), rnode(GIN, 31, 41, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 77), rnode(GIN, 31, 41, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 78), rnode(GIN, 31, 41, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 0, 79), rnode(GIN, 31, 41, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 0), rnode(GIN, 31, 41, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 1), rnode(GIN, 31, 40, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 2), rnode(GIN, 31, 40, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 3), rnode(GIN, 31, 39, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 4), rnode(GIN, 31, 39, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 5), rnode(GIN, 31, 39, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 6), rnode(GIN, 31, 38, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 7), rnode(GIN, 31, 38, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 8), rnode(GIN, 31, 38, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 9), rnode(GIN, 31, 38, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 10), rnode(GIN, 31, 41, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 11), rnode(GIN, 31, 41, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 12), rnode(GIN, 31, 40, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 13), rnode(GIN, 31, 40, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 14), rnode(GIN, 31, 40, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 15), rnode(GIN, 31, 40, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 16), rnode(GIN, 31, 40, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 17), rnode(GIN, 31, 40, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 18), rnode(GIN, 31, 40, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 19), rnode(GIN, 31, 40, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 20), rnode(GIN, 31, 40, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 21), rnode(GIN, 31, 40, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 22), rnode(GIN, 31, 40, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 23), rnode(GIN, 31, 40, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 24), rnode(GIN, 31, 40, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 25), rnode(GIN, 31, 40, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 26), rnode(GIN, 31, 40, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 27), rnode(GIN, 31, 40, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 28), rnode(GIN, 31, 40, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 29), rnode(GIN, 31, 40, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 30), rnode(GIN, 31, 40, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 31), rnode(GIN, 31, 40, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 32), rnode(GIN, 31, 40, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 33), rnode(GIN, 31, 40, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 34), rnode(GIN, 31, 40, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 35), rnode(GIN, 31, 40, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 36), rnode(GIN, 31, 40, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 37), rnode(GIN, 31, 40, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 38), rnode(GIN, 31, 40, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 39), rnode(GIN, 31, 40, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 40), rnode(GIN, 31, 39, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 41), rnode(GIN, 31, 39, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 42), rnode(GIN, 31, 39, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 43), rnode(GIN, 31, 39, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 44), rnode(GIN, 31, 39, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 45), rnode(GIN, 31, 39, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 46), rnode(GIN, 31, 39, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 47), rnode(GIN, 31, 39, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 48), rnode(GIN, 31, 39, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 49), rnode(GIN, 31, 39, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 50), rnode(GIN, 31, 39, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 51), rnode(GIN, 31, 39, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 52), rnode(GIN, 31, 39, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 53), rnode(GIN, 31, 39, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 54), rnode(GIN, 31, 39, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 55), rnode(GIN, 31, 39, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 56), rnode(GIN, 31, 39, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 57), rnode(GIN, 31, 39, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 58), rnode(GIN, 31, 39, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 59), rnode(GIN, 31, 39, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 60), rnode(GIN, 31, 39, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 61), rnode(GIN, 31, 39, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 62), rnode(GIN, 31, 39, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 63), rnode(GIN, 31, 39, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 64), rnode(GIN, 31, 39, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 65), rnode(GIN, 31, 39, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 66), rnode(GIN, 31, 39, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 67), rnode(GIN, 31, 38, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 68), rnode(GIN, 31, 38, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 69), rnode(GIN, 31, 38, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 70), rnode(GIN, 31, 38, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 71), rnode(GIN, 31, 38, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 72), rnode(GIN, 31, 38, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 73), rnode(GIN, 31, 38, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 74), rnode(GIN, 31, 38, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 75), rnode(GIN, 31, 38, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 76), rnode(GIN, 31, 38, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 77), rnode(GIN, 31, 38, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 78), rnode(GIN, 31, 38, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 1, 79), rnode(GIN, 31, 38, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 0), rnode(GIN, 31, 38, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 1), rnode(GIN, 31, 38, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 2), rnode(GIN, 31, 37, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 3), rnode(GIN, 31, 37, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 4), rnode(GIN, 31, 36, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 5), rnode(GIN, 31, 36, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 6), rnode(GIN, 31, 36, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 7), rnode(GIN, 31, 35, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 8), rnode(GIN, 31, 35, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 9), rnode(GIN, 31, 35, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 10), rnode(GIN, 31, 38, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 11), rnode(GIN, 31, 38, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 12), rnode(GIN, 31, 38, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 13), rnode(GIN, 31, 38, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 14), rnode(GIN, 31, 38, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 15), rnode(GIN, 31, 38, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 16), rnode(GIN, 31, 38, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 17), rnode(GIN, 31, 38, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 18), rnode(GIN, 31, 38, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 19), rnode(GIN, 31, 38, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 20), rnode(GIN, 31, 37, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 21), rnode(GIN, 31, 37, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 22), rnode(GIN, 31, 37, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 23), rnode(GIN, 31, 37, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 24), rnode(GIN, 31, 37, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 25), rnode(GIN, 31, 37, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 26), rnode(GIN, 31, 37, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 27), rnode(GIN, 31, 37, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 28), rnode(GIN, 31, 37, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 29), rnode(GIN, 31, 37, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 30), rnode(GIN, 31, 37, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 31), rnode(GIN, 31, 37, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 32), rnode(GIN, 31, 37, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 33), rnode(GIN, 31, 37, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 34), rnode(GIN, 31, 37, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 35), rnode(GIN, 31, 37, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 36), rnode(GIN, 31, 37, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 37), rnode(GIN, 31, 37, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 38), rnode(GIN, 31, 37, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 39), rnode(GIN, 31, 37, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 40), rnode(GIN, 31, 37, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 41), rnode(GIN, 31, 37, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 42), rnode(GIN, 31, 37, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 43), rnode(GIN, 31, 37, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 44), rnode(GIN, 31, 37, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 45), rnode(GIN, 31, 37, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 46), rnode(GIN, 31, 37, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 47), rnode(GIN, 31, 37, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 48), rnode(GIN, 31, 36, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 49), rnode(GIN, 31, 36, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 50), rnode(GIN, 31, 36, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 51), rnode(GIN, 31, 36, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 52), rnode(GIN, 31, 36, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 53), rnode(GIN, 31, 36, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 54), rnode(GIN, 31, 36, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 55), rnode(GIN, 31, 36, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 56), rnode(GIN, 31, 36, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 57), rnode(GIN, 31, 36, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 58), rnode(GIN, 31, 36, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 59), rnode(GIN, 31, 36, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 60), rnode(GIN, 31, 36, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 61), rnode(GIN, 31, 36, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 62), rnode(GIN, 31, 36, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 63), rnode(GIN, 31, 36, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 64), rnode(GIN, 31, 36, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 65), rnode(GIN, 31, 36, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 66), rnode(GIN, 31, 36, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 67), rnode(GIN, 31, 36, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 68), rnode(GIN, 31, 36, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 69), rnode(GIN, 31, 36, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 70), rnode(GIN, 31, 36, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 71), rnode(GIN, 31, 36, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 72), rnode(GIN, 31, 36, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 73), rnode(GIN, 31, 36, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 74), rnode(GIN, 31, 36, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 75), rnode(GIN, 31, 35, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 76), rnode(GIN, 31, 35, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 77), rnode(GIN, 31, 35, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 78), rnode(GIN, 31, 35, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 2, 79), rnode(GIN, 31, 35, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 0), rnode(GIN, 31, 35, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 1), rnode(GIN, 31, 35, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 2), rnode(GIN, 31, 34, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 3), rnode(GIN, 31, 34, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 4), rnode(GIN, 31, 34, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 5), rnode(GIN, 31, 33, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 6), rnode(GIN, 31, 33, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 7), rnode(GIN, 31, 33, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 8), rnode(GIN, 31, 33, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 9), rnode(GIN, 31, 33, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 10), rnode(GIN, 31, 35, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 11), rnode(GIN, 31, 35, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 12), rnode(GIN, 31, 35, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 13), rnode(GIN, 31, 35, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 14), rnode(GIN, 31, 35, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 15), rnode(GIN, 31, 35, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 16), rnode(GIN, 31, 35, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 17), rnode(GIN, 31, 35, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 18), rnode(GIN, 31, 35, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 19), rnode(GIN, 31, 35, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 20), rnode(GIN, 31, 35, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 21), rnode(GIN, 31, 35, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 22), rnode(GIN, 31, 35, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 23), rnode(GIN, 31, 35, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 24), rnode(GIN, 31, 35, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 25), rnode(GIN, 31, 35, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 26), rnode(GIN, 31, 35, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 27), rnode(GIN, 31, 35, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 28), rnode(GIN, 31, 35, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 29), rnode(GIN, 31, 34, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 30), rnode(GIN, 31, 34, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 31), rnode(GIN, 31, 34, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 32), rnode(GIN, 31, 34, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 33), rnode(GIN, 31, 34, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 34), rnode(GIN, 31, 34, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 35), rnode(GIN, 31, 34, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 36), rnode(GIN, 31, 34, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 37), rnode(GIN, 31, 34, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 38), rnode(GIN, 31, 34, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 39), rnode(GIN, 31, 34, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 40), rnode(GIN, 31, 34, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 41), rnode(GIN, 31, 34, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 42), rnode(GIN, 31, 34, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 43), rnode(GIN, 31, 34, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 44), rnode(GIN, 31, 34, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 45), rnode(GIN, 31, 34, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 46), rnode(GIN, 31, 34, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 47), rnode(GIN, 31, 34, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 48), rnode(GIN, 31, 34, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 49), rnode(GIN, 31, 34, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 50), rnode(GIN, 31, 34, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 51), rnode(GIN, 31, 34, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 52), rnode(GIN, 31, 34, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 53), rnode(GIN, 31, 34, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 54), rnode(GIN, 31, 34, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 55), rnode(GIN, 31, 34, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 56), rnode(GIN, 31, 33, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 57), rnode(GIN, 31, 33, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 58), rnode(GIN, 31, 33, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 59), rnode(GIN, 31, 33, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 60), rnode(GIN, 31, 33, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 61), rnode(GIN, 31, 33, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 62), rnode(GIN, 31, 33, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 63), rnode(GIN, 31, 33, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 64), rnode(GIN, 31, 33, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 65), rnode(GIN, 31, 33, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 66), rnode(GIN, 31, 33, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 67), rnode(GIN, 31, 33, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 68), rnode(GIN, 31, 33, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 69), rnode(GIN, 31, 33, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 70), rnode(GIN, 31, 33, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 71), rnode(GIN, 31, 33, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 72), rnode(GIN, 31, 33, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 73), rnode(GIN, 31, 33, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 74), rnode(GIN, 31, 33, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 75), rnode(GIN, 31, 33, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 76), rnode(GIN, 31, 33, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 77), rnode(GIN, 31, 33, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 78), rnode(GIN, 31, 33, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_DATA, 3, 79), rnode(GIN, 31, 33, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_VALID, 0, -1), rnode(GIN, 31, 41, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_VALID, 1, -1), rnode(GIN, 31, 38, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_VALID, 2, -1), rnode(GIN, 31, 35, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, RD_VALID, 3, -1), rnode(GIN, 31, 33, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 0, 0), rnode(GIN, 31, 47, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 0, 1), rnode(GIN, 31, 47, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 0, 2), rnode(GIN, 31, 47, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 0, 3), rnode(GIN, 31, 47, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 0, 4), rnode(GIN, 31, 46, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 0, 5), rnode(GIN, 31, 46, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 0, 6), rnode(GIN, 31, 46, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 0, 7), rnode(GIN, 31, 46, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 0, 8), rnode(GIN, 31, 46, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 0, 9), rnode(GIN, 31, 46, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 1, 0), rnode(GIN, 31, 46, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 1, 1), rnode(GIN, 31, 46, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 1, 2), rnode(GIN, 31, 46, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 1, 3), rnode(GIN, 31, 46, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 1, 4), rnode(GIN, 31, 46, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 1, 5), rnode(GIN, 31, 46, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 1, 6), rnode(GIN, 31, 46, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 1, 7), rnode(GIN, 31, 46, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 1, 8), rnode(GIN, 31, 46, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 1, 9), rnode(GIN, 31, 46, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 2, 0), rnode(GIN, 31, 46, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 2, 1), rnode(GIN, 31, 46, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 2, 2), rnode(GIN, 31, 46, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 2, 3), rnode(GIN, 31, 46, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 2, 4), rnode(GIN, 31, 46, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 2, 5), rnode(GIN, 31, 46, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 2, 6), rnode(GIN, 31, 46, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 2, 7), rnode(GIN, 31, 46, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 2, 8), rnode(GIN, 31, 46, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 2, 9), rnode(GIN, 31, 46, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 3, 0), rnode(GIN, 31, 46, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 3, 1), rnode(GIN, 31, 45, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 3, 2), rnode(GIN, 31, 45, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 3, 3), rnode(GIN, 31, 45, 27) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 3, 4), rnode(GIN, 31, 45, 26) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 3, 5), rnode(GIN, 31, 45, 25) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 3, 6), rnode(GIN, 31, 45, 24) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 3, 7), rnode(GIN, 31, 45, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 3, 8), rnode(GIN, 31, 45, 22) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 3, 9), rnode(GIN, 31, 45, 21) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 4, 0), rnode(GIN, 31, 45, 19) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 4, 1), rnode(GIN, 31, 45, 18) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 4, 2), rnode(GIN, 31, 45, 17) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 4, 3), rnode(GIN, 31, 45, 16) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 4, 4), rnode(GIN, 31, 45, 15) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 4, 5), rnode(GIN, 31, 45, 14) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 4, 6), rnode(GIN, 31, 45, 13) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 4, 7), rnode(GIN, 31, 45, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 4, 8), rnode(GIN, 31, 45, 11) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 4, 9), rnode(GIN, 31, 45, 10) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 5, 0), rnode(GIN, 31, 45, 8) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 5, 1), rnode(GIN, 31, 45, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 5, 2), rnode(GIN, 31, 45, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 5, 3), rnode(GIN, 31, 45, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 5, 4), rnode(GIN, 31, 45, 4) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 5, 5), rnode(GIN, 31, 45, 3) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 5, 6), rnode(GIN, 31, 45, 2) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 5, 7), rnode(GIN, 31, 45, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 5, 8), rnode(GIN, 31, 45, 0) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_DATA, 5, 9), rnode(GIN, 31, 44, 29) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_VALID, 0, -1), rnode(GIN, 31, 46, 23) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_VALID, 1, -1), rnode(GIN, 31, 46, 12) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_VALID, 2, -1), rnode(GIN, 31, 46, 1) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_VALID, 3, -1), rnode(GIN, 31, 45, 20) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_VALID, 4, -1), rnode(GIN, 31, 45, 9) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WRACK_VALID, 5, -1), rnode(GIN, 31, 44, 28) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_READY, 0, -1), rnode(GIN, 31, 47, 7) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_READY, 1, -1), rnode(GIN, 31, 47, 6) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_READY, 2, -1), rnode(GIN, 31, 47, 5) },
  { pnode(HPS_FPGA2SDRAM, 32, 27, WR_READY, 3, -1), rnode(GIN, 31, 47, 4) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARREADY, -1, -1), rnode(GOUT, 31, 31, 45) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWREADY, -1, -1), rnode(GOUT, 31, 31, 44) },
  { pnode(HPS_HPS2FPGA, 32, 24, BID, -1, 0), rnode(GOUT, 31, 31, 43) },
  { pnode(HPS_HPS2FPGA, 32, 24, BID, -1, 1), rnode(GOUT, 31, 31, 40) },
  { pnode(HPS_HPS2FPGA, 32, 24, BID, -1, 2), rnode(GOUT, 31, 31, 39) },
  { pnode(HPS_HPS2FPGA, 32, 24, BID, -1, 3), rnode(GOUT, 31, 31, 38) },
  { pnode(HPS_HPS2FPGA, 32, 24, BID, -1, 4), rnode(GOUT, 31, 31, 37) },
  { pnode(HPS_HPS2FPGA, 32, 24, BID, -1, 5), rnode(GOUT, 31, 31, 36) },
  { pnode(HPS_HPS2FPGA, 32, 24, BID, -1, 6), rnode(GOUT, 31, 31, 35) },
  { pnode(HPS_HPS2FPGA, 32, 24, BID, -1, 7), rnode(GOUT, 31, 31, 34) },
  { pnode(HPS_HPS2FPGA, 32, 24, BID, -1, 8), rnode(GOUT, 31, 31, 33) },
  { pnode(HPS_HPS2FPGA, 32, 24, BID, -1, 9), rnode(GOUT, 31, 31, 32) },
  { pnode(HPS_HPS2FPGA, 32, 24, BID, -1, 10), rnode(GOUT, 31, 31, 42) },
  { pnode(HPS_HPS2FPGA, 32, 24, BID, -1, 11), rnode(GOUT, 31, 31, 41) },
  { pnode(HPS_HPS2FPGA, 32, 24, BRESP, -1, 0), rnode(GOUT, 31, 31, 31) },
  { pnode(HPS_HPS2FPGA, 32, 24, BRESP, -1, 1), rnode(GOUT, 31, 31, 30) },
  { pnode(HPS_HPS2FPGA, 32, 24, BVALID, -1, -1), rnode(GOUT, 31, 31, 29) },
  { pnode(HPS_HPS2FPGA, 32, 24, CLK, -1, -1), rnode(DCMUX, 31, 27, 1) },
  { pnode(HPS_HPS2FPGA, 32, 24, PORT_SIZE_CONFIG, -1, 0), rnode(GOUT, 31, 28, 39) },
  { pnode(HPS_HPS2FPGA, 32, 24, PORT_SIZE_CONFIG, -1, 1), rnode(GOUT, 31, 28, 38) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 0), rnode(GOUT, 31, 31, 28) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 1), rnode(GOUT, 31, 30, 41) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 2), rnode(GOUT, 31, 30, 30) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 3), rnode(GOUT, 31, 30, 19) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 4), rnode(GOUT, 31, 30, 8) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 5), rnode(GOUT, 31, 29, 49) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 6), rnode(GOUT, 31, 29, 38) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 7), rnode(GOUT, 31, 29, 27) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 8), rnode(GOUT, 31, 29, 16) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 9), rnode(GOUT, 31, 29, 5) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 10), rnode(GOUT, 31, 31, 17) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 11), rnode(GOUT, 31, 31, 6) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 12), rnode(GOUT, 31, 30, 49) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 13), rnode(GOUT, 31, 30, 48) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 14), rnode(GOUT, 31, 30, 47) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 15), rnode(GOUT, 31, 30, 46) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 16), rnode(GOUT, 31, 30, 45) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 17), rnode(GOUT, 31, 30, 44) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 18), rnode(GOUT, 31, 30, 43) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 19), rnode(GOUT, 31, 30, 42) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 20), rnode(GOUT, 31, 30, 40) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 21), rnode(GOUT, 31, 30, 39) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 22), rnode(GOUT, 31, 30, 38) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 23), rnode(GOUT, 31, 30, 37) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 24), rnode(GOUT, 31, 30, 36) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 25), rnode(GOUT, 31, 30, 35) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 26), rnode(GOUT, 31, 30, 34) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 27), rnode(GOUT, 31, 30, 33) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 28), rnode(GOUT, 31, 30, 32) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 29), rnode(GOUT, 31, 30, 31) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 30), rnode(GOUT, 31, 30, 29) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 31), rnode(GOUT, 31, 30, 28) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 32), rnode(GOUT, 31, 30, 27) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 33), rnode(GOUT, 31, 30, 26) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 34), rnode(GOUT, 31, 30, 25) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 35), rnode(GOUT, 31, 30, 24) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 36), rnode(GOUT, 31, 30, 23) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 37), rnode(GOUT, 31, 30, 22) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 38), rnode(GOUT, 31, 30, 21) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 39), rnode(GOUT, 31, 30, 20) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 40), rnode(GOUT, 31, 30, 18) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 41), rnode(GOUT, 31, 30, 17) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 42), rnode(GOUT, 31, 30, 16) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 43), rnode(GOUT, 31, 30, 15) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 44), rnode(GOUT, 31, 30, 14) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 45), rnode(GOUT, 31, 30, 13) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 46), rnode(GOUT, 31, 30, 12) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 47), rnode(GOUT, 31, 30, 11) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 48), rnode(GOUT, 31, 30, 10) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 49), rnode(GOUT, 31, 30, 9) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 50), rnode(GOUT, 31, 30, 7) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 51), rnode(GOUT, 31, 30, 6) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 52), rnode(GOUT, 31, 30, 5) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 53), rnode(GOUT, 31, 30, 4) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 54), rnode(GOUT, 31, 30, 3) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 55), rnode(GOUT, 31, 30, 2) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 56), rnode(GOUT, 31, 30, 1) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 57), rnode(GOUT, 31, 30, 0) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 58), rnode(GOUT, 31, 29, 51) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 59), rnode(GOUT, 31, 29, 50) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 60), rnode(GOUT, 31, 29, 48) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 61), rnode(GOUT, 31, 29, 47) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 62), rnode(GOUT, 31, 29, 46) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 63), rnode(GOUT, 31, 29, 45) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 64), rnode(GOUT, 31, 29, 44) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 65), rnode(GOUT, 31, 29, 43) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 66), rnode(GOUT, 31, 29, 42) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 67), rnode(GOUT, 31, 29, 41) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 68), rnode(GOUT, 31, 29, 40) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 69), rnode(GOUT, 31, 29, 39) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 70), rnode(GOUT, 31, 29, 37) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 71), rnode(GOUT, 31, 29, 36) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 72), rnode(GOUT, 31, 29, 35) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 73), rnode(GOUT, 31, 29, 34) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 74), rnode(GOUT, 31, 29, 33) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 75), rnode(GOUT, 31, 29, 32) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 76), rnode(GOUT, 31, 29, 31) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 77), rnode(GOUT, 31, 29, 30) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 78), rnode(GOUT, 31, 29, 29) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 79), rnode(GOUT, 31, 29, 28) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 80), rnode(GOUT, 31, 29, 26) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 81), rnode(GOUT, 31, 29, 25) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 82), rnode(GOUT, 31, 29, 24) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 83), rnode(GOUT, 31, 29, 23) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 84), rnode(GOUT, 31, 29, 22) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 85), rnode(GOUT, 31, 29, 21) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 86), rnode(GOUT, 31, 29, 20) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 87), rnode(GOUT, 31, 29, 19) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 88), rnode(GOUT, 31, 29, 18) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 89), rnode(GOUT, 31, 29, 17) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 90), rnode(GOUT, 31, 29, 15) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 91), rnode(GOUT, 31, 29, 14) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 92), rnode(GOUT, 31, 29, 13) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 93), rnode(GOUT, 31, 29, 12) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 94), rnode(GOUT, 31, 29, 11) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 95), rnode(GOUT, 31, 29, 10) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 96), rnode(GOUT, 31, 29, 9) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 97), rnode(GOUT, 31, 29, 8) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 98), rnode(GOUT, 31, 29, 7) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 99), rnode(GOUT, 31, 29, 6) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 100), rnode(GOUT, 31, 31, 27) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 101), rnode(GOUT, 31, 31, 26) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 102), rnode(GOUT, 31, 31, 25) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 103), rnode(GOUT, 31, 31, 24) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 104), rnode(GOUT, 31, 31, 23) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 105), rnode(GOUT, 31, 31, 22) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 106), rnode(GOUT, 31, 31, 21) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 107), rnode(GOUT, 31, 31, 20) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 108), rnode(GOUT, 31, 31, 19) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 109), rnode(GOUT, 31, 31, 18) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 110), rnode(GOUT, 31, 31, 16) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 111), rnode(GOUT, 31, 31, 15) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 112), rnode(GOUT, 31, 31, 14) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 113), rnode(GOUT, 31, 31, 13) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 114), rnode(GOUT, 31, 31, 12) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 115), rnode(GOUT, 31, 31, 11) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 116), rnode(GOUT, 31, 31, 10) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 117), rnode(GOUT, 31, 31, 9) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 118), rnode(GOUT, 31, 31, 8) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 119), rnode(GOUT, 31, 31, 7) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 120), rnode(GOUT, 31, 31, 5) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 121), rnode(GOUT, 31, 31, 4) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 122), rnode(GOUT, 31, 31, 3) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 123), rnode(GOUT, 31, 31, 2) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 124), rnode(GOUT, 31, 31, 1) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 125), rnode(GOUT, 31, 31, 0) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 126), rnode(GOUT, 31, 30, 51) },
  { pnode(HPS_HPS2FPGA, 32, 24, RDATA, -1, 127), rnode(GOUT, 31, 30, 50) },
  { pnode(HPS_HPS2FPGA, 32, 24, RID, -1, 0), rnode(GOUT, 31, 29, 4) },
  { pnode(HPS_HPS2FPGA, 32, 24, RID, -1, 1), rnode(GOUT, 31, 29, 1) },
  { pnode(HPS_HPS2FPGA, 32, 24, RID, -1, 2), rnode(GOUT, 31, 29, 0) },
  { pnode(HPS_HPS2FPGA, 32, 24, RID, -1, 3), rnode(GOUT, 31, 28, 51) },
  { pnode(HPS_HPS2FPGA, 32, 24, RID, -1, 4), rnode(GOUT, 31, 28, 50) },
  { pnode(HPS_HPS2FPGA, 32, 24, RID, -1, 5), rnode(GOUT, 31, 28, 49) },
  { pnode(HPS_HPS2FPGA, 32, 24, RID, -1, 6), rnode(GOUT, 31, 28, 48) },
  { pnode(HPS_HPS2FPGA, 32, 24, RID, -1, 7), rnode(GOUT, 31, 28, 47) },
  { pnode(HPS_HPS2FPGA, 32, 24, RID, -1, 8), rnode(GOUT, 31, 28, 46) },
  { pnode(HPS_HPS2FPGA, 32, 24, RID, -1, 9), rnode(GOUT, 31, 28, 45) },
  { pnode(HPS_HPS2FPGA, 32, 24, RID, -1, 10), rnode(GOUT, 31, 29, 3) },
  { pnode(HPS_HPS2FPGA, 32, 24, RID, -1, 11), rnode(GOUT, 31, 29, 2) },
  { pnode(HPS_HPS2FPGA, 32, 24, RLAST, -1, -1), rnode(GOUT, 31, 28, 44) },
  { pnode(HPS_HPS2FPGA, 32, 24, RRESP, -1, 0), rnode(GOUT, 31, 28, 43) },
  { pnode(HPS_HPS2FPGA, 32, 24, RRESP, -1, 1), rnode(GOUT, 31, 28, 42) },
  { pnode(HPS_HPS2FPGA, 32, 24, RVALID, -1, -1), rnode(GOUT, 31, 28, 41) },
  { pnode(HPS_HPS2FPGA, 32, 24, WREADY, -1, -1), rnode(GOUT, 31, 28, 40) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 0), rnode(GIN, 31, 31, 47) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 1), rnode(GIN, 31, 31, 36) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 2), rnode(GIN, 31, 31, 25) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 3), rnode(GIN, 31, 31, 24) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 4), rnode(GIN, 31, 31, 23) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 5), rnode(GIN, 31, 31, 22) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 6), rnode(GIN, 31, 31, 21) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 7), rnode(GIN, 31, 31, 20) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 8), rnode(GIN, 31, 31, 19) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 9), rnode(GIN, 31, 31, 18) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 10), rnode(GIN, 31, 31, 46) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 11), rnode(GIN, 31, 31, 45) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 12), rnode(GIN, 31, 31, 44) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 13), rnode(GIN, 31, 31, 43) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 14), rnode(GIN, 31, 31, 42) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 15), rnode(GIN, 31, 31, 41) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 16), rnode(GIN, 31, 31, 40) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 17), rnode(GIN, 31, 31, 39) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 18), rnode(GIN, 31, 31, 38) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 19), rnode(GIN, 31, 31, 37) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 20), rnode(GIN, 31, 31, 35) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 21), rnode(GIN, 31, 31, 34) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 22), rnode(GIN, 31, 31, 33) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 23), rnode(GIN, 31, 31, 32) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 24), rnode(GIN, 31, 31, 31) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 25), rnode(GIN, 31, 31, 30) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 26), rnode(GIN, 31, 31, 29) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 27), rnode(GIN, 31, 31, 28) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 28), rnode(GIN, 31, 31, 27) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARADDR, -1, 29), rnode(GIN, 31, 31, 26) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARBURST, -1, 0), rnode(GIN, 31, 31, 17) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARBURST, -1, 1), rnode(GIN, 31, 31, 16) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARCACHE, -1, 0), rnode(GIN, 31, 31, 15) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARCACHE, -1, 1), rnode(GIN, 31, 31, 14) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARCACHE, -1, 2), rnode(GIN, 31, 31, 13) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARCACHE, -1, 3), rnode(GIN, 31, 31, 12) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARID, -1, 0), rnode(GIN, 31, 31, 11) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARID, -1, 1), rnode(GIN, 31, 31, 8) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARID, -1, 2), rnode(GIN, 31, 31, 7) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARID, -1, 3), rnode(GIN, 31, 31, 6) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARID, -1, 4), rnode(GIN, 31, 31, 5) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARID, -1, 5), rnode(GIN, 31, 31, 4) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARID, -1, 6), rnode(GIN, 31, 31, 3) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARID, -1, 7), rnode(GIN, 31, 31, 2) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARID, -1, 8), rnode(GIN, 31, 31, 1) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARID, -1, 9), rnode(GIN, 31, 31, 0) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARID, -1, 10), rnode(GIN, 31, 31, 10) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARID, -1, 11), rnode(GIN, 31, 31, 9) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARLEN, -1, 0), rnode(GIN, 31, 30, 54) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARLEN, -1, 1), rnode(GIN, 31, 30, 53) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARLEN, -1, 2), rnode(GIN, 31, 30, 52) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARLEN, -1, 3), rnode(GIN, 31, 30, 51) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARLOCK, -1, 0), rnode(GIN, 31, 30, 50) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARLOCK, -1, 1), rnode(GIN, 31, 30, 49) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARPROT, -1, 0), rnode(GIN, 31, 30, 48) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARPROT, -1, 1), rnode(GIN, 31, 30, 47) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARPROT, -1, 2), rnode(GIN, 31, 30, 46) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARSIZE, -1, 0), rnode(GIN, 31, 30, 45) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARSIZE, -1, 1), rnode(GIN, 31, 30, 44) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARSIZE, -1, 2), rnode(GIN, 31, 30, 43) },
  { pnode(HPS_HPS2FPGA, 32, 24, ARVALID, -1, -1), rnode(GIN, 31, 30, 42) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 0), rnode(GIN, 31, 30, 41) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 1), rnode(GIN, 31, 30, 30) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 2), rnode(GIN, 31, 30, 19) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 3), rnode(GIN, 31, 30, 18) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 4), rnode(GIN, 31, 30, 17) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 5), rnode(GIN, 31, 30, 16) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 6), rnode(GIN, 31, 30, 15) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 7), rnode(GIN, 31, 30, 14) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 8), rnode(GIN, 31, 30, 13) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 9), rnode(GIN, 31, 30, 12) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 10), rnode(GIN, 31, 30, 40) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 11), rnode(GIN, 31, 30, 39) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 12), rnode(GIN, 31, 30, 38) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 13), rnode(GIN, 31, 30, 37) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 14), rnode(GIN, 31, 30, 36) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 15), rnode(GIN, 31, 30, 35) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 16), rnode(GIN, 31, 30, 34) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 17), rnode(GIN, 31, 30, 33) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 18), rnode(GIN, 31, 30, 32) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 19), rnode(GIN, 31, 30, 31) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 20), rnode(GIN, 31, 30, 29) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 21), rnode(GIN, 31, 30, 28) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 22), rnode(GIN, 31, 30, 27) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 23), rnode(GIN, 31, 30, 26) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 24), rnode(GIN, 31, 30, 25) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 25), rnode(GIN, 31, 30, 24) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 26), rnode(GIN, 31, 30, 23) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 27), rnode(GIN, 31, 30, 22) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 28), rnode(GIN, 31, 30, 21) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWADDR, -1, 29), rnode(GIN, 31, 30, 20) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWBURST, -1, 0), rnode(GIN, 31, 30, 11) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWBURST, -1, 1), rnode(GIN, 31, 30, 10) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWCACHE, -1, 0), rnode(GIN, 31, 30, 9) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWCACHE, -1, 1), rnode(GIN, 31, 30, 8) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWCACHE, -1, 2), rnode(GIN, 31, 30, 7) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWCACHE, -1, 3), rnode(GIN, 31, 30, 6) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWID, -1, 0), rnode(GIN, 31, 30, 5) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWID, -1, 1), rnode(GIN, 31, 30, 2) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWID, -1, 2), rnode(GIN, 31, 30, 1) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWID, -1, 3), rnode(GIN, 31, 30, 0) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWID, -1, 4), rnode(GIN, 31, 29, 54) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWID, -1, 5), rnode(GIN, 31, 29, 53) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWID, -1, 6), rnode(GIN, 31, 29, 52) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWID, -1, 7), rnode(GIN, 31, 29, 51) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWID, -1, 8), rnode(GIN, 31, 29, 50) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWID, -1, 9), rnode(GIN, 31, 29, 49) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWID, -1, 10), rnode(GIN, 31, 30, 4) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWID, -1, 11), rnode(GIN, 31, 30, 3) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWLEN, -1, 0), rnode(GIN, 31, 29, 48) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWLEN, -1, 1), rnode(GIN, 31, 29, 47) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWLEN, -1, 2), rnode(GIN, 31, 29, 46) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWLEN, -1, 3), rnode(GIN, 31, 29, 45) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWLOCK, -1, 0), rnode(GIN, 31, 29, 44) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWLOCK, -1, 1), rnode(GIN, 31, 29, 43) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWPROT, -1, 0), rnode(GIN, 31, 29, 42) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWPROT, -1, 1), rnode(GIN, 31, 29, 41) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWPROT, -1, 2), rnode(GIN, 31, 29, 40) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWSIZE, -1, 0), rnode(GIN, 31, 29, 39) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWSIZE, -1, 1), rnode(GIN, 31, 29, 38) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWSIZE, -1, 2), rnode(GIN, 31, 29, 37) },
  { pnode(HPS_HPS2FPGA, 32, 24, AWVALID, -1, -1), rnode(GIN, 31, 29, 36) },
  { pnode(HPS_HPS2FPGA, 32, 24, BREADY, -1, -1), rnode(GIN, 31, 29, 35) },
  { pnode(HPS_HPS2FPGA, 32, 24, RREADY, -1, -1), rnode(GIN, 31, 29, 34) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 0), rnode(GIN, 31, 29, 33) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 1), rnode(GIN, 31, 28, 49) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 2), rnode(GIN, 31, 28, 38) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 3), rnode(GIN, 31, 28, 27) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 4), rnode(GIN, 31, 28, 16) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 5), rnode(GIN, 31, 28, 5) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 6), rnode(GIN, 31, 27, 49) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 7), rnode(GIN, 31, 27, 38) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 8), rnode(GIN, 31, 27, 27) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 9), rnode(GIN, 31, 27, 16) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 10), rnode(GIN, 31, 29, 22) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 11), rnode(GIN, 31, 29, 11) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 12), rnode(GIN, 31, 29, 2) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 13), rnode(GIN, 31, 29, 1) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 14), rnode(GIN, 31, 29, 0) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 15), rnode(GIN, 31, 28, 54) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 16), rnode(GIN, 31, 28, 53) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 17), rnode(GIN, 31, 28, 52) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 18), rnode(GIN, 31, 28, 51) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 19), rnode(GIN, 31, 28, 50) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 20), rnode(GIN, 31, 28, 48) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 21), rnode(GIN, 31, 28, 47) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 22), rnode(GIN, 31, 28, 46) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 23), rnode(GIN, 31, 28, 45) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 24), rnode(GIN, 31, 28, 44) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 25), rnode(GIN, 31, 28, 43) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 26), rnode(GIN, 31, 28, 42) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 27), rnode(GIN, 31, 28, 41) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 28), rnode(GIN, 31, 28, 40) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 29), rnode(GIN, 31, 28, 39) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 30), rnode(GIN, 31, 28, 37) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 31), rnode(GIN, 31, 28, 36) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 32), rnode(GIN, 31, 28, 35) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 33), rnode(GIN, 31, 28, 34) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 34), rnode(GIN, 31, 28, 33) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 35), rnode(GIN, 31, 28, 32) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 36), rnode(GIN, 31, 28, 31) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 37), rnode(GIN, 31, 28, 30) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 38), rnode(GIN, 31, 28, 29) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 39), rnode(GIN, 31, 28, 28) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 40), rnode(GIN, 31, 28, 26) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 41), rnode(GIN, 31, 28, 25) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 42), rnode(GIN, 31, 28, 24) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 43), rnode(GIN, 31, 28, 23) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 44), rnode(GIN, 31, 28, 22) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 45), rnode(GIN, 31, 28, 21) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 46), rnode(GIN, 31, 28, 20) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 47), rnode(GIN, 31, 28, 19) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 48), rnode(GIN, 31, 28, 18) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 49), rnode(GIN, 31, 28, 17) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 50), rnode(GIN, 31, 28, 15) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 51), rnode(GIN, 31, 28, 14) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 52), rnode(GIN, 31, 28, 13) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 53), rnode(GIN, 31, 28, 12) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 54), rnode(GIN, 31, 28, 11) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 55), rnode(GIN, 31, 28, 10) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 56), rnode(GIN, 31, 28, 9) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 57), rnode(GIN, 31, 28, 8) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 58), rnode(GIN, 31, 28, 7) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 59), rnode(GIN, 31, 28, 6) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 60), rnode(GIN, 31, 28, 4) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 61), rnode(GIN, 31, 28, 3) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 62), rnode(GIN, 31, 28, 2) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 63), rnode(GIN, 31, 28, 1) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 64), rnode(GIN, 31, 28, 0) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 65), rnode(GIN, 31, 27, 54) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 66), rnode(GIN, 31, 27, 53) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 67), rnode(GIN, 31, 27, 52) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 68), rnode(GIN, 31, 27, 51) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 69), rnode(GIN, 31, 27, 50) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 70), rnode(GIN, 31, 27, 48) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 71), rnode(GIN, 31, 27, 47) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 72), rnode(GIN, 31, 27, 46) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 73), rnode(GIN, 31, 27, 45) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 74), rnode(GIN, 31, 27, 44) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 75), rnode(GIN, 31, 27, 43) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 76), rnode(GIN, 31, 27, 42) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 77), rnode(GIN, 31, 27, 41) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 78), rnode(GIN, 31, 27, 40) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 79), rnode(GIN, 31, 27, 39) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 80), rnode(GIN, 31, 27, 37) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 81), rnode(GIN, 31, 27, 36) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 82), rnode(GIN, 31, 27, 35) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 83), rnode(GIN, 31, 27, 34) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 84), rnode(GIN, 31, 27, 33) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 85), rnode(GIN, 31, 27, 32) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 86), rnode(GIN, 31, 27, 31) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 87), rnode(GIN, 31, 27, 30) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 88), rnode(GIN, 31, 27, 29) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 89), rnode(GIN, 31, 27, 28) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 90), rnode(GIN, 31, 27, 26) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 91), rnode(GIN, 31, 27, 25) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 92), rnode(GIN, 31, 27, 24) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 93), rnode(GIN, 31, 27, 23) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 94), rnode(GIN, 31, 27, 22) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 95), rnode(GIN, 31, 27, 21) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 96), rnode(GIN, 31, 27, 20) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 97), rnode(GIN, 31, 27, 19) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 98), rnode(GIN, 31, 27, 18) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 99), rnode(GIN, 31, 27, 17) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 100), rnode(GIN, 31, 29, 32) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 101), rnode(GIN, 31, 29, 31) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 102), rnode(GIN, 31, 29, 30) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 103), rnode(GIN, 31, 29, 29) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 104), rnode(GIN, 31, 29, 28) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 105), rnode(GIN, 31, 29, 27) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 106), rnode(GIN, 31, 29, 26) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 107), rnode(GIN, 31, 29, 25) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 108), rnode(GIN, 31, 29, 24) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 109), rnode(GIN, 31, 29, 23) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 110), rnode(GIN, 31, 29, 21) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 111), rnode(GIN, 31, 29, 20) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 112), rnode(GIN, 31, 29, 19) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 113), rnode(GIN, 31, 29, 18) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 114), rnode(GIN, 31, 29, 17) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 115), rnode(GIN, 31, 29, 16) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 116), rnode(GIN, 31, 29, 15) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 117), rnode(GIN, 31, 29, 14) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 118), rnode(GIN, 31, 29, 13) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 119), rnode(GIN, 31, 29, 12) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 120), rnode(GIN, 31, 29, 10) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 121), rnode(GIN, 31, 29, 9) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 122), rnode(GIN, 31, 29, 8) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 123), rnode(GIN, 31, 29, 7) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 124), rnode(GIN, 31, 29, 6) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 125), rnode(GIN, 31, 29, 5) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 126), rnode(GIN, 31, 29, 4) },
  { pnode(HPS_HPS2FPGA, 32, 24, WDATA, -1, 127), rnode(GIN, 31, 29, 3) },
  { pnode(HPS_HPS2FPGA, 32, 24, WID, -1, 0), rnode(GIN, 31, 27, 15) },
  { pnode(HPS_HPS2FPGA, 32, 24, WID, -1, 1), rnode(GIN, 31, 27, 12) },
  { pnode(HPS_HPS2FPGA, 32, 24, WID, -1, 2), rnode(GIN, 31, 27, 11) },
  { pnode(HPS_HPS2FPGA, 32, 24, WID, -1, 3), rnode(GIN, 31, 27, 10) },
  { pnode(HPS_HPS2FPGA, 32, 24, WID, -1, 4), rnode(GIN, 31, 27, 9) },
  { pnode(HPS_HPS2FPGA, 32, 24, WID, -1, 5), rnode(GIN, 31, 27, 8) },
  { pnode(HPS_HPS2FPGA, 32, 24, WID, -1, 6), rnode(GIN, 31, 27, 7) },
  { pnode(HPS_HPS2FPGA, 32, 24, WID, -1, 7), rnode(GIN, 31, 27, 6) },
  { pnode(HPS_HPS2FPGA, 32, 24, WID, -1, 8), rnode(GIN, 31, 27, 5) },
  { pnode(HPS_HPS2FPGA, 32, 24, WID, -1, 9), rnode(GIN, 31, 27, 4) },
  { pnode(HPS_HPS2FPGA, 32, 24, WID, -1, 10), rnode(GIN, 31, 27, 14) },
  { pnode(HPS_HPS2FPGA, 32, 24, WID, -1, 11), rnode(GIN, 31, 27, 13) },
  { pnode(HPS_HPS2FPGA, 32, 24, WLAST, -1, -1), rnode(GIN, 31, 27, 3) },
  { pnode(HPS_HPS2FPGA, 32, 24, WSTRB, -1, 0), rnode(GIN, 31, 27, 2) },
  { pnode(HPS_HPS2FPGA, 32, 24, WSTRB, -1, 1), rnode(GIN, 31, 26, 50) },
  { pnode(HPS_HPS2FPGA, 32, 24, WSTRB, -1, 2), rnode(GIN, 31, 26, 49) },
  { pnode(HPS_HPS2FPGA, 32, 24, WSTRB, -1, 3), rnode(GIN, 31, 26, 48) },
  { pnode(HPS_HPS2FPGA, 32, 24, WSTRB, -1, 4), rnode(GIN, 31, 26, 47) },
  { pnode(HPS_HPS2FPGA, 32, 24, WSTRB, -1, 5), rnode(GIN, 31, 26, 46) },
  { pnode(HPS_HPS2FPGA, 32, 24, WSTRB, -1, 6), rnode(GIN, 31, 26, 45) },
  { pnode(HPS_HPS2FPGA, 32, 24, WSTRB, -1, 7), rnode(GIN, 31, 26, 44) },
  { pnode(HPS_HPS2FPGA, 32, 24, WSTRB, -1, 8), rnode(GIN, 31, 26, 43) },
  { pnode(HPS_HPS2FPGA, 32, 24, WSTRB, -1, 9), rnode(GIN, 31, 26, 42) },
  { pnode(HPS_HPS2FPGA, 32, 24, WSTRB, -1, 10), rnode(GIN, 31, 27, 1) },
  { pnode(HPS_HPS2FPGA, 32, 24, WSTRB, -1, 11), rnode(GIN, 31, 27, 0) },
  { pnode(HPS_HPS2FPGA, 32, 24, WSTRB, -1, 12), rnode(GIN, 31, 26, 54) },
  { pnode(HPS_HPS2FPGA, 32, 24, WSTRB, -1, 13), rnode(GIN, 31, 26, 53) },
  { pnode(HPS_HPS2FPGA, 32, 24, WSTRB, -1, 14), rnode(GIN, 31, 26, 52) },
  { pnode(HPS_HPS2FPGA, 32, 24, WSTRB, -1, 15), rnode(GIN, 31, 26, 51) },
  { pnode(HPS_HPS2FPGA, 32, 24, WVALID, -1, -1), rnode(GIN, 31, 26, 41) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARREADY, -1, -1), rnode(GOUT, 31, 23, 9) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWREADY, -1, -1), rnode(GOUT, 31, 23, 8) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, BID, -1, 0), rnode(GOUT, 31, 23, 7) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, BID, -1, 1), rnode(GOUT, 31, 23, 4) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, BID, -1, 2), rnode(GOUT, 31, 23, 3) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, BID, -1, 3), rnode(GOUT, 31, 23, 2) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, BID, -1, 4), rnode(GOUT, 31, 23, 1) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, BID, -1, 5), rnode(GOUT, 31, 23, 0) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, BID, -1, 6), rnode(GOUT, 31, 22, 51) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, BID, -1, 7), rnode(GOUT, 31, 22, 50) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, BID, -1, 8), rnode(GOUT, 31, 22, 49) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, BID, -1, 9), rnode(GOUT, 31, 22, 48) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, BID, -1, 10), rnode(GOUT, 31, 23, 6) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, BID, -1, 11), rnode(GOUT, 31, 23, 5) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, BRESP, -1, 0), rnode(GOUT, 31, 22, 47) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, BRESP, -1, 1), rnode(GOUT, 31, 22, 46) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, BVALID, -1, -1), rnode(GOUT, 31, 22, 45) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, CLK, -1, -1), rnode(DCMUX, 31, 26, 1) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 0), rnode(GOUT, 31, 22, 44) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 1), rnode(GOUT, 31, 22, 33) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 2), rnode(GOUT, 31, 22, 22) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 3), rnode(GOUT, 31, 22, 19) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 4), rnode(GOUT, 31, 22, 18) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 5), rnode(GOUT, 31, 22, 17) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 6), rnode(GOUT, 31, 22, 16) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 7), rnode(GOUT, 31, 22, 15) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 8), rnode(GOUT, 31, 22, 14) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 9), rnode(GOUT, 31, 22, 13) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 10), rnode(GOUT, 31, 22, 43) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 11), rnode(GOUT, 31, 22, 42) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 12), rnode(GOUT, 31, 22, 41) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 13), rnode(GOUT, 31, 22, 40) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 14), rnode(GOUT, 31, 22, 39) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 15), rnode(GOUT, 31, 22, 38) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 16), rnode(GOUT, 31, 22, 37) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 17), rnode(GOUT, 31, 22, 36) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 18), rnode(GOUT, 31, 22, 35) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 19), rnode(GOUT, 31, 22, 34) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 20), rnode(GOUT, 31, 22, 32) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 21), rnode(GOUT, 31, 22, 31) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 22), rnode(GOUT, 31, 22, 30) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 23), rnode(GOUT, 31, 22, 29) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 24), rnode(GOUT, 31, 22, 28) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 25), rnode(GOUT, 31, 22, 27) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 26), rnode(GOUT, 31, 22, 26) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 27), rnode(GOUT, 31, 22, 25) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 28), rnode(GOUT, 31, 22, 24) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 29), rnode(GOUT, 31, 22, 23) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 30), rnode(GOUT, 31, 22, 21) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RDATA, -1, 31), rnode(GOUT, 31, 22, 20) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RID, -1, 0), rnode(GOUT, 31, 22, 12) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RID, -1, 1), rnode(GOUT, 31, 22, 9) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RID, -1, 2), rnode(GOUT, 31, 22, 8) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RID, -1, 3), rnode(GOUT, 31, 22, 7) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RID, -1, 4), rnode(GOUT, 31, 22, 6) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RID, -1, 5), rnode(GOUT, 31, 22, 5) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RID, -1, 6), rnode(GOUT, 31, 22, 4) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RID, -1, 7), rnode(GOUT, 31, 22, 3) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RID, -1, 8), rnode(GOUT, 31, 22, 2) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RID, -1, 9), rnode(GOUT, 31, 22, 1) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RID, -1, 10), rnode(GOUT, 31, 22, 11) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RID, -1, 11), rnode(GOUT, 31, 22, 10) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RLAST, -1, -1), rnode(GOUT, 31, 22, 0) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RRESP, -1, 0), rnode(GOUT, 31, 21, 51) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RRESP, -1, 1), rnode(GOUT, 31, 21, 50) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RVALID, -1, -1), rnode(GOUT, 31, 21, 49) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WREADY, -1, -1), rnode(GOUT, 31, 21, 48) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARADDR, -1, 0), rnode(GIN, 31, 23, 50) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARADDR, -1, 1), rnode(GIN, 31, 23, 39) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARADDR, -1, 2), rnode(GIN, 31, 23, 37) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARADDR, -1, 3), rnode(GIN, 31, 23, 36) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARADDR, -1, 4), rnode(GIN, 31, 23, 35) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARADDR, -1, 5), rnode(GIN, 31, 23, 34) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARADDR, -1, 6), rnode(GIN, 31, 23, 33) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARADDR, -1, 7), rnode(GIN, 31, 23, 32) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARADDR, -1, 8), rnode(GIN, 31, 23, 31) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARADDR, -1, 9), rnode(GIN, 31, 23, 30) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARADDR, -1, 10), rnode(GIN, 31, 23, 49) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARADDR, -1, 11), rnode(GIN, 31, 23, 48) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARADDR, -1, 12), rnode(GIN, 31, 23, 47) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARADDR, -1, 13), rnode(GIN, 31, 23, 46) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARADDR, -1, 14), rnode(GIN, 31, 23, 45) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARADDR, -1, 15), rnode(GIN, 31, 23, 44) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARADDR, -1, 16), rnode(GIN, 31, 23, 43) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARADDR, -1, 17), rnode(GIN, 31, 23, 42) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARADDR, -1, 18), rnode(GIN, 31, 23, 41) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARADDR, -1, 19), rnode(GIN, 31, 23, 40) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARADDR, -1, 20), rnode(GIN, 31, 23, 38) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARBURST, -1, 0), rnode(GIN, 31, 23, 29) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARBURST, -1, 1), rnode(GIN, 31, 23, 28) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARCACHE, -1, 0), rnode(GIN, 31, 23, 27) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARCACHE, -1, 1), rnode(GIN, 31, 23, 26) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARCACHE, -1, 2), rnode(GIN, 31, 23, 25) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARCACHE, -1, 3), rnode(GIN, 31, 23, 24) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARID, -1, 0), rnode(GIN, 31, 23, 23) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARID, -1, 1), rnode(GIN, 31, 23, 20) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARID, -1, 2), rnode(GIN, 31, 23, 19) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARID, -1, 3), rnode(GIN, 31, 23, 18) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARID, -1, 4), rnode(GIN, 31, 23, 17) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARID, -1, 5), rnode(GIN, 31, 23, 16) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARID, -1, 6), rnode(GIN, 31, 23, 15) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARID, -1, 7), rnode(GIN, 31, 23, 14) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARID, -1, 8), rnode(GIN, 31, 23, 13) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARID, -1, 9), rnode(GIN, 31, 23, 12) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARID, -1, 10), rnode(GIN, 31, 23, 22) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARID, -1, 11), rnode(GIN, 31, 23, 21) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARLEN, -1, 0), rnode(GIN, 31, 23, 11) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARLEN, -1, 1), rnode(GIN, 31, 23, 10) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARLEN, -1, 2), rnode(GIN, 31, 23, 9) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARLEN, -1, 3), rnode(GIN, 31, 23, 8) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARLOCK, -1, 0), rnode(GIN, 31, 23, 7) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARLOCK, -1, 1), rnode(GIN, 31, 23, 6) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARPROT, -1, 0), rnode(GIN, 31, 23, 5) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARPROT, -1, 1), rnode(GIN, 31, 23, 4) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARPROT, -1, 2), rnode(GIN, 31, 23, 3) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARSIZE, -1, 0), rnode(GIN, 31, 23, 2) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARSIZE, -1, 1), rnode(GIN, 31, 23, 1) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARSIZE, -1, 2), rnode(GIN, 31, 23, 0) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, ARVALID, -1, -1), rnode(GIN, 31, 22, 53) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWADDR, -1, 0), rnode(GIN, 31, 22, 52) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWADDR, -1, 1), rnode(GIN, 31, 22, 41) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWADDR, -1, 2), rnode(GIN, 31, 22, 39) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWADDR, -1, 3), rnode(GIN, 31, 22, 38) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWADDR, -1, 4), rnode(GIN, 31, 22, 37) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWADDR, -1, 5), rnode(GIN, 31, 22, 36) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWADDR, -1, 6), rnode(GIN, 31, 22, 35) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWADDR, -1, 7), rnode(GIN, 31, 22, 34) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWADDR, -1, 8), rnode(GIN, 31, 22, 33) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWADDR, -1, 9), rnode(GIN, 31, 22, 32) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWADDR, -1, 10), rnode(GIN, 31, 22, 51) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWADDR, -1, 11), rnode(GIN, 31, 22, 50) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWADDR, -1, 12), rnode(GIN, 31, 22, 49) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWADDR, -1, 13), rnode(GIN, 31, 22, 48) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWADDR, -1, 14), rnode(GIN, 31, 22, 47) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWADDR, -1, 15), rnode(GIN, 31, 22, 46) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWADDR, -1, 16), rnode(GIN, 31, 22, 45) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWADDR, -1, 17), rnode(GIN, 31, 22, 44) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWADDR, -1, 18), rnode(GIN, 31, 22, 43) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWADDR, -1, 19), rnode(GIN, 31, 22, 42) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWADDR, -1, 20), rnode(GIN, 31, 22, 40) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWBURST, -1, 0), rnode(GIN, 31, 22, 31) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWBURST, -1, 1), rnode(GIN, 31, 22, 30) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWCACHE, -1, 0), rnode(GIN, 31, 22, 29) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWCACHE, -1, 1), rnode(GIN, 31, 22, 28) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWCACHE, -1, 2), rnode(GIN, 31, 22, 27) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWCACHE, -1, 3), rnode(GIN, 31, 22, 26) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWID, -1, 0), rnode(GIN, 31, 22, 25) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWID, -1, 1), rnode(GIN, 31, 22, 22) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWID, -1, 2), rnode(GIN, 31, 22, 21) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWID, -1, 3), rnode(GIN, 31, 22, 20) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWID, -1, 4), rnode(GIN, 31, 22, 19) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWID, -1, 5), rnode(GIN, 31, 22, 18) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWID, -1, 6), rnode(GIN, 31, 22, 17) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWID, -1, 7), rnode(GIN, 31, 22, 16) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWID, -1, 8), rnode(GIN, 31, 22, 15) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWID, -1, 9), rnode(GIN, 31, 22, 14) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWID, -1, 10), rnode(GIN, 31, 22, 24) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWID, -1, 11), rnode(GIN, 31, 22, 23) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWLEN, -1, 0), rnode(GIN, 31, 22, 13) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWLEN, -1, 1), rnode(GIN, 31, 22, 12) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWLEN, -1, 2), rnode(GIN, 31, 22, 11) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWLEN, -1, 3), rnode(GIN, 31, 22, 10) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWLOCK, -1, 0), rnode(GIN, 31, 22, 9) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWLOCK, -1, 1), rnode(GIN, 31, 22, 8) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWPROT, -1, 0), rnode(GIN, 31, 22, 7) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWPROT, -1, 1), rnode(GIN, 31, 22, 6) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWPROT, -1, 2), rnode(GIN, 31, 22, 5) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWSIZE, -1, 0), rnode(GIN, 31, 22, 4) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWSIZE, -1, 1), rnode(GIN, 31, 22, 3) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWSIZE, -1, 2), rnode(GIN, 31, 22, 2) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, AWVALID, -1, -1), rnode(GIN, 31, 22, 1) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, BREADY, -1, -1), rnode(GIN, 31, 22, 0) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, RREADY, -1, -1), rnode(GIN, 31, 21, 53) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 0), rnode(GIN, 31, 21, 52) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 1), rnode(GIN, 31, 21, 41) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 2), rnode(GIN, 31, 21, 30) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 3), rnode(GIN, 31, 21, 27) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 4), rnode(GIN, 31, 21, 26) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 5), rnode(GIN, 31, 21, 25) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 6), rnode(GIN, 31, 21, 24) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 7), rnode(GIN, 31, 21, 23) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 8), rnode(GIN, 31, 21, 22) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 9), rnode(GIN, 31, 21, 21) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 10), rnode(GIN, 31, 21, 51) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 11), rnode(GIN, 31, 21, 50) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 12), rnode(GIN, 31, 21, 49) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 13), rnode(GIN, 31, 21, 48) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 14), rnode(GIN, 31, 21, 47) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 15), rnode(GIN, 31, 21, 46) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 16), rnode(GIN, 31, 21, 45) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 17), rnode(GIN, 31, 21, 44) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 18), rnode(GIN, 31, 21, 43) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 19), rnode(GIN, 31, 21, 42) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 20), rnode(GIN, 31, 21, 40) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 21), rnode(GIN, 31, 21, 39) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 22), rnode(GIN, 31, 21, 38) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 23), rnode(GIN, 31, 21, 37) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 24), rnode(GIN, 31, 21, 36) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 25), rnode(GIN, 31, 21, 35) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 26), rnode(GIN, 31, 21, 34) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 27), rnode(GIN, 31, 21, 33) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 28), rnode(GIN, 31, 21, 32) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 29), rnode(GIN, 31, 21, 31) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 30), rnode(GIN, 31, 21, 29) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WDATA, -1, 31), rnode(GIN, 31, 21, 28) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WID, -1, 0), rnode(GIN, 31, 21, 20) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WID, -1, 1), rnode(GIN, 31, 21, 17) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WID, -1, 2), rnode(GIN, 31, 21, 16) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WID, -1, 3), rnode(GIN, 31, 21, 15) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WID, -1, 4), rnode(GIN, 31, 21, 14) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WID, -1, 5), rnode(GIN, 31, 21, 13) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WID, -1, 6), rnode(GIN, 31, 21, 12) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WID, -1, 7), rnode(GIN, 31, 21, 11) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WID, -1, 8), rnode(GIN, 31, 21, 10) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WID, -1, 9), rnode(GIN, 31, 21, 9) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WID, -1, 10), rnode(GIN, 31, 21, 19) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WID, -1, 11), rnode(GIN, 31, 21, 18) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WLAST, -1, -1), rnode(GIN, 31, 21, 8) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WSTRB, -1, 0), rnode(GIN, 31, 21, 7) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WSTRB, -1, 1), rnode(GIN, 31, 21, 6) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WSTRB, -1, 2), rnode(GIN, 31, 21, 5) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WSTRB, -1, 3), rnode(GIN, 31, 21, 4) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 32, 22, WVALID, -1, -1), rnode(GIN, 31, 21, 3) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 0), rnode(GOUT, 31, 20, 11) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 1), rnode(GOUT, 31, 20, 0) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 2), rnode(GOUT, 31, 19, 41) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 3), rnode(GOUT, 31, 19, 30) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 4), rnode(GOUT, 31, 19, 19) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 5), rnode(GOUT, 31, 19, 8) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 6), rnode(GOUT, 31, 19, 3) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 7), rnode(GOUT, 31, 19, 2) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 8), rnode(GOUT, 31, 19, 1) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 9), rnode(GOUT, 31, 19, 0) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 10), rnode(GOUT, 31, 20, 10) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 11), rnode(GOUT, 31, 20, 9) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 12), rnode(GOUT, 31, 20, 8) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 13), rnode(GOUT, 31, 20, 7) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 14), rnode(GOUT, 31, 20, 6) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 15), rnode(GOUT, 31, 20, 5) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 16), rnode(GOUT, 31, 20, 4) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 17), rnode(GOUT, 31, 20, 3) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 18), rnode(GOUT, 31, 20, 2) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 19), rnode(GOUT, 31, 20, 1) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 20), rnode(GOUT, 31, 19, 51) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 21), rnode(GOUT, 31, 19, 50) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 22), rnode(GOUT, 31, 19, 49) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 23), rnode(GOUT, 31, 19, 48) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 24), rnode(GOUT, 31, 19, 47) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 25), rnode(GOUT, 31, 19, 46) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 26), rnode(GOUT, 31, 19, 45) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 27), rnode(GOUT, 31, 19, 44) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 28), rnode(GOUT, 31, 19, 43) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 29), rnode(GOUT, 31, 19, 42) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 30), rnode(GOUT, 31, 19, 40) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 31), rnode(GOUT, 31, 19, 39) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 32), rnode(GOUT, 31, 19, 38) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 33), rnode(GOUT, 31, 19, 37) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 34), rnode(GOUT, 31, 19, 36) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 35), rnode(GOUT, 31, 19, 35) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 36), rnode(GOUT, 31, 19, 34) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 37), rnode(GOUT, 31, 19, 33) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 38), rnode(GOUT, 31, 19, 32) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 39), rnode(GOUT, 31, 19, 31) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 40), rnode(GOUT, 31, 19, 29) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 41), rnode(GOUT, 31, 19, 28) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 42), rnode(GOUT, 31, 19, 27) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 43), rnode(GOUT, 31, 19, 26) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 44), rnode(GOUT, 31, 19, 25) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 45), rnode(GOUT, 31, 19, 24) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 46), rnode(GOUT, 31, 19, 23) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 47), rnode(GOUT, 31, 19, 22) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 48), rnode(GOUT, 31, 19, 21) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 49), rnode(GOUT, 31, 19, 20) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 50), rnode(GOUT, 31, 19, 18) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 51), rnode(GOUT, 31, 19, 17) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 52), rnode(GOUT, 31, 19, 16) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 53), rnode(GOUT, 31, 19, 15) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 54), rnode(GOUT, 31, 19, 14) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 55), rnode(GOUT, 31, 19, 13) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 56), rnode(GOUT, 31, 19, 12) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 57), rnode(GOUT, 31, 19, 11) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 58), rnode(GOUT, 31, 19, 10) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 59), rnode(GOUT, 31, 19, 9) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 60), rnode(GOUT, 31, 19, 7) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 61), rnode(GOUT, 31, 19, 6) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 62), rnode(GOUT, 31, 19, 5) },
  { pnode(HPS_INTERRUPTS, 32, 19, IRQ, -1, 63), rnode(GOUT, 31, 19, 4) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_CAN_IRQ, 0, -1), rnode(GIN, 31, 60, 38) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_CAN_IRQ, 1, -1), rnode(GIN, 31, 60, 37) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_CLKMGR_IRQ, -1, -1), rnode(GIN, 31, 39, 31) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_CTI_IRQ_N, 0, -1), rnode(GIN, 31, 40, 41) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_CTI_IRQ_N, 1, -1), rnode(GIN, 31, 40, 40) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_DMA_ABORT_IRQ, -1, -1), rnode(GIN, 31, 39, 37) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_DMA_IRQ, 0, -1), rnode(GIN, 31, 59, 35) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_DMA_IRQ, 1, -1), rnode(GIN, 31, 58, 34) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_DMA_IRQ, 2, -1), rnode(GIN, 31, 56, 33) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_DMA_IRQ, 3, -1), rnode(GIN, 31, 54, 36) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_DMA_IRQ, 4, -1), rnode(GIN, 31, 57, 31) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_DMA_IRQ, 5, -1), rnode(GIN, 31, 57, 30) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_DMA_IRQ, 6, -1), rnode(GIN, 31, 57, 29) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_DMA_IRQ, 7, -1), rnode(GIN, 31, 56, 32) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_EMAC_IRQ, 0, -1), rnode(GIN, 31, 39, 36) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_EMAC_IRQ, 1, -1), rnode(GIN, 31, 39, 35) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_FPGA_MAN_IRQ, -1, -1), rnode(GIN, 31, 60, 36) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_GPIO_IRQ, 0, -1), rnode(GIN, 31, 20, 54) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_GPIO_IRQ, 1, -1), rnode(GIN, 31, 19, 61) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_GPIO_IRQ, 2, -1), rnode(GIN, 31, 19, 60) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_I2C_IRQ, 0, -1), rnode(GIN, 31, 20, 61) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_I2C_IRQ, 1, -1), rnode(GIN, 31, 20, 60) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_I2C_EMAC_IRQ, 0, -1), rnode(GIN, 31, 20, 59) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_I2C_EMAC_IRQ, 1, -1), rnode(GIN, 31, 20, 58) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_L4SP_IRQ, 0, -1), rnode(GIN, 31, 19, 59) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_L4SP_IRQ, 1, -1), rnode(GIN, 31, 19, 58) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_MPUWAKEUP_IRQ, -1, -1), rnode(GIN, 31, 26, 56) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_NAND_IRQ, -1, -1), rnode(GIN, 31, 23, 62) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_OSC_IRQ, 0, -1), rnode(GIN, 31, 19, 57) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_OSC_IRQ, 1, -1), rnode(GIN, 31, 19, 56) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_QSPI_IRQ, -1, -1), rnode(GIN, 31, 22, 60) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_SDMMC_IRQ, -1, -1), rnode(GIN, 31, 25, 55) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_SPI_IRQ, 0, -1), rnode(GIN, 31, 21, 58) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_SPI_IRQ, 1, -1), rnode(GIN, 31, 20, 56) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_SPI_IRQ, 2, -1), rnode(GIN, 31, 20, 62) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_SPI_IRQ, 3, -1), rnode(GIN, 31, 40, 39) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_UART_IRQ, 0, -1), rnode(GIN, 31, 20, 57) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_UART_IRQ, 1, -1), rnode(GIN, 31, 20, 55) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_USB_IRQ, 0, -1), rnode(GIN, 31, 39, 34) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_USB_IRQ, 1, -1), rnode(GIN, 31, 39, 33) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_WDOG_IRQ, 0, -1), rnode(GIN, 31, 19, 55) },
  { pnode(HPS_INTERRUPTS, 32, 19, H2F_WDOG_IRQ, 1, -1), rnode(GIN, 31, 19, 54) },
  { pnode(HPS_JTAG, 32, 47, NENAB_JTAG, -1, -1), rnode(GIN, 31, 56, 3) },
  { pnode(HPS_JTAG, 32, 47, NTRST, -1, -1), rnode(GIN, 31, 56, 7) },
  { pnode(HPS_JTAG, 32, 47, TCK, -1, -1), rnode(GIN, 31, 56, 6) },
  { pnode(HPS_JTAG, 32, 47, TDI, -1, -1), rnode(GIN, 31, 56, 5) },
  { pnode(HPS_JTAG, 32, 47, TMS, -1, -1), rnode(GIN, 31, 56, 4) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 0), rnode(GOUT, 31, 54, 23) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 1), rnode(GOUT, 31, 54, 22) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 2), rnode(GOUT, 31, 54, 11) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 3), rnode(GOUT, 31, 54, 0) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 4), rnode(GOUT, 31, 53, 30) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 5), rnode(GOUT, 31, 53, 19) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 6), rnode(GOUT, 31, 53, 8) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 7), rnode(GOUT, 31, 52, 37) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 8), rnode(GOUT, 31, 52, 35) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 9), rnode(GOUT, 31, 52, 34) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 10), rnode(GOUT, 31, 54, 21) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 11), rnode(GOUT, 31, 54, 20) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 12), rnode(GOUT, 31, 54, 19) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 13), rnode(GOUT, 31, 54, 18) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 14), rnode(GOUT, 31, 54, 17) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 15), rnode(GOUT, 31, 54, 16) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 16), rnode(GOUT, 31, 54, 15) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 17), rnode(GOUT, 31, 54, 14) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 18), rnode(GOUT, 31, 54, 13) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 19), rnode(GOUT, 31, 54, 12) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 20), rnode(GOUT, 31, 54, 10) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 21), rnode(GOUT, 31, 54, 9) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 22), rnode(GOUT, 31, 54, 8) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 23), rnode(GOUT, 31, 54, 7) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 24), rnode(GOUT, 31, 54, 6) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 25), rnode(GOUT, 31, 54, 5) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 26), rnode(GOUT, 31, 54, 4) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 27), rnode(GOUT, 31, 54, 3) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 28), rnode(GOUT, 31, 54, 2) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 29), rnode(GOUT, 31, 54, 1) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 30), rnode(GOUT, 31, 53, 40) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 31), rnode(GOUT, 31, 53, 39) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 32), rnode(GOUT, 31, 53, 38) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 33), rnode(GOUT, 31, 53, 37) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 34), rnode(GOUT, 31, 53, 36) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 35), rnode(GOUT, 31, 53, 35) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 36), rnode(GOUT, 31, 53, 34) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 37), rnode(GOUT, 31, 53, 33) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 38), rnode(GOUT, 31, 53, 32) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 39), rnode(GOUT, 31, 53, 31) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 40), rnode(GOUT, 31, 53, 29) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 41), rnode(GOUT, 31, 53, 28) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 42), rnode(GOUT, 31, 53, 27) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 43), rnode(GOUT, 31, 53, 26) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 44), rnode(GOUT, 31, 53, 25) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 45), rnode(GOUT, 31, 53, 24) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 46), rnode(GOUT, 31, 53, 23) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 47), rnode(GOUT, 31, 53, 22) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 48), rnode(GOUT, 31, 53, 21) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 49), rnode(GOUT, 31, 53, 20) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 50), rnode(GOUT, 31, 53, 18) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 51), rnode(GOUT, 31, 53, 17) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 52), rnode(GOUT, 31, 53, 16) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 53), rnode(GOUT, 31, 53, 15) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 54), rnode(GOUT, 31, 53, 14) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 55), rnode(GOUT, 31, 53, 13) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 56), rnode(GOUT, 31, 53, 12) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 57), rnode(GOUT, 31, 53, 11) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 58), rnode(GOUT, 31, 53, 10) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 59), rnode(GOUT, 31, 53, 9) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 60), rnode(GOUT, 31, 53, 7) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 61), rnode(GOUT, 31, 53, 6) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 62), rnode(GOUT, 31, 53, 5) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 63), rnode(GOUT, 31, 53, 4) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 64), rnode(GOUT, 31, 53, 3) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 65), rnode(GOUT, 31, 53, 2) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 66), rnode(GOUT, 31, 53, 1) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 67), rnode(GOUT, 31, 53, 0) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 68), rnode(GOUT, 31, 52, 39) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 69), rnode(GOUT, 31, 52, 38) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OE, -1, 70), rnode(GOUT, 31, 52, 36) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 0), rnode(GOUT, 31, 52, 33) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 1), rnode(GOUT, 31, 52, 32) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 2), rnode(GOUT, 31, 52, 21) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 3), rnode(GOUT, 31, 52, 10) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 4), rnode(GOUT, 31, 51, 39) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 5), rnode(GOUT, 31, 51, 28) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 6), rnode(GOUT, 31, 51, 17) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 7), rnode(GOUT, 31, 51, 6) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 8), rnode(GOUT, 31, 51, 4) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 9), rnode(GOUT, 31, 51, 3) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 10), rnode(GOUT, 31, 52, 31) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 11), rnode(GOUT, 31, 52, 30) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 12), rnode(GOUT, 31, 52, 29) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 13), rnode(GOUT, 31, 52, 28) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 14), rnode(GOUT, 31, 52, 27) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 15), rnode(GOUT, 31, 52, 26) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 16), rnode(GOUT, 31, 52, 25) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 17), rnode(GOUT, 31, 52, 24) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 18), rnode(GOUT, 31, 52, 23) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 19), rnode(GOUT, 31, 52, 22) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 20), rnode(GOUT, 31, 52, 20) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 21), rnode(GOUT, 31, 52, 19) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 22), rnode(GOUT, 31, 52, 18) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 23), rnode(GOUT, 31, 52, 17) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 24), rnode(GOUT, 31, 52, 16) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 25), rnode(GOUT, 31, 52, 15) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 26), rnode(GOUT, 31, 52, 14) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 27), rnode(GOUT, 31, 52, 13) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 28), rnode(GOUT, 31, 52, 12) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 29), rnode(GOUT, 31, 52, 11) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 30), rnode(GOUT, 31, 52, 9) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 31), rnode(GOUT, 31, 52, 8) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 32), rnode(GOUT, 31, 52, 7) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 33), rnode(GOUT, 31, 52, 6) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 34), rnode(GOUT, 31, 52, 5) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 35), rnode(GOUT, 31, 52, 4) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 36), rnode(GOUT, 31, 52, 3) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 37), rnode(GOUT, 31, 52, 2) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 38), rnode(GOUT, 31, 52, 1) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 39), rnode(GOUT, 31, 52, 0) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 40), rnode(GOUT, 31, 51, 38) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 41), rnode(GOUT, 31, 51, 37) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 42), rnode(GOUT, 31, 51, 36) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 43), rnode(GOUT, 31, 51, 35) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 44), rnode(GOUT, 31, 51, 34) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 45), rnode(GOUT, 31, 51, 33) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 46), rnode(GOUT, 31, 51, 32) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 47), rnode(GOUT, 31, 51, 31) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 48), rnode(GOUT, 31, 51, 30) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 49), rnode(GOUT, 31, 51, 29) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 50), rnode(GOUT, 31, 51, 27) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 51), rnode(GOUT, 31, 51, 26) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 52), rnode(GOUT, 31, 51, 25) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 53), rnode(GOUT, 31, 51, 24) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 54), rnode(GOUT, 31, 51, 23) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 55), rnode(GOUT, 31, 51, 22) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 56), rnode(GOUT, 31, 51, 21) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 57), rnode(GOUT, 31, 51, 20) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 58), rnode(GOUT, 31, 51, 19) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 59), rnode(GOUT, 31, 51, 18) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 60), rnode(GOUT, 31, 51, 16) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 61), rnode(GOUT, 31, 51, 15) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 62), rnode(GOUT, 31, 51, 14) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 63), rnode(GOUT, 31, 51, 13) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 64), rnode(GOUT, 31, 51, 12) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 65), rnode(GOUT, 31, 51, 11) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 66), rnode(GOUT, 31, 51, 10) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 67), rnode(GOUT, 31, 51, 9) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 68), rnode(GOUT, 31, 51, 8) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 69), rnode(GOUT, 31, 51, 7) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_OUT, -1, 70), rnode(GOUT, 31, 51, 5) },
  { pnode(HPS_LOAN_IO, 32, 34, INPUT_ONLY, -1, 0), rnode(GIN, 31, 44, 7) },
  { pnode(HPS_LOAN_IO, 32, 34, INPUT_ONLY, -1, 1), rnode(GIN, 31, 44, 2) },
  { pnode(HPS_LOAN_IO, 32, 34, INPUT_ONLY, -1, 2), rnode(GIN, 31, 44, 1) },
  { pnode(HPS_LOAN_IO, 32, 34, INPUT_ONLY, -1, 3), rnode(GIN, 31, 44, 0) },
  { pnode(HPS_LOAN_IO, 32, 34, INPUT_ONLY, -1, 4), rnode(GIN, 31, 43, 29) },
  { pnode(HPS_LOAN_IO, 32, 34, INPUT_ONLY, -1, 5), rnode(GIN, 31, 43, 28) },
  { pnode(HPS_LOAN_IO, 32, 34, INPUT_ONLY, -1, 6), rnode(GIN, 31, 43, 27) },
  { pnode(HPS_LOAN_IO, 32, 34, INPUT_ONLY, -1, 7), rnode(GIN, 31, 43, 26) },
  { pnode(HPS_LOAN_IO, 32, 34, INPUT_ONLY, -1, 8), rnode(GIN, 31, 43, 25) },
  { pnode(HPS_LOAN_IO, 32, 34, INPUT_ONLY, -1, 9), rnode(GIN, 31, 43, 24) },
  { pnode(HPS_LOAN_IO, 32, 34, INPUT_ONLY, -1, 10), rnode(GIN, 31, 44, 6) },
  { pnode(HPS_LOAN_IO, 32, 34, INPUT_ONLY, -1, 11), rnode(GIN, 31, 44, 5) },
  { pnode(HPS_LOAN_IO, 32, 34, INPUT_ONLY, -1, 12), rnode(GIN, 31, 44, 4) },
  { pnode(HPS_LOAN_IO, 32, 34, INPUT_ONLY, -1, 13), rnode(GIN, 31, 44, 3) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 0), rnode(GIN, 31, 53, 22) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 1), rnode(GIN, 31, 53, 21) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 2), rnode(GIN, 31, 53, 10) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 3), rnode(GIN, 31, 52, 32) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 4), rnode(GIN, 31, 52, 21) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 5), rnode(GIN, 31, 52, 10) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 6), rnode(GIN, 31, 51, 32) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 7), rnode(GIN, 31, 51, 21) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 8), rnode(GIN, 31, 51, 19) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 9), rnode(GIN, 31, 51, 18) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 10), rnode(GIN, 31, 53, 20) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 11), rnode(GIN, 31, 53, 19) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 12), rnode(GIN, 31, 53, 18) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 13), rnode(GIN, 31, 53, 17) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 14), rnode(GIN, 31, 53, 16) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 15), rnode(GIN, 31, 53, 15) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 16), rnode(GIN, 31, 53, 14) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 17), rnode(GIN, 31, 53, 13) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 18), rnode(GIN, 31, 53, 12) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 19), rnode(GIN, 31, 53, 11) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 20), rnode(GIN, 31, 53, 9) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 21), rnode(GIN, 31, 53, 8) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 22), rnode(GIN, 31, 53, 7) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 23), rnode(GIN, 31, 53, 6) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 24), rnode(GIN, 31, 53, 5) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 25), rnode(GIN, 31, 53, 4) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 26), rnode(GIN, 31, 53, 3) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 27), rnode(GIN, 31, 53, 2) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 28), rnode(GIN, 31, 53, 1) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 29), rnode(GIN, 31, 53, 0) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 30), rnode(GIN, 31, 52, 31) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 31), rnode(GIN, 31, 52, 30) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 32), rnode(GIN, 31, 52, 29) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 33), rnode(GIN, 31, 52, 28) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 34), rnode(GIN, 31, 52, 27) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 35), rnode(GIN, 31, 52, 26) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 36), rnode(GIN, 31, 52, 25) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 37), rnode(GIN, 31, 52, 24) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 38), rnode(GIN, 31, 52, 23) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 39), rnode(GIN, 31, 52, 22) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 40), rnode(GIN, 31, 52, 20) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 41), rnode(GIN, 31, 52, 19) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 42), rnode(GIN, 31, 52, 18) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 43), rnode(GIN, 31, 52, 17) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 44), rnode(GIN, 31, 52, 16) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 45), rnode(GIN, 31, 52, 15) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 46), rnode(GIN, 31, 52, 14) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 47), rnode(GIN, 31, 52, 13) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 48), rnode(GIN, 31, 52, 12) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 49), rnode(GIN, 31, 52, 11) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 50), rnode(GIN, 31, 52, 9) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 51), rnode(GIN, 31, 52, 8) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 52), rnode(GIN, 31, 52, 7) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 53), rnode(GIN, 31, 52, 6) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 54), rnode(GIN, 31, 52, 5) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 55), rnode(GIN, 31, 52, 4) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 56), rnode(GIN, 31, 52, 3) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 57), rnode(GIN, 31, 52, 2) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 58), rnode(GIN, 31, 52, 1) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 59), rnode(GIN, 31, 52, 0) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 60), rnode(GIN, 31, 51, 31) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 61), rnode(GIN, 31, 51, 30) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 62), rnode(GIN, 31, 51, 29) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 63), rnode(GIN, 31, 51, 28) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 64), rnode(GIN, 31, 51, 27) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 65), rnode(GIN, 31, 51, 26) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 66), rnode(GIN, 31, 51, 25) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 67), rnode(GIN, 31, 51, 24) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 68), rnode(GIN, 31, 51, 23) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 69), rnode(GIN, 31, 51, 22) },
  { pnode(HPS_LOAN_IO, 32, 34, LOANIO_IN, -1, 70), rnode(GIN, 31, 51, 20) },
  { pnode(HPS_MPU_EVENT_STANDBY, 32, 25, EVENTI, -1, -1), rnode(GOUT, 31, 31, 52) },
  { pnode(HPS_MPU_EVENT_STANDBY, 32, 25, EVENTO, -1, -1), rnode(GIN, 31, 31, 54) },
  { pnode(HPS_MPU_EVENT_STANDBY, 32, 25, STANDBYWFE, -1, 0), rnode(GIN, 31, 31, 53) },
  { pnode(HPS_MPU_EVENT_STANDBY, 32, 25, STANDBYWFE, -1, 1), rnode(GIN, 31, 31, 52) },
  { pnode(HPS_MPU_EVENT_STANDBY, 32, 25, STANDBYWFI, -1, 0), rnode(GIN, 31, 31, 51) },
  { pnode(HPS_MPU_EVENT_STANDBY, 32, 25, STANDBYWFI, -1, 1), rnode(GIN, 31, 31, 50) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 0), rnode(GOUT, 31, 57, 0) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 1), rnode(GOUT, 31, 56, 34) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 2), rnode(GOUT, 31, 56, 23) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 3), rnode(GOUT, 31, 56, 20) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 4), rnode(GOUT, 31, 56, 19) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 5), rnode(GOUT, 31, 56, 18) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 6), rnode(GOUT, 31, 56, 17) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 7), rnode(GOUT, 31, 56, 16) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 8), rnode(GOUT, 31, 56, 15) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 9), rnode(GOUT, 31, 56, 14) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 10), rnode(GOUT, 31, 56, 44) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 11), rnode(GOUT, 31, 56, 43) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 12), rnode(GOUT, 31, 56, 42) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 13), rnode(GOUT, 31, 56, 41) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 14), rnode(GOUT, 31, 56, 40) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 15), rnode(GOUT, 31, 56, 39) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 16), rnode(GOUT, 31, 56, 38) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 17), rnode(GOUT, 31, 56, 37) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 18), rnode(GOUT, 31, 56, 36) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 19), rnode(GOUT, 31, 56, 35) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 20), rnode(GOUT, 31, 56, 33) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 21), rnode(GOUT, 31, 56, 32) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 22), rnode(GOUT, 31, 56, 31) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 23), rnode(GOUT, 31, 56, 30) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 24), rnode(GOUT, 31, 56, 29) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 25), rnode(GOUT, 31, 56, 28) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 26), rnode(GOUT, 31, 56, 27) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 27), rnode(GOUT, 31, 56, 26) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 28), rnode(GOUT, 31, 56, 25) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 29), rnode(GOUT, 31, 56, 24) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 30), rnode(GOUT, 31, 56, 22) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_IN, -1, 31), rnode(GOUT, 31, 56, 21) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 0), rnode(GIN, 31, 57, 11) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 1), rnode(GIN, 31, 57, 0) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 2), rnode(GIN, 31, 56, 18) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 3), rnode(GIN, 31, 56, 15) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 4), rnode(GIN, 31, 56, 14) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 5), rnode(GIN, 31, 56, 13) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 6), rnode(GIN, 31, 56, 12) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 7), rnode(GIN, 31, 56, 11) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 8), rnode(GIN, 31, 56, 10) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 9), rnode(GIN, 31, 56, 9) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 10), rnode(GIN, 31, 57, 10) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 11), rnode(GIN, 31, 57, 9) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 12), rnode(GIN, 31, 57, 8) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 13), rnode(GIN, 31, 57, 7) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 14), rnode(GIN, 31, 57, 6) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 15), rnode(GIN, 31, 57, 5) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 16), rnode(GIN, 31, 57, 4) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 17), rnode(GIN, 31, 57, 3) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 18), rnode(GIN, 31, 57, 2) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 19), rnode(GIN, 31, 57, 1) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 20), rnode(GIN, 31, 56, 28) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 21), rnode(GIN, 31, 56, 27) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 22), rnode(GIN, 31, 56, 26) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 23), rnode(GIN, 31, 56, 25) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 24), rnode(GIN, 31, 56, 24) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 25), rnode(GIN, 31, 56, 23) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 26), rnode(GIN, 31, 56, 22) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 27), rnode(GIN, 31, 56, 21) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 28), rnode(GIN, 31, 56, 20) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 29), rnode(GIN, 31, 56, 19) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 30), rnode(GIN, 31, 56, 17) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 32, 51, GP_OUT, -1, 31), rnode(GIN, 31, 56, 16) },
  { pnode(HPS_PERIPHERAL_CAN, 32, 42, RXD, -1, -1), rnode(GOUT, 31, 56, 3) },
  { pnode(HPS_PERIPHERAL_CAN, 32, 42, TXD, -1, -1), rnode(GIN, 31, 56, 1) },
  { pnode(HPS_PERIPHERAL_CAN, 32, 43, RXD, -1, -1), rnode(GOUT, 31, 56, 1) },
  { pnode(HPS_PERIPHERAL_CAN, 32, 43, TXD, -1, -1), rnode(GIN, 31, 56, 0) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, CLK_RX_I, -1, -1), rnode(DCMUX, 31, 45, 2) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, CLK_TX_I, -1, -1), rnode(DCMUX, 31, 45, 1) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, GMII_MDI_I, -1, -1), rnode(GOUT, 31, 50, 27) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, PHY_COL_I, -1, -1), rnode(GOUT, 31, 50, 26) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, PHY_CRS_I, -1, -1), rnode(GOUT, 31, 50, 25) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, PHY_RXDV_I, -1, -1), rnode(GOUT, 31, 50, 16) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, PHY_RXD_I, -1, 0), rnode(GOUT, 31, 50, 24) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, PHY_RXD_I, -1, 1), rnode(GOUT, 31, 50, 23) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, PHY_RXD_I, -1, 2), rnode(GOUT, 31, 50, 22) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, PHY_RXD_I, -1, 3), rnode(GOUT, 31, 50, 21) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, PHY_RXD_I, -1, 4), rnode(GOUT, 31, 50, 20) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, PHY_RXD_I, -1, 5), rnode(GOUT, 31, 50, 19) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, PHY_RXD_I, -1, 6), rnode(GOUT, 31, 50, 18) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, PHY_RXD_I, -1, 7), rnode(GOUT, 31, 50, 17) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, PHY_RXER_I, -1, -1), rnode(GOUT, 31, 50, 15) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, PTP_AUX_TS_TRIG_I, -1, -1), rnode(GOUT, 31, 50, 14) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, GMII_MDC_O, -1, -1), rnode(GIN, 31, 50, 32) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, GMII_MDO_O, -1, -1), rnode(GIN, 31, 50, 31) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, GMII_MDO_O_E, -1, -1), rnode(GIN, 31, 50, 30) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, PHY_TXD_O, -1, 0), rnode(GIN, 31, 50, 29) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, PHY_TXD_O, -1, 1), rnode(GIN, 31, 50, 28) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, PHY_TXD_O, -1, 2), rnode(GIN, 31, 50, 27) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, PHY_TXD_O, -1, 3), rnode(GIN, 31, 50, 26) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, PHY_TXD_O, -1, 4), rnode(GIN, 31, 50, 25) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, PHY_TXD_O, -1, 5), rnode(GIN, 31, 50, 24) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, PHY_TXD_O, -1, 6), rnode(GIN, 31, 50, 23) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, PHY_TXD_O, -1, 7), rnode(GIN, 31, 50, 22) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, PHY_TXEN_O, -1, -1), rnode(GIN, 31, 50, 21) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, PHY_TXER_O, -1, -1), rnode(GIN, 31, 50, 20) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, PTP_PPS_O, -1, -1), rnode(GIN, 31, 50, 19) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, RST_CLK_RX_N_O, -1, -1), rnode(GIN, 31, 50, 18) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 28, RST_CLK_TX_N_O, -1, -1), rnode(GIN, 31, 50, 17) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, CLK_RX_I, -1, -1), rnode(DCMUX, 31, 58, 2) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, CLK_TX_I, -1, -1), rnode(DCMUX, 31, 58, 1) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, GMII_MDI_I, -1, -1), rnode(GOUT, 31, 57, 27) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, PHY_COL_I, -1, -1), rnode(GOUT, 31, 57, 26) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, PHY_CRS_I, -1, -1), rnode(GOUT, 31, 57, 25) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, PHY_RXDV_I, -1, -1), rnode(GOUT, 31, 57, 16) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, PHY_RXD_I, -1, 0), rnode(GOUT, 31, 57, 24) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, PHY_RXD_I, -1, 1), rnode(GOUT, 31, 57, 23) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, PHY_RXD_I, -1, 2), rnode(GOUT, 31, 57, 22) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, PHY_RXD_I, -1, 3), rnode(GOUT, 31, 57, 21) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, PHY_RXD_I, -1, 4), rnode(GOUT, 31, 57, 20) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, PHY_RXD_I, -1, 5), rnode(GOUT, 31, 57, 19) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, PHY_RXD_I, -1, 6), rnode(GOUT, 31, 57, 18) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, PHY_RXD_I, -1, 7), rnode(GOUT, 31, 57, 17) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, PHY_RXER_I, -1, -1), rnode(GOUT, 31, 57, 15) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, PTP_AUX_TS_TRIG_I, -1, -1), rnode(GOUT, 31, 57, 14) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, GMII_MDC_O, -1, -1), rnode(GIN, 31, 59, 20) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, GMII_MDO_O, -1, -1), rnode(GIN, 31, 59, 19) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, GMII_MDO_O_E, -1, -1), rnode(GIN, 31, 59, 18) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, PHY_TXD_O, -1, 0), rnode(GIN, 31, 59, 17) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, PHY_TXD_O, -1, 1), rnode(GIN, 31, 59, 16) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, PHY_TXD_O, -1, 2), rnode(GIN, 31, 59, 15) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, PHY_TXD_O, -1, 3), rnode(GIN, 31, 59, 14) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, PHY_TXD_O, -1, 4), rnode(GIN, 31, 59, 13) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, PHY_TXD_O, -1, 5), rnode(GIN, 31, 59, 12) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, PHY_TXD_O, -1, 6), rnode(GIN, 31, 59, 11) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, PHY_TXD_O, -1, 7), rnode(GIN, 31, 59, 10) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, PHY_TXEN_O, -1, -1), rnode(GIN, 31, 59, 9) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, PHY_TXER_O, -1, -1), rnode(GIN, 31, 59, 8) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, PTP_PPS_O, -1, -1), rnode(GIN, 31, 59, 7) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, RST_CLK_RX_N_O, -1, -1), rnode(GIN, 31, 59, 6) },
  { pnode(HPS_PERIPHERAL_EMAC, 32, 49, RST_CLK_TX_N_O, -1, -1), rnode(GIN, 31, 59, 5) },
  { pnode(HPS_PERIPHERAL_I2C, 32, 30, SCL, -1, -1), rnode(DCMUX, 31, 49, 1) },
  { pnode(HPS_PERIPHERAL_I2C, 32, 30, SDA, -1, -1), rnode(GOUT, 31, 54, 27) },
  { pnode(HPS_PERIPHERAL_I2C, 32, 30, OUT_CLK, -1, -1), rnode(GIN, 31, 53, 30) },
  { pnode(HPS_PERIPHERAL_I2C, 32, 30, OUT_DATA, -1, -1), rnode(GIN, 31, 53, 29) },
  { pnode(HPS_PERIPHERAL_I2C, 32, 31, SCL, -1, -1), rnode(DCMUX, 31, 50, 1) },
  { pnode(HPS_PERIPHERAL_I2C, 32, 31, SDA, -1, -1), rnode(GOUT, 31, 54, 26) },
  { pnode(HPS_PERIPHERAL_I2C, 32, 31, OUT_CLK, -1, -1), rnode(GIN, 31, 53, 28) },
  { pnode(HPS_PERIPHERAL_I2C, 32, 31, OUT_DATA, -1, -1), rnode(GIN, 31, 53, 27) },
  { pnode(HPS_PERIPHERAL_I2C, 32, 32, SCL, -1, -1), rnode(DCMUX, 31, 48, 2) },
  { pnode(HPS_PERIPHERAL_I2C, 32, 32, SDA, -1, -1), rnode(GOUT, 31, 54, 25) },
  { pnode(HPS_PERIPHERAL_I2C, 32, 32, OUT_CLK, -1, -1), rnode(GIN, 31, 53, 26) },
  { pnode(HPS_PERIPHERAL_I2C, 32, 32, OUT_DATA, -1, -1), rnode(GIN, 31, 53, 25) },
  { pnode(HPS_PERIPHERAL_I2C, 32, 33, SCL, -1, -1), rnode(DCMUX, 31, 48, 1) },
  { pnode(HPS_PERIPHERAL_I2C, 32, 33, SDA, -1, -1), rnode(GOUT, 31, 54, 24) },
  { pnode(HPS_PERIPHERAL_I2C, 32, 33, OUT_CLK, -1, -1), rnode(GIN, 31, 53, 24) },
  { pnode(HPS_PERIPHERAL_I2C, 32, 33, OUT_DATA, -1, -1), rnode(GIN, 31, 53, 23) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, ADQ_IN, -1, 0), rnode(GOUT, 31, 51, 2) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, ADQ_IN, -1, 1), rnode(GOUT, 31, 51, 1) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, ADQ_IN, -1, 2), rnode(GOUT, 31, 51, 0) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, ADQ_IN, -1, 3), rnode(GOUT, 31, 50, 39) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, ADQ_IN, -1, 4), rnode(GOUT, 31, 50, 38) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, ADQ_IN, -1, 5), rnode(GOUT, 31, 50, 37) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, ADQ_IN, -1, 6), rnode(GOUT, 31, 50, 36) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, ADQ_IN, -1, 7), rnode(GOUT, 31, 50, 35) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, RDY_BUSY, -1, 0), rnode(GOUT, 31, 50, 34) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, RDY_BUSY, -1, 1), rnode(GOUT, 31, 50, 33) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, RDY_BUSY, -1, 2), rnode(GOUT, 31, 50, 32) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, RDY_BUSY, -1, 3), rnode(GOUT, 31, 50, 31) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, ADQ_OE, -1, -1), rnode(GIN, 31, 51, 17) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, ADQ_OUT, -1, 0), rnode(GIN, 31, 51, 16) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, ADQ_OUT, -1, 1), rnode(GIN, 31, 51, 15) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, ADQ_OUT, -1, 2), rnode(GIN, 31, 51, 14) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, ADQ_OUT, -1, 3), rnode(GIN, 31, 51, 13) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, ADQ_OUT, -1, 4), rnode(GIN, 31, 51, 12) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, ADQ_OUT, -1, 5), rnode(GIN, 31, 51, 11) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, ADQ_OUT, -1, 6), rnode(GIN, 31, 51, 10) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, ADQ_OUT, -1, 7), rnode(GIN, 31, 51, 9) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, ALE, -1, -1), rnode(GIN, 31, 51, 8) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, CEBAR, -1, 0), rnode(GIN, 31, 51, 7) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, CEBAR, -1, 1), rnode(GIN, 31, 51, 6) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, CEBAR, -1, 2), rnode(GIN, 31, 51, 5) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, CEBAR, -1, 3), rnode(GIN, 31, 51, 4) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, CLE, -1, -1), rnode(GIN, 31, 51, 3) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, REBAR, -1, -1), rnode(GIN, 31, 51, 2) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, WEBAR, -1, -1), rnode(GIN, 31, 51, 1) },
  { pnode(HPS_PERIPHERAL_NAND, 32, 26, WPBAR, -1, -1), rnode(GIN, 31, 51, 0) },
  { pnode(HPS_PERIPHERAL_QSPI, 32, 37, MI, 0, -1), rnode(GOUT, 31, 55, 1) },
  { pnode(HPS_PERIPHERAL_QSPI, 32, 37, MI, 1, -1), rnode(GOUT, 31, 55, 0) },
  { pnode(HPS_PERIPHERAL_QSPI, 32, 37, MI, 2, -1), rnode(GOUT, 31, 54, 40) },
  { pnode(HPS_PERIPHERAL_QSPI, 32, 37, MI, 3, -1), rnode(GOUT, 31, 54, 39) },
  { pnode(HPS_PERIPHERAL_QSPI, 32, 37, MO, 0, -1), rnode(GIN, 31, 54, 19) },
  { pnode(HPS_PERIPHERAL_QSPI, 32, 37, MO, 1, -1), rnode(GIN, 31, 54, 18) },
  { pnode(HPS_PERIPHERAL_QSPI, 32, 37, MO, 2, -1), rnode(GIN, 31, 54, 17) },
  { pnode(HPS_PERIPHERAL_QSPI, 32, 37, MO, 3, -1), rnode(GIN, 31, 54, 16) },
  { pnode(HPS_PERIPHERAL_QSPI, 32, 37, N_MO_EN, -1, 0), rnode(GIN, 31, 54, 15) },
  { pnode(HPS_PERIPHERAL_QSPI, 32, 37, N_MO_EN, -1, 1), rnode(GIN, 31, 54, 14) },
  { pnode(HPS_PERIPHERAL_QSPI, 32, 37, N_MO_EN, -1, 2), rnode(GIN, 31, 54, 13) },
  { pnode(HPS_PERIPHERAL_QSPI, 32, 37, N_MO_EN, -1, 3), rnode(GIN, 31, 54, 12) },
  { pnode(HPS_PERIPHERAL_QSPI, 32, 37, N_SS_OUT, -1, 0), rnode(GIN, 31, 54, 11) },
  { pnode(HPS_PERIPHERAL_QSPI, 32, 37, N_SS_OUT, -1, 1), rnode(GIN, 31, 54, 10) },
  { pnode(HPS_PERIPHERAL_QSPI, 32, 37, N_SS_OUT, -1, 2), rnode(GIN, 31, 54, 9) },
  { pnode(HPS_PERIPHERAL_QSPI, 32, 37, N_SS_OUT, -1, 3), rnode(GIN, 31, 54, 8) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, CARD_INTN_I, -1, -1), rnode(GOUT, 31, 55, 15) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, CDN_I, -1, -1), rnode(GOUT, 31, 55, 14) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, CLK_IN, -1, -1), rnode(GOUT, 31, 55, 13) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, CMD_I, -1, -1), rnode(GOUT, 31, 55, 12) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, DATA_I, -1, 0), rnode(GOUT, 31, 55, 11) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, DATA_I, -1, 1), rnode(GOUT, 31, 55, 10) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, DATA_I, -1, 2), rnode(GOUT, 31, 55, 9) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, DATA_I, -1, 3), rnode(GOUT, 31, 55, 8) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, DATA_I, -1, 4), rnode(GOUT, 31, 55, 7) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, DATA_I, -1, 5), rnode(GOUT, 31, 55, 6) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, DATA_I, -1, 6), rnode(GOUT, 31, 55, 5) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, DATA_I, -1, 7), rnode(GOUT, 31, 55, 4) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, WP_I, -1, -1), rnode(GOUT, 31, 55, 3) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, CCLK_OUT, -1, -1), rnode(GIN, 31, 55, 8) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, CMD_EN, -1, -1), rnode(GIN, 31, 55, 7) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, CMD_O, -1, -1), rnode(GIN, 31, 55, 6) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, DATA_EN, -1, 0), rnode(GIN, 31, 55, 5) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, DATA_EN, -1, 1), rnode(GIN, 31, 55, 4) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, DATA_EN, -1, 2), rnode(GIN, 31, 55, 3) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, DATA_EN, -1, 3), rnode(GIN, 31, 55, 2) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, DATA_EN, -1, 4), rnode(GIN, 31, 55, 1) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, DATA_EN, -1, 5), rnode(GIN, 31, 55, 0) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, DATA_EN, -1, 6), rnode(GIN, 31, 54, 32) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, DATA_EN, -1, 7), rnode(GIN, 31, 54, 31) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, DATA_O, -1, 0), rnode(GIN, 31, 54, 30) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, DATA_O, -1, 1), rnode(GIN, 31, 54, 29) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, DATA_O, -1, 2), rnode(GIN, 31, 54, 28) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, DATA_O, -1, 3), rnode(GIN, 31, 54, 27) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, DATA_O, -1, 4), rnode(GIN, 31, 54, 26) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, DATA_O, -1, 5), rnode(GIN, 31, 54, 25) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, DATA_O, -1, 6), rnode(GIN, 31, 54, 24) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, DATA_O, -1, 7), rnode(GIN, 31, 54, 23) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, PWR_ENA_O, -1, -1), rnode(GIN, 31, 54, 22) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, RSTN_O, -1, -1), rnode(GIN, 31, 54, 21) },
  { pnode(HPS_PERIPHERAL_SDMMC, 32, 40, VS_O, -1, -1), rnode(GIN, 31, 54, 20) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 32, 44, RXD, -1, -1), rnode(GOUT, 31, 55, 24) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 32, 44, SS_IN_N, -1, -1), rnode(GOUT, 31, 55, 23) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 32, 44, SSI_OE_N, -1, -1), rnode(GIN, 31, 55, 20) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 32, 44, SS_N, 0, -1), rnode(GIN, 31, 55, 24) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 32, 44, SS_N, 1, -1), rnode(GIN, 31, 55, 23) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 32, 44, SS_N, 2, -1), rnode(GIN, 31, 55, 22) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 32, 44, SS_N, 3, -1), rnode(GIN, 31, 55, 21) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 32, 44, TXD, -1, -1), rnode(GIN, 31, 55, 19) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 32, 45, RXD, -1, -1), rnode(GOUT, 31, 55, 21) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 32, 45, SS_IN_N, -1, -1), rnode(GOUT, 31, 55, 20) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 32, 45, SSI_OE_N, -1, -1), rnode(GIN, 31, 55, 14) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 32, 45, SS_N, 0, -1), rnode(GIN, 31, 55, 18) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 32, 45, SS_N, 1, -1), rnode(GIN, 31, 55, 17) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 32, 45, SS_N, 2, -1), rnode(GIN, 31, 55, 16) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 32, 45, SS_N, 3, -1), rnode(GIN, 31, 55, 15) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 32, 45, TXD, -1, -1), rnode(GIN, 31, 55, 13) },
  { pnode(HPS_PERIPHERAL_SPI_SLAVE, 32, 35, RXD, -1, -1), rnode(GOUT, 31, 55, 19) },
  { pnode(HPS_PERIPHERAL_SPI_SLAVE, 32, 35, SCLK_IN, -1, -1), rnode(DCMUX, 31, 51, 1) },
  { pnode(HPS_PERIPHERAL_SPI_SLAVE, 32, 35, SS_IN_N, -1, -1), rnode(GOUT, 31, 55, 18) },
  { pnode(HPS_PERIPHERAL_SPI_SLAVE, 32, 35, SSI_OE_N, -1, -1), rnode(GIN, 31, 55, 12) },
  { pnode(HPS_PERIPHERAL_SPI_SLAVE, 32, 35, TXD, -1, -1), rnode(GIN, 31, 55, 11) },
  { pnode(HPS_PERIPHERAL_SPI_SLAVE, 32, 36, RXD, -1, -1), rnode(GOUT, 31, 55, 17) },
  { pnode(HPS_PERIPHERAL_SPI_SLAVE, 32, 36, SCLK_IN, -1, -1), rnode(DCMUX, 31, 52, 1) },
  { pnode(HPS_PERIPHERAL_SPI_SLAVE, 32, 36, SS_IN_N, -1, -1), rnode(GOUT, 31, 55, 16) },
  { pnode(HPS_PERIPHERAL_SPI_SLAVE, 32, 36, SSI_OE_N, -1, -1), rnode(GIN, 31, 55, 10) },
  { pnode(HPS_PERIPHERAL_SPI_SLAVE, 32, 36, TXD, -1, -1), rnode(GIN, 31, 55, 9) },
  { pnode(HPS_PERIPHERAL_UART, 32, 38, CTS, -1, -1), rnode(GOUT, 31, 54, 37) },
  { pnode(HPS_PERIPHERAL_UART, 32, 38, DCD, -1, -1), rnode(GOUT, 31, 54, 36) },
  { pnode(HPS_PERIPHERAL_UART, 32, 38, DSR, -1, -1), rnode(GOUT, 31, 54, 35) },
  { pnode(HPS_PERIPHERAL_UART, 32, 38, RI, -1, -1), rnode(GOUT, 31, 54, 34) },
  { pnode(HPS_PERIPHERAL_UART, 32, 38, RXD, -1, -1), rnode(GOUT, 31, 54, 33) },
  { pnode(HPS_PERIPHERAL_UART, 32, 38, DTR, -1, -1), rnode(GIN, 31, 54, 7) },
  { pnode(HPS_PERIPHERAL_UART, 32, 38, OUT_N, 0, -1), rnode(GIN, 31, 54, 6) },
  { pnode(HPS_PERIPHERAL_UART, 32, 38, OUT_N, 1, -1), rnode(GIN, 31, 54, 5) },
  { pnode(HPS_PERIPHERAL_UART, 32, 38, RTS, -1, -1), rnode(GIN, 31, 54, 4) },
  { pnode(HPS_PERIPHERAL_UART, 32, 38, TXD, -1, -1), rnode(GIN, 31, 54, 3) },
  { pnode(HPS_PERIPHERAL_UART, 32, 39, CTS, -1, -1), rnode(GOUT, 31, 54, 32) },
  { pnode(HPS_PERIPHERAL_UART, 32, 39, DCD, -1, -1), rnode(GOUT, 31, 54, 31) },
  { pnode(HPS_PERIPHERAL_UART, 32, 39, DSR, -1, -1), rnode(GOUT, 31, 54, 30) },
  { pnode(HPS_PERIPHERAL_UART, 32, 39, RI, -1, -1), rnode(GOUT, 31, 54, 29) },
  { pnode(HPS_PERIPHERAL_UART, 32, 39, RXD, -1, -1), rnode(GOUT, 31, 54, 28) },
  { pnode(HPS_PERIPHERAL_UART, 32, 39, DTR, -1, -1), rnode(GIN, 31, 54, 2) },
  { pnode(HPS_PERIPHERAL_UART, 32, 39, OUT_N, 0, -1), rnode(GIN, 31, 54, 1) },
  { pnode(HPS_PERIPHERAL_UART, 32, 39, OUT_N, 1, -1), rnode(GIN, 31, 54, 0) },
  { pnode(HPS_PERIPHERAL_UART, 32, 39, RTS, -1, -1), rnode(GIN, 31, 53, 32) },
  { pnode(HPS_PERIPHERAL_UART, 32, 39, TXD, -1, -1), rnode(GIN, 31, 53, 31) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, CLK, -1, -1), rnode(DCMUX, 31, 46, 1) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, DATAIN, -1, 0), rnode(GOUT, 31, 50, 12) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, DATAIN, -1, 1), rnode(GOUT, 31, 50, 11) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, DATAIN, -1, 2), rnode(GOUT, 31, 50, 10) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, DATAIN, -1, 3), rnode(GOUT, 31, 50, 9) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, DATAIN, -1, 4), rnode(GOUT, 31, 50, 8) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, DATAIN, -1, 5), rnode(GOUT, 31, 50, 7) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, DATAIN, -1, 6), rnode(GOUT, 31, 50, 6) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, DATAIN, -1, 7), rnode(GOUT, 31, 50, 5) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, DIR, -1, -1), rnode(GOUT, 31, 50, 4) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, NXT, -1, -1), rnode(GOUT, 31, 50, 3) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, DATAOUT, -1, 0), rnode(GIN, 31, 50, 8) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, DATAOUT, -1, 1), rnode(GIN, 31, 50, 7) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, DATAOUT, -1, 2), rnode(GIN, 31, 50, 6) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, DATAOUT, -1, 3), rnode(GIN, 31, 50, 5) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, DATAOUT, -1, 4), rnode(GIN, 31, 50, 4) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, DATAOUT, -1, 5), rnode(GIN, 31, 50, 3) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, DATAOUT, -1, 6), rnode(GIN, 31, 50, 2) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, DATAOUT, -1, 7), rnode(GIN, 31, 50, 1) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, DATA_OUT_EN, -1, 0), rnode(GIN, 31, 50, 16) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, DATA_OUT_EN, -1, 1), rnode(GIN, 31, 50, 15) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, DATA_OUT_EN, -1, 2), rnode(GIN, 31, 50, 14) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, DATA_OUT_EN, -1, 3), rnode(GIN, 31, 50, 13) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, DATA_OUT_EN, -1, 4), rnode(GIN, 31, 50, 12) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, DATA_OUT_EN, -1, 5), rnode(GIN, 31, 50, 11) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, DATA_OUT_EN, -1, 6), rnode(GIN, 31, 50, 10) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, DATA_OUT_EN, -1, 7), rnode(GIN, 31, 50, 9) },
  { pnode(HPS_PERIPHERAL_USB, 32, 29, STP, -1, -1), rnode(GIN, 31, 50, 0) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, CLK, -1, -1), rnode(DCMUX, 31, 59, 2) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, DATAIN, -1, 0), rnode(GOUT, 31, 57, 12) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, DATAIN, -1, 1), rnode(GOUT, 31, 57, 11) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, DATAIN, -1, 2), rnode(GOUT, 31, 57, 10) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, DATAIN, -1, 3), rnode(GOUT, 31, 57, 9) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, DATAIN, -1, 4), rnode(GOUT, 31, 57, 8) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, DATAIN, -1, 5), rnode(GOUT, 31, 57, 7) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, DATAIN, -1, 6), rnode(GOUT, 31, 57, 6) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, DATAIN, -1, 7), rnode(GOUT, 31, 57, 5) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, DIR, -1, -1), rnode(GOUT, 31, 57, 4) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, NXT, -1, -1), rnode(GOUT, 31, 57, 3) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, DATAOUT, -1, 0), rnode(GIN, 31, 58, 25) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, DATAOUT, -1, 1), rnode(GIN, 31, 58, 24) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, DATAOUT, -1, 2), rnode(GIN, 31, 58, 23) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, DATAOUT, -1, 3), rnode(GIN, 31, 58, 22) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, DATAOUT, -1, 4), rnode(GIN, 31, 58, 21) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, DATAOUT, -1, 5), rnode(GIN, 31, 58, 20) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, DATAOUT, -1, 6), rnode(GIN, 31, 58, 19) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, DATAOUT, -1, 7), rnode(GIN, 31, 58, 18) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, DATA_OUT_EN, -1, 0), rnode(GIN, 31, 59, 4) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, DATA_OUT_EN, -1, 1), rnode(GIN, 31, 59, 3) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, DATA_OUT_EN, -1, 2), rnode(GIN, 31, 59, 2) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, DATA_OUT_EN, -1, 3), rnode(GIN, 31, 59, 1) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, DATA_OUT_EN, -1, 4), rnode(GIN, 31, 59, 0) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, DATA_OUT_EN, -1, 5), rnode(GIN, 31, 58, 28) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, DATA_OUT_EN, -1, 6), rnode(GIN, 31, 58, 27) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, DATA_OUT_EN, -1, 7), rnode(GIN, 31, 58, 26) },
  { pnode(HPS_PERIPHERAL_USB, 32, 48, STP, -1, -1), rnode(GIN, 31, 58, 17) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 0), rnode(GOUT, 31, 21, 29) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 1), rnode(GOUT, 31, 21, 18) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 2), rnode(GOUT, 31, 21, 9) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 3), rnode(GOUT, 31, 21, 8) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 4), rnode(GOUT, 31, 21, 7) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 5), rnode(GOUT, 31, 21, 6) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 6), rnode(GOUT, 31, 21, 5) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 7), rnode(GOUT, 31, 21, 4) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 8), rnode(GOUT, 31, 21, 3) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 9), rnode(GOUT, 31, 21, 2) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 10), rnode(GOUT, 31, 21, 28) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 11), rnode(GOUT, 31, 21, 27) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 12), rnode(GOUT, 31, 21, 26) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 13), rnode(GOUT, 31, 21, 25) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 14), rnode(GOUT, 31, 21, 24) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 15), rnode(GOUT, 31, 21, 23) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 16), rnode(GOUT, 31, 21, 22) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 17), rnode(GOUT, 31, 21, 21) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 18), rnode(GOUT, 31, 21, 20) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 19), rnode(GOUT, 31, 21, 19) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 20), rnode(GOUT, 31, 21, 17) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 21), rnode(GOUT, 31, 21, 16) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 22), rnode(GOUT, 31, 21, 15) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 23), rnode(GOUT, 31, 21, 14) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 24), rnode(GOUT, 31, 21, 13) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 25), rnode(GOUT, 31, 21, 12) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 26), rnode(GOUT, 31, 21, 11) },
  { pnode(HPS_STM_EVENT, 32, 21, STM_EVENT, -1, 27), rnode(GOUT, 31, 21, 10) },
  { pnode(HPS_TEST, 32, 52, CFG_DFX_BYPASS_ENABLE, -1, -1), rnode(GOUT, 31, 33, 12) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_ATPG_EN, -1, -1), rnode(GOUT, 31, 49, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_AVSTCMDPORTCLK_TESTEN, -1, 0), rnode(GOUT, 31, 49, 53) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_AVSTCMDPORTCLK_TESTEN, -1, 1), rnode(GOUT, 31, 49, 52) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_AVSTCMDPORTCLK_TESTEN, -1, 2), rnode(GOUT, 31, 49, 51) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_AVSTCMDPORTCLK_TESTEN, -1, 3), rnode(GOUT, 31, 49, 50) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_AVSTCMDPORTCLK_TESTEN, -1, 4), rnode(GOUT, 31, 49, 49) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_AVSTCMDPORTCLK_TESTEN, -1, 5), rnode(GOUT, 31, 49, 48) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_AVSTRDCLK_TESTEN, -1, 0), rnode(GOUT, 31, 49, 47) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_AVSTRDCLK_TESTEN, -1, 1), rnode(GOUT, 31, 49, 46) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_AVSTRDCLK_TESTEN, -1, 2), rnode(GOUT, 31, 49, 45) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_AVSTRDCLK_TESTEN, -1, 3), rnode(GOUT, 31, 49, 44) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_AVSTWRCLK_TESTEN, -1, 0), rnode(GOUT, 31, 49, 43) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_AVSTWRCLK_TESTEN, -1, 1), rnode(GOUT, 31, 49, 42) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_AVSTWRCLK_TESTEN, -1, 2), rnode(GOUT, 31, 49, 41) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_AVSTWRCLK_TESTEN, -1, 3), rnode(GOUT, 31, 49, 40) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_BISTEN, -1, -1), rnode(GOUT, 31, 49, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_BIST_CPU_SI, -1, -1), rnode(GOUT, 31, 49, 39) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_BIST_L2_SI, -1, -1), rnode(GOUT, 31, 49, 38) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_BIST_NRST, -1, -1), rnode(GOUT, 31, 49, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_BIST_PERI_SI, 0, -1), rnode(GOUT, 31, 49, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_BIST_PERI_SI, 1, -1), rnode(GOUT, 31, 49, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_BIST_PERI_SI, 2, -1), rnode(GOUT, 31, 31, 51) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_BIST_SE, -1, -1), rnode(GOUT, 31, 49, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_CANTESTEN, 0, -1), rnode(GOUT, 31, 56, 2) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_CANTESTEN, 1, -1), rnode(GOUT, 31, 56, 0) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_CFGTESTEN, -1, -1), rnode(GOUT, 31, 49, 32) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_CTICLK_TESTEN, -1, -1), rnode(GOUT, 31, 20, 13) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_DBGATTESTEN, -1, -1), rnode(GOUT, 31, 33, 3) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_DBGTESTEN, -1, -1), rnode(GOUT, 31, 33, 2) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_DBGTMTESTEN, -1, -1), rnode(GOUT, 31, 33, 1) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_DBGTRTESTEN, -1, -1), rnode(GOUT, 31, 33, 0) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_DDR2XDQSTESTEN, -1, -1), rnode(GOUT, 31, 49, 31) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_DDRDQSTESTEN, -1, -1), rnode(GOUT, 31, 49, 30) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_DDRDQTESTEN, -1, -1), rnode(GOUT, 31, 49, 29) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_DLLNRST, -1, -1), rnode(GOUT, 31, 60, 9) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_DLLUPDWNEN, -1, -1), rnode(GOUT, 31, 60, 8) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_DLLUPNDN, -1, -1), rnode(GOUT, 31, 60, 7) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_DQSUPDTEN, -1, 0), rnode(GOUT, 31, 49, 28) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_DQSUPDTEN, -1, 1), rnode(GOUT, 31, 49, 27) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_DQSUPDTEN, -1, 2), rnode(GOUT, 31, 49, 26) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_DQSUPDTEN, -1, 3), rnode(GOUT, 31, 49, 25) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_DQSUPDTEN, -1, 4), rnode(GOUT, 31, 49, 24) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_ECCBYP, -1, -1), rnode(GOUT, 31, 49, 23) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_EMACTESTEN, 0, -1), rnode(GOUT, 31, 50, 13) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_EMACTESTEN, 1, -1), rnode(GOUT, 31, 57, 13) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_F2SAXICLK_TESTEN, -1, -1), rnode(GOUT, 31, 23, 10) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_F2SPCLKDBG_TESTEN, -1, -1), rnode(GOUT, 31, 20, 14) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_FMBHNIOTRI, -1, -1), rnode(GOUT, 31, 60, 6) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_FMCSREN, -1, -1), rnode(GOUT, 31, 60, 5) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_FMNIOTRI, -1, -1), rnode(GOUT, 31, 60, 4) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_FMPLNIOTRI, -1, -1), rnode(GOUT, 31, 60, 3) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_GPIODBTESTEN, -1, -1), rnode(GOUT, 31, 50, 30) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_HIOCLKIN0, -1, -1), rnode(GOUT, 31, 49, 22) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_HIOSCANCLK_TESTEN, -1, -1), rnode(GOUT, 31, 49, 21) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_HIOSCANEN, -1, -1), rnode(GOUT, 31, 60, 2) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_HIOSCANIN, -1, 0), rnode(GOUT, 31, 60, 1) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_HIOSCANIN, -1, 1), rnode(GOUT, 31, 60, 0) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_HIOSCLR, -1, -1), rnode(GOUT, 31, 49, 20) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_IPSCCLK, -1, -1), rnode(GOUT, 31, 49, 19) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_IPSCENABLE, -1, 0), rnode(GOUT, 31, 49, 18) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_IPSCENABLE, -1, 1), rnode(GOUT, 31, 49, 15) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_IPSCENABLE, -1, 2), rnode(GOUT, 31, 49, 14) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_IPSCENABLE, -1, 3), rnode(GOUT, 31, 49, 13) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_IPSCENABLE, -1, 4), rnode(GOUT, 31, 49, 12) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_IPSCENABLE, -1, 5), rnode(GOUT, 31, 49, 11) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_IPSCENABLE, -1, 6), rnode(GOUT, 31, 49, 10) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_IPSCENABLE, -1, 7), rnode(GOUT, 31, 49, 9) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_IPSCENABLE, -1, 8), rnode(GOUT, 31, 49, 8) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_IPSCENABLE, -1, 9), rnode(GOUT, 31, 49, 7) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_IPSCENABLE, -1, 10), rnode(GOUT, 31, 49, 17) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_IPSCENABLE, -1, 11), rnode(GOUT, 31, 49, 16) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_IPSCIN, -1, -1), rnode(GOUT, 31, 49, 6) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_IPSCUPDATE, -1, -1), rnode(GOUT, 31, 49, 5) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_L3MAINTESTEN, -1, -1), rnode(GOUT, 31, 32, 5) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_L3MPTESTEN, -1, -1), rnode(GOUT, 31, 32, 4) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_L3SPTESTEN, -1, -1), rnode(GOUT, 31, 32, 3) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_L4MAINTESTEN, -1, -1), rnode(GOUT, 31, 32, 2) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_L4MPTESTEN, -1, -1), rnode(GOUT, 31, 32, 1) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_L4SPTESTEN, -1, -1), rnode(GOUT, 31, 32, 0) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_LWH2FAXICLK_TESTEN, -1, -1), rnode(GOUT, 31, 21, 47) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_MEM_CPU_SI, -1, -1), rnode(GOUT, 31, 49, 4) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_MEM_L2_SI, -1, -1), rnode(GOUT, 31, 49, 3) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_MEM_PERI_SI, 0, -1), rnode(GOUT, 31, 49, 2) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_MEM_PERI_SI, 1, -1), rnode(GOUT, 31, 49, 1) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_MEM_PERI_SI, 2, -1), rnode(GOUT, 31, 31, 50) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_MEM_SE, -1, -1), rnode(GOUT, 31, 49, 0) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_MPUL2RAMTESTEN, -1, -1), rnode(GOUT, 31, 31, 48) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_MPUPERITESTEN, -1, -1), rnode(GOUT, 31, 31, 47) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_MPUTESTEN, -1, -1), rnode(GOUT, 31, 31, 46) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_MPU_SCAN_MODE, -1, -1), rnode(GOUT, 31, 31, 49) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_MTESTEN, -1, -1), rnode(GOUT, 31, 48, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_NANDTESTEN, -1, -1), rnode(GOUT, 31, 50, 29) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_NANDXTESTEN, -1, -1), rnode(GOUT, 31, 50, 28) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_OCTCLKENUSR, -1, -1), rnode(GOUT, 31, 59, 45) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_OCTCLKUSR, -1, -1), rnode(GOUT, 31, 59, 44) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_OCTENSERUSER, -1, -1), rnode(GOUT, 31, 59, 43) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_OCTNCLRUSR, -1, -1), rnode(GOUT, 31, 59, 42) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_OCTS2PLOAD, -1, -1), rnode(GOUT, 31, 59, 41) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_OCTSCANCLK, -1, -1), rnode(GOUT, 31, 59, 40) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_OCTSCANEN, -1, -1), rnode(GOUT, 31, 59, 39) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_OCTSCANIN, -1, -1), rnode(GOUT, 31, 59, 38) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_OCTSERDATA, -1, -1), rnode(GOUT, 31, 59, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_OSC1TESTEN, -1, -1), rnode(GOUT, 31, 59, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PIPELINE_SE_ENABLE, -1, -1), rnode(GOUT, 31, 48, 53) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_BG_PWRDN, 0, -1), rnode(GOUT, 31, 59, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_BG_RESET, 0, -1), rnode(GOUT, 31, 59, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLK_SELECT, 0, -1), rnode(GOUT, 31, 59, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_OUTRESET, 0, -1), rnode(GOUT, 31, 59, 32) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_OUTRESETALL, 0, -1), rnode(GOUT, 31, 59, 31) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_PWRDN, 0, -1), rnode(GOUT, 31, 59, 30) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_REG_PWRDN, 0, -1), rnode(GOUT, 31, 59, 29) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_REG_RESET, 0, -1), rnode(GOUT, 31, 59, 28) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_REG_TEST_SEL, 0, -1), rnode(GOUT, 31, 59, 27) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_RESET, 0, -1), rnode(GOUT, 31, 59, 26) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_TEST, 0, -1), rnode(GOUT, 31, 59, 25) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_BG_PWRDN, 1, -1), rnode(GOUT, 31, 59, 24) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_BG_RESET, 1, -1), rnode(GOUT, 31, 59, 23) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLK_SELECT, 1, -1), rnode(GOUT, 31, 59, 22) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_OUTRESET, 1, -1), rnode(GOUT, 31, 59, 21) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_OUTRESETALL, 1, -1), rnode(GOUT, 31, 59, 20) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_PWRDN, 1, -1), rnode(GOUT, 31, 59, 19) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_REG_PWRDN, 1, -1), rnode(GOUT, 31, 59, 18) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_REG_RESET, 1, -1), rnode(GOUT, 31, 59, 17) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_REG_TEST_SEL, 1, -1), rnode(GOUT, 31, 59, 16) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_RESET, 1, -1), rnode(GOUT, 31, 59, 15) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_TEST, 1, -1), rnode(GOUT, 31, 59, 14) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_BG_PWRDN, 2, -1), rnode(GOUT, 31, 59, 13) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_BG_RESET, 2, -1), rnode(GOUT, 31, 59, 12) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLK_SELECT, 2, -1), rnode(GOUT, 31, 59, 11) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_OUTRESET, 2, -1), rnode(GOUT, 31, 59, 10) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_OUTRESETALL, 2, -1), rnode(GOUT, 31, 59, 9) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_PWRDN, 2, -1), rnode(GOUT, 31, 59, 8) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_REG_PWRDN, 2, -1), rnode(GOUT, 31, 59, 7) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_REG_RESET, 2, -1), rnode(GOUT, 31, 59, 6) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_REG_TEST_SEL, 2, -1), rnode(GOUT, 31, 59, 5) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_RESET, 2, -1), rnode(GOUT, 31, 59, 4) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_TEST, 2, -1), rnode(GOUT, 31, 59, 3) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLLBYPASS, -1, -1), rnode(GOUT, 31, 57, 39) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLLBYPASS_SEL, -1, -1), rnode(GOUT, 31, 57, 38) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLLTEST_INPUT_EN, -1, -1), rnode(GOUT, 31, 57, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_ADVANCE, -1, -1), rnode(GOUT, 31, 59, 2) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_BWADJ, -1, 0), rnode(GOUT, 31, 59, 1) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_BWADJ, -1, 1), rnode(GOUT, 31, 58, 43) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_BWADJ, -1, 2), rnode(GOUT, 31, 58, 42) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_BWADJ, -1, 3), rnode(GOUT, 31, 58, 41) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_BWADJ, -1, 4), rnode(GOUT, 31, 58, 40) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_BWADJ, -1, 5), rnode(GOUT, 31, 58, 39) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_BWADJ, -1, 6), rnode(GOUT, 31, 58, 38) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_BWADJ, -1, 7), rnode(GOUT, 31, 58, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_BWADJ, -1, 8), rnode(GOUT, 31, 58, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_BWADJ, -1, 9), rnode(GOUT, 31, 58, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_BWADJ, -1, 10), rnode(GOUT, 31, 59, 0) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_BWADJ, -1, 11), rnode(GOUT, 31, 58, 44) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKF, -1, 0), rnode(GOUT, 31, 58, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKF, -1, 1), rnode(GOUT, 31, 58, 30) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKF, -1, 2), rnode(GOUT, 31, 58, 29) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKF, -1, 3), rnode(GOUT, 31, 58, 28) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKF, -1, 4), rnode(GOUT, 31, 58, 27) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKF, -1, 5), rnode(GOUT, 31, 58, 26) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKF, -1, 6), rnode(GOUT, 31, 58, 25) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKF, -1, 7), rnode(GOUT, 31, 58, 24) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKF, -1, 8), rnode(GOUT, 31, 58, 23) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKF, -1, 9), rnode(GOUT, 31, 58, 22) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKF, -1, 10), rnode(GOUT, 31, 58, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKF, -1, 11), rnode(GOUT, 31, 58, 32) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKF, -1, 12), rnode(GOUT, 31, 58, 31) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKOD, -1, 0), rnode(GOUT, 31, 58, 21) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKOD, -1, 1), rnode(GOUT, 31, 58, 20) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKOD, -1, 2), rnode(GOUT, 31, 58, 19) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKOD, -1, 3), rnode(GOUT, 31, 58, 18) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKOD, -1, 4), rnode(GOUT, 31, 58, 17) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKOD, -1, 5), rnode(GOUT, 31, 58, 16) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKOD, -1, 6), rnode(GOUT, 31, 58, 15) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKOD, -1, 7), rnode(GOUT, 31, 58, 14) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKOD, -1, 8), rnode(GOUT, 31, 58, 13) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKR, -1, 0), rnode(GOUT, 31, 58, 12) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKR, -1, 1), rnode(GOUT, 31, 58, 11) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKR, -1, 2), rnode(GOUT, 31, 58, 10) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKR, -1, 3), rnode(GOUT, 31, 58, 9) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKR, -1, 4), rnode(GOUT, 31, 58, 8) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_CLKR, -1, 5), rnode(GOUT, 31, 58, 7) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_ENSAT, -1, -1), rnode(GOUT, 31, 58, 6) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_FASTEN, -1, -1), rnode(GOUT, 31, 58, 5) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_REG_EXT_SEL, -1, -1), rnode(GOUT, 31, 58, 4) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_REG_TEST_DRV, -1, -1), rnode(GOUT, 31, 58, 3) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_REG_TEST_OUT, -1, -1), rnode(GOUT, 31, 58, 2) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_REG_TEST_REP, -1, -1), rnode(GOUT, 31, 58, 1) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_STEP, -1, -1), rnode(GOUT, 31, 58, 0) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_TESTBUS_SEL, -1, 0), rnode(GOUT, 31, 57, 44) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_TESTBUS_SEL, -1, 1), rnode(GOUT, 31, 57, 43) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_TESTBUS_SEL, -1, 2), rnode(GOUT, 31, 57, 42) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_TESTBUS_SEL, -1, 3), rnode(GOUT, 31, 57, 41) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PLL_TESTBUS_SEL, -1, 4), rnode(GOUT, 31, 57, 40) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_PSTDQSENA, -1, -1), rnode(GOUT, 31, 48, 52) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_QSPITESTEN, -1, -1), rnode(GOUT, 31, 54, 38) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_S2FAXICLK_TESTEN, -1, -1), rnode(GOUT, 31, 28, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 0), rnode(GOUT, 31, 60, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 1), rnode(GOUT, 31, 60, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 2), rnode(GOUT, 31, 49, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 3), rnode(GOUT, 31, 35, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 4), rnode(GOUT, 31, 25, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 5), rnode(GOUT, 31, 24, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 6), rnode(GOUT, 31, 23, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 7), rnode(GOUT, 31, 22, 52) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 8), rnode(GOUT, 31, 20, 62) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 9), rnode(GOUT, 31, 19, 62) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 10), rnode(GOUT, 31, 60, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 11), rnode(GOUT, 31, 60, 46) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 12), rnode(GOUT, 31, 59, 49) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 13), rnode(GOUT, 31, 58, 50) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 14), rnode(GOUT, 31, 57, 48) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 15), rnode(GOUT, 31, 56, 46) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 16), rnode(GOUT, 31, 54, 48) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 17), rnode(GOUT, 31, 53, 45) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 18), rnode(GOUT, 31, 52, 41) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 19), rnode(GOUT, 31, 50, 48) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 20), rnode(GOUT, 31, 49, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 21), rnode(GOUT, 31, 48, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 22), rnode(GOUT, 31, 46, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 23), rnode(GOUT, 31, 45, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 24), rnode(GOUT, 31, 44, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 25), rnode(GOUT, 31, 42, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 26), rnode(GOUT, 31, 41, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 27), rnode(GOUT, 31, 39, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 28), rnode(GOUT, 31, 38, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 29), rnode(GOUT, 31, 37, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 30), rnode(GOUT, 31, 35, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 31), rnode(GOUT, 31, 34, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 32), rnode(GOUT, 31, 33, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 33), rnode(GOUT, 31, 32, 8) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 34), rnode(GOUT, 31, 31, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 35), rnode(GOUT, 31, 30, 52) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 36), rnode(GOUT, 31, 28, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 37), rnode(GOUT, 31, 27, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 38), rnode(GOUT, 31, 26, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 39), rnode(GOUT, 31, 25, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 40), rnode(GOUT, 31, 25, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 41), rnode(GOUT, 31, 25, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 42), rnode(GOUT, 31, 25, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 43), rnode(GOUT, 31, 25, 53) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 44), rnode(GOUT, 31, 25, 52) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 45), rnode(GOUT, 31, 24, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 46), rnode(GOUT, 31, 24, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 47), rnode(GOUT, 31, 24, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 48), rnode(GOUT, 31, 24, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 49), rnode(GOUT, 31, 24, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 50), rnode(GOUT, 31, 24, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 51), rnode(GOUT, 31, 24, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 52), rnode(GOUT, 31, 24, 53) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 53), rnode(GOUT, 31, 24, 52) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 54), rnode(GOUT, 31, 23, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 55), rnode(GOUT, 31, 23, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 56), rnode(GOUT, 31, 23, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 57), rnode(GOUT, 31, 23, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 58), rnode(GOUT, 31, 23, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 59), rnode(GOUT, 31, 23, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 60), rnode(GOUT, 31, 23, 53) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 61), rnode(GOUT, 31, 23, 52) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 62), rnode(GOUT, 31, 22, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 63), rnode(GOUT, 31, 22, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 64), rnode(GOUT, 31, 22, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 65), rnode(GOUT, 31, 22, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 66), rnode(GOUT, 31, 22, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 67), rnode(GOUT, 31, 22, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 68), rnode(GOUT, 31, 22, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 69), rnode(GOUT, 31, 22, 53) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 70), rnode(GOUT, 31, 21, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 71), rnode(GOUT, 31, 21, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 72), rnode(GOUT, 31, 21, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 73), rnode(GOUT, 31, 21, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 74), rnode(GOUT, 31, 21, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 75), rnode(GOUT, 31, 21, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 76), rnode(GOUT, 31, 21, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 77), rnode(GOUT, 31, 21, 53) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 78), rnode(GOUT, 31, 21, 52) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 79), rnode(GOUT, 31, 20, 63) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 80), rnode(GOUT, 31, 20, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 81), rnode(GOUT, 31, 20, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 82), rnode(GOUT, 31, 20, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 83), rnode(GOUT, 31, 20, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 84), rnode(GOUT, 31, 20, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 85), rnode(GOUT, 31, 20, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 86), rnode(GOUT, 31, 20, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 87), rnode(GOUT, 31, 20, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 88), rnode(GOUT, 31, 20, 53) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 89), rnode(GOUT, 31, 20, 52) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 90), rnode(GOUT, 31, 19, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 91), rnode(GOUT, 31, 19, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 92), rnode(GOUT, 31, 19, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 93), rnode(GOUT, 31, 19, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 94), rnode(GOUT, 31, 19, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 95), rnode(GOUT, 31, 19, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 96), rnode(GOUT, 31, 19, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 97), rnode(GOUT, 31, 19, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 98), rnode(GOUT, 31, 19, 53) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 99), rnode(GOUT, 31, 19, 52) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 100), rnode(GOUT, 31, 60, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 101), rnode(GOUT, 31, 60, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 102), rnode(GOUT, 31, 60, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 103), rnode(GOUT, 31, 60, 53) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 104), rnode(GOUT, 31, 60, 52) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 105), rnode(GOUT, 31, 60, 51) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 106), rnode(GOUT, 31, 60, 50) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 107), rnode(GOUT, 31, 60, 49) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 108), rnode(GOUT, 31, 60, 48) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 109), rnode(GOUT, 31, 60, 47) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 110), rnode(GOUT, 31, 59, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 111), rnode(GOUT, 31, 59, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 112), rnode(GOUT, 31, 59, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 113), rnode(GOUT, 31, 59, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 114), rnode(GOUT, 31, 59, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 115), rnode(GOUT, 31, 59, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 116), rnode(GOUT, 31, 59, 53) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 117), rnode(GOUT, 31, 59, 52) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 118), rnode(GOUT, 31, 59, 51) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 119), rnode(GOUT, 31, 59, 50) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 120), rnode(GOUT, 31, 59, 48) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 121), rnode(GOUT, 31, 59, 47) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 122), rnode(GOUT, 31, 59, 46) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 123), rnode(GOUT, 31, 58, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 124), rnode(GOUT, 31, 58, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 125), rnode(GOUT, 31, 58, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 126), rnode(GOUT, 31, 58, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 127), rnode(GOUT, 31, 58, 53) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 128), rnode(GOUT, 31, 58, 52) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 129), rnode(GOUT, 31, 58, 51) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 130), rnode(GOUT, 31, 58, 49) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 131), rnode(GOUT, 31, 58, 48) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 132), rnode(GOUT, 31, 58, 47) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 133), rnode(GOUT, 31, 58, 46) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 134), rnode(GOUT, 31, 58, 45) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 135), rnode(GOUT, 31, 57, 53) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 136), rnode(GOUT, 31, 57, 52) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 137), rnode(GOUT, 31, 57, 51) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 138), rnode(GOUT, 31, 57, 50) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 139), rnode(GOUT, 31, 57, 49) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 140), rnode(GOUT, 31, 57, 47) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 141), rnode(GOUT, 31, 57, 46) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 142), rnode(GOUT, 31, 57, 45) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 143), rnode(GOUT, 31, 56, 53) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 144), rnode(GOUT, 31, 56, 52) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 145), rnode(GOUT, 31, 56, 51) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 146), rnode(GOUT, 31, 56, 50) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 147), rnode(GOUT, 31, 56, 49) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 148), rnode(GOUT, 31, 56, 48) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 149), rnode(GOUT, 31, 56, 47) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 150), rnode(GOUT, 31, 56, 45) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 151), rnode(GOUT, 31, 55, 49) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 152), rnode(GOUT, 31, 55, 48) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 153), rnode(GOUT, 31, 55, 47) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 154), rnode(GOUT, 31, 55, 46) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 155), rnode(GOUT, 31, 55, 45) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 156), rnode(GOUT, 31, 55, 44) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 157), rnode(GOUT, 31, 55, 43) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 158), rnode(GOUT, 31, 55, 42) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 159), rnode(GOUT, 31, 55, 41) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 160), rnode(GOUT, 31, 54, 47) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 161), rnode(GOUT, 31, 54, 46) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 162), rnode(GOUT, 31, 54, 45) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 163), rnode(GOUT, 31, 54, 44) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 164), rnode(GOUT, 31, 54, 43) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 165), rnode(GOUT, 31, 54, 42) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 166), rnode(GOUT, 31, 54, 41) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 167), rnode(GOUT, 31, 53, 48) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 168), rnode(GOUT, 31, 53, 47) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 169), rnode(GOUT, 31, 53, 46) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 170), rnode(GOUT, 31, 53, 44) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 171), rnode(GOUT, 31, 53, 43) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 172), rnode(GOUT, 31, 53, 42) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 173), rnode(GOUT, 31, 53, 41) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 174), rnode(GOUT, 31, 52, 47) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 175), rnode(GOUT, 31, 52, 46) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 176), rnode(GOUT, 31, 52, 45) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 177), rnode(GOUT, 31, 52, 44) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 178), rnode(GOUT, 31, 52, 43) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 179), rnode(GOUT, 31, 52, 42) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 180), rnode(GOUT, 31, 52, 40) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 181), rnode(GOUT, 31, 51, 48) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 182), rnode(GOUT, 31, 51, 47) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 183), rnode(GOUT, 31, 51, 46) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 184), rnode(GOUT, 31, 51, 45) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 185), rnode(GOUT, 31, 51, 44) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 186), rnode(GOUT, 31, 51, 43) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 187), rnode(GOUT, 31, 51, 42) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 188), rnode(GOUT, 31, 51, 41) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 189), rnode(GOUT, 31, 51, 40) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 190), rnode(GOUT, 31, 50, 47) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 191), rnode(GOUT, 31, 50, 46) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 192), rnode(GOUT, 31, 50, 45) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 193), rnode(GOUT, 31, 50, 44) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 194), rnode(GOUT, 31, 50, 43) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 195), rnode(GOUT, 31, 50, 42) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 196), rnode(GOUT, 31, 50, 41) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 197), rnode(GOUT, 31, 50, 40) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 198), rnode(GOUT, 31, 49, 62) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 199), rnode(GOUT, 31, 49, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 200), rnode(GOUT, 31, 49, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 201), rnode(GOUT, 31, 49, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 202), rnode(GOUT, 31, 49, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 203), rnode(GOUT, 31, 49, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 204), rnode(GOUT, 31, 48, 62) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 205), rnode(GOUT, 31, 48, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 206), rnode(GOUT, 31, 48, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 207), rnode(GOUT, 31, 48, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 208), rnode(GOUT, 31, 48, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 209), rnode(GOUT, 31, 48, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 210), rnode(GOUT, 31, 48, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 211), rnode(GOUT, 31, 47, 62) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 212), rnode(GOUT, 31, 47, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 213), rnode(GOUT, 31, 47, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 214), rnode(GOUT, 31, 47, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 215), rnode(GOUT, 31, 47, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 216), rnode(GOUT, 31, 47, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 217), rnode(GOUT, 31, 47, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 218), rnode(GOUT, 31, 47, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 219), rnode(GOUT, 31, 46, 62) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 220), rnode(GOUT, 31, 46, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 221), rnode(GOUT, 31, 46, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 222), rnode(GOUT, 31, 46, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 223), rnode(GOUT, 31, 46, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 224), rnode(GOUT, 31, 46, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 225), rnode(GOUT, 31, 46, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 226), rnode(GOUT, 31, 45, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 227), rnode(GOUT, 31, 45, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 228), rnode(GOUT, 31, 45, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 229), rnode(GOUT, 31, 45, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 230), rnode(GOUT, 31, 45, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 231), rnode(GOUT, 31, 45, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 232), rnode(GOUT, 31, 45, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 233), rnode(GOUT, 31, 44, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 234), rnode(GOUT, 31, 44, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 235), rnode(GOUT, 31, 44, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 236), rnode(GOUT, 31, 44, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 237), rnode(GOUT, 31, 44, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 238), rnode(GOUT, 31, 44, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 239), rnode(GOUT, 31, 44, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 240), rnode(GOUT, 31, 43, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 241), rnode(GOUT, 31, 43, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 242), rnode(GOUT, 31, 43, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 243), rnode(GOUT, 31, 43, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 244), rnode(GOUT, 31, 43, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 245), rnode(GOUT, 31, 43, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 246), rnode(GOUT, 31, 43, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 247), rnode(GOUT, 31, 43, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 248), rnode(GOUT, 31, 42, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 249), rnode(GOUT, 31, 42, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 250), rnode(GOUT, 31, 42, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 251), rnode(GOUT, 31, 42, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 252), rnode(GOUT, 31, 42, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 253), rnode(GOUT, 31, 42, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 254), rnode(GOUT, 31, 42, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 255), rnode(GOUT, 31, 41, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 256), rnode(GOUT, 31, 41, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 257), rnode(GOUT, 31, 41, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 258), rnode(GOUT, 31, 41, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 259), rnode(GOUT, 31, 41, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 260), rnode(GOUT, 31, 41, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 261), rnode(GOUT, 31, 41, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 262), rnode(GOUT, 31, 40, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 263), rnode(GOUT, 31, 40, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 264), rnode(GOUT, 31, 40, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 265), rnode(GOUT, 31, 40, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 266), rnode(GOUT, 31, 40, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 267), rnode(GOUT, 31, 40, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 268), rnode(GOUT, 31, 40, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 269), rnode(GOUT, 31, 40, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 270), rnode(GOUT, 31, 39, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 271), rnode(GOUT, 31, 39, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 272), rnode(GOUT, 31, 39, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 273), rnode(GOUT, 31, 39, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 274), rnode(GOUT, 31, 39, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 275), rnode(GOUT, 31, 39, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 276), rnode(GOUT, 31, 39, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 277), rnode(GOUT, 31, 38, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 278), rnode(GOUT, 31, 38, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 279), rnode(GOUT, 31, 38, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 280), rnode(GOUT, 31, 38, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 281), rnode(GOUT, 31, 38, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 282), rnode(GOUT, 31, 38, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 283), rnode(GOUT, 31, 38, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 284), rnode(GOUT, 31, 37, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 285), rnode(GOUT, 31, 37, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 286), rnode(GOUT, 31, 37, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 287), rnode(GOUT, 31, 37, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 288), rnode(GOUT, 31, 37, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 289), rnode(GOUT, 31, 37, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 290), rnode(GOUT, 31, 36, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 291), rnode(GOUT, 31, 36, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 292), rnode(GOUT, 31, 36, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 293), rnode(GOUT, 31, 36, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 294), rnode(GOUT, 31, 36, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 295), rnode(GOUT, 31, 36, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 296), rnode(GOUT, 31, 36, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 297), rnode(GOUT, 31, 35, 63) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 298), rnode(GOUT, 31, 35, 62) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 299), rnode(GOUT, 31, 35, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 300), rnode(GOUT, 31, 35, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 301), rnode(GOUT, 31, 35, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 302), rnode(GOUT, 31, 35, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 303), rnode(GOUT, 31, 35, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 304), rnode(GOUT, 31, 35, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 305), rnode(GOUT, 31, 34, 63) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 306), rnode(GOUT, 31, 34, 62) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 307), rnode(GOUT, 31, 34, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 308), rnode(GOUT, 31, 34, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 309), rnode(GOUT, 31, 34, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 310), rnode(GOUT, 31, 34, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 311), rnode(GOUT, 31, 34, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 312), rnode(GOUT, 31, 34, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 313), rnode(GOUT, 31, 34, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 314), rnode(GOUT, 31, 33, 63) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 315), rnode(GOUT, 31, 33, 62) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 316), rnode(GOUT, 31, 33, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 317), rnode(GOUT, 31, 33, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 318), rnode(GOUT, 31, 33, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 319), rnode(GOUT, 31, 33, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 320), rnode(GOUT, 31, 33, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 321), rnode(GOUT, 31, 33, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 322), rnode(GOUT, 31, 33, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 323), rnode(GOUT, 31, 32, 15) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 324), rnode(GOUT, 31, 32, 14) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 325), rnode(GOUT, 31, 32, 13) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 326), rnode(GOUT, 31, 32, 12) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 327), rnode(GOUT, 31, 32, 11) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 328), rnode(GOUT, 31, 32, 10) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 329), rnode(GOUT, 31, 32, 9) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 330), rnode(GOUT, 31, 32, 7) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 331), rnode(GOUT, 31, 32, 6) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 332), rnode(GOUT, 31, 31, 62) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 333), rnode(GOUT, 31, 31, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 334), rnode(GOUT, 31, 31, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 335), rnode(GOUT, 31, 31, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 336), rnode(GOUT, 31, 31, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 337), rnode(GOUT, 31, 31, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 338), rnode(GOUT, 31, 31, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 339), rnode(GOUT, 31, 31, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 340), rnode(GOUT, 31, 31, 53) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 341), rnode(GOUT, 31, 30, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 342), rnode(GOUT, 31, 30, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 343), rnode(GOUT, 31, 30, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 344), rnode(GOUT, 31, 30, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 345), rnode(GOUT, 31, 30, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 346), rnode(GOUT, 31, 30, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 347), rnode(GOUT, 31, 30, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 348), rnode(GOUT, 31, 30, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 349), rnode(GOUT, 31, 30, 53) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 350), rnode(GOUT, 31, 29, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 351), rnode(GOUT, 31, 29, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 352), rnode(GOUT, 31, 29, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 353), rnode(GOUT, 31, 29, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 354), rnode(GOUT, 31, 29, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 355), rnode(GOUT, 31, 29, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 356), rnode(GOUT, 31, 29, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 357), rnode(GOUT, 31, 29, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 358), rnode(GOUT, 31, 29, 53) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 359), rnode(GOUT, 31, 29, 52) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 360), rnode(GOUT, 31, 28, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 361), rnode(GOUT, 31, 28, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 362), rnode(GOUT, 31, 28, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 363), rnode(GOUT, 31, 28, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 364), rnode(GOUT, 31, 28, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 365), rnode(GOUT, 31, 28, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 366), rnode(GOUT, 31, 28, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 367), rnode(GOUT, 31, 28, 53) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 368), rnode(GOUT, 31, 28, 52) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 369), rnode(GOUT, 31, 27, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 370), rnode(GOUT, 31, 27, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 371), rnode(GOUT, 31, 27, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 372), rnode(GOUT, 31, 27, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 373), rnode(GOUT, 31, 27, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 374), rnode(GOUT, 31, 27, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 375), rnode(GOUT, 31, 27, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 376), rnode(GOUT, 31, 27, 53) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 377), rnode(GOUT, 31, 27, 52) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 378), rnode(GOUT, 31, 26, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 379), rnode(GOUT, 31, 26, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 380), rnode(GOUT, 31, 26, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 381), rnode(GOUT, 31, 26, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 382), rnode(GOUT, 31, 26, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 383), rnode(GOUT, 31, 26, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 384), rnode(GOUT, 31, 26, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 385), rnode(GOUT, 31, 26, 53) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 386), rnode(GOUT, 31, 26, 52) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 387), rnode(GOUT, 31, 25, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 388), rnode(GOUT, 31, 25, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCANIN, -1, 389), rnode(GOUT, 31, 25, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SCAN_EN, -1, -1), rnode(GOUT, 31, 48, 51) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SDMMCTESTEN, -1, -1), rnode(GOUT, 31, 55, 2) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_SPIMTESTEN, -1, -1), rnode(GOUT, 31, 55, 22) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_TEST_CKEN, -1, -1), rnode(GOUT, 31, 57, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_TEST_CLK, -1, -1), rnode(DCMUX, 31, 59, 1) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_TEST_CLKOFF, -1, -1), rnode(GOUT, 31, 57, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_TPIUTRACECLKIN_TESTEN, -1, -1), rnode(GOUT, 31, 20, 12) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_USBMPTESTEN, -1, -1), rnode(GOUT, 31, 50, 2) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_USBULPICLK_TESTEN, -1, 0), rnode(GOUT, 31, 50, 1) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_USBULPICLK_TESTEN, -1, 1), rnode(GOUT, 31, 50, 0) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_VIOSCANCLK_TESTEN, -1, -1), rnode(GOUT, 31, 57, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_VIOSCANEN, -1, -1), rnode(GOUT, 31, 57, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_FPGA_VIOSCANIN, -1, -1), rnode(GOUT, 31, 57, 32) },
  { pnode(HPS_TEST, 32, 52, DFT_IN_HPS_TESTMODE_N, -1, -1), rnode(GOUT, 31, 48, 50) },
  { pnode(HPS_TEST, 32, 52, DFX_IN_FPGA_T2_CLK, -1, -1), rnode(GOUT, 31, 56, 13) },
  { pnode(HPS_TEST, 32, 52, DFX_IN_FPGA_T2_DATAIN, -1, -1), rnode(GOUT, 31, 56, 12) },
  { pnode(HPS_TEST, 32, 52, DFX_IN_FPGA_T2_SCAN_EN_N, -1, -1), rnode(GOUT, 31, 56, 11) },
  { pnode(HPS_TEST, 32, 52, DFX_SCAN_CLK, -1, -1), rnode(GOUT, 31, 33, 11) },
  { pnode(HPS_TEST, 32, 52, DFX_SCAN_DIN, -1, -1), rnode(GOUT, 31, 33, 10) },
  { pnode(HPS_TEST, 32, 52, DFX_SCAN_EN, -1, -1), rnode(GOUT, 31, 33, 9) },
  { pnode(HPS_TEST, 32, 52, DFX_SCAN_LOAD, -1, -1), rnode(GOUT, 31, 33, 8) },
  { pnode(HPS_TEST, 32, 52, F2S_CTRL, -1, -1), rnode(GOUT, 31, 20, 17) },
  { pnode(HPS_TEST, 32, 52, F2S_JTAG_ENABLE_CORE, -1, -1), rnode(GOUT, 31, 20, 16) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_BIST_CPU_SO, -1, -1), rnode(GIN, 31, 49, 30) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_BIST_L2_SO, -1, -1), rnode(GIN, 31, 49, 29) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_BIST_PERI_SO, 0, -1), rnode(GIN, 31, 49, 28) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_BIST_PERI_SO, 1, -1), rnode(GIN, 31, 49, 27) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_BIST_PERI_SO, 2, -1), rnode(GIN, 31, 31, 49) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_DLLLOCKED, -1, -1), rnode(GIN, 31, 60, 27) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_DLLSETTING, -1, 0), rnode(GIN, 31, 60, 26) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_DLLSETTING, -1, 1), rnode(GIN, 31, 60, 25) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_DLLSETTING, -1, 2), rnode(GIN, 31, 60, 24) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_DLLSETTING, -1, 3), rnode(GIN, 31, 60, 23) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_DLLSETTING, -1, 4), rnode(GIN, 31, 60, 22) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_DLLSETTING, -1, 5), rnode(GIN, 31, 60, 21) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_DLLSETTING, -1, 6), rnode(GIN, 31, 60, 20) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_DLLUPDWNCORE, -1, -1), rnode(GIN, 31, 60, 19) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 0), rnode(GIN, 31, 49, 26) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 1), rnode(GIN, 31, 49, 15) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 2), rnode(GIN, 31, 49, 4) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 3), rnode(GIN, 31, 48, 24) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 4), rnode(GIN, 31, 48, 18) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 5), rnode(GIN, 31, 48, 17) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 6), rnode(GIN, 31, 48, 16) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 7), rnode(GIN, 31, 48, 15) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 8), rnode(GIN, 31, 48, 14) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 9), rnode(GIN, 31, 48, 13) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 10), rnode(GIN, 31, 49, 25) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 11), rnode(GIN, 31, 49, 24) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 12), rnode(GIN, 31, 49, 23) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 13), rnode(GIN, 31, 49, 22) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 14), rnode(GIN, 31, 49, 21) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 15), rnode(GIN, 31, 49, 20) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 16), rnode(GIN, 31, 49, 19) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 17), rnode(GIN, 31, 49, 18) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 18), rnode(GIN, 31, 49, 17) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 19), rnode(GIN, 31, 49, 16) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 20), rnode(GIN, 31, 49, 14) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 21), rnode(GIN, 31, 49, 13) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 22), rnode(GIN, 31, 49, 12) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 23), rnode(GIN, 31, 49, 11) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 24), rnode(GIN, 31, 49, 10) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 25), rnode(GIN, 31, 49, 9) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 26), rnode(GIN, 31, 49, 8) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 27), rnode(GIN, 31, 49, 7) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 28), rnode(GIN, 31, 49, 6) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 29), rnode(GIN, 31, 49, 5) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 30), rnode(GIN, 31, 49, 3) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 31), rnode(GIN, 31, 49, 2) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 32), rnode(GIN, 31, 49, 1) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 33), rnode(GIN, 31, 49, 0) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 34), rnode(GIN, 31, 48, 30) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 35), rnode(GIN, 31, 48, 29) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 36), rnode(GIN, 31, 48, 28) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 37), rnode(GIN, 31, 48, 27) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 38), rnode(GIN, 31, 48, 26) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 39), rnode(GIN, 31, 48, 25) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 40), rnode(GIN, 31, 48, 23) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 41), rnode(GIN, 31, 48, 22) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 42), rnode(GIN, 31, 48, 21) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 43), rnode(GIN, 31, 48, 20) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOCDATA3IN, -1, 44), rnode(GIN, 31, 48, 19) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIODQSOUT, -1, 0), rnode(GIN, 31, 48, 12) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIODQSOUT, -1, 1), rnode(GIN, 31, 48, 11) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIODQSOUT, -1, 2), rnode(GIN, 31, 48, 10) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIODQSOUT, -1, 3), rnode(GIN, 31, 48, 9) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIODQSOUT, -1, 4), rnode(GIN, 31, 48, 8) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIODQSUNGATING, -1, 0), rnode(GIN, 31, 48, 7) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIODQSUNGATING, -1, 1), rnode(GIN, 31, 48, 6) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIODQSUNGATING, -1, 2), rnode(GIN, 31, 48, 5) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIODQSUNGATING, -1, 3), rnode(GIN, 31, 48, 4) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIODQSUNGATING, -1, 4), rnode(GIN, 31, 48, 3) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOOCTRT, -1, 0), rnode(GIN, 31, 48, 2) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOOCTRT, -1, 1), rnode(GIN, 31, 48, 1) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOOCTRT, -1, 2), rnode(GIN, 31, 48, 0) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOOCTRT, -1, 3), rnode(GIN, 31, 47, 30) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOOCTRT, -1, 4), rnode(GIN, 31, 47, 29) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOSCANOUT, -1, 0), rnode(GIN, 31, 47, 28) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_HIOSCANOUT, -1, 1), rnode(GIN, 31, 47, 27) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_IPSCOUT, -1, 0), rnode(GIN, 31, 47, 26) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_IPSCOUT, -1, 1), rnode(GIN, 31, 47, 25) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_IPSCOUT, -1, 2), rnode(GIN, 31, 47, 24) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_IPSCOUT, -1, 3), rnode(GIN, 31, 47, 23) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_IPSCOUT, -1, 4), rnode(GIN, 31, 47, 22) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_MEM_CPU_SO, -1, -1), rnode(GIN, 31, 47, 21) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_MEM_L2_SO, -1, -1), rnode(GIN, 31, 47, 20) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_MEM_PERI_SO, 0, -1), rnode(GIN, 31, 47, 19) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_MEM_PERI_SO, 1, -1), rnode(GIN, 31, 47, 18) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_MEM_PERI_SO, 2, -1), rnode(GIN, 31, 31, 48) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_OCTCLKUSRDFT, -1, -1), rnode(GIN, 31, 60, 18) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_OCTCOMPOUT_RDN, -1, -1), rnode(GIN, 31, 60, 17) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_OCTCOMPOUT_RUP, -1, -1), rnode(GIN, 31, 60, 16) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_OCTSCANOUT, -1, -1), rnode(GIN, 31, 60, 15) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_OCTSERDATA, -1, -1), rnode(GIN, 31, 60, 14) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_PLL_TESTBUS_OUT, -1, 0), rnode(GIN, 31, 60, 13) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_PLL_TESTBUS_OUT, -1, 1), rnode(GIN, 31, 60, 12) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_PLL_TESTBUS_OUT, -1, 2), rnode(GIN, 31, 60, 11) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_PSTTRACKSAMPLE, -1, 0), rnode(GIN, 31, 47, 17) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_PSTTRACKSAMPLE, -1, 1), rnode(GIN, 31, 47, 16) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_PSTTRACKSAMPLE, -1, 2), rnode(GIN, 31, 47, 15) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_PSTTRACKSAMPLE, -1, 3), rnode(GIN, 31, 47, 14) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_PSTTRACKSAMPLE, -1, 4), rnode(GIN, 31, 47, 13) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_PSTVFIFO, -1, 0), rnode(GIN, 31, 47, 12) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_PSTVFIFO, -1, 1), rnode(GIN, 31, 47, 11) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_PSTVFIFO, -1, 2), rnode(GIN, 31, 47, 10) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_PSTVFIFO, -1, 3), rnode(GIN, 31, 47, 9) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_PSTVFIFO, -1, 4), rnode(GIN, 31, 47, 8) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 0), rnode(GIN, 31, 60, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 1), rnode(GIN, 31, 60, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 2), rnode(GIN, 31, 60, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 3), rnode(GIN, 31, 60, 32) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 4), rnode(GIN, 31, 60, 31) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 5), rnode(GIN, 31, 60, 30) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 6), rnode(GIN, 31, 60, 29) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 7), rnode(GIN, 31, 59, 38) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 8), rnode(GIN, 31, 59, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 9), rnode(GIN, 31, 59, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 10), rnode(GIN, 31, 59, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 11), rnode(GIN, 31, 59, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 12), rnode(GIN, 31, 59, 32) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 13), rnode(GIN, 31, 59, 31) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 14), rnode(GIN, 31, 59, 30) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 15), rnode(GIN, 31, 59, 29) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 16), rnode(GIN, 31, 58, 38) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 17), rnode(GIN, 31, 58, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 18), rnode(GIN, 31, 58, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 19), rnode(GIN, 31, 58, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 20), rnode(GIN, 31, 58, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 21), rnode(GIN, 31, 58, 32) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 22), rnode(GIN, 31, 58, 31) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 23), rnode(GIN, 31, 58, 30) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 24), rnode(GIN, 31, 58, 29) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 25), rnode(GIN, 31, 57, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_100_126, -1, 26), rnode(GIN, 31, 57, 32) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 0), rnode(GIN, 31, 56, 31) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 1), rnode(GIN, 31, 56, 30) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 2), rnode(GIN, 31, 56, 29) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 3), rnode(GIN, 31, 55, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 4), rnode(GIN, 31, 55, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 5), rnode(GIN, 31, 55, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 6), rnode(GIN, 31, 55, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 7), rnode(GIN, 31, 55, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 8), rnode(GIN, 31, 54, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 9), rnode(GIN, 31, 54, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 10), rnode(GIN, 31, 54, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 11), rnode(GIN, 31, 54, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 12), rnode(GIN, 31, 53, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 13), rnode(GIN, 31, 53, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 14), rnode(GIN, 31, 53, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 15), rnode(GIN, 31, 53, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 16), rnode(GIN, 31, 53, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 17), rnode(GIN, 31, 52, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 18), rnode(GIN, 31, 52, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 19), rnode(GIN, 31, 52, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 20), rnode(GIN, 31, 52, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 21), rnode(GIN, 31, 51, 41) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 22), rnode(GIN, 31, 51, 40) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 23), rnode(GIN, 31, 51, 39) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 24), rnode(GIN, 31, 51, 38) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 25), rnode(GIN, 31, 51, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 26), rnode(GIN, 31, 51, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 27), rnode(GIN, 31, 51, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 28), rnode(GIN, 31, 51, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 29), rnode(GIN, 31, 50, 41) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 30), rnode(GIN, 31, 50, 40) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 31), rnode(GIN, 31, 50, 39) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 32), rnode(GIN, 31, 50, 38) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 33), rnode(GIN, 31, 50, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 34), rnode(GIN, 31, 50, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 35), rnode(GIN, 31, 50, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 36), rnode(GIN, 31, 50, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 37), rnode(GIN, 31, 50, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 38), rnode(GIN, 31, 49, 38) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 39), rnode(GIN, 31, 49, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 40), rnode(GIN, 31, 49, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 41), rnode(GIN, 31, 49, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 42), rnode(GIN, 31, 49, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 43), rnode(GIN, 31, 49, 32) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 44), rnode(GIN, 31, 49, 31) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 45), rnode(GIN, 31, 48, 38) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 46), rnode(GIN, 31, 48, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 47), rnode(GIN, 31, 48, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 48), rnode(GIN, 31, 48, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 49), rnode(GIN, 31, 48, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 50), rnode(GIN, 31, 48, 32) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 51), rnode(GIN, 31, 48, 31) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 52), rnode(GIN, 31, 47, 38) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 53), rnode(GIN, 31, 47, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 54), rnode(GIN, 31, 47, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 55), rnode(GIN, 31, 47, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 56), rnode(GIN, 31, 47, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 57), rnode(GIN, 31, 47, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 58), rnode(GIN, 31, 47, 32) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 59), rnode(GIN, 31, 46, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 60), rnode(GIN, 31, 46, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 61), rnode(GIN, 31, 46, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 62), rnode(GIN, 31, 46, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 63), rnode(GIN, 31, 46, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 64), rnode(GIN, 31, 46, 32) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 65), rnode(GIN, 31, 46, 31) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 66), rnode(GIN, 31, 46, 30) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 67), rnode(GIN, 31, 45, 41) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 68), rnode(GIN, 31, 45, 40) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 69), rnode(GIN, 31, 45, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 70), rnode(GIN, 31, 45, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 71), rnode(GIN, 31, 45, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 72), rnode(GIN, 31, 45, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 73), rnode(GIN, 31, 45, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 74), rnode(GIN, 31, 45, 32) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 75), rnode(GIN, 31, 45, 31) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 76), rnode(GIN, 31, 45, 30) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 77), rnode(GIN, 31, 44, 41) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 78), rnode(GIN, 31, 44, 40) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 79), rnode(GIN, 31, 44, 38) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 80), rnode(GIN, 31, 44, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 81), rnode(GIN, 31, 44, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 82), rnode(GIN, 31, 44, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 83), rnode(GIN, 31, 44, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 84), rnode(GIN, 31, 44, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 85), rnode(GIN, 31, 44, 32) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 86), rnode(GIN, 31, 44, 31) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 87), rnode(GIN, 31, 44, 30) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 88), rnode(GIN, 31, 43, 41) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 89), rnode(GIN, 31, 43, 39) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 90), rnode(GIN, 31, 43, 38) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 91), rnode(GIN, 31, 43, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 92), rnode(GIN, 31, 43, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 93), rnode(GIN, 31, 43, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 94), rnode(GIN, 31, 43, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 95), rnode(GIN, 31, 43, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 96), rnode(GIN, 31, 43, 32) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 97), rnode(GIN, 31, 43, 31) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 98), rnode(GIN, 31, 43, 30) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 99), rnode(GIN, 31, 42, 40) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 100), rnode(GIN, 31, 42, 39) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 101), rnode(GIN, 31, 42, 38) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 102), rnode(GIN, 31, 42, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 103), rnode(GIN, 31, 42, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 104), rnode(GIN, 31, 42, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 105), rnode(GIN, 31, 42, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 106), rnode(GIN, 31, 42, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 107), rnode(GIN, 31, 42, 32) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 108), rnode(GIN, 31, 42, 31) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 109), rnode(GIN, 31, 41, 41) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 110), rnode(GIN, 31, 41, 40) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 111), rnode(GIN, 31, 41, 39) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 112), rnode(GIN, 31, 41, 38) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 113), rnode(GIN, 31, 41, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 114), rnode(GIN, 31, 41, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 115), rnode(GIN, 31, 41, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 116), rnode(GIN, 31, 41, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 117), rnode(GIN, 31, 41, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 118), rnode(GIN, 31, 41, 32) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_131_250, -1, 119), rnode(GIN, 31, 41, 30) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 0), rnode(GIN, 31, 52, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 1), rnode(GIN, 31, 51, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 2), rnode(GIN, 31, 49, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 3), rnode(GIN, 31, 48, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 4), rnode(GIN, 31, 47, 31) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 5), rnode(GIN, 31, 45, 38) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 6), rnode(GIN, 31, 44, 39) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 7), rnode(GIN, 31, 43, 40) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 8), rnode(GIN, 31, 42, 41) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 9), rnode(GIN, 31, 42, 30) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 10), rnode(GIN, 31, 41, 31) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 11), rnode(GIN, 31, 40, 32) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 12), rnode(GIN, 31, 39, 32) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 13), rnode(GIN, 31, 38, 32) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 14), rnode(GIN, 31, 37, 32) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 15), rnode(GIN, 31, 36, 31) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 16), rnode(GIN, 31, 35, 30) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 17), rnode(GIN, 31, 33, 39) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 18), rnode(GIN, 31, 32, 8) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 19), rnode(GIN, 31, 31, 62) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 20), rnode(GIN, 31, 30, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 21), rnode(GIN, 31, 29, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 22), rnode(GIN, 31, 28, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 23), rnode(GIN, 31, 27, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 24), rnode(GIN, 31, 26, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 25), rnode(GIN, 31, 26, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 26), rnode(GIN, 31, 25, 64) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 27), rnode(GIN, 31, 25, 63) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 28), rnode(GIN, 31, 25, 62) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 29), rnode(GIN, 31, 25, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 30), rnode(GIN, 31, 25, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 31), rnode(GIN, 31, 25, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 32), rnode(GIN, 31, 25, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 33), rnode(GIN, 31, 25, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 34), rnode(GIN, 31, 25, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 35), rnode(GIN, 31, 24, 64) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 36), rnode(GIN, 31, 24, 63) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 37), rnode(GIN, 31, 24, 62) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 38), rnode(GIN, 31, 24, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 39), rnode(GIN, 31, 24, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 40), rnode(GIN, 31, 24, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 41), rnode(GIN, 31, 24, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 42), rnode(GIN, 31, 24, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 43), rnode(GIN, 31, 24, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 44), rnode(GIN, 31, 24, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 45), rnode(GIN, 31, 23, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 46), rnode(GIN, 31, 23, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 47), rnode(GIN, 31, 23, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 48), rnode(GIN, 31, 23, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 49), rnode(GIN, 31, 23, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 50), rnode(GIN, 31, 23, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 51), rnode(GIN, 31, 23, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 52), rnode(GIN, 31, 23, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 53), rnode(GIN, 31, 22, 62) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 54), rnode(GIN, 31, 22, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 55), rnode(GIN, 31, 22, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 56), rnode(GIN, 31, 22, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 57), rnode(GIN, 31, 22, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 58), rnode(GIN, 31, 22, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 59), rnode(GIN, 31, 22, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 60), rnode(GIN, 31, 22, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 61), rnode(GIN, 31, 21, 62) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 62), rnode(GIN, 31, 21, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 63), rnode(GIN, 31, 21, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 64), rnode(GIN, 31, 21, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 65), rnode(GIN, 31, 21, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 66), rnode(GIN, 31, 21, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 67), rnode(GIN, 31, 21, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_15_83, -1, 68), rnode(GIN, 31, 21, 54) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_254_264, -1, 0), rnode(GIN, 31, 40, 38) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_254_264, -1, 1), rnode(GIN, 31, 40, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_254_264, -1, 2), rnode(GIN, 31, 40, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_254_264, -1, 3), rnode(GIN, 31, 40, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_254_264, -1, 4), rnode(GIN, 31, 40, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_254_264, -1, 5), rnode(GIN, 31, 40, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_254_264, -1, 6), rnode(GIN, 31, 40, 31) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_254_264, -1, 7), rnode(GIN, 31, 40, 30) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_254_264, -1, 8), rnode(GIN, 31, 39, 40) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_254_264, -1, 9), rnode(GIN, 31, 39, 39) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_254_264, -1, 10), rnode(GIN, 31, 39, 38) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 0), rnode(GIN, 31, 39, 30) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 1), rnode(GIN, 31, 38, 40) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 2), rnode(GIN, 31, 38, 39) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 3), rnode(GIN, 31, 38, 38) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 4), rnode(GIN, 31, 38, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 5), rnode(GIN, 31, 38, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 6), rnode(GIN, 31, 38, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 7), rnode(GIN, 31, 38, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 8), rnode(GIN, 31, 38, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 9), rnode(GIN, 31, 38, 31) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 10), rnode(GIN, 31, 38, 30) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 11), rnode(GIN, 31, 37, 40) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 12), rnode(GIN, 31, 37, 39) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 13), rnode(GIN, 31, 37, 38) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 14), rnode(GIN, 31, 37, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 15), rnode(GIN, 31, 37, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 16), rnode(GIN, 31, 37, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 17), rnode(GIN, 31, 37, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 18), rnode(GIN, 31, 37, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 19), rnode(GIN, 31, 37, 31) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 20), rnode(GIN, 31, 37, 30) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 21), rnode(GIN, 31, 36, 40) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 22), rnode(GIN, 31, 36, 39) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 23), rnode(GIN, 31, 36, 38) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 24), rnode(GIN, 31, 36, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 25), rnode(GIN, 31, 36, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 26), rnode(GIN, 31, 36, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 27), rnode(GIN, 31, 36, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 28), rnode(GIN, 31, 36, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 29), rnode(GIN, 31, 36, 30) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 30), rnode(GIN, 31, 35, 39) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 31), rnode(GIN, 31, 35, 38) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 32), rnode(GIN, 31, 35, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 33), rnode(GIN, 31, 35, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 34), rnode(GIN, 31, 35, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 35), rnode(GIN, 31, 35, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 36), rnode(GIN, 31, 35, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 37), rnode(GIN, 31, 35, 32) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 38), rnode(GIN, 31, 35, 31) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 39), rnode(GIN, 31, 34, 39) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 40), rnode(GIN, 31, 34, 38) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 41), rnode(GIN, 31, 34, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 42), rnode(GIN, 31, 34, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 43), rnode(GIN, 31, 34, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 44), rnode(GIN, 31, 34, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 45), rnode(GIN, 31, 34, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 46), rnode(GIN, 31, 34, 32) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 47), rnode(GIN, 31, 34, 31) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 48), rnode(GIN, 31, 34, 30) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 49), rnode(GIN, 31, 33, 38) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 50), rnode(GIN, 31, 33, 37) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 51), rnode(GIN, 31, 33, 36) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 52), rnode(GIN, 31, 33, 35) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 53), rnode(GIN, 31, 33, 34) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 54), rnode(GIN, 31, 33, 33) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 55), rnode(GIN, 31, 33, 32) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 56), rnode(GIN, 31, 33, 31) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 57), rnode(GIN, 31, 33, 30) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 58), rnode(GIN, 31, 32, 9) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 59), rnode(GIN, 31, 32, 7) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 60), rnode(GIN, 31, 32, 6) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 61), rnode(GIN, 31, 32, 5) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 62), rnode(GIN, 31, 32, 4) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 63), rnode(GIN, 31, 32, 3) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 64), rnode(GIN, 31, 32, 2) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 65), rnode(GIN, 31, 32, 1) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 66), rnode(GIN, 31, 32, 0) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 67), rnode(GIN, 31, 31, 64) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 68), rnode(GIN, 31, 31, 63) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 69), rnode(GIN, 31, 31, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 70), rnode(GIN, 31, 31, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 71), rnode(GIN, 31, 31, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 72), rnode(GIN, 31, 31, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 73), rnode(GIN, 31, 31, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 74), rnode(GIN, 31, 31, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 75), rnode(GIN, 31, 31, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 76), rnode(GIN, 31, 30, 64) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 77), rnode(GIN, 31, 30, 63) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 78), rnode(GIN, 31, 30, 62) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 79), rnode(GIN, 31, 30, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 80), rnode(GIN, 31, 30, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 81), rnode(GIN, 31, 30, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 82), rnode(GIN, 31, 30, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 83), rnode(GIN, 31, 30, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 84), rnode(GIN, 31, 30, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 85), rnode(GIN, 31, 29, 64) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 86), rnode(GIN, 31, 29, 63) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 87), rnode(GIN, 31, 29, 62) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 88), rnode(GIN, 31, 29, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 89), rnode(GIN, 31, 29, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 90), rnode(GIN, 31, 29, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 91), rnode(GIN, 31, 29, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 92), rnode(GIN, 31, 29, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 93), rnode(GIN, 31, 29, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 94), rnode(GIN, 31, 28, 64) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 95), rnode(GIN, 31, 28, 63) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 96), rnode(GIN, 31, 28, 62) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 97), rnode(GIN, 31, 28, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 98), rnode(GIN, 31, 28, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 99), rnode(GIN, 31, 28, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 100), rnode(GIN, 31, 28, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 101), rnode(GIN, 31, 28, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 102), rnode(GIN, 31, 28, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 103), rnode(GIN, 31, 27, 64) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 104), rnode(GIN, 31, 27, 63) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 105), rnode(GIN, 31, 27, 62) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 106), rnode(GIN, 31, 27, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 107), rnode(GIN, 31, 27, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 108), rnode(GIN, 31, 27, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 109), rnode(GIN, 31, 27, 57) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 110), rnode(GIN, 31, 27, 56) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 111), rnode(GIN, 31, 27, 55) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 112), rnode(GIN, 31, 26, 64) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 113), rnode(GIN, 31, 26, 63) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 114), rnode(GIN, 31, 26, 62) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 115), rnode(GIN, 31, 26, 61) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 116), rnode(GIN, 31, 26, 60) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 117), rnode(GIN, 31, 26, 59) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_271_389, -1, 118), rnode(GIN, 31, 26, 58) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_2_3, -1, 0), rnode(GIN, 31, 45, 39) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_SCANOUT_2_3, -1, 1), rnode(GIN, 31, 36, 32) },
  { pnode(HPS_TEST, 32, 52, DFT_OUT_FPGA_VIOSCANOUT, -1, -1), rnode(GIN, 31, 56, 2) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_DATA, -1, 0), rnode(GIN, 31, 60, 10) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_DATA, -1, 1), rnode(GIN, 31, 60, 1) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_DATA, -1, 2), rnode(GIN, 31, 60, 0) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_DATA, -1, 3), rnode(GIN, 31, 59, 28) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_DATA, -1, 4), rnode(GIN, 31, 59, 27) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_DATA, -1, 5), rnode(GIN, 31, 59, 26) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_DATA, -1, 6), rnode(GIN, 31, 59, 25) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_DATA, -1, 7), rnode(GIN, 31, 59, 24) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_DATA, -1, 8), rnode(GIN, 31, 59, 23) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_DATA, -1, 9), rnode(GIN, 31, 59, 22) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_DATA, -1, 10), rnode(GIN, 31, 60, 9) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_DATA, -1, 11), rnode(GIN, 31, 60, 8) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_DATA, -1, 12), rnode(GIN, 31, 60, 7) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_DATA, -1, 13), rnode(GIN, 31, 60, 6) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_DATA, -1, 14), rnode(GIN, 31, 60, 5) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_DATA, -1, 15), rnode(GIN, 31, 60, 4) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_DATA, -1, 16), rnode(GIN, 31, 60, 3) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_DATA, -1, 17), rnode(GIN, 31, 60, 2) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_DCLK, -1, -1), rnode(GIN, 31, 58, 16) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_OSC1_CLK, -1, -1), rnode(GIN, 31, 60, 28) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_PR_REQUEST, -1, -1), rnode(GIN, 31, 58, 15) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 0), rnode(GIN, 31, 58, 14) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 1), rnode(GIN, 31, 58, 3) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 2), rnode(GIN, 31, 57, 21) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 3), rnode(GIN, 31, 57, 18) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 4), rnode(GIN, 31, 57, 17) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 5), rnode(GIN, 31, 57, 16) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 6), rnode(GIN, 31, 57, 15) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 7), rnode(GIN, 31, 57, 14) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 8), rnode(GIN, 31, 57, 13) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 9), rnode(GIN, 31, 57, 12) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 10), rnode(GIN, 31, 58, 13) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 11), rnode(GIN, 31, 58, 12) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 12), rnode(GIN, 31, 58, 11) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 13), rnode(GIN, 31, 58, 10) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 14), rnode(GIN, 31, 58, 9) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 15), rnode(GIN, 31, 58, 8) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 16), rnode(GIN, 31, 58, 7) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 17), rnode(GIN, 31, 58, 6) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 18), rnode(GIN, 31, 58, 5) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 19), rnode(GIN, 31, 58, 4) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 20), rnode(GIN, 31, 58, 2) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 21), rnode(GIN, 31, 58, 1) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 22), rnode(GIN, 31, 58, 0) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 23), rnode(GIN, 31, 57, 28) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 24), rnode(GIN, 31, 57, 27) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 25), rnode(GIN, 31, 57, 26) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 26), rnode(GIN, 31, 57, 25) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 27), rnode(GIN, 31, 57, 24) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 28), rnode(GIN, 31, 57, 23) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 29), rnode(GIN, 31, 57, 22) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 30), rnode(GIN, 31, 57, 20) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_S2F_DATA, -1, 31), rnode(GIN, 31, 57, 19) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_SDRAM_OBSERVE, -1, 0), rnode(GIN, 31, 44, 13) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_SDRAM_OBSERVE, -1, 1), rnode(GIN, 31, 44, 12) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_SDRAM_OBSERVE, -1, 2), rnode(GIN, 31, 44, 11) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_SDRAM_OBSERVE, -1, 3), rnode(GIN, 31, 44, 10) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_SDRAM_OBSERVE, -1, 4), rnode(GIN, 31, 44, 9) },
  { pnode(HPS_TEST, 32, 52, DFX_OUT_FPGA_T2_DATAOUT, -1, -1), rnode(GIN, 31, 56, 8) },
  { pnode(HPS_TEST, 32, 52, DFX_SCAN_DOUT, -1, -1), rnode(GIN, 31, 44, 8) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACECLKIN, -1, -1), rnode(DCMUX, 31, 26, 2) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACECLK_CTL, -1, -1), rnode(GOUT, 31, 20, 15) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 0), rnode(GIN, 31, 19, 31) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 1), rnode(GIN, 31, 19, 20) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 2), rnode(GIN, 31, 19, 9) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 3), rnode(GIN, 31, 19, 6) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 4), rnode(GIN, 31, 19, 5) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 5), rnode(GIN, 31, 19, 4) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 6), rnode(GIN, 31, 19, 3) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 7), rnode(GIN, 31, 19, 2) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 8), rnode(GIN, 31, 19, 1) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 9), rnode(GIN, 31, 19, 0) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 10), rnode(GIN, 31, 19, 30) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 11), rnode(GIN, 31, 19, 29) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 12), rnode(GIN, 31, 19, 28) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 13), rnode(GIN, 31, 19, 27) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 14), rnode(GIN, 31, 19, 26) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 15), rnode(GIN, 31, 19, 25) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 16), rnode(GIN, 31, 19, 24) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 17), rnode(GIN, 31, 19, 23) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 18), rnode(GIN, 31, 19, 22) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 19), rnode(GIN, 31, 19, 21) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 20), rnode(GIN, 31, 19, 19) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 21), rnode(GIN, 31, 19, 18) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 22), rnode(GIN, 31, 19, 17) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 23), rnode(GIN, 31, 19, 16) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 24), rnode(GIN, 31, 19, 15) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 25), rnode(GIN, 31, 19, 14) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 26), rnode(GIN, 31, 19, 13) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 27), rnode(GIN, 31, 19, 12) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 28), rnode(GIN, 31, 19, 11) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 29), rnode(GIN, 31, 19, 10) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 30), rnode(GIN, 31, 19, 8) },
  { pnode(HPS_TPIU_TRACE, 32, 18, TRACE_DATA, -1, 31), rnode(GIN, 31, 19, 7) },
  { pnode(DLL, 0, 59, ASYNC_LOAD, -1, -1), rnode(GOUT, 2, 61, 10) },
  { pnode(DLL, 0, 59, UPNDN_IN, -1, -1), rnode(GOUT, 2, 61, 0) },
  { pnode(DLL, 0, 59, UPNDN_IN_CLK_ENA, -1, -1), rnode(GOUT, 2, 61, 9) },
  { pnode(DLL, 0, 59, CTRL_OUT, -1, 0), rnode(GIN, 3, 61, 1) },
  { pnode(DLL, 0, 59, CTRL_OUT, -1, 1), rnode(GIN, 3, 61, 0) },
  { pnode(DLL, 0, 59, CTRL_OUT, -1, 2), rnode(GIN, 2, 61, 13) },
  { pnode(DLL, 0, 59, CTRL_OUT, -1, 3), rnode(GIN, 2, 61, 0) },
  { pnode(DLL, 0, 59, CTRL_OUT, -1, 4), rnode(GIN, 1, 61, 13) },
  { pnode(DLL, 0, 59, CTRL_OUT, -1, 5), rnode(GIN, 1, 61, 14) },
  { pnode(DLL, 0, 59, CTRL_OUT, -1, 6), rnode(GIN, 1, 61, 15) },
  { pnode(DLL, 0, 59, LOCKED, -1, -1), rnode(GIN, 1, 61, 17) },
  { pnode(DLL, 0, 59, UPNDN_OUT, -1, -1), rnode(GIN, 1, 61, 16) },
  { pnode(DLL, 8, 0, ASYNC_LOAD, -1, -1), rnode(GOUT, 2, 0, 10) },
  { pnode(DLL, 8, 0, UPNDN_IN, -1, -1), rnode(GOUT, 2, 0, 0) },
  { pnode(DLL, 8, 0, UPNDN_IN_CLK_ENA, -1, -1), rnode(GOUT, 2, 0, 9) },
  { pnode(DLL, 8, 0, CTRL_OUT, -1, 0), rnode(GIN, 3, 0, 1) },
  { pnode(DLL, 8, 0, CTRL_OUT, -1, 1), rnode(GIN, 3, 0, 0) },
  { pnode(DLL, 8, 0, CTRL_OUT, -1, 2), rnode(GIN, 2, 0, 13) },
  { pnode(DLL, 8, 0, CTRL_OUT, -1, 3), rnode(GIN, 2, 0, 0) },
  { pnode(DLL, 8, 0, CTRL_OUT, -1, 4), rnode(GIN, 1, 0, 13) },
  { pnode(DLL, 8, 0, CTRL_OUT, -1, 5), rnode(GIN, 1, 0, 14) },
  { pnode(DLL, 8, 0, CTRL_OUT, -1, 6), rnode(GIN, 1, 0, 15) },
  { pnode(DLL, 8, 0, LOCKED, -1, -1), rnode(GIN, 1, 0, 17) },
  { pnode(DLL, 8, 0, UPNDN_OUT, -1, -1), rnode(GIN, 1, 0, 16) },
  { pnode(DLL, 68, 3, ASYNC_LOAD, -1, -1), rnode(GOUT, 68, 1, 69) },
  { pnode(DLL, 68, 3, UPNDN_IN, -1, -1), rnode(GOUT, 68, 1, 68) },
  { pnode(DLL, 68, 3, UPNDN_IN_CLK_ENA, -1, -1), rnode(GOUT, 68, 1, 71) },
  { pnode(DLL, 68, 3, CTRL_OUT, -1, 0), rnode(GIN, 68, 1, 80) },
  { pnode(DLL, 68, 3, CTRL_OUT, -1, 1), rnode(GIN, 68, 1, 79) },
  { pnode(DLL, 68, 3, CTRL_OUT, -1, 2), rnode(GIN, 68, 1, 78) },
  { pnode(DLL, 68, 3, CTRL_OUT, -1, 3), rnode(GIN, 68, 1, 77) },
  { pnode(DLL, 68, 3, CTRL_OUT, -1, 4), rnode(GIN, 68, 1, 76) },
  { pnode(DLL, 68, 3, CTRL_OUT, -1, 5), rnode(GIN, 68, 1, 75) },
  { pnode(DLL, 68, 3, CTRL_OUT, -1, 6), rnode(GIN, 68, 1, 74) },
  { pnode(DLL, 68, 3, LOCKED, -1, -1), rnode(GIN, 68, 1, 72) },
  { pnode(DLL, 68, 3, UPNDN_OUT, -1, -1), rnode(GIN, 68, 1, 73) },
  { }
};

const mistral::CycloneV::p2p_info mistral::CycloneV::sx50f_p2p_info[] = {
  { pnode(GPIO, 32, 0, DATAOUT, 1, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 0) },
  { pnode(GPIO, 32, 0, DATAOUT, 1, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 1) },
  { pnode(GPIO, 32, 0, DATAOUT, 1, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 2) },
  { pnode(GPIO, 32, 0, DATAOUT, 1, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 3) },
  { pnode(GPIO, 32, 0, DATAOUT, 0, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 4) },
  { pnode(GPIO, 32, 0, DATAOUT, 0, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 5) },
  { pnode(GPIO, 32, 0, DATAOUT, 0, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 6) },
  { pnode(GPIO, 32, 0, DATAOUT, 0, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 7) },
  { pnode(GPIO, 32, 0, DATAOUT, 2, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 8) },
  { pnode(GPIO, 32, 0, DATAOUT, 2, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 9) },
  { pnode(GPIO, 32, 0, DATAOUT, 2, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 10) },
  { pnode(GPIO, 32, 0, DATAOUT, 2, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 11) },
  { pnode(GPIO, 34, 0, DATAOUT, 3, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 12) },
  { pnode(GPIO, 34, 0, DATAOUT, 3, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 13) },
  { pnode(GPIO, 34, 0, DATAOUT, 3, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 14) },
  { pnode(GPIO, 34, 0, DATAOUT, 3, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 15) },
  { pnode(GPIO, 36, 0, DATAOUT, 1, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 16) },
  { pnode(GPIO, 36, 0, DATAOUT, 1, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 17) },
  { pnode(GPIO, 36, 0, DATAOUT, 1, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 18) },
  { pnode(GPIO, 36, 0, DATAOUT, 1, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 19) },
  { pnode(GPIO, 36, 0, DATAOUT, 0, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 20) },
  { pnode(GPIO, 36, 0, DATAOUT, 0, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 21) },
  { pnode(GPIO, 36, 0, DATAOUT, 0, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 22) },
  { pnode(GPIO, 36, 0, DATAOUT, 0, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 23) },
  { pnode(GPIO, 36, 0, DATAOUT, 2, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 24) },
  { pnode(GPIO, 36, 0, DATAOUT, 2, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 25) },
  { pnode(GPIO, 36, 0, DATAOUT, 2, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 26) },
  { pnode(GPIO, 36, 0, DATAOUT, 2, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 27) },
  { pnode(GPIO, 38, 0, DATAOUT, 3, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 28) },
  { pnode(GPIO, 38, 0, DATAOUT, 3, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 29) },
  { pnode(GPIO, 38, 0, DATAOUT, 3, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 30) },
  { pnode(GPIO, 38, 0, DATAOUT, 3, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 31) },
  { pnode(GPIO, 40, 0, DATAOUT, 1, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 36) },
  { pnode(GPIO, 40, 0, DATAOUT, 1, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 37) },
  { pnode(GPIO, 40, 0, DATAOUT, 1, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 38) },
  { pnode(GPIO, 40, 0, DATAOUT, 1, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 39) },
  { pnode(GPIO, 40, 0, DATAOUT, 0, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 40) },
  { pnode(GPIO, 40, 0, DATAOUT, 0, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 41) },
  { pnode(GPIO, 40, 0, DATAOUT, 0, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 42) },
  { pnode(GPIO, 40, 0, DATAOUT, 0, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 43) },
  { pnode(GPIO, 40, 0, DATAOUT, 2, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 44) },
  { pnode(GPIO, 40, 0, DATAOUT, 2, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 45) },
  { pnode(GPIO, 40, 0, DATAOUT, 2, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 46) },
  { pnode(GPIO, 40, 0, DATAOUT, 2, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 47) },
  { pnode(GPIO, 42, 0, DATAOUT, 3, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 48) },
  { pnode(GPIO, 42, 0, DATAOUT, 3, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 49) },
  { pnode(GPIO, 42, 0, DATAOUT, 3, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 50) },
  { pnode(GPIO, 42, 0, DATAOUT, 3, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 51) },
  { pnode(GPIO, 44, 0, DATAOUT, 1, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 52) },
  { pnode(GPIO, 44, 0, DATAOUT, 1, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 53) },
  { pnode(GPIO, 44, 0, DATAOUT, 1, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 54) },
  { pnode(GPIO, 44, 0, DATAOUT, 1, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 55) },
  { pnode(GPIO, 44, 0, DATAOUT, 0, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 56) },
  { pnode(GPIO, 44, 0, DATAOUT, 0, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 57) },
  { pnode(GPIO, 44, 0, DATAOUT, 0, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 58) },
  { pnode(GPIO, 44, 0, DATAOUT, 0, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 59) },
  { pnode(GPIO, 44, 0, DATAOUT, 2, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 60) },
  { pnode(GPIO, 44, 0, DATAOUT, 2, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 61) },
  { pnode(GPIO, 44, 0, DATAOUT, 2, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 62) },
  { pnode(GPIO, 44, 0, DATAOUT, 2, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 63) },
  { pnode(GPIO, 46, 0, DATAOUT, 3, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 64) },
  { pnode(GPIO, 46, 0, DATAOUT, 3, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 65) },
  { pnode(GPIO, 46, 0, DATAOUT, 3, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 66) },
  { pnode(GPIO, 46, 0, DATAOUT, 3, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 67) },
  { pnode(GPIO, 48, 0, DATAOUT, 1, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 72) },
  { pnode(GPIO, 48, 0, DATAOUT, 1, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 73) },
  { pnode(GPIO, 48, 0, DATAOUT, 1, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 74) },
  { pnode(GPIO, 48, 0, DATAOUT, 1, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 75) },
  { pnode(GPIO, 48, 0, DATAOUT, 0, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 76) },
  { pnode(GPIO, 48, 0, DATAOUT, 0, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 77) },
  { pnode(GPIO, 48, 0, DATAOUT, 0, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 78) },
  { pnode(GPIO, 48, 0, DATAOUT, 0, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 79) },
  { pnode(GPIO, 48, 0, DATAOUT, 2, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 80) },
  { pnode(GPIO, 48, 0, DATAOUT, 2, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 81) },
  { pnode(GPIO, 48, 0, DATAOUT, 2, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 82) },
  { pnode(GPIO, 48, 0, DATAOUT, 2, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 83) },
  { pnode(GPIO, 50, 0, DATAOUT, 3, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 84) },
  { pnode(GPIO, 50, 0, DATAOUT, 3, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 85) },
  { pnode(GPIO, 50, 0, DATAOUT, 3, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 86) },
  { pnode(GPIO, 50, 0, DATAOUT, 3, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 87) },
  { pnode(GPIO, 51, 0, DATAOUT, 1, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 88) },
  { pnode(GPIO, 51, 0, DATAOUT, 1, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 89) },
  { pnode(GPIO, 51, 0, DATAOUT, 1, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 90) },
  { pnode(GPIO, 51, 0, DATAOUT, 1, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 91) },
  { pnode(GPIO, 51, 0, DATAOUT, 0, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 92) },
  { pnode(GPIO, 51, 0, DATAOUT, 0, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 93) },
  { pnode(GPIO, 51, 0, DATAOUT, 0, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 94) },
  { pnode(GPIO, 51, 0, DATAOUT, 0, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 95) },
  { pnode(GPIO, 51, 0, DATAOUT, 2, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 96) },
  { pnode(GPIO, 51, 0, DATAOUT, 2, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 97) },
  { pnode(GPIO, 51, 0, DATAOUT, 2, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 98) },
  { pnode(GPIO, 51, 0, DATAOUT, 2, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 99) },
  { pnode(GPIO, 53, 0, DATAOUT, 3, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 100) },
  { pnode(GPIO, 53, 0, DATAOUT, 3, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 101) },
  { pnode(GPIO, 53, 0, DATAOUT, 3, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 102) },
  { pnode(GPIO, 53, 0, DATAOUT, 3, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 103) },
  { pnode(GPIO, 55, 0, DATAOUT, 1, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 108) },
  { pnode(GPIO, 55, 0, DATAOUT, 1, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 109) },
  { pnode(GPIO, 55, 0, DATAOUT, 1, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 110) },
  { pnode(GPIO, 55, 0, DATAOUT, 1, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 111) },
  { pnode(GPIO, 55, 0, DATAOUT, 0, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 112) },
  { pnode(GPIO, 55, 0, DATAOUT, 0, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 113) },
  { pnode(GPIO, 55, 0, DATAOUT, 0, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 114) },
  { pnode(GPIO, 55, 0, DATAOUT, 0, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 115) },
  { pnode(GPIO, 55, 0, DATAOUT, 2, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 116) },
  { pnode(GPIO, 55, 0, DATAOUT, 2, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 117) },
  { pnode(GPIO, 55, 0, DATAOUT, 2, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 118) },
  { pnode(GPIO, 55, 0, DATAOUT, 2, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 119) },
  { pnode(GPIO, 57, 0, DATAOUT, 3, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 120) },
  { pnode(GPIO, 57, 0, DATAOUT, 3, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 121) },
  { pnode(GPIO, 57, 0, DATAOUT, 3, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 122) },
  { pnode(GPIO, 57, 0, DATAOUT, 3, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 123) },
  { pnode(GPIO, 59, 0, DATAOUT, 1, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 124) },
  { pnode(GPIO, 59, 0, DATAOUT, 1, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 125) },
  { pnode(GPIO, 59, 0, DATAOUT, 1, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 126) },
  { pnode(GPIO, 59, 0, DATAOUT, 1, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 127) },
  { pnode(GPIO, 59, 0, DATAOUT, 0, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 128) },
  { pnode(GPIO, 59, 0, DATAOUT, 0, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 129) },
  { pnode(GPIO, 59, 0, DATAOUT, 0, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 130) },
  { pnode(GPIO, 59, 0, DATAOUT, 0, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 131) },
  { pnode(GPIO, 59, 0, DATAOUT, 2, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 132) },
  { pnode(GPIO, 59, 0, DATAOUT, 2, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 133) },
  { pnode(GPIO, 59, 0, DATAOUT, 2, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 134) },
  { pnode(GPIO, 59, 0, DATAOUT, 2, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 135) },
  { pnode(GPIO, 61, 0, DATAOUT, 3, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 136) },
  { pnode(GPIO, 61, 0, DATAOUT, 3, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 137) },
  { pnode(GPIO, 61, 0, DATAOUT, 3, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 138) },
  { pnode(GPIO, 61, 0, DATAOUT, 3, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 139) },
  { pnode(GPIO, 62, 0, DATAOUT, 1, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 144) },
  { pnode(GPIO, 62, 0, DATAOUT, 1, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 145) },
  { pnode(GPIO, 62, 0, DATAOUT, 1, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 146) },
  { pnode(GPIO, 62, 0, DATAOUT, 1, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 147) },
  { pnode(GPIO, 62, 0, DATAOUT, 0, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 148) },
  { pnode(GPIO, 62, 0, DATAOUT, 0, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 149) },
  { pnode(GPIO, 62, 0, DATAOUT, 0, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 150) },
  { pnode(GPIO, 62, 0, DATAOUT, 0, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 151) },
  { pnode(GPIO, 62, 0, DATAOUT, 2, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 152) },
  { pnode(GPIO, 62, 0, DATAOUT, 2, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 153) },
  { pnode(GPIO, 62, 0, DATAOUT, 2, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 154) },
  { pnode(GPIO, 62, 0, DATAOUT, 2, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 155) },
  { pnode(GPIO, 64, 0, DATAOUT, 3, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 156) },
  { pnode(GPIO, 64, 0, DATAOUT, 3, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 157) },
  { pnode(GPIO, 64, 0, DATAOUT, 3, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 158) },
  { pnode(GPIO, 64, 0, DATAOUT, 3, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 159) },
  { pnode(GPIO, 65, 0, DATAOUT, 1, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 160) },
  { pnode(GPIO, 65, 0, DATAOUT, 1, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 161) },
  { pnode(GPIO, 65, 0, DATAOUT, 1, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 162) },
  { pnode(GPIO, 65, 0, DATAOUT, 1, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 163) },
  { pnode(GPIO, 65, 0, DATAOUT, 0, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 164) },
  { pnode(GPIO, 65, 0, DATAOUT, 0, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 165) },
  { pnode(GPIO, 65, 0, DATAOUT, 0, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 166) },
  { pnode(GPIO, 65, 0, DATAOUT, 0, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 167) },
  { pnode(GPIO, 65, 0, DATAOUT, 2, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 168) },
  { pnode(GPIO, 65, 0, DATAOUT, 2, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 169) },
  { pnode(GPIO, 65, 0, DATAOUT, 2, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 170) },
  { pnode(GPIO, 65, 0, DATAOUT, 2, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 171) },
  { pnode(GPIO, 66, 0, DATAOUT, 3, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 172) },
  { pnode(GPIO, 66, 0, DATAOUT, 3, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 173) },
  { pnode(GPIO, 66, 0, DATAOUT, 3, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 174) },
  { pnode(GPIO, 66, 0, DATAOUT, 3, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 175) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 0), pnode(GPIO, 21, 0, ACLR, 2, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 1), pnode(GPIO, 21, 0, ACLR, 3, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 2), pnode(GPIO, 19, 0, ACLR, 2, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 3), pnode(GPIO, 19, 0, ACLR, 3, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 4), pnode(GPIO, 19, 0, ACLR, 0, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 5), pnode(GPIO, 19, 0, ACLR, 1, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 6), pnode(GPIO, 18, 0, ACLR, 2, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 7), pnode(GPIO, 18, 0, ACLR, 3, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 8), pnode(GPIO, 14, 0, ACLR, 0, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 9), pnode(GPIO, 14, 0, ACLR, 1, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 10), pnode(GPIO, 14, 0, ACLR, 2, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 11), pnode(GPIO, 14, 0, ACLR, 3, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 12), pnode(GPIO, 12, 0, ACLR, 2, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 13), pnode(GPIO, 12, 0, ACLR, 3, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 14), pnode(GPIO, 10, 0, ACLR, 0, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 15), pnode(GPIO, 10, 0, ACLR, 1, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 0), pnode(GPIO, 21, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 1), pnode(GPIO, 21, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 2), pnode(GPIO, 21, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 3), pnode(GPIO, 21, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 4), pnode(GPIO, 21, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 5), pnode(GPIO, 21, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 6), pnode(GPIO, 21, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 7), pnode(GPIO, 21, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 8), pnode(GPIO, 19, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 9), pnode(GPIO, 19, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 10), pnode(GPIO, 19, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 11), pnode(GPIO, 19, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 12), pnode(GPIO, 19, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 13), pnode(GPIO, 19, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 14), pnode(GPIO, 19, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 15), pnode(GPIO, 19, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 16), pnode(GPIO, 19, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 17), pnode(GPIO, 19, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 18), pnode(GPIO, 19, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 19), pnode(GPIO, 19, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 20), pnode(GPIO, 19, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 21), pnode(GPIO, 19, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 22), pnode(GPIO, 19, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 23), pnode(GPIO, 19, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 24), pnode(GPIO, 18, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 25), pnode(GPIO, 18, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 26), pnode(GPIO, 18, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 27), pnode(GPIO, 18, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 28), pnode(GPIO, 18, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 29), pnode(GPIO, 18, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 30), pnode(GPIO, 18, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 31), pnode(GPIO, 18, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 32), pnode(GPIO, 14, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 33), pnode(GPIO, 14, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 34), pnode(GPIO, 14, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 35), pnode(GPIO, 14, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 36), pnode(GPIO, 14, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 37), pnode(GPIO, 14, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 38), pnode(GPIO, 14, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 39), pnode(GPIO, 14, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 40), pnode(GPIO, 14, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 41), pnode(GPIO, 14, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 42), pnode(GPIO, 14, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 43), pnode(GPIO, 14, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 44), pnode(GPIO, 14, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 45), pnode(GPIO, 14, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 46), pnode(GPIO, 14, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 47), pnode(GPIO, 14, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 48), pnode(GPIO, 12, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 49), pnode(GPIO, 12, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 50), pnode(GPIO, 12, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 51), pnode(GPIO, 12, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 52), pnode(GPIO, 12, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 53), pnode(GPIO, 12, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 54), pnode(GPIO, 12, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 55), pnode(GPIO, 12, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 56), pnode(GPIO, 10, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 57), pnode(GPIO, 10, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 58), pnode(GPIO, 10, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 59), pnode(GPIO, 10, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 60), pnode(GPIO, 10, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 61), pnode(GPIO, 10, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 62), pnode(GPIO, 10, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 63), pnode(GPIO, 10, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIOBAACLR, -1, -1), pnode(GPIO, 17, 0, ACLR, 1, -1) },
  { pnode(HMC, 23, 0, PHYDDIOBADOUT, -1, 0), pnode(GPIO, 17, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIOBADOUT, -1, 1), pnode(GPIO, 17, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIOBADOUT, -1, 2), pnode(GPIO, 17, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIOBADOUT, -1, 3), pnode(GPIO, 17, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIOCASNACLR, -1, -1), pnode(GPIO, 15, 0, ACLR, 2, -1) },
  { pnode(HMC, 23, 0, PHYDDIOCASNDOUT, -1, 0), pnode(GPIO, 15, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIOCASNDOUT, -1, 1), pnode(GPIO, 15, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIOCASNDOUT, -1, 2), pnode(GPIO, 15, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIOCASNDOUT, -1, 3), pnode(GPIO, 15, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIOCKDOUT, -1, 0), pnode(GPIO, 18, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIOCKDOUT, -1, 1), pnode(GPIO, 18, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIOCKDOUT, -1, 2), pnode(GPIO, 18, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIOCKDOUT, -1, 3), pnode(GPIO, 18, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIOCKEACLR, -1, 0), pnode(GPIO, 44, 0, ACLR, 3, -1) },
  { pnode(HMC, 23, 0, PHYDDIOCKEACLR, -1, 1), pnode(GPIO, 42, 0, ACLR, 2, -1) },
  { pnode(HMC, 23, 0, PHYDDIOCKEDOUT, -1, 0), pnode(GPIO, 44, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIOCKEDOUT, -1, 1), pnode(GPIO, 44, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIOCKEDOUT, -1, 2), pnode(GPIO, 44, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIOCKEDOUT, -1, 3), pnode(GPIO, 44, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIOCKEDOUT, -1, 4), pnode(GPIO, 42, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIOCKEDOUT, -1, 5), pnode(GPIO, 42, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIOCKEDOUT, -1, 6), pnode(GPIO, 42, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIOCKEDOUT, -1, 7), pnode(GPIO, 42, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIOCKNDOUT, -1, 0), pnode(GPIO, 18, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIOCKNDOUT, -1, 1), pnode(GPIO, 18, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIOCKNDOUT, -1, 2), pnode(GPIO, 18, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIOCKNDOUT, -1, 3), pnode(GPIO, 18, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIOCSNACLR, -1, 0), pnode(GPIO, 12, 0, ACLR, 0, -1) },
  { pnode(HMC, 23, 0, PHYDDIOCSNACLR, -1, 1), pnode(GPIO, 12, 0, ACLR, 1, -1) },
  { pnode(HMC, 23, 0, PHYDDIOCSNDOUT, -1, 0), pnode(GPIO, 12, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIOCSNDOUT, -1, 1), pnode(GPIO, 12, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIOCSNDOUT, -1, 2), pnode(GPIO, 12, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIOCSNDOUT, -1, 3), pnode(GPIO, 12, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIOCSNDOUT, -1, 4), pnode(GPIO, 12, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIOCSNDOUT, -1, 5), pnode(GPIO, 12, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIOCSNDOUT, -1, 6), pnode(GPIO, 12, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIOCSNDOUT, -1, 7), pnode(GPIO, 12, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 0), pnode(GPIO, 38, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 1), pnode(GPIO, 38, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 2), pnode(GPIO, 38, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 3), pnode(GPIO, 38, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 4), pnode(GPIO, 46, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 5), pnode(GPIO, 46, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 6), pnode(GPIO, 46, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 7), pnode(GPIO, 46, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 8), pnode(GPIO, 53, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 9), pnode(GPIO, 53, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 10), pnode(GPIO, 53, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 11), pnode(GPIO, 53, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 12), pnode(GPIO, 61, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 13), pnode(GPIO, 61, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 14), pnode(GPIO, 61, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 15), pnode(GPIO, 61, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 16), pnode(GPIO, 66, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 17), pnode(GPIO, 66, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 18), pnode(GPIO, 66, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 19), pnode(GPIO, 66, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 0), pnode(GPIO, 32, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 1), pnode(GPIO, 32, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 2), pnode(GPIO, 32, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 3), pnode(GPIO, 32, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 4), pnode(GPIO, 32, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 5), pnode(GPIO, 32, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 6), pnode(GPIO, 32, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 7), pnode(GPIO, 32, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 8), pnode(GPIO, 32, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 9), pnode(GPIO, 32, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 10), pnode(GPIO, 32, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 11), pnode(GPIO, 32, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 12), pnode(GPIO, 34, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 13), pnode(GPIO, 34, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 14), pnode(GPIO, 34, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 15), pnode(GPIO, 34, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 16), pnode(GPIO, 36, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 17), pnode(GPIO, 36, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 18), pnode(GPIO, 36, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 19), pnode(GPIO, 36, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 20), pnode(GPIO, 36, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 21), pnode(GPIO, 36, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 22), pnode(GPIO, 36, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 23), pnode(GPIO, 36, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 24), pnode(GPIO, 36, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 25), pnode(GPIO, 36, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 26), pnode(GPIO, 36, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 27), pnode(GPIO, 36, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 28), pnode(GPIO, 38, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 29), pnode(GPIO, 38, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 30), pnode(GPIO, 38, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 31), pnode(GPIO, 38, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 36), pnode(GPIO, 40, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 37), pnode(GPIO, 40, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 38), pnode(GPIO, 40, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 39), pnode(GPIO, 40, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 40), pnode(GPIO, 40, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 41), pnode(GPIO, 40, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 42), pnode(GPIO, 40, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 43), pnode(GPIO, 40, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 44), pnode(GPIO, 40, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 45), pnode(GPIO, 40, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 46), pnode(GPIO, 40, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 47), pnode(GPIO, 40, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 48), pnode(GPIO, 42, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 49), pnode(GPIO, 42, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 50), pnode(GPIO, 42, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 51), pnode(GPIO, 42, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 52), pnode(GPIO, 44, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 53), pnode(GPIO, 44, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 54), pnode(GPIO, 44, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 55), pnode(GPIO, 44, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 56), pnode(GPIO, 44, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 57), pnode(GPIO, 44, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 58), pnode(GPIO, 44, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 59), pnode(GPIO, 44, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 60), pnode(GPIO, 44, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 61), pnode(GPIO, 44, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 62), pnode(GPIO, 44, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 63), pnode(GPIO, 44, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 64), pnode(GPIO, 46, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 65), pnode(GPIO, 46, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 66), pnode(GPIO, 46, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 67), pnode(GPIO, 46, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 72), pnode(GPIO, 48, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 73), pnode(GPIO, 48, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 74), pnode(GPIO, 48, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 75), pnode(GPIO, 48, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 76), pnode(GPIO, 48, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 77), pnode(GPIO, 48, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 78), pnode(GPIO, 48, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 79), pnode(GPIO, 48, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 80), pnode(GPIO, 48, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 81), pnode(GPIO, 48, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 82), pnode(GPIO, 48, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 83), pnode(GPIO, 48, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 84), pnode(GPIO, 50, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 85), pnode(GPIO, 50, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 86), pnode(GPIO, 50, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 87), pnode(GPIO, 50, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 88), pnode(GPIO, 51, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 89), pnode(GPIO, 51, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 90), pnode(GPIO, 51, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 91), pnode(GPIO, 51, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 92), pnode(GPIO, 51, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 93), pnode(GPIO, 51, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 94), pnode(GPIO, 51, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 95), pnode(GPIO, 51, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 96), pnode(GPIO, 51, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 97), pnode(GPIO, 51, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 98), pnode(GPIO, 51, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 99), pnode(GPIO, 51, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 100), pnode(GPIO, 53, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 101), pnode(GPIO, 53, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 102), pnode(GPIO, 53, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 103), pnode(GPIO, 53, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 108), pnode(GPIO, 55, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 109), pnode(GPIO, 55, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 110), pnode(GPIO, 55, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 111), pnode(GPIO, 55, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 112), pnode(GPIO, 55, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 113), pnode(GPIO, 55, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 114), pnode(GPIO, 55, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 115), pnode(GPIO, 55, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 116), pnode(GPIO, 55, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 117), pnode(GPIO, 55, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 118), pnode(GPIO, 55, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 119), pnode(GPIO, 55, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 120), pnode(GPIO, 57, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 121), pnode(GPIO, 57, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 122), pnode(GPIO, 57, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 123), pnode(GPIO, 57, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 124), pnode(GPIO, 59, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 125), pnode(GPIO, 59, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 126), pnode(GPIO, 59, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 127), pnode(GPIO, 59, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 128), pnode(GPIO, 59, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 129), pnode(GPIO, 59, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 130), pnode(GPIO, 59, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 131), pnode(GPIO, 59, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 132), pnode(GPIO, 59, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 133), pnode(GPIO, 59, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 134), pnode(GPIO, 59, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 135), pnode(GPIO, 59, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 136), pnode(GPIO, 61, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 137), pnode(GPIO, 61, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 138), pnode(GPIO, 61, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 139), pnode(GPIO, 61, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 144), pnode(GPIO, 62, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 145), pnode(GPIO, 62, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 146), pnode(GPIO, 62, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 147), pnode(GPIO, 62, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 148), pnode(GPIO, 62, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 149), pnode(GPIO, 62, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 150), pnode(GPIO, 62, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 151), pnode(GPIO, 62, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 152), pnode(GPIO, 62, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 153), pnode(GPIO, 62, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 154), pnode(GPIO, 62, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 155), pnode(GPIO, 62, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 156), pnode(GPIO, 64, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 157), pnode(GPIO, 64, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 158), pnode(GPIO, 64, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 159), pnode(GPIO, 64, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 160), pnode(GPIO, 65, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 161), pnode(GPIO, 65, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 162), pnode(GPIO, 65, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 163), pnode(GPIO, 65, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 164), pnode(GPIO, 65, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 165), pnode(GPIO, 65, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 166), pnode(GPIO, 65, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 167), pnode(GPIO, 65, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 168), pnode(GPIO, 65, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 169), pnode(GPIO, 65, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 170), pnode(GPIO, 65, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 171), pnode(GPIO, 65, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 172), pnode(GPIO, 66, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 173), pnode(GPIO, 66, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 174), pnode(GPIO, 66, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 175), pnode(GPIO, 66, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 0), pnode(GPIO, 32, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 1), pnode(GPIO, 32, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 2), pnode(GPIO, 32, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 3), pnode(GPIO, 32, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 4), pnode(GPIO, 32, 0, OEIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 5), pnode(GPIO, 32, 0, OEIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 6), pnode(GPIO, 34, 0, OEIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 7), pnode(GPIO, 34, 0, OEIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 8), pnode(GPIO, 36, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 9), pnode(GPIO, 36, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 10), pnode(GPIO, 36, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 11), pnode(GPIO, 36, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 12), pnode(GPIO, 36, 0, OEIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 13), pnode(GPIO, 36, 0, OEIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 14), pnode(GPIO, 38, 0, OEIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 15), pnode(GPIO, 38, 0, OEIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 18), pnode(GPIO, 40, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 19), pnode(GPIO, 40, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 20), pnode(GPIO, 40, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 21), pnode(GPIO, 40, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 22), pnode(GPIO, 40, 0, OEIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 23), pnode(GPIO, 40, 0, OEIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 24), pnode(GPIO, 42, 0, OEIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 25), pnode(GPIO, 42, 0, OEIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 26), pnode(GPIO, 44, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 27), pnode(GPIO, 44, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 28), pnode(GPIO, 44, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 29), pnode(GPIO, 44, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 30), pnode(GPIO, 44, 0, OEIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 31), pnode(GPIO, 44, 0, OEIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 32), pnode(GPIO, 46, 0, OEIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 33), pnode(GPIO, 46, 0, OEIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 36), pnode(GPIO, 48, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 37), pnode(GPIO, 48, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 38), pnode(GPIO, 48, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 39), pnode(GPIO, 48, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 40), pnode(GPIO, 48, 0, OEIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 41), pnode(GPIO, 48, 0, OEIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 42), pnode(GPIO, 50, 0, OEIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 43), pnode(GPIO, 50, 0, OEIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 44), pnode(GPIO, 51, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 45), pnode(GPIO, 51, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 46), pnode(GPIO, 51, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 47), pnode(GPIO, 51, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 48), pnode(GPIO, 51, 0, OEIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 49), pnode(GPIO, 51, 0, OEIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 50), pnode(GPIO, 53, 0, OEIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 51), pnode(GPIO, 53, 0, OEIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 54), pnode(GPIO, 55, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 55), pnode(GPIO, 55, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 56), pnode(GPIO, 55, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 57), pnode(GPIO, 55, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 58), pnode(GPIO, 55, 0, OEIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 59), pnode(GPIO, 55, 0, OEIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 60), pnode(GPIO, 57, 0, OEIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 61), pnode(GPIO, 57, 0, OEIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 62), pnode(GPIO, 59, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 63), pnode(GPIO, 59, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 64), pnode(GPIO, 59, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 65), pnode(GPIO, 59, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 66), pnode(GPIO, 59, 0, OEIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 67), pnode(GPIO, 59, 0, OEIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 68), pnode(GPIO, 61, 0, OEIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 69), pnode(GPIO, 61, 0, OEIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 72), pnode(GPIO, 62, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 73), pnode(GPIO, 62, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 74), pnode(GPIO, 62, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 75), pnode(GPIO, 62, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 76), pnode(GPIO, 62, 0, OEIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 77), pnode(GPIO, 62, 0, OEIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 78), pnode(GPIO, 64, 0, OEIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 79), pnode(GPIO, 64, 0, OEIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 80), pnode(GPIO, 65, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 81), pnode(GPIO, 65, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 82), pnode(GPIO, 65, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 83), pnode(GPIO, 65, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 84), pnode(GPIO, 65, 0, OEIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 85), pnode(GPIO, 65, 0, OEIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 86), pnode(GPIO, 66, 0, OEIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 87), pnode(GPIO, 66, 0, OEIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 0), pnode(GPIO, 34, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 1), pnode(GPIO, 34, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 2), pnode(GPIO, 34, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 3), pnode(GPIO, 34, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 4), pnode(GPIO, 42, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 5), pnode(GPIO, 42, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 6), pnode(GPIO, 42, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 7), pnode(GPIO, 42, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 8), pnode(GPIO, 50, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 9), pnode(GPIO, 50, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 10), pnode(GPIO, 50, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 11), pnode(GPIO, 50, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 12), pnode(GPIO, 57, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 13), pnode(GPIO, 57, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 14), pnode(GPIO, 57, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 15), pnode(GPIO, 57, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 16), pnode(GPIO, 64, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 17), pnode(GPIO, 64, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 18), pnode(GPIO, 64, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 19), pnode(GPIO, 64, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQSBOE, -1, 0), pnode(GPIO, 34, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSBOE, -1, 1), pnode(GPIO, 34, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSBOE, -1, 2), pnode(GPIO, 42, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSBOE, -1, 3), pnode(GPIO, 42, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSBOE, -1, 4), pnode(GPIO, 50, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSBOE, -1, 5), pnode(GPIO, 50, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSBOE, -1, 6), pnode(GPIO, 57, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSBOE, -1, 7), pnode(GPIO, 57, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSBOE, -1, 8), pnode(GPIO, 64, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSBOE, -1, 9), pnode(GPIO, 64, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 0), pnode(GPIO, 34, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 1), pnode(GPIO, 34, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 2), pnode(GPIO, 34, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 3), pnode(GPIO, 34, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 4), pnode(GPIO, 42, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 5), pnode(GPIO, 42, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 6), pnode(GPIO, 42, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 7), pnode(GPIO, 42, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 8), pnode(GPIO, 50, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 9), pnode(GPIO, 50, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 10), pnode(GPIO, 50, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 11), pnode(GPIO, 50, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 12), pnode(GPIO, 57, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 13), pnode(GPIO, 57, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 14), pnode(GPIO, 57, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 15), pnode(GPIO, 57, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 16), pnode(GPIO, 64, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 17), pnode(GPIO, 64, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 18), pnode(GPIO, 64, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 19), pnode(GPIO, 64, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQSOE, -1, 0), pnode(GPIO, 34, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSOE, -1, 1), pnode(GPIO, 34, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSOE, -1, 2), pnode(GPIO, 42, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSOE, -1, 3), pnode(GPIO, 42, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSOE, -1, 4), pnode(GPIO, 50, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSOE, -1, 5), pnode(GPIO, 50, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSOE, -1, 6), pnode(GPIO, 57, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSOE, -1, 7), pnode(GPIO, 57, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSOE, -1, 8), pnode(GPIO, 64, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSOE, -1, 9), pnode(GPIO, 64, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIOODTACLR, -1, 0), pnode(GPIO, 34, 0, ACLR, 2, -1) },
  { pnode(HMC, 23, 0, PHYDDIOODTACLR, -1, 1), pnode(GPIO, 36, 0, ACLR, 3, -1) },
  { pnode(HMC, 23, 0, PHYDDIOODTDOUT, -1, 0), pnode(GPIO, 34, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIOODTDOUT, -1, 1), pnode(GPIO, 34, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIOODTDOUT, -1, 2), pnode(GPIO, 34, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIOODTDOUT, -1, 3), pnode(GPIO, 34, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIOODTDOUT, -1, 4), pnode(GPIO, 36, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIOODTDOUT, -1, 5), pnode(GPIO, 36, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIOODTDOUT, -1, 6), pnode(GPIO, 36, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIOODTDOUT, -1, 7), pnode(GPIO, 36, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIORASNACLR, -1, -1), pnode(GPIO, 15, 0, ACLR, 3, -1) },
  { pnode(HMC, 23, 0, PHYDDIORASNDOUT, -1, 0), pnode(GPIO, 15, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIORASNDOUT, -1, 1), pnode(GPIO, 15, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIORASNDOUT, -1, 2), pnode(GPIO, 15, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIORASNDOUT, -1, 3), pnode(GPIO, 15, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIORESETNACLR, -1, -1), pnode(GPIO, 50, 0, ACLR, 2, -1) },
  { pnode(HMC, 23, 0, PHYDDIORESETNDOUT, -1, 0), pnode(GPIO, 50, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIORESETNDOUT, -1, 1), pnode(GPIO, 50, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIORESETNDOUT, -1, 2), pnode(GPIO, 50, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIORESETNDOUT, -1, 3), pnode(GPIO, 50, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIOWENACLR, -1, -1), pnode(GPIO, 10, 0, ACLR, 2, -1) },
  { pnode(HMC, 23, 0, PHYDDIOWENDOUT, -1, 0), pnode(GPIO, 10, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIOWENDOUT, -1, 1), pnode(GPIO, 10, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIOWENDOUT, -1, 2), pnode(GPIO, 10, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIOWENDOUT, -1, 3), pnode(GPIO, 10, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PNONE, 0, -1), pnode(DQS16, 32, 0, PNONE, -1, -1) },
  { pnode(HMC, 23, 0, PNONE, 1, -1), pnode(DQS16, 40, 0, PNONE, -1, -1) },
  { pnode(HMC, 23, 0, PNONE, 2, -1), pnode(DQS16, 48, 0, PNONE, -1, -1) },
  { pnode(HMC, 23, 0, PNONE, 3, -1), pnode(DQS16, 55, 0, PNONE, -1, -1) },
  { pnode(HMC, 23, 0, PNONE, 4, -1), pnode(DQS16, 62, 0, PNONE, -1, -1) },
  { pnode(HMC, 23, 0, PNONE, -1, -1), pnode(LVL, 54, 0, PNONE, -1, -1) },
  { pnode(GPIO, 68, 46, DATAOUT, 1, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 0) },
  { pnode(GPIO, 68, 46, DATAOUT, 1, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 1) },
  { pnode(GPIO, 68, 46, DATAOUT, 1, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 2) },
  { pnode(GPIO, 68, 46, DATAOUT, 1, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 3) },
  { pnode(GPIO, 68, 46, DATAOUT, 0, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 4) },
  { pnode(GPIO, 68, 46, DATAOUT, 0, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 5) },
  { pnode(GPIO, 68, 46, DATAOUT, 0, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 6) },
  { pnode(GPIO, 68, 46, DATAOUT, 0, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 7) },
  { pnode(GPIO, 68, 46, DATAOUT, 2, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 8) },
  { pnode(GPIO, 68, 46, DATAOUT, 2, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 9) },
  { pnode(GPIO, 68, 46, DATAOUT, 2, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 10) },
  { pnode(GPIO, 68, 46, DATAOUT, 2, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 11) },
  { pnode(GPIO, 68, 45, DATAOUT, 3, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 12) },
  { pnode(GPIO, 68, 45, DATAOUT, 3, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 13) },
  { pnode(GPIO, 68, 45, DATAOUT, 3, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 14) },
  { pnode(GPIO, 68, 45, DATAOUT, 3, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 15) },
  { pnode(GPIO, 68, 44, DATAOUT, 1, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 16) },
  { pnode(GPIO, 68, 44, DATAOUT, 1, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 17) },
  { pnode(GPIO, 68, 44, DATAOUT, 1, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 18) },
  { pnode(GPIO, 68, 44, DATAOUT, 1, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 19) },
  { pnode(GPIO, 68, 44, DATAOUT, 0, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 20) },
  { pnode(GPIO, 68, 44, DATAOUT, 0, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 21) },
  { pnode(GPIO, 68, 44, DATAOUT, 0, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 22) },
  { pnode(GPIO, 68, 44, DATAOUT, 0, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 23) },
  { pnode(GPIO, 68, 44, DATAOUT, 2, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 24) },
  { pnode(GPIO, 68, 44, DATAOUT, 2, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 25) },
  { pnode(GPIO, 68, 44, DATAOUT, 2, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 26) },
  { pnode(GPIO, 68, 44, DATAOUT, 2, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 27) },
  { pnode(GPIO, 68, 43, DATAOUT, 3, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 28) },
  { pnode(GPIO, 68, 43, DATAOUT, 3, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 29) },
  { pnode(GPIO, 68, 43, DATAOUT, 3, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 30) },
  { pnode(GPIO, 68, 43, DATAOUT, 3, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 31) },
  { pnode(GPIO, 68, 39, DATAOUT, 1, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 36) },
  { pnode(GPIO, 68, 39, DATAOUT, 1, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 37) },
  { pnode(GPIO, 68, 39, DATAOUT, 1, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 38) },
  { pnode(GPIO, 68, 39, DATAOUT, 1, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 39) },
  { pnode(GPIO, 68, 39, DATAOUT, 0, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 40) },
  { pnode(GPIO, 68, 39, DATAOUT, 0, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 41) },
  { pnode(GPIO, 68, 39, DATAOUT, 0, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 42) },
  { pnode(GPIO, 68, 39, DATAOUT, 0, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 43) },
  { pnode(GPIO, 68, 39, DATAOUT, 2, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 44) },
  { pnode(GPIO, 68, 39, DATAOUT, 2, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 45) },
  { pnode(GPIO, 68, 39, DATAOUT, 2, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 46) },
  { pnode(GPIO, 68, 39, DATAOUT, 2, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 47) },
  { pnode(GPIO, 68, 38, DATAOUT, 3, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 48) },
  { pnode(GPIO, 68, 38, DATAOUT, 3, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 49) },
  { pnode(GPIO, 68, 38, DATAOUT, 3, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 50) },
  { pnode(GPIO, 68, 38, DATAOUT, 3, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 51) },
  { pnode(GPIO, 68, 37, DATAOUT, 1, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 52) },
  { pnode(GPIO, 68, 37, DATAOUT, 1, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 53) },
  { pnode(GPIO, 68, 37, DATAOUT, 1, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 54) },
  { pnode(GPIO, 68, 37, DATAOUT, 1, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 55) },
  { pnode(GPIO, 68, 37, DATAOUT, 0, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 56) },
  { pnode(GPIO, 68, 37, DATAOUT, 0, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 57) },
  { pnode(GPIO, 68, 37, DATAOUT, 0, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 58) },
  { pnode(GPIO, 68, 37, DATAOUT, 0, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 59) },
  { pnode(GPIO, 68, 37, DATAOUT, 2, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 60) },
  { pnode(GPIO, 68, 37, DATAOUT, 2, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 61) },
  { pnode(GPIO, 68, 37, DATAOUT, 2, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 62) },
  { pnode(GPIO, 68, 37, DATAOUT, 2, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 63) },
  { pnode(GPIO, 68, 36, DATAOUT, 3, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 64) },
  { pnode(GPIO, 68, 36, DATAOUT, 3, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 65) },
  { pnode(GPIO, 68, 36, DATAOUT, 3, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 66) },
  { pnode(GPIO, 68, 36, DATAOUT, 3, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 67) },
  { pnode(GPIO, 68, 32, DATAOUT, 1, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 72) },
  { pnode(GPIO, 68, 32, DATAOUT, 1, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 73) },
  { pnode(GPIO, 68, 32, DATAOUT, 1, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 74) },
  { pnode(GPIO, 68, 32, DATAOUT, 1, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 75) },
  { pnode(GPIO, 68, 32, DATAOUT, 0, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 76) },
  { pnode(GPIO, 68, 32, DATAOUT, 0, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 77) },
  { pnode(GPIO, 68, 32, DATAOUT, 0, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 78) },
  { pnode(GPIO, 68, 32, DATAOUT, 0, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 79) },
  { pnode(GPIO, 68, 32, DATAOUT, 2, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 80) },
  { pnode(GPIO, 68, 32, DATAOUT, 2, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 81) },
  { pnode(GPIO, 68, 32, DATAOUT, 2, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 82) },
  { pnode(GPIO, 68, 32, DATAOUT, 2, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 83) },
  { pnode(GPIO, 68, 31, DATAOUT, 3, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 84) },
  { pnode(GPIO, 68, 31, DATAOUT, 3, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 85) },
  { pnode(GPIO, 68, 31, DATAOUT, 3, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 86) },
  { pnode(GPIO, 68, 31, DATAOUT, 3, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 87) },
  { pnode(GPIO, 68, 30, DATAOUT, 1, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 88) },
  { pnode(GPIO, 68, 30, DATAOUT, 1, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 89) },
  { pnode(GPIO, 68, 30, DATAOUT, 1, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 90) },
  { pnode(GPIO, 68, 30, DATAOUT, 1, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 91) },
  { pnode(GPIO, 68, 30, DATAOUT, 0, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 92) },
  { pnode(GPIO, 68, 30, DATAOUT, 0, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 93) },
  { pnode(GPIO, 68, 30, DATAOUT, 0, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 94) },
  { pnode(GPIO, 68, 30, DATAOUT, 0, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 95) },
  { pnode(GPIO, 68, 30, DATAOUT, 2, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 96) },
  { pnode(GPIO, 68, 30, DATAOUT, 2, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 97) },
  { pnode(GPIO, 68, 30, DATAOUT, 2, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 98) },
  { pnode(GPIO, 68, 30, DATAOUT, 2, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 99) },
  { pnode(GPIO, 68, 29, DATAOUT, 3, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 100) },
  { pnode(GPIO, 68, 29, DATAOUT, 3, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 101) },
  { pnode(GPIO, 68, 29, DATAOUT, 3, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 102) },
  { pnode(GPIO, 68, 29, DATAOUT, 3, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 103) },
  { pnode(GPIO, 68, 25, DATAOUT, 1, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 108) },
  { pnode(GPIO, 68, 25, DATAOUT, 1, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 109) },
  { pnode(GPIO, 68, 25, DATAOUT, 1, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 110) },
  { pnode(GPIO, 68, 25, DATAOUT, 1, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 111) },
  { pnode(GPIO, 68, 25, DATAOUT, 0, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 112) },
  { pnode(GPIO, 68, 25, DATAOUT, 0, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 113) },
  { pnode(GPIO, 68, 25, DATAOUT, 0, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 114) },
  { pnode(GPIO, 68, 25, DATAOUT, 0, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 115) },
  { pnode(GPIO, 68, 25, DATAOUT, 2, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 116) },
  { pnode(GPIO, 68, 25, DATAOUT, 2, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 117) },
  { pnode(GPIO, 68, 25, DATAOUT, 2, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 118) },
  { pnode(GPIO, 68, 25, DATAOUT, 2, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 119) },
  { pnode(GPIO, 68, 24, DATAOUT, 3, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 120) },
  { pnode(GPIO, 68, 24, DATAOUT, 3, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 121) },
  { pnode(GPIO, 68, 24, DATAOUT, 3, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 122) },
  { pnode(GPIO, 68, 24, DATAOUT, 3, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 123) },
  { pnode(GPIO, 68, 23, DATAOUT, 1, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 124) },
  { pnode(GPIO, 68, 23, DATAOUT, 1, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 125) },
  { pnode(GPIO, 68, 23, DATAOUT, 1, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 126) },
  { pnode(GPIO, 68, 23, DATAOUT, 1, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 127) },
  { pnode(GPIO, 68, 23, DATAOUT, 0, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 128) },
  { pnode(GPIO, 68, 23, DATAOUT, 0, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 129) },
  { pnode(GPIO, 68, 23, DATAOUT, 0, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 130) },
  { pnode(GPIO, 68, 23, DATAOUT, 0, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 131) },
  { pnode(GPIO, 68, 23, DATAOUT, 2, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 132) },
  { pnode(GPIO, 68, 23, DATAOUT, 2, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 133) },
  { pnode(GPIO, 68, 23, DATAOUT, 2, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 134) },
  { pnode(GPIO, 68, 23, DATAOUT, 2, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 135) },
  { pnode(GPIO, 68, 22, DATAOUT, 3, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 136) },
  { pnode(GPIO, 68, 22, DATAOUT, 3, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 137) },
  { pnode(GPIO, 68, 22, DATAOUT, 3, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 138) },
  { pnode(GPIO, 68, 22, DATAOUT, 3, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 139) },
  { pnode(GPIO, 68, 17, DATAOUT, 1, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 144) },
  { pnode(GPIO, 68, 17, DATAOUT, 1, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 145) },
  { pnode(GPIO, 68, 17, DATAOUT, 1, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 146) },
  { pnode(GPIO, 68, 17, DATAOUT, 1, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 147) },
  { pnode(GPIO, 68, 17, DATAOUT, 0, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 148) },
  { pnode(GPIO, 68, 17, DATAOUT, 0, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 149) },
  { pnode(GPIO, 68, 17, DATAOUT, 0, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 150) },
  { pnode(GPIO, 68, 17, DATAOUT, 0, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 151) },
  { pnode(GPIO, 68, 17, DATAOUT, 2, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 152) },
  { pnode(GPIO, 68, 17, DATAOUT, 2, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 153) },
  { pnode(GPIO, 68, 17, DATAOUT, 2, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 154) },
  { pnode(GPIO, 68, 17, DATAOUT, 2, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 155) },
  { pnode(GPIO, 68, 16, DATAOUT, 3, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 156) },
  { pnode(GPIO, 68, 16, DATAOUT, 3, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 157) },
  { pnode(GPIO, 68, 16, DATAOUT, 3, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 158) },
  { pnode(GPIO, 68, 16, DATAOUT, 3, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 159) },
  { pnode(GPIO, 68, 15, DATAOUT, 1, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 160) },
  { pnode(GPIO, 68, 15, DATAOUT, 1, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 161) },
  { pnode(GPIO, 68, 15, DATAOUT, 1, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 162) },
  { pnode(GPIO, 68, 15, DATAOUT, 1, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 163) },
  { pnode(GPIO, 68, 15, DATAOUT, 0, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 164) },
  { pnode(GPIO, 68, 15, DATAOUT, 0, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 165) },
  { pnode(GPIO, 68, 15, DATAOUT, 0, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 166) },
  { pnode(GPIO, 68, 15, DATAOUT, 0, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 167) },
  { pnode(GPIO, 68, 15, DATAOUT, 2, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 168) },
  { pnode(GPIO, 68, 15, DATAOUT, 2, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 169) },
  { pnode(GPIO, 68, 15, DATAOUT, 2, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 170) },
  { pnode(GPIO, 68, 15, DATAOUT, 2, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 171) },
  { pnode(GPIO, 68, 14, DATAOUT, 3, 0), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 172) },
  { pnode(GPIO, 68, 14, DATAOUT, 3, 1), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 173) },
  { pnode(GPIO, 68, 14, DATAOUT, 3, 2), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 174) },
  { pnode(GPIO, 68, 14, DATAOUT, 3, 3), pnode(HMC, 68, 60, DDIOPHYDQDIN, -1, 175) },
  { pnode(HMC, 68, 60, PHYDDIOADDRACLR, -1, 0), pnode(GPIO, 68, 51, ACLR, 2, -1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRACLR, -1, 1), pnode(GPIO, 68, 51, ACLR, 3, -1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRACLR, -1, 2), pnode(GPIO, 68, 52, ACLR, 2, -1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRACLR, -1, 3), pnode(GPIO, 68, 52, ACLR, 3, -1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRACLR, -1, 4), pnode(GPIO, 68, 52, ACLR, 0, -1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRACLR, -1, 5), pnode(GPIO, 68, 52, ACLR, 1, -1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRACLR, -1, 6), pnode(GPIO, 68, 53, ACLR, 2, -1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRACLR, -1, 7), pnode(GPIO, 68, 53, ACLR, 3, -1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRACLR, -1, 8), pnode(GPIO, 68, 58, ACLR, 0, -1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRACLR, -1, 9), pnode(GPIO, 68, 58, ACLR, 1, -1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRACLR, -1, 10), pnode(GPIO, 68, 58, ACLR, 2, -1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRACLR, -1, 11), pnode(GPIO, 68, 58, ACLR, 3, -1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRACLR, -1, 12), pnode(GPIO, 68, 59, ACLR, 2, -1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRACLR, -1, 13), pnode(GPIO, 68, 59, ACLR, 3, -1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRACLR, -1, 14), pnode(GPIO, 68, 60, ACLR, 0, -1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRACLR, -1, 15), pnode(GPIO, 68, 60, ACLR, 1, -1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 0), pnode(GPIO, 68, 51, DATAIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 1), pnode(GPIO, 68, 51, DATAIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 2), pnode(GPIO, 68, 51, DATAIN, 2, 2) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 3), pnode(GPIO, 68, 51, DATAIN, 2, 3) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 4), pnode(GPIO, 68, 51, DATAIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 5), pnode(GPIO, 68, 51, DATAIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 6), pnode(GPIO, 68, 51, DATAIN, 3, 2) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 7), pnode(GPIO, 68, 51, DATAIN, 3, 3) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 8), pnode(GPIO, 68, 52, DATAIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 9), pnode(GPIO, 68, 52, DATAIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 10), pnode(GPIO, 68, 52, DATAIN, 2, 2) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 11), pnode(GPIO, 68, 52, DATAIN, 2, 3) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 12), pnode(GPIO, 68, 52, DATAIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 13), pnode(GPIO, 68, 52, DATAIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 14), pnode(GPIO, 68, 52, DATAIN, 3, 2) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 15), pnode(GPIO, 68, 52, DATAIN, 3, 3) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 16), pnode(GPIO, 68, 52, DATAIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 17), pnode(GPIO, 68, 52, DATAIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 18), pnode(GPIO, 68, 52, DATAIN, 0, 2) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 19), pnode(GPIO, 68, 52, DATAIN, 0, 3) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 20), pnode(GPIO, 68, 52, DATAIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 21), pnode(GPIO, 68, 52, DATAIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 22), pnode(GPIO, 68, 52, DATAIN, 1, 2) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 23), pnode(GPIO, 68, 52, DATAIN, 1, 3) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 24), pnode(GPIO, 68, 53, DATAIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 25), pnode(GPIO, 68, 53, DATAIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 26), pnode(GPIO, 68, 53, DATAIN, 2, 2) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 27), pnode(GPIO, 68, 53, DATAIN, 2, 3) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 28), pnode(GPIO, 68, 53, DATAIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 29), pnode(GPIO, 68, 53, DATAIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 30), pnode(GPIO, 68, 53, DATAIN, 3, 2) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 31), pnode(GPIO, 68, 53, DATAIN, 3, 3) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 32), pnode(GPIO, 68, 58, DATAIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 33), pnode(GPIO, 68, 58, DATAIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 34), pnode(GPIO, 68, 58, DATAIN, 0, 2) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 35), pnode(GPIO, 68, 58, DATAIN, 0, 3) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 36), pnode(GPIO, 68, 58, DATAIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 37), pnode(GPIO, 68, 58, DATAIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 38), pnode(GPIO, 68, 58, DATAIN, 1, 2) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 39), pnode(GPIO, 68, 58, DATAIN, 1, 3) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 40), pnode(GPIO, 68, 58, DATAIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 41), pnode(GPIO, 68, 58, DATAIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 42), pnode(GPIO, 68, 58, DATAIN, 2, 2) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 43), pnode(GPIO, 68, 58, DATAIN, 2, 3) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 44), pnode(GPIO, 68, 58, DATAIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 45), pnode(GPIO, 68, 58, DATAIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 46), pnode(GPIO, 68, 58, DATAIN, 3, 2) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 47), pnode(GPIO, 68, 58, DATAIN, 3, 3) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 48), pnode(GPIO, 68, 59, DATAIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 49), pnode(GPIO, 68, 59, DATAIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 50), pnode(GPIO, 68, 59, DATAIN, 2, 2) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 51), pnode(GPIO, 68, 59, DATAIN, 2, 3) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 52), pnode(GPIO, 68, 59, DATAIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 53), pnode(GPIO, 68, 59, DATAIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 54), pnode(GPIO, 68, 59, DATAIN, 3, 2) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 55), pnode(GPIO, 68, 59, DATAIN, 3, 3) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 56), pnode(GPIO, 68, 60, DATAIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 57), pnode(GPIO, 68, 60, DATAIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 58), pnode(GPIO, 68, 60, DATAIN, 0, 2) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 59), pnode(GPIO, 68, 60, DATAIN, 0, 3) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 60), pnode(GPIO, 68, 60, DATAIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 61), pnode(GPIO, 68, 60, DATAIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 62), pnode(GPIO, 68, 60, DATAIN, 1, 2) },
  { pnode(HMC, 68, 60, PHYDDIOADDRDOUT, -1, 63), pnode(GPIO, 68, 60, DATAIN, 1, 3) },
  { pnode(HMC, 68, 60, PHYDDIOBAACLR, -1, -1), pnode(GPIO, 68, 54, ACLR, 1, -1) },
  { pnode(HMC, 68, 60, PHYDDIOBADOUT, -1, 0), pnode(GPIO, 68, 54, DATAIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIOBADOUT, -1, 1), pnode(GPIO, 68, 54, DATAIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIOBADOUT, -1, 2), pnode(GPIO, 68, 54, DATAIN, 2, 2) },
  { pnode(HMC, 68, 60, PHYDDIOBADOUT, -1, 3), pnode(GPIO, 68, 54, DATAIN, 2, 3) },
  { pnode(HMC, 68, 60, PHYDDIOCASNACLR, -1, -1), pnode(GPIO, 68, 57, ACLR, 2, -1) },
  { pnode(HMC, 68, 60, PHYDDIOCASNDOUT, -1, 0), pnode(GPIO, 68, 57, DATAIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIOCASNDOUT, -1, 1), pnode(GPIO, 68, 57, DATAIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIOCASNDOUT, -1, 2), pnode(GPIO, 68, 57, DATAIN, 2, 2) },
  { pnode(HMC, 68, 60, PHYDDIOCASNDOUT, -1, 3), pnode(GPIO, 68, 57, DATAIN, 2, 3) },
  { pnode(HMC, 68, 60, PHYDDIOCKDOUT, -1, 0), pnode(GPIO, 68, 53, DATAIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIOCKDOUT, -1, 1), pnode(GPIO, 68, 53, DATAIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIOCKDOUT, -1, 2), pnode(GPIO, 68, 53, DATAIN, 0, 2) },
  { pnode(HMC, 68, 60, PHYDDIOCKDOUT, -1, 3), pnode(GPIO, 68, 53, DATAIN, 0, 3) },
  { pnode(HMC, 68, 60, PHYDDIOCKEACLR, -1, 0), pnode(GPIO, 68, 37, ACLR, 3, -1) },
  { pnode(HMC, 68, 60, PHYDDIOCKEACLR, -1, 1), pnode(GPIO, 68, 38, ACLR, 2, -1) },
  { pnode(HMC, 68, 60, PHYDDIOCKEDOUT, -1, 0), pnode(GPIO, 68, 37, DATAIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIOCKEDOUT, -1, 1), pnode(GPIO, 68, 37, DATAIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIOCKEDOUT, -1, 2), pnode(GPIO, 68, 37, DATAIN, 3, 2) },
  { pnode(HMC, 68, 60, PHYDDIOCKEDOUT, -1, 3), pnode(GPIO, 68, 37, DATAIN, 3, 3) },
  { pnode(HMC, 68, 60, PHYDDIOCKEDOUT, -1, 4), pnode(GPIO, 68, 38, DATAIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIOCKEDOUT, -1, 5), pnode(GPIO, 68, 38, DATAIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIOCKEDOUT, -1, 6), pnode(GPIO, 68, 38, DATAIN, 2, 2) },
  { pnode(HMC, 68, 60, PHYDDIOCKEDOUT, -1, 7), pnode(GPIO, 68, 38, DATAIN, 2, 3) },
  { pnode(HMC, 68, 60, PHYDDIOCKNDOUT, -1, 0), pnode(GPIO, 68, 53, DATAIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIOCKNDOUT, -1, 1), pnode(GPIO, 68, 53, DATAIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIOCKNDOUT, -1, 2), pnode(GPIO, 68, 53, DATAIN, 1, 2) },
  { pnode(HMC, 68, 60, PHYDDIOCKNDOUT, -1, 3), pnode(GPIO, 68, 53, DATAIN, 1, 3) },
  { pnode(HMC, 68, 60, PHYDDIOCSNACLR, -1, 0), pnode(GPIO, 68, 59, ACLR, 0, -1) },
  { pnode(HMC, 68, 60, PHYDDIOCSNACLR, -1, 1), pnode(GPIO, 68, 59, ACLR, 1, -1) },
  { pnode(HMC, 68, 60, PHYDDIOCSNDOUT, -1, 0), pnode(GPIO, 68, 59, DATAIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIOCSNDOUT, -1, 1), pnode(GPIO, 68, 59, DATAIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIOCSNDOUT, -1, 2), pnode(GPIO, 68, 59, DATAIN, 0, 2) },
  { pnode(HMC, 68, 60, PHYDDIOCSNDOUT, -1, 3), pnode(GPIO, 68, 59, DATAIN, 0, 3) },
  { pnode(HMC, 68, 60, PHYDDIOCSNDOUT, -1, 4), pnode(GPIO, 68, 59, DATAIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIOCSNDOUT, -1, 5), pnode(GPIO, 68, 59, DATAIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIOCSNDOUT, -1, 6), pnode(GPIO, 68, 59, DATAIN, 1, 2) },
  { pnode(HMC, 68, 60, PHYDDIOCSNDOUT, -1, 7), pnode(GPIO, 68, 59, DATAIN, 1, 3) },
  { pnode(HMC, 68, 60, PHYDDIODMDOUT, -1, 0), pnode(GPIO, 68, 43, DATAIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIODMDOUT, -1, 1), pnode(GPIO, 68, 43, DATAIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIODMDOUT, -1, 2), pnode(GPIO, 68, 43, DATAIN, 2, 2) },
  { pnode(HMC, 68, 60, PHYDDIODMDOUT, -1, 3), pnode(GPIO, 68, 43, DATAIN, 2, 3) },
  { pnode(HMC, 68, 60, PHYDDIODMDOUT, -1, 4), pnode(GPIO, 68, 36, DATAIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIODMDOUT, -1, 5), pnode(GPIO, 68, 36, DATAIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIODMDOUT, -1, 6), pnode(GPIO, 68, 36, DATAIN, 2, 2) },
  { pnode(HMC, 68, 60, PHYDDIODMDOUT, -1, 7), pnode(GPIO, 68, 36, DATAIN, 2, 3) },
  { pnode(HMC, 68, 60, PHYDDIODMDOUT, -1, 8), pnode(GPIO, 68, 29, DATAIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIODMDOUT, -1, 9), pnode(GPIO, 68, 29, DATAIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIODMDOUT, -1, 10), pnode(GPIO, 68, 29, DATAIN, 2, 2) },
  { pnode(HMC, 68, 60, PHYDDIODMDOUT, -1, 11), pnode(GPIO, 68, 29, DATAIN, 2, 3) },
  { pnode(HMC, 68, 60, PHYDDIODMDOUT, -1, 12), pnode(GPIO, 68, 22, DATAIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIODMDOUT, -1, 13), pnode(GPIO, 68, 22, DATAIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIODMDOUT, -1, 14), pnode(GPIO, 68, 22, DATAIN, 2, 2) },
  { pnode(HMC, 68, 60, PHYDDIODMDOUT, -1, 15), pnode(GPIO, 68, 22, DATAIN, 2, 3) },
  { pnode(HMC, 68, 60, PHYDDIODMDOUT, -1, 16), pnode(GPIO, 68, 14, DATAIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIODMDOUT, -1, 17), pnode(GPIO, 68, 14, DATAIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIODMDOUT, -1, 18), pnode(GPIO, 68, 14, DATAIN, 2, 2) },
  { pnode(HMC, 68, 60, PHYDDIODMDOUT, -1, 19), pnode(GPIO, 68, 14, DATAIN, 2, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 0), pnode(GPIO, 68, 46, DATAIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 1), pnode(GPIO, 68, 46, DATAIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 2), pnode(GPIO, 68, 46, DATAIN, 1, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 3), pnode(GPIO, 68, 46, DATAIN, 1, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 4), pnode(GPIO, 68, 46, DATAIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 5), pnode(GPIO, 68, 46, DATAIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 6), pnode(GPIO, 68, 46, DATAIN, 0, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 7), pnode(GPIO, 68, 46, DATAIN, 0, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 8), pnode(GPIO, 68, 46, DATAIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 9), pnode(GPIO, 68, 46, DATAIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 10), pnode(GPIO, 68, 46, DATAIN, 2, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 11), pnode(GPIO, 68, 46, DATAIN, 2, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 12), pnode(GPIO, 68, 45, DATAIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 13), pnode(GPIO, 68, 45, DATAIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 14), pnode(GPIO, 68, 45, DATAIN, 3, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 15), pnode(GPIO, 68, 45, DATAIN, 3, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 16), pnode(GPIO, 68, 44, DATAIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 17), pnode(GPIO, 68, 44, DATAIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 18), pnode(GPIO, 68, 44, DATAIN, 1, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 19), pnode(GPIO, 68, 44, DATAIN, 1, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 20), pnode(GPIO, 68, 44, DATAIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 21), pnode(GPIO, 68, 44, DATAIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 22), pnode(GPIO, 68, 44, DATAIN, 0, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 23), pnode(GPIO, 68, 44, DATAIN, 0, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 24), pnode(GPIO, 68, 44, DATAIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 25), pnode(GPIO, 68, 44, DATAIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 26), pnode(GPIO, 68, 44, DATAIN, 2, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 27), pnode(GPIO, 68, 44, DATAIN, 2, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 28), pnode(GPIO, 68, 43, DATAIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 29), pnode(GPIO, 68, 43, DATAIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 30), pnode(GPIO, 68, 43, DATAIN, 3, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 31), pnode(GPIO, 68, 43, DATAIN, 3, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 36), pnode(GPIO, 68, 39, DATAIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 37), pnode(GPIO, 68, 39, DATAIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 38), pnode(GPIO, 68, 39, DATAIN, 1, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 39), pnode(GPIO, 68, 39, DATAIN, 1, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 40), pnode(GPIO, 68, 39, DATAIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 41), pnode(GPIO, 68, 39, DATAIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 42), pnode(GPIO, 68, 39, DATAIN, 0, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 43), pnode(GPIO, 68, 39, DATAIN, 0, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 44), pnode(GPIO, 68, 39, DATAIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 45), pnode(GPIO, 68, 39, DATAIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 46), pnode(GPIO, 68, 39, DATAIN, 2, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 47), pnode(GPIO, 68, 39, DATAIN, 2, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 48), pnode(GPIO, 68, 38, DATAIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 49), pnode(GPIO, 68, 38, DATAIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 50), pnode(GPIO, 68, 38, DATAIN, 3, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 51), pnode(GPIO, 68, 38, DATAIN, 3, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 52), pnode(GPIO, 68, 37, DATAIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 53), pnode(GPIO, 68, 37, DATAIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 54), pnode(GPIO, 68, 37, DATAIN, 1, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 55), pnode(GPIO, 68, 37, DATAIN, 1, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 56), pnode(GPIO, 68, 37, DATAIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 57), pnode(GPIO, 68, 37, DATAIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 58), pnode(GPIO, 68, 37, DATAIN, 0, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 59), pnode(GPIO, 68, 37, DATAIN, 0, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 60), pnode(GPIO, 68, 37, DATAIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 61), pnode(GPIO, 68, 37, DATAIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 62), pnode(GPIO, 68, 37, DATAIN, 2, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 63), pnode(GPIO, 68, 37, DATAIN, 2, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 64), pnode(GPIO, 68, 36, DATAIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 65), pnode(GPIO, 68, 36, DATAIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 66), pnode(GPIO, 68, 36, DATAIN, 3, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 67), pnode(GPIO, 68, 36, DATAIN, 3, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 72), pnode(GPIO, 68, 32, DATAIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 73), pnode(GPIO, 68, 32, DATAIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 74), pnode(GPIO, 68, 32, DATAIN, 1, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 75), pnode(GPIO, 68, 32, DATAIN, 1, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 76), pnode(GPIO, 68, 32, DATAIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 77), pnode(GPIO, 68, 32, DATAIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 78), pnode(GPIO, 68, 32, DATAIN, 0, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 79), pnode(GPIO, 68, 32, DATAIN, 0, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 80), pnode(GPIO, 68, 32, DATAIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 81), pnode(GPIO, 68, 32, DATAIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 82), pnode(GPIO, 68, 32, DATAIN, 2, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 83), pnode(GPIO, 68, 32, DATAIN, 2, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 84), pnode(GPIO, 68, 31, DATAIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 85), pnode(GPIO, 68, 31, DATAIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 86), pnode(GPIO, 68, 31, DATAIN, 3, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 87), pnode(GPIO, 68, 31, DATAIN, 3, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 88), pnode(GPIO, 68, 30, DATAIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 89), pnode(GPIO, 68, 30, DATAIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 90), pnode(GPIO, 68, 30, DATAIN, 1, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 91), pnode(GPIO, 68, 30, DATAIN, 1, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 92), pnode(GPIO, 68, 30, DATAIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 93), pnode(GPIO, 68, 30, DATAIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 94), pnode(GPIO, 68, 30, DATAIN, 0, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 95), pnode(GPIO, 68, 30, DATAIN, 0, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 96), pnode(GPIO, 68, 30, DATAIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 97), pnode(GPIO, 68, 30, DATAIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 98), pnode(GPIO, 68, 30, DATAIN, 2, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 99), pnode(GPIO, 68, 30, DATAIN, 2, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 100), pnode(GPIO, 68, 29, DATAIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 101), pnode(GPIO, 68, 29, DATAIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 102), pnode(GPIO, 68, 29, DATAIN, 3, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 103), pnode(GPIO, 68, 29, DATAIN, 3, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 108), pnode(GPIO, 68, 25, DATAIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 109), pnode(GPIO, 68, 25, DATAIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 110), pnode(GPIO, 68, 25, DATAIN, 1, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 111), pnode(GPIO, 68, 25, DATAIN, 1, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 112), pnode(GPIO, 68, 25, DATAIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 113), pnode(GPIO, 68, 25, DATAIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 114), pnode(GPIO, 68, 25, DATAIN, 0, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 115), pnode(GPIO, 68, 25, DATAIN, 0, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 116), pnode(GPIO, 68, 25, DATAIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 117), pnode(GPIO, 68, 25, DATAIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 118), pnode(GPIO, 68, 25, DATAIN, 2, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 119), pnode(GPIO, 68, 25, DATAIN, 2, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 120), pnode(GPIO, 68, 24, DATAIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 121), pnode(GPIO, 68, 24, DATAIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 122), pnode(GPIO, 68, 24, DATAIN, 3, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 123), pnode(GPIO, 68, 24, DATAIN, 3, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 124), pnode(GPIO, 68, 23, DATAIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 125), pnode(GPIO, 68, 23, DATAIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 126), pnode(GPIO, 68, 23, DATAIN, 1, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 127), pnode(GPIO, 68, 23, DATAIN, 1, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 128), pnode(GPIO, 68, 23, DATAIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 129), pnode(GPIO, 68, 23, DATAIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 130), pnode(GPIO, 68, 23, DATAIN, 0, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 131), pnode(GPIO, 68, 23, DATAIN, 0, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 132), pnode(GPIO, 68, 23, DATAIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 133), pnode(GPIO, 68, 23, DATAIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 134), pnode(GPIO, 68, 23, DATAIN, 2, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 135), pnode(GPIO, 68, 23, DATAIN, 2, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 136), pnode(GPIO, 68, 22, DATAIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 137), pnode(GPIO, 68, 22, DATAIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 138), pnode(GPIO, 68, 22, DATAIN, 3, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 139), pnode(GPIO, 68, 22, DATAIN, 3, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 144), pnode(GPIO, 68, 17, DATAIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 145), pnode(GPIO, 68, 17, DATAIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 146), pnode(GPIO, 68, 17, DATAIN, 1, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 147), pnode(GPIO, 68, 17, DATAIN, 1, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 148), pnode(GPIO, 68, 17, DATAIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 149), pnode(GPIO, 68, 17, DATAIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 150), pnode(GPIO, 68, 17, DATAIN, 0, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 151), pnode(GPIO, 68, 17, DATAIN, 0, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 152), pnode(GPIO, 68, 17, DATAIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 153), pnode(GPIO, 68, 17, DATAIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 154), pnode(GPIO, 68, 17, DATAIN, 2, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 155), pnode(GPIO, 68, 17, DATAIN, 2, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 156), pnode(GPIO, 68, 16, DATAIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 157), pnode(GPIO, 68, 16, DATAIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 158), pnode(GPIO, 68, 16, DATAIN, 3, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 159), pnode(GPIO, 68, 16, DATAIN, 3, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 160), pnode(GPIO, 68, 15, DATAIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 161), pnode(GPIO, 68, 15, DATAIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 162), pnode(GPIO, 68, 15, DATAIN, 1, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 163), pnode(GPIO, 68, 15, DATAIN, 1, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 164), pnode(GPIO, 68, 15, DATAIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 165), pnode(GPIO, 68, 15, DATAIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 166), pnode(GPIO, 68, 15, DATAIN, 0, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 167), pnode(GPIO, 68, 15, DATAIN, 0, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 168), pnode(GPIO, 68, 15, DATAIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 169), pnode(GPIO, 68, 15, DATAIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 170), pnode(GPIO, 68, 15, DATAIN, 2, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 171), pnode(GPIO, 68, 15, DATAIN, 2, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 172), pnode(GPIO, 68, 14, DATAIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 173), pnode(GPIO, 68, 14, DATAIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 174), pnode(GPIO, 68, 14, DATAIN, 3, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQDOUT, -1, 175), pnode(GPIO, 68, 14, DATAIN, 3, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 0), pnode(GPIO, 68, 46, OEIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 1), pnode(GPIO, 68, 46, OEIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 2), pnode(GPIO, 68, 46, OEIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 3), pnode(GPIO, 68, 46, OEIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 4), pnode(GPIO, 68, 46, OEIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 5), pnode(GPIO, 68, 46, OEIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 6), pnode(GPIO, 68, 45, OEIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 7), pnode(GPIO, 68, 45, OEIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 8), pnode(GPIO, 68, 44, OEIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 9), pnode(GPIO, 68, 44, OEIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 10), pnode(GPIO, 68, 44, OEIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 11), pnode(GPIO, 68, 44, OEIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 12), pnode(GPIO, 68, 44, OEIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 13), pnode(GPIO, 68, 44, OEIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 14), pnode(GPIO, 68, 43, OEIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 15), pnode(GPIO, 68, 43, OEIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 18), pnode(GPIO, 68, 39, OEIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 19), pnode(GPIO, 68, 39, OEIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 20), pnode(GPIO, 68, 39, OEIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 21), pnode(GPIO, 68, 39, OEIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 22), pnode(GPIO, 68, 39, OEIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 23), pnode(GPIO, 68, 39, OEIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 24), pnode(GPIO, 68, 38, OEIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 25), pnode(GPIO, 68, 38, OEIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 26), pnode(GPIO, 68, 37, OEIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 27), pnode(GPIO, 68, 37, OEIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 28), pnode(GPIO, 68, 37, OEIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 29), pnode(GPIO, 68, 37, OEIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 30), pnode(GPIO, 68, 37, OEIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 31), pnode(GPIO, 68, 37, OEIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 32), pnode(GPIO, 68, 36, OEIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 33), pnode(GPIO, 68, 36, OEIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 36), pnode(GPIO, 68, 32, OEIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 37), pnode(GPIO, 68, 32, OEIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 38), pnode(GPIO, 68, 32, OEIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 39), pnode(GPIO, 68, 32, OEIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 40), pnode(GPIO, 68, 32, OEIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 41), pnode(GPIO, 68, 32, OEIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 42), pnode(GPIO, 68, 31, OEIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 43), pnode(GPIO, 68, 31, OEIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 44), pnode(GPIO, 68, 30, OEIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 45), pnode(GPIO, 68, 30, OEIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 46), pnode(GPIO, 68, 30, OEIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 47), pnode(GPIO, 68, 30, OEIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 48), pnode(GPIO, 68, 30, OEIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 49), pnode(GPIO, 68, 30, OEIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 50), pnode(GPIO, 68, 29, OEIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 51), pnode(GPIO, 68, 29, OEIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 54), pnode(GPIO, 68, 25, OEIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 55), pnode(GPIO, 68, 25, OEIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 56), pnode(GPIO, 68, 25, OEIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 57), pnode(GPIO, 68, 25, OEIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 58), pnode(GPIO, 68, 25, OEIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 59), pnode(GPIO, 68, 25, OEIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 60), pnode(GPIO, 68, 24, OEIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 61), pnode(GPIO, 68, 24, OEIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 62), pnode(GPIO, 68, 23, OEIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 63), pnode(GPIO, 68, 23, OEIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 64), pnode(GPIO, 68, 23, OEIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 65), pnode(GPIO, 68, 23, OEIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 66), pnode(GPIO, 68, 23, OEIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 67), pnode(GPIO, 68, 23, OEIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 68), pnode(GPIO, 68, 22, OEIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 69), pnode(GPIO, 68, 22, OEIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 72), pnode(GPIO, 68, 17, OEIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 73), pnode(GPIO, 68, 17, OEIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 74), pnode(GPIO, 68, 17, OEIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 75), pnode(GPIO, 68, 17, OEIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 76), pnode(GPIO, 68, 17, OEIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 77), pnode(GPIO, 68, 17, OEIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 78), pnode(GPIO, 68, 16, OEIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 79), pnode(GPIO, 68, 16, OEIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 80), pnode(GPIO, 68, 15, OEIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 81), pnode(GPIO, 68, 15, OEIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 82), pnode(GPIO, 68, 15, OEIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 83), pnode(GPIO, 68, 15, OEIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 84), pnode(GPIO, 68, 15, OEIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 85), pnode(GPIO, 68, 15, OEIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 86), pnode(GPIO, 68, 14, OEIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQOE, -1, 87), pnode(GPIO, 68, 14, OEIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQSBDOUT, -1, 0), pnode(GPIO, 68, 45, DATAIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQSBDOUT, -1, 1), pnode(GPIO, 68, 45, DATAIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQSBDOUT, -1, 2), pnode(GPIO, 68, 45, DATAIN, 1, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQSBDOUT, -1, 3), pnode(GPIO, 68, 45, DATAIN, 1, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQSBDOUT, -1, 4), pnode(GPIO, 68, 38, DATAIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQSBDOUT, -1, 5), pnode(GPIO, 68, 38, DATAIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQSBDOUT, -1, 6), pnode(GPIO, 68, 38, DATAIN, 1, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQSBDOUT, -1, 7), pnode(GPIO, 68, 38, DATAIN, 1, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQSBDOUT, -1, 8), pnode(GPIO, 68, 31, DATAIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQSBDOUT, -1, 9), pnode(GPIO, 68, 31, DATAIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQSBDOUT, -1, 10), pnode(GPIO, 68, 31, DATAIN, 1, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQSBDOUT, -1, 11), pnode(GPIO, 68, 31, DATAIN, 1, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQSBDOUT, -1, 12), pnode(GPIO, 68, 24, DATAIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQSBDOUT, -1, 13), pnode(GPIO, 68, 24, DATAIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQSBDOUT, -1, 14), pnode(GPIO, 68, 24, DATAIN, 1, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQSBDOUT, -1, 15), pnode(GPIO, 68, 24, DATAIN, 1, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQSBDOUT, -1, 16), pnode(GPIO, 68, 16, DATAIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQSBDOUT, -1, 17), pnode(GPIO, 68, 16, DATAIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQSBDOUT, -1, 18), pnode(GPIO, 68, 16, DATAIN, 1, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQSBDOUT, -1, 19), pnode(GPIO, 68, 16, DATAIN, 1, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQSBOE, -1, 0), pnode(GPIO, 68, 45, OEIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQSBOE, -1, 1), pnode(GPIO, 68, 45, OEIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQSBOE, -1, 2), pnode(GPIO, 68, 38, OEIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQSBOE, -1, 3), pnode(GPIO, 68, 38, OEIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQSBOE, -1, 4), pnode(GPIO, 68, 31, OEIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQSBOE, -1, 5), pnode(GPIO, 68, 31, OEIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQSBOE, -1, 6), pnode(GPIO, 68, 24, OEIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQSBOE, -1, 7), pnode(GPIO, 68, 24, OEIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQSBOE, -1, 8), pnode(GPIO, 68, 16, OEIN, 1, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQSBOE, -1, 9), pnode(GPIO, 68, 16, OEIN, 1, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQSDOUT, -1, 0), pnode(GPIO, 68, 45, DATAIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQSDOUT, -1, 1), pnode(GPIO, 68, 45, DATAIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQSDOUT, -1, 2), pnode(GPIO, 68, 45, DATAIN, 0, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQSDOUT, -1, 3), pnode(GPIO, 68, 45, DATAIN, 0, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQSDOUT, -1, 4), pnode(GPIO, 68, 38, DATAIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQSDOUT, -1, 5), pnode(GPIO, 68, 38, DATAIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQSDOUT, -1, 6), pnode(GPIO, 68, 38, DATAIN, 0, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQSDOUT, -1, 7), pnode(GPIO, 68, 38, DATAIN, 0, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQSDOUT, -1, 8), pnode(GPIO, 68, 31, DATAIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQSDOUT, -1, 9), pnode(GPIO, 68, 31, DATAIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQSDOUT, -1, 10), pnode(GPIO, 68, 31, DATAIN, 0, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQSDOUT, -1, 11), pnode(GPIO, 68, 31, DATAIN, 0, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQSDOUT, -1, 12), pnode(GPIO, 68, 24, DATAIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQSDOUT, -1, 13), pnode(GPIO, 68, 24, DATAIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQSDOUT, -1, 14), pnode(GPIO, 68, 24, DATAIN, 0, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQSDOUT, -1, 15), pnode(GPIO, 68, 24, DATAIN, 0, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQSDOUT, -1, 16), pnode(GPIO, 68, 16, DATAIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQSDOUT, -1, 17), pnode(GPIO, 68, 16, DATAIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQSDOUT, -1, 18), pnode(GPIO, 68, 16, DATAIN, 0, 2) },
  { pnode(HMC, 68, 60, PHYDDIODQSDOUT, -1, 19), pnode(GPIO, 68, 16, DATAIN, 0, 3) },
  { pnode(HMC, 68, 60, PHYDDIODQSOE, -1, 0), pnode(GPIO, 68, 45, OEIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQSOE, -1, 1), pnode(GPIO, 68, 45, OEIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQSOE, -1, 2), pnode(GPIO, 68, 38, OEIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQSOE, -1, 3), pnode(GPIO, 68, 38, OEIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQSOE, -1, 4), pnode(GPIO, 68, 31, OEIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQSOE, -1, 5), pnode(GPIO, 68, 31, OEIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQSOE, -1, 6), pnode(GPIO, 68, 24, OEIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQSOE, -1, 7), pnode(GPIO, 68, 24, OEIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIODQSOE, -1, 8), pnode(GPIO, 68, 16, OEIN, 0, 0) },
  { pnode(HMC, 68, 60, PHYDDIODQSOE, -1, 9), pnode(GPIO, 68, 16, OEIN, 0, 1) },
  { pnode(HMC, 68, 60, PHYDDIOODTACLR, -1, 0), pnode(GPIO, 68, 45, ACLR, 2, -1) },
  { pnode(HMC, 68, 60, PHYDDIOODTACLR, -1, 1), pnode(GPIO, 68, 44, ACLR, 3, -1) },
  { pnode(HMC, 68, 60, PHYDDIOODTDOUT, -1, 0), pnode(GPIO, 68, 45, DATAIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIOODTDOUT, -1, 1), pnode(GPIO, 68, 45, DATAIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIOODTDOUT, -1, 2), pnode(GPIO, 68, 45, DATAIN, 2, 2) },
  { pnode(HMC, 68, 60, PHYDDIOODTDOUT, -1, 3), pnode(GPIO, 68, 45, DATAIN, 2, 3) },
  { pnode(HMC, 68, 60, PHYDDIOODTDOUT, -1, 4), pnode(GPIO, 68, 44, DATAIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIOODTDOUT, -1, 5), pnode(GPIO, 68, 44, DATAIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIOODTDOUT, -1, 6), pnode(GPIO, 68, 44, DATAIN, 3, 2) },
  { pnode(HMC, 68, 60, PHYDDIOODTDOUT, -1, 7), pnode(GPIO, 68, 44, DATAIN, 3, 3) },
  { pnode(HMC, 68, 60, PHYDDIORASNACLR, -1, -1), pnode(GPIO, 68, 57, ACLR, 3, -1) },
  { pnode(HMC, 68, 60, PHYDDIORASNDOUT, -1, 0), pnode(GPIO, 68, 57, DATAIN, 3, 0) },
  { pnode(HMC, 68, 60, PHYDDIORASNDOUT, -1, 1), pnode(GPIO, 68, 57, DATAIN, 3, 1) },
  { pnode(HMC, 68, 60, PHYDDIORASNDOUT, -1, 2), pnode(GPIO, 68, 57, DATAIN, 3, 2) },
  { pnode(HMC, 68, 60, PHYDDIORASNDOUT, -1, 3), pnode(GPIO, 68, 57, DATAIN, 3, 3) },
  { pnode(HMC, 68, 60, PHYDDIORESETNACLR, -1, -1), pnode(GPIO, 68, 31, ACLR, 2, -1) },
  { pnode(HMC, 68, 60, PHYDDIORESETNDOUT, -1, 0), pnode(GPIO, 68, 31, DATAIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIORESETNDOUT, -1, 1), pnode(GPIO, 68, 31, DATAIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIORESETNDOUT, -1, 2), pnode(GPIO, 68, 31, DATAIN, 2, 2) },
  { pnode(HMC, 68, 60, PHYDDIORESETNDOUT, -1, 3), pnode(GPIO, 68, 31, DATAIN, 2, 3) },
  { pnode(HMC, 68, 60, PHYDDIOWENACLR, -1, -1), pnode(GPIO, 68, 60, ACLR, 2, -1) },
  { pnode(HMC, 68, 60, PHYDDIOWENDOUT, -1, 0), pnode(GPIO, 68, 60, DATAIN, 2, 0) },
  { pnode(HMC, 68, 60, PHYDDIOWENDOUT, -1, 1), pnode(GPIO, 68, 60, DATAIN, 2, 1) },
  { pnode(HMC, 68, 60, PHYDDIOWENDOUT, -1, 2), pnode(GPIO, 68, 60, DATAIN, 2, 2) },
  { pnode(HMC, 68, 60, PHYDDIOWENDOUT, -1, 3), pnode(GPIO, 68, 60, DATAIN, 2, 3) },
  { pnode(HMC, 68, 60, PNONE, 0, -1), pnode(DQS16, 68, 43, PNONE, -1, -1) },
  { pnode(HMC, 68, 60, PNONE, 1, -1), pnode(DQS16, 68, 36, PNONE, -1, -1) },
  { pnode(HMC, 68, 60, PNONE, 2, -1), pnode(DQS16, 68, 29, PNONE, -1, -1) },
  { pnode(HMC, 68, 60, PNONE, 3, -1), pnode(DQS16, 68, 22, PNONE, -1, -1) },
  { pnode(HMC, 68, 60, PNONE, 4, -1), pnode(DQS16, 68, 14, PNONE, -1, -1) },
  { pnode(HMC, 68, 60, PNONE, -1, -1), pnode(LVL, 68, 49, PNONE, -1, -1) },
  { pnode(GPIO, 15, 0, COMBOUT, 0, -1), pnode(CMUXCR, 0, 2, CLKPIN, -1, 0) },
  { pnode(GPIO, 21, 0, COMBOUT, 0, -1), pnode(CMUXCR, 0, 2, CLKPIN, -1, 1) },
  { pnode(GPIO, 38, 0, COMBOUT, 0, -1), pnode(CMUXCR, 0, 2, CLKPIN, -1, 2) },
  { pnode(GPIO, 46, 0, COMBOUT, 0, -1), pnode(CMUXCR, 0, 2, CLKPIN, -1, 3) },
  { pnode(GPIO, 15, 0, COMBOUT, 1, -1), pnode(CMUXCR, 0, 2, NCLKPIN, -1, 0) },
  { pnode(GPIO, 21, 0, COMBOUT, 1, -1), pnode(CMUXCR, 0, 2, NCLKPIN, -1, 1) },
  { pnode(GPIO, 38, 0, COMBOUT, 1, -1), pnode(CMUXCR, 0, 2, NCLKPIN, -1, 2) },
  { pnode(GPIO, 46, 0, COMBOUT, 1, -1), pnode(CMUXCR, 0, 2, NCLKPIN, -1, 3) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 8), pnode(CMUXCR, 0, 2, PLLIN, -1, 0) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 7), pnode(CMUXCR, 0, 2, PLLIN, -1, 1) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 6), pnode(CMUXCR, 0, 2, PLLIN, -1, 2) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 5), pnode(CMUXCR, 0, 2, PLLIN, -1, 3) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 4), pnode(CMUXCR, 0, 2, PLLIN, -1, 4) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 3), pnode(CMUXCR, 0, 2, PLLIN, -1, 5) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 2), pnode(CMUXCR, 0, 2, PLLIN, -1, 6) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 1), pnode(CMUXCR, 0, 2, PLLIN, -1, 7) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 6), pnode(CMUXCR, 0, 2, PLLIN, -1, 8) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 7), pnode(CMUXCR, 0, 2, PLLIN, -1, 9) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 4), pnode(CMUXCR, 0, 2, PLLIN, -1, 10) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 5), pnode(CMUXCR, 0, 2, PLLIN, -1, 11) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 2), pnode(CMUXCR, 0, 2, PLLIN, -1, 12) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 3), pnode(CMUXCR, 0, 2, PLLIN, -1, 13) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 0), pnode(CMUXCR, 0, 2, PLLIN, -1, 14) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 1), pnode(CMUXCR, 0, 2, PLLIN, -1, 15) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 8), pnode(CMUXCR, 0, 2, PLLIN, -1, 16) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 0), pnode(CMUXCR, 0, 2, PLLIN, -1, 17) },
  { pnode(GPIO, 15, 61, COMBOUT, 0, -1), pnode(CMUXHG, 0, 8, CLKPIN, -1, 0) },
  { pnode(GPIO, 15, 61, COMBOUT, 0, -1), pnode(CMUXHR, 0, 8, CLKPIN, -1, 0) },
  { pnode(GPIO, 15, 0, COMBOUT, 0, -1), pnode(CMUXHG, 0, 8, CLKPIN, -1, 1) },
  { pnode(GPIO, 15, 0, COMBOUT, 0, -1), pnode(CMUXHR, 0, 8, CLKPIN, -1, 1) },
  { pnode(GPIO, 21, 61, COMBOUT, 0, -1), pnode(CMUXHG, 0, 8, CLKPIN, -1, 2) },
  { pnode(GPIO, 21, 61, COMBOUT, 0, -1), pnode(CMUXHR, 0, 8, CLKPIN, -1, 2) },
  { pnode(GPIO, 21, 0, COMBOUT, 0, -1), pnode(CMUXHG, 0, 8, CLKPIN, -1, 3) },
  { pnode(GPIO, 21, 0, COMBOUT, 0, -1), pnode(CMUXHR, 0, 8, CLKPIN, -1, 3) },
  { pnode(GPIO, 38, 0, COMBOUT, 0, -1), pnode(CMUXHG, 0, 8, CLKPIN, -1, 5) },
  { pnode(GPIO, 38, 0, COMBOUT, 0, -1), pnode(CMUXHR, 0, 8, CLKPIN, -1, 5) },
  { pnode(GPIO, 46, 0, COMBOUT, 0, -1), pnode(CMUXHG, 0, 8, CLKPIN, -1, 7) },
  { pnode(GPIO, 46, 0, COMBOUT, 0, -1), pnode(CMUXHR, 0, 8, CLKPIN, -1, 7) },
  { pnode(GPIO, 15, 61, COMBOUT, 1, -1), pnode(CMUXHG, 0, 8, NCLKPIN, -1, 0) },
  { pnode(GPIO, 15, 61, COMBOUT, 1, -1), pnode(CMUXHR, 0, 8, NCLKPIN, -1, 0) },
  { pnode(GPIO, 15, 0, COMBOUT, 1, -1), pnode(CMUXHG, 0, 8, NCLKPIN, -1, 1) },
  { pnode(GPIO, 15, 0, COMBOUT, 1, -1), pnode(CMUXHR, 0, 8, NCLKPIN, -1, 1) },
  { pnode(GPIO, 21, 61, COMBOUT, 1, -1), pnode(CMUXHG, 0, 8, NCLKPIN, -1, 2) },
  { pnode(GPIO, 21, 61, COMBOUT, 1, -1), pnode(CMUXHR, 0, 8, NCLKPIN, -1, 2) },
  { pnode(GPIO, 21, 0, COMBOUT, 1, -1), pnode(CMUXHG, 0, 8, NCLKPIN, -1, 3) },
  { pnode(GPIO, 21, 0, COMBOUT, 1, -1), pnode(CMUXHR, 0, 8, NCLKPIN, -1, 3) },
  { pnode(GPIO, 38, 0, COMBOUT, 1, -1), pnode(CMUXHG, 0, 8, NCLKPIN, -1, 5) },
  { pnode(GPIO, 38, 0, COMBOUT, 1, -1), pnode(CMUXHR, 0, 8, NCLKPIN, -1, 5) },
  { pnode(GPIO, 46, 0, COMBOUT, 1, -1), pnode(CMUXHG, 0, 8, NCLKPIN, -1, 7) },
  { pnode(GPIO, 46, 0, COMBOUT, 1, -1), pnode(CMUXHR, 0, 8, NCLKPIN, -1, 7) },
  { pnode(FPLL, 0, 13, CLKOUT, -1, 8), pnode(CMUXHG, 0, 8, PLLIN, -1, 0) },
  { pnode(FPLL, 0, 13, CLKOUT, -1, 7), pnode(CMUXHG, 0, 8, PLLIN, -1, 1) },
  { pnode(FPLL, 0, 13, CLKOUT, -1, 6), pnode(CMUXHG, 0, 8, PLLIN, -1, 2) },
  { pnode(FPLL, 0, 13, CLKOUT, -1, 5), pnode(CMUXHG, 0, 8, PLLIN, -1, 3) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 0), pnode(CMUXHG, 0, 8, PLLIN, -1, 4) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 1), pnode(CMUXHG, 0, 8, PLLIN, -1, 5) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 2), pnode(CMUXHG, 0, 8, PLLIN, -1, 6) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 3), pnode(CMUXHG, 0, 8, PLLIN, -1, 7) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 8), pnode(CMUXHG, 0, 8, PLLIN, -1, 12) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 7), pnode(CMUXHG, 0, 8, PLLIN, -1, 13) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 6), pnode(CMUXHG, 0, 8, PLLIN, -1, 14) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 5), pnode(CMUXHG, 0, 8, PLLIN, -1, 15) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 4), pnode(CMUXHG, 0, 8, PLLIN, -1, 16) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 4), pnode(CMUXHG, 0, 8, PLLIN, -1, 19) },
  { pnode(FPLL, 0, 13, CLKOUT, -1, 8), pnode(CMUXHR, 0, 8, PLLIN, -1, 0) },
  { pnode(FPLL, 0, 13, CLKOUT, -1, 7), pnode(CMUXHR, 0, 8, PLLIN, -1, 1) },
  { pnode(FPLL, 0, 13, CLKOUT, -1, 6), pnode(CMUXHR, 0, 8, PLLIN, -1, 2) },
  { pnode(FPLL, 0, 13, CLKOUT, -1, 5), pnode(CMUXHR, 0, 8, PLLIN, -1, 3) },
  { pnode(FPLL, 0, 13, CLKOUT, -1, 4), pnode(CMUXHR, 0, 8, PLLIN, -1, 4) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 0), pnode(CMUXHR, 0, 8, PLLIN, -1, 7) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 1), pnode(CMUXHR, 0, 8, PLLIN, -1, 8) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 2), pnode(CMUXHR, 0, 8, PLLIN, -1, 9) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 3), pnode(CMUXHR, 0, 8, PLLIN, -1, 10) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 4), pnode(CMUXHR, 0, 8, PLLIN, -1, 11) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 5), pnode(CMUXHR, 0, 8, PLLIN, -1, 12) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 6), pnode(CMUXHR, 0, 8, PLLIN, -1, 13) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 8), pnode(CMUXHR, 0, 8, PLLIN, -1, 20) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 7), pnode(CMUXHR, 0, 8, PLLIN, -1, 21) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 6), pnode(CMUXHR, 0, 8, PLLIN, -1, 22) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 5), pnode(CMUXHR, 0, 8, PLLIN, -1, 23) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 4), pnode(CMUXHR, 0, 8, PLLIN, -1, 24) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 8), pnode(CMUXHR, 0, 8, PLLIN, -1, 25) },
  { pnode(GPIO, 15, 61, COMBOUT, 0, -1), pnode(CMUXCR, 5, 61, CLKPIN, -1, 0) },
  { pnode(GPIO, 21, 61, COMBOUT, 0, -1), pnode(CMUXCR, 5, 61, CLKPIN, -1, 1) },
  { pnode(GPIO, 15, 61, COMBOUT, 1, -1), pnode(CMUXCR, 5, 61, NCLKPIN, -1, 0) },
  { pnode(GPIO, 21, 61, COMBOUT, 1, -1), pnode(CMUXCR, 5, 61, NCLKPIN, -1, 1) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 2), pnode(CMUXCR, 5, 61, PLLIN, -1, 0) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 6), pnode(CMUXCR, 5, 61, PLLIN, -1, 1) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 0), pnode(CMUXCR, 5, 61, PLLIN, -1, 2) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 4), pnode(CMUXCR, 5, 61, PLLIN, -1, 3) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 4), pnode(CMUXCR, 5, 61, PLLIN, -1, 4) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 5), pnode(CMUXCR, 5, 61, PLLIN, -1, 5) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 6), pnode(CMUXCR, 5, 61, PLLIN, -1, 6) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 7), pnode(CMUXCR, 5, 61, PLLIN, -1, 7) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 0), pnode(CMUXCR, 5, 61, PLLIN, -1, 8) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 3), pnode(CMUXCR, 5, 61, PLLIN, -1, 9) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 5), pnode(CMUXCR, 5, 61, PLLIN, -1, 10) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 1), pnode(CMUXCR, 5, 61, PLLIN, -1, 11) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 4), pnode(CMUXCR, 5, 61, PLLIN, -1, 12) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 5), pnode(CMUXCR, 5, 61, PLLIN, -1, 13) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 8), pnode(CMUXCR, 5, 61, PLLIN, -1, 14) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 7), pnode(CMUXCR, 5, 61, PLLIN, -1, 15) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 7), pnode(CMUXCR, 5, 61, PLLIN, -1, 16) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 8), pnode(CMUXCR, 5, 61, PLLIN, -1, 17) },
  { pnode(GPIO, 15, 0, COMBOUT, 0, -1), pnode(CMUXVG, 28, 0, CLKPIN, -1, 0) },
  { pnode(GPIO, 15, 0, COMBOUT, 0, -1), pnode(CMUXVR, 28, 0, CLKPIN, -1, 0) },
  { pnode(GPIO, 38, 0, COMBOUT, 0, -1), pnode(CMUXVG, 28, 0, CLKPIN, -1, 1) },
  { pnode(GPIO, 38, 0, COMBOUT, 0, -1), pnode(CMUXVR, 28, 0, CLKPIN, -1, 1) },
  { pnode(GPIO, 21, 0, COMBOUT, 0, -1), pnode(CMUXVG, 28, 0, CLKPIN, -1, 2) },
  { pnode(GPIO, 21, 0, COMBOUT, 0, -1), pnode(CMUXVR, 28, 0, CLKPIN, -1, 2) },
  { pnode(GPIO, 46, 0, COMBOUT, 0, -1), pnode(CMUXVG, 28, 0, CLKPIN, -1, 3) },
  { pnode(GPIO, 46, 0, COMBOUT, 0, -1), pnode(CMUXVR, 28, 0, CLKPIN, -1, 3) },
  { pnode(GPIO, 15, 0, COMBOUT, 1, -1), pnode(CMUXVG, 28, 0, NCLKPIN, -1, 0) },
  { pnode(GPIO, 15, 0, COMBOUT, 1, -1), pnode(CMUXVR, 28, 0, NCLKPIN, -1, 0) },
  { pnode(GPIO, 38, 0, COMBOUT, 1, -1), pnode(CMUXVG, 28, 0, NCLKPIN, -1, 1) },
  { pnode(GPIO, 38, 0, COMBOUT, 1, -1), pnode(CMUXVR, 28, 0, NCLKPIN, -1, 1) },
  { pnode(GPIO, 21, 0, COMBOUT, 1, -1), pnode(CMUXVG, 28, 0, NCLKPIN, -1, 2) },
  { pnode(GPIO, 21, 0, COMBOUT, 1, -1), pnode(CMUXVR, 28, 0, NCLKPIN, -1, 2) },
  { pnode(GPIO, 46, 0, COMBOUT, 1, -1), pnode(CMUXVG, 28, 0, NCLKPIN, -1, 3) },
  { pnode(GPIO, 46, 0, COMBOUT, 1, -1), pnode(CMUXVR, 28, 0, NCLKPIN, -1, 3) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 8), pnode(CMUXVG, 28, 0, PLLIN, -1, 0) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 7), pnode(CMUXVG, 28, 0, PLLIN, -1, 1) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 6), pnode(CMUXVG, 28, 0, PLLIN, -1, 2) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 5), pnode(CMUXVG, 28, 0, PLLIN, -1, 3) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 8), pnode(CMUXVG, 28, 0, PLLIN, -1, 4) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 7), pnode(CMUXVG, 28, 0, PLLIN, -1, 5) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 6), pnode(CMUXVG, 28, 0, PLLIN, -1, 6) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 5), pnode(CMUXVG, 28, 0, PLLIN, -1, 7) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 8), pnode(CMUXVR, 28, 0, PLLIN, -1, 0) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 7), pnode(CMUXVR, 28, 0, PLLIN, -1, 1) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 6), pnode(CMUXVR, 28, 0, PLLIN, -1, 2) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 5), pnode(CMUXVR, 28, 0, PLLIN, -1, 3) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 4), pnode(CMUXVR, 28, 0, PLLIN, -1, 4) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 3), pnode(CMUXVR, 28, 0, PLLIN, -1, 5) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 2), pnode(CMUXVR, 28, 0, PLLIN, -1, 6) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 1), pnode(CMUXVR, 28, 0, PLLIN, -1, 7) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 0), pnode(CMUXVR, 28, 0, PLLIN, -1, 8) },
  { pnode(GPIO, 15, 61, COMBOUT, 0, -1), pnode(CMUXVG, 28, 61, CLKPIN, -1, 0) },
  { pnode(GPIO, 15, 61, COMBOUT, 0, -1), pnode(CMUXVR, 28, 61, CLKPIN, -1, 0) },
  { pnode(GPIO, 21, 61, COMBOUT, 0, -1), pnode(CMUXVG, 28, 61, CLKPIN, -1, 2) },
  { pnode(GPIO, 21, 61, COMBOUT, 0, -1), pnode(CMUXVR, 28, 61, CLKPIN, -1, 2) },
  { pnode(GPIO, 15, 61, COMBOUT, 1, -1), pnode(CMUXVG, 28, 61, NCLKPIN, -1, 0) },
  { pnode(GPIO, 15, 61, COMBOUT, 1, -1), pnode(CMUXVR, 28, 61, NCLKPIN, -1, 0) },
  { pnode(GPIO, 21, 61, COMBOUT, 1, -1), pnode(CMUXVG, 28, 61, NCLKPIN, -1, 2) },
  { pnode(GPIO, 21, 61, COMBOUT, 1, -1), pnode(CMUXVR, 28, 61, NCLKPIN, -1, 2) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 5), pnode(CMUXVG, 28, 61, PLLIN, -1, 0) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 6), pnode(CMUXVG, 28, 61, PLLIN, -1, 1) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 7), pnode(CMUXVG, 28, 61, PLLIN, -1, 2) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 8), pnode(CMUXVG, 28, 61, PLLIN, -1, 3) },
  { pnode(HPS_CLOCKS, 68, 61, CLKOUT, 1, 8), pnode(CMUXVG, 28, 61, PLLIN, -1, 4) },
  { pnode(HPS_CLOCKS, 68, 61, CLKOUT, 1, 7), pnode(CMUXVG, 28, 61, PLLIN, -1, 5) },
  { pnode(HPS_CLOCKS, 68, 61, CLKOUT, 1, 6), pnode(CMUXVG, 28, 61, PLLIN, -1, 6) },
  { pnode(HPS_CLOCKS, 68, 61, CLKOUT, 1, 5), pnode(CMUXVG, 28, 61, PLLIN, -1, 7) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 5), pnode(CMUXVG, 28, 61, PLLIN, -1, 8) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 6), pnode(CMUXVG, 28, 61, PLLIN, -1, 9) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 7), pnode(CMUXVG, 28, 61, PLLIN, -1, 10) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 8), pnode(CMUXVG, 28, 61, PLLIN, -1, 11) },
  { pnode(HPS_CLOCKS, 68, 61, CLKOUT, 1, 8), pnode(CMUXVR, 28, 61, PLLIN, -1, 0) },
  { pnode(HPS_CLOCKS, 68, 61, CLKOUT, 1, 7), pnode(CMUXVR, 28, 61, PLLIN, -1, 1) },
  { pnode(HPS_CLOCKS, 68, 61, CLKOUT, 1, 6), pnode(CMUXVR, 28, 61, PLLIN, -1, 2) },
  { pnode(HPS_CLOCKS, 68, 61, CLKOUT, 1, 5), pnode(CMUXVR, 28, 61, PLLIN, -1, 3) },
  { pnode(HPS_CLOCKS, 68, 61, CLKOUT, 1, 4), pnode(CMUXVR, 28, 61, PLLIN, -1, 4) },
  { pnode(HPS_CLOCKS, 68, 61, CLKOUT, 1, 3), pnode(CMUXVR, 28, 61, PLLIN, -1, 5) },
  { pnode(HPS_CLOCKS, 68, 61, CLKOUT, 1, 2), pnode(CMUXVR, 28, 61, PLLIN, -1, 6) },
  { pnode(HPS_CLOCKS, 68, 61, CLKOUT, 1, 1), pnode(CMUXVR, 28, 61, PLLIN, -1, 7) },
  { pnode(HPS_CLOCKS, 68, 61, CLKOUT, 1, 0), pnode(CMUXVR, 28, 61, PLLIN, -1, 8) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 4), pnode(CMUXVR, 28, 61, PLLIN, -1, 18) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 5), pnode(CMUXVR, 28, 61, PLLIN, -1, 19) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 6), pnode(CMUXVR, 28, 61, PLLIN, -1, 20) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 7), pnode(CMUXVR, 28, 61, PLLIN, -1, 21) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 6), pnode(CMUXVR, 28, 61, PLLIN, -1, 22) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 7), pnode(CMUXVR, 28, 61, PLLIN, -1, 23) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 8), pnode(CMUXVR, 28, 61, PLLIN, -1, 24) },
  { pnode(GPIO, 38, 0, COMBOUT, 0, -1), pnode(CMUXCR, 68, 2, CLKPIN, -1, 0) },
  { pnode(GPIO, 46, 0, COMBOUT, 0, -1), pnode(CMUXCR, 68, 2, CLKPIN, -1, 1) },
  { pnode(GPIO, 38, 0, COMBOUT, 1, -1), pnode(CMUXCR, 68, 2, NCLKPIN, -1, 0) },
  { pnode(GPIO, 46, 0, COMBOUT, 1, -1), pnode(CMUXCR, 68, 2, NCLKPIN, -1, 1) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 8), pnode(CMUXCR, 68, 2, PLLIN, -1, 0) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 7), pnode(CMUXCR, 68, 2, PLLIN, -1, 1) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 6), pnode(CMUXCR, 68, 2, PLLIN, -1, 2) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 5), pnode(CMUXCR, 68, 2, PLLIN, -1, 3) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 4), pnode(CMUXCR, 68, 2, PLLIN, -1, 4) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 3), pnode(CMUXCR, 68, 2, PLLIN, -1, 5) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 2), pnode(CMUXCR, 68, 2, PLLIN, -1, 6) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 1), pnode(CMUXCR, 68, 2, PLLIN, -1, 7) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 6), pnode(CMUXCR, 68, 2, PLLIN, -1, 8) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 7), pnode(CMUXCR, 68, 2, PLLIN, -1, 9) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 4), pnode(CMUXCR, 68, 2, PLLIN, -1, 10) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 5), pnode(CMUXCR, 68, 2, PLLIN, -1, 11) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 2), pnode(CMUXCR, 68, 2, PLLIN, -1, 12) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 3), pnode(CMUXCR, 68, 2, PLLIN, -1, 13) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 0), pnode(CMUXCR, 68, 2, PLLIN, -1, 14) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 1), pnode(CMUXCR, 68, 2, PLLIN, -1, 15) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 8), pnode(CMUXCR, 68, 2, PLLIN, -1, 16) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 0), pnode(CMUXCR, 68, 2, PLLIN, -1, 17) },
  { pnode(HPS_CLOCKS, 68, 61, CLKOUT, 0, 0), pnode(CMUXHG, 68, 8, PLLIN, -1, 0) },
  { pnode(HPS_CLOCKS, 68, 61, CLKOUT, 0, 1), pnode(CMUXHG, 68, 8, PLLIN, -1, 1) },
  { pnode(HPS_CLOCKS, 68, 61, CLKOUT, 0, 2), pnode(CMUXHG, 68, 8, PLLIN, -1, 2) },
  { pnode(HPS_CLOCKS, 68, 61, CLKOUT, 0, 3), pnode(CMUXHG, 68, 8, PLLIN, -1, 3) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 0), pnode(CMUXHG, 68, 8, PLLIN, -1, 4) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 1), pnode(CMUXHG, 68, 8, PLLIN, -1, 5) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 2), pnode(CMUXHG, 68, 8, PLLIN, -1, 6) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 3), pnode(CMUXHG, 68, 8, PLLIN, -1, 7) },
  { pnode(HPS_CLOCKS, 68, 61, CLKOUT, 0, 0), pnode(CMUXHR, 68, 8, PLLIN, -1, 0) },
  { pnode(HPS_CLOCKS, 68, 61, CLKOUT, 0, 1), pnode(CMUXHR, 68, 8, PLLIN, -1, 1) },
  { pnode(HPS_CLOCKS, 68, 61, CLKOUT, 0, 2), pnode(CMUXHR, 68, 8, PLLIN, -1, 2) },
  { pnode(HPS_CLOCKS, 68, 61, CLKOUT, 0, 3), pnode(CMUXHR, 68, 8, PLLIN, -1, 3) },
  { pnode(HPS_CLOCKS, 68, 61, CLKOUT, 0, 4), pnode(CMUXHR, 68, 8, PLLIN, -1, 4) },
  { pnode(HPS_CLOCKS, 68, 61, CLKOUT, 0, 5), pnode(CMUXHR, 68, 8, PLLIN, -1, 5) },
  { pnode(HPS_CLOCKS, 68, 61, CLKOUT, 0, 6), pnode(CMUXHR, 68, 8, PLLIN, -1, 6) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 0), pnode(CMUXHR, 68, 8, PLLIN, -1, 7) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 1), pnode(CMUXHR, 68, 8, PLLIN, -1, 8) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 2), pnode(CMUXHR, 68, 8, PLLIN, -1, 9) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 3), pnode(CMUXHR, 68, 8, PLLIN, -1, 10) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 4), pnode(CMUXHR, 68, 8, PLLIN, -1, 11) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 5), pnode(CMUXHR, 68, 8, PLLIN, -1, 12) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 6), pnode(CMUXHR, 68, 8, PLLIN, -1, 13) },
  { pnode(HPS_CLOCKS, 68, 61, CLKOUT, 0, 8), pnode(CMUXHR, 68, 8, PLLIN, -1, 20) },
  { pnode(HPS_CLOCKS, 68, 61, CLKOUT, 0, 7), pnode(CMUXHR, 68, 8, PLLIN, -1, 21) },
  { pnode(GPIO, 15, 0, COMBOUT, 0, -1), pnode(FPLL, 0, 0, CLKIN, -1, 0) },
  { pnode(GPIO, 21, 0, COMBOUT, 0, -1), pnode(FPLL, 0, 0, CLKIN, -1, 1) },
  { pnode(GPIO, 38, 0, COMBOUT, 0, -1), pnode(FPLL, 0, 0, CLKIN, -1, 2) },
  { pnode(GPIO, 46, 0, COMBOUT, 0, -1), pnode(FPLL, 0, 0, CLKIN, -1, 3) },
  { pnode(GPIO, 19, 0, COMBOUT, 2, -1), pnode(FPLL, 0, 0, ZDB_IN, -1, -1) },
  { pnode(FPLL, 0, 0, EXTCLK, -1, -1), pnode(GPIO, 19, 0, PLLDIN, 3, -1) },
  { pnode(GPIO, 15, 61, COMBOUT, 0, -1), pnode(FPLL, 0, 13, CLKIN, -1, 0) },
  { pnode(GPIO, 21, 61, COMBOUT, 0, -1), pnode(FPLL, 0, 13, CLKIN, -1, 1) },
  { pnode(GPIO, 15, 61, COMBOUT, 0, -1), pnode(FPLL, 0, 29, CLKIN, -1, 0) },
  { pnode(GPIO, 21, 61, COMBOUT, 0, -1), pnode(FPLL, 0, 29, CLKIN, -1, 1) },
  { pnode(GPIO, 15, 61, COMBOUT, 0, -1), pnode(FPLL, 0, 53, CLKIN, -1, 0) },
  { pnode(GPIO, 21, 61, COMBOUT, 0, -1), pnode(FPLL, 0, 53, CLKIN, -1, 1) },
  { pnode(GPIO, 19, 61, COMBOUT, 2, -1), pnode(FPLL, 0, 53, ZDB_IN, -1, -1) },
  { pnode(FPLL, 0, 53, EXTCLK, -1, -1), pnode(GPIO, 19, 61, PLLDIN, 3, -1) },
  { pnode(GPIO, 38, 0, COMBOUT, 0, -1), pnode(FPLL, 68, 0, CLKIN, -1, 0) },
  { pnode(GPIO, 46, 0, COMBOUT, 0, -1), pnode(FPLL, 68, 0, CLKIN, -1, 1) },
  { pnode(FPLL, 0, 53, CLKDOUT, -1, 0), pnode(DLL, 0, 59, CLKIN, -1, -1) },
  { pnode(FPLL, 0, 0, CLKDOUT, -1, 0), pnode(DLL, 8, 0, CLKIN, -1, -1) },
  { pnode(FPLL, 68, 0, CLKDOUT, -1, 0), pnode(DLL, 68, 3, CLKIN, -1, -1) },
  { }
};
