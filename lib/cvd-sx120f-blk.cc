// Generated file, edition is futile

#include "cyclonev.h"

const mistral::CycloneV::ioblock_info mistral::CycloneV::sx120f_ioblocks_info[] = {
  { xy2pos(0, 11), 0, 16, 0, HSSI_OUTPUT },
  { xy2pos(0, 11), 1, 17, 0, HSSI_OUTPUT },
  { xy2pos(0, 14), 0, 21, 0, HSSI_INPUT },
  { xy2pos(0, 14), 1, 20, 0, HSSI_INPUT },
  { xy2pos(0, 15), 0, 14, 0, HSSI_OUTPUT },
  { xy2pos(0, 15), 1, 15, 0, HSSI_OUTPUT },
  { xy2pos(0, 18), 0, 19, 0, HSSI_INPUT },
  { xy2pos(0, 18), 1, 18, 0, HSSI_INPUT },
  { xy2pos(0, 19), 0, 12, 0, HSSI_OUTPUT },
  { xy2pos(0, 19), 1, 13, 0, HSSI_OUTPUT },
  { xy2pos(0, 19), 2, 23, 0, HSSI_INPUT },
  { xy2pos(0, 19), 3, 22, 0, HSSI_INPUT },
  { xy2pos(0, 22), 0, 17, 0, HSSI_INPUT },
  { xy2pos(0, 22), 1, 16, 0, HSSI_INPUT },
  { xy2pos(0, 23), 0, 10, 0, HSSI_OUTPUT },
  { xy2pos(0, 23), 1, 11, 0, HSSI_OUTPUT },
  { xy2pos(0, 26), 0, 15, 0, HSSI_INPUT },
  { xy2pos(0, 26), 1, 14, 0, HSSI_INPUT },
  { xy2pos(0, 27), 0, 8, 0, HSSI_OUTPUT },
  { xy2pos(0, 27), 1, 9, 0, HSSI_OUTPUT },
  { xy2pos(0, 30), 0, 13, 0, HSSI_INPUT },
  { xy2pos(0, 30), 1, 12, 0, HSSI_INPUT },
  { xy2pos(0, 31), 0, 6, 0, HSSI_OUTPUT },
  { xy2pos(0, 31), 1, 7, 0, HSSI_OUTPUT },
  { xy2pos(0, 31), 2, 8, 0, HSSI_INPUT },
  { xy2pos(0, 31), 3, 9, 0, HSSI_INPUT },
  { xy2pos(0, 34), 0, 11, 0, HSSI_INPUT },
  { xy2pos(0, 34), 1, 10, 0, HSSI_INPUT },
  { xy2pos(0, 35), 0, 4, 0, HSSI_OUTPUT },
  { xy2pos(0, 35), 1, 5, 0, HSSI_OUTPUT },
  { xy2pos(0, 38), 0, 5, 0, HSSI_INPUT },
  { xy2pos(0, 38), 1, 4, 0, HSSI_INPUT },
  { xy2pos(0, 39), 0, 2, 0, HSSI_OUTPUT },
  { xy2pos(0, 39), 1, 3, 0, HSSI_OUTPUT },
  { xy2pos(0, 42), 0, 3, 0, HSSI_INPUT },
  { xy2pos(0, 42), 1, 2, 0, HSSI_INPUT },
  { xy2pos(0, 43), 0, 0, 0, HSSI_OUTPUT },
  { xy2pos(0, 43), 1, 1, 0, HSSI_OUTPUT },
  { xy2pos(0, 43), 2, 7, 0, HSSI_INPUT },
  { xy2pos(0, 43), 3, 6, 0, HSSI_INPUT },
  { xy2pos(0, 46), 0, 1, 0, HSSI_INPUT },
  { xy2pos(0, 46), 1, 0, 0, HSSI_INPUT },
  { xy2pos(2, 0), 0, 0, 1, GPIO, (0 << 16) | 1015 },
  { xy2pos(2, 0), 1, 1, 1, GPIO, (0 << 16) | 1015 },
  { xy2pos(2, 0), 2, 2, 1, GPIO, (0 << 16) | 1015 },
  { xy2pos(2, 0), 3, 3, 1, GPIO, (0 << 16) | 1015 },
  { xy2pos(2, 81), 0, 0, 1, GPIO, (10 << 16) | 4289 },
  { xy2pos(2, 81), 1, 1, 1, GPIO, (10 << 16) | 4289 },
  { xy2pos(2, 81), 2, 2, 1, GPIO, (10 << 16) | 4289 },
  { xy2pos(2, 81), 3, 3, 1, GPIO, (10 << 16) | 4289 },
  { xy2pos(4, 0), 0, 0, 1, GPIO, (0 << 16) | 1462 },
  { xy2pos(4, 0), 1, 1, 1, GPIO, (0 << 16) | 1462 },
  { xy2pos(4, 0), 2, 2, 1, GPIO, (0 << 16) | 1462 },
  { xy2pos(4, 0), 3, 3, 1, GPIO, (0 << 16) | 1462 },
  { xy2pos(4, 81), 0, 0, 1, GPIO, (10 << 16) | 3842 },
  { xy2pos(4, 81), 1, 1, 1, GPIO, (10 << 16) | 3842 },
  { xy2pos(4, 81), 2, 2, 1, GPIO, (10 << 16) | 3842 },
  { xy2pos(4, 81), 3, 3, 1, GPIO, (10 << 16) | 3842 },
  { xy2pos(6, 0), 0, 0, 1, GPIO, (0 << 16) | 1909 },
  { xy2pos(6, 0), 1, 1, 1, GPIO, (0 << 16) | 1909 },
  { xy2pos(6, 0), 2, 2, 1, GPIO, (0 << 16) | 1909 },
  { xy2pos(6, 0), 3, 3, 1, GPIO, (0 << 16) | 1909 },
  { xy2pos(6, 81), 0, 0, 1, GPIO, (10 << 16) | 3395 },
  { xy2pos(6, 81), 1, 1, 1, GPIO, (10 << 16) | 3395 },
  { xy2pos(6, 81), 2, 2, 1, GPIO, (10 << 16) | 3395 },
  { xy2pos(6, 81), 3, 3, 1, GPIO, (10 << 16) | 3395 },
  { xy2pos(8, 0), 0, 0, 1, GPIO, (0 << 16) | 2356 },
  { xy2pos(8, 0), 1, 1, 1, GPIO, (0 << 16) | 2356 },
  { xy2pos(8, 0), 2, 2, 1, GPIO, (0 << 16) | 2356 },
  { xy2pos(8, 0), 3, 3, 1, GPIO, (0 << 16) | 2356 },
  { xy2pos(8, 81), 0, 0, 1, GPIO, (10 << 16) | 2368 },
  { xy2pos(8, 81), 1, 1, 1, GPIO, (10 << 16) | 2368 },
  { xy2pos(8, 81), 2, 2, 1, GPIO, (10 << 16) | 2368 },
  { xy2pos(8, 81), 3, 3, 1, GPIO, (10 << 16) | 2368 },
  { xy2pos(9, 81), 0, 6, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(9, 81), 1, 7, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(9, 81), 2, 8, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(9, 81), 3, 9, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(10, 0), 0, 0, 1, GPIO, (0 << 16) | 3383 },
  { xy2pos(10, 0), 1, 1, 1, GPIO, (0 << 16) | 3383 },
  { xy2pos(10, 0), 2, 2, 1, GPIO, (0 << 16) | 3383 },
  { xy2pos(10, 0), 3, 3, 1, GPIO, (0 << 16) | 3383 },
  { xy2pos(10, 81), 0, 0, 1, GPIO, (10 << 16) | 1921 },
  { xy2pos(10, 81), 1, 1, 1, GPIO, (10 << 16) | 1921 },
  { xy2pos(10, 81), 2, 2, 1, GPIO, (10 << 16) | 1921 },
  { xy2pos(10, 81), 3, 3, 1, GPIO, (10 << 16) | 1921 },
  { xy2pos(11, 0), 0, 0, 0, JTAG },
  { xy2pos(11, 0), 1, 0, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(11, 0), 2, 1, 0, JTAG },
  { xy2pos(11, 0), 3, 1, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(11, 81), 0, 10, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(11, 81), 1, 11, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(11, 81), 2, 12, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(11, 81), 3, 13, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(12, 0), 0, 0, 1, GPIO, (0 << 16) | 3830 },
  { xy2pos(12, 0), 1, 1, 1, GPIO, (0 << 16) | 3830 },
  { xy2pos(12, 0), 2, 2, 1, GPIO, (0 << 16) | 3830 },
  { xy2pos(12, 0), 3, 3, 1, GPIO, (0 << 16) | 3830 },
  { xy2pos(12, 81), 0, 0, 1, GPIO, (10 << 16) | 1474 },
  { xy2pos(12, 81), 1, 1, 1, GPIO, (10 << 16) | 1474 },
  { xy2pos(12, 81), 2, 2, 1, GPIO, (10 << 16) | 1474 },
  { xy2pos(12, 81), 3, 3, 1, GPIO, (10 << 16) | 1474 },
  { xy2pos(13, 0), 0, 2, 0, JTAG },
  { xy2pos(13, 0), 1, 2, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(13, 0), 2, 3, 0, JTAG },
  { xy2pos(13, 0), 3, 3, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(13, 81), 0, 14, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(13, 81), 1, 15, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(14, 0), 0, 0, 1, GPIO, (0 << 16) | 4277 },
  { xy2pos(14, 0), 1, 1, 1, GPIO, (0 << 16) | 4277 },
  { xy2pos(14, 0), 2, 2, 1, GPIO, (0 << 16) | 4277 },
  { xy2pos(14, 0), 3, 3, 1, GPIO, (0 << 16) | 4277 },
  { xy2pos(14, 81), 0, 0, 1, GPIO, (10 << 16) | 1027 },
  { xy2pos(14, 81), 1, 1, 1, GPIO, (10 << 16) | 1027 },
  { xy2pos(14, 81), 2, 2, 1, GPIO, (10 << 16) | 1027 },
  { xy2pos(14, 81), 3, 3, 1, GPIO, (10 << 16) | 1027 },
  { xy2pos(15, 0), 0, 4, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(15, 0), 1, 5, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(16, 0), 0, 0, 1, GPIO, (0 << 16) | 4724 },
  { xy2pos(16, 0), 1, 1, 1, GPIO, (0 << 16) | 4724 },
  { xy2pos(16, 0), 2, 2, 1, GPIO, (0 << 16) | 4724 },
  { xy2pos(16, 0), 3, 3, 1, GPIO, (0 << 16) | 4724 },
  { xy2pos(16, 81), 0, 0, 1, GPIO, (10 << 16) | 0 },
  { xy2pos(16, 81), 1, 1, 1, GPIO, (10 << 16) | 0 },
  { xy2pos(16, 81), 2, 2, 1, GPIO, (10 << 16) | 0 },
  { xy2pos(16, 81), 3, 3, 1, GPIO, (10 << 16) | 0 },
  { xy2pos(18, 0), 0, 0, 1, GPIO, (1 << 16) | 0 },
  { xy2pos(18, 0), 1, 1, 1, GPIO, (1 << 16) | 0 },
  { xy2pos(18, 0), 2, 2, 1, GPIO, (1 << 16) | 0 },
  { xy2pos(18, 0), 3, 3, 1, GPIO, (1 << 16) | 0 },
  { xy2pos(18, 81), 0, 0, 1, GPIO, (9 << 16) | 6987 },
  { xy2pos(18, 81), 1, 1, 1, GPIO, (9 << 16) | 6987 },
  { xy2pos(18, 81), 2, 2, 1, GPIO, (9 << 16) | 6987 },
  { xy2pos(18, 81), 3, 3, 1, GPIO, (9 << 16) | 6987 },
  { xy2pos(20, 0), 0, 0, 1, GPIO, (1 << 16) | 447 },
  { xy2pos(20, 0), 1, 1, 1, GPIO, (1 << 16) | 447 },
  { xy2pos(20, 0), 2, 2, 1, GPIO, (1 << 16) | 447 },
  { xy2pos(20, 0), 3, 3, 1, GPIO, (1 << 16) | 447 },
  { xy2pos(20, 81), 0, 0, 1, GPIO, (9 << 16) | 6540 },
  { xy2pos(20, 81), 1, 1, 1, GPIO, (9 << 16) | 6540 },
  { xy2pos(20, 81), 2, 2, 1, GPIO, (9 << 16) | 6540 },
  { xy2pos(20, 81), 3, 3, 1, GPIO, (9 << 16) | 6540 },
  { xy2pos(22, 0), 0, 0, 1, GPIO, (1 << 16) | 894 },
  { xy2pos(22, 0), 1, 1, 1, GPIO, (1 << 16) | 894 },
  { xy2pos(22, 0), 2, 2, 1, GPIO, (1 << 16) | 894 },
  { xy2pos(22, 0), 3, 3, 1, GPIO, (1 << 16) | 894 },
  { xy2pos(22, 81), 0, 0, 1, GPIO, (9 << 16) | 6093 },
  { xy2pos(22, 81), 1, 1, 1, GPIO, (9 << 16) | 6093 },
  { xy2pos(22, 81), 2, 2, 1, GPIO, (9 << 16) | 6093 },
  { xy2pos(22, 81), 3, 3, 1, GPIO, (9 << 16) | 6093 },
  { xy2pos(24, 0), 0, 0, 1, GPIO, (1 << 16) | 1341 },
  { xy2pos(24, 0), 1, 1, 1, GPIO, (1 << 16) | 1341 },
  { xy2pos(24, 0), 2, 2, 1, GPIO, (1 << 16) | 1341 },
  { xy2pos(24, 0), 3, 3, 1, GPIO, (1 << 16) | 1341 },
  { xy2pos(24, 81), 0, 0, 1, GPIO, (9 << 16) | 5066 },
  { xy2pos(24, 81), 1, 1, 1, GPIO, (9 << 16) | 5066 },
  { xy2pos(24, 81), 2, 2, 1, GPIO, (9 << 16) | 5066 },
  { xy2pos(24, 81), 3, 3, 1, GPIO, (9 << 16) | 5066 },
  { xy2pos(26, 0), 0, 0, 1, GPIO, (1 << 16) | 2368 },
  { xy2pos(26, 0), 1, 1, 1, GPIO, (1 << 16) | 2368 },
  { xy2pos(26, 0), 2, 2, 1, GPIO, (1 << 16) | 2368 },
  { xy2pos(26, 0), 3, 3, 1, GPIO, (1 << 16) | 2368 },
  { xy2pos(26, 81), 0, 0, 1, GPIO, (9 << 16) | 4619 },
  { xy2pos(26, 81), 1, 1, 1, GPIO, (9 << 16) | 4619 },
  { xy2pos(26, 81), 2, 2, 1, GPIO, (9 << 16) | 4619 },
  { xy2pos(26, 81), 3, 3, 1, GPIO, (9 << 16) | 4619 },
  { xy2pos(28, 0), 0, 0, 1, GPIO, (1 << 16) | 2815 },
  { xy2pos(28, 0), 1, 1, 1, GPIO, (1 << 16) | 2815 },
  { xy2pos(28, 0), 2, 2, 1, GPIO, (1 << 16) | 2815 },
  { xy2pos(28, 0), 3, 3, 1, GPIO, (1 << 16) | 2815 },
  { xy2pos(28, 81), 0, 0, 1, GPIO, (9 << 16) | 4172 },
  { xy2pos(28, 81), 1, 1, 1, GPIO, (9 << 16) | 4172 },
  { xy2pos(28, 81), 2, 2, 1, GPIO, (9 << 16) | 4172 },
  { xy2pos(28, 81), 3, 3, 1, GPIO, (9 << 16) | 4172 },
  { xy2pos(30, 0), 0, 0, 1, GPIO, (1 << 16) | 3262 },
  { xy2pos(30, 0), 1, 1, 1, GPIO, (1 << 16) | 3262 },
  { xy2pos(30, 0), 2, 2, 1, GPIO, (1 << 16) | 3262 },
  { xy2pos(30, 0), 3, 3, 1, GPIO, (1 << 16) | 3262 },
  { xy2pos(30, 81), 0, 0, 1, GPIO, (9 << 16) | 3725 },
  { xy2pos(30, 81), 1, 1, 1, GPIO, (9 << 16) | 3725 },
  { xy2pos(30, 81), 2, 2, 1, GPIO, (9 << 16) | 3725 },
  { xy2pos(30, 81), 3, 3, 1, GPIO, (9 << 16) | 3725 },
  { xy2pos(32, 0), 0, 0, 1, GPIO, (1 << 16) | 3709 },
  { xy2pos(32, 0), 1, 1, 1, GPIO, (1 << 16) | 3709 },
  { xy2pos(32, 0), 2, 2, 1, GPIO, (1 << 16) | 3709 },
  { xy2pos(32, 0), 3, 3, 1, GPIO, (1 << 16) | 3709 },
  { xy2pos(32, 81), 0, 0, 1, GPIO, (9 << 16) | 2698 },
  { xy2pos(32, 81), 1, 1, 1, GPIO, (9 << 16) | 2698 },
  { xy2pos(32, 81), 2, 2, 1, GPIO, (9 << 16) | 2698 },
  { xy2pos(32, 81), 3, 3, 1, GPIO, (9 << 16) | 2698 },
  { xy2pos(34, 0), 0, 0, 1, GPIO, (1 << 16) | 4786 },
  { xy2pos(34, 0), 1, 1, 1, GPIO, (1 << 16) | 4786 },
  { xy2pos(34, 0), 2, 2, 1, GPIO, (1 << 16) | 4786 },
  { xy2pos(34, 0), 3, 3, 1, GPIO, (1 << 16) | 4786 },
  { xy2pos(34, 81), 0, 0, 1, GPIO, (9 << 16) | 2201 },
  { xy2pos(34, 81), 1, 1, 1, GPIO, (9 << 16) | 2201 },
  { xy2pos(34, 81), 2, 2, 1, GPIO, (9 << 16) | 2201 },
  { xy2pos(34, 81), 3, 3, 1, GPIO, (9 << 16) | 2201 },
  { xy2pos(36, 0), 0, 0, 1, GPIO, (1 << 16) | 5233 },
  { xy2pos(36, 0), 1, 1, 1, GPIO, (1 << 16) | 5233 },
  { xy2pos(36, 0), 2, 2, 1, GPIO, (1 << 16) | 5233 },
  { xy2pos(36, 0), 3, 3, 1, GPIO, (1 << 16) | 5233 },
  { xy2pos(36, 81), 0, 0, 1, GPIO, (9 << 16) | 1754 },
  { xy2pos(36, 81), 1, 1, 1, GPIO, (9 << 16) | 1754 },
  { xy2pos(36, 81), 2, 2, 1, GPIO, (9 << 16) | 1754 },
  { xy2pos(36, 81), 3, 3, 1, GPIO, (9 << 16) | 1754 },
  { xy2pos(38, 0), 0, 0, 1, GPIO, (1 << 16) | 5680 },
  { xy2pos(38, 0), 1, 1, 1, GPIO, (1 << 16) | 5680 },
  { xy2pos(38, 0), 2, 2, 1, GPIO, (1 << 16) | 5680 },
  { xy2pos(38, 0), 3, 3, 1, GPIO, (1 << 16) | 5680 },
  { xy2pos(38, 81), 0, 0, 1, GPIO, (9 << 16) | 1307 },
  { xy2pos(38, 81), 1, 1, 1, GPIO, (9 << 16) | 1307 },
  { xy2pos(38, 81), 2, 2, 1, GPIO, (9 << 16) | 1307 },
  { xy2pos(38, 81), 3, 3, 1, GPIO, (9 << 16) | 1307 },
  { xy2pos(40, 0), 0, 0, 1, GPIO, (1 << 16) | 6127 },
  { xy2pos(40, 0), 1, 1, 1, GPIO, (1 << 16) | 6127 },
  { xy2pos(40, 0), 2, 2, 1, GPIO, (1 << 16) | 6127 },
  { xy2pos(40, 0), 3, 3, 1, GPIO, (1 << 16) | 6127 },
  { xy2pos(40, 81), 0, 0, 1, GPIO, (9 << 16) | 280 },
  { xy2pos(40, 81), 1, 1, 1, GPIO, (9 << 16) | 280 },
  { xy2pos(40, 81), 2, 2, 1, GPIO, (9 << 16) | 280 },
  { xy2pos(40, 81), 3, 3, 1, GPIO, (9 << 16) | 280 },
  { xy2pos(41, 81), 0, 16, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(41, 81), 1, 17, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(46, 81), 0, 18, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(46, 81), 1, 19, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(46, 81), 2, 20, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(46, 81), 3, 21, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(47, 81), 0, 22, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(47, 81), 1, 23, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(47, 81), 2, 24, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(47, 81), 3, 25, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(48, 81), 0, 26, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(48, 81), 1, 27, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(48, 81), 2, 28, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(48, 81), 3, 29, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(49, 81), 0, 0, 0, GPIO, (8 << 16) | 3247 },
  { xy2pos(49, 81), 1, 1, 0, GPIO, (8 << 16) | 3247 },
  { xy2pos(49, 81), 2, 2, 0, GPIO, (8 << 16) | 3247 },
  { xy2pos(49, 81), 3, 3, 0, GPIO, (8 << 16) | 3247 },
  { xy2pos(50, 0), 0, 0, 1, GPIO, (2 << 16) | 40 },
  { xy2pos(50, 0), 1, 1, 1, GPIO, (2 << 16) | 40 },
  { xy2pos(50, 0), 2, 2, 1, GPIO, (2 << 16) | 40 },
  { xy2pos(50, 0), 3, 3, 1, GPIO, (2 << 16) | 40 },
  { xy2pos(52, 0), 0, 0, 1, GPIO, (2 << 16) | 487 },
  { xy2pos(52, 0), 1, 1, 1, GPIO, (2 << 16) | 487 },
  { xy2pos(52, 0), 2, 2, 1, GPIO, (2 << 16) | 487 },
  { xy2pos(52, 0), 3, 3, 1, GPIO, (2 << 16) | 487 },
  { xy2pos(52, 81), 0, 0, 0, GPIO, (8 << 16) | 3056 },
  { xy2pos(52, 81), 1, 1, 0, GPIO, (8 << 16) | 3056 },
  { xy2pos(52, 81), 2, 2, 0, GPIO, (8 << 16) | 3056 },
  { xy2pos(52, 81), 3, 3, 0, GPIO, (8 << 16) | 3056 },
  { xy2pos(53, 81), 0, 0, 0, GPIO, (8 << 16) | 2865 },
  { xy2pos(53, 81), 1, 1, 0, GPIO, (8 << 16) | 2865 },
  { xy2pos(53, 81), 2, 2, 0, GPIO, (8 << 16) | 2865 },
  { xy2pos(53, 81), 3, 3, 0, GPIO, (8 << 16) | 2865 },
  { xy2pos(54, 0), 0, 0, 1, GPIO, (2 << 16) | 934 },
  { xy2pos(54, 0), 1, 1, 1, GPIO, (2 << 16) | 934 },
  { xy2pos(54, 0), 2, 2, 1, GPIO, (2 << 16) | 934 },
  { xy2pos(54, 0), 3, 3, 1, GPIO, (2 << 16) | 934 },
  { xy2pos(54, 81), 0, 0, 0, GPIO, (8 << 16) | 2674 },
  { xy2pos(54, 81), 1, 1, 0, GPIO, (8 << 16) | 2674 },
  { xy2pos(54, 81), 2, 2, 0, GPIO, (8 << 16) | 2674 },
  { xy2pos(54, 81), 3, 3, 0, GPIO, (8 << 16) | 2674 },
  { xy2pos(55, 81), 0, 0, 0, GPIO, (8 << 16) | 2483 },
  { xy2pos(55, 81), 1, 1, 0, GPIO, (8 << 16) | 2483 },
  { xy2pos(55, 81), 2, 2, 0, GPIO, (8 << 16) | 2483 },
  { xy2pos(55, 81), 3, 3, 0, GPIO, (8 << 16) | 2483 },
  { xy2pos(56, 0), 0, 0, 1, GPIO, (2 << 16) | 1381 },
  { xy2pos(56, 0), 1, 1, 1, GPIO, (2 << 16) | 1381 },
  { xy2pos(56, 0), 2, 2, 1, GPIO, (2 << 16) | 1381 },
  { xy2pos(56, 0), 3, 3, 1, GPIO, (2 << 16) | 1381 },
  { xy2pos(57, 81), 0, 0, 0, GPIO, (8 << 16) | 2292 },
  { xy2pos(57, 81), 1, 1, 0, GPIO, (8 << 16) | 2292 },
  { xy2pos(57, 81), 2, 2, 0, GPIO, (8 << 16) | 2292 },
  { xy2pos(57, 81), 3, 3, 0, GPIO, (8 << 16) | 2292 },
  { xy2pos(58, 0), 0, 0, 1, GPIO, (2 << 16) | 2458 },
  { xy2pos(58, 0), 1, 1, 1, GPIO, (2 << 16) | 2458 },
  { xy2pos(58, 0), 2, 2, 1, GPIO, (2 << 16) | 2458 },
  { xy2pos(58, 0), 3, 3, 1, GPIO, (2 << 16) | 2458 },
  { xy2pos(58, 81), 0, 0, 0, GPIO, (8 << 16) | 2101 },
  { xy2pos(58, 81), 1, 1, 0, GPIO, (8 << 16) | 2101 },
  { xy2pos(58, 81), 2, 2, 0, GPIO, (8 << 16) | 2101 },
  { xy2pos(58, 81), 3, 3, 0, GPIO, (8 << 16) | 2101 },
  { xy2pos(60, 0), 0, 0, 1, GPIO, (2 << 16) | 2905 },
  { xy2pos(60, 0), 1, 1, 1, GPIO, (2 << 16) | 2905 },
  { xy2pos(60, 0), 2, 2, 1, GPIO, (2 << 16) | 2905 },
  { xy2pos(60, 0), 3, 3, 1, GPIO, (2 << 16) | 2905 },
  { xy2pos(60, 81), 0, 0, 0, GPIO, (8 << 16) | 1910 },
  { xy2pos(60, 81), 1, 1, 0, GPIO, (8 << 16) | 1910 },
  { xy2pos(60, 81), 2, 2, 0, GPIO, (8 << 16) | 1910 },
  { xy2pos(60, 81), 3, 3, 0, GPIO, (8 << 16) | 1910 },
  { xy2pos(62, 0), 0, 0, 1, GPIO, (2 << 16) | 3352 },
  { xy2pos(62, 0), 1, 1, 1, GPIO, (2 << 16) | 3352 },
  { xy2pos(62, 0), 2, 2, 1, GPIO, (2 << 16) | 3352 },
  { xy2pos(62, 0), 3, 3, 1, GPIO, (2 << 16) | 3352 },
  { xy2pos(63, 81), 0, 0, 0, GPIO, (8 << 16) | 1719 },
  { xy2pos(63, 81), 1, 1, 0, GPIO, (8 << 16) | 1719 },
  { xy2pos(63, 81), 2, 2, 0, GPIO, (8 << 16) | 1719 },
  { xy2pos(63, 81), 3, 3, 0, GPIO, (8 << 16) | 1719 },
  { xy2pos(64, 0), 0, 0, 1, GPIO, (2 << 16) | 3799 },
  { xy2pos(64, 0), 1, 1, 1, GPIO, (2 << 16) | 3799 },
  { xy2pos(64, 0), 2, 2, 1, GPIO, (2 << 16) | 3799 },
  { xy2pos(64, 0), 3, 3, 1, GPIO, (2 << 16) | 3799 },
  { xy2pos(66, 0), 0, 0, 1, GPIO, (3 << 16) | 0 },
  { xy2pos(66, 0), 1, 1, 1, GPIO, (3 << 16) | 0 },
  { xy2pos(66, 0), 2, 2, 1, GPIO, (3 << 16) | 0 },
  { xy2pos(66, 0), 3, 3, 1, GPIO, (3 << 16) | 0 },
  { xy2pos(66, 81), 0, 0, 0, GPIO, (8 << 16) | 1528 },
  { xy2pos(66, 81), 1, 1, 0, GPIO, (8 << 16) | 1528 },
  { xy2pos(66, 81), 2, 2, 0, GPIO, (8 << 16) | 1528 },
  { xy2pos(66, 81), 3, 3, 0, GPIO, (8 << 16) | 1528 },
  { xy2pos(68, 0), 0, 0, 1, GPIO, (3 << 16) | 447 },
  { xy2pos(68, 0), 1, 1, 1, GPIO, (3 << 16) | 447 },
  { xy2pos(68, 0), 2, 2, 1, GPIO, (3 << 16) | 447 },
  { xy2pos(68, 0), 3, 3, 1, GPIO, (3 << 16) | 447 },
  { xy2pos(68, 81), 0, 0, 0, GPIO, (8 << 16) | 1337 },
  { xy2pos(68, 81), 1, 1, 0, GPIO, (8 << 16) | 1337 },
  { xy2pos(68, 81), 2, 2, 0, GPIO, (8 << 16) | 1337 },
  { xy2pos(68, 81), 3, 3, 0, GPIO, (8 << 16) | 1337 },
  { xy2pos(69, 81), 0, 0, 0, GPIO, (8 << 16) | 1146 },
  { xy2pos(69, 81), 1, 1, 0, GPIO, (8 << 16) | 1146 },
  { xy2pos(69, 81), 2, 2, 0, GPIO, (8 << 16) | 1146 },
  { xy2pos(69, 81), 3, 3, 0, GPIO, (8 << 16) | 1146 },
  { xy2pos(70, 0), 0, 0, 1, GPIO, (3 << 16) | 894 },
  { xy2pos(70, 0), 1, 1, 1, GPIO, (3 << 16) | 894 },
  { xy2pos(70, 0), 2, 2, 1, GPIO, (3 << 16) | 894 },
  { xy2pos(70, 0), 3, 3, 1, GPIO, (3 << 16) | 894 },
  { xy2pos(71, 81), 0, 0, 0, GPIO, (8 << 16) | 955 },
  { xy2pos(71, 81), 1, 1, 0, GPIO, (8 << 16) | 955 },
  { xy2pos(71, 81), 2, 2, 0, GPIO, (8 << 16) | 955 },
  { xy2pos(71, 81), 3, 3, 0, GPIO, (8 << 16) | 955 },
  { xy2pos(72, 0), 0, 0, 1, GPIO, (3 << 16) | 1341 },
  { xy2pos(72, 0), 1, 1, 1, GPIO, (3 << 16) | 1341 },
  { xy2pos(72, 0), 2, 2, 1, GPIO, (3 << 16) | 1341 },
  { xy2pos(72, 0), 3, 3, 1, GPIO, (3 << 16) | 1341 },
  { xy2pos(74, 0), 0, 0, 1, GPIO, (3 << 16) | 2418 },
  { xy2pos(74, 0), 1, 1, 1, GPIO, (3 << 16) | 2418 },
  { xy2pos(74, 0), 2, 2, 1, GPIO, (3 << 16) | 2418 },
  { xy2pos(74, 0), 3, 3, 1, GPIO, (3 << 16) | 2418 },
  { xy2pos(74, 81), 0, 0, 0, GPIO, (8 << 16) | 764 },
  { xy2pos(74, 81), 1, 1, 0, GPIO, (8 << 16) | 764 },
  { xy2pos(74, 81), 2, 2, 0, GPIO, (8 << 16) | 764 },
  { xy2pos(74, 81), 3, 3, 0, GPIO, (8 << 16) | 764 },
  { xy2pos(76, 0), 0, 0, 1, GPIO, (3 << 16) | 2865 },
  { xy2pos(76, 0), 1, 1, 1, GPIO, (3 << 16) | 2865 },
  { xy2pos(76, 0), 2, 2, 1, GPIO, (3 << 16) | 2865 },
  { xy2pos(76, 0), 3, 3, 1, GPIO, (3 << 16) | 2865 },
  { xy2pos(76, 81), 0, 0, 0, GPIO, (8 << 16) | 573 },
  { xy2pos(76, 81), 1, 1, 0, GPIO, (8 << 16) | 573 },
  { xy2pos(76, 81), 2, 2, 0, GPIO, (8 << 16) | 573 },
  { xy2pos(76, 81), 3, 3, 0, GPIO, (8 << 16) | 573 },
  { xy2pos(77, 81), 0, 0, 0, GPIO, (8 << 16) | 382 },
  { xy2pos(77, 81), 1, 1, 0, GPIO, (8 << 16) | 382 },
  { xy2pos(77, 81), 2, 2, 0, GPIO, (8 << 16) | 382 },
  { xy2pos(77, 81), 3, 3, 0, GPIO, (8 << 16) | 382 },
  { xy2pos(78, 0), 0, 0, 1, GPIO, (3 << 16) | 3312 },
  { xy2pos(78, 0), 1, 1, 1, GPIO, (3 << 16) | 3312 },
  { xy2pos(78, 0), 2, 2, 1, GPIO, (3 << 16) | 3312 },
  { xy2pos(78, 0), 3, 3, 1, GPIO, (3 << 16) | 3312 },
  { xy2pos(78, 81), 0, 0, 0, GPIO, (8 << 16) | 191 },
  { xy2pos(78, 81), 1, 1, 0, GPIO, (8 << 16) | 191 },
  { xy2pos(78, 81), 2, 2, 0, GPIO, (8 << 16) | 191 },
  { xy2pos(78, 81), 3, 3, 0, GPIO, (8 << 16) | 191 },
  { xy2pos(79, 81), 0, 0, 0, GPIO, (8 << 16) | 0 },
  { xy2pos(79, 81), 1, 1, 0, GPIO, (8 << 16) | 0 },
  { xy2pos(79, 81), 2, 2, 0, GPIO, (8 << 16) | 0 },
  { xy2pos(79, 81), 3, 3, 0, GPIO, (8 << 16) | 0 },
  { xy2pos(80, 0), 0, 0, 1, GPIO, (3 << 16) | 3759 },
  { xy2pos(80, 0), 1, 1, 1, GPIO, (3 << 16) | 3759 },
  { xy2pos(80, 0), 2, 2, 1, GPIO, (3 << 16) | 3759 },
  { xy2pos(80, 0), 3, 3, 1, GPIO, (3 << 16) | 3759 },
  { xy2pos(82, 0), 0, 0, 1, GPIO, (3 << 16) | 4786 },
  { xy2pos(82, 0), 1, 1, 1, GPIO, (3 << 16) | 4786 },
  { xy2pos(82, 0), 2, 2, 1, GPIO, (3 << 16) | 4786 },
  { xy2pos(82, 0), 3, 3, 1, GPIO, (3 << 16) | 4786 },
  { xy2pos(84, 0), 0, 0, 1, GPIO, (3 << 16) | 5233 },
  { xy2pos(84, 0), 1, 1, 1, GPIO, (3 << 16) | 5233 },
  { xy2pos(84, 0), 2, 2, 1, GPIO, (3 << 16) | 5233 },
  { xy2pos(84, 0), 3, 3, 1, GPIO, (3 << 16) | 5233 },
  { xy2pos(86, 0), 0, 0, 1, GPIO, (3 << 16) | 5680 },
  { xy2pos(86, 0), 1, 1, 1, GPIO, (3 << 16) | 5680 },
  { xy2pos(86, 0), 2, 2, 1, GPIO, (3 << 16) | 5680 },
  { xy2pos(86, 0), 3, 3, 1, GPIO, (3 << 16) | 5680 },
  { xy2pos(88, 0), 0, 0, 1, GPIO, (3 << 16) | 6127 },
  { xy2pos(88, 0), 1, 1, 1, GPIO, (3 << 16) | 6127 },
  { xy2pos(88, 0), 2, 2, 1, GPIO, (3 << 16) | 6127 },
  { xy2pos(88, 0), 3, 3, 1, GPIO, (3 << 16) | 6127 },
  { xy2pos(89, 4), 0, 0, 1, GPIO, (4 << 16) | 71 },
  { xy2pos(89, 4), 1, 1, 1, GPIO, (4 << 16) | 71 },
  { xy2pos(89, 4), 2, 2, 1, GPIO, (4 << 16) | 71 },
  { xy2pos(89, 4), 3, 3, 1, GPIO, (4 << 16) | 71 },
  { xy2pos(89, 6), 0, 0, 1, GPIO, (4 << 16) | 1098 },
  { xy2pos(89, 6), 1, 1, 1, GPIO, (4 << 16) | 1098 },
  { xy2pos(89, 6), 2, 2, 1, GPIO, (4 << 16) | 1098 },
  { xy2pos(89, 6), 3, 3, 1, GPIO, (4 << 16) | 1098 },
  { xy2pos(89, 8), 0, 0, 1, GPIO, (4 << 16) | 1545 },
  { xy2pos(89, 8), 1, 1, 1, GPIO, (4 << 16) | 1545 },
  { xy2pos(89, 8), 2, 2, 1, GPIO, (4 << 16) | 1545 },
  { xy2pos(89, 8), 3, 3, 1, GPIO, (4 << 16) | 1545 },
  { xy2pos(89, 9), 0, 0, 1, GPIO, (4 << 16) | 1992 },
  { xy2pos(89, 9), 1, 1, 1, GPIO, (4 << 16) | 1992 },
  { xy2pos(89, 9), 2, 2, 1, GPIO, (4 << 16) | 1992 },
  { xy2pos(89, 9), 3, 3, 1, GPIO, (4 << 16) | 1992 },
  { xy2pos(89, 11), 0, 0, 1, GPIO, (4 << 16) | 2439 },
  { xy2pos(89, 11), 1, 1, 1, GPIO, (4 << 16) | 2439 },
  { xy2pos(89, 11), 2, 2, 1, GPIO, (4 << 16) | 2439 },
  { xy2pos(89, 11), 3, 3, 1, GPIO, (4 << 16) | 2439 },
  { xy2pos(89, 13), 0, 0, 1, GPIO, (4 << 16) | 3466 },
  { xy2pos(89, 13), 1, 1, 1, GPIO, (4 << 16) | 3466 },
  { xy2pos(89, 13), 2, 2, 1, GPIO, (4 << 16) | 3466 },
  { xy2pos(89, 13), 3, 3, 1, GPIO, (4 << 16) | 3466 },
  { xy2pos(89, 15), 0, 0, 1, GPIO, (4 << 16) | 3913 },
  { xy2pos(89, 15), 1, 1, 1, GPIO, (4 << 16) | 3913 },
  { xy2pos(89, 15), 2, 2, 1, GPIO, (4 << 16) | 3913 },
  { xy2pos(89, 15), 3, 3, 1, GPIO, (4 << 16) | 3913 },
  { xy2pos(89, 16), 0, 0, 1, GPIO, (4 << 16) | 4360 },
  { xy2pos(89, 16), 1, 1, 1, GPIO, (4 << 16) | 4360 },
  { xy2pos(89, 16), 2, 2, 1, GPIO, (4 << 16) | 4360 },
  { xy2pos(89, 16), 3, 3, 1, GPIO, (4 << 16) | 4360 },
  { xy2pos(89, 20), 0, 0, 1, GPIO, (5 << 16) | 0 },
  { xy2pos(89, 20), 1, 1, 1, GPIO, (5 << 16) | 0 },
  { xy2pos(89, 20), 2, 2, 1, GPIO, (5 << 16) | 0 },
  { xy2pos(89, 20), 3, 3, 1, GPIO, (5 << 16) | 0 },
  { xy2pos(89, 21), 0, 0, 1, GPIO, (5 << 16) | 1027 },
  { xy2pos(89, 21), 1, 1, 1, GPIO, (5 << 16) | 1027 },
  { xy2pos(89, 21), 2, 2, 1, GPIO, (5 << 16) | 1027 },
  { xy2pos(89, 21), 3, 3, 1, GPIO, (5 << 16) | 1027 },
  { xy2pos(89, 23), 0, 0, 1, GPIO, (5 << 16) | 1474 },
  { xy2pos(89, 23), 1, 1, 1, GPIO, (5 << 16) | 1474 },
  { xy2pos(89, 23), 2, 2, 1, GPIO, (5 << 16) | 1474 },
  { xy2pos(89, 23), 3, 3, 1, GPIO, (5 << 16) | 1474 },
  { xy2pos(89, 25), 0, 0, 1, GPIO, (5 << 16) | 1921 },
  { xy2pos(89, 25), 1, 1, 1, GPIO, (5 << 16) | 1921 },
  { xy2pos(89, 25), 2, 2, 1, GPIO, (5 << 16) | 1921 },
  { xy2pos(89, 25), 3, 3, 1, GPIO, (5 << 16) | 1921 },
  { xy2pos(89, 36), 0, 0, 0, GPIO, (6 << 16) | 3 },
  { xy2pos(89, 36), 1, 1, 0, GPIO, (6 << 16) | 3 },
  { xy2pos(89, 36), 2, 2, 0, GPIO, (6 << 16) | 3 },
  { xy2pos(89, 36), 3, 3, 0, GPIO, (6 << 16) | 3 },
  { xy2pos(89, 37), 0, 0, 0, GPIO, (6 << 16) | 1030 },
  { xy2pos(89, 37), 1, 1, 0, GPIO, (6 << 16) | 1030 },
  { xy2pos(89, 37), 2, 2, 0, GPIO, (6 << 16) | 1030 },
  { xy2pos(89, 37), 3, 3, 0, GPIO, (6 << 16) | 1030 },
  { xy2pos(89, 38), 0, 0, 0, GPIO, (6 << 16) | 1477 },
  { xy2pos(89, 38), 1, 1, 0, GPIO, (6 << 16) | 1477 },
  { xy2pos(89, 38), 2, 2, 0, GPIO, (6 << 16) | 1477 },
  { xy2pos(89, 38), 3, 3, 0, GPIO, (6 << 16) | 1477 },
  { xy2pos(89, 39), 0, 0, 0, GPIO, (6 << 16) | 1924 },
  { xy2pos(89, 39), 1, 1, 0, GPIO, (6 << 16) | 1924 },
  { xy2pos(89, 39), 2, 2, 0, GPIO, (6 << 16) | 1924 },
  { xy2pos(89, 39), 3, 3, 0, GPIO, (6 << 16) | 1924 },
  { xy2pos(89, 42), 0, 0, 0, GPIO, (6 << 16) | 2426 },
  { xy2pos(89, 42), 1, 1, 0, GPIO, (6 << 16) | 2426 },
  { xy2pos(89, 42), 2, 2, 0, GPIO, (6 << 16) | 2426 },
  { xy2pos(89, 42), 3, 3, 0, GPIO, (6 << 16) | 2426 },
  { xy2pos(89, 43), 0, 0, 0, GPIO, (6 << 16) | 3453 },
  { xy2pos(89, 43), 1, 1, 0, GPIO, (6 << 16) | 3453 },
  { xy2pos(89, 43), 2, 2, 0, GPIO, (6 << 16) | 3453 },
  { xy2pos(89, 43), 3, 3, 0, GPIO, (6 << 16) | 3453 },
  { xy2pos(89, 44), 0, 0, 0, GPIO, (6 << 16) | 3900 },
  { xy2pos(89, 44), 1, 1, 0, GPIO, (6 << 16) | 3900 },
  { xy2pos(89, 44), 2, 2, 0, GPIO, (6 << 16) | 3900 },
  { xy2pos(89, 44), 3, 3, 0, GPIO, (6 << 16) | 3900 },
  { xy2pos(89, 45), 0, 0, 0, GPIO, (6 << 16) | 4347 },
  { xy2pos(89, 45), 1, 1, 0, GPIO, (6 << 16) | 4347 },
  { xy2pos(89, 45), 2, 2, 0, GPIO, (6 << 16) | 4347 },
  { xy2pos(89, 45), 3, 3, 0, GPIO, (6 << 16) | 4347 },
  { xy2pos(89, 49), 0, 0, 0, GPIO, (6 << 16) | 4794 },
  { xy2pos(89, 49), 1, 1, 0, GPIO, (6 << 16) | 4794 },
  { xy2pos(89, 49), 2, 2, 0, GPIO, (6 << 16) | 4794 },
  { xy2pos(89, 49), 3, 3, 0, GPIO, (6 << 16) | 4794 },
  { xy2pos(89, 50), 0, 0, 0, GPIO, (6 << 16) | 5821 },
  { xy2pos(89, 50), 1, 1, 0, GPIO, (6 << 16) | 5821 },
  { xy2pos(89, 50), 2, 2, 0, GPIO, (6 << 16) | 5821 },
  { xy2pos(89, 50), 3, 3, 0, GPIO, (6 << 16) | 5821 },
  { xy2pos(89, 51), 0, 0, 0, GPIO, (6 << 16) | 6268 },
  { xy2pos(89, 51), 1, 1, 0, GPIO, (6 << 16) | 6268 },
  { xy2pos(89, 51), 2, 2, 0, GPIO, (6 << 16) | 6268 },
  { xy2pos(89, 51), 3, 3, 0, GPIO, (6 << 16) | 6268 },
  { xy2pos(89, 52), 0, 0, 0, GPIO, (6 << 16) | 6715 },
  { xy2pos(89, 52), 1, 1, 0, GPIO, (6 << 16) | 6715 },
  { xy2pos(89, 52), 2, 2, 0, GPIO, (6 << 16) | 6715 },
  { xy2pos(89, 52), 3, 3, 0, GPIO, (6 << 16) | 6715 },
  { xy2pos(89, 56), 0, 0, 0, GPIO, (7 << 16) | 0 },
  { xy2pos(89, 56), 1, 1, 0, GPIO, (7 << 16) | 0 },
  { xy2pos(89, 56), 2, 2, 0, GPIO, (7 << 16) | 0 },
  { xy2pos(89, 56), 3, 3, 0, GPIO, (7 << 16) | 0 },
  { xy2pos(89, 57), 0, 0, 0, GPIO, (7 << 16) | 1027 },
  { xy2pos(89, 57), 1, 1, 0, GPIO, (7 << 16) | 1027 },
  { xy2pos(89, 57), 2, 2, 0, GPIO, (7 << 16) | 1027 },
  { xy2pos(89, 57), 3, 3, 0, GPIO, (7 << 16) | 1027 },
  { xy2pos(89, 58), 0, 0, 0, GPIO, (7 << 16) | 1474 },
  { xy2pos(89, 58), 1, 1, 0, GPIO, (7 << 16) | 1474 },
  { xy2pos(89, 58), 2, 2, 0, GPIO, (7 << 16) | 1474 },
  { xy2pos(89, 58), 3, 3, 0, GPIO, (7 << 16) | 1474 },
  { xy2pos(89, 59), 0, 0, 0, GPIO, (7 << 16) | 1921 },
  { xy2pos(89, 59), 1, 1, 0, GPIO, (7 << 16) | 1921 },
  { xy2pos(89, 59), 2, 2, 0, GPIO, (7 << 16) | 1921 },
  { xy2pos(89, 59), 3, 3, 0, GPIO, (7 << 16) | 1921 },
  { xy2pos(89, 63), 0, 0, 0, GPIO, (7 << 16) | 2368 },
  { xy2pos(89, 63), 1, 1, 0, GPIO, (7 << 16) | 2368 },
  { xy2pos(89, 63), 2, 2, 0, GPIO, (7 << 16) | 2368 },
  { xy2pos(89, 63), 3, 3, 0, GPIO, (7 << 16) | 2368 },
  { xy2pos(89, 64), 0, 0, 0, GPIO, (7 << 16) | 3395 },
  { xy2pos(89, 64), 1, 1, 0, GPIO, (7 << 16) | 3395 },
  { xy2pos(89, 64), 2, 2, 0, GPIO, (7 << 16) | 3395 },
  { xy2pos(89, 64), 3, 3, 0, GPIO, (7 << 16) | 3395 },
  { xy2pos(89, 65), 0, 0, 0, GPIO, (7 << 16) | 3842 },
  { xy2pos(89, 65), 1, 1, 0, GPIO, (7 << 16) | 3842 },
  { xy2pos(89, 65), 2, 2, 0, GPIO, (7 << 16) | 3842 },
  { xy2pos(89, 65), 3, 3, 0, GPIO, (7 << 16) | 3842 },
  { xy2pos(89, 66), 0, 0, 0, GPIO, (7 << 16) | 4289 },
  { xy2pos(89, 66), 1, 1, 0, GPIO, (7 << 16) | 4289 },
  { xy2pos(89, 66), 2, 2, 0, GPIO, (7 << 16) | 4289 },
  { xy2pos(89, 66), 3, 3, 0, GPIO, (7 << 16) | 4289 },
  { xy2pos(89, 71), 0, 0, 0, GPIO, (7 << 16) | 4791 },
  { xy2pos(89, 71), 1, 1, 0, GPIO, (7 << 16) | 4791 },
  { xy2pos(89, 71), 2, 2, 0, GPIO, (7 << 16) | 4791 },
  { xy2pos(89, 71), 3, 3, 0, GPIO, (7 << 16) | 4791 },
  { xy2pos(89, 72), 0, 0, 0, GPIO, (7 << 16) | 5818 },
  { xy2pos(89, 72), 1, 1, 0, GPIO, (7 << 16) | 5818 },
  { xy2pos(89, 72), 2, 2, 0, GPIO, (7 << 16) | 5818 },
  { xy2pos(89, 72), 3, 3, 0, GPIO, (7 << 16) | 5818 },
  { xy2pos(89, 73), 0, 0, 0, GPIO, (7 << 16) | 6265 },
  { xy2pos(89, 73), 1, 1, 0, GPIO, (7 << 16) | 6265 },
  { xy2pos(89, 73), 2, 2, 0, GPIO, (7 << 16) | 6265 },
  { xy2pos(89, 73), 3, 3, 0, GPIO, (7 << 16) | 6265 },
  { xy2pos(89, 74), 0, 0, 0, GPIO, (7 << 16) | 6712 },
  { xy2pos(89, 74), 1, 1, 0, GPIO, (7 << 16) | 6712 },
  { xy2pos(89, 74), 2, 2, 0, GPIO, (7 << 16) | 6712 },
  { xy2pos(89, 74), 3, 3, 0, GPIO, (7 << 16) | 6712 },
  { xy2pos(89, 77), 0, 0, 0, GPIO, (7 << 16) | 7159 },
  { xy2pos(89, 77), 1, 1, 0, GPIO, (7 << 16) | 7159 },
  { xy2pos(89, 77), 2, 2, 0, GPIO, (7 << 16) | 7159 },
  { xy2pos(89, 77), 3, 3, 0, GPIO, (7 << 16) | 7159 },
  { xy2pos(89, 78), 0, 0, 0, GPIO, (7 << 16) | 8186 },
  { xy2pos(89, 78), 1, 1, 0, GPIO, (7 << 16) | 8186 },
  { xy2pos(89, 78), 2, 2, 0, GPIO, (7 << 16) | 8186 },
  { xy2pos(89, 78), 3, 3, 0, GPIO, (7 << 16) | 8186 },
  { xy2pos(89, 79), 0, 0, 0, GPIO, (7 << 16) | 8633 },
  { xy2pos(89, 79), 1, 1, 0, GPIO, (7 << 16) | 8633 },
  { xy2pos(89, 79), 2, 2, 0, GPIO, (7 << 16) | 8633 },
  { xy2pos(89, 79), 3, 3, 0, GPIO, (7 << 16) | 8633 },
  { xy2pos(89, 80), 0, 0, 0, GPIO, (7 << 16) | 9080 },
  { xy2pos(89, 80), 1, 1, 0, GPIO, (7 << 16) | 9080 },
  { xy2pos(89, 80), 2, 2, 0, GPIO, (7 << 16) | 9080 },
  { xy2pos(89, 80), 3, 3, 0, GPIO, (7 << 16) | 9080 },
};

const mistral::CycloneV::dqs16_info mistral::CycloneV::sx120f_dqs16_info[] = {
  { xy2pos(4, 0), (1 << 23) | (1 << 22) | (0 << 16) | 1206 },
  { xy2pos(4, 81), (1 << 23) | (0 << 22) | (10 << 16) | 4480 },
  { xy2pos(12, 0), (1 << 23) | (1 << 22) | (0 << 16) | 3574 },
  { xy2pos(12, 81), (1 << 23) | (0 << 22) | (10 << 16) | 2112 },
  { xy2pos(20, 0), (1 << 23) | (1 << 22) | (1 << 16) | 191 },
  { xy2pos(20, 81), (1 << 23) | (0 << 22) | (9 << 16) | 7178 },
  { xy2pos(28, 0), (1 << 23) | (1 << 22) | (1 << 16) | 2559 },
  { xy2pos(28, 81), (1 << 23) | (0 << 22) | (9 << 16) | 4810 },
  { xy2pos(36, 0), (1 << 23) | (1 << 22) | (1 << 16) | 4977 },
  { xy2pos(36, 81), (1 << 23) | (0 << 22) | (9 << 16) | 2392 },
  { xy2pos(52, 0), (1 << 23) | (1 << 22) | (2 << 16) | 231 },
  { xy2pos(60, 0), (1 << 23) | (1 << 22) | (2 << 16) | 2649 },
  { xy2pos(68, 0), (1 << 23) | (1 << 22) | (3 << 16) | 191 },
  { xy2pos(76, 0), (1 << 23) | (1 << 22) | (3 << 16) | 2609 },
  { xy2pos(84, 0), (1 << 23) | (1 << 22) | (3 << 16) | 4977 },
  { xy2pos(89, 8), (1 << 23) | (0 << 22) | (4 << 16) | 2183 },
  { xy2pos(89, 15), (1 << 23) | (0 << 22) | (4 << 16) | 4551 },
  { xy2pos(89, 23), (1 << 23) | (0 << 22) | (5 << 16) | 2112 },
  { xy2pos(89, 38), (1 << 23) | (0 << 22) | (6 << 16) | 2115 },
  { xy2pos(89, 44), (1 << 23) | (0 << 22) | (6 << 16) | 4538 },
  { xy2pos(89, 51), (1 << 23) | (0 << 22) | (6 << 16) | 6906 },
  { xy2pos(89, 58), (1 << 23) | (0 << 22) | (7 << 16) | 2112 },
  { xy2pos(89, 65), (1 << 23) | (0 << 22) | (7 << 16) | 4480 },
  { xy2pos(89, 73), (1 << 23) | (0 << 22) | (7 << 16) | 6903 },
  { xy2pos(89, 79), (1 << 23) | (0 << 22) | (7 << 16) | 9271 },
};

const mistral::CycloneV::fixed_block_info mistral::CycloneV::sx120f_fixed_blocks_info[FB_COUNT] = {
  { xy2pos(0, 0), (0 << 16) | 112 },
  { xy2pos(0, 14), (13 << 16) | 4816 },
  { xy2pos(0, 31), (13 << 16) | 3984 },
  { xy2pos(0, 55), (11 << 16) | 1152 },
  { xy2pos(0, 73), (10 << 16) | 4919 },
  { xy2pos(89, 0), (3 << 16) | 7337 },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { xy2pos(5, 0), (0 << 16) | 0 },
  { xy2pos(5, 81), (10 << 16) | 4767 },
  { xy2pos(89, 3), (3 << 16) | 7225 },
  { 0xffff, 0xffffffff },
  { xy2pos(42, 0), (1 << 16) | 7154 },
  { xy2pos(42, 81), (9 << 16) | 0 },
  { xy2pos(0, 35), (12 << 16) | 9136 },
  { xy2pos(89, 35), (5 << 16) | 2408 },
  { xy2pos(0, 79), (10 << 16) | 4879 },
  { xy2pos(7, 0), (0 << 16) | 944 },
  { xy2pos(85, 0), (3 << 16) | 7185 },
  { xy2pos(89, 81), (7 << 16) | 9567 },
  { xy2pos(0, 11), (14 << 16) | 0 },
  { xy2pos(0, 23), (13 << 16) | 0 },
  { xy2pos(0, 35), (12 << 16) | 0 },
  { 0xffff, 0xffffffff },
  { xy2pos(3, 0), (0 << 16) | 984 },
  { xy2pos(3, 81), (3 << 16) | 7154 },
  { xy2pos(87, 0), (4 << 16) | 0 },
  { xy2pos(89, 2), (10 << 16) | 4736 },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { xy2pos(17, 0), (6 << 16) | 2376 },
  { xy2pos(17, 81), (7 << 16) | 4741 },
  { xy2pos(33, 0), (0 << 16) | 5751 },
  { xy2pos(33, 81), (1 << 16) | 4736 },
  { xy2pos(55, 0), (3 << 16) | 2368 },
  { xy2pos(71, 0), (9 << 16) | 7434 },
  { xy2pos(89, 17), (4 << 16) | 4807 },
  { xy2pos(89, 42), (2 << 16) | 2408 },
  { xy2pos(89, 69), (9 << 16) | 2648 },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { xy2pos(0, 11), (2 << 24) | (13 << 16) | 5648 },
  { xy2pos(0, 23), (1 << 24) | (13 << 16) | 2832 },
  { xy2pos(0, 35), (0 << 24) | (11 << 16) | 0 },
  { 0xffff, 0xffffffff },
  { xy2pos(7, 81), (10 << 16) | 4762 },
  { xy2pos(9, 0), (0 << 16) | 1010 },
  { xy2pos(19, 0), (0 << 16) | 5801 },
  { xy2pos(83, 0), (3 << 16) | 7180 },
  { xy2pos(89, 7), (4 << 16) | 66 },
  { xy2pos(89, 18), (4 << 16) | 4857 },
  { xy2pos(89, 42), (6 << 16) | 2371 },
  { xy2pos(89, 69), (7 << 16) | 4736 },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { xy2pos(46, 0), (2 << 16) | 0 },
  { xy2pos(89, 5), (4 << 16) | 26 },
  { xy2pos(89, 27), (5 << 16) | 2368 },
  { xy2pos(89, 34), (7 << 16) | 9527 },
  { xy2pos(1, 15), (14 << 16) | 2832 },
  { xy2pos(1, 56), (12 << 16) | 2832 },
  { xy2pos(25, 0), (2 << 16) | 4826 },
  { 0xffff, 0xffffffff },
};

const mistral::CycloneV::pos_t mistral::CycloneV::sx120f_hps_info[] = {
  xy2pos(52, 74),
  xy2pos(51, 80),
  xy2pos(52, 78),
  xy2pos(52, 41),
  xy2pos(52, 80),
  xy2pos(52, 69),
  xy2pos(52, 45),
  xy2pos(52, 53),
  xy2pos(52, 47),
  xy2pos(52, 43),
  xy2pos(52, 40),
  xy2pos(52, 75),
  xy2pos(52, 62),
  xy2pos(52, 49),
  xy2pos(52, 79),
  xy2pos(52, 70),
  xy2pos(52, 71),
  xy2pos(52, 56),
  xy2pos(52, 77),
  xy2pos(52, 58),
  xy2pos(52, 59),
  xy2pos(52, 60),
  xy2pos(52, 61),
  xy2pos(52, 50),
  xy2pos(52, 65),
  xy2pos(52, 68),
  xy2pos(52, 72),
  xy2pos(52, 73),
  xy2pos(52, 63),
  xy2pos(52, 64),
  xy2pos(52, 66),
  xy2pos(52, 67),
  xy2pos(52, 57),
  xy2pos(52, 76),
  xy2pos(52, 42),
  xy2pos(52, 46),
  xy2pos(52, 39),
};

const mistral::CycloneV::dcram_info mistral::CycloneV::sx120f_dcram_pos[] = {
  { 8, 1246 },
  { 8, 1247 },
  { 9, 1247 },
  { 8, 1160 },
  { 8, 1161 },
  { 9, 1161 },
  { 828, 1848 },
  { 828, 1849 },
  { 829, 1849 },
  { 828, 1762 },
  { 828, 1763 },
  { 829, 1763 },
  { 828, 2536 },
  { 828, 2537 },
  { 829, 2537 },
  { 828, 2450 },
  { 828, 2451 },
  { 829, 2451 },
  { 8, 3138 },
  { 8, 3139 },
  { 9, 3139 },
  { 8, 3052 },
  { 8, 3053 },
  { 9, 3053 },
  { 8, 3568 },
  { 8, 3569 },
  { 9, 3569 },
  { 8, 3482 },
  { 8, 3483 },
  { 9, 3483 },
  { 8, 4170 },
  { 8, 4171 },
  { 9, 4171 },
  { 8, 4084 },
  { 8, 4085 },
  { 9, 4085 },
  { 8, 4772 },
  { 8, 4773 },
  { 9, 4773 },
  { 8, 4686 },
  { 8, 4687 },
  { 9, 4687 },
  { 828, 5374 },
  { 828, 5375 },
  { 829, 5375 },
  { 828, 5288 },
  { 828, 5289 },
  { 829, 5289 },
  { 828, 6062 },
  { 828, 6063 },
  { 829, 6063 },
  { 828, 5976 },
  { 828, 5977 },
  { 829, 5977 },
};

const mistral::CycloneV::dcram_info mistral::CycloneV::sx120f_forced_1_info[72] = {
  { 1474, 82 },
  { 2779, 82 },
  { 2781, 82 },
  { 4795, 82 },
  { 4797, 82 },
  { 6866, 82 },
  { 1474, 87 },
  { 2779, 87 },
  { 2781, 87 },
  { 4795, 87 },
  { 4797, 87 },
  { 6866, 87 },
  { 6866, 3132 },
  { 6866, 3137 },
  { 4796, 3186 },
  { 4798, 3186 },
  { 6865, 3186 },
  { 6867, 3186 },
  { 4796, 3190 },
  { 4798, 3190 },
  { 6865, 3190 },
  { 6867, 3190 },
  { 4796, 3194 },
  { 4798, 3194 },
  { 6865, 3194 },
  { 6867, 3194 },
  { 4796, 3198 },
  { 4798, 3198 },
  { 6865, 3198 },
  { 6867, 3198 },
  { 4796, 3210 },
  { 4798, 3210 },
  { 6865, 3210 },
  { 6867, 3210 },
  { 4796, 3214 },
  { 4798, 3214 },
  { 6865, 3214 },
  { 6867, 3214 },
  { 6864, 3218 },
  { 6866, 3218 },
  { 6864, 3223 },
  { 6866, 3223 },
  { 4796, 3240 },
  { 4798, 3240 },
  { 6865, 3240 },
  { 6867, 3240 },
  { 4796, 3244 },
  { 4798, 3244 },
  { 6865, 3244 },
  { 6867, 3244 },
  { 4796, 3256 },
  { 4798, 3256 },
  { 6865, 3256 },
  { 6867, 3256 },
  { 4796, 3260 },
  { 4798, 3260 },
  { 6865, 3260 },
  { 6867, 3260 },
  { 4796, 3264 },
  { 4798, 3264 },
  { 6865, 3264 },
  { 6867, 3264 },
  { 4796, 3268 },
  { 4798, 3268 },
  { 6865, 3268 },
  { 6867, 3268 },
  { 1474, 7018 },
  { 2779, 7018 },
  { 2781, 7018 },
  { 1474, 7023 },
  { 2779, 7023 },
  { 2781, 7023 },
};

const mistral::CycloneV::p2r_info mistral::CycloneV::sx120f_p2r_info[] = {
  { pnode(GPIO, 2, 0, DATAIN, 0, 0), rnode(GOUT, 3, 0, 36) },
  { pnode(GPIO, 2, 0, DATAIN, 0, 1), rnode(GOUT, 3, 0, 26) },
  { pnode(GPIO, 2, 0, DATAIN, 0, 2), rnode(GOUT, 4, 0, 0) },
  { pnode(GPIO, 2, 0, DATAIN, 0, 3), rnode(GOUT, 4, 0, 10) },
  { pnode(GPIO, 2, 0, DATAOUT, 0, 0), rnode(GIN, 3, 0, 17) },
  { pnode(GPIO, 2, 0, DATAOUT, 0, 1), rnode(GIN, 3, 0, 16) },
  { pnode(GPIO, 2, 0, DATAOUT, 0, 2), rnode(GIN, 3, 0, 15) },
  { pnode(GPIO, 2, 0, DATAOUT, 0, 3), rnode(GIN, 3, 0, 14) },
  { pnode(GPIO, 2, 0, DATAOUT, 0, 4), rnode(GIN, 3, 0, 13) },
  { pnode(GPIO, 2, 0, OEIN, 0, 0), rnode(GOUT, 4, 0, 9) },
  { pnode(GPIO, 2, 0, OEIN, 0, 1), rnode(GOUT, 4, 0, 11) },
  { pnode(GPIO, 2, 0, BSLIPMAX, 0, -1), rnode(GIN, 3, 0, 25) },
  { pnode(GPIO, 2, 0, CEIN, 0, -1), rnode(GOUT, 3, 0, 32) },
  { pnode(GPIO, 2, 0, CEOUT, 0, -1), rnode(GOUT, 3, 0, 37) },
  { pnode(GPIO, 2, 0, ACLR, 0, -1), rnode(GOUT, 3, 0, 35) },
  { pnode(GPIO, 2, 0, SCLR, 0, -1), rnode(GOUT, 4, 0, 6) },
  { pnode(GPIO, 2, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 2, 0, 10) },
  { pnode(GPIO, 2, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 2, 0, 8) },
  { pnode(GPIO, 2, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 2, 0, 14) },
  { pnode(GPIO, 2, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 2, 0, 12) },
  { pnode(GPIO, 2, 0, DATAIN, 1, 0), rnode(GOUT, 3, 0, 11) },
  { pnode(GPIO, 2, 0, DATAIN, 1, 1), rnode(GOUT, 3, 0, 1) },
  { pnode(GPIO, 2, 0, DATAIN, 1, 2), rnode(GOUT, 3, 0, 23) },
  { pnode(GPIO, 2, 0, DATAIN, 1, 3), rnode(GOUT, 3, 0, 24) },
  { pnode(GPIO, 2, 0, DATAOUT, 1, 0), rnode(GIN, 3, 0, 4) },
  { pnode(GPIO, 2, 0, DATAOUT, 1, 1), rnode(GIN, 3, 0, 8) },
  { pnode(GPIO, 2, 0, DATAOUT, 1, 2), rnode(GIN, 3, 0, 10) },
  { pnode(GPIO, 2, 0, DATAOUT, 1, 3), rnode(GIN, 3, 0, 11) },
  { pnode(GPIO, 2, 0, DATAOUT, 1, 4), rnode(GIN, 3, 0, 12) },
  { pnode(GPIO, 2, 0, OEIN, 1, 0), rnode(GOUT, 3, 0, 25) },
  { pnode(GPIO, 2, 0, OEIN, 1, 1), rnode(GOUT, 3, 0, 50) },
  { pnode(GPIO, 2, 0, BSLIPMAX, 1, -1), rnode(GIN, 3, 0, 0) },
  { pnode(GPIO, 2, 0, CEIN, 1, -1), rnode(GOUT, 3, 0, 0) },
  { pnode(GPIO, 2, 0, CEOUT, 1, -1), rnode(GOUT, 3, 0, 10) },
  { pnode(GPIO, 2, 0, ACLR, 1, -1), rnode(GOUT, 3, 0, 9) },
  { pnode(GPIO, 2, 0, SCLR, 1, -1), rnode(GOUT, 3, 0, 49) },
  { pnode(GPIO, 2, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 2, 0, 11) },
  { pnode(GPIO, 2, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 2, 0, 9) },
  { pnode(GPIO, 2, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 2, 0, 15) },
  { pnode(GPIO, 2, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 2, 0, 13) },
  { pnode(GPIO, 2, 0, DATAIN, 2, 0), rnode(GOUT, 2, 0, 31) },
  { pnode(GPIO, 2, 0, DATAIN, 2, 1), rnode(GOUT, 2, 0, 33) },
  { pnode(GPIO, 2, 0, DATAIN, 2, 2), rnode(GOUT, 2, 0, 32) },
  { pnode(GPIO, 2, 0, DATAIN, 2, 3), rnode(GOUT, 2, 0, 37) },
  { pnode(GPIO, 2, 0, DATAOUT, 2, 0), rnode(GIN, 2, 0, 25) },
  { pnode(GPIO, 2, 0, DATAOUT, 2, 1), rnode(GIN, 2, 0, 24) },
  { pnode(GPIO, 2, 0, DATAOUT, 2, 2), rnode(GIN, 2, 0, 23) },
  { pnode(GPIO, 2, 0, DATAOUT, 2, 3), rnode(GIN, 2, 0, 22) },
  { pnode(GPIO, 2, 0, DATAOUT, 2, 4), rnode(GIN, 2, 0, 21) },
  { pnode(GPIO, 2, 0, OEIN, 2, 0), rnode(GOUT, 2, 0, 35) },
  { pnode(GPIO, 2, 0, OEIN, 2, 1), rnode(GOUT, 2, 0, 36) },
  { pnode(GPIO, 2, 0, BSLIPMAX, 2, -1), rnode(GIN, 2, 0, 12) },
  { pnode(GPIO, 2, 0, CEIN, 2, -1), rnode(GOUT, 2, 0, 13) },
  { pnode(GPIO, 2, 0, CEOUT, 2, -1), rnode(GOUT, 2, 0, 18) },
  { pnode(GPIO, 2, 0, ACLR, 2, -1), rnode(GOUT, 2, 0, 14) },
  { pnode(GPIO, 2, 0, SCLR, 2, -1), rnode(GOUT, 2, 0, 26) },
  { pnode(GPIO, 2, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 2, 0, 5) },
  { pnode(GPIO, 2, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 2, 0, 7) },
  { pnode(GPIO, 2, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 2, 0, 1) },
  { pnode(GPIO, 2, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 2, 0, 3) },
  { pnode(GPIO, 2, 0, DATAIN, 3, 0), rnode(GOUT, 2, 0, 4) },
  { pnode(GPIO, 2, 0, DATAIN, 3, 1), rnode(GOUT, 2, 0, 3) },
  { pnode(GPIO, 2, 0, DATAIN, 3, 2), rnode(GOUT, 2, 0, 8) },
  { pnode(GPIO, 2, 0, DATAIN, 3, 3), rnode(GOUT, 2, 0, 2) },
  { pnode(GPIO, 2, 0, DATAOUT, 3, 0), rnode(GIN, 2, 0, 6) },
  { pnode(GPIO, 2, 0, DATAOUT, 3, 1), rnode(GIN, 2, 0, 7) },
  { pnode(GPIO, 2, 0, DATAOUT, 3, 2), rnode(GIN, 2, 0, 8) },
  { pnode(GPIO, 2, 0, DATAOUT, 3, 3), rnode(GIN, 2, 0, 9) },
  { pnode(GPIO, 2, 0, DATAOUT, 3, 4), rnode(GIN, 2, 0, 10) },
  { pnode(GPIO, 2, 0, OEIN, 3, 0), rnode(GOUT, 2, 0, 1) },
  { pnode(GPIO, 2, 0, OEIN, 3, 1), rnode(GOUT, 2, 0, 12) },
  { pnode(GPIO, 2, 0, BSLIPMAX, 3, -1), rnode(GIN, 2, 0, 5) },
  { pnode(GPIO, 2, 0, CEIN, 3, -1), rnode(GOUT, 2, 0, 6) },
  { pnode(GPIO, 2, 0, CEOUT, 3, -1), rnode(GOUT, 2, 0, 7) },
  { pnode(GPIO, 2, 0, ACLR, 3, -1), rnode(GOUT, 2, 0, 5) },
  { pnode(GPIO, 2, 0, SCLR, 3, -1), rnode(GOUT, 2, 0, 17) },
  { pnode(GPIO, 2, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 2, 0, 4) },
  { pnode(GPIO, 2, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 2, 0, 6) },
  { pnode(GPIO, 2, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 2, 0, 0) },
  { pnode(GPIO, 2, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 2, 0, 2) },
  { pnode(GPIO, 2, 81, DATAIN, 0, 0), rnode(GOUT, 3, 81, 36) },
  { pnode(GPIO, 2, 81, DATAIN, 0, 1), rnode(GOUT, 3, 81, 26) },
  { pnode(GPIO, 2, 81, DATAIN, 0, 2), rnode(GOUT, 4, 81, 0) },
  { pnode(GPIO, 2, 81, DATAIN, 0, 3), rnode(GOUT, 4, 81, 10) },
  { pnode(GPIO, 2, 81, DATAOUT, 0, 0), rnode(GIN, 3, 81, 17) },
  { pnode(GPIO, 2, 81, DATAOUT, 0, 1), rnode(GIN, 3, 81, 16) },
  { pnode(GPIO, 2, 81, DATAOUT, 0, 2), rnode(GIN, 3, 81, 15) },
  { pnode(GPIO, 2, 81, DATAOUT, 0, 3), rnode(GIN, 3, 81, 14) },
  { pnode(GPIO, 2, 81, DATAOUT, 0, 4), rnode(GIN, 3, 81, 13) },
  { pnode(GPIO, 2, 81, OEIN, 0, 0), rnode(GOUT, 4, 81, 9) },
  { pnode(GPIO, 2, 81, OEIN, 0, 1), rnode(GOUT, 4, 81, 11) },
  { pnode(GPIO, 2, 81, BSLIPMAX, 0, -1), rnode(GIN, 3, 81, 25) },
  { pnode(GPIO, 2, 81, CEIN, 0, -1), rnode(GOUT, 3, 81, 32) },
  { pnode(GPIO, 2, 81, CEOUT, 0, -1), rnode(GOUT, 3, 81, 37) },
  { pnode(GPIO, 2, 81, ACLR, 0, -1), rnode(GOUT, 3, 81, 35) },
  { pnode(GPIO, 2, 81, SCLR, 0, -1), rnode(GOUT, 4, 81, 6) },
  { pnode(GPIO, 2, 81, CLKIN_IN, 0, 0), rnode(DCMUX, 2, 81, 10) },
  { pnode(GPIO, 2, 81, CLKIN_IN, 0, 1), rnode(DCMUX, 2, 81, 8) },
  { pnode(GPIO, 2, 81, CLKIN_OUT, 0, 0), rnode(DCMUX, 2, 81, 14) },
  { pnode(GPIO, 2, 81, CLKIN_OUT, 0, 1), rnode(DCMUX, 2, 81, 12) },
  { pnode(GPIO, 2, 81, DATAIN, 1, 0), rnode(GOUT, 3, 81, 11) },
  { pnode(GPIO, 2, 81, DATAIN, 1, 1), rnode(GOUT, 3, 81, 1) },
  { pnode(GPIO, 2, 81, DATAIN, 1, 2), rnode(GOUT, 3, 81, 23) },
  { pnode(GPIO, 2, 81, DATAIN, 1, 3), rnode(GOUT, 3, 81, 24) },
  { pnode(GPIO, 2, 81, DATAOUT, 1, 0), rnode(GIN, 3, 81, 4) },
  { pnode(GPIO, 2, 81, DATAOUT, 1, 1), rnode(GIN, 3, 81, 8) },
  { pnode(GPIO, 2, 81, DATAOUT, 1, 2), rnode(GIN, 3, 81, 10) },
  { pnode(GPIO, 2, 81, DATAOUT, 1, 3), rnode(GIN, 3, 81, 11) },
  { pnode(GPIO, 2, 81, DATAOUT, 1, 4), rnode(GIN, 3, 81, 12) },
  { pnode(GPIO, 2, 81, OEIN, 1, 0), rnode(GOUT, 3, 81, 25) },
  { pnode(GPIO, 2, 81, OEIN, 1, 1), rnode(GOUT, 3, 81, 50) },
  { pnode(GPIO, 2, 81, BSLIPMAX, 1, -1), rnode(GIN, 3, 81, 0) },
  { pnode(GPIO, 2, 81, CEIN, 1, -1), rnode(GOUT, 3, 81, 0) },
  { pnode(GPIO, 2, 81, CEOUT, 1, -1), rnode(GOUT, 3, 81, 10) },
  { pnode(GPIO, 2, 81, ACLR, 1, -1), rnode(GOUT, 3, 81, 9) },
  { pnode(GPIO, 2, 81, SCLR, 1, -1), rnode(GOUT, 3, 81, 49) },
  { pnode(GPIO, 2, 81, CLKIN_IN, 1, 0), rnode(DCMUX, 2, 81, 11) },
  { pnode(GPIO, 2, 81, CLKIN_IN, 1, 1), rnode(DCMUX, 2, 81, 9) },
  { pnode(GPIO, 2, 81, CLKIN_OUT, 1, 0), rnode(DCMUX, 2, 81, 15) },
  { pnode(GPIO, 2, 81, CLKIN_OUT, 1, 1), rnode(DCMUX, 2, 81, 13) },
  { pnode(GPIO, 2, 81, DATAIN, 2, 0), rnode(GOUT, 2, 81, 31) },
  { pnode(GPIO, 2, 81, DATAIN, 2, 1), rnode(GOUT, 2, 81, 33) },
  { pnode(GPIO, 2, 81, DATAIN, 2, 2), rnode(GOUT, 2, 81, 32) },
  { pnode(GPIO, 2, 81, DATAIN, 2, 3), rnode(GOUT, 2, 81, 37) },
  { pnode(GPIO, 2, 81, DATAOUT, 2, 0), rnode(GIN, 2, 81, 25) },
  { pnode(GPIO, 2, 81, DATAOUT, 2, 1), rnode(GIN, 2, 81, 24) },
  { pnode(GPIO, 2, 81, DATAOUT, 2, 2), rnode(GIN, 2, 81, 23) },
  { pnode(GPIO, 2, 81, DATAOUT, 2, 3), rnode(GIN, 2, 81, 22) },
  { pnode(GPIO, 2, 81, DATAOUT, 2, 4), rnode(GIN, 2, 81, 21) },
  { pnode(GPIO, 2, 81, OEIN, 2, 0), rnode(GOUT, 2, 81, 35) },
  { pnode(GPIO, 2, 81, OEIN, 2, 1), rnode(GOUT, 2, 81, 36) },
  { pnode(GPIO, 2, 81, BSLIPMAX, 2, -1), rnode(GIN, 2, 81, 12) },
  { pnode(GPIO, 2, 81, CEIN, 2, -1), rnode(GOUT, 2, 81, 13) },
  { pnode(GPIO, 2, 81, CEOUT, 2, -1), rnode(GOUT, 2, 81, 18) },
  { pnode(GPIO, 2, 81, ACLR, 2, -1), rnode(GOUT, 2, 81, 14) },
  { pnode(GPIO, 2, 81, SCLR, 2, -1), rnode(GOUT, 2, 81, 26) },
  { pnode(GPIO, 2, 81, CLKIN_IN, 2, 0), rnode(DCMUX, 2, 81, 5) },
  { pnode(GPIO, 2, 81, CLKIN_IN, 2, 1), rnode(DCMUX, 2, 81, 7) },
  { pnode(GPIO, 2, 81, CLKIN_OUT, 2, 0), rnode(DCMUX, 2, 81, 1) },
  { pnode(GPIO, 2, 81, CLKIN_OUT, 2, 1), rnode(DCMUX, 2, 81, 3) },
  { pnode(GPIO, 2, 81, DATAIN, 3, 0), rnode(GOUT, 2, 81, 4) },
  { pnode(GPIO, 2, 81, DATAIN, 3, 1), rnode(GOUT, 2, 81, 3) },
  { pnode(GPIO, 2, 81, DATAIN, 3, 2), rnode(GOUT, 2, 81, 8) },
  { pnode(GPIO, 2, 81, DATAIN, 3, 3), rnode(GOUT, 2, 81, 2) },
  { pnode(GPIO, 2, 81, DATAOUT, 3, 0), rnode(GIN, 2, 81, 6) },
  { pnode(GPIO, 2, 81, DATAOUT, 3, 1), rnode(GIN, 2, 81, 7) },
  { pnode(GPIO, 2, 81, DATAOUT, 3, 2), rnode(GIN, 2, 81, 8) },
  { pnode(GPIO, 2, 81, DATAOUT, 3, 3), rnode(GIN, 2, 81, 9) },
  { pnode(GPIO, 2, 81, DATAOUT, 3, 4), rnode(GIN, 2, 81, 10) },
  { pnode(GPIO, 2, 81, OEIN, 3, 0), rnode(GOUT, 2, 81, 1) },
  { pnode(GPIO, 2, 81, OEIN, 3, 1), rnode(GOUT, 2, 81, 12) },
  { pnode(GPIO, 2, 81, BSLIPMAX, 3, -1), rnode(GIN, 2, 81, 5) },
  { pnode(GPIO, 2, 81, CEIN, 3, -1), rnode(GOUT, 2, 81, 6) },
  { pnode(GPIO, 2, 81, CEOUT, 3, -1), rnode(GOUT, 2, 81, 7) },
  { pnode(GPIO, 2, 81, ACLR, 3, -1), rnode(GOUT, 2, 81, 5) },
  { pnode(GPIO, 2, 81, SCLR, 3, -1), rnode(GOUT, 2, 81, 17) },
  { pnode(GPIO, 2, 81, CLKIN_IN, 3, 0), rnode(DCMUX, 2, 81, 4) },
  { pnode(GPIO, 2, 81, CLKIN_IN, 3, 1), rnode(DCMUX, 2, 81, 6) },
  { pnode(GPIO, 2, 81, CLKIN_OUT, 3, 0), rnode(DCMUX, 2, 81, 0) },
  { pnode(GPIO, 2, 81, CLKIN_OUT, 3, 1), rnode(DCMUX, 2, 81, 2) },
  { pnode(GPIO, 4, 0, DATAIN, 0, 0), rnode(GOUT, 5, 0, 49) },
  { pnode(GPIO, 4, 0, DATAIN, 0, 1), rnode(GOUT, 5, 0, 48) },
  { pnode(GPIO, 4, 0, DATAIN, 0, 2), rnode(GOUT, 5, 0, 47) },
  { pnode(GPIO, 4, 0, DATAIN, 0, 3), rnode(GOUT, 5, 0, 42) },
  { pnode(GPIO, 4, 0, DATAOUT, 0, 0), rnode(GIN, 5, 0, 8) },
  { pnode(GPIO, 4, 0, DATAOUT, 0, 1), rnode(GIN, 5, 0, 9) },
  { pnode(GPIO, 4, 0, DATAOUT, 0, 2), rnode(GIN, 5, 0, 10) },
  { pnode(GPIO, 4, 0, DATAOUT, 0, 3), rnode(GIN, 5, 0, 11) },
  { pnode(GPIO, 4, 0, DATAOUT, 0, 4), rnode(GIN, 5, 0, 12) },
  { pnode(GPIO, 4, 0, OEIN, 0, 0), rnode(GOUT, 5, 0, 46) },
  { pnode(GPIO, 4, 0, OEIN, 0, 1), rnode(GOUT, 5, 0, 41) },
  { pnode(GPIO, 4, 0, BSLIPMAX, 0, -1), rnode(GIN, 5, 0, 7) },
  { pnode(GPIO, 4, 0, CEIN, 0, -1), rnode(GOUT, 5, 0, 21) },
  { pnode(GPIO, 4, 0, CEOUT, 0, -1), rnode(GOUT, 5, 0, 22) },
  { pnode(GPIO, 4, 0, ACLR, 0, -1), rnode(GOUT, 5, 0, 23) },
  { pnode(GPIO, 4, 0, SCLR, 0, -1), rnode(GOUT, 5, 0, 45) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 4, 0, 10) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 4, 0, 8) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 4, 0, 14) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 4, 0, 12) },
  { pnode(GPIO, 4, 0, DATAIN, 1, 0), rnode(GOUT, 5, 0, 13) },
  { pnode(GPIO, 4, 0, DATAIN, 1, 1), rnode(GOUT, 5, 0, 18) },
  { pnode(GPIO, 4, 0, DATAIN, 1, 2), rnode(GOUT, 5, 0, 14) },
  { pnode(GPIO, 4, 0, DATAIN, 1, 3), rnode(GOUT, 5, 0, 19) },
  { pnode(GPIO, 4, 0, DATAOUT, 1, 0), rnode(GIN, 5, 0, 2) },
  { pnode(GPIO, 4, 0, DATAOUT, 1, 1), rnode(GIN, 5, 0, 3) },
  { pnode(GPIO, 4, 0, DATAOUT, 1, 2), rnode(GIN, 5, 0, 4) },
  { pnode(GPIO, 4, 0, DATAOUT, 1, 3), rnode(GIN, 5, 0, 5) },
  { pnode(GPIO, 4, 0, DATAOUT, 1, 4), rnode(GIN, 5, 0, 6) },
  { pnode(GPIO, 4, 0, OEIN, 1, 0), rnode(GOUT, 5, 0, 15) },
  { pnode(GPIO, 4, 0, OEIN, 1, 1), rnode(GOUT, 5, 0, 20) },
  { pnode(GPIO, 4, 0, BSLIPMAX, 1, -1), rnode(GIN, 5, 0, 1) },
  { pnode(GPIO, 4, 0, CEIN, 1, -1), rnode(GOUT, 5, 0, 2) },
  { pnode(GPIO, 4, 0, CEOUT, 1, -1), rnode(GOUT, 5, 0, 1) },
  { pnode(GPIO, 4, 0, ACLR, 1, -1), rnode(GOUT, 5, 0, 12) },
  { pnode(GPIO, 4, 0, SCLR, 1, -1), rnode(GOUT, 5, 0, 16) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 4, 0, 11) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 4, 0, 9) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 4, 0, 15) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 4, 0, 13) },
  { pnode(GPIO, 4, 0, DATAIN, 2, 0), rnode(GOUT, 5, 0, 0) },
  { pnode(GPIO, 4, 0, DATAIN, 2, 1), rnode(GOUT, 5, 0, 10) },
  { pnode(GPIO, 4, 0, DATAIN, 2, 2), rnode(GOUT, 5, 0, 9) },
  { pnode(GPIO, 4, 0, DATAIN, 2, 3), rnode(GOUT, 5, 0, 11) },
  { pnode(GPIO, 4, 0, DATAOUT, 2, 0), rnode(GIN, 4, 0, 17) },
  { pnode(GPIO, 4, 0, DATAOUT, 2, 1), rnode(GIN, 4, 0, 15) },
  { pnode(GPIO, 4, 0, DATAOUT, 2, 2), rnode(GIN, 4, 0, 14) },
  { pnode(GPIO, 4, 0, DATAOUT, 2, 3), rnode(GIN, 4, 0, 13) },
  { pnode(GPIO, 4, 0, DATAOUT, 2, 4), rnode(GIN, 5, 0, 0) },
  { pnode(GPIO, 4, 0, OEIN, 2, 0), rnode(GOUT, 5, 0, 6) },
  { pnode(GPIO, 4, 0, OEIN, 2, 1), rnode(GOUT, 5, 0, 7) },
  { pnode(GPIO, 4, 0, BSLIPMAX, 2, -1), rnode(GIN, 4, 0, 18) },
  { pnode(GPIO, 4, 0, CEIN, 2, -1), rnode(GOUT, 4, 0, 30) },
  { pnode(GPIO, 4, 0, CEOUT, 2, -1), rnode(GOUT, 4, 0, 33) },
  { pnode(GPIO, 4, 0, ACLR, 2, -1), rnode(GOUT, 4, 0, 32) },
  { pnode(GPIO, 4, 0, SCLR, 2, -1), rnode(GOUT, 5, 0, 3) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 4, 0, 5) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 4, 0, 7) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 4, 0, 1) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 4, 0, 3) },
  { pnode(GPIO, 4, 0, DATAIN, 3, 0), rnode(GOUT, 4, 0, 45) },
  { pnode(GPIO, 4, 0, DATAIN, 3, 1), rnode(GOUT, 4, 0, 40) },
  { pnode(GPIO, 4, 0, DATAIN, 3, 2), rnode(GOUT, 4, 0, 44) },
  { pnode(GPIO, 4, 0, DATAIN, 3, 3), rnode(GOUT, 4, 0, 39) },
  { pnode(GPIO, 4, 0, DATAOUT, 3, 0), rnode(GIN, 4, 0, 11) },
  { pnode(GPIO, 4, 0, DATAOUT, 3, 1), rnode(GIN, 4, 0, 12) },
  { pnode(GPIO, 4, 0, DATAOUT, 3, 2), rnode(GIN, 4, 0, 25) },
  { pnode(GPIO, 4, 0, DATAOUT, 3, 3), rnode(GIN, 4, 0, 24) },
  { pnode(GPIO, 4, 0, DATAOUT, 3, 4), rnode(GIN, 4, 0, 23) },
  { pnode(GPIO, 4, 0, OEIN, 3, 0), rnode(GOUT, 4, 0, 43) },
  { pnode(GPIO, 4, 0, OEIN, 3, 1), rnode(GOUT, 4, 0, 38) },
  { pnode(GPIO, 4, 0, BSLIPMAX, 3, -1), rnode(GIN, 4, 0, 3) },
  { pnode(GPIO, 4, 0, CEIN, 3, -1), rnode(GOUT, 4, 0, 7) },
  { pnode(GPIO, 4, 0, CEOUT, 3, -1), rnode(GOUT, 4, 0, 5) },
  { pnode(GPIO, 4, 0, ACLR, 3, -1), rnode(GOUT, 4, 0, 4) },
  { pnode(GPIO, 4, 0, SCLR, 3, -1), rnode(GOUT, 4, 0, 34) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 4, 0, 4) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 4, 0, 6) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 4, 0, 0) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 4, 0, 2) },
  { pnode(GPIO, 4, 81, DATAIN, 0, 0), rnode(GOUT, 5, 81, 49) },
  { pnode(GPIO, 4, 81, DATAIN, 0, 1), rnode(GOUT, 5, 81, 48) },
  { pnode(GPIO, 4, 81, DATAIN, 0, 2), rnode(GOUT, 5, 81, 47) },
  { pnode(GPIO, 4, 81, DATAIN, 0, 3), rnode(GOUT, 5, 81, 42) },
  { pnode(GPIO, 4, 81, DATAOUT, 0, 0), rnode(GIN, 5, 81, 8) },
  { pnode(GPIO, 4, 81, DATAOUT, 0, 1), rnode(GIN, 5, 81, 9) },
  { pnode(GPIO, 4, 81, DATAOUT, 0, 2), rnode(GIN, 5, 81, 10) },
  { pnode(GPIO, 4, 81, DATAOUT, 0, 3), rnode(GIN, 5, 81, 11) },
  { pnode(GPIO, 4, 81, DATAOUT, 0, 4), rnode(GIN, 5, 81, 12) },
  { pnode(GPIO, 4, 81, OEIN, 0, 0), rnode(GOUT, 5, 81, 46) },
  { pnode(GPIO, 4, 81, OEIN, 0, 1), rnode(GOUT, 5, 81, 41) },
  { pnode(GPIO, 4, 81, BSLIPMAX, 0, -1), rnode(GIN, 5, 81, 7) },
  { pnode(GPIO, 4, 81, CEIN, 0, -1), rnode(GOUT, 5, 81, 21) },
  { pnode(GPIO, 4, 81, CEOUT, 0, -1), rnode(GOUT, 5, 81, 22) },
  { pnode(GPIO, 4, 81, ACLR, 0, -1), rnode(GOUT, 5, 81, 23) },
  { pnode(GPIO, 4, 81, SCLR, 0, -1), rnode(GOUT, 5, 81, 45) },
  { pnode(GPIO, 4, 81, CLKIN_IN, 0, 0), rnode(DCMUX, 4, 81, 10) },
  { pnode(GPIO, 4, 81, CLKIN_IN, 0, 1), rnode(DCMUX, 4, 81, 8) },
  { pnode(GPIO, 4, 81, CLKIN_OUT, 0, 0), rnode(DCMUX, 4, 81, 14) },
  { pnode(GPIO, 4, 81, CLKIN_OUT, 0, 1), rnode(DCMUX, 4, 81, 12) },
  { pnode(GPIO, 4, 81, DATAIN, 1, 0), rnode(GOUT, 5, 81, 13) },
  { pnode(GPIO, 4, 81, DATAIN, 1, 1), rnode(GOUT, 5, 81, 18) },
  { pnode(GPIO, 4, 81, DATAIN, 1, 2), rnode(GOUT, 5, 81, 14) },
  { pnode(GPIO, 4, 81, DATAIN, 1, 3), rnode(GOUT, 5, 81, 19) },
  { pnode(GPIO, 4, 81, DATAOUT, 1, 0), rnode(GIN, 5, 81, 2) },
  { pnode(GPIO, 4, 81, DATAOUT, 1, 1), rnode(GIN, 5, 81, 3) },
  { pnode(GPIO, 4, 81, DATAOUT, 1, 2), rnode(GIN, 5, 81, 4) },
  { pnode(GPIO, 4, 81, DATAOUT, 1, 3), rnode(GIN, 5, 81, 5) },
  { pnode(GPIO, 4, 81, DATAOUT, 1, 4), rnode(GIN, 5, 81, 6) },
  { pnode(GPIO, 4, 81, OEIN, 1, 0), rnode(GOUT, 5, 81, 15) },
  { pnode(GPIO, 4, 81, OEIN, 1, 1), rnode(GOUT, 5, 81, 20) },
  { pnode(GPIO, 4, 81, BSLIPMAX, 1, -1), rnode(GIN, 5, 81, 1) },
  { pnode(GPIO, 4, 81, CEIN, 1, -1), rnode(GOUT, 5, 81, 2) },
  { pnode(GPIO, 4, 81, CEOUT, 1, -1), rnode(GOUT, 5, 81, 1) },
  { pnode(GPIO, 4, 81, ACLR, 1, -1), rnode(GOUT, 5, 81, 12) },
  { pnode(GPIO, 4, 81, SCLR, 1, -1), rnode(GOUT, 5, 81, 16) },
  { pnode(GPIO, 4, 81, CLKIN_IN, 1, 0), rnode(DCMUX, 4, 81, 11) },
  { pnode(GPIO, 4, 81, CLKIN_IN, 1, 1), rnode(DCMUX, 4, 81, 9) },
  { pnode(GPIO, 4, 81, CLKIN_OUT, 1, 0), rnode(DCMUX, 4, 81, 15) },
  { pnode(GPIO, 4, 81, CLKIN_OUT, 1, 1), rnode(DCMUX, 4, 81, 13) },
  { pnode(GPIO, 4, 81, DATAIN, 2, 0), rnode(GOUT, 5, 81, 0) },
  { pnode(GPIO, 4, 81, DATAIN, 2, 1), rnode(GOUT, 5, 81, 10) },
  { pnode(GPIO, 4, 81, DATAIN, 2, 2), rnode(GOUT, 5, 81, 9) },
  { pnode(GPIO, 4, 81, DATAIN, 2, 3), rnode(GOUT, 5, 81, 11) },
  { pnode(GPIO, 4, 81, DATAOUT, 2, 0), rnode(GIN, 4, 81, 17) },
  { pnode(GPIO, 4, 81, DATAOUT, 2, 1), rnode(GIN, 4, 81, 15) },
  { pnode(GPIO, 4, 81, DATAOUT, 2, 2), rnode(GIN, 4, 81, 14) },
  { pnode(GPIO, 4, 81, DATAOUT, 2, 3), rnode(GIN, 4, 81, 13) },
  { pnode(GPIO, 4, 81, DATAOUT, 2, 4), rnode(GIN, 5, 81, 0) },
  { pnode(GPIO, 4, 81, OEIN, 2, 0), rnode(GOUT, 5, 81, 6) },
  { pnode(GPIO, 4, 81, OEIN, 2, 1), rnode(GOUT, 5, 81, 7) },
  { pnode(GPIO, 4, 81, BSLIPMAX, 2, -1), rnode(GIN, 4, 81, 18) },
  { pnode(GPIO, 4, 81, CEIN, 2, -1), rnode(GOUT, 4, 81, 30) },
  { pnode(GPIO, 4, 81, CEOUT, 2, -1), rnode(GOUT, 4, 81, 33) },
  { pnode(GPIO, 4, 81, ACLR, 2, -1), rnode(GOUT, 4, 81, 32) },
  { pnode(GPIO, 4, 81, SCLR, 2, -1), rnode(GOUT, 5, 81, 3) },
  { pnode(GPIO, 4, 81, CLKIN_IN, 2, 0), rnode(DCMUX, 4, 81, 5) },
  { pnode(GPIO, 4, 81, CLKIN_IN, 2, 1), rnode(DCMUX, 4, 81, 7) },
  { pnode(GPIO, 4, 81, CLKIN_OUT, 2, 0), rnode(DCMUX, 4, 81, 1) },
  { pnode(GPIO, 4, 81, CLKIN_OUT, 2, 1), rnode(DCMUX, 4, 81, 3) },
  { pnode(GPIO, 4, 81, DATAIN, 3, 0), rnode(GOUT, 4, 81, 45) },
  { pnode(GPIO, 4, 81, DATAIN, 3, 1), rnode(GOUT, 4, 81, 40) },
  { pnode(GPIO, 4, 81, DATAIN, 3, 2), rnode(GOUT, 4, 81, 44) },
  { pnode(GPIO, 4, 81, DATAIN, 3, 3), rnode(GOUT, 4, 81, 39) },
  { pnode(GPIO, 4, 81, DATAOUT, 3, 0), rnode(GIN, 4, 81, 11) },
  { pnode(GPIO, 4, 81, DATAOUT, 3, 1), rnode(GIN, 4, 81, 12) },
  { pnode(GPIO, 4, 81, DATAOUT, 3, 2), rnode(GIN, 4, 81, 25) },
  { pnode(GPIO, 4, 81, DATAOUT, 3, 3), rnode(GIN, 4, 81, 24) },
  { pnode(GPIO, 4, 81, DATAOUT, 3, 4), rnode(GIN, 4, 81, 23) },
  { pnode(GPIO, 4, 81, OEIN, 3, 0), rnode(GOUT, 4, 81, 43) },
  { pnode(GPIO, 4, 81, OEIN, 3, 1), rnode(GOUT, 4, 81, 38) },
  { pnode(GPIO, 4, 81, BSLIPMAX, 3, -1), rnode(GIN, 4, 81, 3) },
  { pnode(GPIO, 4, 81, CEIN, 3, -1), rnode(GOUT, 4, 81, 7) },
  { pnode(GPIO, 4, 81, CEOUT, 3, -1), rnode(GOUT, 4, 81, 5) },
  { pnode(GPIO, 4, 81, ACLR, 3, -1), rnode(GOUT, 4, 81, 4) },
  { pnode(GPIO, 4, 81, SCLR, 3, -1), rnode(GOUT, 4, 81, 34) },
  { pnode(GPIO, 4, 81, CLKIN_IN, 3, 0), rnode(DCMUX, 4, 81, 4) },
  { pnode(GPIO, 4, 81, CLKIN_IN, 3, 1), rnode(DCMUX, 4, 81, 6) },
  { pnode(GPIO, 4, 81, CLKIN_OUT, 3, 0), rnode(DCMUX, 4, 81, 0) },
  { pnode(GPIO, 4, 81, CLKIN_OUT, 3, 1), rnode(DCMUX, 4, 81, 2) },
  { pnode(GPIO, 6, 0, DATAIN, 0, 0), rnode(GOUT, 6, 0, 38) },
  { pnode(GPIO, 6, 0, DATAIN, 0, 1), rnode(GOUT, 6, 0, 27) },
  { pnode(GPIO, 6, 0, DATAIN, 0, 2), rnode(GOUT, 6, 0, 28) },
  { pnode(GPIO, 6, 0, DATAIN, 0, 3), rnode(GOUT, 6, 0, 34) },
  { pnode(GPIO, 6, 0, DATAOUT, 0, 0), rnode(GIN, 6, 0, 25) },
  { pnode(GPIO, 6, 0, DATAOUT, 0, 1), rnode(GIN, 6, 0, 24) },
  { pnode(GPIO, 6, 0, DATAOUT, 0, 2), rnode(GIN, 6, 0, 23) },
  { pnode(GPIO, 6, 0, DATAOUT, 0, 3), rnode(GIN, 6, 0, 22) },
  { pnode(GPIO, 6, 0, DATAOUT, 0, 4), rnode(GIN, 6, 0, 21) },
  { pnode(GPIO, 6, 0, OEIN, 0, 0), rnode(GOUT, 6, 0, 30) },
  { pnode(GPIO, 6, 0, OEIN, 0, 1), rnode(GOUT, 6, 0, 31) },
  { pnode(GPIO, 6, 0, BSLIPMAX, 0, -1), rnode(GIN, 6, 0, 12) },
  { pnode(GPIO, 6, 0, CEIN, 0, -1), rnode(GOUT, 6, 0, 14) },
  { pnode(GPIO, 6, 0, CEOUT, 0, -1), rnode(GOUT, 6, 0, 24) },
  { pnode(GPIO, 6, 0, ACLR, 0, -1), rnode(GOUT, 6, 0, 25) },
  { pnode(GPIO, 6, 0, SCLR, 0, -1), rnode(GOUT, 6, 0, 37) },
  { pnode(GPIO, 6, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 6, 0, 10) },
  { pnode(GPIO, 6, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 6, 0, 8) },
  { pnode(GPIO, 6, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 6, 0, 14) },
  { pnode(GPIO, 6, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 6, 0, 12) },
  { pnode(GPIO, 6, 0, DATAIN, 1, 0), rnode(GOUT, 6, 0, 8) },
  { pnode(GPIO, 6, 0, DATAIN, 1, 1), rnode(GOUT, 6, 0, 2) },
  { pnode(GPIO, 6, 0, DATAIN, 1, 2), rnode(GOUT, 6, 0, 1) },
  { pnode(GPIO, 6, 0, DATAIN, 1, 3), rnode(GOUT, 6, 0, 12) },
  { pnode(GPIO, 6, 0, DATAOUT, 1, 0), rnode(GIN, 6, 0, 3) },
  { pnode(GPIO, 6, 0, DATAOUT, 1, 1), rnode(GIN, 6, 0, 4) },
  { pnode(GPIO, 6, 0, DATAOUT, 1, 2), rnode(GIN, 6, 0, 5) },
  { pnode(GPIO, 6, 0, DATAOUT, 1, 3), rnode(GIN, 6, 0, 6) },
  { pnode(GPIO, 6, 0, DATAOUT, 1, 4), rnode(GIN, 6, 0, 7) },
  { pnode(GPIO, 6, 0, OEIN, 1, 0), rnode(GOUT, 6, 0, 17) },
  { pnode(GPIO, 6, 0, OEIN, 1, 1), rnode(GOUT, 6, 0, 13) },
  { pnode(GPIO, 6, 0, BSLIPMAX, 1, -1), rnode(GIN, 6, 0, 0) },
  { pnode(GPIO, 6, 0, CEIN, 1, -1), rnode(GOUT, 6, 0, 6) },
  { pnode(GPIO, 6, 0, CEOUT, 1, -1), rnode(GOUT, 6, 0, 7) },
  { pnode(GPIO, 6, 0, ACLR, 1, -1), rnode(GOUT, 6, 0, 5) },
  { pnode(GPIO, 6, 0, SCLR, 1, -1), rnode(GOUT, 6, 0, 18) },
  { pnode(GPIO, 6, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 6, 0, 11) },
  { pnode(GPIO, 6, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 6, 0, 9) },
  { pnode(GPIO, 6, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 6, 0, 15) },
  { pnode(GPIO, 6, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 6, 0, 13) },
  { pnode(GPIO, 6, 0, DATAIN, 2, 0), rnode(GOUT, 5, 0, 37) },
  { pnode(GPIO, 6, 0, DATAIN, 2, 1), rnode(GOUT, 5, 0, 35) },
  { pnode(GPIO, 6, 0, DATAIN, 2, 2), rnode(GOUT, 5, 0, 36) },
  { pnode(GPIO, 6, 0, DATAIN, 2, 3), rnode(GOUT, 5, 0, 26) },
  { pnode(GPIO, 6, 0, DATAOUT, 2, 0), rnode(GIN, 5, 0, 17) },
  { pnode(GPIO, 6, 0, DATAOUT, 2, 1), rnode(GIN, 5, 0, 16) },
  { pnode(GPIO, 6, 0, DATAOUT, 2, 2), rnode(GIN, 5, 0, 15) },
  { pnode(GPIO, 6, 0, DATAOUT, 2, 3), rnode(GIN, 5, 0, 14) },
  { pnode(GPIO, 6, 0, DATAOUT, 2, 4), rnode(GIN, 5, 0, 13) },
  { pnode(GPIO, 6, 0, OEIN, 2, 0), rnode(GOUT, 6, 0, 0) },
  { pnode(GPIO, 6, 0, OEIN, 2, 1), rnode(GOUT, 6, 0, 9) },
  { pnode(GPIO, 6, 0, BSLIPMAX, 2, -1), rnode(GIN, 5, 0, 19) },
  { pnode(GPIO, 6, 0, CEIN, 2, -1), rnode(GOUT, 5, 0, 31) },
  { pnode(GPIO, 6, 0, CEOUT, 2, -1), rnode(GOUT, 5, 0, 33) },
  { pnode(GPIO, 6, 0, ACLR, 2, -1), rnode(GOUT, 5, 0, 32) },
  { pnode(GPIO, 6, 0, SCLR, 2, -1), rnode(GOUT, 6, 0, 11) },
  { pnode(GPIO, 6, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 6, 0, 5) },
  { pnode(GPIO, 6, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 6, 0, 7) },
  { pnode(GPIO, 6, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 6, 0, 1) },
  { pnode(GPIO, 6, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 6, 0, 3) },
  { pnode(GPIO, 6, 0, DATAIN, 3, 0), rnode(GOUT, 5, 0, 43) },
  { pnode(GPIO, 6, 0, DATAIN, 3, 1), rnode(GOUT, 5, 0, 38) },
  { pnode(GPIO, 6, 0, DATAIN, 3, 2), rnode(GOUT, 5, 0, 27) },
  { pnode(GPIO, 6, 0, DATAIN, 3, 3), rnode(GOUT, 5, 0, 28) },
  { pnode(GPIO, 6, 0, DATAOUT, 3, 0), rnode(GIN, 5, 0, 24) },
  { pnode(GPIO, 6, 0, DATAOUT, 3, 1), rnode(GIN, 5, 0, 23) },
  { pnode(GPIO, 6, 0, DATAOUT, 3, 2), rnode(GIN, 5, 0, 22) },
  { pnode(GPIO, 6, 0, DATAOUT, 3, 3), rnode(GIN, 5, 0, 21) },
  { pnode(GPIO, 6, 0, DATAOUT, 3, 4), rnode(GIN, 5, 0, 20) },
  { pnode(GPIO, 6, 0, OEIN, 3, 0), rnode(GOUT, 5, 0, 34) },
  { pnode(GPIO, 6, 0, OEIN, 3, 1), rnode(GOUT, 5, 0, 29) },
  { pnode(GPIO, 6, 0, BSLIPMAX, 3, -1), rnode(GIN, 5, 0, 25) },
  { pnode(GPIO, 6, 0, CEIN, 3, -1), rnode(GOUT, 5, 0, 40) },
  { pnode(GPIO, 6, 0, CEOUT, 3, -1), rnode(GOUT, 5, 0, 44) },
  { pnode(GPIO, 6, 0, ACLR, 3, -1), rnode(GOUT, 5, 0, 39) },
  { pnode(GPIO, 6, 0, SCLR, 3, -1), rnode(GOUT, 5, 0, 30) },
  { pnode(GPIO, 6, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 6, 0, 4) },
  { pnode(GPIO, 6, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 6, 0, 6) },
  { pnode(GPIO, 6, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 6, 0, 0) },
  { pnode(GPIO, 6, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 6, 0, 2) },
  { pnode(GPIO, 6, 81, DATAIN, 0, 0), rnode(GOUT, 6, 81, 38) },
  { pnode(GPIO, 6, 81, DATAIN, 0, 1), rnode(GOUT, 6, 81, 27) },
  { pnode(GPIO, 6, 81, DATAIN, 0, 2), rnode(GOUT, 6, 81, 28) },
  { pnode(GPIO, 6, 81, DATAIN, 0, 3), rnode(GOUT, 6, 81, 34) },
  { pnode(GPIO, 6, 81, DATAOUT, 0, 0), rnode(GIN, 6, 81, 25) },
  { pnode(GPIO, 6, 81, DATAOUT, 0, 1), rnode(GIN, 6, 81, 24) },
  { pnode(GPIO, 6, 81, DATAOUT, 0, 2), rnode(GIN, 6, 81, 23) },
  { pnode(GPIO, 6, 81, DATAOUT, 0, 3), rnode(GIN, 6, 81, 22) },
  { pnode(GPIO, 6, 81, DATAOUT, 0, 4), rnode(GIN, 6, 81, 21) },
  { pnode(GPIO, 6, 81, OEIN, 0, 0), rnode(GOUT, 6, 81, 30) },
  { pnode(GPIO, 6, 81, OEIN, 0, 1), rnode(GOUT, 6, 81, 31) },
  { pnode(GPIO, 6, 81, BSLIPMAX, 0, -1), rnode(GIN, 6, 81, 12) },
  { pnode(GPIO, 6, 81, CEIN, 0, -1), rnode(GOUT, 6, 81, 14) },
  { pnode(GPIO, 6, 81, CEOUT, 0, -1), rnode(GOUT, 6, 81, 24) },
  { pnode(GPIO, 6, 81, ACLR, 0, -1), rnode(GOUT, 6, 81, 25) },
  { pnode(GPIO, 6, 81, SCLR, 0, -1), rnode(GOUT, 6, 81, 37) },
  { pnode(GPIO, 6, 81, CLKIN_IN, 0, 0), rnode(DCMUX, 6, 81, 10) },
  { pnode(GPIO, 6, 81, CLKIN_IN, 0, 1), rnode(DCMUX, 6, 81, 8) },
  { pnode(GPIO, 6, 81, CLKIN_OUT, 0, 0), rnode(DCMUX, 6, 81, 14) },
  { pnode(GPIO, 6, 81, CLKIN_OUT, 0, 1), rnode(DCMUX, 6, 81, 12) },
  { pnode(GPIO, 6, 81, DATAIN, 1, 0), rnode(GOUT, 6, 81, 8) },
  { pnode(GPIO, 6, 81, DATAIN, 1, 1), rnode(GOUT, 6, 81, 2) },
  { pnode(GPIO, 6, 81, DATAIN, 1, 2), rnode(GOUT, 6, 81, 1) },
  { pnode(GPIO, 6, 81, DATAIN, 1, 3), rnode(GOUT, 6, 81, 12) },
  { pnode(GPIO, 6, 81, DATAOUT, 1, 0), rnode(GIN, 6, 81, 3) },
  { pnode(GPIO, 6, 81, DATAOUT, 1, 1), rnode(GIN, 6, 81, 4) },
  { pnode(GPIO, 6, 81, DATAOUT, 1, 2), rnode(GIN, 6, 81, 5) },
  { pnode(GPIO, 6, 81, DATAOUT, 1, 3), rnode(GIN, 6, 81, 6) },
  { pnode(GPIO, 6, 81, DATAOUT, 1, 4), rnode(GIN, 6, 81, 7) },
  { pnode(GPIO, 6, 81, OEIN, 1, 0), rnode(GOUT, 6, 81, 17) },
  { pnode(GPIO, 6, 81, OEIN, 1, 1), rnode(GOUT, 6, 81, 13) },
  { pnode(GPIO, 6, 81, BSLIPMAX, 1, -1), rnode(GIN, 6, 81, 0) },
  { pnode(GPIO, 6, 81, CEIN, 1, -1), rnode(GOUT, 6, 81, 6) },
  { pnode(GPIO, 6, 81, CEOUT, 1, -1), rnode(GOUT, 6, 81, 7) },
  { pnode(GPIO, 6, 81, ACLR, 1, -1), rnode(GOUT, 6, 81, 5) },
  { pnode(GPIO, 6, 81, SCLR, 1, -1), rnode(GOUT, 6, 81, 18) },
  { pnode(GPIO, 6, 81, CLKIN_IN, 1, 0), rnode(DCMUX, 6, 81, 11) },
  { pnode(GPIO, 6, 81, CLKIN_IN, 1, 1), rnode(DCMUX, 6, 81, 9) },
  { pnode(GPIO, 6, 81, CLKIN_OUT, 1, 0), rnode(DCMUX, 6, 81, 15) },
  { pnode(GPIO, 6, 81, CLKIN_OUT, 1, 1), rnode(DCMUX, 6, 81, 13) },
  { pnode(GPIO, 6, 81, DATAIN, 2, 0), rnode(GOUT, 5, 81, 37) },
  { pnode(GPIO, 6, 81, DATAIN, 2, 1), rnode(GOUT, 5, 81, 35) },
  { pnode(GPIO, 6, 81, DATAIN, 2, 2), rnode(GOUT, 5, 81, 36) },
  { pnode(GPIO, 6, 81, DATAIN, 2, 3), rnode(GOUT, 5, 81, 26) },
  { pnode(GPIO, 6, 81, DATAOUT, 2, 0), rnode(GIN, 5, 81, 17) },
  { pnode(GPIO, 6, 81, DATAOUT, 2, 1), rnode(GIN, 5, 81, 16) },
  { pnode(GPIO, 6, 81, DATAOUT, 2, 2), rnode(GIN, 5, 81, 15) },
  { pnode(GPIO, 6, 81, DATAOUT, 2, 3), rnode(GIN, 5, 81, 14) },
  { pnode(GPIO, 6, 81, DATAOUT, 2, 4), rnode(GIN, 5, 81, 13) },
  { pnode(GPIO, 6, 81, OEIN, 2, 0), rnode(GOUT, 6, 81, 0) },
  { pnode(GPIO, 6, 81, OEIN, 2, 1), rnode(GOUT, 6, 81, 9) },
  { pnode(GPIO, 6, 81, BSLIPMAX, 2, -1), rnode(GIN, 5, 81, 19) },
  { pnode(GPIO, 6, 81, CEIN, 2, -1), rnode(GOUT, 5, 81, 31) },
  { pnode(GPIO, 6, 81, CEOUT, 2, -1), rnode(GOUT, 5, 81, 33) },
  { pnode(GPIO, 6, 81, ACLR, 2, -1), rnode(GOUT, 5, 81, 32) },
  { pnode(GPIO, 6, 81, SCLR, 2, -1), rnode(GOUT, 6, 81, 11) },
  { pnode(GPIO, 6, 81, CLKIN_IN, 2, 0), rnode(DCMUX, 6, 81, 5) },
  { pnode(GPIO, 6, 81, CLKIN_IN, 2, 1), rnode(DCMUX, 6, 81, 7) },
  { pnode(GPIO, 6, 81, CLKIN_OUT, 2, 0), rnode(DCMUX, 6, 81, 1) },
  { pnode(GPIO, 6, 81, CLKIN_OUT, 2, 1), rnode(DCMUX, 6, 81, 3) },
  { pnode(GPIO, 6, 81, DATAIN, 3, 0), rnode(GOUT, 5, 81, 43) },
  { pnode(GPIO, 6, 81, DATAIN, 3, 1), rnode(GOUT, 5, 81, 38) },
  { pnode(GPIO, 6, 81, DATAIN, 3, 2), rnode(GOUT, 5, 81, 27) },
  { pnode(GPIO, 6, 81, DATAIN, 3, 3), rnode(GOUT, 5, 81, 28) },
  { pnode(GPIO, 6, 81, DATAOUT, 3, 0), rnode(GIN, 5, 81, 24) },
  { pnode(GPIO, 6, 81, DATAOUT, 3, 1), rnode(GIN, 5, 81, 23) },
  { pnode(GPIO, 6, 81, DATAOUT, 3, 2), rnode(GIN, 5, 81, 22) },
  { pnode(GPIO, 6, 81, DATAOUT, 3, 3), rnode(GIN, 5, 81, 21) },
  { pnode(GPIO, 6, 81, DATAOUT, 3, 4), rnode(GIN, 5, 81, 20) },
  { pnode(GPIO, 6, 81, OEIN, 3, 0), rnode(GOUT, 5, 81, 34) },
  { pnode(GPIO, 6, 81, OEIN, 3, 1), rnode(GOUT, 5, 81, 29) },
  { pnode(GPIO, 6, 81, BSLIPMAX, 3, -1), rnode(GIN, 5, 81, 25) },
  { pnode(GPIO, 6, 81, CEIN, 3, -1), rnode(GOUT, 5, 81, 40) },
  { pnode(GPIO, 6, 81, CEOUT, 3, -1), rnode(GOUT, 5, 81, 44) },
  { pnode(GPIO, 6, 81, ACLR, 3, -1), rnode(GOUT, 5, 81, 39) },
  { pnode(GPIO, 6, 81, SCLR, 3, -1), rnode(GOUT, 5, 81, 30) },
  { pnode(GPIO, 6, 81, CLKIN_IN, 3, 0), rnode(DCMUX, 6, 81, 4) },
  { pnode(GPIO, 6, 81, CLKIN_IN, 3, 1), rnode(DCMUX, 6, 81, 6) },
  { pnode(GPIO, 6, 81, CLKIN_OUT, 3, 0), rnode(DCMUX, 6, 81, 0) },
  { pnode(GPIO, 6, 81, CLKIN_OUT, 3, 1), rnode(DCMUX, 6, 81, 2) },
  { pnode(GPIO, 8, 0, DATAIN, 0, 0), rnode(GOUT, 8, 0, 20) },
  { pnode(GPIO, 8, 0, DATAIN, 0, 1), rnode(GOUT, 8, 0, 16) },
  { pnode(GPIO, 8, 0, DATAIN, 0, 2), rnode(GOUT, 8, 0, 21) },
  { pnode(GPIO, 8, 0, DATAIN, 0, 3), rnode(GOUT, 8, 0, 22) },
  { pnode(GPIO, 8, 0, DATAOUT, 0, 0), rnode(GIN, 8, 0, 5) },
  { pnode(GPIO, 8, 0, DATAOUT, 0, 1), rnode(GIN, 8, 0, 6) },
  { pnode(GPIO, 8, 0, DATAOUT, 0, 2), rnode(GIN, 8, 0, 7) },
  { pnode(GPIO, 8, 0, DATAOUT, 0, 3), rnode(GIN, 8, 0, 8) },
  { pnode(GPIO, 8, 0, DATAOUT, 0, 4), rnode(GIN, 8, 0, 9) },
  { pnode(GPIO, 8, 0, OEIN, 0, 0), rnode(GOUT, 8, 0, 24) },
  { pnode(GPIO, 8, 0, OEIN, 0, 1), rnode(GOUT, 8, 0, 25) },
  { pnode(GPIO, 8, 0, BSLIPMAX, 0, -1), rnode(GIN, 8, 0, 4) },
  { pnode(GPIO, 8, 0, CEIN, 0, -1), rnode(GOUT, 8, 0, 12) },
  { pnode(GPIO, 8, 0, CEOUT, 0, -1), rnode(GOUT, 8, 0, 17) },
  { pnode(GPIO, 8, 0, ACLR, 0, -1), rnode(GOUT, 8, 0, 18) },
  { pnode(GPIO, 8, 0, SCLR, 0, -1), rnode(GOUT, 8, 0, 50) },
  { pnode(GPIO, 8, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 8, 0, 10) },
  { pnode(GPIO, 8, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 8, 0, 8) },
  { pnode(GPIO, 8, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 8, 0, 14) },
  { pnode(GPIO, 8, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 8, 0, 12) },
  { pnode(GPIO, 8, 0, DATAIN, 1, 0), rnode(GOUT, 8, 0, 0) },
  { pnode(GPIO, 8, 0, DATAIN, 1, 1), rnode(GOUT, 8, 0, 10) },
  { pnode(GPIO, 8, 0, DATAIN, 1, 2), rnode(GOUT, 8, 0, 9) },
  { pnode(GPIO, 8, 0, DATAIN, 1, 3), rnode(GOUT, 8, 0, 11) },
  { pnode(GPIO, 8, 0, DATAOUT, 1, 0), rnode(GIN, 7, 0, 13) },
  { pnode(GPIO, 8, 0, DATAOUT, 1, 1), rnode(GIN, 8, 0, 0) },
  { pnode(GPIO, 8, 0, DATAOUT, 1, 2), rnode(GIN, 8, 0, 1) },
  { pnode(GPIO, 8, 0, DATAOUT, 1, 3), rnode(GIN, 8, 0, 2) },
  { pnode(GPIO, 8, 0, DATAOUT, 1, 4), rnode(GIN, 8, 0, 3) },
  { pnode(GPIO, 8, 0, OEIN, 1, 0), rnode(GOUT, 8, 0, 7) },
  { pnode(GPIO, 8, 0, OEIN, 1, 1), rnode(GOUT, 8, 0, 4) },
  { pnode(GPIO, 8, 0, BSLIPMAX, 1, -1), rnode(GIN, 7, 0, 14) },
  { pnode(GPIO, 8, 0, CEIN, 1, -1), rnode(GOUT, 7, 0, 31) },
  { pnode(GPIO, 8, 0, CEOUT, 1, -1), rnode(GOUT, 7, 0, 33) },
  { pnode(GPIO, 8, 0, ACLR, 1, -1), rnode(GOUT, 7, 0, 37) },
  { pnode(GPIO, 8, 0, SCLR, 1, -1), rnode(GOUT, 8, 0, 2) },
  { pnode(GPIO, 8, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 8, 0, 11) },
  { pnode(GPIO, 8, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 8, 0, 9) },
  { pnode(GPIO, 8, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 8, 0, 15) },
  { pnode(GPIO, 8, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 8, 0, 13) },
  { pnode(GPIO, 8, 0, DATAIN, 2, 0), rnode(GOUT, 7, 0, 40) },
  { pnode(GPIO, 8, 0, DATAIN, 2, 1), rnode(GOUT, 7, 0, 44) },
  { pnode(GPIO, 8, 0, DATAIN, 2, 2), rnode(GOUT, 7, 0, 39) },
  { pnode(GPIO, 8, 0, DATAIN, 2, 3), rnode(GOUT, 7, 0, 43) },
  { pnode(GPIO, 8, 0, DATAOUT, 2, 0), rnode(GIN, 7, 0, 19) },
  { pnode(GPIO, 8, 0, DATAOUT, 2, 1), rnode(GIN, 7, 0, 18) },
  { pnode(GPIO, 8, 0, DATAOUT, 2, 2), rnode(GIN, 7, 0, 17) },
  { pnode(GPIO, 8, 0, DATAOUT, 2, 3), rnode(GIN, 7, 0, 16) },
  { pnode(GPIO, 8, 0, DATAOUT, 2, 4), rnode(GIN, 7, 0, 15) },
  { pnode(GPIO, 8, 0, OEIN, 2, 0), rnode(GOUT, 7, 0, 27) },
  { pnode(GPIO, 8, 0, OEIN, 2, 1), rnode(GOUT, 7, 0, 28) },
  { pnode(GPIO, 8, 0, BSLIPMAX, 2, -1), rnode(GIN, 7, 0, 25) },
  { pnode(GPIO, 8, 0, CEIN, 2, -1), rnode(GOUT, 7, 0, 47) },
  { pnode(GPIO, 8, 0, CEOUT, 2, -1), rnode(GOUT, 7, 0, 42) },
  { pnode(GPIO, 8, 0, ACLR, 2, -1), rnode(GOUT, 7, 0, 46) },
  { pnode(GPIO, 8, 0, SCLR, 2, -1), rnode(GOUT, 7, 0, 29) },
  { pnode(GPIO, 8, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 8, 0, 5) },
  { pnode(GPIO, 8, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 8, 0, 7) },
  { pnode(GPIO, 8, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 8, 0, 1) },
  { pnode(GPIO, 8, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 8, 0, 3) },
  { pnode(GPIO, 8, 0, DATAIN, 3, 0), rnode(GOUT, 7, 0, 9) },
  { pnode(GPIO, 8, 0, DATAIN, 3, 1), rnode(GOUT, 7, 0, 11) },
  { pnode(GPIO, 8, 0, DATAIN, 3, 2), rnode(GOUT, 7, 0, 6) },
  { pnode(GPIO, 8, 0, DATAIN, 3, 3), rnode(GOUT, 7, 0, 7) },
  { pnode(GPIO, 8, 0, DATAOUT, 3, 0), rnode(GIN, 7, 0, 0) },
  { pnode(GPIO, 8, 0, DATAOUT, 3, 1), rnode(GIN, 7, 0, 1) },
  { pnode(GPIO, 8, 0, DATAOUT, 3, 2), rnode(GIN, 7, 0, 2) },
  { pnode(GPIO, 8, 0, DATAOUT, 3, 3), rnode(GIN, 7, 0, 5) },
  { pnode(GPIO, 8, 0, DATAOUT, 3, 4), rnode(GIN, 7, 0, 9) },
  { pnode(GPIO, 8, 0, OEIN, 3, 0), rnode(GOUT, 7, 0, 12) },
  { pnode(GPIO, 8, 0, OEIN, 3, 1), rnode(GOUT, 7, 0, 25) },
  { pnode(GPIO, 8, 0, BSLIPMAX, 3, -1), rnode(GIN, 6, 0, 13) },
  { pnode(GPIO, 8, 0, CEIN, 3, -1), rnode(GOUT, 6, 0, 36) },
  { pnode(GPIO, 8, 0, CEOUT, 3, -1), rnode(GOUT, 7, 0, 0) },
  { pnode(GPIO, 8, 0, ACLR, 3, -1), rnode(GOUT, 7, 0, 10) },
  { pnode(GPIO, 8, 0, SCLR, 3, -1), rnode(GOUT, 7, 0, 48) },
  { pnode(GPIO, 8, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 8, 0, 4) },
  { pnode(GPIO, 8, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 8, 0, 6) },
  { pnode(GPIO, 8, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 8, 0, 0) },
  { pnode(GPIO, 8, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 8, 0, 2) },
  { pnode(GPIO, 8, 81, DATAIN, 0, 0), rnode(GOUT, 8, 81, 20) },
  { pnode(GPIO, 8, 81, DATAIN, 0, 1), rnode(GOUT, 8, 81, 16) },
  { pnode(GPIO, 8, 81, DATAIN, 0, 2), rnode(GOUT, 8, 81, 21) },
  { pnode(GPIO, 8, 81, DATAIN, 0, 3), rnode(GOUT, 8, 81, 22) },
  { pnode(GPIO, 8, 81, DATAOUT, 0, 0), rnode(GIN, 8, 81, 5) },
  { pnode(GPIO, 8, 81, DATAOUT, 0, 1), rnode(GIN, 8, 81, 6) },
  { pnode(GPIO, 8, 81, DATAOUT, 0, 2), rnode(GIN, 8, 81, 7) },
  { pnode(GPIO, 8, 81, DATAOUT, 0, 3), rnode(GIN, 8, 81, 8) },
  { pnode(GPIO, 8, 81, DATAOUT, 0, 4), rnode(GIN, 8, 81, 9) },
  { pnode(GPIO, 8, 81, OEIN, 0, 0), rnode(GOUT, 8, 81, 24) },
  { pnode(GPIO, 8, 81, OEIN, 0, 1), rnode(GOUT, 8, 81, 25) },
  { pnode(GPIO, 8, 81, BSLIPMAX, 0, -1), rnode(GIN, 8, 81, 4) },
  { pnode(GPIO, 8, 81, CEIN, 0, -1), rnode(GOUT, 8, 81, 12) },
  { pnode(GPIO, 8, 81, CEOUT, 0, -1), rnode(GOUT, 8, 81, 17) },
  { pnode(GPIO, 8, 81, ACLR, 0, -1), rnode(GOUT, 8, 81, 18) },
  { pnode(GPIO, 8, 81, SCLR, 0, -1), rnode(GOUT, 8, 81, 50) },
  { pnode(GPIO, 8, 81, CLKIN_IN, 0, 0), rnode(DCMUX, 8, 81, 10) },
  { pnode(GPIO, 8, 81, CLKIN_IN, 0, 1), rnode(DCMUX, 8, 81, 8) },
  { pnode(GPIO, 8, 81, CLKIN_OUT, 0, 0), rnode(DCMUX, 8, 81, 14) },
  { pnode(GPIO, 8, 81, CLKIN_OUT, 0, 1), rnode(DCMUX, 8, 81, 12) },
  { pnode(GPIO, 8, 81, DATAIN, 1, 0), rnode(GOUT, 8, 81, 0) },
  { pnode(GPIO, 8, 81, DATAIN, 1, 1), rnode(GOUT, 8, 81, 10) },
  { pnode(GPIO, 8, 81, DATAIN, 1, 2), rnode(GOUT, 8, 81, 9) },
  { pnode(GPIO, 8, 81, DATAIN, 1, 3), rnode(GOUT, 8, 81, 11) },
  { pnode(GPIO, 8, 81, DATAOUT, 1, 0), rnode(GIN, 7, 81, 13) },
  { pnode(GPIO, 8, 81, DATAOUT, 1, 1), rnode(GIN, 8, 81, 0) },
  { pnode(GPIO, 8, 81, DATAOUT, 1, 2), rnode(GIN, 8, 81, 1) },
  { pnode(GPIO, 8, 81, DATAOUT, 1, 3), rnode(GIN, 8, 81, 2) },
  { pnode(GPIO, 8, 81, DATAOUT, 1, 4), rnode(GIN, 8, 81, 3) },
  { pnode(GPIO, 8, 81, OEIN, 1, 0), rnode(GOUT, 8, 81, 7) },
  { pnode(GPIO, 8, 81, OEIN, 1, 1), rnode(GOUT, 8, 81, 4) },
  { pnode(GPIO, 8, 81, BSLIPMAX, 1, -1), rnode(GIN, 7, 81, 14) },
  { pnode(GPIO, 8, 81, CEIN, 1, -1), rnode(GOUT, 7, 81, 31) },
  { pnode(GPIO, 8, 81, CEOUT, 1, -1), rnode(GOUT, 7, 81, 33) },
  { pnode(GPIO, 8, 81, ACLR, 1, -1), rnode(GOUT, 7, 81, 37) },
  { pnode(GPIO, 8, 81, SCLR, 1, -1), rnode(GOUT, 8, 81, 2) },
  { pnode(GPIO, 8, 81, CLKIN_IN, 1, 0), rnode(DCMUX, 8, 81, 11) },
  { pnode(GPIO, 8, 81, CLKIN_IN, 1, 1), rnode(DCMUX, 8, 81, 9) },
  { pnode(GPIO, 8, 81, CLKIN_OUT, 1, 0), rnode(DCMUX, 8, 81, 15) },
  { pnode(GPIO, 8, 81, CLKIN_OUT, 1, 1), rnode(DCMUX, 8, 81, 13) },
  { pnode(GPIO, 8, 81, DATAIN, 2, 0), rnode(GOUT, 7, 81, 40) },
  { pnode(GPIO, 8, 81, DATAIN, 2, 1), rnode(GOUT, 7, 81, 44) },
  { pnode(GPIO, 8, 81, DATAIN, 2, 2), rnode(GOUT, 7, 81, 39) },
  { pnode(GPIO, 8, 81, DATAIN, 2, 3), rnode(GOUT, 7, 81, 43) },
  { pnode(GPIO, 8, 81, DATAOUT, 2, 0), rnode(GIN, 7, 81, 19) },
  { pnode(GPIO, 8, 81, DATAOUT, 2, 1), rnode(GIN, 7, 81, 18) },
  { pnode(GPIO, 8, 81, DATAOUT, 2, 2), rnode(GIN, 7, 81, 17) },
  { pnode(GPIO, 8, 81, DATAOUT, 2, 3), rnode(GIN, 7, 81, 16) },
  { pnode(GPIO, 8, 81, DATAOUT, 2, 4), rnode(GIN, 7, 81, 15) },
  { pnode(GPIO, 8, 81, OEIN, 2, 0), rnode(GOUT, 7, 81, 27) },
  { pnode(GPIO, 8, 81, OEIN, 2, 1), rnode(GOUT, 7, 81, 28) },
  { pnode(GPIO, 8, 81, BSLIPMAX, 2, -1), rnode(GIN, 7, 81, 25) },
  { pnode(GPIO, 8, 81, CEIN, 2, -1), rnode(GOUT, 7, 81, 47) },
  { pnode(GPIO, 8, 81, CEOUT, 2, -1), rnode(GOUT, 7, 81, 42) },
  { pnode(GPIO, 8, 81, ACLR, 2, -1), rnode(GOUT, 7, 81, 46) },
  { pnode(GPIO, 8, 81, SCLR, 2, -1), rnode(GOUT, 7, 81, 29) },
  { pnode(GPIO, 8, 81, CLKIN_IN, 2, 0), rnode(DCMUX, 8, 81, 5) },
  { pnode(GPIO, 8, 81, CLKIN_IN, 2, 1), rnode(DCMUX, 8, 81, 7) },
  { pnode(GPIO, 8, 81, CLKIN_OUT, 2, 0), rnode(DCMUX, 8, 81, 1) },
  { pnode(GPIO, 8, 81, CLKIN_OUT, 2, 1), rnode(DCMUX, 8, 81, 3) },
  { pnode(GPIO, 8, 81, DATAIN, 3, 0), rnode(GOUT, 7, 81, 9) },
  { pnode(GPIO, 8, 81, DATAIN, 3, 1), rnode(GOUT, 7, 81, 11) },
  { pnode(GPIO, 8, 81, DATAIN, 3, 2), rnode(GOUT, 7, 81, 6) },
  { pnode(GPIO, 8, 81, DATAIN, 3, 3), rnode(GOUT, 7, 81, 7) },
  { pnode(GPIO, 8, 81, DATAOUT, 3, 0), rnode(GIN, 7, 81, 0) },
  { pnode(GPIO, 8, 81, DATAOUT, 3, 1), rnode(GIN, 7, 81, 1) },
  { pnode(GPIO, 8, 81, DATAOUT, 3, 2), rnode(GIN, 7, 81, 2) },
  { pnode(GPIO, 8, 81, DATAOUT, 3, 3), rnode(GIN, 7, 81, 5) },
  { pnode(GPIO, 8, 81, DATAOUT, 3, 4), rnode(GIN, 7, 81, 9) },
  { pnode(GPIO, 8, 81, OEIN, 3, 0), rnode(GOUT, 7, 81, 12) },
  { pnode(GPIO, 8, 81, OEIN, 3, 1), rnode(GOUT, 7, 81, 25) },
  { pnode(GPIO, 8, 81, BSLIPMAX, 3, -1), rnode(GIN, 6, 81, 13) },
  { pnode(GPIO, 8, 81, CEIN, 3, -1), rnode(GOUT, 6, 81, 36) },
  { pnode(GPIO, 8, 81, CEOUT, 3, -1), rnode(GOUT, 7, 81, 0) },
  { pnode(GPIO, 8, 81, ACLR, 3, -1), rnode(GOUT, 7, 81, 10) },
  { pnode(GPIO, 8, 81, SCLR, 3, -1), rnode(GOUT, 7, 81, 48) },
  { pnode(GPIO, 8, 81, CLKIN_IN, 3, 0), rnode(DCMUX, 8, 81, 4) },
  { pnode(GPIO, 8, 81, CLKIN_IN, 3, 1), rnode(DCMUX, 8, 81, 6) },
  { pnode(GPIO, 8, 81, CLKIN_OUT, 3, 0), rnode(DCMUX, 8, 81, 0) },
  { pnode(GPIO, 8, 81, CLKIN_OUT, 3, 1), rnode(DCMUX, 8, 81, 2) },
  { pnode(GPIO, 10, 0, DATAIN, 0, 0), rnode(GOUT, 11, 0, 32) },
  { pnode(GPIO, 10, 0, DATAIN, 0, 1), rnode(GOUT, 11, 0, 37) },
  { pnode(GPIO, 10, 0, DATAIN, 0, 2), rnode(GOUT, 11, 0, 35) },
  { pnode(GPIO, 10, 0, DATAIN, 0, 3), rnode(GOUT, 11, 0, 36) },
  { pnode(GPIO, 10, 0, DATAOUT, 0, 0), rnode(GIN, 11, 0, 25) },
  { pnode(GPIO, 10, 0, DATAOUT, 0, 1), rnode(GIN, 11, 0, 23) },
  { pnode(GPIO, 10, 0, DATAOUT, 0, 2), rnode(GIN, 11, 0, 19) },
  { pnode(GPIO, 10, 0, DATAOUT, 0, 3), rnode(GIN, 11, 0, 15) },
  { pnode(GPIO, 10, 0, DATAOUT, 0, 4), rnode(GIN, 11, 0, 13) },
  { pnode(GPIO, 10, 0, OEIN, 0, 0), rnode(GOUT, 11, 0, 26) },
  { pnode(GPIO, 10, 0, OEIN, 0, 1), rnode(GOUT, 12, 0, 0) },
  { pnode(GPIO, 10, 0, BSLIPMAX, 0, -1), rnode(GIN, 11, 0, 12) },
  { pnode(GPIO, 10, 0, CEIN, 0, -1), rnode(GOUT, 11, 0, 25) },
  { pnode(GPIO, 10, 0, CEOUT, 0, -1), rnode(GOUT, 11, 0, 45) },
  { pnode(GPIO, 10, 0, ACLR, 0, -1), rnode(GOUT, 11, 0, 31) },
  { pnode(GPIO, 10, 0, SCLR, 0, -1), rnode(GOUT, 12, 0, 10) },
  { pnode(GPIO, 10, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 10, 0, 10) },
  { pnode(GPIO, 10, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 10, 0, 8) },
  { pnode(GPIO, 10, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 10, 0, 14) },
  { pnode(GPIO, 10, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 10, 0, 12) },
  { pnode(GPIO, 10, 0, DATAIN, 1, 0), rnode(GOUT, 11, 0, 0) },
  { pnode(GPIO, 10, 0, DATAIN, 1, 1), rnode(GOUT, 11, 0, 10) },
  { pnode(GPIO, 10, 0, DATAIN, 1, 2), rnode(GOUT, 11, 0, 9) },
  { pnode(GPIO, 10, 0, DATAIN, 1, 3), rnode(GOUT, 11, 0, 11) },
  { pnode(GPIO, 10, 0, DATAOUT, 1, 0), rnode(GIN, 10, 0, 13) },
  { pnode(GPIO, 10, 0, DATAOUT, 1, 1), rnode(GIN, 11, 0, 0) },
  { pnode(GPIO, 10, 0, DATAOUT, 1, 2), rnode(GIN, 11, 0, 1) },
  { pnode(GPIO, 10, 0, DATAOUT, 1, 3), rnode(GIN, 11, 0, 2) },
  { pnode(GPIO, 10, 0, DATAOUT, 1, 4), rnode(GIN, 11, 0, 3) },
  { pnode(GPIO, 10, 0, OEIN, 1, 0), rnode(GOUT, 11, 0, 6) },
  { pnode(GPIO, 10, 0, OEIN, 1, 1), rnode(GOUT, 11, 0, 7) },
  { pnode(GPIO, 10, 0, BSLIPMAX, 1, -1), rnode(GIN, 10, 0, 16) },
  { pnode(GPIO, 10, 0, CEIN, 1, -1), rnode(GOUT, 10, 0, 35) },
  { pnode(GPIO, 10, 0, CEOUT, 1, -1), rnode(GOUT, 10, 0, 36) },
  { pnode(GPIO, 10, 0, ACLR, 1, -1), rnode(GOUT, 10, 0, 26) },
  { pnode(GPIO, 10, 0, SCLR, 1, -1), rnode(GOUT, 11, 0, 5) },
  { pnode(GPIO, 10, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 10, 0, 11) },
  { pnode(GPIO, 10, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 10, 0, 9) },
  { pnode(GPIO, 10, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 10, 0, 15) },
  { pnode(GPIO, 10, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 10, 0, 13) },
  { pnode(GPIO, 10, 0, DATAIN, 2, 0), rnode(GOUT, 10, 0, 25) },
  { pnode(GPIO, 10, 0, DATAIN, 2, 1), rnode(GOUT, 10, 0, 50) },
  { pnode(GPIO, 10, 0, DATAIN, 2, 2), rnode(GOUT, 10, 0, 38) },
  { pnode(GPIO, 10, 0, DATAIN, 2, 3), rnode(GOUT, 10, 0, 31) },
  { pnode(GPIO, 10, 0, DATAOUT, 2, 0), rnode(GIN, 10, 0, 8) },
  { pnode(GPIO, 10, 0, DATAOUT, 2, 1), rnode(GIN, 10, 0, 9) },
  { pnode(GPIO, 10, 0, DATAOUT, 2, 2), rnode(GIN, 10, 0, 10) },
  { pnode(GPIO, 10, 0, DATAOUT, 2, 3), rnode(GIN, 10, 0, 11) },
  { pnode(GPIO, 10, 0, DATAOUT, 2, 4), rnode(GIN, 10, 0, 12) },
  { pnode(GPIO, 10, 0, OEIN, 2, 0), rnode(GOUT, 10, 0, 33) },
  { pnode(GPIO, 10, 0, OEIN, 2, 1), rnode(GOUT, 10, 0, 32) },
  { pnode(GPIO, 10, 0, BSLIPMAX, 2, -1), rnode(GIN, 10, 0, 0) },
  { pnode(GPIO, 10, 0, CEIN, 2, -1), rnode(GOUT, 10, 0, 10) },
  { pnode(GPIO, 10, 0, CEOUT, 2, -1), rnode(GOUT, 10, 0, 9) },
  { pnode(GPIO, 10, 0, ACLR, 2, -1), rnode(GOUT, 10, 0, 11) },
  { pnode(GPIO, 10, 0, SCLR, 2, -1), rnode(GOUT, 10, 0, 37) },
  { pnode(GPIO, 10, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 10, 0, 5) },
  { pnode(GPIO, 10, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 10, 0, 7) },
  { pnode(GPIO, 10, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 10, 0, 1) },
  { pnode(GPIO, 10, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 10, 0, 3) },
  { pnode(GPIO, 10, 0, DATAIN, 3, 0), rnode(GOUT, 9, 0, 33) },
  { pnode(GPIO, 10, 0, DATAIN, 3, 1), rnode(GOUT, 9, 0, 32) },
  { pnode(GPIO, 10, 0, DATAIN, 3, 2), rnode(GOUT, 9, 0, 37) },
  { pnode(GPIO, 10, 0, DATAIN, 3, 3), rnode(GOUT, 9, 0, 35) },
  { pnode(GPIO, 10, 0, DATAOUT, 3, 0), rnode(GIN, 9, 0, 25) },
  { pnode(GPIO, 10, 0, DATAOUT, 3, 1), rnode(GIN, 9, 0, 24) },
  { pnode(GPIO, 10, 0, DATAOUT, 3, 2), rnode(GIN, 9, 0, 22) },
  { pnode(GPIO, 10, 0, DATAOUT, 3, 3), rnode(GIN, 9, 0, 18) },
  { pnode(GPIO, 10, 0, DATAOUT, 3, 4), rnode(GIN, 9, 0, 15) },
  { pnode(GPIO, 10, 0, OEIN, 3, 0), rnode(GOUT, 9, 0, 36) },
  { pnode(GPIO, 10, 0, OEIN, 3, 1), rnode(GOUT, 9, 0, 26) },
  { pnode(GPIO, 10, 0, BSLIPMAX, 3, -1), rnode(GIN, 9, 0, 12) },
  { pnode(GPIO, 10, 0, CEIN, 3, -1), rnode(GOUT, 9, 0, 12) },
  { pnode(GPIO, 10, 0, CEOUT, 3, -1), rnode(GOUT, 9, 0, 25) },
  { pnode(GPIO, 10, 0, ACLR, 3, -1), rnode(GOUT, 9, 0, 39) },
  { pnode(GPIO, 10, 0, SCLR, 3, -1), rnode(GOUT, 10, 0, 0) },
  { pnode(GPIO, 10, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 10, 0, 4) },
  { pnode(GPIO, 10, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 10, 0, 6) },
  { pnode(GPIO, 10, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 10, 0, 0) },
  { pnode(GPIO, 10, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 10, 0, 2) },
  { pnode(GPIO, 10, 81, DATAIN, 0, 0), rnode(GOUT, 11, 81, 32) },
  { pnode(GPIO, 10, 81, DATAIN, 0, 1), rnode(GOUT, 11, 81, 37) },
  { pnode(GPIO, 10, 81, DATAIN, 0, 2), rnode(GOUT, 11, 81, 35) },
  { pnode(GPIO, 10, 81, DATAIN, 0, 3), rnode(GOUT, 11, 81, 36) },
  { pnode(GPIO, 10, 81, DATAOUT, 0, 0), rnode(GIN, 11, 81, 25) },
  { pnode(GPIO, 10, 81, DATAOUT, 0, 1), rnode(GIN, 11, 81, 23) },
  { pnode(GPIO, 10, 81, DATAOUT, 0, 2), rnode(GIN, 11, 81, 19) },
  { pnode(GPIO, 10, 81, DATAOUT, 0, 3), rnode(GIN, 11, 81, 15) },
  { pnode(GPIO, 10, 81, DATAOUT, 0, 4), rnode(GIN, 11, 81, 13) },
  { pnode(GPIO, 10, 81, OEIN, 0, 0), rnode(GOUT, 11, 81, 26) },
  { pnode(GPIO, 10, 81, OEIN, 0, 1), rnode(GOUT, 12, 81, 0) },
  { pnode(GPIO, 10, 81, BSLIPMAX, 0, -1), rnode(GIN, 11, 81, 12) },
  { pnode(GPIO, 10, 81, CEIN, 0, -1), rnode(GOUT, 11, 81, 25) },
  { pnode(GPIO, 10, 81, CEOUT, 0, -1), rnode(GOUT, 11, 81, 45) },
  { pnode(GPIO, 10, 81, ACLR, 0, -1), rnode(GOUT, 11, 81, 31) },
  { pnode(GPIO, 10, 81, SCLR, 0, -1), rnode(GOUT, 12, 81, 10) },
  { pnode(GPIO, 10, 81, CLKIN_IN, 0, 0), rnode(DCMUX, 10, 81, 10) },
  { pnode(GPIO, 10, 81, CLKIN_IN, 0, 1), rnode(DCMUX, 10, 81, 8) },
  { pnode(GPIO, 10, 81, CLKIN_OUT, 0, 0), rnode(DCMUX, 10, 81, 14) },
  { pnode(GPIO, 10, 81, CLKIN_OUT, 0, 1), rnode(DCMUX, 10, 81, 12) },
  { pnode(GPIO, 10, 81, DATAIN, 1, 0), rnode(GOUT, 11, 81, 0) },
  { pnode(GPIO, 10, 81, DATAIN, 1, 1), rnode(GOUT, 11, 81, 10) },
  { pnode(GPIO, 10, 81, DATAIN, 1, 2), rnode(GOUT, 11, 81, 9) },
  { pnode(GPIO, 10, 81, DATAIN, 1, 3), rnode(GOUT, 11, 81, 11) },
  { pnode(GPIO, 10, 81, DATAOUT, 1, 0), rnode(GIN, 10, 81, 13) },
  { pnode(GPIO, 10, 81, DATAOUT, 1, 1), rnode(GIN, 11, 81, 0) },
  { pnode(GPIO, 10, 81, DATAOUT, 1, 2), rnode(GIN, 11, 81, 1) },
  { pnode(GPIO, 10, 81, DATAOUT, 1, 3), rnode(GIN, 11, 81, 2) },
  { pnode(GPIO, 10, 81, DATAOUT, 1, 4), rnode(GIN, 11, 81, 3) },
  { pnode(GPIO, 10, 81, OEIN, 1, 0), rnode(GOUT, 11, 81, 6) },
  { pnode(GPIO, 10, 81, OEIN, 1, 1), rnode(GOUT, 11, 81, 7) },
  { pnode(GPIO, 10, 81, BSLIPMAX, 1, -1), rnode(GIN, 10, 81, 16) },
  { pnode(GPIO, 10, 81, CEIN, 1, -1), rnode(GOUT, 10, 81, 35) },
  { pnode(GPIO, 10, 81, CEOUT, 1, -1), rnode(GOUT, 10, 81, 36) },
  { pnode(GPIO, 10, 81, ACLR, 1, -1), rnode(GOUT, 10, 81, 26) },
  { pnode(GPIO, 10, 81, SCLR, 1, -1), rnode(GOUT, 11, 81, 5) },
  { pnode(GPIO, 10, 81, CLKIN_IN, 1, 0), rnode(DCMUX, 10, 81, 11) },
  { pnode(GPIO, 10, 81, CLKIN_IN, 1, 1), rnode(DCMUX, 10, 81, 9) },
  { pnode(GPIO, 10, 81, CLKIN_OUT, 1, 0), rnode(DCMUX, 10, 81, 15) },
  { pnode(GPIO, 10, 81, CLKIN_OUT, 1, 1), rnode(DCMUX, 10, 81, 13) },
  { pnode(GPIO, 10, 81, DATAIN, 2, 0), rnode(GOUT, 10, 81, 25) },
  { pnode(GPIO, 10, 81, DATAIN, 2, 1), rnode(GOUT, 10, 81, 50) },
  { pnode(GPIO, 10, 81, DATAIN, 2, 2), rnode(GOUT, 10, 81, 38) },
  { pnode(GPIO, 10, 81, DATAIN, 2, 3), rnode(GOUT, 10, 81, 31) },
  { pnode(GPIO, 10, 81, DATAOUT, 2, 0), rnode(GIN, 10, 81, 8) },
  { pnode(GPIO, 10, 81, DATAOUT, 2, 1), rnode(GIN, 10, 81, 9) },
  { pnode(GPIO, 10, 81, DATAOUT, 2, 2), rnode(GIN, 10, 81, 10) },
  { pnode(GPIO, 10, 81, DATAOUT, 2, 3), rnode(GIN, 10, 81, 11) },
  { pnode(GPIO, 10, 81, DATAOUT, 2, 4), rnode(GIN, 10, 81, 12) },
  { pnode(GPIO, 10, 81, OEIN, 2, 0), rnode(GOUT, 10, 81, 33) },
  { pnode(GPIO, 10, 81, OEIN, 2, 1), rnode(GOUT, 10, 81, 32) },
  { pnode(GPIO, 10, 81, BSLIPMAX, 2, -1), rnode(GIN, 10, 81, 0) },
  { pnode(GPIO, 10, 81, CEIN, 2, -1), rnode(GOUT, 10, 81, 10) },
  { pnode(GPIO, 10, 81, CEOUT, 2, -1), rnode(GOUT, 10, 81, 9) },
  { pnode(GPIO, 10, 81, ACLR, 2, -1), rnode(GOUT, 10, 81, 11) },
  { pnode(GPIO, 10, 81, SCLR, 2, -1), rnode(GOUT, 10, 81, 37) },
  { pnode(GPIO, 10, 81, CLKIN_IN, 2, 0), rnode(DCMUX, 10, 81, 5) },
  { pnode(GPIO, 10, 81, CLKIN_IN, 2, 1), rnode(DCMUX, 10, 81, 7) },
  { pnode(GPIO, 10, 81, CLKIN_OUT, 2, 0), rnode(DCMUX, 10, 81, 1) },
  { pnode(GPIO, 10, 81, CLKIN_OUT, 2, 1), rnode(DCMUX, 10, 81, 3) },
  { pnode(GPIO, 10, 81, DATAIN, 3, 0), rnode(GOUT, 9, 81, 33) },
  { pnode(GPIO, 10, 81, DATAIN, 3, 1), rnode(GOUT, 9, 81, 32) },
  { pnode(GPIO, 10, 81, DATAIN, 3, 2), rnode(GOUT, 9, 81, 37) },
  { pnode(GPIO, 10, 81, DATAIN, 3, 3), rnode(GOUT, 9, 81, 35) },
  { pnode(GPIO, 10, 81, DATAOUT, 3, 0), rnode(GIN, 9, 81, 25) },
  { pnode(GPIO, 10, 81, DATAOUT, 3, 1), rnode(GIN, 9, 81, 24) },
  { pnode(GPIO, 10, 81, DATAOUT, 3, 2), rnode(GIN, 9, 81, 22) },
  { pnode(GPIO, 10, 81, DATAOUT, 3, 3), rnode(GIN, 9, 81, 18) },
  { pnode(GPIO, 10, 81, DATAOUT, 3, 4), rnode(GIN, 9, 81, 15) },
  { pnode(GPIO, 10, 81, OEIN, 3, 0), rnode(GOUT, 9, 81, 36) },
  { pnode(GPIO, 10, 81, OEIN, 3, 1), rnode(GOUT, 9, 81, 26) },
  { pnode(GPIO, 10, 81, BSLIPMAX, 3, -1), rnode(GIN, 9, 81, 12) },
  { pnode(GPIO, 10, 81, CEIN, 3, -1), rnode(GOUT, 9, 81, 12) },
  { pnode(GPIO, 10, 81, CEOUT, 3, -1), rnode(GOUT, 9, 81, 25) },
  { pnode(GPIO, 10, 81, ACLR, 3, -1), rnode(GOUT, 9, 81, 39) },
  { pnode(GPIO, 10, 81, SCLR, 3, -1), rnode(GOUT, 10, 81, 0) },
  { pnode(GPIO, 10, 81, CLKIN_IN, 3, 0), rnode(DCMUX, 10, 81, 4) },
  { pnode(GPIO, 10, 81, CLKIN_IN, 3, 1), rnode(DCMUX, 10, 81, 6) },
  { pnode(GPIO, 10, 81, CLKIN_OUT, 3, 0), rnode(DCMUX, 10, 81, 0) },
  { pnode(GPIO, 10, 81, CLKIN_OUT, 3, 1), rnode(DCMUX, 10, 81, 2) },
  { pnode(GPIO, 12, 0, DATAIN, 0, 0), rnode(GOUT, 14, 0, 3) },
  { pnode(GPIO, 12, 0, DATAIN, 0, 1), rnode(GOUT, 14, 0, 8) },
  { pnode(GPIO, 12, 0, DATAIN, 0, 2), rnode(GOUT, 14, 0, 2) },
  { pnode(GPIO, 12, 0, DATAIN, 0, 3), rnode(GOUT, 14, 0, 1) },
  { pnode(GPIO, 12, 0, DATAOUT, 0, 0), rnode(GIN, 14, 0, 1) },
  { pnode(GPIO, 12, 0, DATAOUT, 0, 1), rnode(GIN, 14, 0, 2) },
  { pnode(GPIO, 12, 0, DATAOUT, 0, 2), rnode(GIN, 14, 0, 3) },
  { pnode(GPIO, 12, 0, DATAOUT, 0, 3), rnode(GIN, 14, 0, 4) },
  { pnode(GPIO, 12, 0, DATAOUT, 0, 4), rnode(GIN, 14, 0, 5) },
  { pnode(GPIO, 12, 0, OEIN, 0, 0), rnode(GOUT, 14, 0, 12) },
  { pnode(GPIO, 12, 0, OEIN, 0, 1), rnode(GOUT, 14, 0, 17) },
  { pnode(GPIO, 12, 0, BSLIPMAX, 0, -1), rnode(GIN, 14, 0, 0) },
  { pnode(GPIO, 12, 0, CEIN, 0, -1), rnode(GOUT, 14, 0, 9) },
  { pnode(GPIO, 12, 0, CEOUT, 0, -1), rnode(GOUT, 14, 0, 11) },
  { pnode(GPIO, 12, 0, ACLR, 0, -1), rnode(GOUT, 14, 0, 6) },
  { pnode(GPIO, 12, 0, SCLR, 0, -1), rnode(GOUT, 14, 0, 13) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 12, 0, 10) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 12, 0, 8) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 12, 0, 14) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 12, 0, 12) },
  { pnode(GPIO, 12, 0, DATAIN, 1, 0), rnode(GOUT, 13, 0, 32) },
  { pnode(GPIO, 12, 0, DATAIN, 1, 1), rnode(GOUT, 13, 0, 37) },
  { pnode(GPIO, 12, 0, DATAIN, 1, 2), rnode(GOUT, 13, 0, 35) },
  { pnode(GPIO, 12, 0, DATAIN, 1, 3), rnode(GOUT, 13, 0, 36) },
  { pnode(GPIO, 12, 0, DATAOUT, 1, 0), rnode(GIN, 13, 0, 24) },
  { pnode(GPIO, 12, 0, DATAOUT, 1, 1), rnode(GIN, 13, 0, 20) },
  { pnode(GPIO, 12, 0, DATAOUT, 1, 2), rnode(GIN, 13, 0, 16) },
  { pnode(GPIO, 12, 0, DATAOUT, 1, 3), rnode(GIN, 13, 0, 14) },
  { pnode(GPIO, 12, 0, DATAOUT, 1, 4), rnode(GIN, 13, 0, 13) },
  { pnode(GPIO, 12, 0, OEIN, 1, 0), rnode(GOUT, 13, 0, 26) },
  { pnode(GPIO, 12, 0, OEIN, 1, 1), rnode(GOUT, 14, 0, 0) },
  { pnode(GPIO, 12, 0, BSLIPMAX, 1, -1), rnode(GIN, 13, 0, 12) },
  { pnode(GPIO, 12, 0, CEIN, 1, -1), rnode(GOUT, 13, 0, 47) },
  { pnode(GPIO, 12, 0, CEOUT, 1, -1), rnode(GOUT, 13, 0, 29) },
  { pnode(GPIO, 12, 0, ACLR, 1, -1), rnode(GOUT, 13, 0, 31) },
  { pnode(GPIO, 12, 0, SCLR, 1, -1), rnode(GOUT, 14, 0, 10) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 12, 0, 11) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 12, 0, 9) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 12, 0, 15) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 12, 0, 13) },
  { pnode(GPIO, 12, 0, DATAIN, 2, 0), rnode(GOUT, 13, 0, 10) },
  { pnode(GPIO, 12, 0, DATAIN, 2, 1), rnode(GOUT, 13, 0, 9) },
  { pnode(GPIO, 12, 0, DATAIN, 2, 2), rnode(GOUT, 13, 0, 11) },
  { pnode(GPIO, 12, 0, DATAIN, 2, 3), rnode(GOUT, 13, 0, 6) },
  { pnode(GPIO, 12, 0, DATAOUT, 2, 0), rnode(GIN, 12, 0, 13) },
  { pnode(GPIO, 12, 0, DATAOUT, 2, 1), rnode(GIN, 13, 0, 1) },
  { pnode(GPIO, 12, 0, DATAOUT, 2, 2), rnode(GIN, 13, 0, 2) },
  { pnode(GPIO, 12, 0, DATAOUT, 2, 3), rnode(GIN, 13, 0, 3) },
  { pnode(GPIO, 12, 0, DATAOUT, 2, 4), rnode(GIN, 13, 0, 4) },
  { pnode(GPIO, 12, 0, OEIN, 2, 0), rnode(GOUT, 13, 0, 7) },
  { pnode(GPIO, 12, 0, OEIN, 2, 1), rnode(GOUT, 13, 0, 5) },
  { pnode(GPIO, 12, 0, BSLIPMAX, 2, -1), rnode(GIN, 12, 0, 14) },
  { pnode(GPIO, 12, 0, CEIN, 2, -1), rnode(GOUT, 12, 0, 31) },
  { pnode(GPIO, 12, 0, CEOUT, 2, -1), rnode(GOUT, 12, 0, 32) },
  { pnode(GPIO, 12, 0, ACLR, 2, -1), rnode(GOUT, 12, 0, 37) },
  { pnode(GPIO, 12, 0, SCLR, 2, -1), rnode(GOUT, 13, 0, 8) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 12, 0, 5) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 12, 0, 7) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 12, 0, 1) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 12, 0, 3) },
  { pnode(GPIO, 12, 0, DATAIN, 3, 0), rnode(GOUT, 12, 0, 50) },
  { pnode(GPIO, 12, 0, DATAIN, 3, 1), rnode(GOUT, 12, 0, 44) },
  { pnode(GPIO, 12, 0, DATAIN, 3, 2), rnode(GOUT, 12, 0, 39) },
  { pnode(GPIO, 12, 0, DATAIN, 3, 3), rnode(GOUT, 12, 0, 43) },
  { pnode(GPIO, 12, 0, DATAOUT, 3, 0), rnode(GIN, 12, 0, 8) },
  { pnode(GPIO, 12, 0, DATAOUT, 3, 1), rnode(GIN, 12, 0, 9) },
  { pnode(GPIO, 12, 0, DATAOUT, 3, 2), rnode(GIN, 12, 0, 10) },
  { pnode(GPIO, 12, 0, DATAOUT, 3, 3), rnode(GIN, 12, 0, 11) },
  { pnode(GPIO, 12, 0, DATAOUT, 3, 4), rnode(GIN, 12, 0, 12) },
  { pnode(GPIO, 12, 0, OEIN, 3, 0), rnode(GOUT, 12, 0, 38) },
  { pnode(GPIO, 12, 0, OEIN, 3, 1), rnode(GOUT, 12, 0, 27) },
  { pnode(GPIO, 12, 0, BSLIPMAX, 3, -1), rnode(GIN, 12, 0, 0) },
  { pnode(GPIO, 12, 0, CEIN, 3, -1), rnode(GOUT, 12, 0, 9) },
  { pnode(GPIO, 12, 0, CEOUT, 3, -1), rnode(GOUT, 12, 0, 11) },
  { pnode(GPIO, 12, 0, ACLR, 3, -1), rnode(GOUT, 12, 0, 6) },
  { pnode(GPIO, 12, 0, SCLR, 3, -1), rnode(GOUT, 12, 0, 29) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 12, 0, 4) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 12, 0, 6) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 12, 0, 0) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 12, 0, 2) },
  { pnode(GPIO, 12, 81, DATAIN, 0, 0), rnode(GOUT, 14, 81, 3) },
  { pnode(GPIO, 12, 81, DATAIN, 0, 1), rnode(GOUT, 14, 81, 8) },
  { pnode(GPIO, 12, 81, DATAIN, 0, 2), rnode(GOUT, 14, 81, 2) },
  { pnode(GPIO, 12, 81, DATAIN, 0, 3), rnode(GOUT, 14, 81, 1) },
  { pnode(GPIO, 12, 81, DATAOUT, 0, 0), rnode(GIN, 14, 81, 1) },
  { pnode(GPIO, 12, 81, DATAOUT, 0, 1), rnode(GIN, 14, 81, 2) },
  { pnode(GPIO, 12, 81, DATAOUT, 0, 2), rnode(GIN, 14, 81, 3) },
  { pnode(GPIO, 12, 81, DATAOUT, 0, 3), rnode(GIN, 14, 81, 4) },
  { pnode(GPIO, 12, 81, DATAOUT, 0, 4), rnode(GIN, 14, 81, 5) },
  { pnode(GPIO, 12, 81, OEIN, 0, 0), rnode(GOUT, 14, 81, 12) },
  { pnode(GPIO, 12, 81, OEIN, 0, 1), rnode(GOUT, 14, 81, 17) },
  { pnode(GPIO, 12, 81, BSLIPMAX, 0, -1), rnode(GIN, 14, 81, 0) },
  { pnode(GPIO, 12, 81, CEIN, 0, -1), rnode(GOUT, 14, 81, 9) },
  { pnode(GPIO, 12, 81, CEOUT, 0, -1), rnode(GOUT, 14, 81, 11) },
  { pnode(GPIO, 12, 81, ACLR, 0, -1), rnode(GOUT, 14, 81, 6) },
  { pnode(GPIO, 12, 81, SCLR, 0, -1), rnode(GOUT, 14, 81, 13) },
  { pnode(GPIO, 12, 81, CLKIN_IN, 0, 0), rnode(DCMUX, 12, 81, 10) },
  { pnode(GPIO, 12, 81, CLKIN_IN, 0, 1), rnode(DCMUX, 12, 81, 8) },
  { pnode(GPIO, 12, 81, CLKIN_OUT, 0, 0), rnode(DCMUX, 12, 81, 14) },
  { pnode(GPIO, 12, 81, CLKIN_OUT, 0, 1), rnode(DCMUX, 12, 81, 12) },
  { pnode(GPIO, 12, 81, DATAIN, 1, 0), rnode(GOUT, 13, 81, 32) },
  { pnode(GPIO, 12, 81, DATAIN, 1, 1), rnode(GOUT, 13, 81, 37) },
  { pnode(GPIO, 12, 81, DATAIN, 1, 2), rnode(GOUT, 13, 81, 35) },
  { pnode(GPIO, 12, 81, DATAIN, 1, 3), rnode(GOUT, 13, 81, 36) },
  { pnode(GPIO, 12, 81, DATAOUT, 1, 0), rnode(GIN, 13, 81, 24) },
  { pnode(GPIO, 12, 81, DATAOUT, 1, 1), rnode(GIN, 13, 81, 20) },
  { pnode(GPIO, 12, 81, DATAOUT, 1, 2), rnode(GIN, 13, 81, 16) },
  { pnode(GPIO, 12, 81, DATAOUT, 1, 3), rnode(GIN, 13, 81, 14) },
  { pnode(GPIO, 12, 81, DATAOUT, 1, 4), rnode(GIN, 13, 81, 13) },
  { pnode(GPIO, 12, 81, OEIN, 1, 0), rnode(GOUT, 13, 81, 26) },
  { pnode(GPIO, 12, 81, OEIN, 1, 1), rnode(GOUT, 14, 81, 0) },
  { pnode(GPIO, 12, 81, BSLIPMAX, 1, -1), rnode(GIN, 13, 81, 12) },
  { pnode(GPIO, 12, 81, CEIN, 1, -1), rnode(GOUT, 13, 81, 47) },
  { pnode(GPIO, 12, 81, CEOUT, 1, -1), rnode(GOUT, 13, 81, 29) },
  { pnode(GPIO, 12, 81, ACLR, 1, -1), rnode(GOUT, 13, 81, 31) },
  { pnode(GPIO, 12, 81, SCLR, 1, -1), rnode(GOUT, 14, 81, 10) },
  { pnode(GPIO, 12, 81, CLKIN_IN, 1, 0), rnode(DCMUX, 12, 81, 11) },
  { pnode(GPIO, 12, 81, CLKIN_IN, 1, 1), rnode(DCMUX, 12, 81, 9) },
  { pnode(GPIO, 12, 81, CLKIN_OUT, 1, 0), rnode(DCMUX, 12, 81, 15) },
  { pnode(GPIO, 12, 81, CLKIN_OUT, 1, 1), rnode(DCMUX, 12, 81, 13) },
  { pnode(GPIO, 12, 81, DATAIN, 2, 0), rnode(GOUT, 13, 81, 10) },
  { pnode(GPIO, 12, 81, DATAIN, 2, 1), rnode(GOUT, 13, 81, 9) },
  { pnode(GPIO, 12, 81, DATAIN, 2, 2), rnode(GOUT, 13, 81, 11) },
  { pnode(GPIO, 12, 81, DATAIN, 2, 3), rnode(GOUT, 13, 81, 6) },
  { pnode(GPIO, 12, 81, DATAOUT, 2, 0), rnode(GIN, 12, 81, 13) },
  { pnode(GPIO, 12, 81, DATAOUT, 2, 1), rnode(GIN, 13, 81, 1) },
  { pnode(GPIO, 12, 81, DATAOUT, 2, 2), rnode(GIN, 13, 81, 2) },
  { pnode(GPIO, 12, 81, DATAOUT, 2, 3), rnode(GIN, 13, 81, 3) },
  { pnode(GPIO, 12, 81, DATAOUT, 2, 4), rnode(GIN, 13, 81, 4) },
  { pnode(GPIO, 12, 81, OEIN, 2, 0), rnode(GOUT, 13, 81, 7) },
  { pnode(GPIO, 12, 81, OEIN, 2, 1), rnode(GOUT, 13, 81, 5) },
  { pnode(GPIO, 12, 81, BSLIPMAX, 2, -1), rnode(GIN, 12, 81, 14) },
  { pnode(GPIO, 12, 81, CEIN, 2, -1), rnode(GOUT, 12, 81, 31) },
  { pnode(GPIO, 12, 81, CEOUT, 2, -1), rnode(GOUT, 12, 81, 32) },
  { pnode(GPIO, 12, 81, ACLR, 2, -1), rnode(GOUT, 12, 81, 37) },
  { pnode(GPIO, 12, 81, SCLR, 2, -1), rnode(GOUT, 13, 81, 8) },
  { pnode(GPIO, 12, 81, CLKIN_IN, 2, 0), rnode(DCMUX, 12, 81, 5) },
  { pnode(GPIO, 12, 81, CLKIN_IN, 2, 1), rnode(DCMUX, 12, 81, 7) },
  { pnode(GPIO, 12, 81, CLKIN_OUT, 2, 0), rnode(DCMUX, 12, 81, 1) },
  { pnode(GPIO, 12, 81, CLKIN_OUT, 2, 1), rnode(DCMUX, 12, 81, 3) },
  { pnode(GPIO, 12, 81, DATAIN, 3, 0), rnode(GOUT, 12, 81, 50) },
  { pnode(GPIO, 12, 81, DATAIN, 3, 1), rnode(GOUT, 12, 81, 44) },
  { pnode(GPIO, 12, 81, DATAIN, 3, 2), rnode(GOUT, 12, 81, 39) },
  { pnode(GPIO, 12, 81, DATAIN, 3, 3), rnode(GOUT, 12, 81, 43) },
  { pnode(GPIO, 12, 81, DATAOUT, 3, 0), rnode(GIN, 12, 81, 8) },
  { pnode(GPIO, 12, 81, DATAOUT, 3, 1), rnode(GIN, 12, 81, 9) },
  { pnode(GPIO, 12, 81, DATAOUT, 3, 2), rnode(GIN, 12, 81, 10) },
  { pnode(GPIO, 12, 81, DATAOUT, 3, 3), rnode(GIN, 12, 81, 11) },
  { pnode(GPIO, 12, 81, DATAOUT, 3, 4), rnode(GIN, 12, 81, 12) },
  { pnode(GPIO, 12, 81, OEIN, 3, 0), rnode(GOUT, 12, 81, 38) },
  { pnode(GPIO, 12, 81, OEIN, 3, 1), rnode(GOUT, 12, 81, 27) },
  { pnode(GPIO, 12, 81, BSLIPMAX, 3, -1), rnode(GIN, 12, 81, 0) },
  { pnode(GPIO, 12, 81, CEIN, 3, -1), rnode(GOUT, 12, 81, 9) },
  { pnode(GPIO, 12, 81, CEOUT, 3, -1), rnode(GOUT, 12, 81, 11) },
  { pnode(GPIO, 12, 81, ACLR, 3, -1), rnode(GOUT, 12, 81, 6) },
  { pnode(GPIO, 12, 81, SCLR, 3, -1), rnode(GOUT, 12, 81, 29) },
  { pnode(GPIO, 12, 81, CLKIN_IN, 3, 0), rnode(DCMUX, 12, 81, 4) },
  { pnode(GPIO, 12, 81, CLKIN_IN, 3, 1), rnode(DCMUX, 12, 81, 6) },
  { pnode(GPIO, 12, 81, CLKIN_OUT, 3, 0), rnode(DCMUX, 12, 81, 0) },
  { pnode(GPIO, 12, 81, CLKIN_OUT, 3, 1), rnode(DCMUX, 12, 81, 2) },
  { pnode(GPIO, 14, 0, DATAIN, 0, 0), rnode(GOUT, 15, 0, 0) },
  { pnode(GPIO, 14, 0, DATAIN, 0, 1), rnode(GOUT, 15, 0, 10) },
  { pnode(GPIO, 14, 0, DATAIN, 0, 2), rnode(GOUT, 15, 0, 9) },
  { pnode(GPIO, 14, 0, DATAIN, 0, 3), rnode(GOUT, 15, 0, 11) },
  { pnode(GPIO, 14, 0, DATAOUT, 0, 0), rnode(GIN, 15, 0, 2) },
  { pnode(GPIO, 14, 0, DATAOUT, 0, 1), rnode(GIN, 15, 0, 3) },
  { pnode(GPIO, 14, 0, DATAOUT, 0, 2), rnode(GIN, 15, 0, 4) },
  { pnode(GPIO, 14, 0, DATAOUT, 0, 3), rnode(GIN, 15, 0, 5) },
  { pnode(GPIO, 14, 0, DATAOUT, 0, 4), rnode(GIN, 15, 0, 6) },
  { pnode(GPIO, 14, 0, OEIN, 0, 0), rnode(GOUT, 15, 0, 7) },
  { pnode(GPIO, 14, 0, OEIN, 0, 1), rnode(GOUT, 15, 0, 5) },
  { pnode(GPIO, 14, 0, BSLIPMAX, 0, -1), rnode(GIN, 15, 0, 1) },
  { pnode(GPIO, 14, 0, CEIN, 0, -1), rnode(GOUT, 14, 0, 35) },
  { pnode(GPIO, 14, 0, CEOUT, 0, -1), rnode(GOUT, 14, 0, 36) },
  { pnode(GPIO, 14, 0, ACLR, 0, -1), rnode(GOUT, 14, 0, 26) },
  { pnode(GPIO, 14, 0, SCLR, 0, -1), rnode(GOUT, 15, 0, 8) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 14, 0, 10) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 14, 0, 8) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 14, 0, 14) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 14, 0, 12) },
  { pnode(GPIO, 14, 0, DATAIN, 1, 0), rnode(GOUT, 14, 0, 34) },
  { pnode(GPIO, 14, 0, DATAIN, 1, 1), rnode(GOUT, 14, 0, 29) },
  { pnode(GPIO, 14, 0, DATAIN, 1, 2), rnode(GOUT, 14, 0, 30) },
  { pnode(GPIO, 14, 0, DATAIN, 1, 3), rnode(GOUT, 14, 0, 31) },
  { pnode(GPIO, 14, 0, DATAOUT, 1, 0), rnode(GIN, 14, 0, 16) },
  { pnode(GPIO, 14, 0, DATAOUT, 1, 1), rnode(GIN, 14, 0, 15) },
  { pnode(GPIO, 14, 0, DATAOUT, 1, 2), rnode(GIN, 14, 0, 14) },
  { pnode(GPIO, 14, 0, DATAOUT, 1, 3), rnode(GIN, 14, 0, 13) },
  { pnode(GPIO, 14, 0, DATAOUT, 1, 4), rnode(GIN, 15, 0, 0) },
  { pnode(GPIO, 14, 0, OEIN, 1, 0), rnode(GOUT, 14, 0, 33) },
  { pnode(GPIO, 14, 0, OEIN, 1, 1), rnode(GOUT, 14, 0, 32) },
  { pnode(GPIO, 14, 0, BSLIPMAX, 1, -1), rnode(GIN, 14, 0, 19) },
  { pnode(GPIO, 14, 0, CEIN, 1, -1), rnode(GOUT, 14, 0, 39) },
  { pnode(GPIO, 14, 0, CEOUT, 1, -1), rnode(GOUT, 14, 0, 43) },
  { pnode(GPIO, 14, 0, ACLR, 1, -1), rnode(GOUT, 14, 0, 38) },
  { pnode(GPIO, 14, 0, SCLR, 1, -1), rnode(GOUT, 14, 0, 37) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 14, 0, 11) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 14, 0, 9) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 14, 0, 15) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 14, 0, 13) },
  { pnode(GPIO, 14, 0, DATAIN, 2, 0), rnode(GOUT, 14, 0, 48) },
  { pnode(GPIO, 14, 0, DATAIN, 2, 1), rnode(GOUT, 14, 0, 47) },
  { pnode(GPIO, 14, 0, DATAIN, 2, 2), rnode(GOUT, 14, 0, 42) },
  { pnode(GPIO, 14, 0, DATAIN, 2, 3), rnode(GOUT, 14, 0, 46) },
  { pnode(GPIO, 14, 0, DATAOUT, 2, 0), rnode(GIN, 14, 0, 24) },
  { pnode(GPIO, 14, 0, DATAOUT, 2, 1), rnode(GIN, 14, 0, 23) },
  { pnode(GPIO, 14, 0, DATAOUT, 2, 2), rnode(GIN, 14, 0, 22) },
  { pnode(GPIO, 14, 0, DATAOUT, 2, 3), rnode(GIN, 14, 0, 21) },
  { pnode(GPIO, 14, 0, DATAOUT, 2, 4), rnode(GIN, 14, 0, 20) },
  { pnode(GPIO, 14, 0, OEIN, 2, 0), rnode(GOUT, 14, 0, 41) },
  { pnode(GPIO, 14, 0, OEIN, 2, 1), rnode(GOUT, 14, 0, 40) },
  { pnode(GPIO, 14, 0, BSLIPMAX, 2, -1), rnode(GIN, 14, 0, 12) },
  { pnode(GPIO, 14, 0, CEIN, 2, -1), rnode(GOUT, 14, 0, 25) },
  { pnode(GPIO, 14, 0, CEOUT, 2, -1), rnode(GOUT, 14, 0, 50) },
  { pnode(GPIO, 14, 0, ACLR, 2, -1), rnode(GOUT, 14, 0, 49) },
  { pnode(GPIO, 14, 0, SCLR, 2, -1), rnode(GOUT, 14, 0, 44) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 14, 0, 5) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 14, 0, 7) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 14, 0, 1) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 14, 0, 3) },
  { pnode(GPIO, 14, 0, DATAIN, 3, 0), rnode(GOUT, 14, 0, 15) },
  { pnode(GPIO, 14, 0, DATAIN, 3, 1), rnode(GOUT, 14, 0, 20) },
  { pnode(GPIO, 14, 0, DATAIN, 3, 2), rnode(GOUT, 14, 0, 16) },
  { pnode(GPIO, 14, 0, DATAIN, 3, 3), rnode(GOUT, 14, 0, 21) },
  { pnode(GPIO, 14, 0, DATAOUT, 3, 0), rnode(GIN, 14, 0, 7) },
  { pnode(GPIO, 14, 0, DATAOUT, 3, 1), rnode(GIN, 14, 0, 8) },
  { pnode(GPIO, 14, 0, DATAOUT, 3, 2), rnode(GIN, 14, 0, 9) },
  { pnode(GPIO, 14, 0, DATAOUT, 3, 3), rnode(GIN, 14, 0, 10) },
  { pnode(GPIO, 14, 0, DATAOUT, 3, 4), rnode(GIN, 14, 0, 11) },
  { pnode(GPIO, 14, 0, OEIN, 3, 0), rnode(GOUT, 14, 0, 22) },
  { pnode(GPIO, 14, 0, OEIN, 3, 1), rnode(GOUT, 14, 0, 23) },
  { pnode(GPIO, 14, 0, BSLIPMAX, 3, -1), rnode(GIN, 14, 0, 6) },
  { pnode(GPIO, 14, 0, CEIN, 3, -1), rnode(GOUT, 14, 0, 18) },
  { pnode(GPIO, 14, 0, CEOUT, 3, -1), rnode(GOUT, 14, 0, 14) },
  { pnode(GPIO, 14, 0, ACLR, 3, -1), rnode(GOUT, 14, 0, 19) },
  { pnode(GPIO, 14, 0, SCLR, 3, -1), rnode(GOUT, 14, 0, 24) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 14, 0, 4) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 14, 0, 6) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 14, 0, 0) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 14, 0, 2) },
  { pnode(GPIO, 14, 81, DATAIN, 0, 0), rnode(GOUT, 15, 81, 0) },
  { pnode(GPIO, 14, 81, DATAIN, 0, 1), rnode(GOUT, 15, 81, 10) },
  { pnode(GPIO, 14, 81, DATAIN, 0, 2), rnode(GOUT, 15, 81, 9) },
  { pnode(GPIO, 14, 81, DATAIN, 0, 3), rnode(GOUT, 15, 81, 11) },
  { pnode(GPIO, 14, 81, DATAOUT, 0, 0), rnode(GIN, 15, 81, 2) },
  { pnode(GPIO, 14, 81, DATAOUT, 0, 1), rnode(GIN, 15, 81, 3) },
  { pnode(GPIO, 14, 81, DATAOUT, 0, 2), rnode(GIN, 15, 81, 4) },
  { pnode(GPIO, 14, 81, DATAOUT, 0, 3), rnode(GIN, 15, 81, 5) },
  { pnode(GPIO, 14, 81, DATAOUT, 0, 4), rnode(GIN, 15, 81, 6) },
  { pnode(GPIO, 14, 81, OEIN, 0, 0), rnode(GOUT, 15, 81, 7) },
  { pnode(GPIO, 14, 81, OEIN, 0, 1), rnode(GOUT, 15, 81, 5) },
  { pnode(GPIO, 14, 81, BSLIPMAX, 0, -1), rnode(GIN, 15, 81, 1) },
  { pnode(GPIO, 14, 81, CEIN, 0, -1), rnode(GOUT, 14, 81, 35) },
  { pnode(GPIO, 14, 81, CEOUT, 0, -1), rnode(GOUT, 14, 81, 36) },
  { pnode(GPIO, 14, 81, ACLR, 0, -1), rnode(GOUT, 14, 81, 26) },
  { pnode(GPIO, 14, 81, SCLR, 0, -1), rnode(GOUT, 15, 81, 8) },
  { pnode(GPIO, 14, 81, CLKIN_IN, 0, 0), rnode(DCMUX, 14, 81, 10) },
  { pnode(GPIO, 14, 81, CLKIN_IN, 0, 1), rnode(DCMUX, 14, 81, 8) },
  { pnode(GPIO, 14, 81, CLKIN_OUT, 0, 0), rnode(DCMUX, 14, 81, 14) },
  { pnode(GPIO, 14, 81, CLKIN_OUT, 0, 1), rnode(DCMUX, 14, 81, 12) },
  { pnode(GPIO, 14, 81, DATAIN, 1, 0), rnode(GOUT, 14, 81, 34) },
  { pnode(GPIO, 14, 81, DATAIN, 1, 1), rnode(GOUT, 14, 81, 29) },
  { pnode(GPIO, 14, 81, DATAIN, 1, 2), rnode(GOUT, 14, 81, 30) },
  { pnode(GPIO, 14, 81, DATAIN, 1, 3), rnode(GOUT, 14, 81, 31) },
  { pnode(GPIO, 14, 81, DATAOUT, 1, 0), rnode(GIN, 14, 81, 16) },
  { pnode(GPIO, 14, 81, DATAOUT, 1, 1), rnode(GIN, 14, 81, 15) },
  { pnode(GPIO, 14, 81, DATAOUT, 1, 2), rnode(GIN, 14, 81, 14) },
  { pnode(GPIO, 14, 81, DATAOUT, 1, 3), rnode(GIN, 14, 81, 13) },
  { pnode(GPIO, 14, 81, DATAOUT, 1, 4), rnode(GIN, 15, 81, 0) },
  { pnode(GPIO, 14, 81, OEIN, 1, 0), rnode(GOUT, 14, 81, 33) },
  { pnode(GPIO, 14, 81, OEIN, 1, 1), rnode(GOUT, 14, 81, 32) },
  { pnode(GPIO, 14, 81, BSLIPMAX, 1, -1), rnode(GIN, 14, 81, 19) },
  { pnode(GPIO, 14, 81, CEIN, 1, -1), rnode(GOUT, 14, 81, 39) },
  { pnode(GPIO, 14, 81, CEOUT, 1, -1), rnode(GOUT, 14, 81, 43) },
  { pnode(GPIO, 14, 81, ACLR, 1, -1), rnode(GOUT, 14, 81, 38) },
  { pnode(GPIO, 14, 81, SCLR, 1, -1), rnode(GOUT, 14, 81, 37) },
  { pnode(GPIO, 14, 81, CLKIN_IN, 1, 0), rnode(DCMUX, 14, 81, 11) },
  { pnode(GPIO, 14, 81, CLKIN_IN, 1, 1), rnode(DCMUX, 14, 81, 9) },
  { pnode(GPIO, 14, 81, CLKIN_OUT, 1, 0), rnode(DCMUX, 14, 81, 15) },
  { pnode(GPIO, 14, 81, CLKIN_OUT, 1, 1), rnode(DCMUX, 14, 81, 13) },
  { pnode(GPIO, 14, 81, DATAIN, 2, 0), rnode(GOUT, 14, 81, 48) },
  { pnode(GPIO, 14, 81, DATAIN, 2, 1), rnode(GOUT, 14, 81, 47) },
  { pnode(GPIO, 14, 81, DATAIN, 2, 2), rnode(GOUT, 14, 81, 42) },
  { pnode(GPIO, 14, 81, DATAIN, 2, 3), rnode(GOUT, 14, 81, 46) },
  { pnode(GPIO, 14, 81, DATAOUT, 2, 0), rnode(GIN, 14, 81, 24) },
  { pnode(GPIO, 14, 81, DATAOUT, 2, 1), rnode(GIN, 14, 81, 23) },
  { pnode(GPIO, 14, 81, DATAOUT, 2, 2), rnode(GIN, 14, 81, 22) },
  { pnode(GPIO, 14, 81, DATAOUT, 2, 3), rnode(GIN, 14, 81, 21) },
  { pnode(GPIO, 14, 81, DATAOUT, 2, 4), rnode(GIN, 14, 81, 20) },
  { pnode(GPIO, 14, 81, OEIN, 2, 0), rnode(GOUT, 14, 81, 41) },
  { pnode(GPIO, 14, 81, OEIN, 2, 1), rnode(GOUT, 14, 81, 40) },
  { pnode(GPIO, 14, 81, BSLIPMAX, 2, -1), rnode(GIN, 14, 81, 12) },
  { pnode(GPIO, 14, 81, CEIN, 2, -1), rnode(GOUT, 14, 81, 25) },
  { pnode(GPIO, 14, 81, CEOUT, 2, -1), rnode(GOUT, 14, 81, 50) },
  { pnode(GPIO, 14, 81, ACLR, 2, -1), rnode(GOUT, 14, 81, 49) },
  { pnode(GPIO, 14, 81, SCLR, 2, -1), rnode(GOUT, 14, 81, 44) },
  { pnode(GPIO, 14, 81, CLKIN_IN, 2, 0), rnode(DCMUX, 14, 81, 5) },
  { pnode(GPIO, 14, 81, CLKIN_IN, 2, 1), rnode(DCMUX, 14, 81, 7) },
  { pnode(GPIO, 14, 81, CLKIN_OUT, 2, 0), rnode(DCMUX, 14, 81, 1) },
  { pnode(GPIO, 14, 81, CLKIN_OUT, 2, 1), rnode(DCMUX, 14, 81, 3) },
  { pnode(GPIO, 14, 81, DATAIN, 3, 0), rnode(GOUT, 14, 81, 15) },
  { pnode(GPIO, 14, 81, DATAIN, 3, 1), rnode(GOUT, 14, 81, 20) },
  { pnode(GPIO, 14, 81, DATAIN, 3, 2), rnode(GOUT, 14, 81, 16) },
  { pnode(GPIO, 14, 81, DATAIN, 3, 3), rnode(GOUT, 14, 81, 21) },
  { pnode(GPIO, 14, 81, DATAOUT, 3, 0), rnode(GIN, 14, 81, 7) },
  { pnode(GPIO, 14, 81, DATAOUT, 3, 1), rnode(GIN, 14, 81, 8) },
  { pnode(GPIO, 14, 81, DATAOUT, 3, 2), rnode(GIN, 14, 81, 9) },
  { pnode(GPIO, 14, 81, DATAOUT, 3, 3), rnode(GIN, 14, 81, 10) },
  { pnode(GPIO, 14, 81, DATAOUT, 3, 4), rnode(GIN, 14, 81, 11) },
  { pnode(GPIO, 14, 81, OEIN, 3, 0), rnode(GOUT, 14, 81, 22) },
  { pnode(GPIO, 14, 81, OEIN, 3, 1), rnode(GOUT, 14, 81, 23) },
  { pnode(GPIO, 14, 81, BSLIPMAX, 3, -1), rnode(GIN, 14, 81, 6) },
  { pnode(GPIO, 14, 81, CEIN, 3, -1), rnode(GOUT, 14, 81, 18) },
  { pnode(GPIO, 14, 81, CEOUT, 3, -1), rnode(GOUT, 14, 81, 14) },
  { pnode(GPIO, 14, 81, ACLR, 3, -1), rnode(GOUT, 14, 81, 19) },
  { pnode(GPIO, 14, 81, SCLR, 3, -1), rnode(GOUT, 14, 81, 24) },
  { pnode(GPIO, 14, 81, CLKIN_IN, 3, 0), rnode(DCMUX, 14, 81, 4) },
  { pnode(GPIO, 14, 81, CLKIN_IN, 3, 1), rnode(DCMUX, 14, 81, 6) },
  { pnode(GPIO, 14, 81, CLKIN_OUT, 3, 0), rnode(DCMUX, 14, 81, 0) },
  { pnode(GPIO, 14, 81, CLKIN_OUT, 3, 1), rnode(DCMUX, 14, 81, 2) },
  { pnode(GPIO, 16, 0, DATAIN, 0, 0), rnode(GOUT, 16, 0, 20) },
  { pnode(GPIO, 16, 0, DATAIN, 0, 1), rnode(GOUT, 16, 0, 16) },
  { pnode(GPIO, 16, 0, DATAIN, 0, 2), rnode(GOUT, 16, 0, 21) },
  { pnode(GPIO, 16, 0, DATAIN, 0, 3), rnode(GOUT, 16, 0, 22) },
  { pnode(GPIO, 16, 0, DATAOUT, 0, 0), rnode(GIN, 16, 0, 4) },
  { pnode(GPIO, 16, 0, DATAOUT, 0, 1), rnode(GIN, 16, 0, 5) },
  { pnode(GPIO, 16, 0, DATAOUT, 0, 2), rnode(GIN, 16, 0, 6) },
  { pnode(GPIO, 16, 0, DATAOUT, 0, 3), rnode(GIN, 16, 0, 7) },
  { pnode(GPIO, 16, 0, DATAOUT, 0, 4), rnode(GIN, 16, 0, 8) },
  { pnode(GPIO, 16, 0, OEIN, 0, 0), rnode(GOUT, 16, 0, 24) },
  { pnode(GPIO, 16, 0, OEIN, 0, 1), rnode(GOUT, 16, 0, 25) },
  { pnode(GPIO, 16, 0, BSLIPMAX, 0, -1), rnode(GIN, 16, 0, 3) },
  { pnode(GPIO, 16, 0, CEIN, 0, -1), rnode(GOUT, 16, 0, 12) },
  { pnode(GPIO, 16, 0, CEOUT, 0, -1), rnode(GOUT, 16, 0, 17) },
  { pnode(GPIO, 16, 0, ACLR, 0, -1), rnode(GOUT, 16, 0, 18) },
  { pnode(GPIO, 16, 0, SCLR, 0, -1), rnode(GOUT, 16, 0, 50) },
  { pnode(GPIO, 16, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 16, 0, 10) },
  { pnode(GPIO, 16, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 16, 0, 8) },
  { pnode(GPIO, 16, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 16, 0, 14) },
  { pnode(GPIO, 16, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 16, 0, 12) },
  { pnode(GPIO, 16, 0, DATAIN, 1, 0), rnode(GOUT, 16, 0, 0) },
  { pnode(GPIO, 16, 0, DATAIN, 1, 1), rnode(GOUT, 16, 0, 10) },
  { pnode(GPIO, 16, 0, DATAIN, 1, 2), rnode(GOUT, 16, 0, 9) },
  { pnode(GPIO, 16, 0, DATAIN, 1, 3), rnode(GOUT, 16, 0, 11) },
  { pnode(GPIO, 16, 0, DATAOUT, 1, 0), rnode(GIN, 15, 0, 14) },
  { pnode(GPIO, 16, 0, DATAOUT, 1, 1), rnode(GIN, 15, 0, 13) },
  { pnode(GPIO, 16, 0, DATAOUT, 1, 2), rnode(GIN, 16, 0, 0) },
  { pnode(GPIO, 16, 0, DATAOUT, 1, 3), rnode(GIN, 16, 0, 1) },
  { pnode(GPIO, 16, 0, DATAOUT, 1, 4), rnode(GIN, 16, 0, 2) },
  { pnode(GPIO, 16, 0, OEIN, 1, 0), rnode(GOUT, 16, 0, 7) },
  { pnode(GPIO, 16, 0, OEIN, 1, 1), rnode(GOUT, 16, 0, 4) },
  { pnode(GPIO, 16, 0, BSLIPMAX, 1, -1), rnode(GIN, 15, 0, 15) },
  { pnode(GPIO, 16, 0, CEIN, 1, -1), rnode(GOUT, 15, 0, 31) },
  { pnode(GPIO, 16, 0, CEOUT, 1, -1), rnode(GOUT, 15, 0, 33) },
  { pnode(GPIO, 16, 0, ACLR, 1, -1), rnode(GOUT, 15, 0, 37) },
  { pnode(GPIO, 16, 0, SCLR, 1, -1), rnode(GOUT, 16, 0, 2) },
  { pnode(GPIO, 16, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 16, 0, 11) },
  { pnode(GPIO, 16, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 16, 0, 9) },
  { pnode(GPIO, 16, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 16, 0, 15) },
  { pnode(GPIO, 16, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 16, 0, 13) },
  { pnode(GPIO, 16, 0, DATAIN, 2, 0), rnode(GOUT, 15, 0, 40) },
  { pnode(GPIO, 16, 0, DATAIN, 2, 1), rnode(GOUT, 15, 0, 44) },
  { pnode(GPIO, 16, 0, DATAIN, 2, 2), rnode(GOUT, 15, 0, 39) },
  { pnode(GPIO, 16, 0, DATAIN, 2, 3), rnode(GOUT, 15, 0, 43) },
  { pnode(GPIO, 16, 0, DATAOUT, 2, 0), rnode(GIN, 15, 0, 20) },
  { pnode(GPIO, 16, 0, DATAOUT, 2, 1), rnode(GIN, 15, 0, 19) },
  { pnode(GPIO, 16, 0, DATAOUT, 2, 2), rnode(GIN, 15, 0, 18) },
  { pnode(GPIO, 16, 0, DATAOUT, 2, 3), rnode(GIN, 15, 0, 17) },
  { pnode(GPIO, 16, 0, DATAOUT, 2, 4), rnode(GIN, 15, 0, 16) },
  { pnode(GPIO, 16, 0, OEIN, 2, 0), rnode(GOUT, 15, 0, 27) },
  { pnode(GPIO, 16, 0, OEIN, 2, 1), rnode(GOUT, 15, 0, 28) },
  { pnode(GPIO, 16, 0, BSLIPMAX, 2, -1), rnode(GIN, 15, 0, 21) },
  { pnode(GPIO, 16, 0, CEIN, 2, -1), rnode(GOUT, 15, 0, 47) },
  { pnode(GPIO, 16, 0, CEOUT, 2, -1), rnode(GOUT, 15, 0, 42) },
  { pnode(GPIO, 16, 0, ACLR, 2, -1), rnode(GOUT, 15, 0, 46) },
  { pnode(GPIO, 16, 0, SCLR, 2, -1), rnode(GOUT, 15, 0, 29) },
  { pnode(GPIO, 16, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 16, 0, 5) },
  { pnode(GPIO, 16, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 16, 0, 7) },
  { pnode(GPIO, 16, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 16, 0, 1) },
  { pnode(GPIO, 16, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 16, 0, 3) },
  { pnode(GPIO, 16, 0, DATAIN, 3, 0), rnode(GOUT, 15, 0, 22) },
  { pnode(GPIO, 16, 0, DATAIN, 3, 1), rnode(GOUT, 15, 0, 23) },
  { pnode(GPIO, 16, 0, DATAIN, 3, 2), rnode(GOUT, 15, 0, 24) },
  { pnode(GPIO, 16, 0, DATAIN, 3, 3), rnode(GOUT, 15, 0, 25) },
  { pnode(GPIO, 16, 0, DATAOUT, 3, 0), rnode(GIN, 15, 0, 12) },
  { pnode(GPIO, 16, 0, DATAOUT, 3, 1), rnode(GIN, 15, 0, 25) },
  { pnode(GPIO, 16, 0, DATAOUT, 3, 2), rnode(GIN, 15, 0, 24) },
  { pnode(GPIO, 16, 0, DATAOUT, 3, 3), rnode(GIN, 15, 0, 23) },
  { pnode(GPIO, 16, 0, DATAOUT, 3, 4), rnode(GIN, 15, 0, 22) },
  { pnode(GPIO, 16, 0, OEIN, 3, 0), rnode(GOUT, 15, 0, 50) },
  { pnode(GPIO, 16, 0, OEIN, 3, 1), rnode(GOUT, 15, 0, 49) },
  { pnode(GPIO, 16, 0, BSLIPMAX, 3, -1), rnode(GIN, 15, 0, 11) },
  { pnode(GPIO, 16, 0, CEIN, 3, -1), rnode(GOUT, 15, 0, 15) },
  { pnode(GPIO, 16, 0, CEOUT, 3, -1), rnode(GOUT, 15, 0, 16) },
  { pnode(GPIO, 16, 0, ACLR, 3, -1), rnode(GOUT, 15, 0, 21) },
  { pnode(GPIO, 16, 0, SCLR, 3, -1), rnode(GOUT, 15, 0, 48) },
  { pnode(GPIO, 16, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 16, 0, 4) },
  { pnode(GPIO, 16, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 16, 0, 6) },
  { pnode(GPIO, 16, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 16, 0, 0) },
  { pnode(GPIO, 16, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 16, 0, 2) },
  { pnode(GPIO, 16, 81, DATAIN, 0, 0), rnode(GOUT, 16, 81, 20) },
  { pnode(GPIO, 16, 81, DATAIN, 0, 1), rnode(GOUT, 16, 81, 16) },
  { pnode(GPIO, 16, 81, DATAIN, 0, 2), rnode(GOUT, 16, 81, 21) },
  { pnode(GPIO, 16, 81, DATAIN, 0, 3), rnode(GOUT, 16, 81, 22) },
  { pnode(GPIO, 16, 81, DATAOUT, 0, 0), rnode(GIN, 16, 81, 4) },
  { pnode(GPIO, 16, 81, DATAOUT, 0, 1), rnode(GIN, 16, 81, 5) },
  { pnode(GPIO, 16, 81, DATAOUT, 0, 2), rnode(GIN, 16, 81, 6) },
  { pnode(GPIO, 16, 81, DATAOUT, 0, 3), rnode(GIN, 16, 81, 7) },
  { pnode(GPIO, 16, 81, DATAOUT, 0, 4), rnode(GIN, 16, 81, 8) },
  { pnode(GPIO, 16, 81, OEIN, 0, 0), rnode(GOUT, 16, 81, 24) },
  { pnode(GPIO, 16, 81, OEIN, 0, 1), rnode(GOUT, 16, 81, 25) },
  { pnode(GPIO, 16, 81, BSLIPMAX, 0, -1), rnode(GIN, 16, 81, 3) },
  { pnode(GPIO, 16, 81, CEIN, 0, -1), rnode(GOUT, 16, 81, 12) },
  { pnode(GPIO, 16, 81, CEOUT, 0, -1), rnode(GOUT, 16, 81, 17) },
  { pnode(GPIO, 16, 81, ACLR, 0, -1), rnode(GOUT, 16, 81, 18) },
  { pnode(GPIO, 16, 81, SCLR, 0, -1), rnode(GOUT, 16, 81, 50) },
  { pnode(GPIO, 16, 81, CLKIN_IN, 0, 0), rnode(DCMUX, 16, 81, 10) },
  { pnode(GPIO, 16, 81, CLKIN_IN, 0, 1), rnode(DCMUX, 16, 81, 8) },
  { pnode(GPIO, 16, 81, CLKIN_OUT, 0, 0), rnode(DCMUX, 16, 81, 14) },
  { pnode(GPIO, 16, 81, CLKIN_OUT, 0, 1), rnode(DCMUX, 16, 81, 12) },
  { pnode(GPIO, 16, 81, DATAIN, 1, 0), rnode(GOUT, 16, 81, 0) },
  { pnode(GPIO, 16, 81, DATAIN, 1, 1), rnode(GOUT, 16, 81, 10) },
  { pnode(GPIO, 16, 81, DATAIN, 1, 2), rnode(GOUT, 16, 81, 9) },
  { pnode(GPIO, 16, 81, DATAIN, 1, 3), rnode(GOUT, 16, 81, 11) },
  { pnode(GPIO, 16, 81, DATAOUT, 1, 0), rnode(GIN, 15, 81, 14) },
  { pnode(GPIO, 16, 81, DATAOUT, 1, 1), rnode(GIN, 15, 81, 13) },
  { pnode(GPIO, 16, 81, DATAOUT, 1, 2), rnode(GIN, 16, 81, 0) },
  { pnode(GPIO, 16, 81, DATAOUT, 1, 3), rnode(GIN, 16, 81, 1) },
  { pnode(GPIO, 16, 81, DATAOUT, 1, 4), rnode(GIN, 16, 81, 2) },
  { pnode(GPIO, 16, 81, OEIN, 1, 0), rnode(GOUT, 16, 81, 7) },
  { pnode(GPIO, 16, 81, OEIN, 1, 1), rnode(GOUT, 16, 81, 4) },
  { pnode(GPIO, 16, 81, BSLIPMAX, 1, -1), rnode(GIN, 15, 81, 15) },
  { pnode(GPIO, 16, 81, CEIN, 1, -1), rnode(GOUT, 15, 81, 31) },
  { pnode(GPIO, 16, 81, CEOUT, 1, -1), rnode(GOUT, 15, 81, 33) },
  { pnode(GPIO, 16, 81, ACLR, 1, -1), rnode(GOUT, 15, 81, 37) },
  { pnode(GPIO, 16, 81, SCLR, 1, -1), rnode(GOUT, 16, 81, 2) },
  { pnode(GPIO, 16, 81, CLKIN_IN, 1, 0), rnode(DCMUX, 16, 81, 11) },
  { pnode(GPIO, 16, 81, CLKIN_IN, 1, 1), rnode(DCMUX, 16, 81, 9) },
  { pnode(GPIO, 16, 81, CLKIN_OUT, 1, 0), rnode(DCMUX, 16, 81, 15) },
  { pnode(GPIO, 16, 81, CLKIN_OUT, 1, 1), rnode(DCMUX, 16, 81, 13) },
  { pnode(GPIO, 16, 81, DATAIN, 2, 0), rnode(GOUT, 15, 81, 40) },
  { pnode(GPIO, 16, 81, DATAIN, 2, 1), rnode(GOUT, 15, 81, 44) },
  { pnode(GPIO, 16, 81, DATAIN, 2, 2), rnode(GOUT, 15, 81, 39) },
  { pnode(GPIO, 16, 81, DATAIN, 2, 3), rnode(GOUT, 15, 81, 43) },
  { pnode(GPIO, 16, 81, DATAOUT, 2, 0), rnode(GIN, 15, 81, 20) },
  { pnode(GPIO, 16, 81, DATAOUT, 2, 1), rnode(GIN, 15, 81, 19) },
  { pnode(GPIO, 16, 81, DATAOUT, 2, 2), rnode(GIN, 15, 81, 18) },
  { pnode(GPIO, 16, 81, DATAOUT, 2, 3), rnode(GIN, 15, 81, 17) },
  { pnode(GPIO, 16, 81, DATAOUT, 2, 4), rnode(GIN, 15, 81, 16) },
  { pnode(GPIO, 16, 81, OEIN, 2, 0), rnode(GOUT, 15, 81, 27) },
  { pnode(GPIO, 16, 81, OEIN, 2, 1), rnode(GOUT, 15, 81, 28) },
  { pnode(GPIO, 16, 81, BSLIPMAX, 2, -1), rnode(GIN, 15, 81, 21) },
  { pnode(GPIO, 16, 81, CEIN, 2, -1), rnode(GOUT, 15, 81, 47) },
  { pnode(GPIO, 16, 81, CEOUT, 2, -1), rnode(GOUT, 15, 81, 42) },
  { pnode(GPIO, 16, 81, ACLR, 2, -1), rnode(GOUT, 15, 81, 46) },
  { pnode(GPIO, 16, 81, SCLR, 2, -1), rnode(GOUT, 15, 81, 29) },
  { pnode(GPIO, 16, 81, CLKIN_IN, 2, 0), rnode(DCMUX, 16, 81, 5) },
  { pnode(GPIO, 16, 81, CLKIN_IN, 2, 1), rnode(DCMUX, 16, 81, 7) },
  { pnode(GPIO, 16, 81, CLKIN_OUT, 2, 0), rnode(DCMUX, 16, 81, 1) },
  { pnode(GPIO, 16, 81, CLKIN_OUT, 2, 1), rnode(DCMUX, 16, 81, 3) },
  { pnode(GPIO, 16, 81, DATAIN, 3, 0), rnode(GOUT, 15, 81, 22) },
  { pnode(GPIO, 16, 81, DATAIN, 3, 1), rnode(GOUT, 15, 81, 23) },
  { pnode(GPIO, 16, 81, DATAIN, 3, 2), rnode(GOUT, 15, 81, 24) },
  { pnode(GPIO, 16, 81, DATAIN, 3, 3), rnode(GOUT, 15, 81, 25) },
  { pnode(GPIO, 16, 81, DATAOUT, 3, 0), rnode(GIN, 15, 81, 12) },
  { pnode(GPIO, 16, 81, DATAOUT, 3, 1), rnode(GIN, 15, 81, 25) },
  { pnode(GPIO, 16, 81, DATAOUT, 3, 2), rnode(GIN, 15, 81, 24) },
  { pnode(GPIO, 16, 81, DATAOUT, 3, 3), rnode(GIN, 15, 81, 23) },
  { pnode(GPIO, 16, 81, DATAOUT, 3, 4), rnode(GIN, 15, 81, 22) },
  { pnode(GPIO, 16, 81, OEIN, 3, 0), rnode(GOUT, 15, 81, 50) },
  { pnode(GPIO, 16, 81, OEIN, 3, 1), rnode(GOUT, 15, 81, 49) },
  { pnode(GPIO, 16, 81, BSLIPMAX, 3, -1), rnode(GIN, 15, 81, 11) },
  { pnode(GPIO, 16, 81, CEIN, 3, -1), rnode(GOUT, 15, 81, 15) },
  { pnode(GPIO, 16, 81, CEOUT, 3, -1), rnode(GOUT, 15, 81, 16) },
  { pnode(GPIO, 16, 81, ACLR, 3, -1), rnode(GOUT, 15, 81, 21) },
  { pnode(GPIO, 16, 81, SCLR, 3, -1), rnode(GOUT, 15, 81, 48) },
  { pnode(GPIO, 16, 81, CLKIN_IN, 3, 0), rnode(DCMUX, 16, 81, 4) },
  { pnode(GPIO, 16, 81, CLKIN_IN, 3, 1), rnode(DCMUX, 16, 81, 6) },
  { pnode(GPIO, 16, 81, CLKIN_OUT, 3, 0), rnode(DCMUX, 16, 81, 0) },
  { pnode(GPIO, 16, 81, CLKIN_OUT, 3, 1), rnode(DCMUX, 16, 81, 2) },
  { pnode(GPIO, 18, 0, DATAIN, 0, 0), rnode(GOUT, 19, 0, 28) },
  { pnode(GPIO, 18, 0, DATAIN, 0, 1), rnode(GOUT, 19, 0, 34) },
  { pnode(GPIO, 18, 0, DATAIN, 0, 2), rnode(GOUT, 19, 0, 29) },
  { pnode(GPIO, 18, 0, DATAIN, 0, 3), rnode(GOUT, 19, 0, 30) },
  { pnode(GPIO, 18, 0, DATAOUT, 0, 0), rnode(GIN, 19, 0, 25) },
  { pnode(GPIO, 18, 0, DATAOUT, 0, 1), rnode(GIN, 19, 0, 24) },
  { pnode(GPIO, 18, 0, DATAOUT, 0, 2), rnode(GIN, 19, 0, 23) },
  { pnode(GPIO, 18, 0, DATAOUT, 0, 3), rnode(GIN, 19, 0, 22) },
  { pnode(GPIO, 18, 0, DATAOUT, 0, 4), rnode(GIN, 19, 0, 21) },
  { pnode(GPIO, 18, 0, OEIN, 0, 0), rnode(GOUT, 19, 0, 31) },
  { pnode(GPIO, 18, 0, OEIN, 0, 1), rnode(GOUT, 19, 0, 33) },
  { pnode(GPIO, 18, 0, BSLIPMAX, 0, -1), rnode(GIN, 19, 0, 12) },
  { pnode(GPIO, 18, 0, CEIN, 0, -1), rnode(GOUT, 19, 0, 4) },
  { pnode(GPIO, 18, 0, CEOUT, 0, -1), rnode(GOUT, 19, 0, 3) },
  { pnode(GPIO, 18, 0, ACLR, 0, -1), rnode(GOUT, 19, 0, 8) },
  { pnode(GPIO, 18, 0, SCLR, 0, -1), rnode(GOUT, 19, 0, 32) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 18, 0, 10) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 18, 0, 8) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 18, 0, 14) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 18, 0, 12) },
  { pnode(GPIO, 18, 0, DATAIN, 1, 0), rnode(GOUT, 19, 0, 0) },
  { pnode(GPIO, 18, 0, DATAIN, 1, 1), rnode(GOUT, 19, 0, 10) },
  { pnode(GPIO, 18, 0, DATAIN, 1, 2), rnode(GOUT, 19, 0, 9) },
  { pnode(GPIO, 18, 0, DATAIN, 1, 3), rnode(GOUT, 19, 0, 11) },
  { pnode(GPIO, 18, 0, DATAOUT, 1, 0), rnode(GIN, 18, 0, 16) },
  { pnode(GPIO, 18, 0, DATAOUT, 1, 1), rnode(GIN, 18, 0, 15) },
  { pnode(GPIO, 18, 0, DATAOUT, 1, 2), rnode(GIN, 18, 0, 14) },
  { pnode(GPIO, 18, 0, DATAOUT, 1, 3), rnode(GIN, 18, 0, 13) },
  { pnode(GPIO, 18, 0, DATAOUT, 1, 4), rnode(GIN, 19, 0, 0) },
  { pnode(GPIO, 18, 0, OEIN, 1, 0), rnode(GOUT, 19, 0, 6) },
  { pnode(GPIO, 18, 0, OEIN, 1, 1), rnode(GOUT, 19, 0, 7) },
  { pnode(GPIO, 18, 0, BSLIPMAX, 1, -1), rnode(GIN, 18, 0, 25) },
  { pnode(GPIO, 18, 0, CEIN, 1, -1), rnode(GOUT, 18, 0, 35) },
  { pnode(GPIO, 18, 0, CEOUT, 1, -1), rnode(GOUT, 18, 0, 36) },
  { pnode(GPIO, 18, 0, ACLR, 1, -1), rnode(GOUT, 18, 0, 26) },
  { pnode(GPIO, 18, 0, SCLR, 1, -1), rnode(GOUT, 19, 0, 5) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 18, 0, 11) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 18, 0, 9) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 18, 0, 15) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 18, 0, 13) },
  { pnode(GPIO, 18, 0, DATAIN, 2, 0), rnode(GOUT, 18, 0, 17) },
  { pnode(GPIO, 18, 0, DATAIN, 2, 1), rnode(GOUT, 18, 0, 13) },
  { pnode(GPIO, 18, 0, DATAIN, 2, 2), rnode(GOUT, 18, 0, 18) },
  { pnode(GPIO, 18, 0, DATAIN, 2, 3), rnode(GOUT, 18, 0, 23) },
  { pnode(GPIO, 18, 0, DATAOUT, 2, 0), rnode(GIN, 18, 0, 6) },
  { pnode(GPIO, 18, 0, DATAOUT, 2, 1), rnode(GIN, 18, 0, 7) },
  { pnode(GPIO, 18, 0, DATAOUT, 2, 2), rnode(GIN, 18, 0, 8) },
  { pnode(GPIO, 18, 0, DATAOUT, 2, 3), rnode(GIN, 18, 0, 11) },
  { pnode(GPIO, 18, 0, DATAOUT, 2, 4), rnode(GIN, 18, 0, 12) },
  { pnode(GPIO, 18, 0, OEIN, 2, 0), rnode(GOUT, 18, 0, 25) },
  { pnode(GPIO, 18, 0, OEIN, 2, 1), rnode(GOUT, 18, 0, 48) },
  { pnode(GPIO, 18, 0, BSLIPMAX, 2, -1), rnode(GIN, 18, 0, 5) },
  { pnode(GPIO, 18, 0, CEIN, 2, -1), rnode(GOUT, 18, 0, 2) },
  { pnode(GPIO, 18, 0, CEOUT, 2, -1), rnode(GOUT, 18, 0, 1) },
  { pnode(GPIO, 18, 0, ACLR, 2, -1), rnode(GOUT, 18, 0, 12) },
  { pnode(GPIO, 18, 0, SCLR, 2, -1), rnode(GOUT, 18, 0, 37) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 18, 0, 5) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 18, 0, 7) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 18, 0, 1) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 18, 0, 3) },
  { pnode(GPIO, 18, 0, DATAIN, 3, 0), rnode(GOUT, 18, 0, 11) },
  { pnode(GPIO, 18, 0, DATAIN, 3, 1), rnode(GOUT, 18, 0, 6) },
  { pnode(GPIO, 18, 0, DATAIN, 3, 2), rnode(GOUT, 18, 0, 7) },
  { pnode(GPIO, 18, 0, DATAIN, 3, 3), rnode(GOUT, 18, 0, 5) },
  { pnode(GPIO, 18, 0, DATAOUT, 3, 0), rnode(GIN, 18, 0, 0) },
  { pnode(GPIO, 18, 0, DATAOUT, 3, 1), rnode(GIN, 18, 0, 1) },
  { pnode(GPIO, 18, 0, DATAOUT, 3, 2), rnode(GIN, 18, 0, 2) },
  { pnode(GPIO, 18, 0, DATAOUT, 3, 3), rnode(GIN, 18, 0, 3) },
  { pnode(GPIO, 18, 0, DATAOUT, 3, 4), rnode(GIN, 18, 0, 4) },
  { pnode(GPIO, 18, 0, OEIN, 3, 0), rnode(GOUT, 18, 0, 4) },
  { pnode(GPIO, 18, 0, OEIN, 3, 1), rnode(GOUT, 18, 0, 3) },
  { pnode(GPIO, 18, 0, BSLIPMAX, 3, -1), rnode(GIN, 17, 0, 13) },
  { pnode(GPIO, 18, 0, CEIN, 3, -1), rnode(GOUT, 18, 0, 0) },
  { pnode(GPIO, 18, 0, CEOUT, 3, -1), rnode(GOUT, 18, 0, 10) },
  { pnode(GPIO, 18, 0, ACLR, 3, -1), rnode(GOUT, 18, 0, 9) },
  { pnode(GPIO, 18, 0, SCLR, 3, -1), rnode(GOUT, 18, 0, 8) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 18, 0, 4) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 18, 0, 6) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 18, 0, 0) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 18, 0, 2) },
  { pnode(GPIO, 18, 81, DATAIN, 0, 0), rnode(GOUT, 19, 81, 28) },
  { pnode(GPIO, 18, 81, DATAIN, 0, 1), rnode(GOUT, 19, 81, 34) },
  { pnode(GPIO, 18, 81, DATAIN, 0, 2), rnode(GOUT, 19, 81, 29) },
  { pnode(GPIO, 18, 81, DATAIN, 0, 3), rnode(GOUT, 19, 81, 30) },
  { pnode(GPIO, 18, 81, DATAOUT, 0, 0), rnode(GIN, 19, 81, 25) },
  { pnode(GPIO, 18, 81, DATAOUT, 0, 1), rnode(GIN, 19, 81, 24) },
  { pnode(GPIO, 18, 81, DATAOUT, 0, 2), rnode(GIN, 19, 81, 23) },
  { pnode(GPIO, 18, 81, DATAOUT, 0, 3), rnode(GIN, 19, 81, 22) },
  { pnode(GPIO, 18, 81, DATAOUT, 0, 4), rnode(GIN, 19, 81, 21) },
  { pnode(GPIO, 18, 81, OEIN, 0, 0), rnode(GOUT, 19, 81, 31) },
  { pnode(GPIO, 18, 81, OEIN, 0, 1), rnode(GOUT, 19, 81, 33) },
  { pnode(GPIO, 18, 81, BSLIPMAX, 0, -1), rnode(GIN, 19, 81, 12) },
  { pnode(GPIO, 18, 81, CEIN, 0, -1), rnode(GOUT, 19, 81, 4) },
  { pnode(GPIO, 18, 81, CEOUT, 0, -1), rnode(GOUT, 19, 81, 3) },
  { pnode(GPIO, 18, 81, ACLR, 0, -1), rnode(GOUT, 19, 81, 8) },
  { pnode(GPIO, 18, 81, SCLR, 0, -1), rnode(GOUT, 19, 81, 32) },
  { pnode(GPIO, 18, 81, CLKIN_IN, 0, 0), rnode(DCMUX, 18, 81, 10) },
  { pnode(GPIO, 18, 81, CLKIN_IN, 0, 1), rnode(DCMUX, 18, 81, 8) },
  { pnode(GPIO, 18, 81, CLKIN_OUT, 0, 0), rnode(DCMUX, 18, 81, 14) },
  { pnode(GPIO, 18, 81, CLKIN_OUT, 0, 1), rnode(DCMUX, 18, 81, 12) },
  { pnode(GPIO, 18, 81, DATAIN, 1, 0), rnode(GOUT, 19, 81, 0) },
  { pnode(GPIO, 18, 81, DATAIN, 1, 1), rnode(GOUT, 19, 81, 10) },
  { pnode(GPIO, 18, 81, DATAIN, 1, 2), rnode(GOUT, 19, 81, 9) },
  { pnode(GPIO, 18, 81, DATAIN, 1, 3), rnode(GOUT, 19, 81, 11) },
  { pnode(GPIO, 18, 81, DATAOUT, 1, 0), rnode(GIN, 18, 81, 16) },
  { pnode(GPIO, 18, 81, DATAOUT, 1, 1), rnode(GIN, 18, 81, 15) },
  { pnode(GPIO, 18, 81, DATAOUT, 1, 2), rnode(GIN, 18, 81, 14) },
  { pnode(GPIO, 18, 81, DATAOUT, 1, 3), rnode(GIN, 18, 81, 13) },
  { pnode(GPIO, 18, 81, DATAOUT, 1, 4), rnode(GIN, 19, 81, 0) },
  { pnode(GPIO, 18, 81, OEIN, 1, 0), rnode(GOUT, 19, 81, 6) },
  { pnode(GPIO, 18, 81, OEIN, 1, 1), rnode(GOUT, 19, 81, 7) },
  { pnode(GPIO, 18, 81, BSLIPMAX, 1, -1), rnode(GIN, 18, 81, 25) },
  { pnode(GPIO, 18, 81, CEIN, 1, -1), rnode(GOUT, 18, 81, 35) },
  { pnode(GPIO, 18, 81, CEOUT, 1, -1), rnode(GOUT, 18, 81, 36) },
  { pnode(GPIO, 18, 81, ACLR, 1, -1), rnode(GOUT, 18, 81, 26) },
  { pnode(GPIO, 18, 81, SCLR, 1, -1), rnode(GOUT, 19, 81, 5) },
  { pnode(GPIO, 18, 81, CLKIN_IN, 1, 0), rnode(DCMUX, 18, 81, 11) },
  { pnode(GPIO, 18, 81, CLKIN_IN, 1, 1), rnode(DCMUX, 18, 81, 9) },
  { pnode(GPIO, 18, 81, CLKIN_OUT, 1, 0), rnode(DCMUX, 18, 81, 15) },
  { pnode(GPIO, 18, 81, CLKIN_OUT, 1, 1), rnode(DCMUX, 18, 81, 13) },
  { pnode(GPIO, 18, 81, DATAIN, 2, 0), rnode(GOUT, 18, 81, 17) },
  { pnode(GPIO, 18, 81, DATAIN, 2, 1), rnode(GOUT, 18, 81, 13) },
  { pnode(GPIO, 18, 81, DATAIN, 2, 2), rnode(GOUT, 18, 81, 18) },
  { pnode(GPIO, 18, 81, DATAIN, 2, 3), rnode(GOUT, 18, 81, 23) },
  { pnode(GPIO, 18, 81, DATAOUT, 2, 0), rnode(GIN, 18, 81, 6) },
  { pnode(GPIO, 18, 81, DATAOUT, 2, 1), rnode(GIN, 18, 81, 7) },
  { pnode(GPIO, 18, 81, DATAOUT, 2, 2), rnode(GIN, 18, 81, 8) },
  { pnode(GPIO, 18, 81, DATAOUT, 2, 3), rnode(GIN, 18, 81, 11) },
  { pnode(GPIO, 18, 81, DATAOUT, 2, 4), rnode(GIN, 18, 81, 12) },
  { pnode(GPIO, 18, 81, OEIN, 2, 0), rnode(GOUT, 18, 81, 25) },
  { pnode(GPIO, 18, 81, OEIN, 2, 1), rnode(GOUT, 18, 81, 48) },
  { pnode(GPIO, 18, 81, BSLIPMAX, 2, -1), rnode(GIN, 18, 81, 5) },
  { pnode(GPIO, 18, 81, CEIN, 2, -1), rnode(GOUT, 18, 81, 2) },
  { pnode(GPIO, 18, 81, CEOUT, 2, -1), rnode(GOUT, 18, 81, 1) },
  { pnode(GPIO, 18, 81, ACLR, 2, -1), rnode(GOUT, 18, 81, 12) },
  { pnode(GPIO, 18, 81, SCLR, 2, -1), rnode(GOUT, 18, 81, 37) },
  { pnode(GPIO, 18, 81, CLKIN_IN, 2, 0), rnode(DCMUX, 18, 81, 5) },
  { pnode(GPIO, 18, 81, CLKIN_IN, 2, 1), rnode(DCMUX, 18, 81, 7) },
  { pnode(GPIO, 18, 81, CLKIN_OUT, 2, 0), rnode(DCMUX, 18, 81, 1) },
  { pnode(GPIO, 18, 81, CLKIN_OUT, 2, 1), rnode(DCMUX, 18, 81, 3) },
  { pnode(GPIO, 18, 81, DATAIN, 3, 0), rnode(GOUT, 18, 81, 11) },
  { pnode(GPIO, 18, 81, DATAIN, 3, 1), rnode(GOUT, 18, 81, 6) },
  { pnode(GPIO, 18, 81, DATAIN, 3, 2), rnode(GOUT, 18, 81, 7) },
  { pnode(GPIO, 18, 81, DATAIN, 3, 3), rnode(GOUT, 18, 81, 5) },
  { pnode(GPIO, 18, 81, DATAOUT, 3, 0), rnode(GIN, 18, 81, 0) },
  { pnode(GPIO, 18, 81, DATAOUT, 3, 1), rnode(GIN, 18, 81, 1) },
  { pnode(GPIO, 18, 81, DATAOUT, 3, 2), rnode(GIN, 18, 81, 2) },
  { pnode(GPIO, 18, 81, DATAOUT, 3, 3), rnode(GIN, 18, 81, 3) },
  { pnode(GPIO, 18, 81, DATAOUT, 3, 4), rnode(GIN, 18, 81, 4) },
  { pnode(GPIO, 18, 81, OEIN, 3, 0), rnode(GOUT, 18, 81, 4) },
  { pnode(GPIO, 18, 81, OEIN, 3, 1), rnode(GOUT, 18, 81, 3) },
  { pnode(GPIO, 18, 81, BSLIPMAX, 3, -1), rnode(GIN, 17, 81, 13) },
  { pnode(GPIO, 18, 81, CEIN, 3, -1), rnode(GOUT, 18, 81, 0) },
  { pnode(GPIO, 18, 81, CEOUT, 3, -1), rnode(GOUT, 18, 81, 10) },
  { pnode(GPIO, 18, 81, ACLR, 3, -1), rnode(GOUT, 18, 81, 9) },
  { pnode(GPIO, 18, 81, SCLR, 3, -1), rnode(GOUT, 18, 81, 8) },
  { pnode(GPIO, 18, 81, CLKIN_IN, 3, 0), rnode(DCMUX, 18, 81, 4) },
  { pnode(GPIO, 18, 81, CLKIN_IN, 3, 1), rnode(DCMUX, 18, 81, 6) },
  { pnode(GPIO, 18, 81, CLKIN_OUT, 3, 0), rnode(DCMUX, 18, 81, 0) },
  { pnode(GPIO, 18, 81, CLKIN_OUT, 3, 1), rnode(DCMUX, 18, 81, 2) },
  { pnode(GPIO, 20, 0, DATAIN, 0, 0), rnode(GOUT, 20, 0, 33) },
  { pnode(GPIO, 20, 0, DATAIN, 0, 1), rnode(GOUT, 20, 0, 32) },
  { pnode(GPIO, 20, 0, DATAIN, 0, 2), rnode(GOUT, 20, 0, 37) },
  { pnode(GPIO, 20, 0, DATAIN, 0, 3), rnode(GOUT, 20, 0, 35) },
  { pnode(GPIO, 20, 0, DATAOUT, 0, 0), rnode(GIN, 20, 0, 19) },
  { pnode(GPIO, 20, 0, DATAOUT, 0, 1), rnode(GIN, 20, 0, 18) },
  { pnode(GPIO, 20, 0, DATAOUT, 0, 2), rnode(GIN, 20, 0, 17) },
  { pnode(GPIO, 20, 0, DATAOUT, 0, 3), rnode(GIN, 20, 0, 16) },
  { pnode(GPIO, 20, 0, DATAOUT, 0, 4), rnode(GIN, 20, 0, 15) },
  { pnode(GPIO, 20, 0, OEIN, 0, 0), rnode(GOUT, 20, 0, 36) },
  { pnode(GPIO, 20, 0, OEIN, 0, 1), rnode(GOUT, 20, 0, 26) },
  { pnode(GPIO, 20, 0, BSLIPMAX, 0, -1), rnode(GIN, 20, 0, 20) },
  { pnode(GPIO, 20, 0, CEIN, 0, -1), rnode(GOUT, 20, 0, 27) },
  { pnode(GPIO, 20, 0, CEOUT, 0, -1), rnode(GOUT, 20, 0, 28) },
  { pnode(GPIO, 20, 0, ACLR, 0, -1), rnode(GOUT, 20, 0, 34) },
  { pnode(GPIO, 20, 0, SCLR, 0, -1), rnode(GOUT, 21, 0, 0) },
  { pnode(GPIO, 20, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 20, 0, 10) },
  { pnode(GPIO, 20, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 20, 0, 8) },
  { pnode(GPIO, 20, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 20, 0, 14) },
  { pnode(GPIO, 20, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 20, 0, 12) },
  { pnode(GPIO, 20, 0, DATAIN, 1, 0), rnode(GOUT, 20, 0, 41) },
  { pnode(GPIO, 20, 0, DATAIN, 1, 1), rnode(GOUT, 20, 0, 45) },
  { pnode(GPIO, 20, 0, DATAIN, 1, 2), rnode(GOUT, 20, 0, 40) },
  { pnode(GPIO, 20, 0, DATAIN, 1, 3), rnode(GOUT, 20, 0, 44) },
  { pnode(GPIO, 20, 0, DATAOUT, 1, 0), rnode(GIN, 20, 0, 25) },
  { pnode(GPIO, 20, 0, DATAOUT, 1, 1), rnode(GIN, 20, 0, 24) },
  { pnode(GPIO, 20, 0, DATAOUT, 1, 2), rnode(GIN, 20, 0, 23) },
  { pnode(GPIO, 20, 0, DATAOUT, 1, 3), rnode(GIN, 20, 0, 22) },
  { pnode(GPIO, 20, 0, DATAOUT, 1, 4), rnode(GIN, 20, 0, 21) },
  { pnode(GPIO, 20, 0, OEIN, 1, 0), rnode(GOUT, 20, 0, 39) },
  { pnode(GPIO, 20, 0, OEIN, 1, 1), rnode(GOUT, 20, 0, 43) },
  { pnode(GPIO, 20, 0, BSLIPMAX, 1, -1), rnode(GIN, 20, 0, 12) },
  { pnode(GPIO, 20, 0, CEIN, 1, -1), rnode(GOUT, 20, 0, 48) },
  { pnode(GPIO, 20, 0, CEOUT, 1, -1), rnode(GOUT, 20, 0, 47) },
  { pnode(GPIO, 20, 0, ACLR, 1, -1), rnode(GOUT, 20, 0, 42) },
  { pnode(GPIO, 20, 0, SCLR, 1, -1), rnode(GOUT, 20, 0, 38) },
  { pnode(GPIO, 20, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 20, 0, 11) },
  { pnode(GPIO, 20, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 20, 0, 9) },
  { pnode(GPIO, 20, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 20, 0, 15) },
  { pnode(GPIO, 20, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 20, 0, 13) },
  { pnode(GPIO, 20, 0, DATAIN, 2, 0), rnode(GOUT, 20, 0, 15) },
  { pnode(GPIO, 20, 0, DATAIN, 2, 1), rnode(GOUT, 20, 0, 20) },
  { pnode(GPIO, 20, 0, DATAIN, 2, 2), rnode(GOUT, 20, 0, 16) },
  { pnode(GPIO, 20, 0, DATAIN, 2, 3), rnode(GOUT, 20, 0, 21) },
  { pnode(GPIO, 20, 0, DATAOUT, 2, 0), rnode(GIN, 20, 0, 6) },
  { pnode(GPIO, 20, 0, DATAOUT, 2, 1), rnode(GIN, 20, 0, 8) },
  { pnode(GPIO, 20, 0, DATAOUT, 2, 2), rnode(GIN, 20, 0, 9) },
  { pnode(GPIO, 20, 0, DATAOUT, 2, 3), rnode(GIN, 20, 0, 10) },
  { pnode(GPIO, 20, 0, DATAOUT, 2, 4), rnode(GIN, 20, 0, 11) },
  { pnode(GPIO, 20, 0, OEIN, 2, 0), rnode(GOUT, 20, 0, 22) },
  { pnode(GPIO, 20, 0, OEIN, 2, 1), rnode(GOUT, 20, 0, 23) },
  { pnode(GPIO, 20, 0, BSLIPMAX, 2, -1), rnode(GIN, 20, 0, 5) },
  { pnode(GPIO, 20, 0, CEIN, 2, -1), rnode(GOUT, 20, 0, 2) },
  { pnode(GPIO, 20, 0, CEOUT, 2, -1), rnode(GOUT, 20, 0, 12) },
  { pnode(GPIO, 20, 0, ACLR, 2, -1), rnode(GOUT, 20, 0, 17) },
  { pnode(GPIO, 20, 0, SCLR, 2, -1), rnode(GOUT, 20, 0, 50) },
  { pnode(GPIO, 20, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 20, 0, 5) },
  { pnode(GPIO, 20, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 20, 0, 7) },
  { pnode(GPIO, 20, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 20, 0, 1) },
  { pnode(GPIO, 20, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 20, 0, 3) },
  { pnode(GPIO, 20, 0, DATAIN, 3, 0), rnode(GOUT, 20, 0, 0) },
  { pnode(GPIO, 20, 0, DATAIN, 3, 1), rnode(GOUT, 20, 0, 10) },
  { pnode(GPIO, 20, 0, DATAIN, 3, 2), rnode(GOUT, 20, 0, 9) },
  { pnode(GPIO, 20, 0, DATAIN, 3, 3), rnode(GOUT, 20, 0, 11) },
  { pnode(GPIO, 20, 0, DATAOUT, 3, 0), rnode(GIN, 20, 0, 0) },
  { pnode(GPIO, 20, 0, DATAOUT, 3, 1), rnode(GIN, 20, 0, 1) },
  { pnode(GPIO, 20, 0, DATAOUT, 3, 2), rnode(GIN, 20, 0, 2) },
  { pnode(GPIO, 20, 0, DATAOUT, 3, 3), rnode(GIN, 20, 0, 3) },
  { pnode(GPIO, 20, 0, DATAOUT, 3, 4), rnode(GIN, 20, 0, 4) },
  { pnode(GPIO, 20, 0, OEIN, 3, 0), rnode(GOUT, 20, 0, 6) },
  { pnode(GPIO, 20, 0, OEIN, 3, 1), rnode(GOUT, 20, 0, 7) },
  { pnode(GPIO, 20, 0, BSLIPMAX, 3, -1), rnode(GIN, 19, 0, 13) },
  { pnode(GPIO, 20, 0, CEIN, 3, -1), rnode(GOUT, 19, 0, 37) },
  { pnode(GPIO, 20, 0, CEOUT, 3, -1), rnode(GOUT, 19, 0, 35) },
  { pnode(GPIO, 20, 0, ACLR, 3, -1), rnode(GOUT, 19, 0, 36) },
  { pnode(GPIO, 20, 0, SCLR, 3, -1), rnode(GOUT, 20, 0, 3) },
  { pnode(GPIO, 20, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 20, 0, 4) },
  { pnode(GPIO, 20, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 20, 0, 6) },
  { pnode(GPIO, 20, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 20, 0, 0) },
  { pnode(GPIO, 20, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 20, 0, 2) },
  { pnode(GPIO, 20, 81, DATAIN, 0, 0), rnode(GOUT, 20, 81, 33) },
  { pnode(GPIO, 20, 81, DATAIN, 0, 1), rnode(GOUT, 20, 81, 32) },
  { pnode(GPIO, 20, 81, DATAIN, 0, 2), rnode(GOUT, 20, 81, 37) },
  { pnode(GPIO, 20, 81, DATAIN, 0, 3), rnode(GOUT, 20, 81, 35) },
  { pnode(GPIO, 20, 81, DATAOUT, 0, 0), rnode(GIN, 20, 81, 19) },
  { pnode(GPIO, 20, 81, DATAOUT, 0, 1), rnode(GIN, 20, 81, 18) },
  { pnode(GPIO, 20, 81, DATAOUT, 0, 2), rnode(GIN, 20, 81, 17) },
  { pnode(GPIO, 20, 81, DATAOUT, 0, 3), rnode(GIN, 20, 81, 16) },
  { pnode(GPIO, 20, 81, DATAOUT, 0, 4), rnode(GIN, 20, 81, 15) },
  { pnode(GPIO, 20, 81, OEIN, 0, 0), rnode(GOUT, 20, 81, 36) },
  { pnode(GPIO, 20, 81, OEIN, 0, 1), rnode(GOUT, 20, 81, 26) },
  { pnode(GPIO, 20, 81, BSLIPMAX, 0, -1), rnode(GIN, 20, 81, 20) },
  { pnode(GPIO, 20, 81, CEIN, 0, -1), rnode(GOUT, 20, 81, 27) },
  { pnode(GPIO, 20, 81, CEOUT, 0, -1), rnode(GOUT, 20, 81, 28) },
  { pnode(GPIO, 20, 81, ACLR, 0, -1), rnode(GOUT, 20, 81, 34) },
  { pnode(GPIO, 20, 81, SCLR, 0, -1), rnode(GOUT, 21, 81, 0) },
  { pnode(GPIO, 20, 81, CLKIN_IN, 0, 0), rnode(DCMUX, 20, 81, 10) },
  { pnode(GPIO, 20, 81, CLKIN_IN, 0, 1), rnode(DCMUX, 20, 81, 8) },
  { pnode(GPIO, 20, 81, CLKIN_OUT, 0, 0), rnode(DCMUX, 20, 81, 14) },
  { pnode(GPIO, 20, 81, CLKIN_OUT, 0, 1), rnode(DCMUX, 20, 81, 12) },
  { pnode(GPIO, 20, 81, DATAIN, 1, 0), rnode(GOUT, 20, 81, 41) },
  { pnode(GPIO, 20, 81, DATAIN, 1, 1), rnode(GOUT, 20, 81, 45) },
  { pnode(GPIO, 20, 81, DATAIN, 1, 2), rnode(GOUT, 20, 81, 40) },
  { pnode(GPIO, 20, 81, DATAIN, 1, 3), rnode(GOUT, 20, 81, 44) },
  { pnode(GPIO, 20, 81, DATAOUT, 1, 0), rnode(GIN, 20, 81, 25) },
  { pnode(GPIO, 20, 81, DATAOUT, 1, 1), rnode(GIN, 20, 81, 24) },
  { pnode(GPIO, 20, 81, DATAOUT, 1, 2), rnode(GIN, 20, 81, 23) },
  { pnode(GPIO, 20, 81, DATAOUT, 1, 3), rnode(GIN, 20, 81, 22) },
  { pnode(GPIO, 20, 81, DATAOUT, 1, 4), rnode(GIN, 20, 81, 21) },
  { pnode(GPIO, 20, 81, OEIN, 1, 0), rnode(GOUT, 20, 81, 39) },
  { pnode(GPIO, 20, 81, OEIN, 1, 1), rnode(GOUT, 20, 81, 43) },
  { pnode(GPIO, 20, 81, BSLIPMAX, 1, -1), rnode(GIN, 20, 81, 12) },
  { pnode(GPIO, 20, 81, CEIN, 1, -1), rnode(GOUT, 20, 81, 48) },
  { pnode(GPIO, 20, 81, CEOUT, 1, -1), rnode(GOUT, 20, 81, 47) },
  { pnode(GPIO, 20, 81, ACLR, 1, -1), rnode(GOUT, 20, 81, 42) },
  { pnode(GPIO, 20, 81, SCLR, 1, -1), rnode(GOUT, 20, 81, 38) },
  { pnode(GPIO, 20, 81, CLKIN_IN, 1, 0), rnode(DCMUX, 20, 81, 11) },
  { pnode(GPIO, 20, 81, CLKIN_IN, 1, 1), rnode(DCMUX, 20, 81, 9) },
  { pnode(GPIO, 20, 81, CLKIN_OUT, 1, 0), rnode(DCMUX, 20, 81, 15) },
  { pnode(GPIO, 20, 81, CLKIN_OUT, 1, 1), rnode(DCMUX, 20, 81, 13) },
  { pnode(GPIO, 20, 81, DATAIN, 2, 0), rnode(GOUT, 20, 81, 15) },
  { pnode(GPIO, 20, 81, DATAIN, 2, 1), rnode(GOUT, 20, 81, 20) },
  { pnode(GPIO, 20, 81, DATAIN, 2, 2), rnode(GOUT, 20, 81, 16) },
  { pnode(GPIO, 20, 81, DATAIN, 2, 3), rnode(GOUT, 20, 81, 21) },
  { pnode(GPIO, 20, 81, DATAOUT, 2, 0), rnode(GIN, 20, 81, 6) },
  { pnode(GPIO, 20, 81, DATAOUT, 2, 1), rnode(GIN, 20, 81, 8) },
  { pnode(GPIO, 20, 81, DATAOUT, 2, 2), rnode(GIN, 20, 81, 9) },
  { pnode(GPIO, 20, 81, DATAOUT, 2, 3), rnode(GIN, 20, 81, 10) },
  { pnode(GPIO, 20, 81, DATAOUT, 2, 4), rnode(GIN, 20, 81, 11) },
  { pnode(GPIO, 20, 81, OEIN, 2, 0), rnode(GOUT, 20, 81, 22) },
  { pnode(GPIO, 20, 81, OEIN, 2, 1), rnode(GOUT, 20, 81, 23) },
  { pnode(GPIO, 20, 81, BSLIPMAX, 2, -1), rnode(GIN, 20, 81, 5) },
  { pnode(GPIO, 20, 81, CEIN, 2, -1), rnode(GOUT, 20, 81, 2) },
  { pnode(GPIO, 20, 81, CEOUT, 2, -1), rnode(GOUT, 20, 81, 12) },
  { pnode(GPIO, 20, 81, ACLR, 2, -1), rnode(GOUT, 20, 81, 17) },
  { pnode(GPIO, 20, 81, SCLR, 2, -1), rnode(GOUT, 20, 81, 50) },
  { pnode(GPIO, 20, 81, CLKIN_IN, 2, 0), rnode(DCMUX, 20, 81, 5) },
  { pnode(GPIO, 20, 81, CLKIN_IN, 2, 1), rnode(DCMUX, 20, 81, 7) },
  { pnode(GPIO, 20, 81, CLKIN_OUT, 2, 0), rnode(DCMUX, 20, 81, 1) },
  { pnode(GPIO, 20, 81, CLKIN_OUT, 2, 1), rnode(DCMUX, 20, 81, 3) },
  { pnode(GPIO, 20, 81, DATAIN, 3, 0), rnode(GOUT, 20, 81, 0) },
  { pnode(GPIO, 20, 81, DATAIN, 3, 1), rnode(GOUT, 20, 81, 10) },
  { pnode(GPIO, 20, 81, DATAIN, 3, 2), rnode(GOUT, 20, 81, 9) },
  { pnode(GPIO, 20, 81, DATAIN, 3, 3), rnode(GOUT, 20, 81, 11) },
  { pnode(GPIO, 20, 81, DATAOUT, 3, 0), rnode(GIN, 20, 81, 0) },
  { pnode(GPIO, 20, 81, DATAOUT, 3, 1), rnode(GIN, 20, 81, 1) },
  { pnode(GPIO, 20, 81, DATAOUT, 3, 2), rnode(GIN, 20, 81, 2) },
  { pnode(GPIO, 20, 81, DATAOUT, 3, 3), rnode(GIN, 20, 81, 3) },
  { pnode(GPIO, 20, 81, DATAOUT, 3, 4), rnode(GIN, 20, 81, 4) },
  { pnode(GPIO, 20, 81, OEIN, 3, 0), rnode(GOUT, 20, 81, 6) },
  { pnode(GPIO, 20, 81, OEIN, 3, 1), rnode(GOUT, 20, 81, 7) },
  { pnode(GPIO, 20, 81, BSLIPMAX, 3, -1), rnode(GIN, 19, 81, 13) },
  { pnode(GPIO, 20, 81, CEIN, 3, -1), rnode(GOUT, 19, 81, 37) },
  { pnode(GPIO, 20, 81, CEOUT, 3, -1), rnode(GOUT, 19, 81, 35) },
  { pnode(GPIO, 20, 81, ACLR, 3, -1), rnode(GOUT, 19, 81, 36) },
  { pnode(GPIO, 20, 81, SCLR, 3, -1), rnode(GOUT, 20, 81, 3) },
  { pnode(GPIO, 20, 81, CLKIN_IN, 3, 0), rnode(DCMUX, 20, 81, 4) },
  { pnode(GPIO, 20, 81, CLKIN_IN, 3, 1), rnode(DCMUX, 20, 81, 6) },
  { pnode(GPIO, 20, 81, CLKIN_OUT, 3, 0), rnode(DCMUX, 20, 81, 0) },
  { pnode(GPIO, 20, 81, CLKIN_OUT, 3, 1), rnode(DCMUX, 20, 81, 2) },
  { pnode(GPIO, 22, 0, DATAIN, 0, 0), rnode(GOUT, 22, 0, 36) },
  { pnode(GPIO, 22, 0, DATAIN, 0, 1), rnode(GOUT, 22, 0, 26) },
  { pnode(GPIO, 22, 0, DATAIN, 0, 2), rnode(GOUT, 23, 0, 0) },
  { pnode(GPIO, 22, 0, DATAIN, 0, 3), rnode(GOUT, 23, 0, 10) },
  { pnode(GPIO, 22, 0, DATAOUT, 0, 0), rnode(GIN, 22, 0, 17) },
  { pnode(GPIO, 22, 0, DATAOUT, 0, 1), rnode(GIN, 22, 0, 16) },
  { pnode(GPIO, 22, 0, DATAOUT, 0, 2), rnode(GIN, 22, 0, 15) },
  { pnode(GPIO, 22, 0, DATAOUT, 0, 3), rnode(GIN, 22, 0, 14) },
  { pnode(GPIO, 22, 0, DATAOUT, 0, 4), rnode(GIN, 22, 0, 13) },
  { pnode(GPIO, 22, 0, OEIN, 0, 0), rnode(GOUT, 23, 0, 11) },
  { pnode(GPIO, 22, 0, OEIN, 0, 1), rnode(GOUT, 23, 0, 6) },
  { pnode(GPIO, 22, 0, BSLIPMAX, 0, -1), rnode(GIN, 22, 0, 20) },
  { pnode(GPIO, 22, 0, CEIN, 0, -1), rnode(GOUT, 22, 0, 32) },
  { pnode(GPIO, 22, 0, CEOUT, 0, -1), rnode(GOUT, 22, 0, 37) },
  { pnode(GPIO, 22, 0, ACLR, 0, -1), rnode(GOUT, 22, 0, 35) },
  { pnode(GPIO, 22, 0, SCLR, 0, -1), rnode(GOUT, 23, 0, 4) },
  { pnode(GPIO, 22, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 22, 0, 10) },
  { pnode(GPIO, 22, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 22, 0, 8) },
  { pnode(GPIO, 22, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 22, 0, 14) },
  { pnode(GPIO, 22, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 22, 0, 12) },
  { pnode(GPIO, 22, 0, DATAIN, 1, 0), rnode(GOUT, 22, 0, 7) },
  { pnode(GPIO, 22, 0, DATAIN, 1, 1), rnode(GOUT, 22, 0, 17) },
  { pnode(GPIO, 22, 0, DATAIN, 1, 2), rnode(GOUT, 22, 0, 50) },
  { pnode(GPIO, 22, 0, DATAIN, 1, 3), rnode(GOUT, 22, 0, 38) },
  { pnode(GPIO, 22, 0, DATAOUT, 1, 0), rnode(GIN, 22, 0, 5) },
  { pnode(GPIO, 22, 0, DATAOUT, 1, 1), rnode(GIN, 22, 0, 9) },
  { pnode(GPIO, 22, 0, DATAOUT, 1, 2), rnode(GIN, 22, 0, 10) },
  { pnode(GPIO, 22, 0, DATAOUT, 1, 3), rnode(GIN, 22, 0, 11) },
  { pnode(GPIO, 22, 0, DATAOUT, 1, 4), rnode(GIN, 22, 0, 12) },
  { pnode(GPIO, 22, 0, OEIN, 1, 0), rnode(GOUT, 22, 0, 30) },
  { pnode(GPIO, 22, 0, OEIN, 1, 1), rnode(GOUT, 22, 0, 31) },
  { pnode(GPIO, 22, 0, BSLIPMAX, 1, -1), rnode(GIN, 22, 0, 0) },
  { pnode(GPIO, 22, 0, CEIN, 1, -1), rnode(GOUT, 22, 0, 0) },
  { pnode(GPIO, 22, 0, CEOUT, 1, -1), rnode(GOUT, 22, 0, 10) },
  { pnode(GPIO, 22, 0, ACLR, 1, -1), rnode(GOUT, 22, 0, 9) },
  { pnode(GPIO, 22, 0, SCLR, 1, -1), rnode(GOUT, 22, 0, 33) },
  { pnode(GPIO, 22, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 22, 0, 11) },
  { pnode(GPIO, 22, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 22, 0, 9) },
  { pnode(GPIO, 22, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 22, 0, 15) },
  { pnode(GPIO, 22, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 22, 0, 13) },
  { pnode(GPIO, 22, 0, DATAIN, 2, 0), rnode(GOUT, 21, 0, 30) },
  { pnode(GPIO, 22, 0, DATAIN, 2, 1), rnode(GOUT, 21, 0, 31) },
  { pnode(GPIO, 22, 0, DATAIN, 2, 2), rnode(GOUT, 21, 0, 33) },
  { pnode(GPIO, 22, 0, DATAIN, 2, 3), rnode(GOUT, 21, 0, 32) },
  { pnode(GPIO, 22, 0, DATAOUT, 2, 0), rnode(GIN, 21, 0, 24) },
  { pnode(GPIO, 22, 0, DATAOUT, 2, 1), rnode(GIN, 21, 0, 23) },
  { pnode(GPIO, 22, 0, DATAOUT, 2, 2), rnode(GIN, 21, 0, 22) },
  { pnode(GPIO, 22, 0, DATAOUT, 2, 3), rnode(GIN, 21, 0, 21) },
  { pnode(GPIO, 22, 0, DATAOUT, 2, 4), rnode(GIN, 21, 0, 20) },
  { pnode(GPIO, 22, 0, OEIN, 2, 0), rnode(GOUT, 21, 0, 37) },
  { pnode(GPIO, 22, 0, OEIN, 2, 1), rnode(GOUT, 21, 0, 36) },
  { pnode(GPIO, 22, 0, BSLIPMAX, 2, -1), rnode(GIN, 21, 0, 12) },
  { pnode(GPIO, 22, 0, CEIN, 2, -1), rnode(GOUT, 21, 0, 25) },
  { pnode(GPIO, 22, 0, CEOUT, 2, -1), rnode(GOUT, 21, 0, 50) },
  { pnode(GPIO, 22, 0, ACLR, 2, -1), rnode(GOUT, 21, 0, 49) },
  { pnode(GPIO, 22, 0, SCLR, 2, -1), rnode(GOUT, 21, 0, 26) },
  { pnode(GPIO, 22, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 22, 0, 5) },
  { pnode(GPIO, 22, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 22, 0, 7) },
  { pnode(GPIO, 22, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 22, 0, 1) },
  { pnode(GPIO, 22, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 22, 0, 3) },
  { pnode(GPIO, 22, 0, DATAIN, 3, 0), rnode(GOUT, 21, 0, 6) },
  { pnode(GPIO, 22, 0, DATAIN, 3, 1), rnode(GOUT, 21, 0, 7) },
  { pnode(GPIO, 22, 0, DATAIN, 3, 2), rnode(GOUT, 21, 0, 5) },
  { pnode(GPIO, 22, 0, DATAIN, 3, 3), rnode(GOUT, 21, 0, 4) },
  { pnode(GPIO, 22, 0, DATAOUT, 3, 0), rnode(GIN, 21, 0, 0) },
  { pnode(GPIO, 22, 0, DATAOUT, 3, 1), rnode(GIN, 21, 0, 1) },
  { pnode(GPIO, 22, 0, DATAOUT, 3, 2), rnode(GIN, 21, 0, 2) },
  { pnode(GPIO, 22, 0, DATAOUT, 3, 3), rnode(GIN, 21, 0, 3) },
  { pnode(GPIO, 22, 0, DATAOUT, 3, 4), rnode(GIN, 21, 0, 4) },
  { pnode(GPIO, 22, 0, OEIN, 3, 0), rnode(GOUT, 21, 0, 3) },
  { pnode(GPIO, 22, 0, OEIN, 3, 1), rnode(GOUT, 21, 0, 8) },
  { pnode(GPIO, 22, 0, BSLIPMAX, 3, -1), rnode(GIN, 20, 0, 13) },
  { pnode(GPIO, 22, 0, CEIN, 3, -1), rnode(GOUT, 21, 0, 10) },
  { pnode(GPIO, 22, 0, CEOUT, 3, -1), rnode(GOUT, 21, 0, 9) },
  { pnode(GPIO, 22, 0, ACLR, 3, -1), rnode(GOUT, 21, 0, 11) },
  { pnode(GPIO, 22, 0, SCLR, 3, -1), rnode(GOUT, 21, 0, 16) },
  { pnode(GPIO, 22, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 22, 0, 4) },
  { pnode(GPIO, 22, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 22, 0, 6) },
  { pnode(GPIO, 22, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 22, 0, 0) },
  { pnode(GPIO, 22, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 22, 0, 2) },
  { pnode(GPIO, 22, 81, DATAIN, 0, 0), rnode(GOUT, 22, 81, 36) },
  { pnode(GPIO, 22, 81, DATAIN, 0, 1), rnode(GOUT, 22, 81, 26) },
  { pnode(GPIO, 22, 81, DATAIN, 0, 2), rnode(GOUT, 23, 81, 0) },
  { pnode(GPIO, 22, 81, DATAIN, 0, 3), rnode(GOUT, 23, 81, 10) },
  { pnode(GPIO, 22, 81, DATAOUT, 0, 0), rnode(GIN, 22, 81, 17) },
  { pnode(GPIO, 22, 81, DATAOUT, 0, 1), rnode(GIN, 22, 81, 16) },
  { pnode(GPIO, 22, 81, DATAOUT, 0, 2), rnode(GIN, 22, 81, 15) },
  { pnode(GPIO, 22, 81, DATAOUT, 0, 3), rnode(GIN, 22, 81, 14) },
  { pnode(GPIO, 22, 81, DATAOUT, 0, 4), rnode(GIN, 22, 81, 13) },
  { pnode(GPIO, 22, 81, OEIN, 0, 0), rnode(GOUT, 23, 81, 11) },
  { pnode(GPIO, 22, 81, OEIN, 0, 1), rnode(GOUT, 23, 81, 6) },
  { pnode(GPIO, 22, 81, BSLIPMAX, 0, -1), rnode(GIN, 22, 81, 20) },
  { pnode(GPIO, 22, 81, CEIN, 0, -1), rnode(GOUT, 22, 81, 32) },
  { pnode(GPIO, 22, 81, CEOUT, 0, -1), rnode(GOUT, 22, 81, 37) },
  { pnode(GPIO, 22, 81, ACLR, 0, -1), rnode(GOUT, 22, 81, 35) },
  { pnode(GPIO, 22, 81, SCLR, 0, -1), rnode(GOUT, 23, 81, 4) },
  { pnode(GPIO, 22, 81, CLKIN_IN, 0, 0), rnode(DCMUX, 22, 81, 10) },
  { pnode(GPIO, 22, 81, CLKIN_IN, 0, 1), rnode(DCMUX, 22, 81, 8) },
  { pnode(GPIO, 22, 81, CLKIN_OUT, 0, 0), rnode(DCMUX, 22, 81, 14) },
  { pnode(GPIO, 22, 81, CLKIN_OUT, 0, 1), rnode(DCMUX, 22, 81, 12) },
  { pnode(GPIO, 22, 81, DATAIN, 1, 0), rnode(GOUT, 22, 81, 7) },
  { pnode(GPIO, 22, 81, DATAIN, 1, 1), rnode(GOUT, 22, 81, 17) },
  { pnode(GPIO, 22, 81, DATAIN, 1, 2), rnode(GOUT, 22, 81, 50) },
  { pnode(GPIO, 22, 81, DATAIN, 1, 3), rnode(GOUT, 22, 81, 38) },
  { pnode(GPIO, 22, 81, DATAOUT, 1, 0), rnode(GIN, 22, 81, 5) },
  { pnode(GPIO, 22, 81, DATAOUT, 1, 1), rnode(GIN, 22, 81, 9) },
  { pnode(GPIO, 22, 81, DATAOUT, 1, 2), rnode(GIN, 22, 81, 10) },
  { pnode(GPIO, 22, 81, DATAOUT, 1, 3), rnode(GIN, 22, 81, 11) },
  { pnode(GPIO, 22, 81, DATAOUT, 1, 4), rnode(GIN, 22, 81, 12) },
  { pnode(GPIO, 22, 81, OEIN, 1, 0), rnode(GOUT, 22, 81, 30) },
  { pnode(GPIO, 22, 81, OEIN, 1, 1), rnode(GOUT, 22, 81, 31) },
  { pnode(GPIO, 22, 81, BSLIPMAX, 1, -1), rnode(GIN, 22, 81, 0) },
  { pnode(GPIO, 22, 81, CEIN, 1, -1), rnode(GOUT, 22, 81, 0) },
  { pnode(GPIO, 22, 81, CEOUT, 1, -1), rnode(GOUT, 22, 81, 10) },
  { pnode(GPIO, 22, 81, ACLR, 1, -1), rnode(GOUT, 22, 81, 9) },
  { pnode(GPIO, 22, 81, SCLR, 1, -1), rnode(GOUT, 22, 81, 33) },
  { pnode(GPIO, 22, 81, CLKIN_IN, 1, 0), rnode(DCMUX, 22, 81, 11) },
  { pnode(GPIO, 22, 81, CLKIN_IN, 1, 1), rnode(DCMUX, 22, 81, 9) },
  { pnode(GPIO, 22, 81, CLKIN_OUT, 1, 0), rnode(DCMUX, 22, 81, 15) },
  { pnode(GPIO, 22, 81, CLKIN_OUT, 1, 1), rnode(DCMUX, 22, 81, 13) },
  { pnode(GPIO, 22, 81, DATAIN, 2, 0), rnode(GOUT, 21, 81, 30) },
  { pnode(GPIO, 22, 81, DATAIN, 2, 1), rnode(GOUT, 21, 81, 31) },
  { pnode(GPIO, 22, 81, DATAIN, 2, 2), rnode(GOUT, 21, 81, 33) },
  { pnode(GPIO, 22, 81, DATAIN, 2, 3), rnode(GOUT, 21, 81, 32) },
  { pnode(GPIO, 22, 81, DATAOUT, 2, 0), rnode(GIN, 21, 81, 24) },
  { pnode(GPIO, 22, 81, DATAOUT, 2, 1), rnode(GIN, 21, 81, 23) },
  { pnode(GPIO, 22, 81, DATAOUT, 2, 2), rnode(GIN, 21, 81, 22) },
  { pnode(GPIO, 22, 81, DATAOUT, 2, 3), rnode(GIN, 21, 81, 21) },
  { pnode(GPIO, 22, 81, DATAOUT, 2, 4), rnode(GIN, 21, 81, 20) },
  { pnode(GPIO, 22, 81, OEIN, 2, 0), rnode(GOUT, 21, 81, 37) },
  { pnode(GPIO, 22, 81, OEIN, 2, 1), rnode(GOUT, 21, 81, 36) },
  { pnode(GPIO, 22, 81, BSLIPMAX, 2, -1), rnode(GIN, 21, 81, 12) },
  { pnode(GPIO, 22, 81, CEIN, 2, -1), rnode(GOUT, 21, 81, 25) },
  { pnode(GPIO, 22, 81, CEOUT, 2, -1), rnode(GOUT, 21, 81, 50) },
  { pnode(GPIO, 22, 81, ACLR, 2, -1), rnode(GOUT, 21, 81, 49) },
  { pnode(GPIO, 22, 81, SCLR, 2, -1), rnode(GOUT, 21, 81, 26) },
  { pnode(GPIO, 22, 81, CLKIN_IN, 2, 0), rnode(DCMUX, 22, 81, 5) },
  { pnode(GPIO, 22, 81, CLKIN_IN, 2, 1), rnode(DCMUX, 22, 81, 7) },
  { pnode(GPIO, 22, 81, CLKIN_OUT, 2, 0), rnode(DCMUX, 22, 81, 1) },
  { pnode(GPIO, 22, 81, CLKIN_OUT, 2, 1), rnode(DCMUX, 22, 81, 3) },
  { pnode(GPIO, 22, 81, DATAIN, 3, 0), rnode(GOUT, 21, 81, 6) },
  { pnode(GPIO, 22, 81, DATAIN, 3, 1), rnode(GOUT, 21, 81, 7) },
  { pnode(GPIO, 22, 81, DATAIN, 3, 2), rnode(GOUT, 21, 81, 5) },
  { pnode(GPIO, 22, 81, DATAIN, 3, 3), rnode(GOUT, 21, 81, 4) },
  { pnode(GPIO, 22, 81, DATAOUT, 3, 0), rnode(GIN, 21, 81, 0) },
  { pnode(GPIO, 22, 81, DATAOUT, 3, 1), rnode(GIN, 21, 81, 1) },
  { pnode(GPIO, 22, 81, DATAOUT, 3, 2), rnode(GIN, 21, 81, 2) },
  { pnode(GPIO, 22, 81, DATAOUT, 3, 3), rnode(GIN, 21, 81, 3) },
  { pnode(GPIO, 22, 81, DATAOUT, 3, 4), rnode(GIN, 21, 81, 4) },
  { pnode(GPIO, 22, 81, OEIN, 3, 0), rnode(GOUT, 21, 81, 3) },
  { pnode(GPIO, 22, 81, OEIN, 3, 1), rnode(GOUT, 21, 81, 8) },
  { pnode(GPIO, 22, 81, BSLIPMAX, 3, -1), rnode(GIN, 20, 81, 13) },
  { pnode(GPIO, 22, 81, CEIN, 3, -1), rnode(GOUT, 21, 81, 10) },
  { pnode(GPIO, 22, 81, CEOUT, 3, -1), rnode(GOUT, 21, 81, 9) },
  { pnode(GPIO, 22, 81, ACLR, 3, -1), rnode(GOUT, 21, 81, 11) },
  { pnode(GPIO, 22, 81, SCLR, 3, -1), rnode(GOUT, 21, 81, 16) },
  { pnode(GPIO, 22, 81, CLKIN_IN, 3, 0), rnode(DCMUX, 22, 81, 4) },
  { pnode(GPIO, 22, 81, CLKIN_IN, 3, 1), rnode(DCMUX, 22, 81, 6) },
  { pnode(GPIO, 22, 81, CLKIN_OUT, 3, 0), rnode(DCMUX, 22, 81, 0) },
  { pnode(GPIO, 22, 81, CLKIN_OUT, 3, 1), rnode(DCMUX, 22, 81, 2) },
  { pnode(GPIO, 24, 0, DATAIN, 0, 0), rnode(GOUT, 25, 0, 4) },
  { pnode(GPIO, 24, 0, DATAIN, 0, 1), rnode(GOUT, 25, 0, 3) },
  { pnode(GPIO, 24, 0, DATAIN, 0, 2), rnode(GOUT, 25, 0, 8) },
  { pnode(GPIO, 24, 0, DATAIN, 0, 3), rnode(GOUT, 25, 0, 2) },
  { pnode(GPIO, 24, 0, DATAOUT, 0, 0), rnode(GIN, 25, 0, 0) },
  { pnode(GPIO, 24, 0, DATAOUT, 0, 1), rnode(GIN, 25, 0, 1) },
  { pnode(GPIO, 24, 0, DATAOUT, 0, 2), rnode(GIN, 25, 0, 2) },
  { pnode(GPIO, 24, 0, DATAOUT, 0, 3), rnode(GIN, 25, 0, 3) },
  { pnode(GPIO, 24, 0, DATAOUT, 0, 4), rnode(GIN, 25, 0, 4) },
  { pnode(GPIO, 24, 0, OEIN, 0, 0), rnode(GOUT, 25, 0, 12) },
  { pnode(GPIO, 24, 0, OEIN, 0, 1), rnode(GOUT, 25, 0, 17) },
  { pnode(GPIO, 24, 0, BSLIPMAX, 0, -1), rnode(GIN, 24, 0, 13) },
  { pnode(GPIO, 24, 0, CEIN, 0, -1), rnode(GOUT, 25, 0, 0) },
  { pnode(GPIO, 24, 0, CEOUT, 0, -1), rnode(GOUT, 25, 0, 10) },
  { pnode(GPIO, 24, 0, ACLR, 0, -1), rnode(GOUT, 25, 0, 11) },
  { pnode(GPIO, 24, 0, SCLR, 0, -1), rnode(GOUT, 25, 0, 13) },
  { pnode(GPIO, 24, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 24, 0, 10) },
  { pnode(GPIO, 24, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 24, 0, 8) },
  { pnode(GPIO, 24, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 24, 0, 14) },
  { pnode(GPIO, 24, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 24, 0, 12) },
  { pnode(GPIO, 24, 0, DATAIN, 1, 0), rnode(GOUT, 24, 0, 27) },
  { pnode(GPIO, 24, 0, DATAIN, 1, 1), rnode(GOUT, 24, 0, 28) },
  { pnode(GPIO, 24, 0, DATAIN, 1, 2), rnode(GOUT, 24, 0, 34) },
  { pnode(GPIO, 24, 0, DATAIN, 1, 3), rnode(GOUT, 24, 0, 29) },
  { pnode(GPIO, 24, 0, DATAOUT, 1, 0), rnode(GIN, 24, 0, 25) },
  { pnode(GPIO, 24, 0, DATAOUT, 1, 1), rnode(GIN, 24, 0, 22) },
  { pnode(GPIO, 24, 0, DATAOUT, 1, 2), rnode(GIN, 24, 0, 18) },
  { pnode(GPIO, 24, 0, DATAOUT, 1, 3), rnode(GIN, 24, 0, 15) },
  { pnode(GPIO, 24, 0, DATAOUT, 1, 4), rnode(GIN, 24, 0, 14) },
  { pnode(GPIO, 24, 0, OEIN, 1, 0), rnode(GOUT, 24, 0, 31) },
  { pnode(GPIO, 24, 0, OEIN, 1, 1), rnode(GOUT, 24, 0, 32) },
  { pnode(GPIO, 24, 0, BSLIPMAX, 1, -1), rnode(GIN, 24, 0, 12) },
  { pnode(GPIO, 24, 0, CEIN, 1, -1), rnode(GOUT, 24, 0, 25) },
  { pnode(GPIO, 24, 0, CEOUT, 1, -1), rnode(GOUT, 24, 0, 45) },
  { pnode(GPIO, 24, 0, ACLR, 1, -1), rnode(GOUT, 24, 0, 44) },
  { pnode(GPIO, 24, 0, SCLR, 1, -1), rnode(GOUT, 24, 0, 36) },
  { pnode(GPIO, 24, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 24, 0, 11) },
  { pnode(GPIO, 24, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 24, 0, 9) },
  { pnode(GPIO, 24, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 24, 0, 15) },
  { pnode(GPIO, 24, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 24, 0, 13) },
  { pnode(GPIO, 24, 0, DATAIN, 2, 0), rnode(GOUT, 24, 0, 0) },
  { pnode(GPIO, 24, 0, DATAIN, 2, 1), rnode(GOUT, 24, 0, 10) },
  { pnode(GPIO, 24, 0, DATAIN, 2, 2), rnode(GOUT, 24, 0, 9) },
  { pnode(GPIO, 24, 0, DATAIN, 2, 3), rnode(GOUT, 24, 0, 11) },
  { pnode(GPIO, 24, 0, DATAOUT, 2, 0), rnode(GIN, 23, 0, 13) },
  { pnode(GPIO, 24, 0, DATAOUT, 2, 1), rnode(GIN, 24, 0, 0) },
  { pnode(GPIO, 24, 0, DATAOUT, 2, 2), rnode(GIN, 24, 0, 1) },
  { pnode(GPIO, 24, 0, DATAOUT, 2, 3), rnode(GIN, 24, 0, 2) },
  { pnode(GPIO, 24, 0, DATAOUT, 2, 4), rnode(GIN, 24, 0, 3) },
  { pnode(GPIO, 24, 0, OEIN, 2, 0), rnode(GOUT, 24, 0, 7) },
  { pnode(GPIO, 24, 0, OEIN, 2, 1), rnode(GOUT, 24, 0, 5) },
  { pnode(GPIO, 24, 0, BSLIPMAX, 2, -1), rnode(GIN, 23, 0, 15) },
  { pnode(GPIO, 24, 0, CEIN, 2, -1), rnode(GOUT, 23, 0, 32) },
  { pnode(GPIO, 24, 0, CEOUT, 2, -1), rnode(GOUT, 23, 0, 37) },
  { pnode(GPIO, 24, 0, ACLR, 2, -1), rnode(GOUT, 23, 0, 35) },
  { pnode(GPIO, 24, 0, SCLR, 2, -1), rnode(GOUT, 24, 0, 3) },
  { pnode(GPIO, 24, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 24, 0, 5) },
  { pnode(GPIO, 24, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 24, 0, 7) },
  { pnode(GPIO, 24, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 24, 0, 1) },
  { pnode(GPIO, 24, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 24, 0, 3) },
  { pnode(GPIO, 24, 0, DATAIN, 3, 0), rnode(GOUT, 23, 0, 25) },
  { pnode(GPIO, 24, 0, DATAIN, 3, 1), rnode(GOUT, 23, 0, 50) },
  { pnode(GPIO, 24, 0, DATAIN, 3, 2), rnode(GOUT, 23, 0, 27) },
  { pnode(GPIO, 24, 0, DATAIN, 3, 3), rnode(GOUT, 23, 0, 29) },
  { pnode(GPIO, 24, 0, DATAOUT, 3, 0), rnode(GIN, 23, 0, 8) },
  { pnode(GPIO, 24, 0, DATAOUT, 3, 1), rnode(GIN, 23, 0, 9) },
  { pnode(GPIO, 24, 0, DATAOUT, 3, 2), rnode(GIN, 23, 0, 10) },
  { pnode(GPIO, 24, 0, DATAOUT, 3, 3), rnode(GIN, 23, 0, 11) },
  { pnode(GPIO, 24, 0, DATAOUT, 3, 4), rnode(GIN, 23, 0, 12) },
  { pnode(GPIO, 24, 0, OEIN, 3, 0), rnode(GOUT, 23, 0, 30) },
  { pnode(GPIO, 24, 0, OEIN, 3, 1), rnode(GOUT, 23, 0, 31) },
  { pnode(GPIO, 24, 0, BSLIPMAX, 3, -1), rnode(GIN, 23, 0, 0) },
  { pnode(GPIO, 24, 0, CEIN, 3, -1), rnode(GOUT, 23, 0, 8) },
  { pnode(GPIO, 24, 0, CEOUT, 3, -1), rnode(GOUT, 23, 0, 1) },
  { pnode(GPIO, 24, 0, ACLR, 3, -1), rnode(GOUT, 23, 0, 12) },
  { pnode(GPIO, 24, 0, SCLR, 3, -1), rnode(GOUT, 23, 0, 33) },
  { pnode(GPIO, 24, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 24, 0, 4) },
  { pnode(GPIO, 24, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 24, 0, 6) },
  { pnode(GPIO, 24, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 24, 0, 0) },
  { pnode(GPIO, 24, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 24, 0, 2) },
  { pnode(GPIO, 24, 81, DATAIN, 0, 0), rnode(GOUT, 25, 81, 4) },
  { pnode(GPIO, 24, 81, DATAIN, 0, 1), rnode(GOUT, 25, 81, 3) },
  { pnode(GPIO, 24, 81, DATAIN, 0, 2), rnode(GOUT, 25, 81, 8) },
  { pnode(GPIO, 24, 81, DATAIN, 0, 3), rnode(GOUT, 25, 81, 2) },
  { pnode(GPIO, 24, 81, DATAOUT, 0, 0), rnode(GIN, 25, 81, 0) },
  { pnode(GPIO, 24, 81, DATAOUT, 0, 1), rnode(GIN, 25, 81, 1) },
  { pnode(GPIO, 24, 81, DATAOUT, 0, 2), rnode(GIN, 25, 81, 2) },
  { pnode(GPIO, 24, 81, DATAOUT, 0, 3), rnode(GIN, 25, 81, 3) },
  { pnode(GPIO, 24, 81, DATAOUT, 0, 4), rnode(GIN, 25, 81, 4) },
  { pnode(GPIO, 24, 81, OEIN, 0, 0), rnode(GOUT, 25, 81, 12) },
  { pnode(GPIO, 24, 81, OEIN, 0, 1), rnode(GOUT, 25, 81, 17) },
  { pnode(GPIO, 24, 81, BSLIPMAX, 0, -1), rnode(GIN, 24, 81, 13) },
  { pnode(GPIO, 24, 81, CEIN, 0, -1), rnode(GOUT, 25, 81, 0) },
  { pnode(GPIO, 24, 81, CEOUT, 0, -1), rnode(GOUT, 25, 81, 10) },
  { pnode(GPIO, 24, 81, ACLR, 0, -1), rnode(GOUT, 25, 81, 11) },
  { pnode(GPIO, 24, 81, SCLR, 0, -1), rnode(GOUT, 25, 81, 13) },
  { pnode(GPIO, 24, 81, CLKIN_IN, 0, 0), rnode(DCMUX, 24, 81, 10) },
  { pnode(GPIO, 24, 81, CLKIN_IN, 0, 1), rnode(DCMUX, 24, 81, 8) },
  { pnode(GPIO, 24, 81, CLKIN_OUT, 0, 0), rnode(DCMUX, 24, 81, 14) },
  { pnode(GPIO, 24, 81, CLKIN_OUT, 0, 1), rnode(DCMUX, 24, 81, 12) },
  { pnode(GPIO, 24, 81, DATAIN, 1, 0), rnode(GOUT, 24, 81, 27) },
  { pnode(GPIO, 24, 81, DATAIN, 1, 1), rnode(GOUT, 24, 81, 28) },
  { pnode(GPIO, 24, 81, DATAIN, 1, 2), rnode(GOUT, 24, 81, 34) },
  { pnode(GPIO, 24, 81, DATAIN, 1, 3), rnode(GOUT, 24, 81, 29) },
  { pnode(GPIO, 24, 81, DATAOUT, 1, 0), rnode(GIN, 24, 81, 25) },
  { pnode(GPIO, 24, 81, DATAOUT, 1, 1), rnode(GIN, 24, 81, 22) },
  { pnode(GPIO, 24, 81, DATAOUT, 1, 2), rnode(GIN, 24, 81, 18) },
  { pnode(GPIO, 24, 81, DATAOUT, 1, 3), rnode(GIN, 24, 81, 15) },
  { pnode(GPIO, 24, 81, DATAOUT, 1, 4), rnode(GIN, 24, 81, 14) },
  { pnode(GPIO, 24, 81, OEIN, 1, 0), rnode(GOUT, 24, 81, 31) },
  { pnode(GPIO, 24, 81, OEIN, 1, 1), rnode(GOUT, 24, 81, 32) },
  { pnode(GPIO, 24, 81, BSLIPMAX, 1, -1), rnode(GIN, 24, 81, 12) },
  { pnode(GPIO, 24, 81, CEIN, 1, -1), rnode(GOUT, 24, 81, 25) },
  { pnode(GPIO, 24, 81, CEOUT, 1, -1), rnode(GOUT, 24, 81, 45) },
  { pnode(GPIO, 24, 81, ACLR, 1, -1), rnode(GOUT, 24, 81, 44) },
  { pnode(GPIO, 24, 81, SCLR, 1, -1), rnode(GOUT, 24, 81, 36) },
  { pnode(GPIO, 24, 81, CLKIN_IN, 1, 0), rnode(DCMUX, 24, 81, 11) },
  { pnode(GPIO, 24, 81, CLKIN_IN, 1, 1), rnode(DCMUX, 24, 81, 9) },
  { pnode(GPIO, 24, 81, CLKIN_OUT, 1, 0), rnode(DCMUX, 24, 81, 15) },
  { pnode(GPIO, 24, 81, CLKIN_OUT, 1, 1), rnode(DCMUX, 24, 81, 13) },
  { pnode(GPIO, 24, 81, DATAIN, 2, 0), rnode(GOUT, 24, 81, 0) },
  { pnode(GPIO, 24, 81, DATAIN, 2, 1), rnode(GOUT, 24, 81, 10) },
  { pnode(GPIO, 24, 81, DATAIN, 2, 2), rnode(GOUT, 24, 81, 9) },
  { pnode(GPIO, 24, 81, DATAIN, 2, 3), rnode(GOUT, 24, 81, 11) },
  { pnode(GPIO, 24, 81, DATAOUT, 2, 0), rnode(GIN, 23, 81, 13) },
  { pnode(GPIO, 24, 81, DATAOUT, 2, 1), rnode(GIN, 24, 81, 0) },
  { pnode(GPIO, 24, 81, DATAOUT, 2, 2), rnode(GIN, 24, 81, 1) },
  { pnode(GPIO, 24, 81, DATAOUT, 2, 3), rnode(GIN, 24, 81, 2) },
  { pnode(GPIO, 24, 81, DATAOUT, 2, 4), rnode(GIN, 24, 81, 3) },
  { pnode(GPIO, 24, 81, OEIN, 2, 0), rnode(GOUT, 24, 81, 7) },
  { pnode(GPIO, 24, 81, OEIN, 2, 1), rnode(GOUT, 24, 81, 5) },
  { pnode(GPIO, 24, 81, BSLIPMAX, 2, -1), rnode(GIN, 23, 81, 15) },
  { pnode(GPIO, 24, 81, CEIN, 2, -1), rnode(GOUT, 23, 81, 32) },
  { pnode(GPIO, 24, 81, CEOUT, 2, -1), rnode(GOUT, 23, 81, 37) },
  { pnode(GPIO, 24, 81, ACLR, 2, -1), rnode(GOUT, 23, 81, 35) },
  { pnode(GPIO, 24, 81, SCLR, 2, -1), rnode(GOUT, 24, 81, 3) },
  { pnode(GPIO, 24, 81, CLKIN_IN, 2, 0), rnode(DCMUX, 24, 81, 5) },
  { pnode(GPIO, 24, 81, CLKIN_IN, 2, 1), rnode(DCMUX, 24, 81, 7) },
  { pnode(GPIO, 24, 81, CLKIN_OUT, 2, 0), rnode(DCMUX, 24, 81, 1) },
  { pnode(GPIO, 24, 81, CLKIN_OUT, 2, 1), rnode(DCMUX, 24, 81, 3) },
  { pnode(GPIO, 24, 81, DATAIN, 3, 0), rnode(GOUT, 23, 81, 25) },
  { pnode(GPIO, 24, 81, DATAIN, 3, 1), rnode(GOUT, 23, 81, 50) },
  { pnode(GPIO, 24, 81, DATAIN, 3, 2), rnode(GOUT, 23, 81, 27) },
  { pnode(GPIO, 24, 81, DATAIN, 3, 3), rnode(GOUT, 23, 81, 29) },
  { pnode(GPIO, 24, 81, DATAOUT, 3, 0), rnode(GIN, 23, 81, 8) },
  { pnode(GPIO, 24, 81, DATAOUT, 3, 1), rnode(GIN, 23, 81, 9) },
  { pnode(GPIO, 24, 81, DATAOUT, 3, 2), rnode(GIN, 23, 81, 10) },
  { pnode(GPIO, 24, 81, DATAOUT, 3, 3), rnode(GIN, 23, 81, 11) },
  { pnode(GPIO, 24, 81, DATAOUT, 3, 4), rnode(GIN, 23, 81, 12) },
  { pnode(GPIO, 24, 81, OEIN, 3, 0), rnode(GOUT, 23, 81, 30) },
  { pnode(GPIO, 24, 81, OEIN, 3, 1), rnode(GOUT, 23, 81, 31) },
  { pnode(GPIO, 24, 81, BSLIPMAX, 3, -1), rnode(GIN, 23, 81, 0) },
  { pnode(GPIO, 24, 81, CEIN, 3, -1), rnode(GOUT, 23, 81, 8) },
  { pnode(GPIO, 24, 81, CEOUT, 3, -1), rnode(GOUT, 23, 81, 1) },
  { pnode(GPIO, 24, 81, ACLR, 3, -1), rnode(GOUT, 23, 81, 12) },
  { pnode(GPIO, 24, 81, SCLR, 3, -1), rnode(GOUT, 23, 81, 33) },
  { pnode(GPIO, 24, 81, CLKIN_IN, 3, 0), rnode(DCMUX, 24, 81, 4) },
  { pnode(GPIO, 24, 81, CLKIN_IN, 3, 1), rnode(DCMUX, 24, 81, 6) },
  { pnode(GPIO, 24, 81, CLKIN_OUT, 3, 0), rnode(DCMUX, 24, 81, 0) },
  { pnode(GPIO, 24, 81, CLKIN_OUT, 3, 1), rnode(DCMUX, 24, 81, 2) },
  { pnode(GPIO, 26, 0, DATAOUT, 0, 0), rnode(GIN, 26, 0, 18) },
  { pnode(GPIO, 26, 0, DATAOUT, 0, 1), rnode(GIN, 26, 0, 17) },
  { pnode(GPIO, 26, 0, DATAOUT, 0, 2), rnode(GIN, 26, 0, 16) },
  { pnode(GPIO, 26, 0, DATAOUT, 0, 3), rnode(GIN, 26, 0, 15) },
  { pnode(GPIO, 26, 0, DATAOUT, 0, 4), rnode(GIN, 26, 0, 14) },
  { pnode(GPIO, 26, 0, OEIN, 0, 0), rnode(GOUT, 26, 0, 32) },
  { pnode(GPIO, 26, 0, OEIN, 0, 1), rnode(GOUT, 26, 0, 37) },
  { pnode(GPIO, 26, 0, BSLIPMAX, 0, -1), rnode(GIN, 26, 0, 19) },
  { pnode(GPIO, 26, 0, CEIN, 0, -1), rnode(GOUT, 26, 0, 43) },
  { pnode(GPIO, 26, 0, CEOUT, 0, -1), rnode(GOUT, 26, 0, 38) },
  { pnode(GPIO, 26, 0, SCLR, 0, -1), rnode(GOUT, 26, 0, 35) },
  { pnode(GPIO, 26, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 26, 0, 10) },
  { pnode(GPIO, 26, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 26, 0, 8) },
  { pnode(GPIO, 26, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 26, 0, 14) },
  { pnode(GPIO, 26, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 26, 0, 12) },
  { pnode(GPIO, 26, 0, DATAOUT, 1, 0), rnode(GIN, 26, 0, 24) },
  { pnode(GPIO, 26, 0, DATAOUT, 1, 1), rnode(GIN, 26, 0, 23) },
  { pnode(GPIO, 26, 0, DATAOUT, 1, 2), rnode(GIN, 26, 0, 22) },
  { pnode(GPIO, 26, 0, DATAOUT, 1, 3), rnode(GIN, 26, 0, 21) },
  { pnode(GPIO, 26, 0, DATAOUT, 1, 4), rnode(GIN, 26, 0, 20) },
  { pnode(GPIO, 26, 0, OEIN, 1, 0), rnode(GOUT, 26, 0, 40) },
  { pnode(GPIO, 26, 0, OEIN, 1, 1), rnode(GOUT, 26, 0, 44) },
  { pnode(GPIO, 26, 0, BSLIPMAX, 1, -1), rnode(GIN, 26, 0, 25) },
  { pnode(GPIO, 26, 0, CEIN, 1, -1), rnode(GOUT, 26, 0, 49) },
  { pnode(GPIO, 26, 0, CEOUT, 1, -1), rnode(GOUT, 26, 0, 48) },
  { pnode(GPIO, 26, 0, SCLR, 1, -1), rnode(GOUT, 26, 0, 39) },
  { pnode(GPIO, 26, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 26, 0, 11) },
  { pnode(GPIO, 26, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 26, 0, 9) },
  { pnode(GPIO, 26, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 26, 0, 15) },
  { pnode(GPIO, 26, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 26, 0, 13) },
  { pnode(GPIO, 26, 0, DATAOUT, 2, 0), rnode(GIN, 26, 0, 8) },
  { pnode(GPIO, 26, 0, DATAOUT, 2, 1), rnode(GIN, 26, 0, 9) },
  { pnode(GPIO, 26, 0, DATAOUT, 2, 2), rnode(GIN, 26, 0, 10) },
  { pnode(GPIO, 26, 0, DATAOUT, 2, 3), rnode(GIN, 26, 0, 11) },
  { pnode(GPIO, 26, 0, DATAOUT, 2, 4), rnode(GIN, 26, 0, 12) },
  { pnode(GPIO, 26, 0, OEIN, 2, 0), rnode(GOUT, 26, 0, 24) },
  { pnode(GPIO, 26, 0, OEIN, 2, 1), rnode(GOUT, 26, 0, 25) },
  { pnode(GPIO, 26, 0, BSLIPMAX, 2, -1), rnode(GIN, 26, 0, 7) },
  { pnode(GPIO, 26, 0, CEIN, 2, -1), rnode(GOUT, 26, 0, 19) },
  { pnode(GPIO, 26, 0, CEOUT, 2, -1), rnode(GOUT, 26, 0, 15) },
  { pnode(GPIO, 26, 0, SCLR, 2, -1), rnode(GOUT, 26, 0, 50) },
  { pnode(GPIO, 26, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 26, 0, 5) },
  { pnode(GPIO, 26, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 26, 0, 7) },
  { pnode(GPIO, 26, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 26, 0, 1) },
  { pnode(GPIO, 26, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 26, 0, 3) },
  { pnode(GPIO, 26, 0, DATAIN, 3, 0), rnode(GOUT, 26, 0, 2) },
  { pnode(GPIO, 26, 0, DATAIN, 3, 1), rnode(GOUT, 26, 0, 1) },
  { pnode(GPIO, 26, 0, DATAIN, 3, 2), rnode(GOUT, 26, 0, 12) },
  { pnode(GPIO, 26, 0, DATAIN, 3, 3), rnode(GOUT, 26, 0, 17) },
  { pnode(GPIO, 26, 0, DATAOUT, 3, 0), rnode(GIN, 26, 0, 2) },
  { pnode(GPIO, 26, 0, DATAOUT, 3, 1), rnode(GIN, 26, 0, 3) },
  { pnode(GPIO, 26, 0, DATAOUT, 3, 2), rnode(GIN, 26, 0, 4) },
  { pnode(GPIO, 26, 0, DATAOUT, 3, 3), rnode(GIN, 26, 0, 5) },
  { pnode(GPIO, 26, 0, DATAOUT, 3, 4), rnode(GIN, 26, 0, 6) },
  { pnode(GPIO, 26, 0, OEIN, 3, 0), rnode(GOUT, 26, 0, 13) },
  { pnode(GPIO, 26, 0, OEIN, 3, 1), rnode(GOUT, 26, 0, 18) },
  { pnode(GPIO, 26, 0, BSLIPMAX, 3, -1), rnode(GIN, 26, 0, 1) },
  { pnode(GPIO, 26, 0, CEIN, 3, -1), rnode(GOUT, 26, 0, 0) },
  { pnode(GPIO, 26, 0, CEOUT, 3, -1), rnode(GOUT, 26, 0, 10) },
  { pnode(GPIO, 26, 0, ACLR, 3, -1), rnode(GOUT, 26, 0, 9) },
  { pnode(GPIO, 26, 0, SCLR, 3, -1), rnode(GOUT, 26, 0, 14) },
  { pnode(GPIO, 26, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 26, 0, 4) },
  { pnode(GPIO, 26, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 26, 0, 6) },
  { pnode(GPIO, 26, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 26, 0, 0) },
  { pnode(GPIO, 26, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 26, 0, 2) },
  { pnode(GPIO, 26, 81, DATAIN, 0, 0), rnode(GOUT, 26, 81, 29) },
  { pnode(GPIO, 26, 81, DATAIN, 0, 1), rnode(GOUT, 26, 81, 30) },
  { pnode(GPIO, 26, 81, DATAIN, 0, 2), rnode(GOUT, 26, 81, 31) },
  { pnode(GPIO, 26, 81, DATAIN, 0, 3), rnode(GOUT, 26, 81, 33) },
  { pnode(GPIO, 26, 81, DATAOUT, 0, 0), rnode(GIN, 26, 81, 18) },
  { pnode(GPIO, 26, 81, DATAOUT, 0, 1), rnode(GIN, 26, 81, 17) },
  { pnode(GPIO, 26, 81, DATAOUT, 0, 2), rnode(GIN, 26, 81, 16) },
  { pnode(GPIO, 26, 81, DATAOUT, 0, 3), rnode(GIN, 26, 81, 15) },
  { pnode(GPIO, 26, 81, DATAOUT, 0, 4), rnode(GIN, 26, 81, 14) },
  { pnode(GPIO, 26, 81, OEIN, 0, 0), rnode(GOUT, 26, 81, 32) },
  { pnode(GPIO, 26, 81, OEIN, 0, 1), rnode(GOUT, 26, 81, 37) },
  { pnode(GPIO, 26, 81, BSLIPMAX, 0, -1), rnode(GIN, 26, 81, 19) },
  { pnode(GPIO, 26, 81, CEIN, 0, -1), rnode(GOUT, 26, 81, 43) },
  { pnode(GPIO, 26, 81, CEOUT, 0, -1), rnode(GOUT, 26, 81, 38) },
  { pnode(GPIO, 26, 81, ACLR, 0, -1), rnode(GOUT, 26, 81, 27) },
  { pnode(GPIO, 26, 81, SCLR, 0, -1), rnode(GOUT, 26, 81, 35) },
  { pnode(GPIO, 26, 81, CLKIN_IN, 0, 0), rnode(DCMUX, 26, 81, 10) },
  { pnode(GPIO, 26, 81, CLKIN_IN, 0, 1), rnode(DCMUX, 26, 81, 8) },
  { pnode(GPIO, 26, 81, CLKIN_OUT, 0, 0), rnode(DCMUX, 26, 81, 14) },
  { pnode(GPIO, 26, 81, CLKIN_OUT, 0, 1), rnode(DCMUX, 26, 81, 12) },
  { pnode(GPIO, 26, 81, DATAIN, 1, 0), rnode(GOUT, 26, 81, 42) },
  { pnode(GPIO, 26, 81, DATAIN, 1, 1), rnode(GOUT, 26, 81, 46) },
  { pnode(GPIO, 26, 81, DATAIN, 1, 2), rnode(GOUT, 26, 81, 41) },
  { pnode(GPIO, 26, 81, DATAIN, 1, 3), rnode(GOUT, 26, 81, 45) },
  { pnode(GPIO, 26, 81, DATAOUT, 1, 0), rnode(GIN, 26, 81, 24) },
  { pnode(GPIO, 26, 81, DATAOUT, 1, 1), rnode(GIN, 26, 81, 23) },
  { pnode(GPIO, 26, 81, DATAOUT, 1, 2), rnode(GIN, 26, 81, 22) },
  { pnode(GPIO, 26, 81, DATAOUT, 1, 3), rnode(GIN, 26, 81, 21) },
  { pnode(GPIO, 26, 81, DATAOUT, 1, 4), rnode(GIN, 26, 81, 20) },
  { pnode(GPIO, 26, 81, OEIN, 1, 0), rnode(GOUT, 26, 81, 40) },
  { pnode(GPIO, 26, 81, OEIN, 1, 1), rnode(GOUT, 26, 81, 44) },
  { pnode(GPIO, 26, 81, BSLIPMAX, 1, -1), rnode(GIN, 26, 81, 25) },
  { pnode(GPIO, 26, 81, CEIN, 1, -1), rnode(GOUT, 26, 81, 49) },
  { pnode(GPIO, 26, 81, CEOUT, 1, -1), rnode(GOUT, 26, 81, 48) },
  { pnode(GPIO, 26, 81, ACLR, 1, -1), rnode(GOUT, 26, 81, 47) },
  { pnode(GPIO, 26, 81, SCLR, 1, -1), rnode(GOUT, 26, 81, 39) },
  { pnode(GPIO, 26, 81, CLKIN_IN, 1, 0), rnode(DCMUX, 26, 81, 11) },
  { pnode(GPIO, 26, 81, CLKIN_IN, 1, 1), rnode(DCMUX, 26, 81, 9) },
  { pnode(GPIO, 26, 81, CLKIN_OUT, 1, 0), rnode(DCMUX, 26, 81, 15) },
  { pnode(GPIO, 26, 81, CLKIN_OUT, 1, 1), rnode(DCMUX, 26, 81, 13) },
  { pnode(GPIO, 26, 81, DATAIN, 2, 0), rnode(GOUT, 26, 81, 16) },
  { pnode(GPIO, 26, 81, DATAIN, 2, 1), rnode(GOUT, 26, 81, 21) },
  { pnode(GPIO, 26, 81, DATAIN, 2, 2), rnode(GOUT, 26, 81, 22) },
  { pnode(GPIO, 26, 81, DATAIN, 2, 3), rnode(GOUT, 26, 81, 23) },
  { pnode(GPIO, 26, 81, DATAOUT, 2, 0), rnode(GIN, 26, 81, 8) },
  { pnode(GPIO, 26, 81, DATAOUT, 2, 1), rnode(GIN, 26, 81, 9) },
  { pnode(GPIO, 26, 81, DATAOUT, 2, 2), rnode(GIN, 26, 81, 10) },
  { pnode(GPIO, 26, 81, DATAOUT, 2, 3), rnode(GIN, 26, 81, 11) },
  { pnode(GPIO, 26, 81, DATAOUT, 2, 4), rnode(GIN, 26, 81, 12) },
  { pnode(GPIO, 26, 81, OEIN, 2, 0), rnode(GOUT, 26, 81, 24) },
  { pnode(GPIO, 26, 81, OEIN, 2, 1), rnode(GOUT, 26, 81, 25) },
  { pnode(GPIO, 26, 81, BSLIPMAX, 2, -1), rnode(GIN, 26, 81, 7) },
  { pnode(GPIO, 26, 81, CEIN, 2, -1), rnode(GOUT, 26, 81, 19) },
  { pnode(GPIO, 26, 81, CEOUT, 2, -1), rnode(GOUT, 26, 81, 15) },
  { pnode(GPIO, 26, 81, ACLR, 2, -1), rnode(GOUT, 26, 81, 20) },
  { pnode(GPIO, 26, 81, SCLR, 2, -1), rnode(GOUT, 26, 81, 50) },
  { pnode(GPIO, 26, 81, CLKIN_IN, 2, 0), rnode(DCMUX, 26, 81, 5) },
  { pnode(GPIO, 26, 81, CLKIN_IN, 2, 1), rnode(DCMUX, 26, 81, 7) },
  { pnode(GPIO, 26, 81, CLKIN_OUT, 2, 0), rnode(DCMUX, 26, 81, 1) },
  { pnode(GPIO, 26, 81, CLKIN_OUT, 2, 1), rnode(DCMUX, 26, 81, 3) },
  { pnode(GPIO, 26, 81, DATAIN, 3, 0), rnode(GOUT, 26, 81, 2) },
  { pnode(GPIO, 26, 81, DATAIN, 3, 1), rnode(GOUT, 26, 81, 1) },
  { pnode(GPIO, 26, 81, DATAIN, 3, 2), rnode(GOUT, 26, 81, 12) },
  { pnode(GPIO, 26, 81, DATAIN, 3, 3), rnode(GOUT, 26, 81, 17) },
  { pnode(GPIO, 26, 81, DATAOUT, 3, 0), rnode(GIN, 26, 81, 2) },
  { pnode(GPIO, 26, 81, DATAOUT, 3, 1), rnode(GIN, 26, 81, 3) },
  { pnode(GPIO, 26, 81, DATAOUT, 3, 2), rnode(GIN, 26, 81, 4) },
  { pnode(GPIO, 26, 81, DATAOUT, 3, 3), rnode(GIN, 26, 81, 5) },
  { pnode(GPIO, 26, 81, DATAOUT, 3, 4), rnode(GIN, 26, 81, 6) },
  { pnode(GPIO, 26, 81, OEIN, 3, 0), rnode(GOUT, 26, 81, 13) },
  { pnode(GPIO, 26, 81, OEIN, 3, 1), rnode(GOUT, 26, 81, 18) },
  { pnode(GPIO, 26, 81, BSLIPMAX, 3, -1), rnode(GIN, 26, 81, 1) },
  { pnode(GPIO, 26, 81, CEIN, 3, -1), rnode(GOUT, 26, 81, 0) },
  { pnode(GPIO, 26, 81, CEOUT, 3, -1), rnode(GOUT, 26, 81, 10) },
  { pnode(GPIO, 26, 81, ACLR, 3, -1), rnode(GOUT, 26, 81, 9) },
  { pnode(GPIO, 26, 81, SCLR, 3, -1), rnode(GOUT, 26, 81, 14) },
  { pnode(GPIO, 26, 81, CLKIN_IN, 3, 0), rnode(DCMUX, 26, 81, 4) },
  { pnode(GPIO, 26, 81, CLKIN_IN, 3, 1), rnode(DCMUX, 26, 81, 6) },
  { pnode(GPIO, 26, 81, CLKIN_OUT, 3, 0), rnode(DCMUX, 26, 81, 0) },
  { pnode(GPIO, 26, 81, CLKIN_OUT, 3, 1), rnode(DCMUX, 26, 81, 2) },
  { pnode(GPIO, 28, 0, DATAOUT, 0, 0), rnode(GIN, 28, 0, 4) },
  { pnode(GPIO, 28, 0, DATAOUT, 0, 1), rnode(GIN, 28, 0, 5) },
  { pnode(GPIO, 28, 0, DATAOUT, 0, 2), rnode(GIN, 28, 0, 6) },
  { pnode(GPIO, 28, 0, DATAOUT, 0, 3), rnode(GIN, 28, 0, 7) },
  { pnode(GPIO, 28, 0, DATAOUT, 0, 4), rnode(GIN, 28, 0, 8) },
  { pnode(GPIO, 28, 0, OEIN, 0, 0), rnode(GOUT, 28, 0, 19) },
  { pnode(GPIO, 28, 0, OEIN, 0, 1), rnode(GOUT, 28, 0, 15) },
  { pnode(GPIO, 28, 0, BSLIPMAX, 0, -1), rnode(GIN, 28, 0, 3) },
  { pnode(GPIO, 28, 0, CEIN, 0, -1), rnode(GOUT, 28, 0, 4) },
  { pnode(GPIO, 28, 0, CEOUT, 0, -1), rnode(GOUT, 28, 0, 3) },
  { pnode(GPIO, 28, 0, SCLR, 0, -1), rnode(GOUT, 28, 0, 24) },
  { pnode(GPIO, 28, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 28, 0, 10) },
  { pnode(GPIO, 28, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 28, 0, 8) },
  { pnode(GPIO, 28, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 28, 0, 14) },
  { pnode(GPIO, 28, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 28, 0, 12) },
  { pnode(GPIO, 28, 0, DATAOUT, 1, 0), rnode(GIN, 27, 0, 14) },
  { pnode(GPIO, 28, 0, DATAOUT, 1, 1), rnode(GIN, 27, 0, 13) },
  { pnode(GPIO, 28, 0, DATAOUT, 1, 2), rnode(GIN, 28, 0, 0) },
  { pnode(GPIO, 28, 0, DATAOUT, 1, 3), rnode(GIN, 28, 0, 1) },
  { pnode(GPIO, 28, 0, DATAOUT, 1, 4), rnode(GIN, 28, 0, 2) },
  { pnode(GPIO, 28, 0, OEIN, 1, 0), rnode(GOUT, 28, 0, 6) },
  { pnode(GPIO, 28, 0, OEIN, 1, 1), rnode(GOUT, 28, 0, 7) },
  { pnode(GPIO, 28, 0, BSLIPMAX, 1, -1), rnode(GIN, 27, 0, 15) },
  { pnode(GPIO, 28, 0, CEIN, 1, -1), rnode(GOUT, 27, 0, 37) },
  { pnode(GPIO, 28, 0, CEOUT, 1, -1), rnode(GOUT, 27, 0, 35) },
  { pnode(GPIO, 28, 0, SCLR, 1, -1), rnode(GOUT, 28, 0, 5) },
  { pnode(GPIO, 28, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 28, 0, 11) },
  { pnode(GPIO, 28, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 28, 0, 9) },
  { pnode(GPIO, 28, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 28, 0, 15) },
  { pnode(GPIO, 28, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 28, 0, 13) },
  { pnode(GPIO, 28, 0, DATAOUT, 2, 0), rnode(GIN, 27, 0, 21) },
  { pnode(GPIO, 28, 0, DATAOUT, 2, 1), rnode(GIN, 27, 0, 19) },
  { pnode(GPIO, 28, 0, DATAOUT, 2, 2), rnode(GIN, 27, 0, 18) },
  { pnode(GPIO, 28, 0, DATAOUT, 2, 3), rnode(GIN, 27, 0, 17) },
  { pnode(GPIO, 28, 0, DATAOUT, 2, 4), rnode(GIN, 27, 0, 16) },
  { pnode(GPIO, 28, 0, OEIN, 2, 0), rnode(GOUT, 27, 0, 34) },
  { pnode(GPIO, 28, 0, OEIN, 2, 1), rnode(GOUT, 27, 0, 29) },
  { pnode(GPIO, 28, 0, BSLIPMAX, 2, -1), rnode(GIN, 27, 0, 25) },
  { pnode(GPIO, 28, 0, CEIN, 2, -1), rnode(GOUT, 27, 0, 47) },
  { pnode(GPIO, 28, 0, CEOUT, 2, -1), rnode(GOUT, 27, 0, 46) },
  { pnode(GPIO, 28, 0, SCLR, 2, -1), rnode(GOUT, 27, 0, 33) },
  { pnode(GPIO, 28, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 28, 0, 5) },
  { pnode(GPIO, 28, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 28, 0, 7) },
  { pnode(GPIO, 28, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 28, 0, 1) },
  { pnode(GPIO, 28, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 28, 0, 3) },
  { pnode(GPIO, 28, 0, DATAOUT, 3, 0), rnode(GIN, 27, 0, 0) },
  { pnode(GPIO, 28, 0, DATAOUT, 3, 1), rnode(GIN, 27, 0, 1) },
  { pnode(GPIO, 28, 0, DATAOUT, 3, 2), rnode(GIN, 27, 0, 2) },
  { pnode(GPIO, 28, 0, DATAOUT, 3, 3), rnode(GIN, 27, 0, 3) },
  { pnode(GPIO, 28, 0, DATAOUT, 3, 4), rnode(GIN, 27, 0, 7) },
  { pnode(GPIO, 28, 0, OEIN, 3, 0), rnode(GOUT, 27, 0, 8) },
  { pnode(GPIO, 28, 0, OEIN, 3, 1), rnode(GOUT, 27, 0, 22) },
  { pnode(GPIO, 28, 0, BSLIPMAX, 3, -1), rnode(GIN, 26, 0, 13) },
  { pnode(GPIO, 28, 0, CEIN, 3, -1), rnode(GOUT, 26, 0, 36) },
  { pnode(GPIO, 28, 0, CEOUT, 3, -1), rnode(GOUT, 26, 0, 26) },
  { pnode(GPIO, 28, 0, SCLR, 3, -1), rnode(GOUT, 27, 0, 49) },
  { pnode(GPIO, 28, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 28, 0, 4) },
  { pnode(GPIO, 28, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 28, 0, 6) },
  { pnode(GPIO, 28, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 28, 0, 0) },
  { pnode(GPIO, 28, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 28, 0, 2) },
  { pnode(GPIO, 28, 81, DATAIN, 0, 0), rnode(GOUT, 28, 81, 17) },
  { pnode(GPIO, 28, 81, DATAIN, 0, 1), rnode(GOUT, 28, 81, 13) },
  { pnode(GPIO, 28, 81, DATAIN, 0, 2), rnode(GOUT, 28, 81, 18) },
  { pnode(GPIO, 28, 81, DATAIN, 0, 3), rnode(GOUT, 28, 81, 14) },
  { pnode(GPIO, 28, 81, DATAOUT, 0, 0), rnode(GIN, 28, 81, 4) },
  { pnode(GPIO, 28, 81, DATAOUT, 0, 1), rnode(GIN, 28, 81, 5) },
  { pnode(GPIO, 28, 81, DATAOUT, 0, 2), rnode(GIN, 28, 81, 6) },
  { pnode(GPIO, 28, 81, DATAOUT, 0, 3), rnode(GIN, 28, 81, 7) },
  { pnode(GPIO, 28, 81, DATAOUT, 0, 4), rnode(GIN, 28, 81, 8) },
  { pnode(GPIO, 28, 81, OEIN, 0, 0), rnode(GOUT, 28, 81, 19) },
  { pnode(GPIO, 28, 81, OEIN, 0, 1), rnode(GOUT, 28, 81, 15) },
  { pnode(GPIO, 28, 81, BSLIPMAX, 0, -1), rnode(GIN, 28, 81, 3) },
  { pnode(GPIO, 28, 81, CEIN, 0, -1), rnode(GOUT, 28, 81, 4) },
  { pnode(GPIO, 28, 81, CEOUT, 0, -1), rnode(GOUT, 28, 81, 3) },
  { pnode(GPIO, 28, 81, ACLR, 0, -1), rnode(GOUT, 28, 81, 8) },
  { pnode(GPIO, 28, 81, SCLR, 0, -1), rnode(GOUT, 28, 81, 24) },
  { pnode(GPIO, 28, 81, CLKIN_IN, 0, 0), rnode(DCMUX, 28, 81, 10) },
  { pnode(GPIO, 28, 81, CLKIN_IN, 0, 1), rnode(DCMUX, 28, 81, 8) },
  { pnode(GPIO, 28, 81, CLKIN_OUT, 0, 0), rnode(DCMUX, 28, 81, 14) },
  { pnode(GPIO, 28, 81, CLKIN_OUT, 0, 1), rnode(DCMUX, 28, 81, 12) },
  { pnode(GPIO, 28, 81, DATAIN, 1, 0), rnode(GOUT, 28, 81, 0) },
  { pnode(GPIO, 28, 81, DATAIN, 1, 1), rnode(GOUT, 28, 81, 10) },
  { pnode(GPIO, 28, 81, DATAIN, 1, 2), rnode(GOUT, 28, 81, 9) },
  { pnode(GPIO, 28, 81, DATAIN, 1, 3), rnode(GOUT, 28, 81, 11) },
  { pnode(GPIO, 28, 81, DATAOUT, 1, 0), rnode(GIN, 27, 81, 14) },
  { pnode(GPIO, 28, 81, DATAOUT, 1, 1), rnode(GIN, 27, 81, 13) },
  { pnode(GPIO, 28, 81, DATAOUT, 1, 2), rnode(GIN, 28, 81, 0) },
  { pnode(GPIO, 28, 81, DATAOUT, 1, 3), rnode(GIN, 28, 81, 1) },
  { pnode(GPIO, 28, 81, DATAOUT, 1, 4), rnode(GIN, 28, 81, 2) },
  { pnode(GPIO, 28, 81, OEIN, 1, 0), rnode(GOUT, 28, 81, 6) },
  { pnode(GPIO, 28, 81, OEIN, 1, 1), rnode(GOUT, 28, 81, 7) },
  { pnode(GPIO, 28, 81, BSLIPMAX, 1, -1), rnode(GIN, 27, 81, 15) },
  { pnode(GPIO, 28, 81, CEIN, 1, -1), rnode(GOUT, 27, 81, 37) },
  { pnode(GPIO, 28, 81, CEOUT, 1, -1), rnode(GOUT, 27, 81, 35) },
  { pnode(GPIO, 28, 81, ACLR, 1, -1), rnode(GOUT, 27, 81, 36) },
  { pnode(GPIO, 28, 81, SCLR, 1, -1), rnode(GOUT, 28, 81, 5) },
  { pnode(GPIO, 28, 81, CLKIN_IN, 1, 0), rnode(DCMUX, 28, 81, 11) },
  { pnode(GPIO, 28, 81, CLKIN_IN, 1, 1), rnode(DCMUX, 28, 81, 9) },
  { pnode(GPIO, 28, 81, CLKIN_OUT, 1, 0), rnode(DCMUX, 28, 81, 15) },
  { pnode(GPIO, 28, 81, CLKIN_OUT, 1, 1), rnode(DCMUX, 28, 81, 13) },
  { pnode(GPIO, 28, 81, DATAIN, 2, 0), rnode(GOUT, 27, 81, 43) },
  { pnode(GPIO, 28, 81, DATAIN, 2, 1), rnode(GOUT, 27, 81, 38) },
  { pnode(GPIO, 28, 81, DATAIN, 2, 2), rnode(GOUT, 27, 81, 27) },
  { pnode(GPIO, 28, 81, DATAIN, 2, 3), rnode(GOUT, 27, 81, 28) },
  { pnode(GPIO, 28, 81, DATAOUT, 2, 0), rnode(GIN, 27, 81, 21) },
  { pnode(GPIO, 28, 81, DATAOUT, 2, 1), rnode(GIN, 27, 81, 19) },
  { pnode(GPIO, 28, 81, DATAOUT, 2, 2), rnode(GIN, 27, 81, 18) },
  { pnode(GPIO, 28, 81, DATAOUT, 2, 3), rnode(GIN, 27, 81, 17) },
  { pnode(GPIO, 28, 81, DATAOUT, 2, 4), rnode(GIN, 27, 81, 16) },
  { pnode(GPIO, 28, 81, OEIN, 2, 0), rnode(GOUT, 27, 81, 34) },
  { pnode(GPIO, 28, 81, OEIN, 2, 1), rnode(GOUT, 27, 81, 29) },
  { pnode(GPIO, 28, 81, BSLIPMAX, 2, -1), rnode(GIN, 27, 81, 25) },
  { pnode(GPIO, 28, 81, CEIN, 2, -1), rnode(GOUT, 27, 81, 47) },
  { pnode(GPIO, 28, 81, CEOUT, 2, -1), rnode(GOUT, 27, 81, 46) },
  { pnode(GPIO, 28, 81, ACLR, 2, -1), rnode(GOUT, 27, 81, 41) },
  { pnode(GPIO, 28, 81, SCLR, 2, -1), rnode(GOUT, 27, 81, 33) },
  { pnode(GPIO, 28, 81, CLKIN_IN, 2, 0), rnode(DCMUX, 28, 81, 5) },
  { pnode(GPIO, 28, 81, CLKIN_IN, 2, 1), rnode(DCMUX, 28, 81, 7) },
  { pnode(GPIO, 28, 81, CLKIN_OUT, 2, 0), rnode(DCMUX, 28, 81, 1) },
  { pnode(GPIO, 28, 81, CLKIN_OUT, 2, 1), rnode(DCMUX, 28, 81, 3) },
  { pnode(GPIO, 28, 81, DATAIN, 3, 0), rnode(GOUT, 27, 81, 9) },
  { pnode(GPIO, 28, 81, DATAIN, 3, 1), rnode(GOUT, 27, 81, 11) },
  { pnode(GPIO, 28, 81, DATAIN, 3, 2), rnode(GOUT, 27, 81, 6) },
  { pnode(GPIO, 28, 81, DATAIN, 3, 3), rnode(GOUT, 27, 81, 7) },
  { pnode(GPIO, 28, 81, DATAOUT, 3, 0), rnode(GIN, 27, 81, 0) },
  { pnode(GPIO, 28, 81, DATAOUT, 3, 1), rnode(GIN, 27, 81, 1) },
  { pnode(GPIO, 28, 81, DATAOUT, 3, 2), rnode(GIN, 27, 81, 2) },
  { pnode(GPIO, 28, 81, DATAOUT, 3, 3), rnode(GIN, 27, 81, 3) },
  { pnode(GPIO, 28, 81, DATAOUT, 3, 4), rnode(GIN, 27, 81, 7) },
  { pnode(GPIO, 28, 81, OEIN, 3, 0), rnode(GOUT, 27, 81, 8) },
  { pnode(GPIO, 28, 81, OEIN, 3, 1), rnode(GOUT, 27, 81, 22) },
  { pnode(GPIO, 28, 81, BSLIPMAX, 3, -1), rnode(GIN, 26, 81, 13) },
  { pnode(GPIO, 28, 81, CEIN, 3, -1), rnode(GOUT, 26, 81, 36) },
  { pnode(GPIO, 28, 81, CEOUT, 3, -1), rnode(GOUT, 26, 81, 26) },
  { pnode(GPIO, 28, 81, ACLR, 3, -1), rnode(GOUT, 27, 81, 0) },
  { pnode(GPIO, 28, 81, SCLR, 3, -1), rnode(GOUT, 27, 81, 49) },
  { pnode(GPIO, 28, 81, CLKIN_IN, 3, 0), rnode(DCMUX, 28, 81, 4) },
  { pnode(GPIO, 28, 81, CLKIN_IN, 3, 1), rnode(DCMUX, 28, 81, 6) },
  { pnode(GPIO, 28, 81, CLKIN_OUT, 3, 0), rnode(DCMUX, 28, 81, 0) },
  { pnode(GPIO, 28, 81, CLKIN_OUT, 3, 1), rnode(DCMUX, 28, 81, 2) },
  { pnode(GPIO, 30, 0, DATAOUT, 0, 0), rnode(GIN, 30, 0, 9) },
  { pnode(GPIO, 30, 0, DATAOUT, 0, 1), rnode(GIN, 30, 0, 10) },
  { pnode(GPIO, 30, 0, DATAOUT, 0, 2), rnode(GIN, 30, 0, 11) },
  { pnode(GPIO, 30, 0, DATAOUT, 0, 3), rnode(GIN, 30, 0, 12) },
  { pnode(GPIO, 30, 0, DATAOUT, 0, 4), rnode(GIN, 30, 0, 25) },
  { pnode(GPIO, 30, 0, OEIN, 0, 0), rnode(GOUT, 30, 0, 34) },
  { pnode(GPIO, 30, 0, OEIN, 0, 1), rnode(GOUT, 30, 0, 29) },
  { pnode(GPIO, 30, 0, BSLIPMAX, 0, -1), rnode(GIN, 30, 0, 0) },
  { pnode(GPIO, 30, 0, CEIN, 0, -1), rnode(GOUT, 30, 0, 5) },
  { pnode(GPIO, 30, 0, CEOUT, 0, -1), rnode(GOUT, 30, 0, 4) },
  { pnode(GPIO, 30, 0, SCLR, 0, -1), rnode(GOUT, 30, 0, 33) },
  { pnode(GPIO, 30, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 30, 0, 10) },
  { pnode(GPIO, 30, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 30, 0, 8) },
  { pnode(GPIO, 30, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 30, 0, 14) },
  { pnode(GPIO, 30, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 30, 0, 12) },
  { pnode(GPIO, 30, 0, DATAOUT, 1, 0), rnode(GIN, 29, 0, 17) },
  { pnode(GPIO, 30, 0, DATAOUT, 1, 1), rnode(GIN, 29, 0, 16) },
  { pnode(GPIO, 30, 0, DATAOUT, 1, 2), rnode(GIN, 29, 0, 15) },
  { pnode(GPIO, 30, 0, DATAOUT, 1, 3), rnode(GIN, 29, 0, 14) },
  { pnode(GPIO, 30, 0, DATAOUT, 1, 4), rnode(GIN, 29, 0, 13) },
  { pnode(GPIO, 30, 0, OEIN, 1, 0), rnode(GOUT, 30, 0, 11) },
  { pnode(GPIO, 30, 0, OEIN, 1, 1), rnode(GOUT, 30, 0, 6) },
  { pnode(GPIO, 30, 0, BSLIPMAX, 1, -1), rnode(GIN, 29, 0, 20) },
  { pnode(GPIO, 30, 0, CEIN, 1, -1), rnode(GOUT, 29, 0, 33) },
  { pnode(GPIO, 30, 0, CEOUT, 1, -1), rnode(GOUT, 29, 0, 32) },
  { pnode(GPIO, 30, 0, SCLR, 1, -1), rnode(GOUT, 30, 0, 7) },
  { pnode(GPIO, 30, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 30, 0, 11) },
  { pnode(GPIO, 30, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 30, 0, 9) },
  { pnode(GPIO, 30, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 30, 0, 15) },
  { pnode(GPIO, 30, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 30, 0, 13) },
  { pnode(GPIO, 30, 0, DATAOUT, 2, 0), rnode(GIN, 29, 0, 8) },
  { pnode(GPIO, 30, 0, DATAOUT, 2, 1), rnode(GIN, 29, 0, 9) },
  { pnode(GPIO, 30, 0, DATAOUT, 2, 2), rnode(GIN, 29, 0, 10) },
  { pnode(GPIO, 30, 0, DATAOUT, 2, 3), rnode(GIN, 29, 0, 11) },
  { pnode(GPIO, 30, 0, DATAOUT, 2, 4), rnode(GIN, 29, 0, 12) },
  { pnode(GPIO, 30, 0, OEIN, 2, 0), rnode(GOUT, 29, 0, 34) },
  { pnode(GPIO, 30, 0, OEIN, 2, 1), rnode(GOUT, 29, 0, 30) },
  { pnode(GPIO, 30, 0, BSLIPMAX, 2, -1), rnode(GIN, 29, 0, 0) },
  { pnode(GPIO, 30, 0, CEIN, 2, -1), rnode(GOUT, 29, 0, 10) },
  { pnode(GPIO, 30, 0, CEOUT, 2, -1), rnode(GOUT, 29, 0, 9) },
  { pnode(GPIO, 30, 0, SCLR, 2, -1), rnode(GOUT, 29, 0, 31) },
  { pnode(GPIO, 30, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 30, 0, 5) },
  { pnode(GPIO, 30, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 30, 0, 7) },
  { pnode(GPIO, 30, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 30, 0, 1) },
  { pnode(GPIO, 30, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 30, 0, 3) },
  { pnode(GPIO, 30, 0, DATAOUT, 3, 0), rnode(GIN, 28, 0, 25) },
  { pnode(GPIO, 30, 0, DATAOUT, 3, 1), rnode(GIN, 28, 0, 24) },
  { pnode(GPIO, 30, 0, DATAOUT, 3, 2), rnode(GIN, 28, 0, 23) },
  { pnode(GPIO, 30, 0, DATAOUT, 3, 3), rnode(GIN, 28, 0, 22) },
  { pnode(GPIO, 30, 0, DATAOUT, 3, 4), rnode(GIN, 28, 0, 20) },
  { pnode(GPIO, 30, 0, OEIN, 3, 0), rnode(GOUT, 28, 0, 36) },
  { pnode(GPIO, 30, 0, OEIN, 3, 1), rnode(GOUT, 28, 0, 26) },
  { pnode(GPIO, 30, 0, BSLIPMAX, 3, -1), rnode(GIN, 28, 0, 12) },
  { pnode(GPIO, 30, 0, CEIN, 3, -1), rnode(GOUT, 28, 0, 25) },
  { pnode(GPIO, 30, 0, CEOUT, 3, -1), rnode(GOUT, 28, 0, 50) },
  { pnode(GPIO, 30, 0, SCLR, 3, -1), rnode(GOUT, 29, 0, 0) },
  { pnode(GPIO, 30, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 30, 0, 4) },
  { pnode(GPIO, 30, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 30, 0, 6) },
  { pnode(GPIO, 30, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 30, 0, 0) },
  { pnode(GPIO, 30, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 30, 0, 2) },
  { pnode(GPIO, 30, 81, DATAIN, 0, 0), rnode(GOUT, 30, 81, 50) },
  { pnode(GPIO, 30, 81, DATAIN, 0, 1), rnode(GOUT, 30, 81, 43) },
  { pnode(GPIO, 30, 81, DATAIN, 0, 2), rnode(GOUT, 30, 81, 38) },
  { pnode(GPIO, 30, 81, DATAIN, 0, 3), rnode(GOUT, 30, 81, 27) },
  { pnode(GPIO, 30, 81, DATAOUT, 0, 0), rnode(GIN, 30, 81, 9) },
  { pnode(GPIO, 30, 81, DATAOUT, 0, 1), rnode(GIN, 30, 81, 10) },
  { pnode(GPIO, 30, 81, DATAOUT, 0, 2), rnode(GIN, 30, 81, 11) },
  { pnode(GPIO, 30, 81, DATAOUT, 0, 3), rnode(GIN, 30, 81, 12) },
  { pnode(GPIO, 30, 81, DATAOUT, 0, 4), rnode(GIN, 30, 81, 25) },
  { pnode(GPIO, 30, 81, OEIN, 0, 0), rnode(GOUT, 30, 81, 34) },
  { pnode(GPIO, 30, 81, OEIN, 0, 1), rnode(GOUT, 30, 81, 29) },
  { pnode(GPIO, 30, 81, BSLIPMAX, 0, -1), rnode(GIN, 30, 81, 0) },
  { pnode(GPIO, 30, 81, CEIN, 0, -1), rnode(GOUT, 30, 81, 5) },
  { pnode(GPIO, 30, 81, CEOUT, 0, -1), rnode(GOUT, 30, 81, 4) },
  { pnode(GPIO, 30, 81, ACLR, 0, -1), rnode(GOUT, 30, 81, 3) },
  { pnode(GPIO, 30, 81, SCLR, 0, -1), rnode(GOUT, 30, 81, 33) },
  { pnode(GPIO, 30, 81, CLKIN_IN, 0, 0), rnode(DCMUX, 30, 81, 10) },
  { pnode(GPIO, 30, 81, CLKIN_IN, 0, 1), rnode(DCMUX, 30, 81, 8) },
  { pnode(GPIO, 30, 81, CLKIN_OUT, 0, 0), rnode(DCMUX, 30, 81, 14) },
  { pnode(GPIO, 30, 81, CLKIN_OUT, 0, 1), rnode(DCMUX, 30, 81, 12) },
  { pnode(GPIO, 30, 81, DATAIN, 1, 0), rnode(GOUT, 29, 81, 26) },
  { pnode(GPIO, 30, 81, DATAIN, 1, 1), rnode(GOUT, 30, 81, 0) },
  { pnode(GPIO, 30, 81, DATAIN, 1, 2), rnode(GOUT, 30, 81, 10) },
  { pnode(GPIO, 30, 81, DATAIN, 1, 3), rnode(GOUT, 30, 81, 9) },
  { pnode(GPIO, 30, 81, DATAOUT, 1, 0), rnode(GIN, 29, 81, 17) },
  { pnode(GPIO, 30, 81, DATAOUT, 1, 1), rnode(GIN, 29, 81, 16) },
  { pnode(GPIO, 30, 81, DATAOUT, 1, 2), rnode(GIN, 29, 81, 15) },
  { pnode(GPIO, 30, 81, DATAOUT, 1, 3), rnode(GIN, 29, 81, 14) },
  { pnode(GPIO, 30, 81, DATAOUT, 1, 4), rnode(GIN, 29, 81, 13) },
  { pnode(GPIO, 30, 81, OEIN, 1, 0), rnode(GOUT, 30, 81, 11) },
  { pnode(GPIO, 30, 81, OEIN, 1, 1), rnode(GOUT, 30, 81, 6) },
  { pnode(GPIO, 30, 81, BSLIPMAX, 1, -1), rnode(GIN, 29, 81, 20) },
  { pnode(GPIO, 30, 81, CEIN, 1, -1), rnode(GOUT, 29, 81, 33) },
  { pnode(GPIO, 30, 81, CEOUT, 1, -1), rnode(GOUT, 29, 81, 32) },
  { pnode(GPIO, 30, 81, ACLR, 1, -1), rnode(GOUT, 29, 81, 37) },
  { pnode(GPIO, 30, 81, SCLR, 1, -1), rnode(GOUT, 30, 81, 7) },
  { pnode(GPIO, 30, 81, CLKIN_IN, 1, 0), rnode(DCMUX, 30, 81, 11) },
  { pnode(GPIO, 30, 81, CLKIN_IN, 1, 1), rnode(DCMUX, 30, 81, 9) },
  { pnode(GPIO, 30, 81, CLKIN_OUT, 1, 0), rnode(DCMUX, 30, 81, 15) },
  { pnode(GPIO, 30, 81, CLKIN_OUT, 1, 1), rnode(DCMUX, 30, 81, 13) },
  { pnode(GPIO, 30, 81, DATAIN, 2, 0), rnode(GOUT, 29, 81, 1) },
  { pnode(GPIO, 30, 81, DATAIN, 2, 1), rnode(GOUT, 29, 81, 25) },
  { pnode(GPIO, 30, 81, DATAIN, 2, 2), rnode(GOUT, 29, 81, 45) },
  { pnode(GPIO, 30, 81, DATAIN, 2, 3), rnode(GOUT, 29, 81, 28) },
  { pnode(GPIO, 30, 81, DATAOUT, 2, 0), rnode(GIN, 29, 81, 8) },
  { pnode(GPIO, 30, 81, DATAOUT, 2, 1), rnode(GIN, 29, 81, 9) },
  { pnode(GPIO, 30, 81, DATAOUT, 2, 2), rnode(GIN, 29, 81, 10) },
  { pnode(GPIO, 30, 81, DATAOUT, 2, 3), rnode(GIN, 29, 81, 11) },
  { pnode(GPIO, 30, 81, DATAOUT, 2, 4), rnode(GIN, 29, 81, 12) },
  { pnode(GPIO, 30, 81, OEIN, 2, 0), rnode(GOUT, 29, 81, 34) },
  { pnode(GPIO, 30, 81, OEIN, 2, 1), rnode(GOUT, 29, 81, 30) },
  { pnode(GPIO, 30, 81, BSLIPMAX, 2, -1), rnode(GIN, 29, 81, 0) },
  { pnode(GPIO, 30, 81, CEIN, 2, -1), rnode(GOUT, 29, 81, 10) },
  { pnode(GPIO, 30, 81, CEOUT, 2, -1), rnode(GOUT, 29, 81, 9) },
  { pnode(GPIO, 30, 81, ACLR, 2, -1), rnode(GOUT, 29, 81, 11) },
  { pnode(GPIO, 30, 81, SCLR, 2, -1), rnode(GOUT, 29, 81, 31) },
  { pnode(GPIO, 30, 81, CLKIN_IN, 2, 0), rnode(DCMUX, 30, 81, 5) },
  { pnode(GPIO, 30, 81, CLKIN_IN, 2, 1), rnode(DCMUX, 30, 81, 7) },
  { pnode(GPIO, 30, 81, CLKIN_OUT, 2, 0), rnode(DCMUX, 30, 81, 1) },
  { pnode(GPIO, 30, 81, CLKIN_OUT, 2, 1), rnode(DCMUX, 30, 81, 3) },
  { pnode(GPIO, 30, 81, DATAIN, 3, 0), rnode(GOUT, 28, 81, 33) },
  { pnode(GPIO, 30, 81, DATAIN, 3, 1), rnode(GOUT, 28, 81, 32) },
  { pnode(GPIO, 30, 81, DATAIN, 3, 2), rnode(GOUT, 28, 81, 37) },
  { pnode(GPIO, 30, 81, DATAIN, 3, 3), rnode(GOUT, 28, 81, 35) },
  { pnode(GPIO, 30, 81, DATAOUT, 3, 0), rnode(GIN, 28, 81, 25) },
  { pnode(GPIO, 30, 81, DATAOUT, 3, 1), rnode(GIN, 28, 81, 24) },
  { pnode(GPIO, 30, 81, DATAOUT, 3, 2), rnode(GIN, 28, 81, 23) },
  { pnode(GPIO, 30, 81, DATAOUT, 3, 3), rnode(GIN, 28, 81, 22) },
  { pnode(GPIO, 30, 81, DATAOUT, 3, 4), rnode(GIN, 28, 81, 20) },
  { pnode(GPIO, 30, 81, OEIN, 3, 0), rnode(GOUT, 28, 81, 36) },
  { pnode(GPIO, 30, 81, OEIN, 3, 1), rnode(GOUT, 28, 81, 26) },
  { pnode(GPIO, 30, 81, BSLIPMAX, 3, -1), rnode(GIN, 28, 81, 12) },
  { pnode(GPIO, 30, 81, CEIN, 3, -1), rnode(GOUT, 28, 81, 25) },
  { pnode(GPIO, 30, 81, CEOUT, 3, -1), rnode(GOUT, 28, 81, 50) },
  { pnode(GPIO, 30, 81, ACLR, 3, -1), rnode(GOUT, 28, 81, 49) },
  { pnode(GPIO, 30, 81, SCLR, 3, -1), rnode(GOUT, 29, 81, 0) },
  { pnode(GPIO, 30, 81, CLKIN_IN, 3, 0), rnode(DCMUX, 30, 81, 4) },
  { pnode(GPIO, 30, 81, CLKIN_IN, 3, 1), rnode(DCMUX, 30, 81, 6) },
  { pnode(GPIO, 30, 81, CLKIN_OUT, 3, 0), rnode(DCMUX, 30, 81, 0) },
  { pnode(GPIO, 30, 81, CLKIN_OUT, 3, 1), rnode(DCMUX, 30, 81, 2) },
  { pnode(GPIO, 32, 0, DATAIN, 0, 0), rnode(GOUT, 32, 0, 50) },
  { pnode(GPIO, 32, 0, DATAIN, 0, 1), rnode(GOUT, 32, 0, 49) },
  { pnode(GPIO, 32, 0, DATAIN, 0, 2), rnode(GOUT, 32, 0, 48) },
  { pnode(GPIO, 32, 0, DATAIN, 0, 3), rnode(GOUT, 32, 0, 47) },
  { pnode(GPIO, 32, 0, DATAOUT, 0, 0), rnode(GIN, 32, 0, 8) },
  { pnode(GPIO, 32, 0, DATAOUT, 0, 1), rnode(GIN, 32, 0, 9) },
  { pnode(GPIO, 32, 0, DATAOUT, 0, 2), rnode(GIN, 32, 0, 10) },
  { pnode(GPIO, 32, 0, DATAOUT, 0, 3), rnode(GIN, 32, 0, 11) },
  { pnode(GPIO, 32, 0, DATAOUT, 0, 4), rnode(GIN, 32, 0, 12) },
  { pnode(GPIO, 32, 0, OEIN, 0, 0), rnode(GOUT, 32, 0, 46) },
  { pnode(GPIO, 32, 0, OEIN, 0, 1), rnode(GOUT, 32, 0, 41) },
  { pnode(GPIO, 32, 0, BSLIPMAX, 0, -1), rnode(GIN, 32, 0, 7) },
  { pnode(GPIO, 32, 0, CEIN, 0, -1), rnode(GOUT, 32, 0, 20) },
  { pnode(GPIO, 32, 0, CEOUT, 0, -1), rnode(GOUT, 32, 0, 16) },
  { pnode(GPIO, 32, 0, ACLR, 0, -1), rnode(GOUT, 32, 0, 22) },
  { pnode(GPIO, 32, 0, SCLR, 0, -1), rnode(GOUT, 32, 0, 45) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 32, 0, 10) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 32, 0, 8) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 32, 0, 14) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 32, 0, 12) },
  { pnode(GPIO, 32, 0, DATAIN, 1, 0), rnode(GOUT, 32, 0, 4) },
  { pnode(GPIO, 32, 0, DATAIN, 1, 1), rnode(GOUT, 32, 0, 3) },
  { pnode(GPIO, 32, 0, DATAIN, 1, 2), rnode(GOUT, 32, 0, 8) },
  { pnode(GPIO, 32, 0, DATAIN, 1, 3), rnode(GOUT, 32, 0, 2) },
  { pnode(GPIO, 32, 0, DATAOUT, 1, 0), rnode(GIN, 32, 0, 2) },
  { pnode(GPIO, 32, 0, DATAOUT, 1, 1), rnode(GIN, 32, 0, 3) },
  { pnode(GPIO, 32, 0, DATAOUT, 1, 2), rnode(GIN, 32, 0, 4) },
  { pnode(GPIO, 32, 0, DATAOUT, 1, 3), rnode(GIN, 32, 0, 5) },
  { pnode(GPIO, 32, 0, DATAOUT, 1, 4), rnode(GIN, 32, 0, 6) },
  { pnode(GPIO, 32, 0, OEIN, 1, 0), rnode(GOUT, 32, 0, 12) },
  { pnode(GPIO, 32, 0, OEIN, 1, 1), rnode(GOUT, 32, 0, 13) },
  { pnode(GPIO, 32, 0, BSLIPMAX, 1, -1), rnode(GIN, 32, 0, 0) },
  { pnode(GPIO, 32, 0, CEIN, 1, -1), rnode(GOUT, 32, 0, 0) },
  { pnode(GPIO, 32, 0, CEOUT, 1, -1), rnode(GOUT, 32, 0, 10) },
  { pnode(GPIO, 32, 0, ACLR, 1, -1), rnode(GOUT, 32, 0, 11) },
  { pnode(GPIO, 32, 0, SCLR, 1, -1), rnode(GOUT, 32, 0, 19) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 32, 0, 11) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 32, 0, 9) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 32, 0, 15) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 32, 0, 13) },
  { pnode(GPIO, 32, 0, DATAOUT, 2, 0), rnode(GIN, 31, 0, 23) },
  { pnode(GPIO, 32, 0, DATAOUT, 2, 1), rnode(GIN, 31, 0, 20) },
  { pnode(GPIO, 32, 0, DATAOUT, 2, 2), rnode(GIN, 31, 0, 16) },
  { pnode(GPIO, 32, 0, DATAOUT, 2, 3), rnode(GIN, 31, 0, 14) },
  { pnode(GPIO, 32, 0, DATAOUT, 2, 4), rnode(GIN, 31, 0, 13) },
  { pnode(GPIO, 32, 0, OEIN, 2, 0), rnode(GOUT, 31, 0, 32) },
  { pnode(GPIO, 32, 0, OEIN, 2, 1), rnode(GOUT, 31, 0, 37) },
  { pnode(GPIO, 32, 0, BSLIPMAX, 2, -1), rnode(GIN, 31, 0, 12) },
  { pnode(GPIO, 32, 0, CEIN, 2, -1), rnode(GOUT, 31, 0, 42) },
  { pnode(GPIO, 32, 0, CEOUT, 2, -1), rnode(GOUT, 31, 0, 43) },
  { pnode(GPIO, 32, 0, SCLR, 2, -1), rnode(GOUT, 31, 0, 36) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 32, 0, 5) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 32, 0, 7) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 32, 0, 1) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 32, 0, 3) },
  { pnode(GPIO, 32, 0, DATAOUT, 3, 0), rnode(GIN, 30, 0, 13) },
  { pnode(GPIO, 32, 0, DATAOUT, 3, 1), rnode(GIN, 31, 0, 0) },
  { pnode(GPIO, 32, 0, DATAOUT, 3, 2), rnode(GIN, 31, 0, 1) },
  { pnode(GPIO, 32, 0, DATAOUT, 3, 3), rnode(GIN, 31, 0, 2) },
  { pnode(GPIO, 32, 0, DATAOUT, 3, 4), rnode(GIN, 31, 0, 3) },
  { pnode(GPIO, 32, 0, OEIN, 3, 0), rnode(GOUT, 31, 0, 6) },
  { pnode(GPIO, 32, 0, OEIN, 3, 1), rnode(GOUT, 31, 0, 7) },
  { pnode(GPIO, 32, 0, BSLIPMAX, 3, -1), rnode(GIN, 30, 0, 14) },
  { pnode(GPIO, 32, 0, CEIN, 3, -1), rnode(GOUT, 30, 0, 37) },
  { pnode(GPIO, 32, 0, CEOUT, 3, -1), rnode(GOUT, 30, 0, 36) },
  { pnode(GPIO, 32, 0, SCLR, 3, -1), rnode(GOUT, 31, 0, 5) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 32, 0, 4) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 32, 0, 6) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 32, 0, 0) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 32, 0, 2) },
  { pnode(GPIO, 32, 81, DATAIN, 0, 0), rnode(GOUT, 32, 81, 50) },
  { pnode(GPIO, 32, 81, DATAIN, 0, 1), rnode(GOUT, 32, 81, 49) },
  { pnode(GPIO, 32, 81, DATAIN, 0, 2), rnode(GOUT, 32, 81, 48) },
  { pnode(GPIO, 32, 81, DATAIN, 0, 3), rnode(GOUT, 32, 81, 47) },
  { pnode(GPIO, 32, 81, DATAOUT, 0, 0), rnode(GIN, 32, 81, 8) },
  { pnode(GPIO, 32, 81, DATAOUT, 0, 1), rnode(GIN, 32, 81, 9) },
  { pnode(GPIO, 32, 81, DATAOUT, 0, 2), rnode(GIN, 32, 81, 10) },
  { pnode(GPIO, 32, 81, DATAOUT, 0, 3), rnode(GIN, 32, 81, 11) },
  { pnode(GPIO, 32, 81, DATAOUT, 0, 4), rnode(GIN, 32, 81, 12) },
  { pnode(GPIO, 32, 81, OEIN, 0, 0), rnode(GOUT, 32, 81, 46) },
  { pnode(GPIO, 32, 81, OEIN, 0, 1), rnode(GOUT, 32, 81, 41) },
  { pnode(GPIO, 32, 81, BSLIPMAX, 0, -1), rnode(GIN, 32, 81, 7) },
  { pnode(GPIO, 32, 81, CEIN, 0, -1), rnode(GOUT, 32, 81, 20) },
  { pnode(GPIO, 32, 81, CEOUT, 0, -1), rnode(GOUT, 32, 81, 16) },
  { pnode(GPIO, 32, 81, ACLR, 0, -1), rnode(GOUT, 32, 81, 22) },
  { pnode(GPIO, 32, 81, SCLR, 0, -1), rnode(GOUT, 32, 81, 45) },
  { pnode(GPIO, 32, 81, CLKIN_IN, 0, 0), rnode(DCMUX, 32, 81, 10) },
  { pnode(GPIO, 32, 81, CLKIN_IN, 0, 1), rnode(DCMUX, 32, 81, 8) },
  { pnode(GPIO, 32, 81, CLKIN_OUT, 0, 0), rnode(DCMUX, 32, 81, 14) },
  { pnode(GPIO, 32, 81, CLKIN_OUT, 0, 1), rnode(DCMUX, 32, 81, 12) },
  { pnode(GPIO, 32, 81, DATAIN, 1, 0), rnode(GOUT, 32, 81, 4) },
  { pnode(GPIO, 32, 81, DATAIN, 1, 1), rnode(GOUT, 32, 81, 3) },
  { pnode(GPIO, 32, 81, DATAIN, 1, 2), rnode(GOUT, 32, 81, 8) },
  { pnode(GPIO, 32, 81, DATAIN, 1, 3), rnode(GOUT, 32, 81, 2) },
  { pnode(GPIO, 32, 81, DATAOUT, 1, 0), rnode(GIN, 32, 81, 2) },
  { pnode(GPIO, 32, 81, DATAOUT, 1, 1), rnode(GIN, 32, 81, 3) },
  { pnode(GPIO, 32, 81, DATAOUT, 1, 2), rnode(GIN, 32, 81, 4) },
  { pnode(GPIO, 32, 81, DATAOUT, 1, 3), rnode(GIN, 32, 81, 5) },
  { pnode(GPIO, 32, 81, DATAOUT, 1, 4), rnode(GIN, 32, 81, 6) },
  { pnode(GPIO, 32, 81, OEIN, 1, 0), rnode(GOUT, 32, 81, 12) },
  { pnode(GPIO, 32, 81, OEIN, 1, 1), rnode(GOUT, 32, 81, 13) },
  { pnode(GPIO, 32, 81, BSLIPMAX, 1, -1), rnode(GIN, 32, 81, 0) },
  { pnode(GPIO, 32, 81, CEIN, 1, -1), rnode(GOUT, 32, 81, 0) },
  { pnode(GPIO, 32, 81, CEOUT, 1, -1), rnode(GOUT, 32, 81, 10) },
  { pnode(GPIO, 32, 81, ACLR, 1, -1), rnode(GOUT, 32, 81, 11) },
  { pnode(GPIO, 32, 81, SCLR, 1, -1), rnode(GOUT, 32, 81, 19) },
  { pnode(GPIO, 32, 81, CLKIN_IN, 1, 0), rnode(DCMUX, 32, 81, 11) },
  { pnode(GPIO, 32, 81, CLKIN_IN, 1, 1), rnode(DCMUX, 32, 81, 9) },
  { pnode(GPIO, 32, 81, CLKIN_OUT, 1, 0), rnode(DCMUX, 32, 81, 15) },
  { pnode(GPIO, 32, 81, CLKIN_OUT, 1, 1), rnode(DCMUX, 32, 81, 13) },
  { pnode(GPIO, 32, 81, DATAIN, 2, 0), rnode(GOUT, 31, 81, 34) },
  { pnode(GPIO, 32, 81, DATAIN, 2, 1), rnode(GOUT, 31, 81, 29) },
  { pnode(GPIO, 32, 81, DATAIN, 2, 2), rnode(GOUT, 31, 81, 30) },
  { pnode(GPIO, 32, 81, DATAIN, 2, 3), rnode(GOUT, 31, 81, 31) },
  { pnode(GPIO, 32, 81, DATAOUT, 2, 0), rnode(GIN, 31, 81, 23) },
  { pnode(GPIO, 32, 81, DATAOUT, 2, 1), rnode(GIN, 31, 81, 20) },
  { pnode(GPIO, 32, 81, DATAOUT, 2, 2), rnode(GIN, 31, 81, 16) },
  { pnode(GPIO, 32, 81, DATAOUT, 2, 3), rnode(GIN, 31, 81, 14) },
  { pnode(GPIO, 32, 81, DATAOUT, 2, 4), rnode(GIN, 31, 81, 13) },
  { pnode(GPIO, 32, 81, OEIN, 2, 0), rnode(GOUT, 31, 81, 32) },
  { pnode(GPIO, 32, 81, OEIN, 2, 1), rnode(GOUT, 31, 81, 37) },
  { pnode(GPIO, 32, 81, BSLIPMAX, 2, -1), rnode(GIN, 31, 81, 12) },
  { pnode(GPIO, 32, 81, CEIN, 2, -1), rnode(GOUT, 31, 81, 42) },
  { pnode(GPIO, 32, 81, CEOUT, 2, -1), rnode(GOUT, 31, 81, 43) },
  { pnode(GPIO, 32, 81, ACLR, 2, -1), rnode(GOUT, 31, 81, 38) },
  { pnode(GPIO, 32, 81, SCLR, 2, -1), rnode(GOUT, 31, 81, 36) },
  { pnode(GPIO, 32, 81, CLKIN_IN, 2, 0), rnode(DCMUX, 32, 81, 5) },
  { pnode(GPIO, 32, 81, CLKIN_IN, 2, 1), rnode(DCMUX, 32, 81, 7) },
  { pnode(GPIO, 32, 81, CLKIN_OUT, 2, 0), rnode(DCMUX, 32, 81, 1) },
  { pnode(GPIO, 32, 81, CLKIN_OUT, 2, 1), rnode(DCMUX, 32, 81, 3) },
  { pnode(GPIO, 32, 81, DATAIN, 3, 0), rnode(GOUT, 31, 81, 0) },
  { pnode(GPIO, 32, 81, DATAIN, 3, 1), rnode(GOUT, 31, 81, 10) },
  { pnode(GPIO, 32, 81, DATAIN, 3, 2), rnode(GOUT, 31, 81, 9) },
  { pnode(GPIO, 32, 81, DATAIN, 3, 3), rnode(GOUT, 31, 81, 11) },
  { pnode(GPIO, 32, 81, DATAOUT, 3, 0), rnode(GIN, 30, 81, 13) },
  { pnode(GPIO, 32, 81, DATAOUT, 3, 1), rnode(GIN, 31, 81, 0) },
  { pnode(GPIO, 32, 81, DATAOUT, 3, 2), rnode(GIN, 31, 81, 1) },
  { pnode(GPIO, 32, 81, DATAOUT, 3, 3), rnode(GIN, 31, 81, 2) },
  { pnode(GPIO, 32, 81, DATAOUT, 3, 4), rnode(GIN, 31, 81, 3) },
  { pnode(GPIO, 32, 81, OEIN, 3, 0), rnode(GOUT, 31, 81, 6) },
  { pnode(GPIO, 32, 81, OEIN, 3, 1), rnode(GOUT, 31, 81, 7) },
  { pnode(GPIO, 32, 81, BSLIPMAX, 3, -1), rnode(GIN, 30, 81, 14) },
  { pnode(GPIO, 32, 81, CEIN, 3, -1), rnode(GOUT, 30, 81, 37) },
  { pnode(GPIO, 32, 81, CEOUT, 3, -1), rnode(GOUT, 30, 81, 36) },
  { pnode(GPIO, 32, 81, ACLR, 3, -1), rnode(GOUT, 30, 81, 26) },
  { pnode(GPIO, 32, 81, SCLR, 3, -1), rnode(GOUT, 31, 81, 5) },
  { pnode(GPIO, 32, 81, CLKIN_IN, 3, 0), rnode(DCMUX, 32, 81, 4) },
  { pnode(GPIO, 32, 81, CLKIN_IN, 3, 1), rnode(DCMUX, 32, 81, 6) },
  { pnode(GPIO, 32, 81, CLKIN_OUT, 3, 0), rnode(DCMUX, 32, 81, 0) },
  { pnode(GPIO, 32, 81, CLKIN_OUT, 3, 1), rnode(DCMUX, 32, 81, 2) },
  { pnode(GPIO, 34, 0, DATAOUT, 0, 0), rnode(GIN, 34, 0, 8) },
  { pnode(GPIO, 34, 0, DATAOUT, 0, 1), rnode(GIN, 34, 0, 9) },
  { pnode(GPIO, 34, 0, DATAOUT, 0, 2), rnode(GIN, 34, 0, 10) },
  { pnode(GPIO, 34, 0, DATAOUT, 0, 3), rnode(GIN, 34, 0, 11) },
  { pnode(GPIO, 34, 0, DATAOUT, 0, 4), rnode(GIN, 34, 0, 12) },
  { pnode(GPIO, 34, 0, OEIN, 0, 0), rnode(GOUT, 34, 0, 50) },
  { pnode(GPIO, 34, 0, OEIN, 0, 1), rnode(GOUT, 34, 0, 49) },
  { pnode(GPIO, 34, 0, BSLIPMAX, 0, -1), rnode(GIN, 34, 0, 7) },
  { pnode(GPIO, 34, 0, CEIN, 0, -1), rnode(GOUT, 34, 0, 19) },
  { pnode(GPIO, 34, 0, CEOUT, 0, -1), rnode(GOUT, 34, 0, 15) },
  { pnode(GPIO, 34, 0, SCLR, 0, -1), rnode(GOUT, 34, 0, 29) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 34, 0, 10) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 34, 0, 8) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 34, 0, 14) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 34, 0, 12) },
  { pnode(GPIO, 34, 0, DATAOUT, 1, 0), rnode(GIN, 34, 0, 2) },
  { pnode(GPIO, 34, 0, DATAOUT, 1, 1), rnode(GIN, 34, 0, 3) },
  { pnode(GPIO, 34, 0, DATAOUT, 1, 2), rnode(GIN, 34, 0, 4) },
  { pnode(GPIO, 34, 0, DATAOUT, 1, 3), rnode(GIN, 34, 0, 5) },
  { pnode(GPIO, 34, 0, DATAOUT, 1, 4), rnode(GIN, 34, 0, 6) },
  { pnode(GPIO, 34, 0, OEIN, 1, 0), rnode(GOUT, 34, 0, 13) },
  { pnode(GPIO, 34, 0, OEIN, 1, 1), rnode(GOUT, 34, 0, 18) },
  { pnode(GPIO, 34, 0, BSLIPMAX, 1, -1), rnode(GIN, 34, 0, 1) },
  { pnode(GPIO, 34, 0, CEIN, 1, -1), rnode(GOUT, 34, 0, 4) },
  { pnode(GPIO, 34, 0, CEOUT, 1, -1), rnode(GOUT, 34, 0, 3) },
  { pnode(GPIO, 34, 0, SCLR, 1, -1), rnode(GOUT, 34, 0, 14) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 34, 0, 11) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 34, 0, 9) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 34, 0, 15) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 34, 0, 13) },
  { pnode(GPIO, 34, 0, DATAOUT, 2, 0), rnode(GIN, 33, 0, 16) },
  { pnode(GPIO, 34, 0, DATAOUT, 2, 1), rnode(GIN, 33, 0, 15) },
  { pnode(GPIO, 34, 0, DATAOUT, 2, 2), rnode(GIN, 33, 0, 14) },
  { pnode(GPIO, 34, 0, DATAOUT, 2, 3), rnode(GIN, 33, 0, 13) },
  { pnode(GPIO, 34, 0, DATAOUT, 2, 4), rnode(GIN, 34, 0, 0) },
  { pnode(GPIO, 34, 0, OEIN, 2, 0), rnode(GOUT, 34, 0, 6) },
  { pnode(GPIO, 34, 0, OEIN, 2, 1), rnode(GOUT, 34, 0, 7) },
  { pnode(GPIO, 34, 0, BSLIPMAX, 2, -1), rnode(GIN, 33, 0, 17) },
  { pnode(GPIO, 34, 0, CEIN, 2, -1), rnode(GOUT, 33, 0, 35) },
  { pnode(GPIO, 34, 0, CEOUT, 2, -1), rnode(GOUT, 33, 0, 36) },
  { pnode(GPIO, 34, 0, SCLR, 2, -1), rnode(GOUT, 34, 0, 5) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 34, 0, 5) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 34, 0, 7) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 34, 0, 1) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 34, 0, 3) },
  { pnode(GPIO, 34, 0, DATAIN, 3, 0), rnode(GOUT, 33, 0, 34) },
  { pnode(GPIO, 34, 0, DATAIN, 3, 1), rnode(GOUT, 33, 0, 29) },
  { pnode(GPIO, 34, 0, DATAIN, 3, 2), rnode(GOUT, 33, 0, 30) },
  { pnode(GPIO, 34, 0, DATAIN, 3, 3), rnode(GOUT, 33, 0, 31) },
  { pnode(GPIO, 34, 0, DATAOUT, 3, 0), rnode(GIN, 33, 0, 22) },
  { pnode(GPIO, 34, 0, DATAOUT, 3, 1), rnode(GIN, 33, 0, 21) },
  { pnode(GPIO, 34, 0, DATAOUT, 3, 2), rnode(GIN, 33, 0, 20) },
  { pnode(GPIO, 34, 0, DATAOUT, 3, 3), rnode(GIN, 33, 0, 19) },
  { pnode(GPIO, 34, 0, DATAOUT, 3, 4), rnode(GIN, 33, 0, 18) },
  { pnode(GPIO, 34, 0, OEIN, 3, 0), rnode(GOUT, 33, 0, 33) },
  { pnode(GPIO, 34, 0, OEIN, 3, 1), rnode(GOUT, 33, 0, 32) },
  { pnode(GPIO, 34, 0, BSLIPMAX, 3, -1), rnode(GIN, 33, 0, 23) },
  { pnode(GPIO, 34, 0, CEIN, 3, -1), rnode(GOUT, 33, 0, 38) },
  { pnode(GPIO, 34, 0, CEOUT, 3, -1), rnode(GOUT, 33, 0, 27) },
  { pnode(GPIO, 34, 0, ACLR, 3, -1), rnode(GOUT, 33, 0, 28) },
  { pnode(GPIO, 34, 0, SCLR, 3, -1), rnode(GOUT, 33, 0, 37) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 34, 0, 4) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 34, 0, 6) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 34, 0, 0) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 34, 0, 2) },
  { pnode(GPIO, 34, 81, DATAIN, 0, 0), rnode(GOUT, 34, 81, 22) },
  { pnode(GPIO, 34, 81, DATAIN, 0, 1), rnode(GOUT, 34, 81, 23) },
  { pnode(GPIO, 34, 81, DATAIN, 0, 2), rnode(GOUT, 34, 81, 24) },
  { pnode(GPIO, 34, 81, DATAIN, 0, 3), rnode(GOUT, 34, 81, 25) },
  { pnode(GPIO, 34, 81, DATAOUT, 0, 0), rnode(GIN, 34, 81, 8) },
  { pnode(GPIO, 34, 81, DATAOUT, 0, 1), rnode(GIN, 34, 81, 9) },
  { pnode(GPIO, 34, 81, DATAOUT, 0, 2), rnode(GIN, 34, 81, 10) },
  { pnode(GPIO, 34, 81, DATAOUT, 0, 3), rnode(GIN, 34, 81, 11) },
  { pnode(GPIO, 34, 81, DATAOUT, 0, 4), rnode(GIN, 34, 81, 12) },
  { pnode(GPIO, 34, 81, OEIN, 0, 0), rnode(GOUT, 34, 81, 50) },
  { pnode(GPIO, 34, 81, OEIN, 0, 1), rnode(GOUT, 34, 81, 49) },
  { pnode(GPIO, 34, 81, BSLIPMAX, 0, -1), rnode(GIN, 34, 81, 7) },
  { pnode(GPIO, 34, 81, CEIN, 0, -1), rnode(GOUT, 34, 81, 19) },
  { pnode(GPIO, 34, 81, CEOUT, 0, -1), rnode(GOUT, 34, 81, 15) },
  { pnode(GPIO, 34, 81, ACLR, 0, -1), rnode(GOUT, 34, 81, 20) },
  { pnode(GPIO, 34, 81, SCLR, 0, -1), rnode(GOUT, 34, 81, 29) },
  { pnode(GPIO, 34, 81, CLKIN_IN, 0, 0), rnode(DCMUX, 34, 81, 10) },
  { pnode(GPIO, 34, 81, CLKIN_IN, 0, 1), rnode(DCMUX, 34, 81, 8) },
  { pnode(GPIO, 34, 81, CLKIN_OUT, 0, 0), rnode(DCMUX, 34, 81, 14) },
  { pnode(GPIO, 34, 81, CLKIN_OUT, 0, 1), rnode(DCMUX, 34, 81, 12) },
  { pnode(GPIO, 34, 81, DATAIN, 1, 0), rnode(GOUT, 34, 81, 2) },
  { pnode(GPIO, 34, 81, DATAIN, 1, 1), rnode(GOUT, 34, 81, 1) },
  { pnode(GPIO, 34, 81, DATAIN, 1, 2), rnode(GOUT, 34, 81, 12) },
  { pnode(GPIO, 34, 81, DATAIN, 1, 3), rnode(GOUT, 34, 81, 17) },
  { pnode(GPIO, 34, 81, DATAOUT, 1, 0), rnode(GIN, 34, 81, 2) },
  { pnode(GPIO, 34, 81, DATAOUT, 1, 1), rnode(GIN, 34, 81, 3) },
  { pnode(GPIO, 34, 81, DATAOUT, 1, 2), rnode(GIN, 34, 81, 4) },
  { pnode(GPIO, 34, 81, DATAOUT, 1, 3), rnode(GIN, 34, 81, 5) },
  { pnode(GPIO, 34, 81, DATAOUT, 1, 4), rnode(GIN, 34, 81, 6) },
  { pnode(GPIO, 34, 81, OEIN, 1, 0), rnode(GOUT, 34, 81, 13) },
  { pnode(GPIO, 34, 81, OEIN, 1, 1), rnode(GOUT, 34, 81, 18) },
  { pnode(GPIO, 34, 81, BSLIPMAX, 1, -1), rnode(GIN, 34, 81, 1) },
  { pnode(GPIO, 34, 81, CEIN, 1, -1), rnode(GOUT, 34, 81, 4) },
  { pnode(GPIO, 34, 81, CEOUT, 1, -1), rnode(GOUT, 34, 81, 3) },
  { pnode(GPIO, 34, 81, ACLR, 1, -1), rnode(GOUT, 34, 81, 8) },
  { pnode(GPIO, 34, 81, SCLR, 1, -1), rnode(GOUT, 34, 81, 14) },
  { pnode(GPIO, 34, 81, CLKIN_IN, 1, 0), rnode(DCMUX, 34, 81, 11) },
  { pnode(GPIO, 34, 81, CLKIN_IN, 1, 1), rnode(DCMUX, 34, 81, 9) },
  { pnode(GPIO, 34, 81, CLKIN_OUT, 1, 0), rnode(DCMUX, 34, 81, 15) },
  { pnode(GPIO, 34, 81, CLKIN_OUT, 1, 1), rnode(DCMUX, 34, 81, 13) },
  { pnode(GPIO, 34, 81, DATAIN, 2, 0), rnode(GOUT, 34, 81, 0) },
  { pnode(GPIO, 34, 81, DATAIN, 2, 1), rnode(GOUT, 34, 81, 10) },
  { pnode(GPIO, 34, 81, DATAIN, 2, 2), rnode(GOUT, 34, 81, 9) },
  { pnode(GPIO, 34, 81, DATAIN, 2, 3), rnode(GOUT, 34, 81, 11) },
  { pnode(GPIO, 34, 81, DATAOUT, 2, 0), rnode(GIN, 33, 81, 16) },
  { pnode(GPIO, 34, 81, DATAOUT, 2, 1), rnode(GIN, 33, 81, 15) },
  { pnode(GPIO, 34, 81, DATAOUT, 2, 2), rnode(GIN, 33, 81, 14) },
  { pnode(GPIO, 34, 81, DATAOUT, 2, 3), rnode(GIN, 33, 81, 13) },
  { pnode(GPIO, 34, 81, DATAOUT, 2, 4), rnode(GIN, 34, 81, 0) },
  { pnode(GPIO, 34, 81, OEIN, 2, 0), rnode(GOUT, 34, 81, 6) },
  { pnode(GPIO, 34, 81, OEIN, 2, 1), rnode(GOUT, 34, 81, 7) },
  { pnode(GPIO, 34, 81, BSLIPMAX, 2, -1), rnode(GIN, 33, 81, 17) },
  { pnode(GPIO, 34, 81, CEIN, 2, -1), rnode(GOUT, 33, 81, 35) },
  { pnode(GPIO, 34, 81, CEOUT, 2, -1), rnode(GOUT, 33, 81, 36) },
  { pnode(GPIO, 34, 81, ACLR, 2, -1), rnode(GOUT, 33, 81, 26) },
  { pnode(GPIO, 34, 81, SCLR, 2, -1), rnode(GOUT, 34, 81, 5) },
  { pnode(GPIO, 34, 81, CLKIN_IN, 2, 0), rnode(DCMUX, 34, 81, 5) },
  { pnode(GPIO, 34, 81, CLKIN_IN, 2, 1), rnode(DCMUX, 34, 81, 7) },
  { pnode(GPIO, 34, 81, CLKIN_OUT, 2, 0), rnode(DCMUX, 34, 81, 1) },
  { pnode(GPIO, 34, 81, CLKIN_OUT, 2, 1), rnode(DCMUX, 34, 81, 3) },
  { pnode(GPIO, 34, 81, DATAIN, 3, 0), rnode(GOUT, 33, 81, 34) },
  { pnode(GPIO, 34, 81, DATAIN, 3, 1), rnode(GOUT, 33, 81, 29) },
  { pnode(GPIO, 34, 81, DATAIN, 3, 2), rnode(GOUT, 33, 81, 30) },
  { pnode(GPIO, 34, 81, DATAIN, 3, 3), rnode(GOUT, 33, 81, 31) },
  { pnode(GPIO, 34, 81, DATAOUT, 3, 0), rnode(GIN, 33, 81, 22) },
  { pnode(GPIO, 34, 81, DATAOUT, 3, 1), rnode(GIN, 33, 81, 21) },
  { pnode(GPIO, 34, 81, DATAOUT, 3, 2), rnode(GIN, 33, 81, 20) },
  { pnode(GPIO, 34, 81, DATAOUT, 3, 3), rnode(GIN, 33, 81, 19) },
  { pnode(GPIO, 34, 81, DATAOUT, 3, 4), rnode(GIN, 33, 81, 18) },
  { pnode(GPIO, 34, 81, OEIN, 3, 0), rnode(GOUT, 33, 81, 33) },
  { pnode(GPIO, 34, 81, OEIN, 3, 1), rnode(GOUT, 33, 81, 32) },
  { pnode(GPIO, 34, 81, BSLIPMAX, 3, -1), rnode(GIN, 33, 81, 23) },
  { pnode(GPIO, 34, 81, CEIN, 3, -1), rnode(GOUT, 33, 81, 38) },
  { pnode(GPIO, 34, 81, CEOUT, 3, -1), rnode(GOUT, 33, 81, 27) },
  { pnode(GPIO, 34, 81, ACLR, 3, -1), rnode(GOUT, 33, 81, 28) },
  { pnode(GPIO, 34, 81, SCLR, 3, -1), rnode(GOUT, 33, 81, 37) },
  { pnode(GPIO, 34, 81, CLKIN_IN, 3, 0), rnode(DCMUX, 34, 81, 4) },
  { pnode(GPIO, 34, 81, CLKIN_IN, 3, 1), rnode(DCMUX, 34, 81, 6) },
  { pnode(GPIO, 34, 81, CLKIN_OUT, 3, 0), rnode(DCMUX, 34, 81, 0) },
  { pnode(GPIO, 34, 81, CLKIN_OUT, 3, 1), rnode(DCMUX, 34, 81, 2) },
  { pnode(GPIO, 36, 0, DATAOUT, 0, 0), rnode(GIN, 36, 0, 0) },
  { pnode(GPIO, 36, 0, DATAOUT, 0, 1), rnode(GIN, 36, 0, 1) },
  { pnode(GPIO, 36, 0, DATAOUT, 0, 2), rnode(GIN, 36, 0, 2) },
  { pnode(GPIO, 36, 0, DATAOUT, 0, 3), rnode(GIN, 36, 0, 3) },
  { pnode(GPIO, 36, 0, DATAOUT, 0, 4), rnode(GIN, 36, 0, 4) },
  { pnode(GPIO, 36, 0, OEIN, 0, 0), rnode(GOUT, 36, 0, 2) },
  { pnode(GPIO, 36, 0, OEIN, 0, 1), rnode(GOUT, 36, 0, 1) },
  { pnode(GPIO, 36, 0, BSLIPMAX, 0, -1), rnode(GIN, 35, 0, 13) },
  { pnode(GPIO, 36, 0, CEIN, 0, -1), rnode(GOUT, 36, 0, 0) },
  { pnode(GPIO, 36, 0, CEOUT, 0, -1), rnode(GOUT, 36, 0, 10) },
  { pnode(GPIO, 36, 0, ACLR, 0, -1), rnode(GOUT, 36, 0, 9) },
  { pnode(GPIO, 36, 0, SCLR, 0, -1), rnode(GOUT, 36, 0, 12) },
  { pnode(GPIO, 36, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 36, 0, 10) },
  { pnode(GPIO, 36, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 36, 0, 8) },
  { pnode(GPIO, 36, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 36, 0, 14) },
  { pnode(GPIO, 36, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 36, 0, 12) },
  { pnode(GPIO, 36, 0, DATAOUT, 1, 0), rnode(GIN, 35, 0, 18) },
  { pnode(GPIO, 36, 0, DATAOUT, 1, 1), rnode(GIN, 35, 0, 17) },
  { pnode(GPIO, 36, 0, DATAOUT, 1, 2), rnode(GIN, 35, 0, 16) },
  { pnode(GPIO, 36, 0, DATAOUT, 1, 3), rnode(GIN, 35, 0, 15) },
  { pnode(GPIO, 36, 0, DATAOUT, 1, 4), rnode(GIN, 35, 0, 14) },
  { pnode(GPIO, 36, 0, OEIN, 1, 0), rnode(GOUT, 35, 0, 35) },
  { pnode(GPIO, 36, 0, OEIN, 1, 1), rnode(GOUT, 35, 0, 36) },
  { pnode(GPIO, 36, 0, BSLIPMAX, 1, -1), rnode(GIN, 35, 0, 19) },
  { pnode(GPIO, 36, 0, CEIN, 1, -1), rnode(GOUT, 35, 0, 28) },
  { pnode(GPIO, 36, 0, CEOUT, 1, -1), rnode(GOUT, 35, 0, 34) },
  { pnode(GPIO, 36, 0, ACLR, 1, -1), rnode(GOUT, 35, 0, 29) },
  { pnode(GPIO, 36, 0, SCLR, 1, -1), rnode(GOUT, 35, 0, 26) },
  { pnode(GPIO, 36, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 36, 0, 11) },
  { pnode(GPIO, 36, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 36, 0, 9) },
  { pnode(GPIO, 36, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 36, 0, 15) },
  { pnode(GPIO, 36, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 36, 0, 13) },
  { pnode(GPIO, 36, 0, DATAOUT, 2, 0), rnode(GIN, 35, 0, 12) },
  { pnode(GPIO, 36, 0, DATAOUT, 2, 1), rnode(GIN, 35, 0, 24) },
  { pnode(GPIO, 36, 0, DATAOUT, 2, 2), rnode(GIN, 35, 0, 23) },
  { pnode(GPIO, 36, 0, DATAOUT, 2, 3), rnode(GIN, 35, 0, 22) },
  { pnode(GPIO, 36, 0, DATAOUT, 2, 4), rnode(GIN, 35, 0, 21) },
  { pnode(GPIO, 36, 0, OEIN, 2, 0), rnode(GOUT, 35, 0, 40) },
  { pnode(GPIO, 36, 0, OEIN, 2, 1), rnode(GOUT, 35, 0, 44) },
  { pnode(GPIO, 36, 0, BSLIPMAX, 2, -1), rnode(GIN, 35, 0, 10) },
  { pnode(GPIO, 36, 0, CEIN, 2, -1), rnode(GOUT, 35, 0, 8) },
  { pnode(GPIO, 36, 0, CEOUT, 2, -1), rnode(GOUT, 35, 0, 1) },
  { pnode(GPIO, 36, 0, SCLR, 2, -1), rnode(GOUT, 35, 0, 38) },
  { pnode(GPIO, 36, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 36, 0, 5) },
  { pnode(GPIO, 36, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 36, 0, 7) },
  { pnode(GPIO, 36, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 36, 0, 1) },
  { pnode(GPIO, 36, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 36, 0, 3) },
  { pnode(GPIO, 36, 0, DATAOUT, 3, 0), rnode(GIN, 34, 0, 17) },
  { pnode(GPIO, 36, 0, DATAOUT, 3, 1), rnode(GIN, 34, 0, 16) },
  { pnode(GPIO, 36, 0, DATAOUT, 3, 2), rnode(GIN, 34, 0, 15) },
  { pnode(GPIO, 36, 0, DATAOUT, 3, 3), rnode(GIN, 34, 0, 14) },
  { pnode(GPIO, 36, 0, DATAOUT, 3, 4), rnode(GIN, 34, 0, 13) },
  { pnode(GPIO, 36, 0, OEIN, 3, 0), rnode(GOUT, 35, 0, 11) },
  { pnode(GPIO, 36, 0, OEIN, 3, 1), rnode(GOUT, 35, 0, 6) },
  { pnode(GPIO, 36, 0, BSLIPMAX, 3, -1), rnode(GIN, 34, 0, 25) },
  { pnode(GPIO, 36, 0, CEIN, 3, -1), rnode(GOUT, 34, 0, 32) },
  { pnode(GPIO, 36, 0, CEOUT, 3, -1), rnode(GOUT, 34, 0, 37) },
  { pnode(GPIO, 36, 0, SCLR, 3, -1), rnode(GOUT, 35, 0, 4) },
  { pnode(GPIO, 36, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 36, 0, 4) },
  { pnode(GPIO, 36, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 36, 0, 6) },
  { pnode(GPIO, 36, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 36, 0, 0) },
  { pnode(GPIO, 36, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 36, 0, 2) },
  { pnode(GPIO, 36, 81, DATAIN, 0, 0), rnode(GOUT, 36, 81, 5) },
  { pnode(GPIO, 36, 81, DATAIN, 0, 1), rnode(GOUT, 36, 81, 4) },
  { pnode(GPIO, 36, 81, DATAIN, 0, 2), rnode(GOUT, 36, 81, 3) },
  { pnode(GPIO, 36, 81, DATAIN, 0, 3), rnode(GOUT, 36, 81, 8) },
  { pnode(GPIO, 36, 81, DATAOUT, 0, 0), rnode(GIN, 36, 81, 0) },
  { pnode(GPIO, 36, 81, DATAOUT, 0, 1), rnode(GIN, 36, 81, 1) },
  { pnode(GPIO, 36, 81, DATAOUT, 0, 2), rnode(GIN, 36, 81, 2) },
  { pnode(GPIO, 36, 81, DATAOUT, 0, 3), rnode(GIN, 36, 81, 3) },
  { pnode(GPIO, 36, 81, DATAOUT, 0, 4), rnode(GIN, 36, 81, 4) },
  { pnode(GPIO, 36, 81, OEIN, 0, 0), rnode(GOUT, 36, 81, 2) },
  { pnode(GPIO, 36, 81, OEIN, 0, 1), rnode(GOUT, 36, 81, 1) },
  { pnode(GPIO, 36, 81, BSLIPMAX, 0, -1), rnode(GIN, 35, 81, 13) },
  { pnode(GPIO, 36, 81, CEIN, 0, -1), rnode(GOUT, 36, 81, 0) },
  { pnode(GPIO, 36, 81, CEOUT, 0, -1), rnode(GOUT, 36, 81, 10) },
  { pnode(GPIO, 36, 81, ACLR, 0, -1), rnode(GOUT, 36, 81, 9) },
  { pnode(GPIO, 36, 81, SCLR, 0, -1), rnode(GOUT, 36, 81, 12) },
  { pnode(GPIO, 36, 81, CLKIN_IN, 0, 0), rnode(DCMUX, 36, 81, 10) },
  { pnode(GPIO, 36, 81, CLKIN_IN, 0, 1), rnode(DCMUX, 36, 81, 8) },
  { pnode(GPIO, 36, 81, CLKIN_OUT, 0, 0), rnode(DCMUX, 36, 81, 14) },
  { pnode(GPIO, 36, 81, CLKIN_OUT, 0, 1), rnode(DCMUX, 36, 81, 12) },
  { pnode(GPIO, 36, 81, DATAIN, 1, 0), rnode(GOUT, 35, 81, 31) },
  { pnode(GPIO, 36, 81, DATAIN, 1, 1), rnode(GOUT, 35, 81, 33) },
  { pnode(GPIO, 36, 81, DATAIN, 1, 2), rnode(GOUT, 35, 81, 32) },
  { pnode(GPIO, 36, 81, DATAIN, 1, 3), rnode(GOUT, 35, 81, 37) },
  { pnode(GPIO, 36, 81, DATAOUT, 1, 0), rnode(GIN, 35, 81, 18) },
  { pnode(GPIO, 36, 81, DATAOUT, 1, 1), rnode(GIN, 35, 81, 17) },
  { pnode(GPIO, 36, 81, DATAOUT, 1, 2), rnode(GIN, 35, 81, 16) },
  { pnode(GPIO, 36, 81, DATAOUT, 1, 3), rnode(GIN, 35, 81, 15) },
  { pnode(GPIO, 36, 81, DATAOUT, 1, 4), rnode(GIN, 35, 81, 14) },
  { pnode(GPIO, 36, 81, OEIN, 1, 0), rnode(GOUT, 35, 81, 35) },
  { pnode(GPIO, 36, 81, OEIN, 1, 1), rnode(GOUT, 35, 81, 36) },
  { pnode(GPIO, 36, 81, BSLIPMAX, 1, -1), rnode(GIN, 35, 81, 19) },
  { pnode(GPIO, 36, 81, CEIN, 1, -1), rnode(GOUT, 35, 81, 28) },
  { pnode(GPIO, 36, 81, CEOUT, 1, -1), rnode(GOUT, 35, 81, 34) },
  { pnode(GPIO, 36, 81, ACLR, 1, -1), rnode(GOUT, 35, 81, 29) },
  { pnode(GPIO, 36, 81, SCLR, 1, -1), rnode(GOUT, 35, 81, 26) },
  { pnode(GPIO, 36, 81, CLKIN_IN, 1, 0), rnode(DCMUX, 36, 81, 11) },
  { pnode(GPIO, 36, 81, CLKIN_IN, 1, 1), rnode(DCMUX, 36, 81, 9) },
  { pnode(GPIO, 36, 81, CLKIN_OUT, 1, 0), rnode(DCMUX, 36, 81, 15) },
  { pnode(GPIO, 36, 81, CLKIN_OUT, 1, 1), rnode(DCMUX, 36, 81, 13) },
  { pnode(GPIO, 36, 81, DATAIN, 2, 0), rnode(GOUT, 35, 81, 42) },
  { pnode(GPIO, 36, 81, DATAIN, 2, 1), rnode(GOUT, 35, 81, 46) },
  { pnode(GPIO, 36, 81, DATAIN, 2, 2), rnode(GOUT, 35, 81, 41) },
  { pnode(GPIO, 36, 81, DATAIN, 2, 3), rnode(GOUT, 35, 81, 45) },
  { pnode(GPIO, 36, 81, DATAOUT, 2, 0), rnode(GIN, 35, 81, 12) },
  { pnode(GPIO, 36, 81, DATAOUT, 2, 1), rnode(GIN, 35, 81, 24) },
  { pnode(GPIO, 36, 81, DATAOUT, 2, 2), rnode(GIN, 35, 81, 23) },
  { pnode(GPIO, 36, 81, DATAOUT, 2, 3), rnode(GIN, 35, 81, 22) },
  { pnode(GPIO, 36, 81, DATAOUT, 2, 4), rnode(GIN, 35, 81, 21) },
  { pnode(GPIO, 36, 81, OEIN, 2, 0), rnode(GOUT, 35, 81, 40) },
  { pnode(GPIO, 36, 81, OEIN, 2, 1), rnode(GOUT, 35, 81, 44) },
  { pnode(GPIO, 36, 81, BSLIPMAX, 2, -1), rnode(GIN, 35, 81, 10) },
  { pnode(GPIO, 36, 81, CEIN, 2, -1), rnode(GOUT, 35, 81, 8) },
  { pnode(GPIO, 36, 81, CEOUT, 2, -1), rnode(GOUT, 35, 81, 1) },
  { pnode(GPIO, 36, 81, ACLR, 2, -1), rnode(GOUT, 35, 81, 12) },
  { pnode(GPIO, 36, 81, SCLR, 2, -1), rnode(GOUT, 35, 81, 38) },
  { pnode(GPIO, 36, 81, CLKIN_IN, 2, 0), rnode(DCMUX, 36, 81, 5) },
  { pnode(GPIO, 36, 81, CLKIN_IN, 2, 1), rnode(DCMUX, 36, 81, 7) },
  { pnode(GPIO, 36, 81, CLKIN_OUT, 2, 0), rnode(DCMUX, 36, 81, 1) },
  { pnode(GPIO, 36, 81, CLKIN_OUT, 2, 1), rnode(DCMUX, 36, 81, 3) },
  { pnode(GPIO, 36, 81, DATAIN, 3, 0), rnode(GOUT, 34, 81, 26) },
  { pnode(GPIO, 36, 81, DATAIN, 3, 1), rnode(GOUT, 35, 81, 0) },
  { pnode(GPIO, 36, 81, DATAIN, 3, 2), rnode(GOUT, 35, 81, 10) },
  { pnode(GPIO, 36, 81, DATAIN, 3, 3), rnode(GOUT, 35, 81, 9) },
  { pnode(GPIO, 36, 81, DATAOUT, 3, 0), rnode(GIN, 34, 81, 17) },
  { pnode(GPIO, 36, 81, DATAOUT, 3, 1), rnode(GIN, 34, 81, 16) },
  { pnode(GPIO, 36, 81, DATAOUT, 3, 2), rnode(GIN, 34, 81, 15) },
  { pnode(GPIO, 36, 81, DATAOUT, 3, 3), rnode(GIN, 34, 81, 14) },
  { pnode(GPIO, 36, 81, DATAOUT, 3, 4), rnode(GIN, 34, 81, 13) },
  { pnode(GPIO, 36, 81, OEIN, 3, 0), rnode(GOUT, 35, 81, 11) },
  { pnode(GPIO, 36, 81, OEIN, 3, 1), rnode(GOUT, 35, 81, 6) },
  { pnode(GPIO, 36, 81, BSLIPMAX, 3, -1), rnode(GIN, 34, 81, 25) },
  { pnode(GPIO, 36, 81, CEIN, 3, -1), rnode(GOUT, 34, 81, 32) },
  { pnode(GPIO, 36, 81, CEOUT, 3, -1), rnode(GOUT, 34, 81, 37) },
  { pnode(GPIO, 36, 81, ACLR, 3, -1), rnode(GOUT, 34, 81, 35) },
  { pnode(GPIO, 36, 81, SCLR, 3, -1), rnode(GOUT, 35, 81, 4) },
  { pnode(GPIO, 36, 81, CLKIN_IN, 3, 0), rnode(DCMUX, 36, 81, 4) },
  { pnode(GPIO, 36, 81, CLKIN_IN, 3, 1), rnode(DCMUX, 36, 81, 6) },
  { pnode(GPIO, 36, 81, CLKIN_OUT, 3, 0), rnode(DCMUX, 36, 81, 0) },
  { pnode(GPIO, 36, 81, CLKIN_OUT, 3, 1), rnode(DCMUX, 36, 81, 2) },
  { pnode(GPIO, 38, 0, DATAOUT, 0, 0), rnode(GIN, 38, 0, 0) },
  { pnode(GPIO, 38, 0, DATAOUT, 0, 1), rnode(GIN, 38, 0, 1) },
  { pnode(GPIO, 38, 0, DATAOUT, 0, 2), rnode(GIN, 38, 0, 2) },
  { pnode(GPIO, 38, 0, DATAOUT, 0, 3), rnode(GIN, 38, 0, 3) },
  { pnode(GPIO, 38, 0, DATAOUT, 0, 4), rnode(GIN, 38, 0, 4) },
  { pnode(GPIO, 38, 0, OEIN, 0, 0), rnode(GOUT, 38, 0, 7) },
  { pnode(GPIO, 38, 0, OEIN, 0, 1), rnode(GOUT, 38, 0, 5) },
  { pnode(GPIO, 38, 0, BSLIPMAX, 0, -1), rnode(GIN, 37, 0, 13) },
  { pnode(GPIO, 38, 0, CEIN, 0, -1), rnode(GOUT, 37, 0, 35) },
  { pnode(GPIO, 38, 0, CEOUT, 0, -1), rnode(GOUT, 37, 0, 36) },
  { pnode(GPIO, 38, 0, SCLR, 0, -1), rnode(GOUT, 38, 0, 8) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 38, 0, 10) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 38, 0, 8) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 38, 0, 14) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 38, 0, 12) },
  { pnode(GPIO, 38, 0, DATAOUT, 1, 0), rnode(GIN, 37, 0, 25) },
  { pnode(GPIO, 38, 0, DATAOUT, 1, 1), rnode(GIN, 37, 0, 24) },
  { pnode(GPIO, 38, 0, DATAOUT, 1, 2), rnode(GIN, 37, 0, 23) },
  { pnode(GPIO, 38, 0, DATAOUT, 1, 3), rnode(GIN, 37, 0, 22) },
  { pnode(GPIO, 38, 0, DATAOUT, 1, 4), rnode(GIN, 37, 0, 21) },
  { pnode(GPIO, 38, 0, OEIN, 1, 0), rnode(GOUT, 37, 0, 33) },
  { pnode(GPIO, 38, 0, OEIN, 1, 1), rnode(GOUT, 37, 0, 32) },
  { pnode(GPIO, 38, 0, BSLIPMAX, 1, -1), rnode(GIN, 37, 0, 10) },
  { pnode(GPIO, 38, 0, CEIN, 1, -1), rnode(GOUT, 37, 0, 3) },
  { pnode(GPIO, 38, 0, CEOUT, 1, -1), rnode(GOUT, 37, 0, 8) },
  { pnode(GPIO, 38, 0, SCLR, 1, -1), rnode(GOUT, 37, 0, 37) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 38, 0, 11) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 38, 0, 9) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 38, 0, 15) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 38, 0, 13) },
  { pnode(GPIO, 38, 0, DATAOUT, 2, 0), rnode(GIN, 36, 0, 16) },
  { pnode(GPIO, 38, 0, DATAOUT, 2, 1), rnode(GIN, 36, 0, 15) },
  { pnode(GPIO, 38, 0, DATAOUT, 2, 2), rnode(GIN, 36, 0, 14) },
  { pnode(GPIO, 38, 0, DATAOUT, 2, 3), rnode(GIN, 36, 0, 13) },
  { pnode(GPIO, 38, 0, DATAOUT, 2, 4), rnode(GIN, 37, 0, 0) },
  { pnode(GPIO, 38, 0, OEIN, 2, 0), rnode(GOUT, 37, 0, 6) },
  { pnode(GPIO, 38, 0, OEIN, 2, 1), rnode(GOUT, 37, 0, 5) },
  { pnode(GPIO, 38, 0, BSLIPMAX, 2, -1), rnode(GIN, 36, 0, 25) },
  { pnode(GPIO, 38, 0, CEIN, 2, -1), rnode(GOUT, 36, 0, 35) },
  { pnode(GPIO, 38, 0, CEOUT, 2, -1), rnode(GOUT, 36, 0, 36) },
  { pnode(GPIO, 38, 0, SCLR, 2, -1), rnode(GOUT, 37, 0, 4) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 38, 0, 5) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 38, 0, 7) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 38, 0, 1) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 38, 0, 3) },
  { pnode(GPIO, 38, 0, DATAOUT, 3, 0), rnode(GIN, 36, 0, 6) },
  { pnode(GPIO, 38, 0, DATAOUT, 3, 1), rnode(GIN, 36, 0, 7) },
  { pnode(GPIO, 38, 0, DATAOUT, 3, 2), rnode(GIN, 36, 0, 8) },
  { pnode(GPIO, 38, 0, DATAOUT, 3, 3), rnode(GIN, 36, 0, 11) },
  { pnode(GPIO, 38, 0, DATAOUT, 3, 4), rnode(GIN, 36, 0, 12) },
  { pnode(GPIO, 38, 0, OEIN, 3, 0), rnode(GOUT, 36, 0, 25) },
  { pnode(GPIO, 38, 0, OEIN, 3, 1), rnode(GOUT, 36, 0, 49) },
  { pnode(GPIO, 38, 0, BSLIPMAX, 3, -1), rnode(GIN, 36, 0, 5) },
  { pnode(GPIO, 38, 0, CEIN, 3, -1), rnode(GOUT, 36, 0, 17) },
  { pnode(GPIO, 38, 0, CEOUT, 3, -1), rnode(GOUT, 36, 0, 13) },
  { pnode(GPIO, 38, 0, SCLR, 3, -1), rnode(GOUT, 36, 0, 37) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 38, 0, 4) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 38, 0, 6) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 38, 0, 0) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 38, 0, 2) },
  { pnode(GPIO, 38, 81, DATAIN, 0, 0), rnode(GOUT, 38, 81, 0) },
  { pnode(GPIO, 38, 81, DATAIN, 0, 1), rnode(GOUT, 38, 81, 10) },
  { pnode(GPIO, 38, 81, DATAIN, 0, 2), rnode(GOUT, 38, 81, 9) },
  { pnode(GPIO, 38, 81, DATAIN, 0, 3), rnode(GOUT, 38, 81, 11) },
  { pnode(GPIO, 38, 81, DATAOUT, 0, 0), rnode(GIN, 38, 81, 0) },
  { pnode(GPIO, 38, 81, DATAOUT, 0, 1), rnode(GIN, 38, 81, 1) },
  { pnode(GPIO, 38, 81, DATAOUT, 0, 2), rnode(GIN, 38, 81, 2) },
  { pnode(GPIO, 38, 81, DATAOUT, 0, 3), rnode(GIN, 38, 81, 3) },
  { pnode(GPIO, 38, 81, DATAOUT, 0, 4), rnode(GIN, 38, 81, 4) },
  { pnode(GPIO, 38, 81, OEIN, 0, 0), rnode(GOUT, 38, 81, 7) },
  { pnode(GPIO, 38, 81, OEIN, 0, 1), rnode(GOUT, 38, 81, 5) },
  { pnode(GPIO, 38, 81, BSLIPMAX, 0, -1), rnode(GIN, 37, 81, 13) },
  { pnode(GPIO, 38, 81, CEIN, 0, -1), rnode(GOUT, 37, 81, 35) },
  { pnode(GPIO, 38, 81, CEOUT, 0, -1), rnode(GOUT, 37, 81, 36) },
  { pnode(GPIO, 38, 81, ACLR, 0, -1), rnode(GOUT, 37, 81, 26) },
  { pnode(GPIO, 38, 81, SCLR, 0, -1), rnode(GOUT, 38, 81, 8) },
  { pnode(GPIO, 38, 81, CLKIN_IN, 0, 0), rnode(DCMUX, 38, 81, 10) },
  { pnode(GPIO, 38, 81, CLKIN_IN, 0, 1), rnode(DCMUX, 38, 81, 8) },
  { pnode(GPIO, 38, 81, CLKIN_OUT, 0, 0), rnode(DCMUX, 38, 81, 14) },
  { pnode(GPIO, 38, 81, CLKIN_OUT, 0, 1), rnode(DCMUX, 38, 81, 12) },
  { pnode(GPIO, 38, 81, DATAIN, 1, 0), rnode(GOUT, 37, 81, 34) },
  { pnode(GPIO, 38, 81, DATAIN, 1, 1), rnode(GOUT, 37, 81, 29) },
  { pnode(GPIO, 38, 81, DATAIN, 1, 2), rnode(GOUT, 37, 81, 30) },
  { pnode(GPIO, 38, 81, DATAIN, 1, 3), rnode(GOUT, 37, 81, 31) },
  { pnode(GPIO, 38, 81, DATAOUT, 1, 0), rnode(GIN, 37, 81, 25) },
  { pnode(GPIO, 38, 81, DATAOUT, 1, 1), rnode(GIN, 37, 81, 24) },
  { pnode(GPIO, 38, 81, DATAOUT, 1, 2), rnode(GIN, 37, 81, 23) },
  { pnode(GPIO, 38, 81, DATAOUT, 1, 3), rnode(GIN, 37, 81, 22) },
  { pnode(GPIO, 38, 81, DATAOUT, 1, 4), rnode(GIN, 37, 81, 21) },
  { pnode(GPIO, 38, 81, OEIN, 1, 0), rnode(GOUT, 37, 81, 33) },
  { pnode(GPIO, 38, 81, OEIN, 1, 1), rnode(GOUT, 37, 81, 32) },
  { pnode(GPIO, 38, 81, BSLIPMAX, 1, -1), rnode(GIN, 37, 81, 10) },
  { pnode(GPIO, 38, 81, CEIN, 1, -1), rnode(GOUT, 37, 81, 3) },
  { pnode(GPIO, 38, 81, CEOUT, 1, -1), rnode(GOUT, 37, 81, 8) },
  { pnode(GPIO, 38, 81, ACLR, 1, -1), rnode(GOUT, 37, 81, 2) },
  { pnode(GPIO, 38, 81, SCLR, 1, -1), rnode(GOUT, 37, 81, 37) },
  { pnode(GPIO, 38, 81, CLKIN_IN, 1, 0), rnode(DCMUX, 38, 81, 11) },
  { pnode(GPIO, 38, 81, CLKIN_IN, 1, 1), rnode(DCMUX, 38, 81, 9) },
  { pnode(GPIO, 38, 81, CLKIN_OUT, 1, 0), rnode(DCMUX, 38, 81, 15) },
  { pnode(GPIO, 38, 81, CLKIN_OUT, 1, 1), rnode(DCMUX, 38, 81, 13) },
  { pnode(GPIO, 38, 81, DATAIN, 2, 0), rnode(GOUT, 37, 81, 0) },
  { pnode(GPIO, 38, 81, DATAIN, 2, 1), rnode(GOUT, 37, 81, 10) },
  { pnode(GPIO, 38, 81, DATAIN, 2, 2), rnode(GOUT, 37, 81, 9) },
  { pnode(GPIO, 38, 81, DATAIN, 2, 3), rnode(GOUT, 37, 81, 11) },
  { pnode(GPIO, 38, 81, DATAOUT, 2, 0), rnode(GIN, 36, 81, 16) },
  { pnode(GPIO, 38, 81, DATAOUT, 2, 1), rnode(GIN, 36, 81, 15) },
  { pnode(GPIO, 38, 81, DATAOUT, 2, 2), rnode(GIN, 36, 81, 14) },
  { pnode(GPIO, 38, 81, DATAOUT, 2, 3), rnode(GIN, 36, 81, 13) },
  { pnode(GPIO, 38, 81, DATAOUT, 2, 4), rnode(GIN, 37, 81, 0) },
  { pnode(GPIO, 38, 81, OEIN, 2, 0), rnode(GOUT, 37, 81, 6) },
  { pnode(GPIO, 38, 81, OEIN, 2, 1), rnode(GOUT, 37, 81, 5) },
  { pnode(GPIO, 38, 81, BSLIPMAX, 2, -1), rnode(GIN, 36, 81, 25) },
  { pnode(GPIO, 38, 81, CEIN, 2, -1), rnode(GOUT, 36, 81, 35) },
  { pnode(GPIO, 38, 81, CEOUT, 2, -1), rnode(GOUT, 36, 81, 36) },
  { pnode(GPIO, 38, 81, ACLR, 2, -1), rnode(GOUT, 36, 81, 26) },
  { pnode(GPIO, 38, 81, SCLR, 2, -1), rnode(GOUT, 37, 81, 4) },
  { pnode(GPIO, 38, 81, CLKIN_IN, 2, 0), rnode(DCMUX, 38, 81, 5) },
  { pnode(GPIO, 38, 81, CLKIN_IN, 2, 1), rnode(DCMUX, 38, 81, 7) },
  { pnode(GPIO, 38, 81, CLKIN_OUT, 2, 0), rnode(DCMUX, 38, 81, 1) },
  { pnode(GPIO, 38, 81, CLKIN_OUT, 2, 1), rnode(DCMUX, 38, 81, 3) },
  { pnode(GPIO, 38, 81, DATAIN, 3, 0), rnode(GOUT, 36, 81, 14) },
  { pnode(GPIO, 38, 81, DATAIN, 3, 1), rnode(GOUT, 36, 81, 19) },
  { pnode(GPIO, 38, 81, DATAIN, 3, 2), rnode(GOUT, 36, 81, 15) },
  { pnode(GPIO, 38, 81, DATAIN, 3, 3), rnode(GOUT, 36, 81, 22) },
  { pnode(GPIO, 38, 81, DATAOUT, 3, 0), rnode(GIN, 36, 81, 6) },
  { pnode(GPIO, 38, 81, DATAOUT, 3, 1), rnode(GIN, 36, 81, 7) },
  { pnode(GPIO, 38, 81, DATAOUT, 3, 2), rnode(GIN, 36, 81, 8) },
  { pnode(GPIO, 38, 81, DATAOUT, 3, 3), rnode(GIN, 36, 81, 11) },
  { pnode(GPIO, 38, 81, DATAOUT, 3, 4), rnode(GIN, 36, 81, 12) },
  { pnode(GPIO, 38, 81, OEIN, 3, 0), rnode(GOUT, 36, 81, 25) },
  { pnode(GPIO, 38, 81, OEIN, 3, 1), rnode(GOUT, 36, 81, 49) },
  { pnode(GPIO, 38, 81, BSLIPMAX, 3, -1), rnode(GIN, 36, 81, 5) },
  { pnode(GPIO, 38, 81, CEIN, 3, -1), rnode(GOUT, 36, 81, 17) },
  { pnode(GPIO, 38, 81, CEOUT, 3, -1), rnode(GOUT, 36, 81, 13) },
  { pnode(GPIO, 38, 81, ACLR, 3, -1), rnode(GOUT, 36, 81, 18) },
  { pnode(GPIO, 38, 81, SCLR, 3, -1), rnode(GOUT, 36, 81, 37) },
  { pnode(GPIO, 38, 81, CLKIN_IN, 3, 0), rnode(DCMUX, 38, 81, 4) },
  { pnode(GPIO, 38, 81, CLKIN_IN, 3, 1), rnode(DCMUX, 38, 81, 6) },
  { pnode(GPIO, 38, 81, CLKIN_OUT, 3, 0), rnode(DCMUX, 38, 81, 0) },
  { pnode(GPIO, 38, 81, CLKIN_OUT, 3, 1), rnode(DCMUX, 38, 81, 2) },
  { pnode(GPIO, 40, 0, DATAIN, 0, 0), rnode(GOUT, 39, 0, 12) },
  { pnode(GPIO, 40, 0, DATAIN, 0, 1), rnode(GOUT, 39, 0, 17) },
  { pnode(GPIO, 40, 0, DATAIN, 0, 2), rnode(GOUT, 39, 0, 13) },
  { pnode(GPIO, 40, 0, DATAIN, 0, 3), rnode(GOUT, 39, 0, 18) },
  { pnode(GPIO, 40, 0, DATAOUT, 0, 0), rnode(GIN, 38, 0, 14) },
  { pnode(GPIO, 40, 0, DATAOUT, 0, 1), rnode(GIN, 38, 0, 13) },
  { pnode(GPIO, 40, 0, DATAOUT, 0, 2), rnode(GIN, 39, 0, 0) },
  { pnode(GPIO, 40, 0, DATAOUT, 0, 3), rnode(GIN, 39, 0, 1) },
  { pnode(GPIO, 40, 0, DATAOUT, 0, 4), rnode(GIN, 39, 0, 2) },
  { pnode(GPIO, 40, 0, OEIN, 0, 0), rnode(GOUT, 39, 0, 19) },
  { pnode(GPIO, 40, 0, OEIN, 0, 1), rnode(GOUT, 39, 0, 15) },
  { pnode(GPIO, 40, 0, BSLIPMAX, 0, -1), rnode(GIN, 38, 0, 15) },
  { pnode(GPIO, 40, 0, CEIN, 0, -1), rnode(GOUT, 39, 0, 7) },
  { pnode(GPIO, 40, 0, CEOUT, 0, -1), rnode(GOUT, 39, 0, 5) },
  { pnode(GPIO, 40, 0, ACLR, 0, -1), rnode(GOUT, 39, 0, 3) },
  { pnode(GPIO, 40, 0, SCLR, 0, -1), rnode(GOUT, 39, 0, 20) },
  { pnode(GPIO, 40, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 40, 0, 10) },
  { pnode(GPIO, 40, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 40, 0, 8) },
  { pnode(GPIO, 40, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 40, 0, 14) },
  { pnode(GPIO, 40, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 40, 0, 12) },
  { pnode(GPIO, 40, 0, DATAIN, 1, 0), rnode(GOUT, 38, 0, 31) },
  { pnode(GPIO, 40, 0, DATAIN, 1, 1), rnode(GOUT, 38, 0, 33) },
  { pnode(GPIO, 40, 0, DATAIN, 1, 2), rnode(GOUT, 38, 0, 32) },
  { pnode(GPIO, 40, 0, DATAIN, 1, 3), rnode(GOUT, 38, 0, 37) },
  { pnode(GPIO, 40, 0, DATAOUT, 1, 0), rnode(GIN, 38, 0, 20) },
  { pnode(GPIO, 40, 0, DATAOUT, 1, 1), rnode(GIN, 38, 0, 19) },
  { pnode(GPIO, 40, 0, DATAOUT, 1, 2), rnode(GIN, 38, 0, 18) },
  { pnode(GPIO, 40, 0, DATAOUT, 1, 3), rnode(GIN, 38, 0, 17) },
  { pnode(GPIO, 40, 0, DATAOUT, 1, 4), rnode(GIN, 38, 0, 16) },
  { pnode(GPIO, 40, 0, OEIN, 1, 0), rnode(GOUT, 38, 0, 36) },
  { pnode(GPIO, 40, 0, OEIN, 1, 1), rnode(GOUT, 39, 0, 0) },
  { pnode(GPIO, 40, 0, BSLIPMAX, 1, -1), rnode(GIN, 38, 0, 21) },
  { pnode(GPIO, 40, 0, CEIN, 1, -1), rnode(GOUT, 38, 0, 43) },
  { pnode(GPIO, 40, 0, CEOUT, 1, -1), rnode(GOUT, 38, 0, 38) },
  { pnode(GPIO, 40, 0, ACLR, 1, -1), rnode(GOUT, 38, 0, 28) },
  { pnode(GPIO, 40, 0, SCLR, 1, -1), rnode(GOUT, 39, 0, 11) },
  { pnode(GPIO, 40, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 40, 0, 11) },
  { pnode(GPIO, 40, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 40, 0, 9) },
  { pnode(GPIO, 40, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 40, 0, 15) },
  { pnode(GPIO, 40, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 40, 0, 13) },
  { pnode(GPIO, 40, 0, DATAOUT, 2, 0), rnode(GIN, 38, 0, 12) },
  { pnode(GPIO, 40, 0, DATAOUT, 2, 1), rnode(GIN, 38, 0, 25) },
  { pnode(GPIO, 40, 0, DATAOUT, 2, 2), rnode(GIN, 38, 0, 24) },
  { pnode(GPIO, 40, 0, DATAOUT, 2, 3), rnode(GIN, 38, 0, 23) },
  { pnode(GPIO, 40, 0, DATAOUT, 2, 4), rnode(GIN, 38, 0, 22) },
  { pnode(GPIO, 40, 0, OEIN, 2, 0), rnode(GOUT, 38, 0, 41) },
  { pnode(GPIO, 40, 0, OEIN, 2, 1), rnode(GOUT, 38, 0, 45) },
  { pnode(GPIO, 40, 0, BSLIPMAX, 2, -1), rnode(GIN, 38, 0, 11) },
  { pnode(GPIO, 40, 0, CEIN, 2, -1), rnode(GOUT, 38, 0, 22) },
  { pnode(GPIO, 40, 0, CEOUT, 2, -1), rnode(GOUT, 38, 0, 23) },
  { pnode(GPIO, 40, 0, SCLR, 2, -1), rnode(GOUT, 38, 0, 44) },
  { pnode(GPIO, 40, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 40, 0, 5) },
  { pnode(GPIO, 40, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 40, 0, 7) },
  { pnode(GPIO, 40, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 40, 0, 1) },
  { pnode(GPIO, 40, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 40, 0, 3) },
  { pnode(GPIO, 40, 0, DATAOUT, 3, 0), rnode(GIN, 38, 0, 6) },
  { pnode(GPIO, 40, 0, DATAOUT, 3, 1), rnode(GIN, 38, 0, 7) },
  { pnode(GPIO, 40, 0, DATAOUT, 3, 2), rnode(GIN, 38, 0, 8) },
  { pnode(GPIO, 40, 0, DATAOUT, 3, 3), rnode(GIN, 38, 0, 9) },
  { pnode(GPIO, 40, 0, DATAOUT, 3, 4), rnode(GIN, 38, 0, 10) },
  { pnode(GPIO, 40, 0, OEIN, 3, 0), rnode(GOUT, 38, 0, 20) },
  { pnode(GPIO, 40, 0, OEIN, 3, 1), rnode(GOUT, 38, 0, 16) },
  { pnode(GPIO, 40, 0, BSLIPMAX, 3, -1), rnode(GIN, 38, 0, 5) },
  { pnode(GPIO, 40, 0, CEIN, 3, -1), rnode(GOUT, 38, 0, 1) },
  { pnode(GPIO, 40, 0, CEOUT, 3, -1), rnode(GOUT, 38, 0, 17) },
  { pnode(GPIO, 40, 0, SCLR, 3, -1), rnode(GOUT, 38, 0, 21) },
  { pnode(GPIO, 40, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 40, 0, 4) },
  { pnode(GPIO, 40, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 40, 0, 6) },
  { pnode(GPIO, 40, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 40, 0, 0) },
  { pnode(GPIO, 40, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 40, 0, 2) },
  { pnode(GPIO, 40, 81, DATAIN, 0, 0), rnode(GOUT, 39, 81, 12) },
  { pnode(GPIO, 40, 81, DATAIN, 0, 1), rnode(GOUT, 39, 81, 17) },
  { pnode(GPIO, 40, 81, DATAIN, 0, 2), rnode(GOUT, 39, 81, 13) },
  { pnode(GPIO, 40, 81, DATAIN, 0, 3), rnode(GOUT, 39, 81, 18) },
  { pnode(GPIO, 40, 81, DATAOUT, 0, 0), rnode(GIN, 38, 81, 14) },
  { pnode(GPIO, 40, 81, DATAOUT, 0, 1), rnode(GIN, 38, 81, 13) },
  { pnode(GPIO, 40, 81, DATAOUT, 0, 2), rnode(GIN, 39, 81, 0) },
  { pnode(GPIO, 40, 81, DATAOUT, 0, 3), rnode(GIN, 39, 81, 1) },
  { pnode(GPIO, 40, 81, DATAOUT, 0, 4), rnode(GIN, 39, 81, 2) },
  { pnode(GPIO, 40, 81, OEIN, 0, 0), rnode(GOUT, 39, 81, 19) },
  { pnode(GPIO, 40, 81, OEIN, 0, 1), rnode(GOUT, 39, 81, 15) },
  { pnode(GPIO, 40, 81, BSLIPMAX, 0, -1), rnode(GIN, 38, 81, 15) },
  { pnode(GPIO, 40, 81, CEIN, 0, -1), rnode(GOUT, 39, 81, 7) },
  { pnode(GPIO, 40, 81, CEOUT, 0, -1), rnode(GOUT, 39, 81, 5) },
  { pnode(GPIO, 40, 81, ACLR, 0, -1), rnode(GOUT, 39, 81, 3) },
  { pnode(GPIO, 40, 81, SCLR, 0, -1), rnode(GOUT, 39, 81, 20) },
  { pnode(GPIO, 40, 81, CLKIN_IN, 0, 0), rnode(DCMUX, 40, 81, 10) },
  { pnode(GPIO, 40, 81, CLKIN_IN, 0, 1), rnode(DCMUX, 40, 81, 8) },
  { pnode(GPIO, 40, 81, CLKIN_OUT, 0, 0), rnode(DCMUX, 40, 81, 14) },
  { pnode(GPIO, 40, 81, CLKIN_OUT, 0, 1), rnode(DCMUX, 40, 81, 12) },
  { pnode(GPIO, 40, 81, DATAIN, 1, 0), rnode(GOUT, 38, 81, 31) },
  { pnode(GPIO, 40, 81, DATAIN, 1, 1), rnode(GOUT, 38, 81, 33) },
  { pnode(GPIO, 40, 81, DATAIN, 1, 2), rnode(GOUT, 38, 81, 32) },
  { pnode(GPIO, 40, 81, DATAIN, 1, 3), rnode(GOUT, 38, 81, 37) },
  { pnode(GPIO, 40, 81, DATAOUT, 1, 0), rnode(GIN, 38, 81, 20) },
  { pnode(GPIO, 40, 81, DATAOUT, 1, 1), rnode(GIN, 38, 81, 19) },
  { pnode(GPIO, 40, 81, DATAOUT, 1, 2), rnode(GIN, 38, 81, 18) },
  { pnode(GPIO, 40, 81, DATAOUT, 1, 3), rnode(GIN, 38, 81, 17) },
  { pnode(GPIO, 40, 81, DATAOUT, 1, 4), rnode(GIN, 38, 81, 16) },
  { pnode(GPIO, 40, 81, OEIN, 1, 0), rnode(GOUT, 38, 81, 36) },
  { pnode(GPIO, 40, 81, OEIN, 1, 1), rnode(GOUT, 39, 81, 0) },
  { pnode(GPIO, 40, 81, BSLIPMAX, 1, -1), rnode(GIN, 38, 81, 21) },
  { pnode(GPIO, 40, 81, CEIN, 1, -1), rnode(GOUT, 38, 81, 43) },
  { pnode(GPIO, 40, 81, CEOUT, 1, -1), rnode(GOUT, 38, 81, 38) },
  { pnode(GPIO, 40, 81, ACLR, 1, -1), rnode(GOUT, 38, 81, 28) },
  { pnode(GPIO, 40, 81, SCLR, 1, -1), rnode(GOUT, 39, 81, 11) },
  { pnode(GPIO, 40, 81, CLKIN_IN, 1, 0), rnode(DCMUX, 40, 81, 11) },
  { pnode(GPIO, 40, 81, CLKIN_IN, 1, 1), rnode(DCMUX, 40, 81, 9) },
  { pnode(GPIO, 40, 81, CLKIN_OUT, 1, 0), rnode(DCMUX, 40, 81, 15) },
  { pnode(GPIO, 40, 81, CLKIN_OUT, 1, 1), rnode(DCMUX, 40, 81, 13) },
  { pnode(GPIO, 40, 81, DATAIN, 2, 0), rnode(GOUT, 38, 81, 49) },
  { pnode(GPIO, 40, 81, DATAIN, 2, 1), rnode(GOUT, 38, 81, 48) },
  { pnode(GPIO, 40, 81, DATAIN, 2, 2), rnode(GOUT, 38, 81, 47) },
  { pnode(GPIO, 40, 81, DATAIN, 2, 3), rnode(GOUT, 38, 81, 42) },
  { pnode(GPIO, 40, 81, DATAOUT, 2, 0), rnode(GIN, 38, 81, 12) },
  { pnode(GPIO, 40, 81, DATAOUT, 2, 1), rnode(GIN, 38, 81, 25) },
  { pnode(GPIO, 40, 81, DATAOUT, 2, 2), rnode(GIN, 38, 81, 24) },
  { pnode(GPIO, 40, 81, DATAOUT, 2, 3), rnode(GIN, 38, 81, 23) },
  { pnode(GPIO, 40, 81, DATAOUT, 2, 4), rnode(GIN, 38, 81, 22) },
  { pnode(GPIO, 40, 81, OEIN, 2, 0), rnode(GOUT, 38, 81, 41) },
  { pnode(GPIO, 40, 81, OEIN, 2, 1), rnode(GOUT, 38, 81, 45) },
  { pnode(GPIO, 40, 81, BSLIPMAX, 2, -1), rnode(GIN, 38, 81, 11) },
  { pnode(GPIO, 40, 81, CEIN, 2, -1), rnode(GOUT, 38, 81, 22) },
  { pnode(GPIO, 40, 81, CEOUT, 2, -1), rnode(GOUT, 38, 81, 23) },
  { pnode(GPIO, 40, 81, ACLR, 2, -1), rnode(GOUT, 38, 81, 24) },
  { pnode(GPIO, 40, 81, SCLR, 2, -1), rnode(GOUT, 38, 81, 44) },
  { pnode(GPIO, 40, 81, CLKIN_IN, 2, 0), rnode(DCMUX, 40, 81, 5) },
  { pnode(GPIO, 40, 81, CLKIN_IN, 2, 1), rnode(DCMUX, 40, 81, 7) },
  { pnode(GPIO, 40, 81, CLKIN_OUT, 2, 0), rnode(DCMUX, 40, 81, 1) },
  { pnode(GPIO, 40, 81, CLKIN_OUT, 2, 1), rnode(DCMUX, 40, 81, 3) },
  { pnode(GPIO, 40, 81, DATAIN, 3, 0), rnode(GOUT, 38, 81, 18) },
  { pnode(GPIO, 40, 81, DATAIN, 3, 1), rnode(GOUT, 38, 81, 14) },
  { pnode(GPIO, 40, 81, DATAIN, 3, 2), rnode(GOUT, 38, 81, 19) },
  { pnode(GPIO, 40, 81, DATAIN, 3, 3), rnode(GOUT, 38, 81, 15) },
  { pnode(GPIO, 40, 81, DATAOUT, 3, 0), rnode(GIN, 38, 81, 6) },
  { pnode(GPIO, 40, 81, DATAOUT, 3, 1), rnode(GIN, 38, 81, 7) },
  { pnode(GPIO, 40, 81, DATAOUT, 3, 2), rnode(GIN, 38, 81, 8) },
  { pnode(GPIO, 40, 81, DATAOUT, 3, 3), rnode(GIN, 38, 81, 9) },
  { pnode(GPIO, 40, 81, DATAOUT, 3, 4), rnode(GIN, 38, 81, 10) },
  { pnode(GPIO, 40, 81, OEIN, 3, 0), rnode(GOUT, 38, 81, 20) },
  { pnode(GPIO, 40, 81, OEIN, 3, 1), rnode(GOUT, 38, 81, 16) },
  { pnode(GPIO, 40, 81, BSLIPMAX, 3, -1), rnode(GIN, 38, 81, 5) },
  { pnode(GPIO, 40, 81, CEIN, 3, -1), rnode(GOUT, 38, 81, 1) },
  { pnode(GPIO, 40, 81, CEOUT, 3, -1), rnode(GOUT, 38, 81, 17) },
  { pnode(GPIO, 40, 81, ACLR, 3, -1), rnode(GOUT, 38, 81, 13) },
  { pnode(GPIO, 40, 81, SCLR, 3, -1), rnode(GOUT, 38, 81, 21) },
  { pnode(GPIO, 40, 81, CLKIN_IN, 3, 0), rnode(DCMUX, 40, 81, 4) },
  { pnode(GPIO, 40, 81, CLKIN_IN, 3, 1), rnode(DCMUX, 40, 81, 6) },
  { pnode(GPIO, 40, 81, CLKIN_OUT, 3, 0), rnode(DCMUX, 40, 81, 0) },
  { pnode(GPIO, 40, 81, CLKIN_OUT, 3, 1), rnode(DCMUX, 40, 81, 2) },
  { pnode(GPIO, 50, 0, DATAOUT, 0, 4), rnode(GIN, 50, 0, 15) },
  { pnode(GPIO, 50, 0, BSLIPMAX, 0, -1), rnode(GIN, 50, 0, 6) },
  { pnode(GPIO, 50, 0, CEIN, 0, -1), rnode(GOUT, 50, 0, 35) },
  { pnode(GPIO, 50, 0, CEOUT, 0, -1), rnode(GOUT, 50, 0, 36) },
  { pnode(GPIO, 50, 0, ACLR, 0, -1), rnode(GOUT, 50, 0, 26) },
  { pnode(GPIO, 50, 0, SCLR, 0, -1), rnode(GOUT, 51, 0, 5) },
  { pnode(GPIO, 50, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 50, 0, 10) },
  { pnode(GPIO, 50, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 50, 0, 8) },
  { pnode(GPIO, 50, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 50, 0, 14) },
  { pnode(GPIO, 50, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 50, 0, 12) },
  { pnode(GPIO, 50, 0, DATAOUT, 1, 4), rnode(GIN, 50, 0, 5) },
  { pnode(GPIO, 50, 0, BSLIPMAX, 1, -1), rnode(GIN, 50, 0, 0) },
  { pnode(GPIO, 50, 0, CEIN, 1, -1), rnode(GOUT, 50, 0, 15) },
  { pnode(GPIO, 50, 0, CEOUT, 1, -1), rnode(GOUT, 50, 0, 16) },
  { pnode(GPIO, 50, 0, ACLR, 1, -1), rnode(GOUT, 50, 0, 22) },
  { pnode(GPIO, 50, 0, SCLR, 1, -1), rnode(GOUT, 50, 0, 31) },
  { pnode(GPIO, 50, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 50, 0, 11) },
  { pnode(GPIO, 50, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 50, 0, 9) },
  { pnode(GPIO, 50, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 50, 0, 15) },
  { pnode(GPIO, 50, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 50, 0, 13) },
  { pnode(GPIO, 50, 0, DATAOUT, 2, 4), rnode(GIN, 49, 0, 13) },
  { pnode(GPIO, 50, 0, BSLIPMAX, 2, -1), rnode(GIN, 49, 0, 18) },
  { pnode(GPIO, 50, 0, CEIN, 2, -1), rnode(GOUT, 49, 0, 31) },
  { pnode(GPIO, 50, 0, CEOUT, 2, -1), rnode(GOUT, 49, 0, 32) },
  { pnode(GPIO, 50, 0, ACLR, 2, -1), rnode(GOUT, 49, 0, 35) },
  { pnode(GPIO, 50, 0, SCLR, 2, -1), rnode(GOUT, 50, 0, 18) },
  { pnode(GPIO, 50, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 50, 0, 5) },
  { pnode(GPIO, 50, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 50, 0, 7) },
  { pnode(GPIO, 50, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 50, 0, 1) },
  { pnode(GPIO, 50, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 50, 0, 3) },
  { pnode(GPIO, 50, 0, DATAIN, 3, 0), rnode(GOUT, 49, 0, 42) },
  { pnode(GPIO, 50, 0, DATAIN, 3, 1), rnode(GOUT, 49, 0, 46) },
  { pnode(GPIO, 50, 0, DATAIN, 3, 2), rnode(GOUT, 49, 0, 41) },
  { pnode(GPIO, 50, 0, DATAIN, 3, 3), rnode(GOUT, 49, 0, 40) },
  { pnode(GPIO, 50, 0, DATAOUT, 3, 0), rnode(GIN, 49, 0, 24) },
  { pnode(GPIO, 50, 0, DATAOUT, 3, 1), rnode(GIN, 49, 0, 23) },
  { pnode(GPIO, 50, 0, DATAOUT, 3, 2), rnode(GIN, 49, 0, 22) },
  { pnode(GPIO, 50, 0, DATAOUT, 3, 3), rnode(GIN, 49, 0, 21) },
  { pnode(GPIO, 50, 0, DATAOUT, 3, 4), rnode(GIN, 49, 0, 20) },
  { pnode(GPIO, 50, 0, OEIN, 3, 0), rnode(GOUT, 49, 0, 43) },
  { pnode(GPIO, 50, 0, OEIN, 3, 1), rnode(GOUT, 49, 0, 27) },
  { pnode(GPIO, 50, 0, BSLIPMAX, 3, -1), rnode(GIN, 49, 0, 25) },
  { pnode(GPIO, 50, 0, CEIN, 3, -1), rnode(GOUT, 49, 0, 16) },
  { pnode(GPIO, 50, 0, CEOUT, 3, -1), rnode(GOUT, 49, 0, 22) },
  { pnode(GPIO, 50, 0, ACLR, 3, -1), rnode(GOUT, 49, 0, 24) },
  { pnode(GPIO, 50, 0, SCLR, 3, -1), rnode(GOUT, 49, 0, 29) },
  { pnode(GPIO, 50, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 50, 0, 4) },
  { pnode(GPIO, 50, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 50, 0, 6) },
  { pnode(GPIO, 50, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 50, 0, 0) },
  { pnode(GPIO, 50, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 50, 0, 2) },
  { pnode(GPIO, 52, 0, DATAOUT, 0, 0), rnode(GIN, 52, 0, 6) },
  { pnode(GPIO, 52, 0, DATAOUT, 0, 1), rnode(GIN, 52, 0, 7) },
  { pnode(GPIO, 52, 0, DATAOUT, 0, 2), rnode(GIN, 52, 0, 8) },
  { pnode(GPIO, 52, 0, DATAOUT, 0, 3), rnode(GIN, 52, 0, 9) },
  { pnode(GPIO, 52, 0, DATAOUT, 0, 4), rnode(GIN, 52, 0, 10) },
  { pnode(GPIO, 52, 0, BSLIPMAX, 0, -1), rnode(GIN, 52, 0, 5) },
  { pnode(GPIO, 52, 0, CEIN, 0, -1), rnode(GOUT, 52, 0, 38) },
  { pnode(GPIO, 52, 0, CEOUT, 0, -1), rnode(GOUT, 52, 0, 34) },
  { pnode(GPIO, 52, 0, ACLR, 0, -1), rnode(GOUT, 52, 0, 30) },
  { pnode(GPIO, 52, 0, SCLR, 0, -1), rnode(GOUT, 53, 0, 8) },
  { pnode(GPIO, 52, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 52, 0, 10) },
  { pnode(GPIO, 52, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 52, 0, 8) },
  { pnode(GPIO, 52, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 52, 0, 14) },
  { pnode(GPIO, 52, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 52, 0, 12) },
  { pnode(GPIO, 52, 0, DATAOUT, 1, 0), rnode(GIN, 52, 0, 0) },
  { pnode(GPIO, 52, 0, DATAOUT, 1, 1), rnode(GIN, 52, 0, 1) },
  { pnode(GPIO, 52, 0, DATAOUT, 1, 2), rnode(GIN, 52, 0, 2) },
  { pnode(GPIO, 52, 0, DATAOUT, 1, 3), rnode(GIN, 52, 0, 3) },
  { pnode(GPIO, 52, 0, DATAOUT, 1, 4), rnode(GIN, 52, 0, 4) },
  { pnode(GPIO, 52, 0, BSLIPMAX, 1, -1), rnode(GIN, 51, 0, 13) },
  { pnode(GPIO, 52, 0, CEIN, 1, -1), rnode(GOUT, 52, 0, 3) },
  { pnode(GPIO, 52, 0, CEOUT, 1, -1), rnode(GOUT, 52, 0, 1) },
  { pnode(GPIO, 52, 0, ACLR, 1, -1), rnode(GOUT, 52, 0, 17) },
  { pnode(GPIO, 52, 0, SCLR, 1, -1), rnode(GOUT, 52, 0, 45) },
  { pnode(GPIO, 52, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 52, 0, 11) },
  { pnode(GPIO, 52, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 52, 0, 9) },
  { pnode(GPIO, 52, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 52, 0, 15) },
  { pnode(GPIO, 52, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 52, 0, 13) },
  { pnode(GPIO, 52, 0, DATAOUT, 2, 0), rnode(GIN, 51, 0, 19) },
  { pnode(GPIO, 52, 0, DATAOUT, 2, 1), rnode(GIN, 51, 0, 17) },
  { pnode(GPIO, 52, 0, DATAOUT, 2, 2), rnode(GIN, 51, 0, 16) },
  { pnode(GPIO, 52, 0, DATAOUT, 2, 3), rnode(GIN, 51, 0, 15) },
  { pnode(GPIO, 52, 0, DATAOUT, 2, 4), rnode(GIN, 51, 0, 14) },
  { pnode(GPIO, 52, 0, OEIN, 2, 0), rnode(GOUT, 52, 0, 0) },
  { pnode(GPIO, 52, 0, OEIN, 2, 1), rnode(GOUT, 52, 0, 10) },
  { pnode(GPIO, 52, 0, BSLIPMAX, 2, -1), rnode(GIN, 51, 0, 20) },
  { pnode(GPIO, 52, 0, CEIN, 2, -1), rnode(GOUT, 51, 0, 44) },
  { pnode(GPIO, 52, 0, CEOUT, 2, -1), rnode(GOUT, 51, 0, 38) },
  { pnode(GPIO, 52, 0, SCLR, 2, -1), rnode(GOUT, 52, 0, 6) },
  { pnode(GPIO, 52, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 52, 0, 5) },
  { pnode(GPIO, 52, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 52, 0, 7) },
  { pnode(GPIO, 52, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 52, 0, 1) },
  { pnode(GPIO, 52, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 52, 0, 3) },
  { pnode(GPIO, 52, 0, DATAOUT, 3, 4), rnode(GIN, 51, 0, 21) },
  { pnode(GPIO, 52, 0, BSLIPMAX, 3, -1), rnode(GIN, 51, 0, 8) },
  { pnode(GPIO, 52, 0, CEIN, 3, -1), rnode(GOUT, 51, 0, 4) },
  { pnode(GPIO, 52, 0, CEOUT, 3, -1), rnode(GOUT, 51, 0, 3) },
  { pnode(GPIO, 52, 0, ACLR, 3, -1), rnode(GOUT, 51, 0, 1) },
  { pnode(GPIO, 52, 0, SCLR, 3, -1), rnode(GOUT, 51, 0, 41) },
  { pnode(GPIO, 52, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 52, 0, 4) },
  { pnode(GPIO, 52, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 52, 0, 6) },
  { pnode(GPIO, 52, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 52, 0, 0) },
  { pnode(GPIO, 52, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 52, 0, 2) },
  { pnode(GPIO, 54, 0, DATAOUT, 0, 4), rnode(GIN, 54, 0, 11) },
  { pnode(GPIO, 54, 0, BSLIPMAX, 0, -1), rnode(GIN, 54, 0, 6) },
  { pnode(GPIO, 54, 0, CEIN, 0, -1), rnode(GOUT, 54, 0, 15) },
  { pnode(GPIO, 54, 0, CEOUT, 0, -1), rnode(GOUT, 54, 0, 21) },
  { pnode(GPIO, 54, 0, ACLR, 0, -1), rnode(GOUT, 54, 0, 23) },
  { pnode(GPIO, 54, 0, SCLR, 0, -1), rnode(GOUT, 54, 0, 34) },
  { pnode(GPIO, 54, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 54, 0, 10) },
  { pnode(GPIO, 54, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 54, 0, 8) },
  { pnode(GPIO, 54, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 54, 0, 14) },
  { pnode(GPIO, 54, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 54, 0, 12) },
  { pnode(GPIO, 54, 0, DATAOUT, 1, 4), rnode(GIN, 54, 0, 5) },
  { pnode(GPIO, 54, 0, BSLIPMAX, 1, -1), rnode(GIN, 53, 0, 14) },
  { pnode(GPIO, 54, 0, CEIN, 1, -1), rnode(GOUT, 53, 0, 31) },
  { pnode(GPIO, 54, 0, CEOUT, 1, -1), rnode(GOUT, 53, 0, 37) },
  { pnode(GPIO, 54, 0, ACLR, 1, -1), rnode(GOUT, 53, 0, 36) },
  { pnode(GPIO, 54, 0, SCLR, 1, -1), rnode(GOUT, 54, 0, 17) },
  { pnode(GPIO, 54, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 54, 0, 11) },
  { pnode(GPIO, 54, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 54, 0, 9) },
  { pnode(GPIO, 54, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 54, 0, 15) },
  { pnode(GPIO, 54, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 54, 0, 13) },
  { pnode(GPIO, 54, 0, DATAOUT, 2, 4), rnode(GIN, 53, 0, 15) },
  { pnode(GPIO, 54, 0, BSLIPMAX, 2, -1), rnode(GIN, 53, 0, 21) },
  { pnode(GPIO, 54, 0, CEIN, 2, -1), rnode(GOUT, 53, 0, 23) },
  { pnode(GPIO, 54, 0, CEOUT, 2, -1), rnode(GOUT, 53, 0, 25) },
  { pnode(GPIO, 54, 0, ACLR, 2, -1), rnode(GOUT, 53, 0, 49) },
  { pnode(GPIO, 54, 0, SCLR, 2, -1), rnode(GOUT, 53, 0, 34) },
  { pnode(GPIO, 54, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 54, 0, 5) },
  { pnode(GPIO, 54, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 54, 0, 7) },
  { pnode(GPIO, 54, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 54, 0, 1) },
  { pnode(GPIO, 54, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 54, 0, 3) },
  { pnode(GPIO, 54, 0, DATAOUT, 3, 0), rnode(GIN, 53, 0, 5) },
  { pnode(GPIO, 54, 0, DATAOUT, 3, 1), rnode(GIN, 53, 0, 7) },
  { pnode(GPIO, 54, 0, DATAOUT, 3, 2), rnode(GIN, 53, 0, 9) },
  { pnode(GPIO, 54, 0, DATAOUT, 3, 3), rnode(GIN, 53, 0, 12) },
  { pnode(GPIO, 54, 0, DATAOUT, 3, 4), rnode(GIN, 53, 0, 24) },
  { pnode(GPIO, 54, 0, OEIN, 3, 0), rnode(GOUT, 53, 0, 15) },
  { pnode(GPIO, 54, 0, OEIN, 3, 1), rnode(GOUT, 53, 0, 16) },
  { pnode(GPIO, 54, 0, BSLIPMAX, 3, -1), rnode(GIN, 52, 0, 20) },
  { pnode(GPIO, 54, 0, CEIN, 3, -1), rnode(GOUT, 53, 0, 2) },
  { pnode(GPIO, 54, 0, CEOUT, 3, -1), rnode(GOUT, 53, 0, 1) },
  { pnode(GPIO, 54, 0, SCLR, 3, -1), rnode(GOUT, 53, 0, 21) },
  { pnode(GPIO, 54, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 54, 0, 4) },
  { pnode(GPIO, 54, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 54, 0, 6) },
  { pnode(GPIO, 54, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 54, 0, 0) },
  { pnode(GPIO, 54, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 54, 0, 2) },
  { pnode(GPIO, 56, 0, DATAIN, 0, 0), rnode(GOUT, 56, 0, 4) },
  { pnode(GPIO, 56, 0, DATAIN, 0, 1), rnode(GOUT, 56, 0, 3) },
  { pnode(GPIO, 56, 0, DATAIN, 0, 2), rnode(GOUT, 56, 0, 8) },
  { pnode(GPIO, 56, 0, DATAIN, 0, 3), rnode(GOUT, 56, 0, 2) },
  { pnode(GPIO, 56, 0, DATAOUT, 0, 0), rnode(GIN, 56, 0, 2) },
  { pnode(GPIO, 56, 0, DATAOUT, 0, 1), rnode(GIN, 56, 0, 4) },
  { pnode(GPIO, 56, 0, DATAOUT, 0, 2), rnode(GIN, 56, 0, 5) },
  { pnode(GPIO, 56, 0, DATAOUT, 0, 3), rnode(GIN, 56, 0, 7) },
  { pnode(GPIO, 56, 0, DATAOUT, 0, 4), rnode(GIN, 56, 0, 9) },
  { pnode(GPIO, 56, 0, OEIN, 0, 0), rnode(GOUT, 56, 0, 12) },
  { pnode(GPIO, 56, 0, OEIN, 0, 1), rnode(GOUT, 56, 0, 17) },
  { pnode(GPIO, 56, 0, BSLIPMAX, 0, -1), rnode(GIN, 55, 0, 14) },
  { pnode(GPIO, 56, 0, CEIN, 0, -1), rnode(GOUT, 56, 0, 0) },
  { pnode(GPIO, 56, 0, CEOUT, 0, -1), rnode(GOUT, 56, 0, 10) },
  { pnode(GPIO, 56, 0, ACLR, 0, -1), rnode(GOUT, 56, 0, 11) },
  { pnode(GPIO, 56, 0, SCLR, 0, -1), rnode(GOUT, 56, 0, 13) },
  { pnode(GPIO, 56, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 56, 0, 10) },
  { pnode(GPIO, 56, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 56, 0, 8) },
  { pnode(GPIO, 56, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 56, 0, 14) },
  { pnode(GPIO, 56, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 56, 0, 12) },
  { pnode(GPIO, 56, 0, DATAIN, 1, 0), rnode(GOUT, 55, 0, 27) },
  { pnode(GPIO, 56, 0, DATAIN, 1, 1), rnode(GOUT, 55, 0, 28) },
  { pnode(GPIO, 56, 0, DATAIN, 1, 2), rnode(GOUT, 55, 0, 34) },
  { pnode(GPIO, 56, 0, DATAIN, 1, 3), rnode(GOUT, 55, 0, 29) },
  { pnode(GPIO, 56, 0, DATAOUT, 1, 0), rnode(GIN, 55, 0, 20) },
  { pnode(GPIO, 56, 0, DATAOUT, 1, 1), rnode(GIN, 55, 0, 19) },
  { pnode(GPIO, 56, 0, DATAOUT, 1, 2), rnode(GIN, 55, 0, 18) },
  { pnode(GPIO, 56, 0, DATAOUT, 1, 3), rnode(GIN, 55, 0, 17) },
  { pnode(GPIO, 56, 0, DATAOUT, 1, 4), rnode(GIN, 55, 0, 16) },
  { pnode(GPIO, 56, 0, OEIN, 1, 0), rnode(GOUT, 55, 0, 31) },
  { pnode(GPIO, 56, 0, OEIN, 1, 1), rnode(GOUT, 55, 0, 32) },
  { pnode(GPIO, 56, 0, BSLIPMAX, 1, -1), rnode(GIN, 55, 0, 23) },
  { pnode(GPIO, 56, 0, CEIN, 1, -1), rnode(GOUT, 55, 0, 41) },
  { pnode(GPIO, 56, 0, CEOUT, 1, -1), rnode(GOUT, 55, 0, 45) },
  { pnode(GPIO, 56, 0, ACLR, 1, -1), rnode(GOUT, 55, 0, 44) },
  { pnode(GPIO, 56, 0, SCLR, 1, -1), rnode(GOUT, 55, 0, 36) },
  { pnode(GPIO, 56, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 56, 0, 11) },
  { pnode(GPIO, 56, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 56, 0, 9) },
  { pnode(GPIO, 56, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 56, 0, 15) },
  { pnode(GPIO, 56, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 56, 0, 13) },
  { pnode(GPIO, 56, 0, DATAOUT, 2, 0), rnode(GIN, 55, 0, 1) },
  { pnode(GPIO, 56, 0, DATAOUT, 2, 1), rnode(GIN, 55, 0, 2) },
  { pnode(GPIO, 56, 0, DATAOUT, 2, 2), rnode(GIN, 55, 0, 4) },
  { pnode(GPIO, 56, 0, DATAOUT, 2, 3), rnode(GIN, 55, 0, 7) },
  { pnode(GPIO, 56, 0, DATAOUT, 2, 4), rnode(GIN, 55, 0, 9) },
  { pnode(GPIO, 56, 0, OEIN, 2, 0), rnode(GOUT, 55, 0, 49) },
  { pnode(GPIO, 56, 0, OEIN, 2, 1), rnode(GOUT, 55, 0, 48) },
  { pnode(GPIO, 56, 0, BSLIPMAX, 2, -1), rnode(GIN, 54, 0, 14) },
  { pnode(GPIO, 56, 0, CEIN, 2, -1), rnode(GOUT, 55, 0, 19) },
  { pnode(GPIO, 56, 0, CEOUT, 2, -1), rnode(GOUT, 55, 0, 15) },
  { pnode(GPIO, 56, 0, ACLR, 2, -1), rnode(GOUT, 55, 0, 20) },
  { pnode(GPIO, 56, 0, SCLR, 2, -1), rnode(GOUT, 55, 0, 42) },
  { pnode(GPIO, 56, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 56, 0, 5) },
  { pnode(GPIO, 56, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 56, 0, 7) },
  { pnode(GPIO, 56, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 56, 0, 1) },
  { pnode(GPIO, 56, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 56, 0, 3) },
  { pnode(GPIO, 56, 0, DATAOUT, 3, 4), rnode(GIN, 54, 0, 20) },
  { pnode(GPIO, 56, 0, BSLIPMAX, 3, -1), rnode(GIN, 54, 0, 12) },
  { pnode(GPIO, 56, 0, CEIN, 3, -1), rnode(GOUT, 54, 0, 31) },
  { pnode(GPIO, 56, 0, CEOUT, 3, -1), rnode(GOUT, 54, 0, 37) },
  { pnode(GPIO, 56, 0, ACLR, 3, -1), rnode(GOUT, 54, 0, 26) },
  { pnode(GPIO, 56, 0, SCLR, 3, -1), rnode(GOUT, 55, 0, 14) },
  { pnode(GPIO, 56, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 56, 0, 4) },
  { pnode(GPIO, 56, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 56, 0, 6) },
  { pnode(GPIO, 56, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 56, 0, 0) },
  { pnode(GPIO, 56, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 56, 0, 2) },
  { pnode(GPIO, 58, 0, DATAOUT, 0, 4), rnode(GIN, 57, 0, 19) },
  { pnode(GPIO, 58, 0, BSLIPMAX, 0, -1), rnode(GIN, 57, 0, 2) },
  { pnode(GPIO, 58, 0, CEIN, 0, -1), rnode(GOUT, 57, 0, 30) },
  { pnode(GPIO, 58, 0, CEOUT, 0, -1), rnode(GOUT, 57, 0, 31) },
  { pnode(GPIO, 58, 0, ACLR, 0, -1), rnode(GOUT, 57, 0, 33) },
  { pnode(GPIO, 58, 0, SCLR, 0, -1), rnode(GOUT, 58, 0, 10) },
  { pnode(GPIO, 58, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 58, 0, 10) },
  { pnode(GPIO, 58, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 58, 0, 8) },
  { pnode(GPIO, 58, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 58, 0, 14) },
  { pnode(GPIO, 58, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 58, 0, 12) },
  { pnode(GPIO, 58, 0, DATAOUT, 1, 4), rnode(GIN, 57, 0, 1) },
  { pnode(GPIO, 58, 0, BSLIPMAX, 1, -1), rnode(GIN, 56, 0, 16) },
  { pnode(GPIO, 58, 0, CEIN, 1, -1), rnode(GOUT, 57, 0, 17) },
  { pnode(GPIO, 58, 0, CEOUT, 1, -1), rnode(GOUT, 57, 0, 18) },
  { pnode(GPIO, 58, 0, ACLR, 1, -1), rnode(GOUT, 57, 0, 19) },
  { pnode(GPIO, 58, 0, SCLR, 1, -1), rnode(GOUT, 57, 0, 27) },
  { pnode(GPIO, 58, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 58, 0, 11) },
  { pnode(GPIO, 58, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 58, 0, 9) },
  { pnode(GPIO, 58, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 58, 0, 15) },
  { pnode(GPIO, 58, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 58, 0, 13) },
  { pnode(GPIO, 58, 0, DATAOUT, 2, 4), rnode(GIN, 56, 0, 17) },
  { pnode(GPIO, 58, 0, BSLIPMAX, 2, -1), rnode(GIN, 56, 0, 22) },
  { pnode(GPIO, 58, 0, CEIN, 2, -1), rnode(GOUT, 56, 0, 27) },
  { pnode(GPIO, 58, 0, CEOUT, 2, -1), rnode(GOUT, 56, 0, 34) },
  { pnode(GPIO, 58, 0, ACLR, 2, -1), rnode(GOUT, 56, 0, 30) },
  { pnode(GPIO, 58, 0, SCLR, 2, -1), rnode(GOUT, 57, 0, 2) },
  { pnode(GPIO, 58, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 58, 0, 5) },
  { pnode(GPIO, 58, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 58, 0, 7) },
  { pnode(GPIO, 58, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 58, 0, 1) },
  { pnode(GPIO, 58, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 58, 0, 3) },
  { pnode(GPIO, 58, 0, DATAIN, 3, 0), rnode(GOUT, 56, 0, 50) },
  { pnode(GPIO, 58, 0, DATAIN, 3, 1), rnode(GOUT, 56, 0, 49) },
  { pnode(GPIO, 58, 0, DATAIN, 3, 2), rnode(GOUT, 56, 0, 48) },
  { pnode(GPIO, 58, 0, DATAIN, 3, 3), rnode(GOUT, 56, 0, 42) },
  { pnode(GPIO, 58, 0, DATAOUT, 3, 0), rnode(GIN, 56, 0, 11) },
  { pnode(GPIO, 58, 0, DATAOUT, 3, 1), rnode(GIN, 56, 0, 12) },
  { pnode(GPIO, 58, 0, DATAOUT, 3, 2), rnode(GIN, 56, 0, 25) },
  { pnode(GPIO, 58, 0, DATAOUT, 3, 3), rnode(GIN, 56, 0, 24) },
  { pnode(GPIO, 58, 0, DATAOUT, 3, 4), rnode(GIN, 56, 0, 23) },
  { pnode(GPIO, 58, 0, OEIN, 3, 0), rnode(GOUT, 56, 0, 41) },
  { pnode(GPIO, 58, 0, OEIN, 3, 1), rnode(GOUT, 56, 0, 40) },
  { pnode(GPIO, 58, 0, BSLIPMAX, 3, -1), rnode(GIN, 56, 0, 10) },
  { pnode(GPIO, 58, 0, CEIN, 3, -1), rnode(GOUT, 56, 0, 19) },
  { pnode(GPIO, 58, 0, CEOUT, 3, -1), rnode(GOUT, 56, 0, 20) },
  { pnode(GPIO, 58, 0, ACLR, 3, -1), rnode(GOUT, 56, 0, 21) },
  { pnode(GPIO, 58, 0, SCLR, 3, -1), rnode(GOUT, 56, 0, 43) },
  { pnode(GPIO, 58, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 58, 0, 4) },
  { pnode(GPIO, 58, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 58, 0, 6) },
  { pnode(GPIO, 58, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 58, 0, 0) },
  { pnode(GPIO, 58, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 58, 0, 2) },
  { pnode(GPIO, 60, 0, DATAOUT, 0, 0), rnode(GIN, 59, 0, 2) },
  { pnode(GPIO, 60, 0, DATAOUT, 0, 1), rnode(GIN, 59, 0, 3) },
  { pnode(GPIO, 60, 0, DATAOUT, 0, 2), rnode(GIN, 59, 0, 4) },
  { pnode(GPIO, 60, 0, DATAOUT, 0, 3), rnode(GIN, 59, 0, 5) },
  { pnode(GPIO, 60, 0, DATAOUT, 0, 4), rnode(GIN, 59, 0, 6) },
  { pnode(GPIO, 60, 0, BSLIPMAX, 0, -1), rnode(GIN, 59, 0, 1) },
  { pnode(GPIO, 60, 0, CEIN, 0, -1), rnode(GOUT, 59, 0, 44) },
  { pnode(GPIO, 60, 0, CEOUT, 0, -1), rnode(GOUT, 59, 0, 38) },
  { pnode(GPIO, 60, 0, ACLR, 0, -1), rnode(GOUT, 59, 0, 28) },
  { pnode(GPIO, 60, 0, SCLR, 0, -1), rnode(GOUT, 60, 0, 5) },
  { pnode(GPIO, 60, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 60, 0, 10) },
  { pnode(GPIO, 60, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 60, 0, 8) },
  { pnode(GPIO, 60, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 60, 0, 14) },
  { pnode(GPIO, 60, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 60, 0, 12) },
  { pnode(GPIO, 60, 0, DATAOUT, 1, 0), rnode(GIN, 58, 0, 16) },
  { pnode(GPIO, 60, 0, DATAOUT, 1, 1), rnode(GIN, 58, 0, 15) },
  { pnode(GPIO, 60, 0, DATAOUT, 1, 2), rnode(GIN, 58, 0, 14) },
  { pnode(GPIO, 60, 0, DATAOUT, 1, 3), rnode(GIN, 58, 0, 13) },
  { pnode(GPIO, 60, 0, DATAOUT, 1, 4), rnode(GIN, 59, 0, 0) },
  { pnode(GPIO, 60, 0, BSLIPMAX, 1, -1), rnode(GIN, 58, 0, 17) },
  { pnode(GPIO, 60, 0, CEIN, 1, -1), rnode(GOUT, 59, 0, 7) },
  { pnode(GPIO, 60, 0, CEOUT, 1, -1), rnode(GOUT, 59, 0, 3) },
  { pnode(GPIO, 60, 0, ACLR, 1, -1), rnode(GOUT, 59, 0, 2) },
  { pnode(GPIO, 60, 0, SCLR, 1, -1), rnode(GOUT, 59, 0, 42) },
  { pnode(GPIO, 60, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 60, 0, 11) },
  { pnode(GPIO, 60, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 60, 0, 9) },
  { pnode(GPIO, 60, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 60, 0, 15) },
  { pnode(GPIO, 60, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 60, 0, 13) },
  { pnode(GPIO, 60, 0, DATAOUT, 2, 0), rnode(GIN, 58, 0, 23) },
  { pnode(GPIO, 60, 0, DATAOUT, 2, 1), rnode(GIN, 58, 0, 21) },
  { pnode(GPIO, 60, 0, DATAOUT, 2, 2), rnode(GIN, 58, 0, 20) },
  { pnode(GPIO, 60, 0, DATAOUT, 2, 3), rnode(GIN, 58, 0, 19) },
  { pnode(GPIO, 60, 0, DATAOUT, 2, 4), rnode(GIN, 58, 0, 18) },
  { pnode(GPIO, 60, 0, OEIN, 2, 0), rnode(GOUT, 58, 0, 35) },
  { pnode(GPIO, 60, 0, OEIN, 2, 1), rnode(GOUT, 58, 0, 36) },
  { pnode(GPIO, 60, 0, BSLIPMAX, 2, -1), rnode(GIN, 58, 0, 24) },
  { pnode(GPIO, 60, 0, CEIN, 2, -1), rnode(GOUT, 58, 0, 41) },
  { pnode(GPIO, 60, 0, CEOUT, 2, -1), rnode(GOUT, 58, 0, 44) },
  { pnode(GPIO, 60, 0, SCLR, 2, -1), rnode(GOUT, 59, 0, 10) },
  { pnode(GPIO, 60, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 60, 0, 5) },
  { pnode(GPIO, 60, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 60, 0, 7) },
  { pnode(GPIO, 60, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 60, 0, 1) },
  { pnode(GPIO, 60, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 60, 0, 3) },
  { pnode(GPIO, 60, 0, DATAOUT, 3, 4), rnode(GIN, 58, 0, 25) },
  { pnode(GPIO, 60, 0, BSLIPMAX, 3, -1), rnode(GIN, 58, 0, 4) },
  { pnode(GPIO, 60, 0, CEIN, 3, -1), rnode(GOUT, 58, 0, 9) },
  { pnode(GPIO, 60, 0, CEOUT, 3, -1), rnode(GOUT, 58, 0, 11) },
  { pnode(GPIO, 60, 0, ACLR, 3, -1), rnode(GOUT, 58, 0, 5) },
  { pnode(GPIO, 60, 0, SCLR, 3, -1), rnode(GOUT, 58, 0, 47) },
  { pnode(GPIO, 60, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 60, 0, 4) },
  { pnode(GPIO, 60, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 60, 0, 6) },
  { pnode(GPIO, 60, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 60, 0, 0) },
  { pnode(GPIO, 60, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 60, 0, 2) },
  { pnode(GPIO, 62, 0, DATAOUT, 0, 4), rnode(GIN, 61, 0, 7) },
  { pnode(GPIO, 62, 0, BSLIPMAX, 0, -1), rnode(GIN, 61, 0, 2) },
  { pnode(GPIO, 62, 0, CEIN, 0, -1), rnode(GOUT, 61, 0, 13) },
  { pnode(GPIO, 62, 0, CEOUT, 0, -1), rnode(GOUT, 61, 0, 19) },
  { pnode(GPIO, 62, 0, ACLR, 0, -1), rnode(GOUT, 61, 0, 20) },
  { pnode(GPIO, 62, 0, SCLR, 0, -1), rnode(GOUT, 61, 0, 43) },
  { pnode(GPIO, 62, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 62, 0, 10) },
  { pnode(GPIO, 62, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 62, 0, 8) },
  { pnode(GPIO, 62, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 62, 0, 14) },
  { pnode(GPIO, 62, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 62, 0, 12) },
  { pnode(GPIO, 62, 0, DATAOUT, 1, 4), rnode(GIN, 61, 0, 1) },
  { pnode(GPIO, 62, 0, BSLIPMAX, 1, -1), rnode(GIN, 60, 0, 18) },
  { pnode(GPIO, 62, 0, CEIN, 1, -1), rnode(GOUT, 60, 0, 28) },
  { pnode(GPIO, 62, 0, CEOUT, 1, -1), rnode(GOUT, 60, 0, 30) },
  { pnode(GPIO, 62, 0, ACLR, 1, -1), rnode(GOUT, 60, 0, 33) },
  { pnode(GPIO, 62, 0, SCLR, 1, -1), rnode(GOUT, 61, 0, 8) },
  { pnode(GPIO, 62, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 62, 0, 11) },
  { pnode(GPIO, 62, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 62, 0, 9) },
  { pnode(GPIO, 62, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 62, 0, 15) },
  { pnode(GPIO, 62, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 62, 0, 13) },
  { pnode(GPIO, 62, 0, DATAOUT, 2, 4), rnode(GIN, 60, 0, 19) },
  { pnode(GPIO, 62, 0, BSLIPMAX, 2, -1), rnode(GIN, 60, 0, 25) },
  { pnode(GPIO, 62, 0, CEIN, 2, -1), rnode(GOUT, 60, 0, 16) },
  { pnode(GPIO, 62, 0, CEOUT, 2, -1), rnode(GOUT, 60, 0, 22) },
  { pnode(GPIO, 62, 0, ACLR, 2, -1), rnode(GOUT, 60, 0, 24) },
  { pnode(GPIO, 62, 0, SCLR, 2, -1), rnode(GOUT, 60, 0, 38) },
  { pnode(GPIO, 62, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 62, 0, 5) },
  { pnode(GPIO, 62, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 62, 0, 7) },
  { pnode(GPIO, 62, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 62, 0, 1) },
  { pnode(GPIO, 62, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 62, 0, 3) },
  { pnode(GPIO, 62, 0, DATAOUT, 3, 0), rnode(GIN, 60, 0, 1) },
  { pnode(GPIO, 62, 0, DATAOUT, 3, 1), rnode(GIN, 60, 0, 3) },
  { pnode(GPIO, 62, 0, DATAOUT, 3, 2), rnode(GIN, 60, 0, 5) },
  { pnode(GPIO, 62, 0, DATAOUT, 3, 3), rnode(GIN, 60, 0, 8) },
  { pnode(GPIO, 62, 0, DATAOUT, 3, 4), rnode(GIN, 60, 0, 10) },
  { pnode(GPIO, 62, 0, OEIN, 3, 0), rnode(GOUT, 60, 0, 18) },
  { pnode(GPIO, 62, 0, OEIN, 3, 1), rnode(GOUT, 60, 0, 19) },
  { pnode(GPIO, 62, 0, BSLIPMAX, 3, -1), rnode(GIN, 59, 0, 24) },
  { pnode(GPIO, 62, 0, CEIN, 3, -1), rnode(GOUT, 60, 0, 4) },
  { pnode(GPIO, 62, 0, CEOUT, 3, -1), rnode(GOUT, 60, 0, 3) },
  { pnode(GPIO, 62, 0, SCLR, 3, -1), rnode(GOUT, 60, 0, 15) },
  { pnode(GPIO, 62, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 62, 0, 4) },
  { pnode(GPIO, 62, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 62, 0, 6) },
  { pnode(GPIO, 62, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 62, 0, 0) },
  { pnode(GPIO, 62, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 62, 0, 2) },
  { pnode(GPIO, 64, 0, DATAIN, 0, 0), rnode(GOUT, 63, 0, 11) },
  { pnode(GPIO, 64, 0, DATAIN, 0, 1), rnode(GOUT, 63, 0, 6) },
  { pnode(GPIO, 64, 0, DATAIN, 0, 2), rnode(GOUT, 63, 0, 7) },
  { pnode(GPIO, 64, 0, DATAIN, 0, 3), rnode(GOUT, 63, 0, 5) },
  { pnode(GPIO, 64, 0, DATAOUT, 0, 0), rnode(GIN, 63, 0, 1) },
  { pnode(GPIO, 64, 0, DATAOUT, 0, 1), rnode(GIN, 63, 0, 3) },
  { pnode(GPIO, 64, 0, DATAOUT, 0, 2), rnode(GIN, 63, 0, 4) },
  { pnode(GPIO, 64, 0, DATAOUT, 0, 3), rnode(GIN, 63, 0, 6) },
  { pnode(GPIO, 64, 0, DATAOUT, 0, 4), rnode(GIN, 63, 0, 8) },
  { pnode(GPIO, 64, 0, OEIN, 0, 0), rnode(GOUT, 63, 0, 3) },
  { pnode(GPIO, 64, 0, OEIN, 0, 1), rnode(GOUT, 63, 0, 8) },
  { pnode(GPIO, 64, 0, BSLIPMAX, 0, -1), rnode(GIN, 62, 0, 15) },
  { pnode(GPIO, 64, 0, CEIN, 0, -1), rnode(GOUT, 62, 0, 37) },
  { pnode(GPIO, 64, 0, CEOUT, 0, -1), rnode(GOUT, 62, 0, 35) },
  { pnode(GPIO, 64, 0, ACLR, 0, -1), rnode(GOUT, 62, 0, 26) },
  { pnode(GPIO, 64, 0, SCLR, 0, -1), rnode(GOUT, 63, 0, 25) },
  { pnode(GPIO, 64, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 64, 0, 10) },
  { pnode(GPIO, 64, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 64, 0, 8) },
  { pnode(GPIO, 64, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 64, 0, 14) },
  { pnode(GPIO, 64, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 64, 0, 12) },
  { pnode(GPIO, 64, 0, DATAIN, 1, 0), rnode(GOUT, 62, 0, 44) },
  { pnode(GPIO, 64, 0, DATAIN, 1, 1), rnode(GOUT, 62, 0, 39) },
  { pnode(GPIO, 64, 0, DATAIN, 1, 2), rnode(GOUT, 62, 0, 43) },
  { pnode(GPIO, 64, 0, DATAIN, 1, 3), rnode(GOUT, 62, 0, 38) },
  { pnode(GPIO, 64, 0, DATAOUT, 1, 0), rnode(GIN, 62, 0, 24) },
  { pnode(GPIO, 64, 0, DATAOUT, 1, 1), rnode(GIN, 62, 0, 23) },
  { pnode(GPIO, 64, 0, DATAOUT, 1, 2), rnode(GIN, 62, 0, 22) },
  { pnode(GPIO, 64, 0, DATAOUT, 1, 3), rnode(GIN, 62, 0, 21) },
  { pnode(GPIO, 64, 0, DATAOUT, 1, 4), rnode(GIN, 62, 0, 20) },
  { pnode(GPIO, 64, 0, OEIN, 1, 0), rnode(GOUT, 62, 0, 28) },
  { pnode(GPIO, 64, 0, OEIN, 1, 1), rnode(GOUT, 62, 0, 29) },
  { pnode(GPIO, 64, 0, BSLIPMAX, 1, -1), rnode(GIN, 62, 0, 11) },
  { pnode(GPIO, 64, 0, CEIN, 1, -1), rnode(GOUT, 62, 0, 48) },
  { pnode(GPIO, 64, 0, CEOUT, 1, -1), rnode(GOUT, 62, 0, 47) },
  { pnode(GPIO, 64, 0, ACLR, 1, -1), rnode(GOUT, 62, 0, 46) },
  { pnode(GPIO, 64, 0, SCLR, 1, -1), rnode(GOUT, 62, 0, 33) },
  { pnode(GPIO, 64, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 64, 0, 11) },
  { pnode(GPIO, 64, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 64, 0, 9) },
  { pnode(GPIO, 64, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 64, 0, 15) },
  { pnode(GPIO, 64, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 64, 0, 13) },
  { pnode(GPIO, 64, 0, DATAOUT, 2, 0), rnode(GIN, 61, 0, 15) },
  { pnode(GPIO, 64, 0, DATAOUT, 2, 1), rnode(GIN, 61, 0, 14) },
  { pnode(GPIO, 64, 0, DATAOUT, 2, 2), rnode(GIN, 62, 0, 0) },
  { pnode(GPIO, 64, 0, DATAOUT, 2, 3), rnode(GIN, 62, 0, 3) },
  { pnode(GPIO, 64, 0, DATAOUT, 2, 4), rnode(GIN, 62, 0, 5) },
  { pnode(GPIO, 64, 0, OEIN, 2, 0), rnode(GOUT, 62, 0, 23) },
  { pnode(GPIO, 64, 0, OEIN, 2, 1), rnode(GOUT, 62, 0, 24) },
  { pnode(GPIO, 64, 0, BSLIPMAX, 2, -1), rnode(GIN, 61, 0, 18) },
  { pnode(GPIO, 64, 0, CEIN, 2, -1), rnode(GOUT, 62, 0, 17) },
  { pnode(GPIO, 64, 0, CEOUT, 2, -1), rnode(GOUT, 62, 0, 13) },
  { pnode(GPIO, 64, 0, ACLR, 2, -1), rnode(GOUT, 62, 0, 18) },
  { pnode(GPIO, 64, 0, SCLR, 2, -1), rnode(GOUT, 62, 0, 50) },
  { pnode(GPIO, 64, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 64, 0, 5) },
  { pnode(GPIO, 64, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 64, 0, 7) },
  { pnode(GPIO, 64, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 64, 0, 1) },
  { pnode(GPIO, 64, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 64, 0, 3) },
  { pnode(GPIO, 64, 0, DATAOUT, 3, 4), rnode(GIN, 61, 0, 24) },
  { pnode(GPIO, 64, 0, BSLIPMAX, 3, -1), rnode(GIN, 61, 0, 8) },
  { pnode(GPIO, 64, 0, CEIN, 3, -1), rnode(GOUT, 61, 0, 28) },
  { pnode(GPIO, 64, 0, CEOUT, 3, -1), rnode(GOUT, 61, 0, 30) },
  { pnode(GPIO, 64, 0, ACLR, 3, -1), rnode(GOUT, 61, 0, 32) },
  { pnode(GPIO, 64, 0, SCLR, 3, -1), rnode(GOUT, 62, 0, 12) },
  { pnode(GPIO, 64, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 64, 0, 4) },
  { pnode(GPIO, 64, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 64, 0, 6) },
  { pnode(GPIO, 64, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 64, 0, 0) },
  { pnode(GPIO, 64, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 64, 0, 2) },
  { pnode(GPIO, 66, 0, DATAOUT, 0, 4), rnode(GIN, 66, 0, 9) },
  { pnode(GPIO, 66, 0, BSLIPMAX, 0, -1), rnode(GIN, 65, 0, 20) },
  { pnode(GPIO, 66, 0, CEIN, 0, -1), rnode(GOUT, 66, 0, 11) },
  { pnode(GPIO, 66, 0, CEOUT, 0, -1), rnode(GOUT, 66, 0, 6) },
  { pnode(GPIO, 66, 0, ACLR, 0, -1), rnode(GOUT, 66, 0, 7) },
  { pnode(GPIO, 66, 0, SCLR, 0, -1), rnode(GOUT, 66, 0, 41) },
  { pnode(GPIO, 66, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 66, 0, 10) },
  { pnode(GPIO, 66, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 66, 0, 8) },
  { pnode(GPIO, 66, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 66, 0, 14) },
  { pnode(GPIO, 66, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 66, 0, 12) },
  { pnode(GPIO, 66, 0, DATAOUT, 1, 4), rnode(GIN, 65, 0, 21) },
  { pnode(GPIO, 66, 0, BSLIPMAX, 1, -1), rnode(GIN, 65, 0, 12) },
  { pnode(GPIO, 66, 0, CEIN, 1, -1), rnode(GOUT, 65, 0, 23) },
  { pnode(GPIO, 66, 0, CEOUT, 1, -1), rnode(GOUT, 65, 0, 25) },
  { pnode(GPIO, 66, 0, ACLR, 1, -1), rnode(GOUT, 65, 0, 49) },
  { pnode(GPIO, 66, 0, SCLR, 1, -1), rnode(GOUT, 65, 0, 26) },
  { pnode(GPIO, 66, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 66, 0, 11) },
  { pnode(GPIO, 66, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 66, 0, 9) },
  { pnode(GPIO, 66, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 66, 0, 15) },
  { pnode(GPIO, 66, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 66, 0, 13) },
  { pnode(GPIO, 66, 0, DATAOUT, 2, 4), rnode(GIN, 65, 0, 4) },
  { pnode(GPIO, 66, 0, BSLIPMAX, 2, -1), rnode(GIN, 64, 0, 13) },
  { pnode(GPIO, 66, 0, CEIN, 2, -1), rnode(GOUT, 64, 0, 31) },
  { pnode(GPIO, 66, 0, CEOUT, 2, -1), rnode(GOUT, 64, 0, 32) },
  { pnode(GPIO, 66, 0, ACLR, 2, -1), rnode(GOUT, 64, 0, 35) },
  { pnode(GPIO, 66, 0, SCLR, 2, -1), rnode(GOUT, 65, 0, 18) },
  { pnode(GPIO, 66, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 66, 0, 5) },
  { pnode(GPIO, 66, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 66, 0, 7) },
  { pnode(GPIO, 66, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 66, 0, 1) },
  { pnode(GPIO, 66, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 66, 0, 3) },
  { pnode(GPIO, 66, 0, DATAIN, 3, 0), rnode(GOUT, 64, 0, 25) },
  { pnode(GPIO, 66, 0, DATAIN, 3, 1), rnode(GOUT, 64, 0, 46) },
  { pnode(GPIO, 66, 0, DATAIN, 3, 2), rnode(GOUT, 64, 0, 41) },
  { pnode(GPIO, 66, 0, DATAIN, 3, 3), rnode(GOUT, 64, 0, 40) },
  { pnode(GPIO, 66, 0, DATAOUT, 3, 0), rnode(GIN, 64, 0, 8) },
  { pnode(GPIO, 66, 0, DATAOUT, 3, 1), rnode(GIN, 64, 0, 9) },
  { pnode(GPIO, 66, 0, DATAOUT, 3, 2), rnode(GIN, 64, 0, 10) },
  { pnode(GPIO, 66, 0, DATAOUT, 3, 3), rnode(GIN, 64, 0, 11) },
  { pnode(GPIO, 66, 0, DATAOUT, 3, 4), rnode(GIN, 64, 0, 12) },
  { pnode(GPIO, 66, 0, OEIN, 3, 0), rnode(GOUT, 64, 0, 43) },
  { pnode(GPIO, 66, 0, OEIN, 3, 1), rnode(GOUT, 64, 0, 27) },
  { pnode(GPIO, 66, 0, BSLIPMAX, 3, -1), rnode(GIN, 64, 0, 0) },
  { pnode(GPIO, 66, 0, CEIN, 3, -1), rnode(GOUT, 64, 0, 9) },
  { pnode(GPIO, 66, 0, CEOUT, 3, -1), rnode(GOUT, 64, 0, 6) },
  { pnode(GPIO, 66, 0, ACLR, 3, -1), rnode(GOUT, 64, 0, 5) },
  { pnode(GPIO, 66, 0, SCLR, 3, -1), rnode(GOUT, 64, 0, 29) },
  { pnode(GPIO, 66, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 66, 0, 4) },
  { pnode(GPIO, 66, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 66, 0, 6) },
  { pnode(GPIO, 66, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 66, 0, 0) },
  { pnode(GPIO, 66, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 66, 0, 2) },
  { pnode(GPIO, 68, 0, DATAOUT, 0, 0), rnode(GIN, 67, 0, 17) },
  { pnode(GPIO, 68, 0, DATAOUT, 0, 1), rnode(GIN, 67, 0, 16) },
  { pnode(GPIO, 68, 0, DATAOUT, 0, 2), rnode(GIN, 67, 0, 15) },
  { pnode(GPIO, 68, 0, DATAOUT, 0, 3), rnode(GIN, 67, 0, 14) },
  { pnode(GPIO, 68, 0, DATAOUT, 0, 4), rnode(GIN, 67, 0, 13) },
  { pnode(GPIO, 68, 0, BSLIPMAX, 0, -1), rnode(GIN, 67, 0, 18) },
  { pnode(GPIO, 68, 0, CEIN, 0, -1), rnode(GOUT, 68, 0, 17) },
  { pnode(GPIO, 68, 0, CEOUT, 0, -1), rnode(GOUT, 68, 0, 14) },
  { pnode(GPIO, 68, 0, ACLR, 0, -1), rnode(GOUT, 68, 0, 15) },
  { pnode(GPIO, 68, 0, SCLR, 0, -1), rnode(GOUT, 68, 0, 44) },
  { pnode(GPIO, 68, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 0, 10) },
  { pnode(GPIO, 68, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 0, 8) },
  { pnode(GPIO, 68, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 0, 14) },
  { pnode(GPIO, 68, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 0, 12) },
  { pnode(GPIO, 68, 0, DATAOUT, 1, 0), rnode(GIN, 67, 0, 23) },
  { pnode(GPIO, 68, 0, DATAOUT, 1, 1), rnode(GIN, 67, 0, 22) },
  { pnode(GPIO, 68, 0, DATAOUT, 1, 2), rnode(GIN, 67, 0, 21) },
  { pnode(GPIO, 68, 0, DATAOUT, 1, 3), rnode(GIN, 67, 0, 20) },
  { pnode(GPIO, 68, 0, DATAOUT, 1, 4), rnode(GIN, 67, 0, 19) },
  { pnode(GPIO, 68, 0, BSLIPMAX, 1, -1), rnode(GIN, 67, 0, 25) },
  { pnode(GPIO, 68, 0, CEIN, 1, -1), rnode(GOUT, 67, 0, 40) },
  { pnode(GPIO, 68, 0, CEOUT, 1, -1), rnode(GOUT, 67, 0, 43) },
  { pnode(GPIO, 68, 0, ACLR, 1, -1), rnode(GOUT, 67, 0, 27) },
  { pnode(GPIO, 68, 0, SCLR, 1, -1), rnode(GOUT, 68, 0, 3) },
  { pnode(GPIO, 68, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 0, 11) },
  { pnode(GPIO, 68, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 0, 9) },
  { pnode(GPIO, 68, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 0, 15) },
  { pnode(GPIO, 68, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 0, 13) },
  { pnode(GPIO, 68, 0, DATAOUT, 2, 0), rnode(GIN, 67, 0, 5) },
  { pnode(GPIO, 68, 0, DATAOUT, 2, 1), rnode(GIN, 67, 0, 9) },
  { pnode(GPIO, 68, 0, DATAOUT, 2, 2), rnode(GIN, 67, 0, 10) },
  { pnode(GPIO, 68, 0, DATAOUT, 2, 3), rnode(GIN, 67, 0, 11) },
  { pnode(GPIO, 68, 0, DATAOUT, 2, 4), rnode(GIN, 67, 0, 12) },
  { pnode(GPIO, 68, 0, OEIN, 2, 0), rnode(GOUT, 67, 0, 50) },
  { pnode(GPIO, 68, 0, OEIN, 2, 1), rnode(GOUT, 67, 0, 49) },
  { pnode(GPIO, 68, 0, BSLIPMAX, 2, -1), rnode(GIN, 67, 0, 4) },
  { pnode(GPIO, 68, 0, CEIN, 2, -1), rnode(GOUT, 67, 0, 2) },
  { pnode(GPIO, 68, 0, CEOUT, 2, -1), rnode(GOUT, 67, 0, 17) },
  { pnode(GPIO, 68, 0, SCLR, 2, -1), rnode(GOUT, 67, 0, 42) },
  { pnode(GPIO, 68, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 0, 5) },
  { pnode(GPIO, 68, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 0, 7) },
  { pnode(GPIO, 68, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 0, 1) },
  { pnode(GPIO, 68, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 0, 3) },
  { pnode(GPIO, 68, 0, DATAOUT, 3, 4), rnode(GIN, 67, 0, 3) },
  { pnode(GPIO, 68, 0, BSLIPMAX, 3, -1), rnode(GIN, 66, 0, 18) },
  { pnode(GPIO, 68, 0, CEIN, 3, -1), rnode(GOUT, 66, 0, 45) },
  { pnode(GPIO, 68, 0, CEOUT, 3, -1), rnode(GOUT, 66, 0, 40) },
  { pnode(GPIO, 68, 0, ACLR, 3, -1), rnode(GOUT, 66, 0, 43) },
  { pnode(GPIO, 68, 0, SCLR, 3, -1), rnode(GOUT, 67, 0, 4) },
  { pnode(GPIO, 68, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 0, 4) },
  { pnode(GPIO, 68, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 0, 6) },
  { pnode(GPIO, 68, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 0, 0) },
  { pnode(GPIO, 68, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 0, 2) },
  { pnode(GPIO, 70, 0, DATAOUT, 0, 4), rnode(GIN, 70, 0, 0) },
  { pnode(GPIO, 70, 0, BSLIPMAX, 0, -1), rnode(GIN, 69, 0, 17) },
  { pnode(GPIO, 70, 0, CEIN, 0, -1), rnode(GOUT, 69, 0, 31) },
  { pnode(GPIO, 70, 0, CEOUT, 0, -1), rnode(GOUT, 69, 0, 37) },
  { pnode(GPIO, 70, 0, ACLR, 0, -1), rnode(GOUT, 69, 0, 36) },
  { pnode(GPIO, 70, 0, SCLR, 0, -1), rnode(GOUT, 70, 0, 14) },
  { pnode(GPIO, 70, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 70, 0, 10) },
  { pnode(GPIO, 70, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 70, 0, 8) },
  { pnode(GPIO, 70, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 70, 0, 14) },
  { pnode(GPIO, 70, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 70, 0, 12) },
  { pnode(GPIO, 70, 0, DATAOUT, 1, 4), rnode(GIN, 69, 0, 18) },
  { pnode(GPIO, 70, 0, BSLIPMAX, 1, -1), rnode(GIN, 69, 0, 25) },
  { pnode(GPIO, 70, 0, CEIN, 1, -1), rnode(GOUT, 69, 0, 20) },
  { pnode(GPIO, 70, 0, CEOUT, 1, -1), rnode(GOUT, 69, 0, 22) },
  { pnode(GPIO, 70, 0, ACLR, 1, -1), rnode(GOUT, 69, 0, 24) },
  { pnode(GPIO, 70, 0, SCLR, 1, -1), rnode(GOUT, 69, 0, 27) },
  { pnode(GPIO, 70, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 70, 0, 11) },
  { pnode(GPIO, 70, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 70, 0, 9) },
  { pnode(GPIO, 70, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 70, 0, 15) },
  { pnode(GPIO, 70, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 70, 0, 13) },
  { pnode(GPIO, 70, 0, DATAOUT, 2, 4), rnode(GIN, 69, 0, 12) },
  { pnode(GPIO, 70, 0, BSLIPMAX, 2, -1), rnode(GIN, 69, 0, 6) },
  { pnode(GPIO, 70, 0, CEIN, 2, -1), rnode(GOUT, 68, 0, 36) },
  { pnode(GPIO, 70, 0, CEOUT, 2, -1), rnode(GOUT, 69, 0, 0) },
  { pnode(GPIO, 70, 0, ACLR, 2, -1), rnode(GOUT, 69, 0, 9) },
  { pnode(GPIO, 70, 0, SCLR, 2, -1), rnode(GOUT, 69, 0, 14) },
  { pnode(GPIO, 70, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 70, 0, 5) },
  { pnode(GPIO, 70, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 70, 0, 7) },
  { pnode(GPIO, 70, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 70, 0, 1) },
  { pnode(GPIO, 70, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 70, 0, 3) },
  { pnode(GPIO, 70, 0, DATAIN, 3, 0), rnode(GOUT, 68, 0, 27) },
  { pnode(GPIO, 70, 0, DATAIN, 3, 1), rnode(GOUT, 68, 0, 28) },
  { pnode(GPIO, 70, 0, DATAIN, 3, 2), rnode(GOUT, 68, 0, 34) },
  { pnode(GPIO, 70, 0, DATAIN, 3, 3), rnode(GOUT, 68, 0, 29) },
  { pnode(GPIO, 70, 0, DATAOUT, 3, 0), rnode(GIN, 68, 0, 18) },
  { pnode(GPIO, 70, 0, DATAOUT, 3, 1), rnode(GIN, 68, 0, 16) },
  { pnode(GPIO, 70, 0, DATAOUT, 3, 2), rnode(GIN, 68, 0, 14) },
  { pnode(GPIO, 70, 0, DATAOUT, 3, 3), rnode(GIN, 69, 0, 1) },
  { pnode(GPIO, 70, 0, DATAOUT, 3, 4), rnode(GIN, 69, 0, 3) },
  { pnode(GPIO, 70, 0, OEIN, 3, 0), rnode(GOUT, 68, 0, 31) },
  { pnode(GPIO, 70, 0, OEIN, 3, 1), rnode(GOUT, 68, 0, 32) },
  { pnode(GPIO, 70, 0, BSLIPMAX, 3, -1), rnode(GIN, 68, 0, 7) },
  { pnode(GPIO, 70, 0, CEIN, 3, -1), rnode(GOUT, 68, 0, 39) },
  { pnode(GPIO, 70, 0, CEOUT, 3, -1), rnode(GOUT, 68, 0, 43) },
  { pnode(GPIO, 70, 0, ACLR, 3, -1), rnode(GOUT, 68, 0, 38) },
  { pnode(GPIO, 70, 0, SCLR, 3, -1), rnode(GOUT, 68, 0, 37) },
  { pnode(GPIO, 70, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 70, 0, 4) },
  { pnode(GPIO, 70, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 70, 0, 6) },
  { pnode(GPIO, 70, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 70, 0, 0) },
  { pnode(GPIO, 70, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 70, 0, 2) },
  { pnode(GPIO, 72, 0, DATAIN, 0, 0), rnode(GOUT, 71, 0, 30) },
  { pnode(GPIO, 72, 0, DATAIN, 0, 1), rnode(GOUT, 71, 0, 31) },
  { pnode(GPIO, 72, 0, DATAIN, 0, 2), rnode(GOUT, 71, 0, 33) },
  { pnode(GPIO, 72, 0, DATAIN, 0, 3), rnode(GOUT, 71, 0, 32) },
  { pnode(GPIO, 72, 0, DATAOUT, 0, 0), rnode(GIN, 71, 0, 20) },
  { pnode(GPIO, 72, 0, DATAOUT, 0, 1), rnode(GIN, 71, 0, 18) },
  { pnode(GPIO, 72, 0, DATAOUT, 0, 2), rnode(GIN, 71, 0, 17) },
  { pnode(GPIO, 72, 0, DATAOUT, 0, 3), rnode(GIN, 71, 0, 15) },
  { pnode(GPIO, 72, 0, DATAOUT, 0, 4), rnode(GIN, 71, 0, 13) },
  { pnode(GPIO, 72, 0, OEIN, 0, 0), rnode(GOUT, 71, 0, 35) },
  { pnode(GPIO, 72, 0, OEIN, 0, 1), rnode(GOUT, 71, 0, 36) },
  { pnode(GPIO, 72, 0, BSLIPMAX, 0, -1), rnode(GIN, 71, 0, 24) },
  { pnode(GPIO, 72, 0, CEIN, 0, -1), rnode(GOUT, 71, 0, 39) },
  { pnode(GPIO, 72, 0, CEOUT, 0, -1), rnode(GOUT, 71, 0, 43) },
  { pnode(GPIO, 72, 0, ACLR, 0, -1), rnode(GOUT, 71, 0, 27) },
  { pnode(GPIO, 72, 0, SCLR, 0, -1), rnode(GOUT, 71, 0, 26) },
  { pnode(GPIO, 72, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 72, 0, 10) },
  { pnode(GPIO, 72, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 72, 0, 8) },
  { pnode(GPIO, 72, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 72, 0, 14) },
  { pnode(GPIO, 72, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 72, 0, 12) },
  { pnode(GPIO, 72, 0, DATAIN, 1, 0), rnode(GOUT, 71, 0, 13) },
  { pnode(GPIO, 72, 0, DATAIN, 1, 1), rnode(GOUT, 71, 0, 18) },
  { pnode(GPIO, 72, 0, DATAIN, 1, 2), rnode(GOUT, 71, 0, 15) },
  { pnode(GPIO, 72, 0, DATAIN, 1, 3), rnode(GOUT, 71, 0, 50) },
  { pnode(GPIO, 72, 0, DATAOUT, 1, 0), rnode(GIN, 71, 0, 7) },
  { pnode(GPIO, 72, 0, DATAOUT, 1, 1), rnode(GIN, 71, 0, 8) },
  { pnode(GPIO, 72, 0, DATAOUT, 1, 2), rnode(GIN, 71, 0, 10) },
  { pnode(GPIO, 72, 0, DATAOUT, 1, 3), rnode(GIN, 71, 0, 11) },
  { pnode(GPIO, 72, 0, DATAOUT, 1, 4), rnode(GIN, 71, 0, 12) },
  { pnode(GPIO, 72, 0, OEIN, 1, 0), rnode(GOUT, 71, 0, 47) },
  { pnode(GPIO, 72, 0, OEIN, 1, 1), rnode(GOUT, 71, 0, 46) },
  { pnode(GPIO, 72, 0, BSLIPMAX, 1, -1), rnode(GIN, 71, 0, 4) },
  { pnode(GPIO, 72, 0, CEIN, 1, -1), rnode(GOUT, 71, 0, 4) },
  { pnode(GPIO, 72, 0, CEOUT, 1, -1), rnode(GOUT, 71, 0, 3) },
  { pnode(GPIO, 72, 0, ACLR, 1, -1), rnode(GOUT, 71, 0, 2) },
  { pnode(GPIO, 72, 0, SCLR, 1, -1), rnode(GOUT, 71, 0, 40) },
  { pnode(GPIO, 72, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 72, 0, 11) },
  { pnode(GPIO, 72, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 72, 0, 9) },
  { pnode(GPIO, 72, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 72, 0, 15) },
  { pnode(GPIO, 72, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 72, 0, 13) },
  { pnode(GPIO, 72, 0, DATAOUT, 2, 0), rnode(GIN, 70, 0, 22) },
  { pnode(GPIO, 72, 0, DATAOUT, 2, 1), rnode(GIN, 70, 0, 21) },
  { pnode(GPIO, 72, 0, DATAOUT, 2, 2), rnode(GIN, 70, 0, 19) },
  { pnode(GPIO, 72, 0, DATAOUT, 2, 3), rnode(GIN, 70, 0, 16) },
  { pnode(GPIO, 72, 0, DATAOUT, 2, 4), rnode(GIN, 70, 0, 14) },
  { pnode(GPIO, 72, 0, OEIN, 2, 0), rnode(GOUT, 71, 0, 9) },
  { pnode(GPIO, 72, 0, OEIN, 2, 1), rnode(GOUT, 71, 0, 11) },
  { pnode(GPIO, 72, 0, BSLIPMAX, 2, -1), rnode(GIN, 70, 0, 25) },
  { pnode(GPIO, 72, 0, CEIN, 2, -1), rnode(GOUT, 70, 0, 30) },
  { pnode(GPIO, 72, 0, CEOUT, 2, -1), rnode(GOUT, 70, 0, 31) },
  { pnode(GPIO, 72, 0, ACLR, 2, -1), rnode(GOUT, 70, 0, 33) },
  { pnode(GPIO, 72, 0, SCLR, 2, -1), rnode(GOUT, 71, 0, 7) },
  { pnode(GPIO, 72, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 72, 0, 5) },
  { pnode(GPIO, 72, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 72, 0, 7) },
  { pnode(GPIO, 72, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 72, 0, 1) },
  { pnode(GPIO, 72, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 72, 0, 3) },
  { pnode(GPIO, 72, 0, DATAOUT, 3, 4), rnode(GIN, 70, 0, 7) },
  { pnode(GPIO, 72, 0, BSLIPMAX, 3, -1), rnode(GIN, 70, 0, 1) },
  { pnode(GPIO, 72, 0, CEIN, 3, -1), rnode(GOUT, 70, 0, 20) },
  { pnode(GPIO, 72, 0, CEOUT, 3, -1), rnode(GOUT, 70, 0, 22) },
  { pnode(GPIO, 72, 0, ACLR, 3, -1), rnode(GOUT, 70, 0, 25) },
  { pnode(GPIO, 72, 0, SCLR, 3, -1), rnode(GOUT, 70, 0, 29) },
  { pnode(GPIO, 72, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 72, 0, 4) },
  { pnode(GPIO, 72, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 72, 0, 6) },
  { pnode(GPIO, 72, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 72, 0, 0) },
  { pnode(GPIO, 72, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 72, 0, 2) },
  { pnode(GPIO, 74, 0, DATAOUT, 0, 4), rnode(GIN, 75, 0, 2) },
  { pnode(GPIO, 74, 0, BSLIPMAX, 0, -1), rnode(GIN, 74, 0, 11) },
  { pnode(GPIO, 74, 0, CEIN, 0, -1), rnode(GOUT, 75, 0, 10) },
  { pnode(GPIO, 74, 0, CEOUT, 0, -1), rnode(GOUT, 75, 0, 9) },
  { pnode(GPIO, 74, 0, ACLR, 0, -1), rnode(GOUT, 75, 0, 11) },
  { pnode(GPIO, 74, 0, SCLR, 0, -1), rnode(GOUT, 75, 0, 2) },
  { pnode(GPIO, 74, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 74, 0, 10) },
  { pnode(GPIO, 74, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 74, 0, 8) },
  { pnode(GPIO, 74, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 74, 0, 14) },
  { pnode(GPIO, 74, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 74, 0, 12) },
  { pnode(GPIO, 74, 0, DATAOUT, 1, 4), rnode(GIN, 74, 0, 10) },
  { pnode(GPIO, 74, 0, BSLIPMAX, 1, -1), rnode(GIN, 74, 0, 5) },
  { pnode(GPIO, 74, 0, CEIN, 1, -1), rnode(GOUT, 74, 0, 22) },
  { pnode(GPIO, 74, 0, CEOUT, 1, -1), rnode(GOUT, 74, 0, 24) },
  { pnode(GPIO, 74, 0, ACLR, 1, -1), rnode(GOUT, 74, 0, 50) },
  { pnode(GPIO, 74, 0, SCLR, 1, -1), rnode(GOUT, 74, 0, 35) },
  { pnode(GPIO, 74, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 74, 0, 11) },
  { pnode(GPIO, 74, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 74, 0, 9) },
  { pnode(GPIO, 74, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 74, 0, 15) },
  { pnode(GPIO, 74, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 74, 0, 13) },
  { pnode(GPIO, 74, 0, DATAOUT, 2, 4), rnode(GIN, 74, 0, 4) },
  { pnode(GPIO, 74, 0, BSLIPMAX, 2, -1), rnode(GIN, 73, 0, 13) },
  { pnode(GPIO, 74, 0, CEIN, 2, -1), rnode(GOUT, 73, 0, 35) },
  { pnode(GPIO, 74, 0, CEOUT, 2, -1), rnode(GOUT, 73, 0, 26) },
  { pnode(GPIO, 74, 0, ACLR, 2, -1), rnode(GOUT, 74, 0, 10) },
  { pnode(GPIO, 74, 0, SCLR, 2, -1), rnode(GOUT, 74, 0, 20) },
  { pnode(GPIO, 74, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 74, 0, 5) },
  { pnode(GPIO, 74, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 74, 0, 7) },
  { pnode(GPIO, 74, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 74, 0, 1) },
  { pnode(GPIO, 74, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 74, 0, 3) },
  { pnode(GPIO, 74, 0, DATAIN, 3, 0), rnode(GOUT, 73, 0, 40) },
  { pnode(GPIO, 74, 0, DATAIN, 3, 1), rnode(GOUT, 73, 0, 44) },
  { pnode(GPIO, 74, 0, DATAIN, 3, 2), rnode(GOUT, 73, 0, 39) },
  { pnode(GPIO, 74, 0, DATAIN, 3, 3), rnode(GOUT, 73, 0, 38) },
  { pnode(GPIO, 74, 0, DATAOUT, 3, 0), rnode(GIN, 73, 0, 18) },
  { pnode(GPIO, 74, 0, DATAOUT, 3, 1), rnode(GIN, 73, 0, 17) },
  { pnode(GPIO, 74, 0, DATAOUT, 3, 2), rnode(GIN, 73, 0, 16) },
  { pnode(GPIO, 74, 0, DATAOUT, 3, 3), rnode(GIN, 73, 0, 15) },
  { pnode(GPIO, 74, 0, DATAOUT, 3, 4), rnode(GIN, 73, 0, 14) },
  { pnode(GPIO, 74, 0, OEIN, 3, 0), rnode(GOUT, 73, 0, 34) },
  { pnode(GPIO, 74, 0, OEIN, 3, 1), rnode(GOUT, 73, 0, 30) },
  { pnode(GPIO, 74, 0, BSLIPMAX, 3, -1), rnode(GIN, 73, 0, 19) },
  { pnode(GPIO, 74, 0, CEIN, 3, -1), rnode(GOUT, 73, 0, 25) },
  { pnode(GPIO, 74, 0, CEOUT, 3, -1), rnode(GOUT, 73, 0, 49) },
  { pnode(GPIO, 74, 0, ACLR, 3, -1), rnode(GOUT, 73, 0, 47) },
  { pnode(GPIO, 74, 0, SCLR, 3, -1), rnode(GOUT, 73, 0, 32) },
  { pnode(GPIO, 74, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 74, 0, 4) },
  { pnode(GPIO, 74, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 74, 0, 6) },
  { pnode(GPIO, 74, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 74, 0, 0) },
  { pnode(GPIO, 74, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 74, 0, 2) },
  { pnode(GPIO, 76, 0, DATAOUT, 0, 0), rnode(GIN, 76, 0, 11) },
  { pnode(GPIO, 76, 0, DATAOUT, 0, 1), rnode(GIN, 76, 0, 12) },
  { pnode(GPIO, 76, 0, DATAOUT, 0, 2), rnode(GIN, 76, 0, 25) },
  { pnode(GPIO, 76, 0, DATAOUT, 0, 3), rnode(GIN, 76, 0, 24) },
  { pnode(GPIO, 76, 0, DATAOUT, 0, 4), rnode(GIN, 76, 0, 23) },
  { pnode(GPIO, 76, 0, BSLIPMAX, 0, -1), rnode(GIN, 76, 0, 10) },
  { pnode(GPIO, 76, 0, CEIN, 0, -1), rnode(GOUT, 76, 0, 31) },
  { pnode(GPIO, 76, 0, CEOUT, 0, -1), rnode(GOUT, 76, 0, 37) },
  { pnode(GPIO, 76, 0, ACLR, 0, -1), rnode(GOUT, 76, 0, 36) },
  { pnode(GPIO, 76, 0, SCLR, 0, -1), rnode(GOUT, 77, 0, 18) },
  { pnode(GPIO, 76, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 76, 0, 10) },
  { pnode(GPIO, 76, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 76, 0, 8) },
  { pnode(GPIO, 76, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 76, 0, 14) },
  { pnode(GPIO, 76, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 76, 0, 12) },
  { pnode(GPIO, 76, 0, DATAOUT, 1, 0), rnode(GIN, 76, 0, 5) },
  { pnode(GPIO, 76, 0, DATAOUT, 1, 1), rnode(GIN, 76, 0, 6) },
  { pnode(GPIO, 76, 0, DATAOUT, 1, 2), rnode(GIN, 76, 0, 7) },
  { pnode(GPIO, 76, 0, DATAOUT, 1, 3), rnode(GIN, 76, 0, 8) },
  { pnode(GPIO, 76, 0, DATAOUT, 1, 4), rnode(GIN, 76, 0, 9) },
  { pnode(GPIO, 76, 0, BSLIPMAX, 1, -1), rnode(GIN, 76, 0, 4) },
  { pnode(GPIO, 76, 0, CEIN, 1, -1), rnode(GOUT, 76, 0, 13) },
  { pnode(GPIO, 76, 0, CEOUT, 1, -1), rnode(GOUT, 76, 0, 19) },
  { pnode(GPIO, 76, 0, ACLR, 1, -1), rnode(GOUT, 76, 0, 20) },
  { pnode(GPIO, 76, 0, SCLR, 1, -1), rnode(GOUT, 76, 0, 27) },
  { pnode(GPIO, 76, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 76, 0, 11) },
  { pnode(GPIO, 76, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 76, 0, 9) },
  { pnode(GPIO, 76, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 76, 0, 15) },
  { pnode(GPIO, 76, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 76, 0, 13) },
  { pnode(GPIO, 76, 0, DATAIN, 2, 0), rnode(GOUT, 76, 0, 9) },
  { pnode(GPIO, 76, 0, DATAIN, 2, 1), rnode(GOUT, 76, 0, 11) },
  { pnode(GPIO, 76, 0, DATAIN, 2, 2), rnode(GOUT, 76, 0, 6) },
  { pnode(GPIO, 76, 0, DATAIN, 2, 3), rnode(GOUT, 76, 0, 7) },
  { pnode(GPIO, 76, 0, DATAOUT, 2, 0), rnode(GIN, 75, 0, 14) },
  { pnode(GPIO, 76, 0, DATAOUT, 2, 1), rnode(GIN, 76, 0, 0) },
  { pnode(GPIO, 76, 0, DATAOUT, 2, 2), rnode(GIN, 76, 0, 1) },
  { pnode(GPIO, 76, 0, DATAOUT, 2, 3), rnode(GIN, 76, 0, 2) },
  { pnode(GPIO, 76, 0, DATAOUT, 2, 4), rnode(GIN, 76, 0, 3) },
  { pnode(GPIO, 76, 0, OEIN, 2, 0), rnode(GOUT, 76, 0, 5) },
  { pnode(GPIO, 76, 0, OEIN, 2, 1), rnode(GOUT, 76, 0, 4) },
  { pnode(GPIO, 76, 0, BSLIPMAX, 2, -1), rnode(GIN, 75, 0, 15) },
  { pnode(GPIO, 76, 0, CEIN, 2, -1), rnode(GOUT, 75, 0, 34) },
  { pnode(GPIO, 76, 0, CEOUT, 2, -1), rnode(GOUT, 75, 0, 31) },
  { pnode(GPIO, 76, 0, ACLR, 2, -1), rnode(GOUT, 75, 0, 32) },
  { pnode(GPIO, 76, 0, SCLR, 2, -1), rnode(GOUT, 76, 0, 2) },
  { pnode(GPIO, 76, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 76, 0, 5) },
  { pnode(GPIO, 76, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 76, 0, 7) },
  { pnode(GPIO, 76, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 76, 0, 1) },
  { pnode(GPIO, 76, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 76, 0, 3) },
  { pnode(GPIO, 76, 0, DATAOUT, 3, 4), rnode(GIN, 75, 0, 16) },
  { pnode(GPIO, 76, 0, BSLIPMAX, 3, -1), rnode(GIN, 75, 0, 25) },
  { pnode(GPIO, 76, 0, CEIN, 3, -1), rnode(GOUT, 75, 0, 1) },
  { pnode(GPIO, 76, 0, CEOUT, 3, -1), rnode(GOUT, 75, 0, 12) },
  { pnode(GPIO, 76, 0, ACLR, 3, -1), rnode(GOUT, 75, 0, 18) },
  { pnode(GPIO, 76, 0, SCLR, 3, -1), rnode(GOUT, 75, 0, 38) },
  { pnode(GPIO, 76, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 76, 0, 4) },
  { pnode(GPIO, 76, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 76, 0, 6) },
  { pnode(GPIO, 76, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 76, 0, 0) },
  { pnode(GPIO, 76, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 76, 0, 2) },
  { pnode(GPIO, 78, 0, DATAOUT, 0, 4), rnode(GIN, 78, 0, 22) },
  { pnode(GPIO, 78, 0, BSLIPMAX, 0, -1), rnode(GIN, 78, 0, 11) },
  { pnode(GPIO, 78, 0, CEIN, 0, -1), rnode(GOUT, 78, 0, 23) },
  { pnode(GPIO, 78, 0, CEOUT, 0, -1), rnode(GOUT, 78, 0, 50) },
  { pnode(GPIO, 78, 0, ACLR, 0, -1), rnode(GOUT, 78, 0, 48) },
  { pnode(GPIO, 78, 0, SCLR, 0, -1), rnode(GOUT, 78, 0, 32) },
  { pnode(GPIO, 78, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 78, 0, 10) },
  { pnode(GPIO, 78, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 78, 0, 8) },
  { pnode(GPIO, 78, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 78, 0, 14) },
  { pnode(GPIO, 78, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 78, 0, 12) },
  { pnode(GPIO, 78, 0, DATAOUT, 1, 4), rnode(GIN, 78, 0, 10) },
  { pnode(GPIO, 78, 0, BSLIPMAX, 1, -1), rnode(GIN, 78, 0, 3) },
  { pnode(GPIO, 78, 0, CEIN, 1, -1), rnode(GOUT, 77, 0, 26) },
  { pnode(GPIO, 78, 0, CEOUT, 1, -1), rnode(GOUT, 78, 0, 9) },
  { pnode(GPIO, 78, 0, ACLR, 1, -1), rnode(GOUT, 78, 0, 6) },
  { pnode(GPIO, 78, 0, SCLR, 1, -1), rnode(GOUT, 78, 0, 15) },
  { pnode(GPIO, 78, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 78, 0, 11) },
  { pnode(GPIO, 78, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 78, 0, 9) },
  { pnode(GPIO, 78, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 78, 0, 15) },
  { pnode(GPIO, 78, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 78, 0, 13) },
  { pnode(GPIO, 78, 0, DATAOUT, 2, 4), rnode(GIN, 78, 0, 2) },
  { pnode(GPIO, 78, 0, BSLIPMAX, 2, -1), rnode(GIN, 77, 0, 16) },
  { pnode(GPIO, 78, 0, CEIN, 2, -1), rnode(GOUT, 77, 0, 47) },
  { pnode(GPIO, 78, 0, CEOUT, 2, -1), rnode(GOUT, 77, 0, 46) },
  { pnode(GPIO, 78, 0, ACLR, 2, -1), rnode(GOUT, 77, 0, 45) },
  { pnode(GPIO, 78, 0, SCLR, 2, -1), rnode(GOUT, 77, 0, 37) },
  { pnode(GPIO, 78, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 78, 0, 5) },
  { pnode(GPIO, 78, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 78, 0, 7) },
  { pnode(GPIO, 78, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 78, 0, 1) },
  { pnode(GPIO, 78, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 78, 0, 3) },
  { pnode(GPIO, 78, 0, DATAIN, 3, 0), rnode(GOUT, 77, 0, 20) },
  { pnode(GPIO, 78, 0, DATAIN, 3, 1), rnode(GOUT, 77, 0, 16) },
  { pnode(GPIO, 78, 0, DATAIN, 3, 2), rnode(GOUT, 77, 0, 21) },
  { pnode(GPIO, 78, 0, DATAIN, 3, 3), rnode(GOUT, 77, 0, 22) },
  { pnode(GPIO, 78, 0, DATAOUT, 3, 0), rnode(GIN, 77, 0, 10) },
  { pnode(GPIO, 78, 0, DATAOUT, 3, 1), rnode(GIN, 77, 0, 12) },
  { pnode(GPIO, 78, 0, DATAOUT, 3, 2), rnode(GIN, 77, 0, 24) },
  { pnode(GPIO, 78, 0, DATAOUT, 3, 3), rnode(GIN, 77, 0, 21) },
  { pnode(GPIO, 78, 0, DATAOUT, 3, 4), rnode(GIN, 77, 0, 19) },
  { pnode(GPIO, 78, 0, OEIN, 3, 0), rnode(GOUT, 77, 0, 24) },
  { pnode(GPIO, 78, 0, OEIN, 3, 1), rnode(GOUT, 77, 0, 50) },
  { pnode(GPIO, 78, 0, BSLIPMAX, 3, -1), rnode(GIN, 76, 0, 15) },
  { pnode(GPIO, 78, 0, CEIN, 3, -1), rnode(GOUT, 77, 0, 14) },
  { pnode(GPIO, 78, 0, CEOUT, 3, -1), rnode(GOUT, 77, 0, 19) },
  { pnode(GPIO, 78, 0, ACLR, 3, -1), rnode(GOUT, 77, 0, 15) },
  { pnode(GPIO, 78, 0, SCLR, 3, -1), rnode(GOUT, 77, 0, 49) },
  { pnode(GPIO, 78, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 78, 0, 4) },
  { pnode(GPIO, 78, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 78, 0, 6) },
  { pnode(GPIO, 78, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 78, 0, 0) },
  { pnode(GPIO, 78, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 78, 0, 2) },
  { pnode(GPIO, 80, 0, DATAIN, 0, 0), rnode(GOUT, 80, 0, 12) },
  { pnode(GPIO, 80, 0, DATAIN, 0, 1), rnode(GOUT, 80, 0, 17) },
  { pnode(GPIO, 80, 0, DATAIN, 0, 2), rnode(GOUT, 80, 0, 13) },
  { pnode(GPIO, 80, 0, DATAIN, 0, 3), rnode(GOUT, 80, 0, 18) },
  { pnode(GPIO, 80, 0, DATAOUT, 0, 0), rnode(GIN, 80, 0, 7) },
  { pnode(GPIO, 80, 0, DATAOUT, 0, 1), rnode(GIN, 80, 0, 9) },
  { pnode(GPIO, 80, 0, DATAOUT, 0, 2), rnode(GIN, 80, 0, 10) },
  { pnode(GPIO, 80, 0, DATAOUT, 0, 3), rnode(GIN, 80, 0, 12) },
  { pnode(GPIO, 80, 0, DATAOUT, 0, 4), rnode(GIN, 80, 0, 24) },
  { pnode(GPIO, 80, 0, OEIN, 0, 0), rnode(GOUT, 80, 0, 19) },
  { pnode(GPIO, 80, 0, OEIN, 0, 1), rnode(GOUT, 80, 0, 15) },
  { pnode(GPIO, 80, 0, BSLIPMAX, 0, -1), rnode(GIN, 80, 0, 3) },
  { pnode(GPIO, 80, 0, CEIN, 0, -1), rnode(GOUT, 80, 0, 7) },
  { pnode(GPIO, 80, 0, CEOUT, 0, -1), rnode(GOUT, 80, 0, 5) },
  { pnode(GPIO, 80, 0, ACLR, 0, -1), rnode(GOUT, 80, 0, 3) },
  { pnode(GPIO, 80, 0, SCLR, 0, -1), rnode(GOUT, 80, 0, 20) },
  { pnode(GPIO, 80, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 80, 0, 10) },
  { pnode(GPIO, 80, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 80, 0, 8) },
  { pnode(GPIO, 80, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 80, 0, 14) },
  { pnode(GPIO, 80, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 80, 0, 12) },
  { pnode(GPIO, 80, 0, DATAIN, 1, 0), rnode(GOUT, 79, 0, 31) },
  { pnode(GPIO, 80, 0, DATAIN, 1, 1), rnode(GOUT, 79, 0, 33) },
  { pnode(GPIO, 80, 0, DATAIN, 1, 2), rnode(GOUT, 79, 0, 32) },
  { pnode(GPIO, 80, 0, DATAIN, 1, 3), rnode(GOUT, 79, 0, 37) },
  { pnode(GPIO, 80, 0, DATAOUT, 1, 0), rnode(GIN, 79, 0, 15) },
  { pnode(GPIO, 80, 0, DATAOUT, 1, 1), rnode(GIN, 79, 0, 14) },
  { pnode(GPIO, 80, 0, DATAOUT, 1, 2), rnode(GIN, 79, 0, 13) },
  { pnode(GPIO, 80, 0, DATAOUT, 1, 3), rnode(GIN, 80, 0, 0) },
  { pnode(GPIO, 80, 0, DATAOUT, 1, 4), rnode(GIN, 80, 0, 1) },
  { pnode(GPIO, 80, 0, OEIN, 1, 0), rnode(GOUT, 79, 0, 36) },
  { pnode(GPIO, 80, 0, OEIN, 1, 1), rnode(GOUT, 80, 0, 0) },
  { pnode(GPIO, 80, 0, BSLIPMAX, 1, -1), rnode(GIN, 79, 0, 18) },
  { pnode(GPIO, 80, 0, CEIN, 1, -1), rnode(GOUT, 79, 0, 43) },
  { pnode(GPIO, 80, 0, CEOUT, 1, -1), rnode(GOUT, 79, 0, 38) },
  { pnode(GPIO, 80, 0, ACLR, 1, -1), rnode(GOUT, 79, 0, 28) },
  { pnode(GPIO, 80, 0, SCLR, 1, -1), rnode(GOUT, 80, 0, 11) },
  { pnode(GPIO, 80, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 80, 0, 11) },
  { pnode(GPIO, 80, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 80, 0, 9) },
  { pnode(GPIO, 80, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 80, 0, 15) },
  { pnode(GPIO, 80, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 80, 0, 13) },
  { pnode(GPIO, 80, 0, DATAOUT, 2, 0), rnode(GIN, 79, 0, 6) },
  { pnode(GPIO, 80, 0, DATAOUT, 2, 1), rnode(GIN, 79, 0, 7) },
  { pnode(GPIO, 80, 0, DATAOUT, 2, 2), rnode(GIN, 79, 0, 9) },
  { pnode(GPIO, 80, 0, DATAOUT, 2, 3), rnode(GIN, 79, 0, 12) },
  { pnode(GPIO, 80, 0, DATAOUT, 2, 4), rnode(GIN, 79, 0, 24) },
  { pnode(GPIO, 80, 0, OEIN, 2, 0), rnode(GOUT, 79, 0, 41) },
  { pnode(GPIO, 80, 0, OEIN, 2, 1), rnode(GOUT, 79, 0, 45) },
  { pnode(GPIO, 80, 0, BSLIPMAX, 2, -1), rnode(GIN, 79, 0, 3) },
  { pnode(GPIO, 80, 0, CEIN, 2, -1), rnode(GOUT, 79, 0, 22) },
  { pnode(GPIO, 80, 0, CEOUT, 2, -1), rnode(GOUT, 79, 0, 23) },
  { pnode(GPIO, 80, 0, ACLR, 2, -1), rnode(GOUT, 79, 0, 24) },
  { pnode(GPIO, 80, 0, SCLR, 2, -1), rnode(GOUT, 79, 0, 44) },
  { pnode(GPIO, 80, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 80, 0, 5) },
  { pnode(GPIO, 80, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 80, 0, 7) },
  { pnode(GPIO, 80, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 80, 0, 1) },
  { pnode(GPIO, 80, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 80, 0, 3) },
  { pnode(GPIO, 80, 0, DATAOUT, 3, 4), rnode(GIN, 78, 0, 15) },
  { pnode(GPIO, 80, 0, BSLIPMAX, 3, -1), rnode(GIN, 78, 0, 21) },
  { pnode(GPIO, 80, 0, CEIN, 3, -1), rnode(GOUT, 78, 0, 36) },
  { pnode(GPIO, 80, 0, CEOUT, 3, -1), rnode(GOUT, 79, 0, 10) },
  { pnode(GPIO, 80, 0, ACLR, 3, -1), rnode(GOUT, 79, 0, 6) },
  { pnode(GPIO, 80, 0, SCLR, 3, -1), rnode(GOUT, 79, 0, 21) },
  { pnode(GPIO, 80, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 80, 0, 4) },
  { pnode(GPIO, 80, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 80, 0, 6) },
  { pnode(GPIO, 80, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 80, 0, 0) },
  { pnode(GPIO, 80, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 80, 0, 2) },
  { pnode(GPIO, 82, 0, DATAOUT, 0, 4), rnode(GIN, 82, 0, 12) },
  { pnode(GPIO, 82, 0, BSLIPMAX, 0, -1), rnode(GIN, 82, 0, 0) },
  { pnode(GPIO, 82, 0, CEIN, 0, -1), rnode(GOUT, 82, 0, 9) },
  { pnode(GPIO, 82, 0, CEOUT, 0, -1), rnode(GOUT, 82, 0, 11) },
  { pnode(GPIO, 82, 0, ACLR, 0, -1), rnode(GOUT, 82, 0, 6) },
  { pnode(GPIO, 82, 0, SCLR, 0, -1), rnode(GOUT, 82, 0, 32) },
  { pnode(GPIO, 82, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 82, 0, 10) },
  { pnode(GPIO, 82, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 82, 0, 8) },
  { pnode(GPIO, 82, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 82, 0, 14) },
  { pnode(GPIO, 82, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 82, 0, 12) },
  { pnode(GPIO, 82, 0, DATAOUT, 1, 4), rnode(GIN, 81, 0, 13) },
  { pnode(GPIO, 82, 0, BSLIPMAX, 1, -1), rnode(GIN, 81, 0, 12) },
  { pnode(GPIO, 82, 0, CEIN, 1, -1), rnode(GOUT, 81, 0, 25) },
  { pnode(GPIO, 82, 0, CEOUT, 1, -1), rnode(GOUT, 81, 0, 38) },
  { pnode(GPIO, 82, 0, ACLR, 1, -1), rnode(GOUT, 81, 0, 33) },
  { pnode(GPIO, 82, 0, SCLR, 1, -1), rnode(GOUT, 82, 0, 10) },
  { pnode(GPIO, 82, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 82, 0, 11) },
  { pnode(GPIO, 82, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 82, 0, 9) },
  { pnode(GPIO, 82, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 82, 0, 15) },
  { pnode(GPIO, 82, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 82, 0, 13) },
  { pnode(GPIO, 82, 0, DATAOUT, 2, 4), rnode(GIN, 81, 0, 3) },
  { pnode(GPIO, 82, 0, BSLIPMAX, 2, -1), rnode(GIN, 80, 0, 15) },
  { pnode(GPIO, 82, 0, CEIN, 2, -1), rnode(GOUT, 80, 0, 35) },
  { pnode(GPIO, 82, 0, CEOUT, 2, -1), rnode(GOUT, 80, 0, 36) },
  { pnode(GPIO, 82, 0, ACLR, 2, -1), rnode(GOUT, 80, 0, 26) },
  { pnode(GPIO, 82, 0, SCLR, 2, -1), rnode(GOUT, 81, 0, 5) },
  { pnode(GPIO, 82, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 82, 0, 5) },
  { pnode(GPIO, 82, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 82, 0, 7) },
  { pnode(GPIO, 82, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 82, 0, 1) },
  { pnode(GPIO, 82, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 82, 0, 3) },
  { pnode(GPIO, 82, 0, DATAIN, 3, 0), rnode(GOUT, 80, 0, 25) },
  { pnode(GPIO, 82, 0, DATAIN, 3, 1), rnode(GOUT, 80, 0, 49) },
  { pnode(GPIO, 82, 0, DATAIN, 3, 2), rnode(GOUT, 80, 0, 28) },
  { pnode(GPIO, 82, 0, DATAIN, 3, 3), rnode(GOUT, 80, 0, 31) },
  { pnode(GPIO, 82, 0, DATAOUT, 3, 0), rnode(GIN, 80, 0, 22) },
  { pnode(GPIO, 82, 0, DATAOUT, 3, 1), rnode(GIN, 80, 0, 21) },
  { pnode(GPIO, 82, 0, DATAOUT, 3, 2), rnode(GIN, 80, 0, 20) },
  { pnode(GPIO, 82, 0, DATAOUT, 3, 3), rnode(GIN, 80, 0, 19) },
  { pnode(GPIO, 82, 0, DATAOUT, 3, 4), rnode(GIN, 80, 0, 18) },
  { pnode(GPIO, 82, 0, OEIN, 3, 0), rnode(GOUT, 80, 0, 33) },
  { pnode(GPIO, 82, 0, OEIN, 3, 1), rnode(GOUT, 80, 0, 32) },
  { pnode(GPIO, 82, 0, BSLIPMAX, 3, -1), rnode(GIN, 80, 0, 23) },
  { pnode(GPIO, 82, 0, CEIN, 3, -1), rnode(GOUT, 80, 0, 16) },
  { pnode(GPIO, 82, 0, CEOUT, 3, -1), rnode(GOUT, 80, 0, 21) },
  { pnode(GPIO, 82, 0, ACLR, 3, -1), rnode(GOUT, 80, 0, 22) },
  { pnode(GPIO, 82, 0, SCLR, 3, -1), rnode(GOUT, 80, 0, 37) },
  { pnode(GPIO, 82, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 82, 0, 4) },
  { pnode(GPIO, 82, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 82, 0, 6) },
  { pnode(GPIO, 82, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 82, 0, 0) },
  { pnode(GPIO, 82, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 82, 0, 2) },
  { pnode(GPIO, 84, 0, DATAOUT, 0, 0), rnode(GIN, 84, 0, 25) },
  { pnode(GPIO, 84, 0, DATAOUT, 0, 1), rnode(GIN, 84, 0, 24) },
  { pnode(GPIO, 84, 0, DATAOUT, 0, 2), rnode(GIN, 84, 0, 23) },
  { pnode(GPIO, 84, 0, DATAOUT, 0, 3), rnode(GIN, 84, 0, 22) },
  { pnode(GPIO, 84, 0, DATAOUT, 0, 4), rnode(GIN, 84, 0, 21) },
  { pnode(GPIO, 84, 0, BSLIPMAX, 0, -1), rnode(GIN, 84, 0, 12) },
  { pnode(GPIO, 84, 0, CEIN, 0, -1), rnode(GOUT, 84, 0, 22) },
  { pnode(GPIO, 84, 0, CEOUT, 0, -1), rnode(GOUT, 84, 0, 23) },
  { pnode(GPIO, 84, 0, ACLR, 0, -1), rnode(GOUT, 84, 0, 24) },
  { pnode(GPIO, 84, 0, SCLR, 0, -1), rnode(GOUT, 84, 0, 36) },
  { pnode(GPIO, 84, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 84, 0, 10) },
  { pnode(GPIO, 84, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 84, 0, 8) },
  { pnode(GPIO, 84, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 84, 0, 14) },
  { pnode(GPIO, 84, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 84, 0, 12) },
  { pnode(GPIO, 84, 0, DATAOUT, 1, 0), rnode(GIN, 84, 0, 0) },
  { pnode(GPIO, 84, 0, DATAOUT, 1, 1), rnode(GIN, 84, 0, 1) },
  { pnode(GPIO, 84, 0, DATAOUT, 1, 2), rnode(GIN, 84, 0, 2) },
  { pnode(GPIO, 84, 0, DATAOUT, 1, 3), rnode(GIN, 84, 0, 3) },
  { pnode(GPIO, 84, 0, DATAOUT, 1, 4), rnode(GIN, 84, 0, 4) },
  { pnode(GPIO, 84, 0, BSLIPMAX, 1, -1), rnode(GIN, 83, 0, 13) },
  { pnode(GPIO, 84, 0, CEIN, 1, -1), rnode(GOUT, 83, 0, 36) },
  { pnode(GPIO, 84, 0, CEOUT, 1, -1), rnode(GOUT, 83, 0, 26) },
  { pnode(GPIO, 84, 0, ACLR, 1, -1), rnode(GOUT, 84, 0, 0) },
  { pnode(GPIO, 84, 0, SCLR, 1, -1), rnode(GOUT, 84, 0, 3) },
  { pnode(GPIO, 84, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 84, 0, 11) },
  { pnode(GPIO, 84, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 84, 0, 9) },
  { pnode(GPIO, 84, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 84, 0, 15) },
  { pnode(GPIO, 84, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 84, 0, 13) },
  { pnode(GPIO, 84, 0, DATAIN, 2, 0), rnode(GOUT, 83, 0, 27) },
  { pnode(GPIO, 84, 0, DATAIN, 2, 1), rnode(GOUT, 83, 0, 28) },
  { pnode(GPIO, 84, 0, DATAIN, 2, 2), rnode(GOUT, 83, 0, 34) },
  { pnode(GPIO, 84, 0, DATAIN, 2, 3), rnode(GOUT, 83, 0, 29) },
  { pnode(GPIO, 84, 0, DATAOUT, 2, 0), rnode(GIN, 83, 0, 25) },
  { pnode(GPIO, 84, 0, DATAOUT, 2, 1), rnode(GIN, 83, 0, 23) },
  { pnode(GPIO, 84, 0, DATAOUT, 2, 2), rnode(GIN, 83, 0, 22) },
  { pnode(GPIO, 84, 0, DATAOUT, 2, 3), rnode(GIN, 83, 0, 21) },
  { pnode(GPIO, 84, 0, DATAOUT, 2, 4), rnode(GIN, 83, 0, 20) },
  { pnode(GPIO, 84, 0, OEIN, 2, 0), rnode(GOUT, 83, 0, 30) },
  { pnode(GPIO, 84, 0, OEIN, 2, 1), rnode(GOUT, 83, 0, 31) },
  { pnode(GPIO, 84, 0, BSLIPMAX, 2, -1), rnode(GIN, 83, 0, 12) },
  { pnode(GPIO, 84, 0, CEIN, 2, -1), rnode(GOUT, 83, 0, 2) },
  { pnode(GPIO, 84, 0, CEOUT, 2, -1), rnode(GOUT, 83, 0, 12) },
  { pnode(GPIO, 84, 0, ACLR, 2, -1), rnode(GOUT, 83, 0, 18) },
  { pnode(GPIO, 84, 0, SCLR, 2, -1), rnode(GOUT, 83, 0, 37) },
  { pnode(GPIO, 84, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 84, 0, 5) },
  { pnode(GPIO, 84, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 84, 0, 7) },
  { pnode(GPIO, 84, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 84, 0, 1) },
  { pnode(GPIO, 84, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 84, 0, 3) },
  { pnode(GPIO, 84, 0, DATAOUT, 3, 4), rnode(GIN, 83, 0, 1) },
  { pnode(GPIO, 84, 0, BSLIPMAX, 3, -1), rnode(GIN, 82, 0, 25) },
  { pnode(GPIO, 84, 0, CEIN, 3, -1), rnode(GOUT, 82, 0, 37) },
  { pnode(GPIO, 84, 0, CEOUT, 3, -1), rnode(GOUT, 82, 0, 35) },
  { pnode(GPIO, 84, 0, ACLR, 3, -1), rnode(GOUT, 82, 0, 36) },
  { pnode(GPIO, 84, 0, SCLR, 3, -1), rnode(GOUT, 83, 0, 3) },
  { pnode(GPIO, 84, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 84, 0, 4) },
  { pnode(GPIO, 84, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 84, 0, 6) },
  { pnode(GPIO, 84, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 84, 0, 0) },
  { pnode(GPIO, 84, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 84, 0, 2) },
  { pnode(GPIO, 86, 0, DATAOUT, 0, 4), rnode(GIN, 86, 0, 25) },
  { pnode(GPIO, 86, 0, BSLIPMAX, 0, -1), rnode(GIN, 86, 0, 8) },
  { pnode(GPIO, 86, 0, CEIN, 0, -1), rnode(GOUT, 86, 0, 20) },
  { pnode(GPIO, 86, 0, CEOUT, 0, -1), rnode(GOUT, 86, 0, 16) },
  { pnode(GPIO, 86, 0, ACLR, 0, -1), rnode(GOUT, 86, 0, 21) },
  { pnode(GPIO, 86, 0, SCLR, 0, -1), rnode(GOUT, 86, 0, 46) },
  { pnode(GPIO, 86, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 86, 0, 10) },
  { pnode(GPIO, 86, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 86, 0, 8) },
  { pnode(GPIO, 86, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 86, 0, 14) },
  { pnode(GPIO, 86, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 86, 0, 12) },
  { pnode(GPIO, 86, 0, DATAOUT, 1, 4), rnode(GIN, 86, 0, 7) },
  { pnode(GPIO, 86, 0, BSLIPMAX, 1, -1), rnode(GIN, 86, 0, 0) },
  { pnode(GPIO, 86, 0, CEIN, 1, -1), rnode(GOUT, 86, 0, 4) },
  { pnode(GPIO, 86, 0, CEOUT, 1, -1), rnode(GOUT, 86, 0, 3) },
  { pnode(GPIO, 86, 0, ACLR, 1, -1), rnode(GOUT, 86, 0, 8) },
  { pnode(GPIO, 86, 0, SCLR, 1, -1), rnode(GOUT, 86, 0, 15) },
  { pnode(GPIO, 86, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 86, 0, 11) },
  { pnode(GPIO, 86, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 86, 0, 9) },
  { pnode(GPIO, 86, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 86, 0, 15) },
  { pnode(GPIO, 86, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 86, 0, 13) },
  { pnode(GPIO, 86, 0, DATAOUT, 2, 4), rnode(GIN, 85, 0, 13) },
  { pnode(GPIO, 86, 0, BSLIPMAX, 2, -1), rnode(GIN, 85, 0, 25) },
  { pnode(GPIO, 86, 0, CEIN, 2, -1), rnode(GOUT, 85, 0, 37) },
  { pnode(GPIO, 86, 0, CEOUT, 2, -1), rnode(GOUT, 85, 0, 35) },
  { pnode(GPIO, 86, 0, ACLR, 2, -1), rnode(GOUT, 85, 0, 36) },
  { pnode(GPIO, 86, 0, SCLR, 2, -1), rnode(GOUT, 86, 0, 5) },
  { pnode(GPIO, 86, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 86, 0, 5) },
  { pnode(GPIO, 86, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 86, 0, 7) },
  { pnode(GPIO, 86, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 86, 0, 1) },
  { pnode(GPIO, 86, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 86, 0, 3) },
  { pnode(GPIO, 86, 0, DATAIN, 3, 0), rnode(GOUT, 85, 0, 9) },
  { pnode(GPIO, 86, 0, DATAIN, 3, 1), rnode(GOUT, 85, 0, 11) },
  { pnode(GPIO, 86, 0, DATAIN, 3, 2), rnode(GOUT, 85, 0, 6) },
  { pnode(GPIO, 86, 0, DATAIN, 3, 3), rnode(GOUT, 85, 0, 1) },
  { pnode(GPIO, 86, 0, DATAOUT, 3, 0), rnode(GIN, 85, 0, 0) },
  { pnode(GPIO, 86, 0, DATAOUT, 3, 1), rnode(GIN, 85, 0, 1) },
  { pnode(GPIO, 86, 0, DATAOUT, 3, 2), rnode(GIN, 85, 0, 4) },
  { pnode(GPIO, 86, 0, DATAOUT, 3, 3), rnode(GIN, 85, 0, 8) },
  { pnode(GPIO, 86, 0, DATAOUT, 3, 4), rnode(GIN, 85, 0, 12) },
  { pnode(GPIO, 86, 0, OEIN, 3, 0), rnode(GOUT, 85, 0, 25) },
  { pnode(GPIO, 86, 0, OEIN, 3, 1), rnode(GOUT, 85, 0, 40) },
  { pnode(GPIO, 86, 0, BSLIPMAX, 3, -1), rnode(GIN, 84, 0, 13) },
  { pnode(GPIO, 86, 0, CEIN, 3, -1), rnode(GOUT, 84, 0, 26) },
  { pnode(GPIO, 86, 0, CEOUT, 3, -1), rnode(GOUT, 85, 0, 0) },
  { pnode(GPIO, 86, 0, ACLR, 3, -1), rnode(GOUT, 85, 0, 10) },
  { pnode(GPIO, 86, 0, SCLR, 3, -1), rnode(GOUT, 85, 0, 32) },
  { pnode(GPIO, 86, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 86, 0, 4) },
  { pnode(GPIO, 86, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 86, 0, 6) },
  { pnode(GPIO, 86, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 86, 0, 0) },
  { pnode(GPIO, 86, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 86, 0, 2) },
  { pnode(GPIO, 88, 0, DATAIN, 0, 0), rnode(GOUT, 88, 0, 0) },
  { pnode(GPIO, 88, 0, DATAIN, 0, 1), rnode(GOUT, 88, 0, 10) },
  { pnode(GPIO, 88, 0, DATAIN, 0, 2), rnode(GOUT, 88, 0, 9) },
  { pnode(GPIO, 88, 0, DATAIN, 0, 3), rnode(GOUT, 88, 0, 11) },
  { pnode(GPIO, 88, 0, DATAOUT, 0, 0), rnode(GIN, 87, 0, 15) },
  { pnode(GPIO, 88, 0, DATAOUT, 0, 1), rnode(GIN, 87, 0, 14) },
  { pnode(GPIO, 88, 0, DATAOUT, 0, 2), rnode(GIN, 87, 0, 13) },
  { pnode(GPIO, 88, 0, DATAOUT, 0, 3), rnode(GIN, 88, 0, 0) },
  { pnode(GPIO, 88, 0, DATAOUT, 0, 4), rnode(GIN, 88, 0, 1) },
  { pnode(GPIO, 88, 0, OEIN, 0, 0), rnode(GOUT, 88, 0, 7) },
  { pnode(GPIO, 88, 0, OEIN, 0, 1), rnode(GOUT, 88, 0, 5) },
  { pnode(GPIO, 88, 0, BSLIPMAX, 0, -1), rnode(GIN, 87, 0, 25) },
  { pnode(GPIO, 88, 0, CEIN, 0, -1), rnode(GOUT, 87, 0, 31) },
  { pnode(GPIO, 88, 0, CEOUT, 0, -1), rnode(GOUT, 87, 0, 33) },
  { pnode(GPIO, 88, 0, ACLR, 0, -1), rnode(GOUT, 87, 0, 37) },
  { pnode(GPIO, 88, 0, SCLR, 0, -1), rnode(GOUT, 88, 0, 4) },
  { pnode(GPIO, 88, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 88, 0, 10) },
  { pnode(GPIO, 88, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 88, 0, 8) },
  { pnode(GPIO, 88, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 88, 0, 14) },
  { pnode(GPIO, 88, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 88, 0, 12) },
  { pnode(GPIO, 88, 0, DATAIN, 1, 0), rnode(GOUT, 87, 0, 24) },
  { pnode(GPIO, 88, 0, DATAIN, 1, 1), rnode(GOUT, 87, 0, 25) },
  { pnode(GPIO, 88, 0, DATAIN, 1, 2), rnode(GOUT, 87, 0, 50) },
  { pnode(GPIO, 88, 0, DATAIN, 1, 3), rnode(GOUT, 87, 0, 49) },
  { pnode(GPIO, 88, 0, DATAOUT, 1, 0), rnode(GIN, 87, 0, 8) },
  { pnode(GPIO, 88, 0, DATAOUT, 1, 1), rnode(GIN, 87, 0, 9) },
  { pnode(GPIO, 88, 0, DATAOUT, 1, 2), rnode(GIN, 87, 0, 10) },
  { pnode(GPIO, 88, 0, DATAOUT, 1, 3), rnode(GIN, 87, 0, 11) },
  { pnode(GPIO, 88, 0, DATAOUT, 1, 4), rnode(GIN, 87, 0, 12) },
  { pnode(GPIO, 88, 0, OEIN, 1, 0), rnode(GOUT, 87, 0, 47) },
  { pnode(GPIO, 88, 0, OEIN, 1, 1), rnode(GOUT, 87, 0, 27) },
  { pnode(GPIO, 88, 0, BSLIPMAX, 1, -1), rnode(GIN, 87, 0, 0) },
  { pnode(GPIO, 88, 0, CEIN, 1, -1), rnode(GOUT, 87, 0, 3) },
  { pnode(GPIO, 88, 0, CEOUT, 1, -1), rnode(GOUT, 87, 0, 8) },
  { pnode(GPIO, 88, 0, ACLR, 1, -1), rnode(GOUT, 87, 0, 1) },
  { pnode(GPIO, 88, 0, SCLR, 1, -1), rnode(GOUT, 87, 0, 29) },
  { pnode(GPIO, 88, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 88, 0, 11) },
  { pnode(GPIO, 88, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 88, 0, 9) },
  { pnode(GPIO, 88, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 88, 0, 15) },
  { pnode(GPIO, 88, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 88, 0, 13) },
  { pnode(GPIO, 88, 0, DATAOUT, 2, 0), rnode(GIN, 86, 0, 17) },
  { pnode(GPIO, 88, 0, DATAOUT, 2, 1), rnode(GIN, 86, 0, 16) },
  { pnode(GPIO, 88, 0, DATAOUT, 2, 2), rnode(GIN, 86, 0, 15) },
  { pnode(GPIO, 88, 0, DATAOUT, 2, 3), rnode(GIN, 86, 0, 14) },
  { pnode(GPIO, 88, 0, DATAOUT, 2, 4), rnode(GIN, 86, 0, 13) },
  { pnode(GPIO, 88, 0, OEIN, 2, 0), rnode(GOUT, 87, 0, 11) },
  { pnode(GPIO, 88, 0, OEIN, 2, 1), rnode(GOUT, 87, 0, 6) },
  { pnode(GPIO, 88, 0, BSLIPMAX, 2, -1), rnode(GIN, 86, 0, 18) },
  { pnode(GPIO, 88, 0, CEIN, 2, -1), rnode(GOUT, 86, 0, 31) },
  { pnode(GPIO, 88, 0, CEOUT, 2, -1), rnode(GOUT, 86, 0, 33) },
  { pnode(GPIO, 88, 0, ACLR, 2, -1), rnode(GOUT, 86, 0, 32) },
  { pnode(GPIO, 88, 0, SCLR, 2, -1), rnode(GOUT, 87, 0, 5) },
  { pnode(GPIO, 88, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 88, 0, 5) },
  { pnode(GPIO, 88, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 88, 0, 7) },
  { pnode(GPIO, 88, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 88, 0, 1) },
  { pnode(GPIO, 88, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 88, 0, 3) },
  { pnode(GPIO, 88, 0, DATAOUT, 3, 4), rnode(GIN, 86, 0, 19) },
  { pnode(GPIO, 88, 0, BSLIPMAX, 3, -1), rnode(GIN, 86, 0, 24) },
  { pnode(GPIO, 88, 0, CEIN, 3, -1), rnode(GOUT, 86, 0, 45) },
  { pnode(GPIO, 88, 0, CEOUT, 3, -1), rnode(GOUT, 86, 0, 44) },
  { pnode(GPIO, 88, 0, ACLR, 3, -1), rnode(GOUT, 86, 0, 39) },
  { pnode(GPIO, 88, 0, SCLR, 3, -1), rnode(GOUT, 86, 0, 30) },
  { pnode(GPIO, 88, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 88, 0, 4) },
  { pnode(GPIO, 88, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 88, 0, 6) },
  { pnode(GPIO, 88, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 88, 0, 0) },
  { pnode(GPIO, 88, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 88, 0, 2) },
  { pnode(GPIO, 89, 4, DATAIN, 0, 0), rnode(GOUT, 89, 4, 49) },
  { pnode(GPIO, 89, 4, DATAIN, 0, 1), rnode(GOUT, 89, 4, 50) },
  { pnode(GPIO, 89, 4, DATAIN, 0, 2), rnode(GOUT, 89, 4, 51) },
  { pnode(GPIO, 89, 4, DATAIN, 0, 3), rnode(GOUT, 89, 4, 52) },
  { pnode(GPIO, 89, 4, DATAOUT, 0, 0), rnode(GIN, 89, 4, 48) },
  { pnode(GPIO, 89, 4, DATAOUT, 0, 1), rnode(GIN, 89, 4, 49) },
  { pnode(GPIO, 89, 4, DATAOUT, 0, 2), rnode(GIN, 89, 4, 50) },
  { pnode(GPIO, 89, 4, DATAOUT, 0, 3), rnode(GIN, 89, 4, 51) },
  { pnode(GPIO, 89, 4, DATAOUT, 0, 4), rnode(GIN, 89, 4, 52) },
  { pnode(GPIO, 89, 4, OEIN, 0, 0), rnode(GOUT, 89, 4, 53) },
  { pnode(GPIO, 89, 4, OEIN, 0, 1), rnode(GOUT, 89, 4, 54) },
  { pnode(GPIO, 89, 4, BSLIPMAX, 0, -1), rnode(GIN, 89, 4, 47) },
  { pnode(GPIO, 89, 4, CEIN, 0, -1), rnode(GOUT, 89, 4, 46) },
  { pnode(GPIO, 89, 4, CEOUT, 0, -1), rnode(GOUT, 89, 4, 47) },
  { pnode(GPIO, 89, 4, ACLR, 0, -1), rnode(GOUT, 89, 4, 48) },
  { pnode(GPIO, 89, 4, SCLR, 0, -1), rnode(GOUT, 89, 4, 55) },
  { pnode(GPIO, 89, 4, CLKIN_IN, 0, 0), rnode(DCMUX, 89, 4, 14) },
  { pnode(GPIO, 89, 4, CLKIN_IN, 0, 1), rnode(DCMUX, 89, 4, 15) },
  { pnode(GPIO, 89, 4, CLKIN_OUT, 0, 0), rnode(DCMUX, 89, 4, 12) },
  { pnode(GPIO, 89, 4, CLKIN_OUT, 0, 1), rnode(DCMUX, 89, 4, 13) },
  { pnode(GPIO, 89, 4, DATAIN, 1, 0), rnode(GOUT, 89, 4, 39) },
  { pnode(GPIO, 89, 4, DATAIN, 1, 1), rnode(GOUT, 89, 4, 40) },
  { pnode(GPIO, 89, 4, DATAIN, 1, 2), rnode(GOUT, 89, 4, 41) },
  { pnode(GPIO, 89, 4, DATAIN, 1, 3), rnode(GOUT, 89, 4, 42) },
  { pnode(GPIO, 89, 4, DATAOUT, 1, 0), rnode(GIN, 89, 4, 42) },
  { pnode(GPIO, 89, 4, DATAOUT, 1, 1), rnode(GIN, 89, 4, 43) },
  { pnode(GPIO, 89, 4, DATAOUT, 1, 2), rnode(GIN, 89, 4, 44) },
  { pnode(GPIO, 89, 4, DATAOUT, 1, 3), rnode(GIN, 89, 4, 45) },
  { pnode(GPIO, 89, 4, DATAOUT, 1, 4), rnode(GIN, 89, 4, 46) },
  { pnode(GPIO, 89, 4, OEIN, 1, 0), rnode(GOUT, 89, 4, 43) },
  { pnode(GPIO, 89, 4, OEIN, 1, 1), rnode(GOUT, 89, 4, 44) },
  { pnode(GPIO, 89, 4, BSLIPMAX, 1, -1), rnode(GIN, 89, 4, 41) },
  { pnode(GPIO, 89, 4, CEIN, 1, -1), rnode(GOUT, 89, 4, 36) },
  { pnode(GPIO, 89, 4, CEOUT, 1, -1), rnode(GOUT, 89, 4, 37) },
  { pnode(GPIO, 89, 4, ACLR, 1, -1), rnode(GOUT, 89, 4, 38) },
  { pnode(GPIO, 89, 4, SCLR, 1, -1), rnode(GOUT, 89, 4, 45) },
  { pnode(GPIO, 89, 4, CLKIN_IN, 1, 0), rnode(DCMUX, 89, 4, 10) },
  { pnode(GPIO, 89, 4, CLKIN_IN, 1, 1), rnode(DCMUX, 89, 4, 11) },
  { pnode(GPIO, 89, 4, CLKIN_OUT, 1, 0), rnode(DCMUX, 89, 4, 8) },
  { pnode(GPIO, 89, 4, CLKIN_OUT, 1, 1), rnode(DCMUX, 89, 4, 9) },
  { pnode(GPIO, 89, 4, DATAIN, 2, 0), rnode(GOUT, 89, 4, 29) },
  { pnode(GPIO, 89, 4, DATAIN, 2, 1), rnode(GOUT, 89, 4, 30) },
  { pnode(GPIO, 89, 4, DATAIN, 2, 2), rnode(GOUT, 89, 4, 32) },
  { pnode(GPIO, 89, 4, DATAIN, 2, 3), rnode(GOUT, 89, 4, 33) },
  { pnode(GPIO, 89, 4, DATAOUT, 2, 0), rnode(GIN, 89, 4, 36) },
  { pnode(GPIO, 89, 4, DATAOUT, 2, 1), rnode(GIN, 89, 4, 37) },
  { pnode(GPIO, 89, 4, DATAOUT, 2, 2), rnode(GIN, 89, 4, 40) },
  { pnode(GPIO, 89, 4, DATAOUT, 2, 3), rnode(GIN, 89, 4, 38) },
  { pnode(GPIO, 89, 4, DATAOUT, 2, 4), rnode(GIN, 89, 4, 39) },
  { pnode(GPIO, 89, 4, OEIN, 2, 0), rnode(GOUT, 89, 4, 34) },
  { pnode(GPIO, 89, 4, OEIN, 2, 1), rnode(GOUT, 89, 4, 35) },
  { pnode(GPIO, 89, 4, BSLIPMAX, 2, -1), rnode(GIN, 89, 4, 35) },
  { pnode(GPIO, 89, 4, CEIN, 2, -1), rnode(GOUT, 89, 4, 26) },
  { pnode(GPIO, 89, 4, CEOUT, 2, -1), rnode(GOUT, 89, 4, 27) },
  { pnode(GPIO, 89, 4, ACLR, 2, -1), rnode(GOUT, 89, 4, 28) },
  { pnode(GPIO, 89, 4, SCLR, 2, -1), rnode(GOUT, 89, 4, 31) },
  { pnode(GPIO, 89, 4, CLKIN_IN, 2, 0), rnode(DCMUX, 89, 4, 6) },
  { pnode(GPIO, 89, 4, CLKIN_IN, 2, 1), rnode(DCMUX, 89, 4, 7) },
  { pnode(GPIO, 89, 4, CLKIN_OUT, 2, 0), rnode(DCMUX, 89, 4, 4) },
  { pnode(GPIO, 89, 4, CLKIN_OUT, 2, 1), rnode(DCMUX, 89, 4, 5) },
  { pnode(GPIO, 89, 4, DATAIN, 3, 0), rnode(GOUT, 89, 4, 19) },
  { pnode(GPIO, 89, 4, DATAIN, 3, 1), rnode(GOUT, 89, 4, 20) },
  { pnode(GPIO, 89, 4, DATAIN, 3, 2), rnode(GOUT, 89, 4, 21) },
  { pnode(GPIO, 89, 4, DATAIN, 3, 3), rnode(GOUT, 89, 4, 22) },
  { pnode(GPIO, 89, 4, DATAOUT, 3, 0), rnode(GIN, 89, 4, 30) },
  { pnode(GPIO, 89, 4, DATAOUT, 3, 1), rnode(GIN, 89, 4, 31) },
  { pnode(GPIO, 89, 4, DATAOUT, 3, 2), rnode(GIN, 89, 4, 32) },
  { pnode(GPIO, 89, 4, DATAOUT, 3, 3), rnode(GIN, 89, 4, 33) },
  { pnode(GPIO, 89, 4, DATAOUT, 3, 4), rnode(GIN, 89, 4, 34) },
  { pnode(GPIO, 89, 4, OEIN, 3, 0), rnode(GOUT, 89, 4, 23) },
  { pnode(GPIO, 89, 4, OEIN, 3, 1), rnode(GOUT, 89, 4, 24) },
  { pnode(GPIO, 89, 4, BSLIPMAX, 3, -1), rnode(GIN, 89, 4, 29) },
  { pnode(GPIO, 89, 4, CEIN, 3, -1), rnode(GOUT, 89, 4, 16) },
  { pnode(GPIO, 89, 4, CEOUT, 3, -1), rnode(GOUT, 89, 4, 17) },
  { pnode(GPIO, 89, 4, ACLR, 3, -1), rnode(GOUT, 89, 4, 18) },
  { pnode(GPIO, 89, 4, SCLR, 3, -1), rnode(GOUT, 89, 4, 25) },
  { pnode(GPIO, 89, 4, CLKIN_IN, 3, 0), rnode(DCMUX, 89, 4, 2) },
  { pnode(GPIO, 89, 4, CLKIN_IN, 3, 1), rnode(DCMUX, 89, 4, 3) },
  { pnode(GPIO, 89, 4, CLKIN_OUT, 3, 0), rnode(DCMUX, 89, 4, 0) },
  { pnode(GPIO, 89, 4, CLKIN_OUT, 3, 1), rnode(DCMUX, 89, 4, 1) },
  { pnode(GPIO, 89, 6, DATAIN, 0, 0), rnode(GOUT, 89, 6, 49) },
  { pnode(GPIO, 89, 6, DATAIN, 0, 1), rnode(GOUT, 89, 6, 50) },
  { pnode(GPIO, 89, 6, DATAIN, 0, 2), rnode(GOUT, 89, 6, 51) },
  { pnode(GPIO, 89, 6, DATAIN, 0, 3), rnode(GOUT, 89, 6, 52) },
  { pnode(GPIO, 89, 6, DATAOUT, 0, 0), rnode(GIN, 89, 6, 48) },
  { pnode(GPIO, 89, 6, DATAOUT, 0, 1), rnode(GIN, 89, 6, 49) },
  { pnode(GPIO, 89, 6, DATAOUT, 0, 2), rnode(GIN, 89, 6, 50) },
  { pnode(GPIO, 89, 6, DATAOUT, 0, 3), rnode(GIN, 89, 6, 51) },
  { pnode(GPIO, 89, 6, DATAOUT, 0, 4), rnode(GIN, 89, 6, 52) },
  { pnode(GPIO, 89, 6, OEIN, 0, 0), rnode(GOUT, 89, 6, 53) },
  { pnode(GPIO, 89, 6, OEIN, 0, 1), rnode(GOUT, 89, 6, 54) },
  { pnode(GPIO, 89, 6, BSLIPMAX, 0, -1), rnode(GIN, 89, 6, 47) },
  { pnode(GPIO, 89, 6, CEIN, 0, -1), rnode(GOUT, 89, 6, 46) },
  { pnode(GPIO, 89, 6, CEOUT, 0, -1), rnode(GOUT, 89, 6, 47) },
  { pnode(GPIO, 89, 6, ACLR, 0, -1), rnode(GOUT, 89, 6, 48) },
  { pnode(GPIO, 89, 6, SCLR, 0, -1), rnode(GOUT, 89, 6, 55) },
  { pnode(GPIO, 89, 6, CLKIN_IN, 0, 0), rnode(DCMUX, 89, 6, 14) },
  { pnode(GPIO, 89, 6, CLKIN_IN, 0, 1), rnode(DCMUX, 89, 6, 15) },
  { pnode(GPIO, 89, 6, CLKIN_OUT, 0, 0), rnode(DCMUX, 89, 6, 12) },
  { pnode(GPIO, 89, 6, CLKIN_OUT, 0, 1), rnode(DCMUX, 89, 6, 13) },
  { pnode(GPIO, 89, 6, DATAIN, 1, 0), rnode(GOUT, 89, 6, 39) },
  { pnode(GPIO, 89, 6, DATAIN, 1, 1), rnode(GOUT, 89, 6, 40) },
  { pnode(GPIO, 89, 6, DATAIN, 1, 2), rnode(GOUT, 89, 6, 41) },
  { pnode(GPIO, 89, 6, DATAIN, 1, 3), rnode(GOUT, 89, 6, 42) },
  { pnode(GPIO, 89, 6, DATAOUT, 1, 0), rnode(GIN, 89, 6, 42) },
  { pnode(GPIO, 89, 6, DATAOUT, 1, 1), rnode(GIN, 89, 6, 43) },
  { pnode(GPIO, 89, 6, DATAOUT, 1, 2), rnode(GIN, 89, 6, 44) },
  { pnode(GPIO, 89, 6, DATAOUT, 1, 3), rnode(GIN, 89, 6, 45) },
  { pnode(GPIO, 89, 6, DATAOUT, 1, 4), rnode(GIN, 89, 6, 46) },
  { pnode(GPIO, 89, 6, OEIN, 1, 0), rnode(GOUT, 89, 6, 43) },
  { pnode(GPIO, 89, 6, OEIN, 1, 1), rnode(GOUT, 89, 6, 44) },
  { pnode(GPIO, 89, 6, BSLIPMAX, 1, -1), rnode(GIN, 89, 6, 41) },
  { pnode(GPIO, 89, 6, CEIN, 1, -1), rnode(GOUT, 89, 6, 36) },
  { pnode(GPIO, 89, 6, CEOUT, 1, -1), rnode(GOUT, 89, 6, 37) },
  { pnode(GPIO, 89, 6, ACLR, 1, -1), rnode(GOUT, 89, 6, 38) },
  { pnode(GPIO, 89, 6, SCLR, 1, -1), rnode(GOUT, 89, 6, 45) },
  { pnode(GPIO, 89, 6, CLKIN_IN, 1, 0), rnode(DCMUX, 89, 6, 10) },
  { pnode(GPIO, 89, 6, CLKIN_IN, 1, 1), rnode(DCMUX, 89, 6, 11) },
  { pnode(GPIO, 89, 6, CLKIN_OUT, 1, 0), rnode(DCMUX, 89, 6, 8) },
  { pnode(GPIO, 89, 6, CLKIN_OUT, 1, 1), rnode(DCMUX, 89, 6, 9) },
  { pnode(GPIO, 89, 6, DATAIN, 2, 0), rnode(GOUT, 89, 6, 29) },
  { pnode(GPIO, 89, 6, DATAIN, 2, 1), rnode(GOUT, 89, 6, 30) },
  { pnode(GPIO, 89, 6, DATAIN, 2, 2), rnode(GOUT, 89, 6, 31) },
  { pnode(GPIO, 89, 6, DATAIN, 2, 3), rnode(GOUT, 89, 6, 32) },
  { pnode(GPIO, 89, 6, DATAOUT, 2, 0), rnode(GIN, 89, 6, 36) },
  { pnode(GPIO, 89, 6, DATAOUT, 2, 1), rnode(GIN, 89, 6, 37) },
  { pnode(GPIO, 89, 6, DATAOUT, 2, 2), rnode(GIN, 89, 6, 40) },
  { pnode(GPIO, 89, 6, DATAOUT, 2, 3), rnode(GIN, 89, 6, 38) },
  { pnode(GPIO, 89, 6, DATAOUT, 2, 4), rnode(GIN, 89, 6, 39) },
  { pnode(GPIO, 89, 6, OEIN, 2, 0), rnode(GOUT, 89, 6, 33) },
  { pnode(GPIO, 89, 6, OEIN, 2, 1), rnode(GOUT, 89, 6, 34) },
  { pnode(GPIO, 89, 6, BSLIPMAX, 2, -1), rnode(GIN, 89, 6, 35) },
  { pnode(GPIO, 89, 6, CEIN, 2, -1), rnode(GOUT, 89, 6, 26) },
  { pnode(GPIO, 89, 6, CEOUT, 2, -1), rnode(GOUT, 89, 6, 27) },
  { pnode(GPIO, 89, 6, ACLR, 2, -1), rnode(GOUT, 89, 6, 28) },
  { pnode(GPIO, 89, 6, SCLR, 2, -1), rnode(GOUT, 89, 6, 35) },
  { pnode(GPIO, 89, 6, CLKIN_IN, 2, 0), rnode(DCMUX, 89, 6, 6) },
  { pnode(GPIO, 89, 6, CLKIN_IN, 2, 1), rnode(DCMUX, 89, 6, 7) },
  { pnode(GPIO, 89, 6, CLKIN_OUT, 2, 0), rnode(DCMUX, 89, 6, 4) },
  { pnode(GPIO, 89, 6, CLKIN_OUT, 2, 1), rnode(DCMUX, 89, 6, 5) },
  { pnode(GPIO, 89, 6, DATAIN, 3, 0), rnode(GOUT, 89, 6, 19) },
  { pnode(GPIO, 89, 6, DATAIN, 3, 1), rnode(GOUT, 89, 6, 20) },
  { pnode(GPIO, 89, 6, DATAIN, 3, 2), rnode(GOUT, 89, 6, 21) },
  { pnode(GPIO, 89, 6, DATAIN, 3, 3), rnode(GOUT, 89, 6, 22) },
  { pnode(GPIO, 89, 6, DATAOUT, 3, 0), rnode(GIN, 89, 6, 30) },
  { pnode(GPIO, 89, 6, DATAOUT, 3, 1), rnode(GIN, 89, 6, 31) },
  { pnode(GPIO, 89, 6, DATAOUT, 3, 2), rnode(GIN, 89, 6, 32) },
  { pnode(GPIO, 89, 6, DATAOUT, 3, 3), rnode(GIN, 89, 6, 33) },
  { pnode(GPIO, 89, 6, DATAOUT, 3, 4), rnode(GIN, 89, 6, 34) },
  { pnode(GPIO, 89, 6, OEIN, 3, 0), rnode(GOUT, 89, 6, 23) },
  { pnode(GPIO, 89, 6, OEIN, 3, 1), rnode(GOUT, 89, 6, 24) },
  { pnode(GPIO, 89, 6, BSLIPMAX, 3, -1), rnode(GIN, 89, 6, 29) },
  { pnode(GPIO, 89, 6, CEIN, 3, -1), rnode(GOUT, 89, 6, 16) },
  { pnode(GPIO, 89, 6, CEOUT, 3, -1), rnode(GOUT, 89, 6, 17) },
  { pnode(GPIO, 89, 6, ACLR, 3, -1), rnode(GOUT, 89, 6, 18) },
  { pnode(GPIO, 89, 6, SCLR, 3, -1), rnode(GOUT, 89, 6, 25) },
  { pnode(GPIO, 89, 6, CLKIN_IN, 3, 0), rnode(DCMUX, 89, 6, 2) },
  { pnode(GPIO, 89, 6, CLKIN_IN, 3, 1), rnode(DCMUX, 89, 6, 3) },
  { pnode(GPIO, 89, 6, CLKIN_OUT, 3, 0), rnode(DCMUX, 89, 6, 0) },
  { pnode(GPIO, 89, 6, CLKIN_OUT, 3, 1), rnode(DCMUX, 89, 6, 1) },
  { pnode(GPIO, 89, 8, DATAIN, 0, 0), rnode(GOUT, 89, 8, 49) },
  { pnode(GPIO, 89, 8, DATAIN, 0, 1), rnode(GOUT, 89, 8, 50) },
  { pnode(GPIO, 89, 8, DATAIN, 0, 2), rnode(GOUT, 89, 8, 51) },
  { pnode(GPIO, 89, 8, DATAIN, 0, 3), rnode(GOUT, 89, 8, 52) },
  { pnode(GPIO, 89, 8, DATAOUT, 0, 0), rnode(GIN, 89, 8, 48) },
  { pnode(GPIO, 89, 8, DATAOUT, 0, 1), rnode(GIN, 89, 8, 49) },
  { pnode(GPIO, 89, 8, DATAOUT, 0, 2), rnode(GIN, 89, 8, 50) },
  { pnode(GPIO, 89, 8, DATAOUT, 0, 3), rnode(GIN, 89, 8, 51) },
  { pnode(GPIO, 89, 8, DATAOUT, 0, 4), rnode(GIN, 89, 8, 52) },
  { pnode(GPIO, 89, 8, OEIN, 0, 0), rnode(GOUT, 89, 8, 53) },
  { pnode(GPIO, 89, 8, OEIN, 0, 1), rnode(GOUT, 89, 8, 54) },
  { pnode(GPIO, 89, 8, BSLIPMAX, 0, -1), rnode(GIN, 89, 8, 47) },
  { pnode(GPIO, 89, 8, CEIN, 0, -1), rnode(GOUT, 89, 8, 46) },
  { pnode(GPIO, 89, 8, CEOUT, 0, -1), rnode(GOUT, 89, 8, 47) },
  { pnode(GPIO, 89, 8, ACLR, 0, -1), rnode(GOUT, 89, 8, 48) },
  { pnode(GPIO, 89, 8, SCLR, 0, -1), rnode(GOUT, 89, 8, 55) },
  { pnode(GPIO, 89, 8, CLKIN_IN, 0, 0), rnode(DCMUX, 89, 8, 14) },
  { pnode(GPIO, 89, 8, CLKIN_IN, 0, 1), rnode(DCMUX, 89, 8, 15) },
  { pnode(GPIO, 89, 8, CLKIN_OUT, 0, 0), rnode(DCMUX, 89, 8, 12) },
  { pnode(GPIO, 89, 8, CLKIN_OUT, 0, 1), rnode(DCMUX, 89, 8, 13) },
  { pnode(GPIO, 89, 8, DATAIN, 1, 0), rnode(GOUT, 89, 8, 39) },
  { pnode(GPIO, 89, 8, DATAIN, 1, 1), rnode(GOUT, 89, 8, 40) },
  { pnode(GPIO, 89, 8, DATAIN, 1, 2), rnode(GOUT, 89, 8, 41) },
  { pnode(GPIO, 89, 8, DATAIN, 1, 3), rnode(GOUT, 89, 8, 42) },
  { pnode(GPIO, 89, 8, DATAOUT, 1, 0), rnode(GIN, 89, 8, 42) },
  { pnode(GPIO, 89, 8, DATAOUT, 1, 1), rnode(GIN, 89, 8, 43) },
  { pnode(GPIO, 89, 8, DATAOUT, 1, 2), rnode(GIN, 89, 8, 44) },
  { pnode(GPIO, 89, 8, DATAOUT, 1, 3), rnode(GIN, 89, 8, 45) },
  { pnode(GPIO, 89, 8, DATAOUT, 1, 4), rnode(GIN, 89, 8, 46) },
  { pnode(GPIO, 89, 8, OEIN, 1, 0), rnode(GOUT, 89, 8, 43) },
  { pnode(GPIO, 89, 8, OEIN, 1, 1), rnode(GOUT, 89, 8, 44) },
  { pnode(GPIO, 89, 8, BSLIPMAX, 1, -1), rnode(GIN, 89, 8, 41) },
  { pnode(GPIO, 89, 8, CEIN, 1, -1), rnode(GOUT, 89, 8, 36) },
  { pnode(GPIO, 89, 8, CEOUT, 1, -1), rnode(GOUT, 89, 8, 37) },
  { pnode(GPIO, 89, 8, ACLR, 1, -1), rnode(GOUT, 89, 8, 38) },
  { pnode(GPIO, 89, 8, SCLR, 1, -1), rnode(GOUT, 89, 8, 45) },
  { pnode(GPIO, 89, 8, CLKIN_IN, 1, 0), rnode(DCMUX, 89, 8, 10) },
  { pnode(GPIO, 89, 8, CLKIN_IN, 1, 1), rnode(DCMUX, 89, 8, 11) },
  { pnode(GPIO, 89, 8, CLKIN_OUT, 1, 0), rnode(DCMUX, 89, 8, 8) },
  { pnode(GPIO, 89, 8, CLKIN_OUT, 1, 1), rnode(DCMUX, 89, 8, 9) },
  { pnode(GPIO, 89, 8, DATAIN, 2, 0), rnode(GOUT, 89, 8, 29) },
  { pnode(GPIO, 89, 8, DATAIN, 2, 1), rnode(GOUT, 89, 8, 30) },
  { pnode(GPIO, 89, 8, DATAIN, 2, 2), rnode(GOUT, 89, 8, 31) },
  { pnode(GPIO, 89, 8, DATAIN, 2, 3), rnode(GOUT, 89, 8, 32) },
  { pnode(GPIO, 89, 8, DATAOUT, 2, 0), rnode(GIN, 89, 8, 36) },
  { pnode(GPIO, 89, 8, DATAOUT, 2, 1), rnode(GIN, 89, 8, 37) },
  { pnode(GPIO, 89, 8, DATAOUT, 2, 2), rnode(GIN, 89, 8, 40) },
  { pnode(GPIO, 89, 8, DATAOUT, 2, 3), rnode(GIN, 89, 8, 38) },
  { pnode(GPIO, 89, 8, DATAOUT, 2, 4), rnode(GIN, 89, 8, 39) },
  { pnode(GPIO, 89, 8, OEIN, 2, 0), rnode(GOUT, 89, 8, 33) },
  { pnode(GPIO, 89, 8, OEIN, 2, 1), rnode(GOUT, 89, 8, 34) },
  { pnode(GPIO, 89, 8, BSLIPMAX, 2, -1), rnode(GIN, 89, 8, 35) },
  { pnode(GPIO, 89, 8, CEIN, 2, -1), rnode(GOUT, 89, 8, 26) },
  { pnode(GPIO, 89, 8, CEOUT, 2, -1), rnode(GOUT, 89, 8, 27) },
  { pnode(GPIO, 89, 8, ACLR, 2, -1), rnode(GOUT, 89, 8, 28) },
  { pnode(GPIO, 89, 8, SCLR, 2, -1), rnode(GOUT, 89, 8, 35) },
  { pnode(GPIO, 89, 8, CLKIN_IN, 2, 0), rnode(DCMUX, 89, 8, 6) },
  { pnode(GPIO, 89, 8, CLKIN_IN, 2, 1), rnode(DCMUX, 89, 8, 7) },
  { pnode(GPIO, 89, 8, CLKIN_OUT, 2, 0), rnode(DCMUX, 89, 8, 4) },
  { pnode(GPIO, 89, 8, CLKIN_OUT, 2, 1), rnode(DCMUX, 89, 8, 5) },
  { pnode(GPIO, 89, 8, DATAIN, 3, 0), rnode(GOUT, 89, 8, 19) },
  { pnode(GPIO, 89, 8, DATAIN, 3, 1), rnode(GOUT, 89, 8, 20) },
  { pnode(GPIO, 89, 8, DATAIN, 3, 2), rnode(GOUT, 89, 8, 21) },
  { pnode(GPIO, 89, 8, DATAIN, 3, 3), rnode(GOUT, 89, 8, 22) },
  { pnode(GPIO, 89, 8, DATAOUT, 3, 0), rnode(GIN, 89, 8, 30) },
  { pnode(GPIO, 89, 8, DATAOUT, 3, 1), rnode(GIN, 89, 8, 31) },
  { pnode(GPIO, 89, 8, DATAOUT, 3, 2), rnode(GIN, 89, 8, 32) },
  { pnode(GPIO, 89, 8, DATAOUT, 3, 3), rnode(GIN, 89, 8, 33) },
  { pnode(GPIO, 89, 8, DATAOUT, 3, 4), rnode(GIN, 89, 8, 34) },
  { pnode(GPIO, 89, 8, OEIN, 3, 0), rnode(GOUT, 89, 8, 23) },
  { pnode(GPIO, 89, 8, OEIN, 3, 1), rnode(GOUT, 89, 8, 24) },
  { pnode(GPIO, 89, 8, BSLIPMAX, 3, -1), rnode(GIN, 89, 8, 29) },
  { pnode(GPIO, 89, 8, CEIN, 3, -1), rnode(GOUT, 89, 8, 16) },
  { pnode(GPIO, 89, 8, CEOUT, 3, -1), rnode(GOUT, 89, 8, 17) },
  { pnode(GPIO, 89, 8, ACLR, 3, -1), rnode(GOUT, 89, 8, 18) },
  { pnode(GPIO, 89, 8, SCLR, 3, -1), rnode(GOUT, 89, 8, 25) },
  { pnode(GPIO, 89, 8, CLKIN_IN, 3, 0), rnode(DCMUX, 89, 8, 2) },
  { pnode(GPIO, 89, 8, CLKIN_IN, 3, 1), rnode(DCMUX, 89, 8, 3) },
  { pnode(GPIO, 89, 8, CLKIN_OUT, 3, 0), rnode(DCMUX, 89, 8, 0) },
  { pnode(GPIO, 89, 8, CLKIN_OUT, 3, 1), rnode(DCMUX, 89, 8, 1) },
  { pnode(GPIO, 89, 9, DATAIN, 0, 0), rnode(GOUT, 89, 9, 49) },
  { pnode(GPIO, 89, 9, DATAIN, 0, 1), rnode(GOUT, 89, 9, 50) },
  { pnode(GPIO, 89, 9, DATAIN, 0, 2), rnode(GOUT, 89, 9, 51) },
  { pnode(GPIO, 89, 9, DATAIN, 0, 3), rnode(GOUT, 89, 9, 52) },
  { pnode(GPIO, 89, 9, DATAOUT, 0, 0), rnode(GIN, 89, 9, 48) },
  { pnode(GPIO, 89, 9, DATAOUT, 0, 1), rnode(GIN, 89, 9, 49) },
  { pnode(GPIO, 89, 9, DATAOUT, 0, 2), rnode(GIN, 89, 9, 50) },
  { pnode(GPIO, 89, 9, DATAOUT, 0, 3), rnode(GIN, 89, 9, 51) },
  { pnode(GPIO, 89, 9, DATAOUT, 0, 4), rnode(GIN, 89, 9, 52) },
  { pnode(GPIO, 89, 9, OEIN, 0, 0), rnode(GOUT, 89, 9, 53) },
  { pnode(GPIO, 89, 9, OEIN, 0, 1), rnode(GOUT, 89, 9, 55) },
  { pnode(GPIO, 89, 9, BSLIPMAX, 0, -1), rnode(GIN, 89, 9, 47) },
  { pnode(GPIO, 89, 9, CEIN, 0, -1), rnode(GOUT, 89, 9, 46) },
  { pnode(GPIO, 89, 9, CEOUT, 0, -1), rnode(GOUT, 89, 9, 47) },
  { pnode(GPIO, 89, 9, ACLR, 0, -1), rnode(GOUT, 89, 9, 48) },
  { pnode(GPIO, 89, 9, SCLR, 0, -1), rnode(GOUT, 89, 9, 54) },
  { pnode(GPIO, 89, 9, CLKIN_IN, 0, 0), rnode(DCMUX, 89, 9, 14) },
  { pnode(GPIO, 89, 9, CLKIN_IN, 0, 1), rnode(DCMUX, 89, 9, 15) },
  { pnode(GPIO, 89, 9, CLKIN_OUT, 0, 0), rnode(DCMUX, 89, 9, 12) },
  { pnode(GPIO, 89, 9, CLKIN_OUT, 0, 1), rnode(DCMUX, 89, 9, 13) },
  { pnode(GPIO, 89, 9, DATAIN, 1, 0), rnode(GOUT, 89, 9, 39) },
  { pnode(GPIO, 89, 9, DATAIN, 1, 1), rnode(GOUT, 89, 9, 40) },
  { pnode(GPIO, 89, 9, DATAIN, 1, 2), rnode(GOUT, 89, 9, 41) },
  { pnode(GPIO, 89, 9, DATAIN, 1, 3), rnode(GOUT, 89, 9, 42) },
  { pnode(GPIO, 89, 9, DATAOUT, 1, 0), rnode(GIN, 89, 9, 42) },
  { pnode(GPIO, 89, 9, DATAOUT, 1, 1), rnode(GIN, 89, 9, 43) },
  { pnode(GPIO, 89, 9, DATAOUT, 1, 2), rnode(GIN, 89, 9, 44) },
  { pnode(GPIO, 89, 9, DATAOUT, 1, 3), rnode(GIN, 89, 9, 45) },
  { pnode(GPIO, 89, 9, DATAOUT, 1, 4), rnode(GIN, 89, 9, 46) },
  { pnode(GPIO, 89, 9, OEIN, 1, 0), rnode(GOUT, 89, 9, 43) },
  { pnode(GPIO, 89, 9, OEIN, 1, 1), rnode(GOUT, 89, 9, 44) },
  { pnode(GPIO, 89, 9, BSLIPMAX, 1, -1), rnode(GIN, 89, 9, 41) },
  { pnode(GPIO, 89, 9, CEIN, 1, -1), rnode(GOUT, 89, 9, 36) },
  { pnode(GPIO, 89, 9, CEOUT, 1, -1), rnode(GOUT, 89, 9, 37) },
  { pnode(GPIO, 89, 9, ACLR, 1, -1), rnode(GOUT, 89, 9, 38) },
  { pnode(GPIO, 89, 9, SCLR, 1, -1), rnode(GOUT, 89, 9, 45) },
  { pnode(GPIO, 89, 9, CLKIN_IN, 1, 0), rnode(DCMUX, 89, 9, 10) },
  { pnode(GPIO, 89, 9, CLKIN_IN, 1, 1), rnode(DCMUX, 89, 9, 11) },
  { pnode(GPIO, 89, 9, CLKIN_OUT, 1, 0), rnode(DCMUX, 89, 9, 8) },
  { pnode(GPIO, 89, 9, CLKIN_OUT, 1, 1), rnode(DCMUX, 89, 9, 9) },
  { pnode(GPIO, 89, 9, DATAIN, 2, 0), rnode(GOUT, 89, 9, 29) },
  { pnode(GPIO, 89, 9, DATAIN, 2, 1), rnode(GOUT, 89, 9, 30) },
  { pnode(GPIO, 89, 9, DATAIN, 2, 2), rnode(GOUT, 89, 9, 31) },
  { pnode(GPIO, 89, 9, DATAIN, 2, 3), rnode(GOUT, 89, 9, 32) },
  { pnode(GPIO, 89, 9, DATAOUT, 2, 0), rnode(GIN, 89, 9, 36) },
  { pnode(GPIO, 89, 9, DATAOUT, 2, 1), rnode(GIN, 89, 9, 37) },
  { pnode(GPIO, 89, 9, DATAOUT, 2, 2), rnode(GIN, 89, 9, 40) },
  { pnode(GPIO, 89, 9, DATAOUT, 2, 3), rnode(GIN, 89, 9, 38) },
  { pnode(GPIO, 89, 9, DATAOUT, 2, 4), rnode(GIN, 89, 9, 39) },
  { pnode(GPIO, 89, 9, OEIN, 2, 0), rnode(GOUT, 89, 9, 33) },
  { pnode(GPIO, 89, 9, OEIN, 2, 1), rnode(GOUT, 89, 9, 34) },
  { pnode(GPIO, 89, 9, BSLIPMAX, 2, -1), rnode(GIN, 89, 9, 35) },
  { pnode(GPIO, 89, 9, CEIN, 2, -1), rnode(GOUT, 89, 9, 26) },
  { pnode(GPIO, 89, 9, CEOUT, 2, -1), rnode(GOUT, 89, 9, 27) },
  { pnode(GPIO, 89, 9, ACLR, 2, -1), rnode(GOUT, 89, 9, 28) },
  { pnode(GPIO, 89, 9, SCLR, 2, -1), rnode(GOUT, 89, 9, 35) },
  { pnode(GPIO, 89, 9, CLKIN_IN, 2, 0), rnode(DCMUX, 89, 9, 6) },
  { pnode(GPIO, 89, 9, CLKIN_IN, 2, 1), rnode(DCMUX, 89, 9, 7) },
  { pnode(GPIO, 89, 9, CLKIN_OUT, 2, 0), rnode(DCMUX, 89, 9, 4) },
  { pnode(GPIO, 89, 9, CLKIN_OUT, 2, 1), rnode(DCMUX, 89, 9, 5) },
  { pnode(GPIO, 89, 9, DATAIN, 3, 0), rnode(GOUT, 89, 9, 19) },
  { pnode(GPIO, 89, 9, DATAIN, 3, 1), rnode(GOUT, 89, 9, 20) },
  { pnode(GPIO, 89, 9, DATAIN, 3, 2), rnode(GOUT, 89, 9, 21) },
  { pnode(GPIO, 89, 9, DATAIN, 3, 3), rnode(GOUT, 89, 9, 22) },
  { pnode(GPIO, 89, 9, DATAOUT, 3, 0), rnode(GIN, 89, 9, 30) },
  { pnode(GPIO, 89, 9, DATAOUT, 3, 1), rnode(GIN, 89, 9, 31) },
  { pnode(GPIO, 89, 9, DATAOUT, 3, 2), rnode(GIN, 89, 9, 32) },
  { pnode(GPIO, 89, 9, DATAOUT, 3, 3), rnode(GIN, 89, 9, 33) },
  { pnode(GPIO, 89, 9, DATAOUT, 3, 4), rnode(GIN, 89, 9, 34) },
  { pnode(GPIO, 89, 9, OEIN, 3, 0), rnode(GOUT, 89, 9, 23) },
  { pnode(GPIO, 89, 9, OEIN, 3, 1), rnode(GOUT, 89, 9, 24) },
  { pnode(GPIO, 89, 9, BSLIPMAX, 3, -1), rnode(GIN, 89, 9, 29) },
  { pnode(GPIO, 89, 9, CEIN, 3, -1), rnode(GOUT, 89, 9, 16) },
  { pnode(GPIO, 89, 9, CEOUT, 3, -1), rnode(GOUT, 89, 9, 17) },
  { pnode(GPIO, 89, 9, ACLR, 3, -1), rnode(GOUT, 89, 9, 18) },
  { pnode(GPIO, 89, 9, SCLR, 3, -1), rnode(GOUT, 89, 9, 25) },
  { pnode(GPIO, 89, 9, CLKIN_IN, 3, 0), rnode(DCMUX, 89, 9, 2) },
  { pnode(GPIO, 89, 9, CLKIN_IN, 3, 1), rnode(DCMUX, 89, 9, 3) },
  { pnode(GPIO, 89, 9, CLKIN_OUT, 3, 0), rnode(DCMUX, 89, 9, 0) },
  { pnode(GPIO, 89, 9, CLKIN_OUT, 3, 1), rnode(DCMUX, 89, 9, 1) },
  { pnode(GPIO, 89, 11, DATAIN, 0, 0), rnode(GOUT, 89, 11, 49) },
  { pnode(GPIO, 89, 11, DATAIN, 0, 1), rnode(GOUT, 89, 11, 50) },
  { pnode(GPIO, 89, 11, DATAIN, 0, 2), rnode(GOUT, 89, 11, 51) },
  { pnode(GPIO, 89, 11, DATAIN, 0, 3), rnode(GOUT, 89, 11, 52) },
  { pnode(GPIO, 89, 11, DATAOUT, 0, 0), rnode(GIN, 89, 11, 48) },
  { pnode(GPIO, 89, 11, DATAOUT, 0, 1), rnode(GIN, 89, 11, 49) },
  { pnode(GPIO, 89, 11, DATAOUT, 0, 2), rnode(GIN, 89, 11, 50) },
  { pnode(GPIO, 89, 11, DATAOUT, 0, 3), rnode(GIN, 89, 11, 51) },
  { pnode(GPIO, 89, 11, DATAOUT, 0, 4), rnode(GIN, 89, 11, 52) },
  { pnode(GPIO, 89, 11, OEIN, 0, 0), rnode(GOUT, 89, 11, 53) },
  { pnode(GPIO, 89, 11, OEIN, 0, 1), rnode(GOUT, 89, 11, 54) },
  { pnode(GPIO, 89, 11, BSLIPMAX, 0, -1), rnode(GIN, 89, 11, 47) },
  { pnode(GPIO, 89, 11, CEIN, 0, -1), rnode(GOUT, 89, 11, 46) },
  { pnode(GPIO, 89, 11, CEOUT, 0, -1), rnode(GOUT, 89, 11, 47) },
  { pnode(GPIO, 89, 11, ACLR, 0, -1), rnode(GOUT, 89, 11, 48) },
  { pnode(GPIO, 89, 11, SCLR, 0, -1), rnode(GOUT, 89, 11, 55) },
  { pnode(GPIO, 89, 11, CLKIN_IN, 0, 0), rnode(DCMUX, 89, 11, 14) },
  { pnode(GPIO, 89, 11, CLKIN_IN, 0, 1), rnode(DCMUX, 89, 11, 15) },
  { pnode(GPIO, 89, 11, CLKIN_OUT, 0, 0), rnode(DCMUX, 89, 11, 12) },
  { pnode(GPIO, 89, 11, CLKIN_OUT, 0, 1), rnode(DCMUX, 89, 11, 13) },
  { pnode(GPIO, 89, 11, DATAIN, 1, 0), rnode(GOUT, 89, 11, 39) },
  { pnode(GPIO, 89, 11, DATAIN, 1, 1), rnode(GOUT, 89, 11, 40) },
  { pnode(GPIO, 89, 11, DATAIN, 1, 2), rnode(GOUT, 89, 11, 41) },
  { pnode(GPIO, 89, 11, DATAIN, 1, 3), rnode(GOUT, 89, 11, 42) },
  { pnode(GPIO, 89, 11, DATAOUT, 1, 0), rnode(GIN, 89, 11, 42) },
  { pnode(GPIO, 89, 11, DATAOUT, 1, 1), rnode(GIN, 89, 11, 43) },
  { pnode(GPIO, 89, 11, DATAOUT, 1, 2), rnode(GIN, 89, 11, 44) },
  { pnode(GPIO, 89, 11, DATAOUT, 1, 3), rnode(GIN, 89, 11, 45) },
  { pnode(GPIO, 89, 11, DATAOUT, 1, 4), rnode(GIN, 89, 11, 46) },
  { pnode(GPIO, 89, 11, OEIN, 1, 0), rnode(GOUT, 89, 11, 43) },
  { pnode(GPIO, 89, 11, OEIN, 1, 1), rnode(GOUT, 89, 11, 44) },
  { pnode(GPIO, 89, 11, BSLIPMAX, 1, -1), rnode(GIN, 89, 11, 41) },
  { pnode(GPIO, 89, 11, CEIN, 1, -1), rnode(GOUT, 89, 11, 36) },
  { pnode(GPIO, 89, 11, CEOUT, 1, -1), rnode(GOUT, 89, 11, 37) },
  { pnode(GPIO, 89, 11, ACLR, 1, -1), rnode(GOUT, 89, 11, 38) },
  { pnode(GPIO, 89, 11, SCLR, 1, -1), rnode(GOUT, 89, 11, 45) },
  { pnode(GPIO, 89, 11, CLKIN_IN, 1, 0), rnode(DCMUX, 89, 11, 10) },
  { pnode(GPIO, 89, 11, CLKIN_IN, 1, 1), rnode(DCMUX, 89, 11, 11) },
  { pnode(GPIO, 89, 11, CLKIN_OUT, 1, 0), rnode(DCMUX, 89, 11, 8) },
  { pnode(GPIO, 89, 11, CLKIN_OUT, 1, 1), rnode(DCMUX, 89, 11, 9) },
  { pnode(GPIO, 89, 11, DATAIN, 2, 0), rnode(GOUT, 89, 11, 29) },
  { pnode(GPIO, 89, 11, DATAIN, 2, 1), rnode(GOUT, 89, 11, 30) },
  { pnode(GPIO, 89, 11, DATAIN, 2, 2), rnode(GOUT, 89, 11, 32) },
  { pnode(GPIO, 89, 11, DATAIN, 2, 3), rnode(GOUT, 89, 11, 33) },
  { pnode(GPIO, 89, 11, DATAOUT, 2, 0), rnode(GIN, 89, 11, 36) },
  { pnode(GPIO, 89, 11, DATAOUT, 2, 1), rnode(GIN, 89, 11, 37) },
  { pnode(GPIO, 89, 11, DATAOUT, 2, 2), rnode(GIN, 89, 11, 40) },
  { pnode(GPIO, 89, 11, DATAOUT, 2, 3), rnode(GIN, 89, 11, 38) },
  { pnode(GPIO, 89, 11, DATAOUT, 2, 4), rnode(GIN, 89, 11, 39) },
  { pnode(GPIO, 89, 11, OEIN, 2, 0), rnode(GOUT, 89, 11, 34) },
  { pnode(GPIO, 89, 11, OEIN, 2, 1), rnode(GOUT, 89, 11, 35) },
  { pnode(GPIO, 89, 11, BSLIPMAX, 2, -1), rnode(GIN, 89, 11, 35) },
  { pnode(GPIO, 89, 11, CEIN, 2, -1), rnode(GOUT, 89, 11, 26) },
  { pnode(GPIO, 89, 11, CEOUT, 2, -1), rnode(GOUT, 89, 11, 27) },
  { pnode(GPIO, 89, 11, ACLR, 2, -1), rnode(GOUT, 89, 11, 28) },
  { pnode(GPIO, 89, 11, SCLR, 2, -1), rnode(GOUT, 89, 11, 31) },
  { pnode(GPIO, 89, 11, CLKIN_IN, 2, 0), rnode(DCMUX, 89, 11, 6) },
  { pnode(GPIO, 89, 11, CLKIN_IN, 2, 1), rnode(DCMUX, 89, 11, 7) },
  { pnode(GPIO, 89, 11, CLKIN_OUT, 2, 0), rnode(DCMUX, 89, 11, 4) },
  { pnode(GPIO, 89, 11, CLKIN_OUT, 2, 1), rnode(DCMUX, 89, 11, 5) },
  { pnode(GPIO, 89, 11, DATAIN, 3, 0), rnode(GOUT, 89, 11, 19) },
  { pnode(GPIO, 89, 11, DATAIN, 3, 1), rnode(GOUT, 89, 11, 20) },
  { pnode(GPIO, 89, 11, DATAIN, 3, 2), rnode(GOUT, 89, 11, 21) },
  { pnode(GPIO, 89, 11, DATAIN, 3, 3), rnode(GOUT, 89, 11, 22) },
  { pnode(GPIO, 89, 11, DATAOUT, 3, 0), rnode(GIN, 89, 11, 30) },
  { pnode(GPIO, 89, 11, DATAOUT, 3, 1), rnode(GIN, 89, 11, 31) },
  { pnode(GPIO, 89, 11, DATAOUT, 3, 2), rnode(GIN, 89, 11, 32) },
  { pnode(GPIO, 89, 11, DATAOUT, 3, 3), rnode(GIN, 89, 11, 33) },
  { pnode(GPIO, 89, 11, DATAOUT, 3, 4), rnode(GIN, 89, 11, 34) },
  { pnode(GPIO, 89, 11, OEIN, 3, 0), rnode(GOUT, 89, 11, 23) },
  { pnode(GPIO, 89, 11, OEIN, 3, 1), rnode(GOUT, 89, 11, 24) },
  { pnode(GPIO, 89, 11, BSLIPMAX, 3, -1), rnode(GIN, 89, 11, 29) },
  { pnode(GPIO, 89, 11, CEIN, 3, -1), rnode(GOUT, 89, 11, 16) },
  { pnode(GPIO, 89, 11, CEOUT, 3, -1), rnode(GOUT, 89, 11, 17) },
  { pnode(GPIO, 89, 11, ACLR, 3, -1), rnode(GOUT, 89, 11, 18) },
  { pnode(GPIO, 89, 11, SCLR, 3, -1), rnode(GOUT, 89, 11, 25) },
  { pnode(GPIO, 89, 11, CLKIN_IN, 3, 0), rnode(DCMUX, 89, 11, 2) },
  { pnode(GPIO, 89, 11, CLKIN_IN, 3, 1), rnode(DCMUX, 89, 11, 3) },
  { pnode(GPIO, 89, 11, CLKIN_OUT, 3, 0), rnode(DCMUX, 89, 11, 0) },
  { pnode(GPIO, 89, 11, CLKIN_OUT, 3, 1), rnode(DCMUX, 89, 11, 1) },
  { pnode(GPIO, 89, 13, DATAIN, 0, 0), rnode(GOUT, 89, 13, 49) },
  { pnode(GPIO, 89, 13, DATAIN, 0, 1), rnode(GOUT, 89, 13, 50) },
  { pnode(GPIO, 89, 13, DATAIN, 0, 2), rnode(GOUT, 89, 13, 51) },
  { pnode(GPIO, 89, 13, DATAIN, 0, 3), rnode(GOUT, 89, 13, 52) },
  { pnode(GPIO, 89, 13, DATAOUT, 0, 0), rnode(GIN, 89, 13, 48) },
  { pnode(GPIO, 89, 13, DATAOUT, 0, 1), rnode(GIN, 89, 13, 49) },
  { pnode(GPIO, 89, 13, DATAOUT, 0, 2), rnode(GIN, 89, 13, 50) },
  { pnode(GPIO, 89, 13, DATAOUT, 0, 3), rnode(GIN, 89, 13, 51) },
  { pnode(GPIO, 89, 13, DATAOUT, 0, 4), rnode(GIN, 89, 13, 52) },
  { pnode(GPIO, 89, 13, OEIN, 0, 0), rnode(GOUT, 89, 13, 53) },
  { pnode(GPIO, 89, 13, OEIN, 0, 1), rnode(GOUT, 89, 13, 54) },
  { pnode(GPIO, 89, 13, BSLIPMAX, 0, -1), rnode(GIN, 89, 13, 47) },
  { pnode(GPIO, 89, 13, CEIN, 0, -1), rnode(GOUT, 89, 13, 46) },
  { pnode(GPIO, 89, 13, CEOUT, 0, -1), rnode(GOUT, 89, 13, 47) },
  { pnode(GPIO, 89, 13, ACLR, 0, -1), rnode(GOUT, 89, 13, 48) },
  { pnode(GPIO, 89, 13, SCLR, 0, -1), rnode(GOUT, 89, 13, 55) },
  { pnode(GPIO, 89, 13, CLKIN_IN, 0, 0), rnode(DCMUX, 89, 13, 14) },
  { pnode(GPIO, 89, 13, CLKIN_IN, 0, 1), rnode(DCMUX, 89, 13, 15) },
  { pnode(GPIO, 89, 13, CLKIN_OUT, 0, 0), rnode(DCMUX, 89, 13, 12) },
  { pnode(GPIO, 89, 13, CLKIN_OUT, 0, 1), rnode(DCMUX, 89, 13, 13) },
  { pnode(GPIO, 89, 13, DATAIN, 1, 0), rnode(GOUT, 89, 13, 39) },
  { pnode(GPIO, 89, 13, DATAIN, 1, 1), rnode(GOUT, 89, 13, 40) },
  { pnode(GPIO, 89, 13, DATAIN, 1, 2), rnode(GOUT, 89, 13, 41) },
  { pnode(GPIO, 89, 13, DATAIN, 1, 3), rnode(GOUT, 89, 13, 42) },
  { pnode(GPIO, 89, 13, DATAOUT, 1, 0), rnode(GIN, 89, 13, 42) },
  { pnode(GPIO, 89, 13, DATAOUT, 1, 1), rnode(GIN, 89, 13, 43) },
  { pnode(GPIO, 89, 13, DATAOUT, 1, 2), rnode(GIN, 89, 13, 44) },
  { pnode(GPIO, 89, 13, DATAOUT, 1, 3), rnode(GIN, 89, 13, 45) },
  { pnode(GPIO, 89, 13, DATAOUT, 1, 4), rnode(GIN, 89, 13, 46) },
  { pnode(GPIO, 89, 13, OEIN, 1, 0), rnode(GOUT, 89, 13, 43) },
  { pnode(GPIO, 89, 13, OEIN, 1, 1), rnode(GOUT, 89, 13, 44) },
  { pnode(GPIO, 89, 13, BSLIPMAX, 1, -1), rnode(GIN, 89, 13, 41) },
  { pnode(GPIO, 89, 13, CEIN, 1, -1), rnode(GOUT, 89, 13, 36) },
  { pnode(GPIO, 89, 13, CEOUT, 1, -1), rnode(GOUT, 89, 13, 37) },
  { pnode(GPIO, 89, 13, ACLR, 1, -1), rnode(GOUT, 89, 13, 38) },
  { pnode(GPIO, 89, 13, SCLR, 1, -1), rnode(GOUT, 89, 13, 45) },
  { pnode(GPIO, 89, 13, CLKIN_IN, 1, 0), rnode(DCMUX, 89, 13, 10) },
  { pnode(GPIO, 89, 13, CLKIN_IN, 1, 1), rnode(DCMUX, 89, 13, 11) },
  { pnode(GPIO, 89, 13, CLKIN_OUT, 1, 0), rnode(DCMUX, 89, 13, 8) },
  { pnode(GPIO, 89, 13, CLKIN_OUT, 1, 1), rnode(DCMUX, 89, 13, 9) },
  { pnode(GPIO, 89, 13, DATAIN, 2, 0), rnode(GOUT, 89, 13, 29) },
  { pnode(GPIO, 89, 13, DATAIN, 2, 1), rnode(GOUT, 89, 13, 30) },
  { pnode(GPIO, 89, 13, DATAIN, 2, 2), rnode(GOUT, 89, 13, 31) },
  { pnode(GPIO, 89, 13, DATAIN, 2, 3), rnode(GOUT, 89, 13, 32) },
  { pnode(GPIO, 89, 13, DATAOUT, 2, 0), rnode(GIN, 89, 13, 36) },
  { pnode(GPIO, 89, 13, DATAOUT, 2, 1), rnode(GIN, 89, 13, 37) },
  { pnode(GPIO, 89, 13, DATAOUT, 2, 2), rnode(GIN, 89, 13, 40) },
  { pnode(GPIO, 89, 13, DATAOUT, 2, 3), rnode(GIN, 89, 13, 38) },
  { pnode(GPIO, 89, 13, DATAOUT, 2, 4), rnode(GIN, 89, 13, 39) },
  { pnode(GPIO, 89, 13, OEIN, 2, 0), rnode(GOUT, 89, 13, 33) },
  { pnode(GPIO, 89, 13, OEIN, 2, 1), rnode(GOUT, 89, 13, 34) },
  { pnode(GPIO, 89, 13, BSLIPMAX, 2, -1), rnode(GIN, 89, 13, 35) },
  { pnode(GPIO, 89, 13, CEIN, 2, -1), rnode(GOUT, 89, 13, 26) },
  { pnode(GPIO, 89, 13, CEOUT, 2, -1), rnode(GOUT, 89, 13, 27) },
  { pnode(GPIO, 89, 13, ACLR, 2, -1), rnode(GOUT, 89, 13, 28) },
  { pnode(GPIO, 89, 13, SCLR, 2, -1), rnode(GOUT, 89, 13, 35) },
  { pnode(GPIO, 89, 13, CLKIN_IN, 2, 0), rnode(DCMUX, 89, 13, 6) },
  { pnode(GPIO, 89, 13, CLKIN_IN, 2, 1), rnode(DCMUX, 89, 13, 7) },
  { pnode(GPIO, 89, 13, CLKIN_OUT, 2, 0), rnode(DCMUX, 89, 13, 4) },
  { pnode(GPIO, 89, 13, CLKIN_OUT, 2, 1), rnode(DCMUX, 89, 13, 5) },
  { pnode(GPIO, 89, 13, DATAIN, 3, 0), rnode(GOUT, 89, 13, 19) },
  { pnode(GPIO, 89, 13, DATAIN, 3, 1), rnode(GOUT, 89, 13, 20) },
  { pnode(GPIO, 89, 13, DATAIN, 3, 2), rnode(GOUT, 89, 13, 21) },
  { pnode(GPIO, 89, 13, DATAIN, 3, 3), rnode(GOUT, 89, 13, 22) },
  { pnode(GPIO, 89, 13, DATAOUT, 3, 0), rnode(GIN, 89, 13, 30) },
  { pnode(GPIO, 89, 13, DATAOUT, 3, 1), rnode(GIN, 89, 13, 31) },
  { pnode(GPIO, 89, 13, DATAOUT, 3, 2), rnode(GIN, 89, 13, 32) },
  { pnode(GPIO, 89, 13, DATAOUT, 3, 3), rnode(GIN, 89, 13, 33) },
  { pnode(GPIO, 89, 13, DATAOUT, 3, 4), rnode(GIN, 89, 13, 34) },
  { pnode(GPIO, 89, 13, OEIN, 3, 0), rnode(GOUT, 89, 13, 23) },
  { pnode(GPIO, 89, 13, OEIN, 3, 1), rnode(GOUT, 89, 13, 24) },
  { pnode(GPIO, 89, 13, BSLIPMAX, 3, -1), rnode(GIN, 89, 13, 29) },
  { pnode(GPIO, 89, 13, CEIN, 3, -1), rnode(GOUT, 89, 13, 16) },
  { pnode(GPIO, 89, 13, CEOUT, 3, -1), rnode(GOUT, 89, 13, 17) },
  { pnode(GPIO, 89, 13, ACLR, 3, -1), rnode(GOUT, 89, 13, 18) },
  { pnode(GPIO, 89, 13, SCLR, 3, -1), rnode(GOUT, 89, 13, 25) },
  { pnode(GPIO, 89, 13, CLKIN_IN, 3, 0), rnode(DCMUX, 89, 13, 2) },
  { pnode(GPIO, 89, 13, CLKIN_IN, 3, 1), rnode(DCMUX, 89, 13, 3) },
  { pnode(GPIO, 89, 13, CLKIN_OUT, 3, 0), rnode(DCMUX, 89, 13, 0) },
  { pnode(GPIO, 89, 13, CLKIN_OUT, 3, 1), rnode(DCMUX, 89, 13, 1) },
  { pnode(GPIO, 89, 15, DATAIN, 0, 0), rnode(GOUT, 89, 15, 49) },
  { pnode(GPIO, 89, 15, DATAIN, 0, 1), rnode(GOUT, 89, 15, 50) },
  { pnode(GPIO, 89, 15, DATAIN, 0, 2), rnode(GOUT, 89, 15, 51) },
  { pnode(GPIO, 89, 15, DATAIN, 0, 3), rnode(GOUT, 89, 15, 52) },
  { pnode(GPIO, 89, 15, DATAOUT, 0, 0), rnode(GIN, 89, 15, 48) },
  { pnode(GPIO, 89, 15, DATAOUT, 0, 1), rnode(GIN, 89, 15, 49) },
  { pnode(GPIO, 89, 15, DATAOUT, 0, 2), rnode(GIN, 89, 15, 50) },
  { pnode(GPIO, 89, 15, DATAOUT, 0, 3), rnode(GIN, 89, 15, 51) },
  { pnode(GPIO, 89, 15, DATAOUT, 0, 4), rnode(GIN, 89, 15, 52) },
  { pnode(GPIO, 89, 15, OEIN, 0, 0), rnode(GOUT, 89, 15, 53) },
  { pnode(GPIO, 89, 15, OEIN, 0, 1), rnode(GOUT, 89, 15, 54) },
  { pnode(GPIO, 89, 15, BSLIPMAX, 0, -1), rnode(GIN, 89, 15, 47) },
  { pnode(GPIO, 89, 15, CEIN, 0, -1), rnode(GOUT, 89, 15, 46) },
  { pnode(GPIO, 89, 15, CEOUT, 0, -1), rnode(GOUT, 89, 15, 47) },
  { pnode(GPIO, 89, 15, ACLR, 0, -1), rnode(GOUT, 89, 15, 48) },
  { pnode(GPIO, 89, 15, SCLR, 0, -1), rnode(GOUT, 89, 15, 55) },
  { pnode(GPIO, 89, 15, CLKIN_IN, 0, 0), rnode(DCMUX, 89, 15, 14) },
  { pnode(GPIO, 89, 15, CLKIN_IN, 0, 1), rnode(DCMUX, 89, 15, 15) },
  { pnode(GPIO, 89, 15, CLKIN_OUT, 0, 0), rnode(DCMUX, 89, 15, 12) },
  { pnode(GPIO, 89, 15, CLKIN_OUT, 0, 1), rnode(DCMUX, 89, 15, 13) },
  { pnode(GPIO, 89, 15, DATAIN, 1, 0), rnode(GOUT, 89, 15, 39) },
  { pnode(GPIO, 89, 15, DATAIN, 1, 1), rnode(GOUT, 89, 15, 40) },
  { pnode(GPIO, 89, 15, DATAIN, 1, 2), rnode(GOUT, 89, 15, 41) },
  { pnode(GPIO, 89, 15, DATAIN, 1, 3), rnode(GOUT, 89, 15, 42) },
  { pnode(GPIO, 89, 15, DATAOUT, 1, 0), rnode(GIN, 89, 15, 42) },
  { pnode(GPIO, 89, 15, DATAOUT, 1, 1), rnode(GIN, 89, 15, 43) },
  { pnode(GPIO, 89, 15, DATAOUT, 1, 2), rnode(GIN, 89, 15, 44) },
  { pnode(GPIO, 89, 15, DATAOUT, 1, 3), rnode(GIN, 89, 15, 45) },
  { pnode(GPIO, 89, 15, DATAOUT, 1, 4), rnode(GIN, 89, 15, 46) },
  { pnode(GPIO, 89, 15, OEIN, 1, 0), rnode(GOUT, 89, 15, 43) },
  { pnode(GPIO, 89, 15, OEIN, 1, 1), rnode(GOUT, 89, 15, 44) },
  { pnode(GPIO, 89, 15, BSLIPMAX, 1, -1), rnode(GIN, 89, 15, 41) },
  { pnode(GPIO, 89, 15, CEIN, 1, -1), rnode(GOUT, 89, 15, 36) },
  { pnode(GPIO, 89, 15, CEOUT, 1, -1), rnode(GOUT, 89, 15, 37) },
  { pnode(GPIO, 89, 15, ACLR, 1, -1), rnode(GOUT, 89, 15, 38) },
  { pnode(GPIO, 89, 15, SCLR, 1, -1), rnode(GOUT, 89, 15, 45) },
  { pnode(GPIO, 89, 15, CLKIN_IN, 1, 0), rnode(DCMUX, 89, 15, 10) },
  { pnode(GPIO, 89, 15, CLKIN_IN, 1, 1), rnode(DCMUX, 89, 15, 11) },
  { pnode(GPIO, 89, 15, CLKIN_OUT, 1, 0), rnode(DCMUX, 89, 15, 8) },
  { pnode(GPIO, 89, 15, CLKIN_OUT, 1, 1), rnode(DCMUX, 89, 15, 9) },
  { pnode(GPIO, 89, 15, DATAIN, 2, 0), rnode(GOUT, 89, 15, 29) },
  { pnode(GPIO, 89, 15, DATAIN, 2, 1), rnode(GOUT, 89, 15, 30) },
  { pnode(GPIO, 89, 15, DATAIN, 2, 2), rnode(GOUT, 89, 15, 31) },
  { pnode(GPIO, 89, 15, DATAIN, 2, 3), rnode(GOUT, 89, 15, 32) },
  { pnode(GPIO, 89, 15, DATAOUT, 2, 0), rnode(GIN, 89, 15, 36) },
  { pnode(GPIO, 89, 15, DATAOUT, 2, 1), rnode(GIN, 89, 15, 37) },
  { pnode(GPIO, 89, 15, DATAOUT, 2, 2), rnode(GIN, 89, 15, 40) },
  { pnode(GPIO, 89, 15, DATAOUT, 2, 3), rnode(GIN, 89, 15, 38) },
  { pnode(GPIO, 89, 15, DATAOUT, 2, 4), rnode(GIN, 89, 15, 39) },
  { pnode(GPIO, 89, 15, OEIN, 2, 0), rnode(GOUT, 89, 15, 33) },
  { pnode(GPIO, 89, 15, OEIN, 2, 1), rnode(GOUT, 89, 15, 34) },
  { pnode(GPIO, 89, 15, BSLIPMAX, 2, -1), rnode(GIN, 89, 15, 35) },
  { pnode(GPIO, 89, 15, CEIN, 2, -1), rnode(GOUT, 89, 15, 26) },
  { pnode(GPIO, 89, 15, CEOUT, 2, -1), rnode(GOUT, 89, 15, 27) },
  { pnode(GPIO, 89, 15, ACLR, 2, -1), rnode(GOUT, 89, 15, 28) },
  { pnode(GPIO, 89, 15, SCLR, 2, -1), rnode(GOUT, 89, 15, 35) },
  { pnode(GPIO, 89, 15, CLKIN_IN, 2, 0), rnode(DCMUX, 89, 15, 6) },
  { pnode(GPIO, 89, 15, CLKIN_IN, 2, 1), rnode(DCMUX, 89, 15, 7) },
  { pnode(GPIO, 89, 15, CLKIN_OUT, 2, 0), rnode(DCMUX, 89, 15, 4) },
  { pnode(GPIO, 89, 15, CLKIN_OUT, 2, 1), rnode(DCMUX, 89, 15, 5) },
  { pnode(GPIO, 89, 15, DATAIN, 3, 0), rnode(GOUT, 89, 15, 19) },
  { pnode(GPIO, 89, 15, DATAIN, 3, 1), rnode(GOUT, 89, 15, 20) },
  { pnode(GPIO, 89, 15, DATAIN, 3, 2), rnode(GOUT, 89, 15, 21) },
  { pnode(GPIO, 89, 15, DATAIN, 3, 3), rnode(GOUT, 89, 15, 22) },
  { pnode(GPIO, 89, 15, DATAOUT, 3, 0), rnode(GIN, 89, 15, 30) },
  { pnode(GPIO, 89, 15, DATAOUT, 3, 1), rnode(GIN, 89, 15, 31) },
  { pnode(GPIO, 89, 15, DATAOUT, 3, 2), rnode(GIN, 89, 15, 32) },
  { pnode(GPIO, 89, 15, DATAOUT, 3, 3), rnode(GIN, 89, 15, 33) },
  { pnode(GPIO, 89, 15, DATAOUT, 3, 4), rnode(GIN, 89, 15, 34) },
  { pnode(GPIO, 89, 15, OEIN, 3, 0), rnode(GOUT, 89, 15, 23) },
  { pnode(GPIO, 89, 15, OEIN, 3, 1), rnode(GOUT, 89, 15, 24) },
  { pnode(GPIO, 89, 15, BSLIPMAX, 3, -1), rnode(GIN, 89, 15, 29) },
  { pnode(GPIO, 89, 15, CEIN, 3, -1), rnode(GOUT, 89, 15, 16) },
  { pnode(GPIO, 89, 15, CEOUT, 3, -1), rnode(GOUT, 89, 15, 17) },
  { pnode(GPIO, 89, 15, ACLR, 3, -1), rnode(GOUT, 89, 15, 18) },
  { pnode(GPIO, 89, 15, SCLR, 3, -1), rnode(GOUT, 89, 15, 25) },
  { pnode(GPIO, 89, 15, CLKIN_IN, 3, 0), rnode(DCMUX, 89, 15, 2) },
  { pnode(GPIO, 89, 15, CLKIN_IN, 3, 1), rnode(DCMUX, 89, 15, 3) },
  { pnode(GPIO, 89, 15, CLKIN_OUT, 3, 0), rnode(DCMUX, 89, 15, 0) },
  { pnode(GPIO, 89, 15, CLKIN_OUT, 3, 1), rnode(DCMUX, 89, 15, 1) },
  { pnode(GPIO, 89, 16, DATAIN, 0, 0), rnode(GOUT, 89, 16, 49) },
  { pnode(GPIO, 89, 16, DATAIN, 0, 1), rnode(GOUT, 89, 16, 50) },
  { pnode(GPIO, 89, 16, DATAIN, 0, 2), rnode(GOUT, 89, 16, 51) },
  { pnode(GPIO, 89, 16, DATAIN, 0, 3), rnode(GOUT, 89, 16, 52) },
  { pnode(GPIO, 89, 16, DATAOUT, 0, 0), rnode(GIN, 89, 16, 48) },
  { pnode(GPIO, 89, 16, DATAOUT, 0, 1), rnode(GIN, 89, 16, 49) },
  { pnode(GPIO, 89, 16, DATAOUT, 0, 2), rnode(GIN, 89, 16, 50) },
  { pnode(GPIO, 89, 16, DATAOUT, 0, 3), rnode(GIN, 89, 16, 51) },
  { pnode(GPIO, 89, 16, DATAOUT, 0, 4), rnode(GIN, 89, 16, 52) },
  { pnode(GPIO, 89, 16, OEIN, 0, 0), rnode(GOUT, 89, 16, 53) },
  { pnode(GPIO, 89, 16, OEIN, 0, 1), rnode(GOUT, 89, 16, 55) },
  { pnode(GPIO, 89, 16, BSLIPMAX, 0, -1), rnode(GIN, 89, 16, 47) },
  { pnode(GPIO, 89, 16, CEIN, 0, -1), rnode(GOUT, 89, 16, 46) },
  { pnode(GPIO, 89, 16, CEOUT, 0, -1), rnode(GOUT, 89, 16, 47) },
  { pnode(GPIO, 89, 16, ACLR, 0, -1), rnode(GOUT, 89, 16, 48) },
  { pnode(GPIO, 89, 16, SCLR, 0, -1), rnode(GOUT, 89, 16, 54) },
  { pnode(GPIO, 89, 16, CLKIN_IN, 0, 0), rnode(DCMUX, 89, 16, 14) },
  { pnode(GPIO, 89, 16, CLKIN_IN, 0, 1), rnode(DCMUX, 89, 16, 15) },
  { pnode(GPIO, 89, 16, CLKIN_OUT, 0, 0), rnode(DCMUX, 89, 16, 12) },
  { pnode(GPIO, 89, 16, CLKIN_OUT, 0, 1), rnode(DCMUX, 89, 16, 13) },
  { pnode(GPIO, 89, 16, DATAIN, 1, 0), rnode(GOUT, 89, 16, 39) },
  { pnode(GPIO, 89, 16, DATAIN, 1, 1), rnode(GOUT, 89, 16, 40) },
  { pnode(GPIO, 89, 16, DATAIN, 1, 2), rnode(GOUT, 89, 16, 41) },
  { pnode(GPIO, 89, 16, DATAIN, 1, 3), rnode(GOUT, 89, 16, 42) },
  { pnode(GPIO, 89, 16, DATAOUT, 1, 0), rnode(GIN, 89, 16, 42) },
  { pnode(GPIO, 89, 16, DATAOUT, 1, 1), rnode(GIN, 89, 16, 43) },
  { pnode(GPIO, 89, 16, DATAOUT, 1, 2), rnode(GIN, 89, 16, 44) },
  { pnode(GPIO, 89, 16, DATAOUT, 1, 3), rnode(GIN, 89, 16, 45) },
  { pnode(GPIO, 89, 16, DATAOUT, 1, 4), rnode(GIN, 89, 16, 46) },
  { pnode(GPIO, 89, 16, OEIN, 1, 0), rnode(GOUT, 89, 16, 43) },
  { pnode(GPIO, 89, 16, OEIN, 1, 1), rnode(GOUT, 89, 16, 44) },
  { pnode(GPIO, 89, 16, BSLIPMAX, 1, -1), rnode(GIN, 89, 16, 41) },
  { pnode(GPIO, 89, 16, CEIN, 1, -1), rnode(GOUT, 89, 16, 36) },
  { pnode(GPIO, 89, 16, CEOUT, 1, -1), rnode(GOUT, 89, 16, 37) },
  { pnode(GPIO, 89, 16, ACLR, 1, -1), rnode(GOUT, 89, 16, 38) },
  { pnode(GPIO, 89, 16, SCLR, 1, -1), rnode(GOUT, 89, 16, 45) },
  { pnode(GPIO, 89, 16, CLKIN_IN, 1, 0), rnode(DCMUX, 89, 16, 10) },
  { pnode(GPIO, 89, 16, CLKIN_IN, 1, 1), rnode(DCMUX, 89, 16, 11) },
  { pnode(GPIO, 89, 16, CLKIN_OUT, 1, 0), rnode(DCMUX, 89, 16, 8) },
  { pnode(GPIO, 89, 16, CLKIN_OUT, 1, 1), rnode(DCMUX, 89, 16, 9) },
  { pnode(GPIO, 89, 16, DATAIN, 2, 0), rnode(GOUT, 89, 16, 29) },
  { pnode(GPIO, 89, 16, DATAIN, 2, 1), rnode(GOUT, 89, 16, 30) },
  { pnode(GPIO, 89, 16, DATAIN, 2, 2), rnode(GOUT, 89, 16, 31) },
  { pnode(GPIO, 89, 16, DATAIN, 2, 3), rnode(GOUT, 89, 16, 32) },
  { pnode(GPIO, 89, 16, DATAOUT, 2, 0), rnode(GIN, 89, 16, 36) },
  { pnode(GPIO, 89, 16, DATAOUT, 2, 1), rnode(GIN, 89, 16, 37) },
  { pnode(GPIO, 89, 16, DATAOUT, 2, 2), rnode(GIN, 89, 16, 40) },
  { pnode(GPIO, 89, 16, DATAOUT, 2, 3), rnode(GIN, 89, 16, 38) },
  { pnode(GPIO, 89, 16, DATAOUT, 2, 4), rnode(GIN, 89, 16, 39) },
  { pnode(GPIO, 89, 16, OEIN, 2, 0), rnode(GOUT, 89, 16, 33) },
  { pnode(GPIO, 89, 16, OEIN, 2, 1), rnode(GOUT, 89, 16, 34) },
  { pnode(GPIO, 89, 16, BSLIPMAX, 2, -1), rnode(GIN, 89, 16, 35) },
  { pnode(GPIO, 89, 16, CEIN, 2, -1), rnode(GOUT, 89, 16, 26) },
  { pnode(GPIO, 89, 16, CEOUT, 2, -1), rnode(GOUT, 89, 16, 27) },
  { pnode(GPIO, 89, 16, ACLR, 2, -1), rnode(GOUT, 89, 16, 28) },
  { pnode(GPIO, 89, 16, SCLR, 2, -1), rnode(GOUT, 89, 16, 35) },
  { pnode(GPIO, 89, 16, CLKIN_IN, 2, 0), rnode(DCMUX, 89, 16, 6) },
  { pnode(GPIO, 89, 16, CLKIN_IN, 2, 1), rnode(DCMUX, 89, 16, 7) },
  { pnode(GPIO, 89, 16, CLKIN_OUT, 2, 0), rnode(DCMUX, 89, 16, 4) },
  { pnode(GPIO, 89, 16, CLKIN_OUT, 2, 1), rnode(DCMUX, 89, 16, 5) },
  { pnode(GPIO, 89, 16, DATAIN, 3, 0), rnode(GOUT, 89, 16, 19) },
  { pnode(GPIO, 89, 16, DATAIN, 3, 1), rnode(GOUT, 89, 16, 20) },
  { pnode(GPIO, 89, 16, DATAIN, 3, 2), rnode(GOUT, 89, 16, 21) },
  { pnode(GPIO, 89, 16, DATAIN, 3, 3), rnode(GOUT, 89, 16, 22) },
  { pnode(GPIO, 89, 16, DATAOUT, 3, 0), rnode(GIN, 89, 16, 30) },
  { pnode(GPIO, 89, 16, DATAOUT, 3, 1), rnode(GIN, 89, 16, 31) },
  { pnode(GPIO, 89, 16, DATAOUT, 3, 2), rnode(GIN, 89, 16, 32) },
  { pnode(GPIO, 89, 16, DATAOUT, 3, 3), rnode(GIN, 89, 16, 33) },
  { pnode(GPIO, 89, 16, DATAOUT, 3, 4), rnode(GIN, 89, 16, 34) },
  { pnode(GPIO, 89, 16, OEIN, 3, 0), rnode(GOUT, 89, 16, 23) },
  { pnode(GPIO, 89, 16, OEIN, 3, 1), rnode(GOUT, 89, 16, 24) },
  { pnode(GPIO, 89, 16, BSLIPMAX, 3, -1), rnode(GIN, 89, 16, 29) },
  { pnode(GPIO, 89, 16, CEIN, 3, -1), rnode(GOUT, 89, 16, 16) },
  { pnode(GPIO, 89, 16, CEOUT, 3, -1), rnode(GOUT, 89, 16, 17) },
  { pnode(GPIO, 89, 16, ACLR, 3, -1), rnode(GOUT, 89, 16, 18) },
  { pnode(GPIO, 89, 16, SCLR, 3, -1), rnode(GOUT, 89, 16, 25) },
  { pnode(GPIO, 89, 16, CLKIN_IN, 3, 0), rnode(DCMUX, 89, 16, 2) },
  { pnode(GPIO, 89, 16, CLKIN_IN, 3, 1), rnode(DCMUX, 89, 16, 3) },
  { pnode(GPIO, 89, 16, CLKIN_OUT, 3, 0), rnode(DCMUX, 89, 16, 0) },
  { pnode(GPIO, 89, 16, CLKIN_OUT, 3, 1), rnode(DCMUX, 89, 16, 1) },
  { pnode(GPIO, 89, 20, DATAIN, 0, 0), rnode(GOUT, 89, 20, 49) },
  { pnode(GPIO, 89, 20, DATAIN, 0, 1), rnode(GOUT, 89, 20, 50) },
  { pnode(GPIO, 89, 20, DATAIN, 0, 2), rnode(GOUT, 89, 20, 51) },
  { pnode(GPIO, 89, 20, DATAIN, 0, 3), rnode(GOUT, 89, 20, 52) },
  { pnode(GPIO, 89, 20, DATAOUT, 0, 0), rnode(GIN, 89, 20, 48) },
  { pnode(GPIO, 89, 20, DATAOUT, 0, 1), rnode(GIN, 89, 20, 49) },
  { pnode(GPIO, 89, 20, DATAOUT, 0, 2), rnode(GIN, 89, 20, 50) },
  { pnode(GPIO, 89, 20, DATAOUT, 0, 3), rnode(GIN, 89, 20, 51) },
  { pnode(GPIO, 89, 20, DATAOUT, 0, 4), rnode(GIN, 89, 20, 52) },
  { pnode(GPIO, 89, 20, OEIN, 0, 0), rnode(GOUT, 89, 20, 53) },
  { pnode(GPIO, 89, 20, OEIN, 0, 1), rnode(GOUT, 89, 20, 54) },
  { pnode(GPIO, 89, 20, BSLIPMAX, 0, -1), rnode(GIN, 89, 20, 47) },
  { pnode(GPIO, 89, 20, CEIN, 0, -1), rnode(GOUT, 89, 20, 46) },
  { pnode(GPIO, 89, 20, CEOUT, 0, -1), rnode(GOUT, 89, 20, 47) },
  { pnode(GPIO, 89, 20, ACLR, 0, -1), rnode(GOUT, 89, 20, 48) },
  { pnode(GPIO, 89, 20, SCLR, 0, -1), rnode(GOUT, 89, 20, 55) },
  { pnode(GPIO, 89, 20, CLKIN_IN, 0, 0), rnode(DCMUX, 89, 20, 14) },
  { pnode(GPIO, 89, 20, CLKIN_IN, 0, 1), rnode(DCMUX, 89, 20, 15) },
  { pnode(GPIO, 89, 20, CLKIN_OUT, 0, 0), rnode(DCMUX, 89, 20, 12) },
  { pnode(GPIO, 89, 20, CLKIN_OUT, 0, 1), rnode(DCMUX, 89, 20, 13) },
  { pnode(GPIO, 89, 20, DATAIN, 1, 0), rnode(GOUT, 89, 20, 39) },
  { pnode(GPIO, 89, 20, DATAIN, 1, 1), rnode(GOUT, 89, 20, 40) },
  { pnode(GPIO, 89, 20, DATAIN, 1, 2), rnode(GOUT, 89, 20, 41) },
  { pnode(GPIO, 89, 20, DATAIN, 1, 3), rnode(GOUT, 89, 20, 42) },
  { pnode(GPIO, 89, 20, DATAOUT, 1, 0), rnode(GIN, 89, 20, 42) },
  { pnode(GPIO, 89, 20, DATAOUT, 1, 1), rnode(GIN, 89, 20, 43) },
  { pnode(GPIO, 89, 20, DATAOUT, 1, 2), rnode(GIN, 89, 20, 44) },
  { pnode(GPIO, 89, 20, DATAOUT, 1, 3), rnode(GIN, 89, 20, 45) },
  { pnode(GPIO, 89, 20, DATAOUT, 1, 4), rnode(GIN, 89, 20, 46) },
  { pnode(GPIO, 89, 20, OEIN, 1, 0), rnode(GOUT, 89, 20, 43) },
  { pnode(GPIO, 89, 20, OEIN, 1, 1), rnode(GOUT, 89, 20, 44) },
  { pnode(GPIO, 89, 20, BSLIPMAX, 1, -1), rnode(GIN, 89, 20, 41) },
  { pnode(GPIO, 89, 20, CEIN, 1, -1), rnode(GOUT, 89, 20, 36) },
  { pnode(GPIO, 89, 20, CEOUT, 1, -1), rnode(GOUT, 89, 20, 37) },
  { pnode(GPIO, 89, 20, ACLR, 1, -1), rnode(GOUT, 89, 20, 38) },
  { pnode(GPIO, 89, 20, SCLR, 1, -1), rnode(GOUT, 89, 20, 45) },
  { pnode(GPIO, 89, 20, CLKIN_IN, 1, 0), rnode(DCMUX, 89, 20, 10) },
  { pnode(GPIO, 89, 20, CLKIN_IN, 1, 1), rnode(DCMUX, 89, 20, 11) },
  { pnode(GPIO, 89, 20, CLKIN_OUT, 1, 0), rnode(DCMUX, 89, 20, 8) },
  { pnode(GPIO, 89, 20, CLKIN_OUT, 1, 1), rnode(DCMUX, 89, 20, 9) },
  { pnode(GPIO, 89, 20, DATAIN, 2, 0), rnode(GOUT, 89, 20, 29) },
  { pnode(GPIO, 89, 20, DATAIN, 2, 1), rnode(GOUT, 89, 20, 30) },
  { pnode(GPIO, 89, 20, DATAIN, 2, 2), rnode(GOUT, 89, 20, 32) },
  { pnode(GPIO, 89, 20, DATAIN, 2, 3), rnode(GOUT, 89, 20, 33) },
  { pnode(GPIO, 89, 20, DATAOUT, 2, 0), rnode(GIN, 89, 20, 36) },
  { pnode(GPIO, 89, 20, DATAOUT, 2, 1), rnode(GIN, 89, 20, 37) },
  { pnode(GPIO, 89, 20, DATAOUT, 2, 2), rnode(GIN, 89, 20, 40) },
  { pnode(GPIO, 89, 20, DATAOUT, 2, 3), rnode(GIN, 89, 20, 38) },
  { pnode(GPIO, 89, 20, DATAOUT, 2, 4), rnode(GIN, 89, 20, 39) },
  { pnode(GPIO, 89, 20, OEIN, 2, 0), rnode(GOUT, 89, 20, 34) },
  { pnode(GPIO, 89, 20, OEIN, 2, 1), rnode(GOUT, 89, 20, 35) },
  { pnode(GPIO, 89, 20, BSLIPMAX, 2, -1), rnode(GIN, 89, 20, 35) },
  { pnode(GPIO, 89, 20, CEIN, 2, -1), rnode(GOUT, 89, 20, 26) },
  { pnode(GPIO, 89, 20, CEOUT, 2, -1), rnode(GOUT, 89, 20, 27) },
  { pnode(GPIO, 89, 20, ACLR, 2, -1), rnode(GOUT, 89, 20, 28) },
  { pnode(GPIO, 89, 20, SCLR, 2, -1), rnode(GOUT, 89, 20, 31) },
  { pnode(GPIO, 89, 20, CLKIN_IN, 2, 0), rnode(DCMUX, 89, 20, 6) },
  { pnode(GPIO, 89, 20, CLKIN_IN, 2, 1), rnode(DCMUX, 89, 20, 7) },
  { pnode(GPIO, 89, 20, CLKIN_OUT, 2, 0), rnode(DCMUX, 89, 20, 4) },
  { pnode(GPIO, 89, 20, CLKIN_OUT, 2, 1), rnode(DCMUX, 89, 20, 5) },
  { pnode(GPIO, 89, 20, DATAIN, 3, 0), rnode(GOUT, 89, 20, 19) },
  { pnode(GPIO, 89, 20, DATAIN, 3, 1), rnode(GOUT, 89, 20, 20) },
  { pnode(GPIO, 89, 20, DATAIN, 3, 2), rnode(GOUT, 89, 20, 21) },
  { pnode(GPIO, 89, 20, DATAIN, 3, 3), rnode(GOUT, 89, 20, 22) },
  { pnode(GPIO, 89, 20, DATAOUT, 3, 0), rnode(GIN, 89, 20, 30) },
  { pnode(GPIO, 89, 20, DATAOUT, 3, 1), rnode(GIN, 89, 20, 31) },
  { pnode(GPIO, 89, 20, DATAOUT, 3, 2), rnode(GIN, 89, 20, 32) },
  { pnode(GPIO, 89, 20, DATAOUT, 3, 3), rnode(GIN, 89, 20, 33) },
  { pnode(GPIO, 89, 20, DATAOUT, 3, 4), rnode(GIN, 89, 20, 34) },
  { pnode(GPIO, 89, 20, OEIN, 3, 0), rnode(GOUT, 89, 20, 23) },
  { pnode(GPIO, 89, 20, OEIN, 3, 1), rnode(GOUT, 89, 20, 24) },
  { pnode(GPIO, 89, 20, BSLIPMAX, 3, -1), rnode(GIN, 89, 20, 29) },
  { pnode(GPIO, 89, 20, CEIN, 3, -1), rnode(GOUT, 89, 20, 16) },
  { pnode(GPIO, 89, 20, CEOUT, 3, -1), rnode(GOUT, 89, 20, 17) },
  { pnode(GPIO, 89, 20, ACLR, 3, -1), rnode(GOUT, 89, 20, 18) },
  { pnode(GPIO, 89, 20, SCLR, 3, -1), rnode(GOUT, 89, 20, 25) },
  { pnode(GPIO, 89, 20, CLKIN_IN, 3, 0), rnode(DCMUX, 89, 20, 2) },
  { pnode(GPIO, 89, 20, CLKIN_IN, 3, 1), rnode(DCMUX, 89, 20, 3) },
  { pnode(GPIO, 89, 20, CLKIN_OUT, 3, 0), rnode(DCMUX, 89, 20, 0) },
  { pnode(GPIO, 89, 20, CLKIN_OUT, 3, 1), rnode(DCMUX, 89, 20, 1) },
  { pnode(GPIO, 89, 21, DATAIN, 0, 0), rnode(GOUT, 89, 21, 49) },
  { pnode(GPIO, 89, 21, DATAIN, 0, 1), rnode(GOUT, 89, 21, 50) },
  { pnode(GPIO, 89, 21, DATAIN, 0, 2), rnode(GOUT, 89, 21, 51) },
  { pnode(GPIO, 89, 21, DATAIN, 0, 3), rnode(GOUT, 89, 21, 52) },
  { pnode(GPIO, 89, 21, DATAOUT, 0, 0), rnode(GIN, 89, 21, 48) },
  { pnode(GPIO, 89, 21, DATAOUT, 0, 1), rnode(GIN, 89, 21, 49) },
  { pnode(GPIO, 89, 21, DATAOUT, 0, 2), rnode(GIN, 89, 21, 50) },
  { pnode(GPIO, 89, 21, DATAOUT, 0, 3), rnode(GIN, 89, 21, 51) },
  { pnode(GPIO, 89, 21, DATAOUT, 0, 4), rnode(GIN, 89, 21, 52) },
  { pnode(GPIO, 89, 21, OEIN, 0, 0), rnode(GOUT, 89, 21, 53) },
  { pnode(GPIO, 89, 21, OEIN, 0, 1), rnode(GOUT, 89, 21, 54) },
  { pnode(GPIO, 89, 21, BSLIPMAX, 0, -1), rnode(GIN, 89, 21, 47) },
  { pnode(GPIO, 89, 21, CEIN, 0, -1), rnode(GOUT, 89, 21, 46) },
  { pnode(GPIO, 89, 21, CEOUT, 0, -1), rnode(GOUT, 89, 21, 47) },
  { pnode(GPIO, 89, 21, ACLR, 0, -1), rnode(GOUT, 89, 21, 48) },
  { pnode(GPIO, 89, 21, SCLR, 0, -1), rnode(GOUT, 89, 21, 55) },
  { pnode(GPIO, 89, 21, CLKIN_IN, 0, 0), rnode(DCMUX, 89, 21, 14) },
  { pnode(GPIO, 89, 21, CLKIN_IN, 0, 1), rnode(DCMUX, 89, 21, 15) },
  { pnode(GPIO, 89, 21, CLKIN_OUT, 0, 0), rnode(DCMUX, 89, 21, 12) },
  { pnode(GPIO, 89, 21, CLKIN_OUT, 0, 1), rnode(DCMUX, 89, 21, 13) },
  { pnode(GPIO, 89, 21, DATAIN, 1, 0), rnode(GOUT, 89, 21, 39) },
  { pnode(GPIO, 89, 21, DATAIN, 1, 1), rnode(GOUT, 89, 21, 40) },
  { pnode(GPIO, 89, 21, DATAIN, 1, 2), rnode(GOUT, 89, 21, 41) },
  { pnode(GPIO, 89, 21, DATAIN, 1, 3), rnode(GOUT, 89, 21, 42) },
  { pnode(GPIO, 89, 21, DATAOUT, 1, 0), rnode(GIN, 89, 21, 42) },
  { pnode(GPIO, 89, 21, DATAOUT, 1, 1), rnode(GIN, 89, 21, 43) },
  { pnode(GPIO, 89, 21, DATAOUT, 1, 2), rnode(GIN, 89, 21, 44) },
  { pnode(GPIO, 89, 21, DATAOUT, 1, 3), rnode(GIN, 89, 21, 45) },
  { pnode(GPIO, 89, 21, DATAOUT, 1, 4), rnode(GIN, 89, 21, 46) },
  { pnode(GPIO, 89, 21, OEIN, 1, 0), rnode(GOUT, 89, 21, 43) },
  { pnode(GPIO, 89, 21, OEIN, 1, 1), rnode(GOUT, 89, 21, 44) },
  { pnode(GPIO, 89, 21, BSLIPMAX, 1, -1), rnode(GIN, 89, 21, 41) },
  { pnode(GPIO, 89, 21, CEIN, 1, -1), rnode(GOUT, 89, 21, 36) },
  { pnode(GPIO, 89, 21, CEOUT, 1, -1), rnode(GOUT, 89, 21, 37) },
  { pnode(GPIO, 89, 21, ACLR, 1, -1), rnode(GOUT, 89, 21, 38) },
  { pnode(GPIO, 89, 21, SCLR, 1, -1), rnode(GOUT, 89, 21, 45) },
  { pnode(GPIO, 89, 21, CLKIN_IN, 1, 0), rnode(DCMUX, 89, 21, 10) },
  { pnode(GPIO, 89, 21, CLKIN_IN, 1, 1), rnode(DCMUX, 89, 21, 11) },
  { pnode(GPIO, 89, 21, CLKIN_OUT, 1, 0), rnode(DCMUX, 89, 21, 8) },
  { pnode(GPIO, 89, 21, CLKIN_OUT, 1, 1), rnode(DCMUX, 89, 21, 9) },
  { pnode(GPIO, 89, 21, DATAIN, 2, 0), rnode(GOUT, 89, 21, 29) },
  { pnode(GPIO, 89, 21, DATAIN, 2, 1), rnode(GOUT, 89, 21, 30) },
  { pnode(GPIO, 89, 21, DATAIN, 2, 2), rnode(GOUT, 89, 21, 31) },
  { pnode(GPIO, 89, 21, DATAIN, 2, 3), rnode(GOUT, 89, 21, 32) },
  { pnode(GPIO, 89, 21, DATAOUT, 2, 0), rnode(GIN, 89, 21, 36) },
  { pnode(GPIO, 89, 21, DATAOUT, 2, 1), rnode(GIN, 89, 21, 37) },
  { pnode(GPIO, 89, 21, DATAOUT, 2, 2), rnode(GIN, 89, 21, 40) },
  { pnode(GPIO, 89, 21, DATAOUT, 2, 3), rnode(GIN, 89, 21, 38) },
  { pnode(GPIO, 89, 21, DATAOUT, 2, 4), rnode(GIN, 89, 21, 39) },
  { pnode(GPIO, 89, 21, OEIN, 2, 0), rnode(GOUT, 89, 21, 33) },
  { pnode(GPIO, 89, 21, OEIN, 2, 1), rnode(GOUT, 89, 21, 34) },
  { pnode(GPIO, 89, 21, BSLIPMAX, 2, -1), rnode(GIN, 89, 21, 35) },
  { pnode(GPIO, 89, 21, CEIN, 2, -1), rnode(GOUT, 89, 21, 26) },
  { pnode(GPIO, 89, 21, CEOUT, 2, -1), rnode(GOUT, 89, 21, 27) },
  { pnode(GPIO, 89, 21, ACLR, 2, -1), rnode(GOUT, 89, 21, 28) },
  { pnode(GPIO, 89, 21, SCLR, 2, -1), rnode(GOUT, 89, 21, 35) },
  { pnode(GPIO, 89, 21, CLKIN_IN, 2, 0), rnode(DCMUX, 89, 21, 6) },
  { pnode(GPIO, 89, 21, CLKIN_IN, 2, 1), rnode(DCMUX, 89, 21, 7) },
  { pnode(GPIO, 89, 21, CLKIN_OUT, 2, 0), rnode(DCMUX, 89, 21, 4) },
  { pnode(GPIO, 89, 21, CLKIN_OUT, 2, 1), rnode(DCMUX, 89, 21, 5) },
  { pnode(GPIO, 89, 21, DATAIN, 3, 0), rnode(GOUT, 89, 21, 19) },
  { pnode(GPIO, 89, 21, DATAIN, 3, 1), rnode(GOUT, 89, 21, 20) },
  { pnode(GPIO, 89, 21, DATAIN, 3, 2), rnode(GOUT, 89, 21, 21) },
  { pnode(GPIO, 89, 21, DATAIN, 3, 3), rnode(GOUT, 89, 21, 22) },
  { pnode(GPIO, 89, 21, DATAOUT, 3, 0), rnode(GIN, 89, 21, 30) },
  { pnode(GPIO, 89, 21, DATAOUT, 3, 1), rnode(GIN, 89, 21, 31) },
  { pnode(GPIO, 89, 21, DATAOUT, 3, 2), rnode(GIN, 89, 21, 32) },
  { pnode(GPIO, 89, 21, DATAOUT, 3, 3), rnode(GIN, 89, 21, 33) },
  { pnode(GPIO, 89, 21, DATAOUT, 3, 4), rnode(GIN, 89, 21, 34) },
  { pnode(GPIO, 89, 21, OEIN, 3, 0), rnode(GOUT, 89, 21, 23) },
  { pnode(GPIO, 89, 21, OEIN, 3, 1), rnode(GOUT, 89, 21, 24) },
  { pnode(GPIO, 89, 21, BSLIPMAX, 3, -1), rnode(GIN, 89, 21, 29) },
  { pnode(GPIO, 89, 21, CEIN, 3, -1), rnode(GOUT, 89, 21, 16) },
  { pnode(GPIO, 89, 21, CEOUT, 3, -1), rnode(GOUT, 89, 21, 17) },
  { pnode(GPIO, 89, 21, ACLR, 3, -1), rnode(GOUT, 89, 21, 18) },
  { pnode(GPIO, 89, 21, SCLR, 3, -1), rnode(GOUT, 89, 21, 25) },
  { pnode(GPIO, 89, 21, CLKIN_IN, 3, 0), rnode(DCMUX, 89, 21, 2) },
  { pnode(GPIO, 89, 21, CLKIN_IN, 3, 1), rnode(DCMUX, 89, 21, 3) },
  { pnode(GPIO, 89, 21, CLKIN_OUT, 3, 0), rnode(DCMUX, 89, 21, 0) },
  { pnode(GPIO, 89, 21, CLKIN_OUT, 3, 1), rnode(DCMUX, 89, 21, 1) },
  { pnode(GPIO, 89, 23, DATAIN, 0, 0), rnode(GOUT, 89, 23, 49) },
  { pnode(GPIO, 89, 23, DATAIN, 0, 1), rnode(GOUT, 89, 23, 50) },
  { pnode(GPIO, 89, 23, DATAIN, 0, 2), rnode(GOUT, 89, 23, 51) },
  { pnode(GPIO, 89, 23, DATAIN, 0, 3), rnode(GOUT, 89, 23, 52) },
  { pnode(GPIO, 89, 23, DATAOUT, 0, 0), rnode(GIN, 89, 23, 48) },
  { pnode(GPIO, 89, 23, DATAOUT, 0, 1), rnode(GIN, 89, 23, 49) },
  { pnode(GPIO, 89, 23, DATAOUT, 0, 2), rnode(GIN, 89, 23, 50) },
  { pnode(GPIO, 89, 23, DATAOUT, 0, 3), rnode(GIN, 89, 23, 51) },
  { pnode(GPIO, 89, 23, DATAOUT, 0, 4), rnode(GIN, 89, 23, 52) },
  { pnode(GPIO, 89, 23, OEIN, 0, 0), rnode(GOUT, 89, 23, 53) },
  { pnode(GPIO, 89, 23, OEIN, 0, 1), rnode(GOUT, 89, 23, 54) },
  { pnode(GPIO, 89, 23, BSLIPMAX, 0, -1), rnode(GIN, 89, 23, 47) },
  { pnode(GPIO, 89, 23, CEIN, 0, -1), rnode(GOUT, 89, 23, 46) },
  { pnode(GPIO, 89, 23, CEOUT, 0, -1), rnode(GOUT, 89, 23, 47) },
  { pnode(GPIO, 89, 23, ACLR, 0, -1), rnode(GOUT, 89, 23, 48) },
  { pnode(GPIO, 89, 23, SCLR, 0, -1), rnode(GOUT, 89, 23, 55) },
  { pnode(GPIO, 89, 23, CLKIN_IN, 0, 0), rnode(DCMUX, 89, 23, 14) },
  { pnode(GPIO, 89, 23, CLKIN_IN, 0, 1), rnode(DCMUX, 89, 23, 15) },
  { pnode(GPIO, 89, 23, CLKIN_OUT, 0, 0), rnode(DCMUX, 89, 23, 12) },
  { pnode(GPIO, 89, 23, CLKIN_OUT, 0, 1), rnode(DCMUX, 89, 23, 13) },
  { pnode(GPIO, 89, 23, DATAIN, 1, 0), rnode(GOUT, 89, 23, 39) },
  { pnode(GPIO, 89, 23, DATAIN, 1, 1), rnode(GOUT, 89, 23, 40) },
  { pnode(GPIO, 89, 23, DATAIN, 1, 2), rnode(GOUT, 89, 23, 41) },
  { pnode(GPIO, 89, 23, DATAIN, 1, 3), rnode(GOUT, 89, 23, 42) },
  { pnode(GPIO, 89, 23, DATAOUT, 1, 0), rnode(GIN, 89, 23, 42) },
  { pnode(GPIO, 89, 23, DATAOUT, 1, 1), rnode(GIN, 89, 23, 43) },
  { pnode(GPIO, 89, 23, DATAOUT, 1, 2), rnode(GIN, 89, 23, 44) },
  { pnode(GPIO, 89, 23, DATAOUT, 1, 3), rnode(GIN, 89, 23, 45) },
  { pnode(GPIO, 89, 23, DATAOUT, 1, 4), rnode(GIN, 89, 23, 46) },
  { pnode(GPIO, 89, 23, OEIN, 1, 0), rnode(GOUT, 89, 23, 43) },
  { pnode(GPIO, 89, 23, OEIN, 1, 1), rnode(GOUT, 89, 23, 44) },
  { pnode(GPIO, 89, 23, BSLIPMAX, 1, -1), rnode(GIN, 89, 23, 41) },
  { pnode(GPIO, 89, 23, CEIN, 1, -1), rnode(GOUT, 89, 23, 36) },
  { pnode(GPIO, 89, 23, CEOUT, 1, -1), rnode(GOUT, 89, 23, 37) },
  { pnode(GPIO, 89, 23, ACLR, 1, -1), rnode(GOUT, 89, 23, 38) },
  { pnode(GPIO, 89, 23, SCLR, 1, -1), rnode(GOUT, 89, 23, 45) },
  { pnode(GPIO, 89, 23, CLKIN_IN, 1, 0), rnode(DCMUX, 89, 23, 10) },
  { pnode(GPIO, 89, 23, CLKIN_IN, 1, 1), rnode(DCMUX, 89, 23, 11) },
  { pnode(GPIO, 89, 23, CLKIN_OUT, 1, 0), rnode(DCMUX, 89, 23, 8) },
  { pnode(GPIO, 89, 23, CLKIN_OUT, 1, 1), rnode(DCMUX, 89, 23, 9) },
  { pnode(GPIO, 89, 23, DATAIN, 2, 0), rnode(GOUT, 89, 23, 29) },
  { pnode(GPIO, 89, 23, DATAIN, 2, 1), rnode(GOUT, 89, 23, 30) },
  { pnode(GPIO, 89, 23, DATAIN, 2, 2), rnode(GOUT, 89, 23, 31) },
  { pnode(GPIO, 89, 23, DATAIN, 2, 3), rnode(GOUT, 89, 23, 32) },
  { pnode(GPIO, 89, 23, DATAOUT, 2, 0), rnode(GIN, 89, 23, 36) },
  { pnode(GPIO, 89, 23, DATAOUT, 2, 1), rnode(GIN, 89, 23, 37) },
  { pnode(GPIO, 89, 23, DATAOUT, 2, 2), rnode(GIN, 89, 23, 40) },
  { pnode(GPIO, 89, 23, DATAOUT, 2, 3), rnode(GIN, 89, 23, 38) },
  { pnode(GPIO, 89, 23, DATAOUT, 2, 4), rnode(GIN, 89, 23, 39) },
  { pnode(GPIO, 89, 23, OEIN, 2, 0), rnode(GOUT, 89, 23, 33) },
  { pnode(GPIO, 89, 23, OEIN, 2, 1), rnode(GOUT, 89, 23, 34) },
  { pnode(GPIO, 89, 23, BSLIPMAX, 2, -1), rnode(GIN, 89, 23, 35) },
  { pnode(GPIO, 89, 23, CEIN, 2, -1), rnode(GOUT, 89, 23, 26) },
  { pnode(GPIO, 89, 23, CEOUT, 2, -1), rnode(GOUT, 89, 23, 27) },
  { pnode(GPIO, 89, 23, ACLR, 2, -1), rnode(GOUT, 89, 23, 28) },
  { pnode(GPIO, 89, 23, SCLR, 2, -1), rnode(GOUT, 89, 23, 35) },
  { pnode(GPIO, 89, 23, CLKIN_IN, 2, 0), rnode(DCMUX, 89, 23, 6) },
  { pnode(GPIO, 89, 23, CLKIN_IN, 2, 1), rnode(DCMUX, 89, 23, 7) },
  { pnode(GPIO, 89, 23, CLKIN_OUT, 2, 0), rnode(DCMUX, 89, 23, 4) },
  { pnode(GPIO, 89, 23, CLKIN_OUT, 2, 1), rnode(DCMUX, 89, 23, 5) },
  { pnode(GPIO, 89, 23, DATAIN, 3, 0), rnode(GOUT, 89, 23, 19) },
  { pnode(GPIO, 89, 23, DATAIN, 3, 1), rnode(GOUT, 89, 23, 20) },
  { pnode(GPIO, 89, 23, DATAIN, 3, 2), rnode(GOUT, 89, 23, 21) },
  { pnode(GPIO, 89, 23, DATAIN, 3, 3), rnode(GOUT, 89, 23, 22) },
  { pnode(GPIO, 89, 23, DATAOUT, 3, 0), rnode(GIN, 89, 23, 30) },
  { pnode(GPIO, 89, 23, DATAOUT, 3, 1), rnode(GIN, 89, 23, 31) },
  { pnode(GPIO, 89, 23, DATAOUT, 3, 2), rnode(GIN, 89, 23, 32) },
  { pnode(GPIO, 89, 23, DATAOUT, 3, 3), rnode(GIN, 89, 23, 33) },
  { pnode(GPIO, 89, 23, DATAOUT, 3, 4), rnode(GIN, 89, 23, 34) },
  { pnode(GPIO, 89, 23, OEIN, 3, 0), rnode(GOUT, 89, 23, 23) },
  { pnode(GPIO, 89, 23, OEIN, 3, 1), rnode(GOUT, 89, 23, 24) },
  { pnode(GPIO, 89, 23, BSLIPMAX, 3, -1), rnode(GIN, 89, 23, 29) },
  { pnode(GPIO, 89, 23, CEIN, 3, -1), rnode(GOUT, 89, 23, 16) },
  { pnode(GPIO, 89, 23, CEOUT, 3, -1), rnode(GOUT, 89, 23, 17) },
  { pnode(GPIO, 89, 23, ACLR, 3, -1), rnode(GOUT, 89, 23, 18) },
  { pnode(GPIO, 89, 23, SCLR, 3, -1), rnode(GOUT, 89, 23, 25) },
  { pnode(GPIO, 89, 23, CLKIN_IN, 3, 0), rnode(DCMUX, 89, 23, 2) },
  { pnode(GPIO, 89, 23, CLKIN_IN, 3, 1), rnode(DCMUX, 89, 23, 3) },
  { pnode(GPIO, 89, 23, CLKIN_OUT, 3, 0), rnode(DCMUX, 89, 23, 0) },
  { pnode(GPIO, 89, 23, CLKIN_OUT, 3, 1), rnode(DCMUX, 89, 23, 1) },
  { pnode(GPIO, 89, 25, DATAIN, 0, 0), rnode(GOUT, 89, 25, 49) },
  { pnode(GPIO, 89, 25, DATAIN, 0, 1), rnode(GOUT, 89, 25, 50) },
  { pnode(GPIO, 89, 25, DATAIN, 0, 2), rnode(GOUT, 89, 25, 51) },
  { pnode(GPIO, 89, 25, DATAIN, 0, 3), rnode(GOUT, 89, 25, 52) },
  { pnode(GPIO, 89, 25, DATAOUT, 0, 0), rnode(GIN, 89, 25, 48) },
  { pnode(GPIO, 89, 25, DATAOUT, 0, 1), rnode(GIN, 89, 25, 49) },
  { pnode(GPIO, 89, 25, DATAOUT, 0, 2), rnode(GIN, 89, 25, 50) },
  { pnode(GPIO, 89, 25, DATAOUT, 0, 3), rnode(GIN, 89, 25, 51) },
  { pnode(GPIO, 89, 25, DATAOUT, 0, 4), rnode(GIN, 89, 25, 52) },
  { pnode(GPIO, 89, 25, OEIN, 0, 0), rnode(GOUT, 89, 25, 53) },
  { pnode(GPIO, 89, 25, OEIN, 0, 1), rnode(GOUT, 89, 25, 55) },
  { pnode(GPIO, 89, 25, BSLIPMAX, 0, -1), rnode(GIN, 89, 25, 47) },
  { pnode(GPIO, 89, 25, CEIN, 0, -1), rnode(GOUT, 89, 25, 46) },
  { pnode(GPIO, 89, 25, CEOUT, 0, -1), rnode(GOUT, 89, 25, 47) },
  { pnode(GPIO, 89, 25, ACLR, 0, -1), rnode(GOUT, 89, 25, 48) },
  { pnode(GPIO, 89, 25, SCLR, 0, -1), rnode(GOUT, 89, 25, 54) },
  { pnode(GPIO, 89, 25, CLKIN_IN, 0, 0), rnode(DCMUX, 89, 25, 14) },
  { pnode(GPIO, 89, 25, CLKIN_IN, 0, 1), rnode(DCMUX, 89, 25, 15) },
  { pnode(GPIO, 89, 25, CLKIN_OUT, 0, 0), rnode(DCMUX, 89, 25, 12) },
  { pnode(GPIO, 89, 25, CLKIN_OUT, 0, 1), rnode(DCMUX, 89, 25, 13) },
  { pnode(GPIO, 89, 25, DATAIN, 1, 0), rnode(GOUT, 89, 25, 39) },
  { pnode(GPIO, 89, 25, DATAIN, 1, 1), rnode(GOUT, 89, 25, 40) },
  { pnode(GPIO, 89, 25, DATAIN, 1, 2), rnode(GOUT, 89, 25, 41) },
  { pnode(GPIO, 89, 25, DATAIN, 1, 3), rnode(GOUT, 89, 25, 42) },
  { pnode(GPIO, 89, 25, DATAOUT, 1, 0), rnode(GIN, 89, 25, 42) },
  { pnode(GPIO, 89, 25, DATAOUT, 1, 1), rnode(GIN, 89, 25, 43) },
  { pnode(GPIO, 89, 25, DATAOUT, 1, 2), rnode(GIN, 89, 25, 44) },
  { pnode(GPIO, 89, 25, DATAOUT, 1, 3), rnode(GIN, 89, 25, 45) },
  { pnode(GPIO, 89, 25, DATAOUT, 1, 4), rnode(GIN, 89, 25, 46) },
  { pnode(GPIO, 89, 25, OEIN, 1, 0), rnode(GOUT, 89, 25, 43) },
  { pnode(GPIO, 89, 25, OEIN, 1, 1), rnode(GOUT, 89, 25, 44) },
  { pnode(GPIO, 89, 25, BSLIPMAX, 1, -1), rnode(GIN, 89, 25, 41) },
  { pnode(GPIO, 89, 25, CEIN, 1, -1), rnode(GOUT, 89, 25, 36) },
  { pnode(GPIO, 89, 25, CEOUT, 1, -1), rnode(GOUT, 89, 25, 37) },
  { pnode(GPIO, 89, 25, ACLR, 1, -1), rnode(GOUT, 89, 25, 38) },
  { pnode(GPIO, 89, 25, SCLR, 1, -1), rnode(GOUT, 89, 25, 45) },
  { pnode(GPIO, 89, 25, CLKIN_IN, 1, 0), rnode(DCMUX, 89, 25, 10) },
  { pnode(GPIO, 89, 25, CLKIN_IN, 1, 1), rnode(DCMUX, 89, 25, 11) },
  { pnode(GPIO, 89, 25, CLKIN_OUT, 1, 0), rnode(DCMUX, 89, 25, 8) },
  { pnode(GPIO, 89, 25, CLKIN_OUT, 1, 1), rnode(DCMUX, 89, 25, 9) },
  { pnode(GPIO, 89, 25, DATAIN, 2, 0), rnode(GOUT, 89, 25, 29) },
  { pnode(GPIO, 89, 25, DATAIN, 2, 1), rnode(GOUT, 89, 25, 30) },
  { pnode(GPIO, 89, 25, DATAIN, 2, 2), rnode(GOUT, 89, 25, 31) },
  { pnode(GPIO, 89, 25, DATAIN, 2, 3), rnode(GOUT, 89, 25, 32) },
  { pnode(GPIO, 89, 25, DATAOUT, 2, 0), rnode(GIN, 89, 25, 36) },
  { pnode(GPIO, 89, 25, DATAOUT, 2, 1), rnode(GIN, 89, 25, 37) },
  { pnode(GPIO, 89, 25, DATAOUT, 2, 2), rnode(GIN, 89, 25, 40) },
  { pnode(GPIO, 89, 25, DATAOUT, 2, 3), rnode(GIN, 89, 25, 38) },
  { pnode(GPIO, 89, 25, DATAOUT, 2, 4), rnode(GIN, 89, 25, 39) },
  { pnode(GPIO, 89, 25, OEIN, 2, 0), rnode(GOUT, 89, 25, 33) },
  { pnode(GPIO, 89, 25, OEIN, 2, 1), rnode(GOUT, 89, 25, 34) },
  { pnode(GPIO, 89, 25, BSLIPMAX, 2, -1), rnode(GIN, 89, 25, 35) },
  { pnode(GPIO, 89, 25, CEIN, 2, -1), rnode(GOUT, 89, 25, 26) },
  { pnode(GPIO, 89, 25, CEOUT, 2, -1), rnode(GOUT, 89, 25, 27) },
  { pnode(GPIO, 89, 25, ACLR, 2, -1), rnode(GOUT, 89, 25, 28) },
  { pnode(GPIO, 89, 25, SCLR, 2, -1), rnode(GOUT, 89, 25, 35) },
  { pnode(GPIO, 89, 25, CLKIN_IN, 2, 0), rnode(DCMUX, 89, 25, 6) },
  { pnode(GPIO, 89, 25, CLKIN_IN, 2, 1), rnode(DCMUX, 89, 25, 7) },
  { pnode(GPIO, 89, 25, CLKIN_OUT, 2, 0), rnode(DCMUX, 89, 25, 4) },
  { pnode(GPIO, 89, 25, CLKIN_OUT, 2, 1), rnode(DCMUX, 89, 25, 5) },
  { pnode(GPIO, 89, 25, DATAIN, 3, 0), rnode(GOUT, 89, 25, 19) },
  { pnode(GPIO, 89, 25, DATAIN, 3, 1), rnode(GOUT, 89, 25, 20) },
  { pnode(GPIO, 89, 25, DATAIN, 3, 2), rnode(GOUT, 89, 25, 21) },
  { pnode(GPIO, 89, 25, DATAIN, 3, 3), rnode(GOUT, 89, 25, 22) },
  { pnode(GPIO, 89, 25, DATAOUT, 3, 0), rnode(GIN, 89, 25, 30) },
  { pnode(GPIO, 89, 25, DATAOUT, 3, 1), rnode(GIN, 89, 25, 31) },
  { pnode(GPIO, 89, 25, DATAOUT, 3, 2), rnode(GIN, 89, 25, 32) },
  { pnode(GPIO, 89, 25, DATAOUT, 3, 3), rnode(GIN, 89, 25, 33) },
  { pnode(GPIO, 89, 25, DATAOUT, 3, 4), rnode(GIN, 89, 25, 34) },
  { pnode(GPIO, 89, 25, OEIN, 3, 0), rnode(GOUT, 89, 25, 23) },
  { pnode(GPIO, 89, 25, OEIN, 3, 1), rnode(GOUT, 89, 25, 24) },
  { pnode(GPIO, 89, 25, BSLIPMAX, 3, -1), rnode(GIN, 89, 25, 29) },
  { pnode(GPIO, 89, 25, CEIN, 3, -1), rnode(GOUT, 89, 25, 16) },
  { pnode(GPIO, 89, 25, CEOUT, 3, -1), rnode(GOUT, 89, 25, 17) },
  { pnode(GPIO, 89, 25, ACLR, 3, -1), rnode(GOUT, 89, 25, 18) },
  { pnode(GPIO, 89, 25, SCLR, 3, -1), rnode(GOUT, 89, 25, 25) },
  { pnode(GPIO, 89, 25, CLKIN_IN, 3, 0), rnode(DCMUX, 89, 25, 2) },
  { pnode(GPIO, 89, 25, CLKIN_IN, 3, 1), rnode(DCMUX, 89, 25, 3) },
  { pnode(GPIO, 89, 25, CLKIN_OUT, 3, 0), rnode(DCMUX, 89, 25, 0) },
  { pnode(GPIO, 89, 25, CLKIN_OUT, 3, 1), rnode(DCMUX, 89, 25, 1) },
  { pnode(HMC, 25, 0, AFISEQBUSY, -1, 0), rnode(GOUT, 78, 0, 28) },
  { pnode(HMC, 25, 0, AFISEQBUSY, -1, 1), rnode(GOUT, 78, 0, 29) },
  { pnode(HMC, 25, 0, AVLADDRESS, -1, 0), rnode(GOUT, 76, 0, 40) },
  { pnode(HMC, 25, 0, AVLADDRESS, -1, 1), rnode(GOUT, 76, 0, 39) },
  { pnode(HMC, 25, 0, AVLADDRESS, -1, 2), rnode(GOUT, 76, 0, 43) },
  { pnode(HMC, 25, 0, AVLADDRESS, -1, 3), rnode(GOUT, 76, 0, 38) },
  { pnode(HMC, 25, 0, AVLADDRESS, -1, 4), rnode(GOUT, 76, 0, 28) },
  { pnode(HMC, 25, 0, AVLADDRESS, -1, 5), rnode(GOUT, 76, 0, 34) },
  { pnode(HMC, 25, 0, AVLADDRESS, -1, 6), rnode(GOUT, 76, 0, 29) },
  { pnode(HMC, 25, 0, AVLADDRESS, -1, 7), rnode(GOUT, 76, 0, 30) },
  { pnode(HMC, 25, 0, AVLADDRESS, -1, 8), rnode(GOUT, 76, 0, 33) },
  { pnode(HMC, 25, 0, AVLADDRESS, -1, 9), rnode(GOUT, 76, 0, 32) },
  { pnode(HMC, 25, 0, AVLADDRESS, -1, 10), rnode(GOUT, 76, 0, 35) },
  { pnode(HMC, 25, 0, AVLADDRESS, -1, 11), rnode(GOUT, 77, 0, 9) },
  { pnode(HMC, 25, 0, AVLADDRESS, -1, 12), rnode(GOUT, 77, 0, 11) },
  { pnode(HMC, 25, 0, AVLADDRESS, -1, 13), rnode(GOUT, 77, 0, 6) },
  { pnode(HMC, 25, 0, AVLADDRESS, -1, 14), rnode(GOUT, 77, 0, 7) },
  { pnode(HMC, 25, 0, AVLADDRESS, -1, 15), rnode(GOUT, 77, 0, 8) },
  { pnode(HMC, 25, 0, AVLREAD, -1, -1), rnode(GOUT, 77, 0, 23) },
  { pnode(HMC, 25, 0, AVLRESETN, -1, -1), rnode(GOUT, 77, 0, 1) },
  { pnode(HMC, 25, 0, AVLWRITE, -1, -1), rnode(GOUT, 76, 0, 48) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 0), rnode(GOUT, 75, 0, 17) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 1), rnode(GOUT, 75, 0, 13) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 2), rnode(GOUT, 75, 0, 14) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 3), rnode(GOUT, 75, 0, 19) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 4), rnode(GOUT, 75, 0, 15) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 5), rnode(GOUT, 75, 0, 20) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 6), rnode(GOUT, 75, 0, 16) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 7), rnode(GOUT, 75, 0, 22) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 8), rnode(GOUT, 75, 0, 23) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 9), rnode(GOUT, 75, 0, 24) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 10), rnode(GOUT, 75, 0, 25) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 11), rnode(GOUT, 75, 0, 47) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 12), rnode(GOUT, 75, 0, 46) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 13), rnode(GOUT, 75, 0, 41) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 14), rnode(GOUT, 75, 0, 40) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 15), rnode(GOUT, 75, 0, 27) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 16), rnode(GOUT, 75, 0, 30) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 17), rnode(GOUT, 75, 0, 33) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 18), rnode(GOUT, 75, 0, 26) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 19), rnode(GOUT, 76, 0, 0) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 20), rnode(GOUT, 76, 0, 1) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 21), rnode(GOUT, 76, 0, 17) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 22), rnode(GOUT, 76, 0, 18) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 23), rnode(GOUT, 76, 0, 14) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 24), rnode(GOUT, 76, 0, 15) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 25), rnode(GOUT, 76, 0, 21) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 26), rnode(GOUT, 76, 0, 22) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 27), rnode(GOUT, 76, 0, 23) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 28), rnode(GOUT, 76, 0, 24) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 29), rnode(GOUT, 76, 0, 25) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 30), rnode(GOUT, 76, 0, 50) },
  { pnode(HMC, 25, 0, AVLWRITEDATA, -1, 31), rnode(GOUT, 76, 0, 49) },
  { pnode(HMC, 25, 0, BONDINGIN, 0, 0), rnode(GOUT, 45, 0, 46) },
  { pnode(HMC, 25, 0, BONDINGIN, 0, 1), rnode(GOUT, 51, 0, 45) },
  { pnode(HMC, 25, 0, BONDINGIN, 0, 2), rnode(GOUT, 51, 0, 24) },
  { pnode(HMC, 25, 0, BONDINGIN, 0, 3), rnode(GOUT, 56, 0, 47) },
  { pnode(HMC, 25, 0, BONDINGIN, 1, 0), rnode(GOUT, 41, 0, 21) },
  { pnode(HMC, 25, 0, BONDINGIN, 1, 1), rnode(GOUT, 42, 0, 46) },
  { pnode(HMC, 25, 0, BONDINGIN, 1, 2), rnode(GOUT, 45, 0, 50) },
  { pnode(HMC, 25, 0, BONDINGIN, 1, 3), rnode(GOUT, 46, 0, 36) },
  { pnode(HMC, 25, 0, BONDINGIN, 1, 4), rnode(GOUT, 48, 0, 5) },
  { pnode(HMC, 25, 0, BONDINGIN, 1, 5), rnode(GOUT, 49, 0, 28) },
  { pnode(HMC, 25, 0, BONDINGIN, 2, 0), rnode(GOUT, 41, 0, 22) },
  { pnode(HMC, 25, 0, BONDINGIN, 2, 1), rnode(GOUT, 42, 0, 41) },
  { pnode(HMC, 25, 0, BONDINGIN, 2, 2), rnode(GOUT, 45, 0, 49) },
  { pnode(HMC, 25, 0, BONDINGIN, 2, 3), rnode(GOUT, 46, 0, 26) },
  { pnode(HMC, 25, 0, BONDINGIN, 2, 4), rnode(GOUT, 48, 0, 7) },
  { pnode(HMC, 25, 0, BONDINGIN, 2, 5), rnode(GOUT, 49, 0, 34) },
  { pnode(HMC, 25, 0, GLOBALRESETN, -1, -1), rnode(GOUT, 77, 0, 44) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 0), rnode(GOUT, 40, 0, 49) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 1), rnode(GOUT, 40, 0, 48) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 2), rnode(GOUT, 40, 0, 47) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 3), rnode(GOUT, 40, 0, 42) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 4), rnode(GOUT, 40, 0, 46) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 5), rnode(GOUT, 40, 0, 41) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 6), rnode(GOUT, 40, 0, 45) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 7), rnode(GOUT, 40, 0, 40) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 8), rnode(GOUT, 40, 0, 44) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 9), rnode(GOUT, 40, 0, 39) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 10), rnode(GOUT, 40, 0, 43) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 11), rnode(GOUT, 40, 0, 38) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 12), rnode(GOUT, 40, 0, 27) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 13), rnode(GOUT, 40, 0, 28) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 14), rnode(GOUT, 40, 0, 34) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 15), rnode(GOUT, 40, 0, 29) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 16), rnode(GOUT, 40, 0, 30) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 17), rnode(GOUT, 40, 0, 31) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 18), rnode(GOUT, 40, 0, 33) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 19), rnode(GOUT, 40, 0, 32) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 20), rnode(GOUT, 40, 0, 37) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 21), rnode(GOUT, 40, 0, 35) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 22), rnode(GOUT, 40, 0, 36) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 23), rnode(GOUT, 40, 0, 26) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 24), rnode(GOUT, 41, 0, 0) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 25), rnode(GOUT, 41, 0, 10) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 26), rnode(GOUT, 41, 0, 9) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 27), rnode(GOUT, 41, 0, 11) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 28), rnode(GOUT, 41, 0, 6) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 29), rnode(GOUT, 41, 0, 7) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 30), rnode(GOUT, 41, 0, 5) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 31), rnode(GOUT, 41, 0, 4) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 32), rnode(GOUT, 41, 0, 3) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 33), rnode(GOUT, 41, 0, 8) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 34), rnode(GOUT, 41, 0, 2) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 35), rnode(GOUT, 41, 0, 1) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 36), rnode(GOUT, 41, 0, 12) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 37), rnode(GOUT, 41, 0, 17) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 38), rnode(GOUT, 41, 0, 13) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 39), rnode(GOUT, 41, 0, 18) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 40), rnode(GOUT, 41, 0, 14) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 0, 41), rnode(GOUT, 41, 0, 19) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 0), rnode(GOUT, 41, 0, 44) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 1), rnode(GOUT, 41, 0, 39) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 2), rnode(GOUT, 41, 0, 43) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 3), rnode(GOUT, 41, 0, 38) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 4), rnode(GOUT, 41, 0, 27) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 5), rnode(GOUT, 41, 0, 28) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 6), rnode(GOUT, 41, 0, 34) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 7), rnode(GOUT, 41, 0, 29) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 8), rnode(GOUT, 41, 0, 30) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 9), rnode(GOUT, 41, 0, 31) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 10), rnode(GOUT, 41, 0, 33) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 11), rnode(GOUT, 41, 0, 32) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 12), rnode(GOUT, 41, 0, 37) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 13), rnode(GOUT, 41, 0, 35) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 14), rnode(GOUT, 41, 0, 36) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 15), rnode(GOUT, 41, 0, 26) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 16), rnode(GOUT, 42, 0, 0) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 17), rnode(GOUT, 42, 0, 10) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 18), rnode(GOUT, 42, 0, 9) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 19), rnode(GOUT, 42, 0, 11) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 20), rnode(GOUT, 42, 0, 6) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 21), rnode(GOUT, 42, 0, 7) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 22), rnode(GOUT, 42, 0, 5) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 23), rnode(GOUT, 42, 0, 4) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 24), rnode(GOUT, 42, 0, 3) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 25), rnode(GOUT, 42, 0, 8) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 26), rnode(GOUT, 42, 0, 2) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 27), rnode(GOUT, 42, 0, 1) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 28), rnode(GOUT, 42, 0, 12) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 29), rnode(GOUT, 42, 0, 17) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 30), rnode(GOUT, 42, 0, 13) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 31), rnode(GOUT, 42, 0, 18) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 32), rnode(GOUT, 42, 0, 14) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 33), rnode(GOUT, 42, 0, 15) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 34), rnode(GOUT, 42, 0, 20) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 35), rnode(GOUT, 42, 0, 16) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 36), rnode(GOUT, 42, 0, 21) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 37), rnode(GOUT, 42, 0, 22) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 38), rnode(GOUT, 42, 0, 25) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 39), rnode(GOUT, 42, 0, 50) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 40), rnode(GOUT, 42, 0, 49) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 1, 41), rnode(GOUT, 42, 0, 48) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 0), rnode(GOUT, 42, 0, 40) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 1), rnode(GOUT, 42, 0, 44) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 2), rnode(GOUT, 42, 0, 45) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 3), rnode(GOUT, 42, 0, 39) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 4), rnode(GOUT, 42, 0, 43) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 5), rnode(GOUT, 42, 0, 38) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 6), rnode(GOUT, 42, 0, 27) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 7), rnode(GOUT, 42, 0, 28) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 8), rnode(GOUT, 42, 0, 32) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 9), rnode(GOUT, 42, 0, 37) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 10), rnode(GOUT, 42, 0, 35) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 11), rnode(GOUT, 42, 0, 36) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 12), rnode(GOUT, 42, 0, 26) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 13), rnode(GOUT, 43, 0, 13) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 14), rnode(GOUT, 43, 0, 18) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 15), rnode(GOUT, 43, 0, 14) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 16), rnode(GOUT, 43, 0, 19) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 17), rnode(GOUT, 43, 0, 15) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 18), rnode(GOUT, 43, 0, 20) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 19), rnode(GOUT, 43, 0, 16) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 20), rnode(GOUT, 43, 0, 21) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 21), rnode(GOUT, 43, 0, 22) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 22), rnode(GOUT, 43, 0, 23) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 23), rnode(GOUT, 43, 0, 24) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 24), rnode(GOUT, 43, 0, 25) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 25), rnode(GOUT, 43, 0, 50) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 26), rnode(GOUT, 43, 0, 49) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 27), rnode(GOUT, 43, 0, 48) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 28), rnode(GOUT, 43, 0, 47) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 29), rnode(GOUT, 43, 0, 42) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 30), rnode(GOUT, 43, 0, 46) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 31), rnode(GOUT, 43, 0, 41) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 32), rnode(GOUT, 43, 0, 45) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 33), rnode(GOUT, 43, 0, 40) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 34), rnode(GOUT, 43, 0, 39) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 35), rnode(GOUT, 43, 0, 43) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 36), rnode(GOUT, 43, 0, 38) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 37), rnode(GOUT, 43, 0, 27) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 38), rnode(GOUT, 43, 0, 28) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 39), rnode(GOUT, 43, 0, 34) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 40), rnode(GOUT, 43, 0, 29) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 2, 41), rnode(GOUT, 45, 0, 23) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 0), rnode(GOUT, 45, 0, 41) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 1), rnode(GOUT, 45, 0, 45) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 2), rnode(GOUT, 45, 0, 40) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 3), rnode(GOUT, 45, 0, 44) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 4), rnode(GOUT, 45, 0, 39) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 5), rnode(GOUT, 45, 0, 43) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 6), rnode(GOUT, 45, 0, 38) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 7), rnode(GOUT, 45, 0, 27) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 8), rnode(GOUT, 45, 0, 28) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 9), rnode(GOUT, 45, 0, 34) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 10), rnode(GOUT, 45, 0, 29) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 11), rnode(GOUT, 45, 0, 30) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 12), rnode(GOUT, 45, 0, 31) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 13), rnode(GOUT, 45, 0, 32) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 14), rnode(GOUT, 45, 0, 37) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 15), rnode(GOUT, 45, 0, 35) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 16), rnode(GOUT, 45, 0, 36) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 17), rnode(GOUT, 45, 0, 26) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 18), rnode(GOUT, 46, 0, 0) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 19), rnode(GOUT, 46, 0, 10) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 20), rnode(GOUT, 46, 0, 9) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 21), rnode(GOUT, 46, 0, 11) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 22), rnode(GOUT, 46, 0, 6) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 23), rnode(GOUT, 46, 0, 7) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 24), rnode(GOUT, 46, 0, 5) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 25), rnode(GOUT, 46, 0, 4) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 26), rnode(GOUT, 46, 0, 3) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 27), rnode(GOUT, 46, 0, 8) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 28), rnode(GOUT, 46, 0, 1) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 29), rnode(GOUT, 46, 0, 12) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 30), rnode(GOUT, 46, 0, 17) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 31), rnode(GOUT, 46, 0, 13) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 32), rnode(GOUT, 46, 0, 18) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 33), rnode(GOUT, 46, 0, 19) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 34), rnode(GOUT, 46, 0, 38) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 35), rnode(GOUT, 46, 0, 28) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 36), rnode(GOUT, 46, 0, 34) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 37), rnode(GOUT, 46, 0, 29) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 38), rnode(GOUT, 46, 0, 30) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 39), rnode(GOUT, 46, 0, 31) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 40), rnode(GOUT, 46, 0, 33) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 3, 41), rnode(GOUT, 46, 0, 32) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 0), rnode(GOUT, 47, 0, 0) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 1), rnode(GOUT, 47, 0, 10) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 2), rnode(GOUT, 47, 0, 9) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 3), rnode(GOUT, 47, 0, 11) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 4), rnode(GOUT, 47, 0, 6) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 5), rnode(GOUT, 47, 0, 7) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 6), rnode(GOUT, 47, 0, 5) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 7), rnode(GOUT, 47, 0, 4) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 8), rnode(GOUT, 47, 0, 3) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 9), rnode(GOUT, 47, 0, 8) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 10), rnode(GOUT, 47, 0, 2) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 11), rnode(GOUT, 47, 0, 1) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 12), rnode(GOUT, 47, 0, 12) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 13), rnode(GOUT, 47, 0, 17) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 14), rnode(GOUT, 47, 0, 13) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 15), rnode(GOUT, 47, 0, 18) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 16), rnode(GOUT, 47, 0, 14) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 17), rnode(GOUT, 47, 0, 19) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 18), rnode(GOUT, 47, 0, 15) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 19), rnode(GOUT, 47, 0, 20) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 20), rnode(GOUT, 47, 0, 16) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 21), rnode(GOUT, 47, 0, 21) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 22), rnode(GOUT, 47, 0, 22) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 23), rnode(GOUT, 47, 0, 23) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 24), rnode(GOUT, 47, 0, 24) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 25), rnode(GOUT, 47, 0, 25) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 26), rnode(GOUT, 47, 0, 50) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 27), rnode(GOUT, 47, 0, 49) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 28), rnode(GOUT, 47, 0, 48) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 29), rnode(GOUT, 47, 0, 47) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 30), rnode(GOUT, 47, 0, 46) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 31), rnode(GOUT, 47, 0, 41) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 32), rnode(GOUT, 47, 0, 45) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 33), rnode(GOUT, 47, 0, 40) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 34), rnode(GOUT, 47, 0, 32) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 35), rnode(GOUT, 47, 0, 37) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 36), rnode(GOUT, 47, 0, 35) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 37), rnode(GOUT, 47, 0, 36) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 38), rnode(GOUT, 47, 0, 26) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 39), rnode(GOUT, 48, 0, 0) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 40), rnode(GOUT, 48, 0, 10) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 4, 41), rnode(GOUT, 48, 0, 9) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 0), rnode(GOUT, 48, 0, 4) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 1), rnode(GOUT, 48, 0, 3) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 2), rnode(GOUT, 48, 0, 8) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 3), rnode(GOUT, 48, 0, 2) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 4), rnode(GOUT, 48, 0, 1) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 5), rnode(GOUT, 48, 0, 12) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 6), rnode(GOUT, 48, 0, 17) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 7), rnode(GOUT, 48, 0, 13) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 8), rnode(GOUT, 48, 0, 18) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 9), rnode(GOUT, 48, 0, 14) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 10), rnode(GOUT, 48, 0, 19) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 11), rnode(GOUT, 48, 0, 15) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 12), rnode(GOUT, 48, 0, 20) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 13), rnode(GOUT, 48, 0, 16) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 14), rnode(GOUT, 48, 0, 21) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 15), rnode(GOUT, 48, 0, 22) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 16), rnode(GOUT, 48, 0, 23) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 17), rnode(GOUT, 48, 0, 24) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 18), rnode(GOUT, 48, 0, 50) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 19), rnode(GOUT, 48, 0, 42) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 20), rnode(GOUT, 48, 0, 45) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 21), rnode(GOUT, 48, 0, 40) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 22), rnode(GOUT, 48, 0, 44) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 23), rnode(GOUT, 48, 0, 39) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 24), rnode(GOUT, 48, 0, 43) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 25), rnode(GOUT, 48, 0, 38) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 26), rnode(GOUT, 48, 0, 27) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 27), rnode(GOUT, 48, 0, 28) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 28), rnode(GOUT, 48, 0, 34) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 29), rnode(GOUT, 48, 0, 29) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 30), rnode(GOUT, 48, 0, 31) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 31), rnode(GOUT, 49, 0, 15) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 32), rnode(GOUT, 49, 0, 20) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 33), rnode(GOUT, 49, 0, 21) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 34), rnode(GOUT, 49, 0, 23) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 35), rnode(GOUT, 49, 0, 25) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 36), rnode(GOUT, 49, 0, 50) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 37), rnode(GOUT, 49, 0, 49) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 38), rnode(GOUT, 49, 0, 48) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 39), rnode(GOUT, 49, 0, 47) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 40), rnode(GOUT, 49, 0, 45) },
  { pnode(HMC, 25, 0, IAVSTCMDDATA, 5, 41), rnode(GOUT, 49, 0, 44) },
  { pnode(HMC, 25, 0, IAVSTCMDRESETN, 0, -1), rnode(GOUT, 41, 0, 20) },
  { pnode(HMC, 25, 0, IAVSTCMDRESETN, 1, -1), rnode(GOUT, 42, 0, 47) },
  { pnode(HMC, 25, 0, IAVSTCMDRESETN, 2, -1), rnode(GOUT, 45, 0, 24) },
  { pnode(HMC, 25, 0, IAVSTCMDRESETN, 3, -1), rnode(GOUT, 46, 0, 37) },
  { pnode(HMC, 25, 0, IAVSTCMDRESETN, 4, -1), rnode(GOUT, 48, 0, 11) },
  { pnode(HMC, 25, 0, IAVSTCMDRESETN, 5, -1), rnode(GOUT, 49, 0, 39) },
  { pnode(HMC, 25, 0, IAVSTRDCLK, 0, -1), rnode(DCMUX, 45, 0, 15) },
  { pnode(HMC, 25, 0, IAVSTRDCLK, 1, -1), rnode(DCMUX, 51, 0, 8) },
  { pnode(HMC, 25, 0, IAVSTRDCLK, 2, -1), rnode(DCMUX, 51, 0, 10) },
  { pnode(HMC, 25, 0, IAVSTRDCLK, 3, -1), rnode(DCMUX, 57, 0, 4) },
  { pnode(HMC, 25, 0, IAVSTRDREADY, 0, -1), rnode(GOUT, 45, 0, 48) },
  { pnode(HMC, 25, 0, IAVSTRDREADY, 1, -1), rnode(GOUT, 51, 0, 50) },
  { pnode(HMC, 25, 0, IAVSTRDREADY, 2, -1), rnode(GOUT, 56, 0, 46) },
  { pnode(HMC, 25, 0, IAVSTRDREADY, 3, -1), rnode(GOUT, 66, 0, 29) },
  { pnode(HMC, 25, 0, IAVSTRDRESETN, 0, -1), rnode(GOUT, 45, 0, 42) },
  { pnode(HMC, 25, 0, IAVSTRDRESETN, 1, -1), rnode(GOUT, 51, 0, 48) },
  { pnode(HMC, 25, 0, IAVSTRDRESETN, 2, -1), rnode(GOUT, 56, 0, 45) },
  { pnode(HMC, 25, 0, IAVSTRDRESETN, 3, -1), rnode(GOUT, 66, 0, 30) },
  { pnode(HMC, 25, 0, IAVSTWRACKREADY, 0, -1), rnode(GOUT, 41, 0, 16) },
  { pnode(HMC, 25, 0, IAVSTWRACKREADY, 1, -1), rnode(GOUT, 42, 0, 42) },
  { pnode(HMC, 25, 0, IAVSTWRACKREADY, 2, -1), rnode(GOUT, 45, 0, 25) },
  { pnode(HMC, 25, 0, IAVSTWRACKREADY, 3, -1), rnode(GOUT, 46, 0, 35) },
  { pnode(HMC, 25, 0, IAVSTWRACKREADY, 4, -1), rnode(GOUT, 48, 0, 6) },
  { pnode(HMC, 25, 0, IAVSTWRACKREADY, 5, -1), rnode(GOUT, 49, 0, 38) },
  { pnode(HMC, 25, 0, IAVSTWRCLK, -1, 0), rnode(DCMUX, 57, 0, 6) },
  { pnode(HMC, 25, 0, IAVSTWRCLK, -1, 1), rnode(DCMUX, 67, 0, 2) },
  { pnode(HMC, 25, 0, IAVSTWRCLK, -1, 2), rnode(DCMUX, 59, 0, 8) },
  { pnode(HMC, 25, 0, IAVSTWRCLK, -1, 3), rnode(DCMUX, 67, 0, 0) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 0), rnode(GOUT, 49, 0, 30) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 1), rnode(GOUT, 49, 0, 33) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 2), rnode(GOUT, 49, 0, 37) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 3), rnode(GOUT, 49, 0, 36) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 4), rnode(GOUT, 49, 0, 26) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 5), rnode(GOUT, 50, 0, 0) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 6), rnode(GOUT, 50, 0, 10) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 7), rnode(GOUT, 50, 0, 9) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 8), rnode(GOUT, 50, 0, 11) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 9), rnode(GOUT, 50, 0, 4) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 10), rnode(GOUT, 50, 0, 8) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 11), rnode(GOUT, 50, 0, 2) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 12), rnode(GOUT, 50, 0, 17) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 13), rnode(GOUT, 50, 0, 13) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 14), rnode(GOUT, 50, 0, 14) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 15), rnode(GOUT, 50, 0, 19) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 16), rnode(GOUT, 50, 0, 20) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 17), rnode(GOUT, 50, 0, 21) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 18), rnode(GOUT, 50, 0, 23) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 19), rnode(GOUT, 50, 0, 24) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 20), rnode(GOUT, 50, 0, 25) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 21), rnode(GOUT, 50, 0, 50) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 22), rnode(GOUT, 50, 0, 49) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 23), rnode(GOUT, 50, 0, 48) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 24), rnode(GOUT, 50, 0, 47) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 25), rnode(GOUT, 50, 0, 45) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 26), rnode(GOUT, 50, 0, 44) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 27), rnode(GOUT, 50, 0, 39) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 28), rnode(GOUT, 50, 0, 38) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 29), rnode(GOUT, 50, 0, 27) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 30), rnode(GOUT, 50, 0, 34) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 31), rnode(GOUT, 50, 0, 29) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 32), rnode(GOUT, 50, 0, 30) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 33), rnode(GOUT, 50, 0, 33) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 34), rnode(GOUT, 50, 0, 32) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 35), rnode(GOUT, 51, 0, 8) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 36), rnode(GOUT, 51, 0, 2) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 37), rnode(GOUT, 51, 0, 12) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 38), rnode(GOUT, 51, 0, 17) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 39), rnode(GOUT, 51, 0, 13) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 40), rnode(GOUT, 51, 0, 18) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 41), rnode(GOUT, 51, 0, 14) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 42), rnode(GOUT, 51, 0, 15) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 43), rnode(GOUT, 51, 0, 20) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 44), rnode(GOUT, 51, 0, 16) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 45), rnode(GOUT, 51, 0, 43) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 46), rnode(GOUT, 51, 0, 27) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 47), rnode(GOUT, 51, 0, 31) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 48), rnode(GOUT, 51, 0, 33) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 49), rnode(GOUT, 52, 0, 7) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 50), rnode(GOUT, 52, 0, 4) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 51), rnode(GOUT, 52, 0, 8) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 52), rnode(GOUT, 52, 0, 2) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 53), rnode(GOUT, 52, 0, 12) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 54), rnode(GOUT, 52, 0, 18) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 55), rnode(GOUT, 52, 0, 14) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 56), rnode(GOUT, 52, 0, 19) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 57), rnode(GOUT, 52, 0, 15) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 58), rnode(GOUT, 52, 0, 20) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 59), rnode(GOUT, 52, 0, 16) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 60), rnode(GOUT, 52, 0, 21) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 61), rnode(GOUT, 52, 0, 22) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 62), rnode(GOUT, 52, 0, 48) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 63), rnode(GOUT, 52, 0, 42) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 64), rnode(GOUT, 52, 0, 46) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 65), rnode(GOUT, 52, 0, 41) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 66), rnode(GOUT, 52, 0, 40) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 67), rnode(GOUT, 52, 0, 44) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 68), rnode(GOUT, 52, 0, 39) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 69), rnode(GOUT, 52, 0, 43) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 70), rnode(GOUT, 52, 0, 27) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 71), rnode(GOUT, 52, 0, 28) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 72), rnode(GOUT, 52, 0, 29) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 73), rnode(GOUT, 52, 0, 37) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 74), rnode(GOUT, 52, 0, 36) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 75), rnode(GOUT, 52, 0, 26) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 76), rnode(GOUT, 53, 0, 11) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 77), rnode(GOUT, 53, 0, 19) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 78), rnode(GOUT, 53, 0, 20) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 79), rnode(GOUT, 53, 0, 22) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 80), rnode(GOUT, 53, 0, 24) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 81), rnode(GOUT, 53, 0, 50) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 82), rnode(GOUT, 53, 0, 48) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 83), rnode(GOUT, 53, 0, 47) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 84), rnode(GOUT, 53, 0, 42) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 85), rnode(GOUT, 53, 0, 46) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 86), rnode(GOUT, 53, 0, 44) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 87), rnode(GOUT, 53, 0, 43) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 88), rnode(GOUT, 53, 0, 29) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 0, 89), rnode(GOUT, 53, 0, 30) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 0), rnode(GOUT, 53, 0, 33) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 1), rnode(GOUT, 53, 0, 32) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 2), rnode(GOUT, 53, 0, 35) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 3), rnode(GOUT, 54, 0, 10) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 4), rnode(GOUT, 54, 0, 9) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 5), rnode(GOUT, 54, 0, 11) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 6), rnode(GOUT, 54, 0, 6) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 7), rnode(GOUT, 54, 0, 7) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 8), rnode(GOUT, 54, 0, 5) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 9), rnode(GOUT, 54, 0, 13) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 10), rnode(GOUT, 54, 0, 18) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 11), rnode(GOUT, 54, 0, 14) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 12), rnode(GOUT, 54, 0, 19) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 13), rnode(GOUT, 54, 0, 20) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 14), rnode(GOUT, 54, 0, 16) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 15), rnode(GOUT, 54, 0, 22) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 16), rnode(GOUT, 54, 0, 24) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 17), rnode(GOUT, 54, 0, 25) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 18), rnode(GOUT, 54, 0, 50) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 19), rnode(GOUT, 54, 0, 49) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 20), rnode(GOUT, 54, 0, 48) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 21), rnode(GOUT, 54, 0, 47) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 22), rnode(GOUT, 54, 0, 44) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 23), rnode(GOUT, 54, 0, 43) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 24), rnode(GOUT, 54, 0, 29) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 25), rnode(GOUT, 54, 0, 32) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 26), rnode(GOUT, 54, 0, 35) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 27), rnode(GOUT, 54, 0, 36) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 28), rnode(GOUT, 55, 0, 0) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 29), rnode(GOUT, 55, 0, 10) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 30), rnode(GOUT, 55, 0, 9) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 31), rnode(GOUT, 55, 0, 11) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 32), rnode(GOUT, 55, 0, 6) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 33), rnode(GOUT, 55, 0, 7) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 34), rnode(GOUT, 55, 0, 5) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 35), rnode(GOUT, 55, 0, 4) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 36), rnode(GOUT, 55, 0, 3) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 37), rnode(GOUT, 56, 0, 18) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 38), rnode(GOUT, 56, 0, 14) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 39), rnode(GOUT, 56, 0, 15) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 40), rnode(GOUT, 56, 0, 16) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 41), rnode(GOUT, 56, 0, 22) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 42), rnode(GOUT, 56, 0, 23) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 43), rnode(GOUT, 56, 0, 24) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 44), rnode(GOUT, 56, 0, 25) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 45), rnode(GOUT, 56, 0, 39) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 46), rnode(GOUT, 56, 0, 38) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 47), rnode(GOUT, 56, 0, 28) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 48), rnode(GOUT, 56, 0, 29) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 49), rnode(GOUT, 56, 0, 31) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 50), rnode(GOUT, 56, 0, 33) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 51), rnode(GOUT, 56, 0, 32) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 52), rnode(GOUT, 56, 0, 37) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 53), rnode(GOUT, 56, 0, 35) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 54), rnode(GOUT, 56, 0, 36) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 55), rnode(GOUT, 57, 0, 9) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 56), rnode(GOUT, 57, 0, 6) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 57), rnode(GOUT, 57, 0, 7) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 58), rnode(GOUT, 57, 0, 3) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 59), rnode(GOUT, 57, 0, 8) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 60), rnode(GOUT, 57, 0, 1) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 61), rnode(GOUT, 57, 0, 12) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 62), rnode(GOUT, 57, 0, 13) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 63), rnode(GOUT, 57, 0, 14) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 64), rnode(GOUT, 57, 0, 15) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 65), rnode(GOUT, 57, 0, 20) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 66), rnode(GOUT, 57, 0, 16) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 67), rnode(GOUT, 57, 0, 21) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 68), rnode(GOUT, 57, 0, 22) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 69), rnode(GOUT, 57, 0, 23) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 70), rnode(GOUT, 57, 0, 24) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 71), rnode(GOUT, 57, 0, 48) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 72), rnode(GOUT, 57, 0, 42) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 73), rnode(GOUT, 57, 0, 46) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 74), rnode(GOUT, 57, 0, 45) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 75), rnode(GOUT, 57, 0, 40) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 76), rnode(GOUT, 58, 0, 6) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 77), rnode(GOUT, 58, 0, 7) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 78), rnode(GOUT, 58, 0, 4) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 79), rnode(GOUT, 58, 0, 3) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 80), rnode(GOUT, 58, 0, 8) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 81), rnode(GOUT, 58, 0, 2) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 82), rnode(GOUT, 58, 0, 1) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 83), rnode(GOUT, 58, 0, 17) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 84), rnode(GOUT, 58, 0, 13) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 85), rnode(GOUT, 58, 0, 18) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 86), rnode(GOUT, 58, 0, 14) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 87), rnode(GOUT, 58, 0, 16) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 88), rnode(GOUT, 58, 0, 22) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 1, 89), rnode(GOUT, 58, 0, 23) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 0), rnode(GOUT, 58, 0, 25) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 1), rnode(GOUT, 58, 0, 42) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 2), rnode(GOUT, 58, 0, 40) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 3), rnode(GOUT, 58, 0, 39) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 4), rnode(GOUT, 58, 0, 34) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 5), rnode(GOUT, 58, 0, 29) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 6), rnode(GOUT, 59, 0, 9) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 7), rnode(GOUT, 59, 0, 6) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 8), rnode(GOUT, 59, 0, 5) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 9), rnode(GOUT, 59, 0, 4) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 10), rnode(GOUT, 59, 0, 8) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 11), rnode(GOUT, 59, 0, 12) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 12), rnode(GOUT, 59, 0, 17) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 13), rnode(GOUT, 59, 0, 13) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 14), rnode(GOUT, 59, 0, 18) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 15), rnode(GOUT, 59, 0, 14) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 16), rnode(GOUT, 59, 0, 19) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 17), rnode(GOUT, 59, 0, 15) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 18), rnode(GOUT, 59, 0, 20) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 19), rnode(GOUT, 59, 0, 25) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 20), rnode(GOUT, 59, 0, 49) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 21), rnode(GOUT, 59, 0, 48) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 22), rnode(GOUT, 59, 0, 47) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 23), rnode(GOUT, 59, 0, 46) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 24), rnode(GOUT, 59, 0, 41) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 25), rnode(GOUT, 59, 0, 45) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 26), rnode(GOUT, 59, 0, 40) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 27), rnode(GOUT, 59, 0, 39) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 28), rnode(GOUT, 59, 0, 43) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 29), rnode(GOUT, 59, 0, 27) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 30), rnode(GOUT, 59, 0, 31) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 31), rnode(GOUT, 59, 0, 33) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 32), rnode(GOUT, 59, 0, 32) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 33), rnode(GOUT, 60, 0, 13) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 34), rnode(GOUT, 60, 0, 14) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 35), rnode(GOUT, 60, 0, 20) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 36), rnode(GOUT, 60, 0, 21) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 37), rnode(GOUT, 60, 0, 23) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 38), rnode(GOUT, 60, 0, 25) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 39), rnode(GOUT, 60, 0, 50) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 40), rnode(GOUT, 60, 0, 49) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 41), rnode(GOUT, 60, 0, 48) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 42), rnode(GOUT, 60, 0, 41) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 43), rnode(GOUT, 60, 0, 40) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 44), rnode(GOUT, 60, 0, 27) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 45), rnode(GOUT, 60, 0, 29) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 46), rnode(GOUT, 60, 0, 31) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 47), rnode(GOUT, 60, 0, 35) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 48), rnode(GOUT, 60, 0, 36) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 49), rnode(GOUT, 60, 0, 26) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 50), rnode(GOUT, 61, 0, 0) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 51), rnode(GOUT, 61, 0, 10) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 52), rnode(GOUT, 61, 0, 9) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 53), rnode(GOUT, 61, 0, 2) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 54), rnode(GOUT, 61, 0, 1) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 55), rnode(GOUT, 61, 0, 12) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 56), rnode(GOUT, 61, 0, 17) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 57), rnode(GOUT, 61, 0, 18) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 58), rnode(GOUT, 61, 0, 14) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 59), rnode(GOUT, 61, 0, 15) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 60), rnode(GOUT, 61, 0, 16) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 61), rnode(GOUT, 61, 0, 21) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 62), rnode(GOUT, 61, 0, 22) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 63), rnode(GOUT, 61, 0, 23) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 64), rnode(GOUT, 61, 0, 24) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 65), rnode(GOUT, 61, 0, 25) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 66), rnode(GOUT, 61, 0, 46) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 67), rnode(GOUT, 61, 0, 45) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 68), rnode(GOUT, 61, 0, 38) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 69), rnode(GOUT, 61, 0, 29) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 70), rnode(GOUT, 61, 0, 31) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 71), rnode(GOUT, 61, 0, 33) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 72), rnode(GOUT, 61, 0, 37) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 73), rnode(GOUT, 61, 0, 35) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 74), rnode(GOUT, 61, 0, 36) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 75), rnode(GOUT, 61, 0, 26) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 76), rnode(GOUT, 62, 0, 10) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 77), rnode(GOUT, 62, 0, 9) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 78), rnode(GOUT, 62, 0, 11) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 79), rnode(GOUT, 62, 0, 6) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 80), rnode(GOUT, 64, 0, 0) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 81), rnode(GOUT, 64, 0, 10) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 82), rnode(GOUT, 64, 0, 11) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 83), rnode(GOUT, 64, 0, 7) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 84), rnode(GOUT, 64, 0, 4) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 85), rnode(GOUT, 64, 0, 3) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 86), rnode(GOUT, 64, 0, 8) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 87), rnode(GOUT, 64, 0, 2) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 88), rnode(GOUT, 64, 0, 1) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 2, 89), rnode(GOUT, 64, 0, 45) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 0), rnode(GOUT, 64, 0, 44) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 1), rnode(GOUT, 64, 0, 39) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 2), rnode(GOUT, 64, 0, 38) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 3), rnode(GOUT, 64, 0, 28) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 4), rnode(GOUT, 64, 0, 34) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 5), rnode(GOUT, 64, 0, 30) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 6), rnode(GOUT, 64, 0, 33) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 7), rnode(GOUT, 64, 0, 37) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 8), rnode(GOUT, 64, 0, 36) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 9), rnode(GOUT, 64, 0, 26) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 10), rnode(GOUT, 65, 0, 0) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 11), rnode(GOUT, 65, 0, 10) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 12), rnode(GOUT, 65, 0, 9) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 13), rnode(GOUT, 65, 0, 11) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 14), rnode(GOUT, 65, 0, 4) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 15), rnode(GOUT, 65, 0, 8) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 16), rnode(GOUT, 65, 0, 2) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 17), rnode(GOUT, 65, 0, 17) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 18), rnode(GOUT, 65, 0, 13) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 19), rnode(GOUT, 65, 0, 14) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 20), rnode(GOUT, 65, 0, 22) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 21), rnode(GOUT, 65, 0, 24) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 22), rnode(GOUT, 65, 0, 50) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 23), rnode(GOUT, 65, 0, 48) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 24), rnode(GOUT, 65, 0, 42) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 25), rnode(GOUT, 65, 0, 46) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 26), rnode(GOUT, 65, 0, 41) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 27), rnode(GOUT, 65, 0, 45) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 28), rnode(GOUT, 65, 0, 40) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 29), rnode(GOUT, 65, 0, 44) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 30), rnode(GOUT, 65, 0, 27) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 31), rnode(GOUT, 65, 0, 34) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 32), rnode(GOUT, 65, 0, 29) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 33), rnode(GOUT, 65, 0, 31) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 34), rnode(GOUT, 65, 0, 33) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 35), rnode(GOUT, 65, 0, 37) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 36), rnode(GOUT, 65, 0, 35) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 37), rnode(GOUT, 65, 0, 36) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 38), rnode(GOUT, 66, 0, 0) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 39), rnode(GOUT, 66, 0, 10) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 40), rnode(GOUT, 66, 0, 9) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 41), rnode(GOUT, 66, 0, 44) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 42), rnode(GOUT, 66, 0, 39) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 43), rnode(GOUT, 66, 0, 38) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 44), rnode(GOUT, 66, 0, 27) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 45), rnode(GOUT, 66, 0, 33) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 46), rnode(GOUT, 66, 0, 36) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 47), rnode(GOUT, 67, 0, 0) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 48), rnode(GOUT, 67, 0, 10) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 49), rnode(GOUT, 67, 0, 11) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 50), rnode(GOUT, 67, 0, 3) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 51), rnode(GOUT, 67, 0, 12) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 52), rnode(GOUT, 67, 0, 13) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 53), rnode(GOUT, 67, 0, 20) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 54), rnode(GOUT, 67, 0, 16) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 55), rnode(GOUT, 67, 0, 46) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 56), rnode(GOUT, 67, 0, 45) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 57), rnode(GOUT, 67, 0, 44) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 58), rnode(GOUT, 67, 0, 39) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 59), rnode(GOUT, 67, 0, 38) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 60), rnode(GOUT, 67, 0, 34) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 61), rnode(GOUT, 67, 0, 29) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 62), rnode(GOUT, 67, 0, 30) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 63), rnode(GOUT, 67, 0, 31) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 64), rnode(GOUT, 67, 0, 33) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 65), rnode(GOUT, 67, 0, 32) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 66), rnode(GOUT, 67, 0, 37) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 67), rnode(GOUT, 67, 0, 35) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 68), rnode(GOUT, 68, 0, 11) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 69), rnode(GOUT, 68, 0, 7) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 70), rnode(GOUT, 68, 0, 5) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 71), rnode(GOUT, 68, 0, 4) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 72), rnode(GOUT, 68, 0, 8) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 73), rnode(GOUT, 68, 0, 2) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 74), rnode(GOUT, 68, 0, 1) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 75), rnode(GOUT, 68, 0, 12) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 76), rnode(GOUT, 68, 0, 13) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 77), rnode(GOUT, 68, 0, 18) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 78), rnode(GOUT, 68, 0, 19) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 79), rnode(GOUT, 68, 0, 22) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 80), rnode(GOUT, 68, 0, 30) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 81), rnode(GOUT, 68, 0, 33) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 82), rnode(GOUT, 68, 0, 35) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 83), rnode(GOUT, 68, 0, 26) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 84), rnode(GOUT, 69, 0, 10) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 85), rnode(GOUT, 69, 0, 11) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 86), rnode(GOUT, 73, 0, 23) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 87), rnode(GOUT, 73, 0, 24) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 88), rnode(GOUT, 73, 0, 50) },
  { pnode(HMC, 25, 0, IAVSTWRDATA, 3, 89), rnode(GOUT, 73, 0, 48) },
  { pnode(HMC, 25, 0, IAVSTWRRESETN, 0, -1), rnode(GOUT, 56, 0, 44) },
  { pnode(HMC, 25, 0, IAVSTWRRESETN, 1, -1), rnode(GOUT, 66, 0, 31) },
  { pnode(HMC, 25, 0, IAVSTWRRESETN, 2, -1), rnode(GOUT, 60, 0, 34) },
  { pnode(HMC, 25, 0, IAVSTWRRESETN, 3, -1), rnode(GOUT, 66, 0, 28) },
  { pnode(HMC, 25, 0, IOINTADDRACLR, -1, 0), rnode(GOUT, 38, 0, 24) },
  { pnode(HMC, 25, 0, IOINTADDRACLR, -1, 1), rnode(GOUT, 38, 0, 13) },
  { pnode(HMC, 25, 0, IOINTADDRACLR, -1, 2), rnode(GOUT, 36, 0, 26) },
  { pnode(HMC, 25, 0, IOINTADDRACLR, -1, 3), rnode(GOUT, 36, 0, 18) },
  { pnode(HMC, 25, 0, IOINTADDRACLR, -1, 4), rnode(GOUT, 37, 0, 26) },
  { pnode(HMC, 25, 0, IOINTADDRACLR, -1, 5), rnode(GOUT, 37, 0, 2) },
  { pnode(HMC, 25, 0, IOINTADDRACLR, -1, 6), rnode(GOUT, 35, 0, 12) },
  { pnode(HMC, 25, 0, IOINTADDRACLR, -1, 7), rnode(GOUT, 34, 0, 35) },
  { pnode(HMC, 25, 0, IOINTADDRACLR, -1, 8), rnode(GOUT, 30, 0, 3) },
  { pnode(HMC, 25, 0, IOINTADDRACLR, -1, 9), rnode(GOUT, 29, 0, 37) },
  { pnode(HMC, 25, 0, IOINTADDRACLR, -1, 10), rnode(GOUT, 29, 0, 11) },
  { pnode(HMC, 25, 0, IOINTADDRACLR, -1, 11), rnode(GOUT, 28, 0, 49) },
  { pnode(HMC, 25, 0, IOINTADDRACLR, -1, 12), rnode(GOUT, 27, 0, 41) },
  { pnode(HMC, 25, 0, IOINTADDRACLR, -1, 13), rnode(GOUT, 27, 0, 0) },
  { pnode(HMC, 25, 0, IOINTADDRACLR, -1, 14), rnode(GOUT, 26, 0, 27) },
  { pnode(HMC, 25, 0, IOINTADDRACLR, -1, 15), rnode(GOUT, 26, 0, 47) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 0), rnode(GOUT, 38, 0, 49) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 1), rnode(GOUT, 38, 0, 48) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 2), rnode(GOUT, 38, 0, 47) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 3), rnode(GOUT, 38, 0, 42) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 4), rnode(GOUT, 38, 0, 18) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 5), rnode(GOUT, 38, 0, 14) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 6), rnode(GOUT, 38, 0, 19) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 7), rnode(GOUT, 38, 0, 15) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 8), rnode(GOUT, 37, 0, 0) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 9), rnode(GOUT, 37, 0, 10) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 10), rnode(GOUT, 37, 0, 9) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 11), rnode(GOUT, 37, 0, 11) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 12), rnode(GOUT, 36, 0, 14) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 13), rnode(GOUT, 36, 0, 19) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 14), rnode(GOUT, 36, 0, 15) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 15), rnode(GOUT, 36, 0, 22) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 16), rnode(GOUT, 38, 0, 0) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 17), rnode(GOUT, 38, 0, 10) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 18), rnode(GOUT, 38, 0, 9) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 19), rnode(GOUT, 38, 0, 11) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 20), rnode(GOUT, 37, 0, 34) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 21), rnode(GOUT, 37, 0, 29) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 22), rnode(GOUT, 37, 0, 30) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 23), rnode(GOUT, 37, 0, 31) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 24), rnode(GOUT, 35, 0, 42) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 25), rnode(GOUT, 35, 0, 46) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 26), rnode(GOUT, 35, 0, 41) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 27), rnode(GOUT, 35, 0, 45) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 28), rnode(GOUT, 34, 0, 26) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 29), rnode(GOUT, 35, 0, 0) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 30), rnode(GOUT, 35, 0, 10) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 31), rnode(GOUT, 35, 0, 9) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 32), rnode(GOUT, 30, 0, 50) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 33), rnode(GOUT, 30, 0, 43) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 34), rnode(GOUT, 30, 0, 38) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 35), rnode(GOUT, 30, 0, 27) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 36), rnode(GOUT, 29, 0, 26) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 37), rnode(GOUT, 30, 0, 0) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 38), rnode(GOUT, 30, 0, 10) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 39), rnode(GOUT, 30, 0, 9) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 40), rnode(GOUT, 29, 0, 1) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 41), rnode(GOUT, 29, 0, 25) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 42), rnode(GOUT, 29, 0, 45) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 43), rnode(GOUT, 29, 0, 28) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 44), rnode(GOUT, 28, 0, 33) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 45), rnode(GOUT, 28, 0, 32) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 46), rnode(GOUT, 28, 0, 37) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 47), rnode(GOUT, 28, 0, 35) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 48), rnode(GOUT, 27, 0, 43) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 49), rnode(GOUT, 27, 0, 38) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 50), rnode(GOUT, 27, 0, 27) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 51), rnode(GOUT, 27, 0, 28) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 52), rnode(GOUT, 27, 0, 9) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 53), rnode(GOUT, 27, 0, 11) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 54), rnode(GOUT, 27, 0, 6) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 55), rnode(GOUT, 27, 0, 7) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 56), rnode(GOUT, 26, 0, 29) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 57), rnode(GOUT, 26, 0, 30) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 58), rnode(GOUT, 26, 0, 31) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 59), rnode(GOUT, 26, 0, 33) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 60), rnode(GOUT, 26, 0, 42) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 61), rnode(GOUT, 26, 0, 46) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 62), rnode(GOUT, 26, 0, 41) },
  { pnode(HMC, 25, 0, IOINTADDRDOUT, -1, 63), rnode(GOUT, 26, 0, 45) },
  { pnode(HMC, 25, 0, IOINTBAACLR, -1, 0), rnode(GOUT, 33, 0, 26) },
  { pnode(HMC, 25, 0, IOINTBAACLR, -1, 1), rnode(GOUT, 34, 0, 20) },
  { pnode(HMC, 25, 0, IOINTBAACLR, -1, 2), rnode(GOUT, 34, 0, 8) },
  { pnode(HMC, 25, 0, IOINTBADOUT, -1, 0), rnode(GOUT, 34, 0, 0) },
  { pnode(HMC, 25, 0, IOINTBADOUT, -1, 1), rnode(GOUT, 34, 0, 10) },
  { pnode(HMC, 25, 0, IOINTBADOUT, -1, 2), rnode(GOUT, 34, 0, 9) },
  { pnode(HMC, 25, 0, IOINTBADOUT, -1, 3), rnode(GOUT, 34, 0, 11) },
  { pnode(HMC, 25, 0, IOINTBADOUT, -1, 4), rnode(GOUT, 34, 0, 22) },
  { pnode(HMC, 25, 0, IOINTBADOUT, -1, 5), rnode(GOUT, 34, 0, 23) },
  { pnode(HMC, 25, 0, IOINTBADOUT, -1, 6), rnode(GOUT, 34, 0, 24) },
  { pnode(HMC, 25, 0, IOINTBADOUT, -1, 7), rnode(GOUT, 34, 0, 25) },
  { pnode(HMC, 25, 0, IOINTBADOUT, -1, 8), rnode(GOUT, 34, 0, 2) },
  { pnode(HMC, 25, 0, IOINTBADOUT, -1, 9), rnode(GOUT, 34, 0, 1) },
  { pnode(HMC, 25, 0, IOINTBADOUT, -1, 10), rnode(GOUT, 34, 0, 12) },
  { pnode(HMC, 25, 0, IOINTBADOUT, -1, 11), rnode(GOUT, 34, 0, 17) },
  { pnode(HMC, 25, 0, IOINTCASNACLR, -1, -1), rnode(GOUT, 31, 0, 38) },
  { pnode(HMC, 25, 0, IOINTCASNDOUT, -1, 0), rnode(GOUT, 31, 0, 34) },
  { pnode(HMC, 25, 0, IOINTCASNDOUT, -1, 1), rnode(GOUT, 31, 0, 29) },
  { pnode(HMC, 25, 0, IOINTCASNDOUT, -1, 2), rnode(GOUT, 31, 0, 30) },
  { pnode(HMC, 25, 0, IOINTCASNDOUT, -1, 3), rnode(GOUT, 31, 0, 31) },
  { pnode(HMC, 25, 0, IOINTCKDOUT, -1, 0), rnode(GOUT, 36, 0, 5) },
  { pnode(HMC, 25, 0, IOINTCKDOUT, -1, 1), rnode(GOUT, 36, 0, 4) },
  { pnode(HMC, 25, 0, IOINTCKDOUT, -1, 2), rnode(GOUT, 36, 0, 3) },
  { pnode(HMC, 25, 0, IOINTCKDOUT, -1, 3), rnode(GOUT, 36, 0, 8) },
  { pnode(HMC, 25, 0, IOINTCKEACLR, -1, 0), rnode(GOUT, 60, 0, 8) },
  { pnode(HMC, 25, 0, IOINTCKEACLR, -1, 1), rnode(GOUT, 58, 0, 43) },
  { pnode(HMC, 25, 0, IOINTCKEDOUT, -1, 0), rnode(GOUT, 60, 0, 2) },
  { pnode(HMC, 25, 0, IOINTCKEDOUT, -1, 1), rnode(GOUT, 60, 0, 1) },
  { pnode(HMC, 25, 0, IOINTCKEDOUT, -1, 2), rnode(GOUT, 60, 0, 12) },
  { pnode(HMC, 25, 0, IOINTCKEDOUT, -1, 3), rnode(GOUT, 60, 0, 17) },
  { pnode(HMC, 25, 0, IOINTCKEDOUT, -1, 4), rnode(GOUT, 58, 0, 31) },
  { pnode(HMC, 25, 0, IOINTCKEDOUT, -1, 5), rnode(GOUT, 58, 0, 33) },
  { pnode(HMC, 25, 0, IOINTCKEDOUT, -1, 6), rnode(GOUT, 58, 0, 32) },
  { pnode(HMC, 25, 0, IOINTCKEDOUT, -1, 7), rnode(GOUT, 58, 0, 37) },
  { pnode(HMC, 25, 0, IOINTCKNDOUT, -1, 0), rnode(GOUT, 35, 0, 31) },
  { pnode(HMC, 25, 0, IOINTCKNDOUT, -1, 1), rnode(GOUT, 35, 0, 33) },
  { pnode(HMC, 25, 0, IOINTCKNDOUT, -1, 2), rnode(GOUT, 35, 0, 32) },
  { pnode(HMC, 25, 0, IOINTCKNDOUT, -1, 3), rnode(GOUT, 35, 0, 37) },
  { pnode(HMC, 25, 0, IOINTCSNACLR, -1, 0), rnode(GOUT, 28, 0, 8) },
  { pnode(HMC, 25, 0, IOINTCSNACLR, -1, 1), rnode(GOUT, 27, 0, 36) },
  { pnode(HMC, 25, 0, IOINTCSNDOUT, -1, 0), rnode(GOUT, 28, 0, 17) },
  { pnode(HMC, 25, 0, IOINTCSNDOUT, -1, 1), rnode(GOUT, 28, 0, 13) },
  { pnode(HMC, 25, 0, IOINTCSNDOUT, -1, 2), rnode(GOUT, 28, 0, 18) },
  { pnode(HMC, 25, 0, IOINTCSNDOUT, -1, 3), rnode(GOUT, 28, 0, 14) },
  { pnode(HMC, 25, 0, IOINTCSNDOUT, -1, 4), rnode(GOUT, 28, 0, 0) },
  { pnode(HMC, 25, 0, IOINTCSNDOUT, -1, 5), rnode(GOUT, 28, 0, 10) },
  { pnode(HMC, 25, 0, IOINTCSNDOUT, -1, 6), rnode(GOUT, 28, 0, 9) },
  { pnode(HMC, 25, 0, IOINTCSNDOUT, -1, 7), rnode(GOUT, 28, 0, 11) },
  { pnode(HMC, 25, 0, IOINTDMDOUT, -1, 0), rnode(GOUT, 55, 0, 22) },
  { pnode(HMC, 25, 0, IOINTDMDOUT, -1, 1), rnode(GOUT, 55, 0, 23) },
  { pnode(HMC, 25, 0, IOINTDMDOUT, -1, 2), rnode(GOUT, 55, 0, 24) },
  { pnode(HMC, 25, 0, IOINTDMDOUT, -1, 3), rnode(GOUT, 55, 0, 25) },
  { pnode(HMC, 25, 0, IOINTDMDOUT, -1, 4), rnode(GOUT, 62, 0, 15) },
  { pnode(HMC, 25, 0, IOINTDMDOUT, -1, 5), rnode(GOUT, 62, 0, 20) },
  { pnode(HMC, 25, 0, IOINTDMDOUT, -1, 6), rnode(GOUT, 62, 0, 16) },
  { pnode(HMC, 25, 0, IOINTDMDOUT, -1, 7), rnode(GOUT, 62, 0, 21) },
  { pnode(HMC, 25, 0, IOINTDMDOUT, -1, 8), rnode(GOUT, 70, 0, 35) },
  { pnode(HMC, 25, 0, IOINTDMDOUT, -1, 9), rnode(GOUT, 70, 0, 36) },
  { pnode(HMC, 25, 0, IOINTDMDOUT, -1, 10), rnode(GOUT, 70, 0, 26) },
  { pnode(HMC, 25, 0, IOINTDMDOUT, -1, 11), rnode(GOUT, 71, 0, 0) },
  { pnode(HMC, 25, 0, IOINTDMDOUT, -1, 12), rnode(GOUT, 79, 0, 49) },
  { pnode(HMC, 25, 0, IOINTDMDOUT, -1, 13), rnode(GOUT, 79, 0, 48) },
  { pnode(HMC, 25, 0, IOINTDMDOUT, -1, 14), rnode(GOUT, 79, 0, 47) },
  { pnode(HMC, 25, 0, IOINTDMDOUT, -1, 15), rnode(GOUT, 79, 0, 42) },
  { pnode(HMC, 25, 0, IOINTDMDOUT, -1, 16), rnode(GOUT, 86, 0, 36) },
  { pnode(HMC, 25, 0, IOINTDMDOUT, -1, 17), rnode(GOUT, 86, 0, 26) },
  { pnode(HMC, 25, 0, IOINTDMDOUT, -1, 18), rnode(GOUT, 87, 0, 0) },
  { pnode(HMC, 25, 0, IOINTDMDOUT, -1, 19), rnode(GOUT, 87, 0, 10) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 0), rnode(GOUT, 50, 0, 42) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 1), rnode(GOUT, 50, 0, 46) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 2), rnode(GOUT, 50, 0, 41) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 3), rnode(GOUT, 50, 0, 40) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 4), rnode(GOUT, 51, 0, 0) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 5), rnode(GOUT, 51, 0, 10) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 6), rnode(GOUT, 51, 0, 9) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 7), rnode(GOUT, 51, 0, 11) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 8), rnode(GOUT, 50, 0, 6) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 9), rnode(GOUT, 50, 0, 7) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 10), rnode(GOUT, 50, 0, 5) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 11), rnode(GOUT, 50, 0, 3) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 12), rnode(GOUT, 51, 0, 21) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 13), rnode(GOUT, 51, 0, 22) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 14), rnode(GOUT, 51, 0, 23) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 15), rnode(GOUT, 51, 0, 25) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 16), rnode(GOUT, 54, 0, 4) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 17), rnode(GOUT, 54, 0, 3) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 18), rnode(GOUT, 54, 0, 8) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 19), rnode(GOUT, 54, 0, 2) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 20), rnode(GOUT, 54, 0, 42) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 21), rnode(GOUT, 54, 0, 46) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 22), rnode(GOUT, 54, 0, 41) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 23), rnode(GOUT, 54, 0, 45) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 24), rnode(GOUT, 53, 0, 41) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 25), rnode(GOUT, 53, 0, 45) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 26), rnode(GOUT, 53, 0, 40) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 27), rnode(GOUT, 53, 0, 39) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 28), rnode(GOUT, 55, 0, 2) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 29), rnode(GOUT, 55, 0, 1) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 30), rnode(GOUT, 55, 0, 12) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 31), rnode(GOUT, 55, 0, 17) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 36), rnode(GOUT, 57, 0, 25) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 37), rnode(GOUT, 57, 0, 50) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 38), rnode(GOUT, 57, 0, 49) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 39), rnode(GOUT, 57, 0, 47) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 40), rnode(GOUT, 57, 0, 32) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 41), rnode(GOUT, 57, 0, 37) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 42), rnode(GOUT, 57, 0, 35) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 43), rnode(GOUT, 57, 0, 36) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 44), rnode(GOUT, 56, 0, 26) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 45), rnode(GOUT, 57, 0, 0) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 46), rnode(GOUT, 57, 0, 10) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 47), rnode(GOUT, 57, 0, 11) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 48), rnode(GOUT, 58, 0, 19) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 49), rnode(GOUT, 58, 0, 15) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 50), rnode(GOUT, 58, 0, 20) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 51), rnode(GOUT, 58, 0, 21) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 52), rnode(GOUT, 61, 0, 11) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 53), rnode(GOUT, 61, 0, 6) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 54), rnode(GOUT, 61, 0, 7) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 55), rnode(GOUT, 61, 0, 5) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 56), rnode(GOUT, 61, 0, 50) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 57), rnode(GOUT, 61, 0, 49) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 58), rnode(GOUT, 61, 0, 48) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 59), rnode(GOUT, 61, 0, 47) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 60), rnode(GOUT, 60, 0, 47) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 61), rnode(GOUT, 60, 0, 42) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 62), rnode(GOUT, 60, 0, 46) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 63), rnode(GOUT, 60, 0, 45) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 64), rnode(GOUT, 62, 0, 5) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 65), rnode(GOUT, 62, 0, 4) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 66), rnode(GOUT, 62, 0, 3) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 67), rnode(GOUT, 62, 0, 8) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 72), rnode(GOUT, 65, 0, 39) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 73), rnode(GOUT, 65, 0, 43) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 74), rnode(GOUT, 65, 0, 38) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 75), rnode(GOUT, 65, 0, 28) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 76), rnode(GOUT, 66, 0, 5) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 77), rnode(GOUT, 66, 0, 4) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 78), rnode(GOUT, 66, 0, 13) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 79), rnode(GOUT, 66, 0, 50) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 80), rnode(GOUT, 65, 0, 6) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 81), rnode(GOUT, 65, 0, 7) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 82), rnode(GOUT, 65, 0, 5) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 83), rnode(GOUT, 65, 0, 3) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 84), rnode(GOUT, 66, 0, 32) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 85), rnode(GOUT, 66, 0, 37) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 86), rnode(GOUT, 66, 0, 35) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 87), rnode(GOUT, 66, 0, 26) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 88), rnode(GOUT, 69, 0, 45) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 89), rnode(GOUT, 69, 0, 40) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 90), rnode(GOUT, 69, 0, 44) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 91), rnode(GOUT, 69, 0, 39) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 92), rnode(GOUT, 70, 0, 7) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 93), rnode(GOUT, 70, 0, 5) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 94), rnode(GOUT, 70, 0, 4) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 95), rnode(GOUT, 70, 0, 3) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 96), rnode(GOUT, 69, 0, 4) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 97), rnode(GOUT, 69, 0, 3) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 98), rnode(GOUT, 69, 0, 8) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 99), rnode(GOUT, 69, 0, 1) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 100), rnode(GOUT, 70, 0, 39) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 101), rnode(GOUT, 70, 0, 43) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 102), rnode(GOUT, 70, 0, 38) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 103), rnode(GOUT, 70, 0, 27) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 108), rnode(GOUT, 74, 0, 40) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 109), rnode(GOUT, 74, 0, 44) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 110), rnode(GOUT, 74, 0, 39) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 111), rnode(GOUT, 74, 0, 38) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 112), rnode(GOUT, 75, 0, 6) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 113), rnode(GOUT, 75, 0, 7) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 114), rnode(GOUT, 75, 0, 5) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 115), rnode(GOUT, 75, 0, 4) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 116), rnode(GOUT, 74, 0, 3) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 117), rnode(GOUT, 74, 0, 8) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 118), rnode(GOUT, 74, 0, 2) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 119), rnode(GOUT, 74, 0, 12) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 120), rnode(GOUT, 75, 0, 50) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 121), rnode(GOUT, 75, 0, 49) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 122), rnode(GOUT, 75, 0, 48) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 123), rnode(GOUT, 75, 0, 42) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 124), rnode(GOUT, 78, 0, 12) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 125), rnode(GOUT, 78, 0, 17) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 126), rnode(GOUT, 78, 0, 13) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 127), rnode(GOUT, 78, 0, 18) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 128), rnode(GOUT, 78, 0, 44) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 129), rnode(GOUT, 78, 0, 39) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 130), rnode(GOUT, 78, 0, 43) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 131), rnode(GOUT, 78, 0, 38) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 132), rnode(GOUT, 77, 0, 38) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 133), rnode(GOUT, 77, 0, 27) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 134), rnode(GOUT, 77, 0, 28) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 135), rnode(GOUT, 77, 0, 29) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 136), rnode(GOUT, 79, 0, 18) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 137), rnode(GOUT, 79, 0, 14) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 138), rnode(GOUT, 79, 0, 19) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 139), rnode(GOUT, 79, 0, 15) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 144), rnode(GOUT, 81, 0, 32) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 145), rnode(GOUT, 81, 0, 37) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 146), rnode(GOUT, 81, 0, 35) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 147), rnode(GOUT, 81, 0, 36) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 148), rnode(GOUT, 82, 0, 24) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 149), rnode(GOUT, 82, 0, 25) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 150), rnode(GOUT, 82, 0, 50) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 151), rnode(GOUT, 82, 0, 49) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 152), rnode(GOUT, 81, 0, 0) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 153), rnode(GOUT, 81, 0, 10) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 154), rnode(GOUT, 81, 0, 9) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 155), rnode(GOUT, 81, 0, 11) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 156), rnode(GOUT, 83, 0, 0) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 157), rnode(GOUT, 83, 0, 10) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 158), rnode(GOUT, 83, 0, 9) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 159), rnode(GOUT, 83, 0, 11) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 160), rnode(GOUT, 86, 0, 12) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 161), rnode(GOUT, 86, 0, 17) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 162), rnode(GOUT, 86, 0, 13) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 163), rnode(GOUT, 86, 0, 18) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 164), rnode(GOUT, 86, 0, 22) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 165), rnode(GOUT, 86, 0, 23) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 166), rnode(GOUT, 86, 0, 24) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 167), rnode(GOUT, 86, 0, 25) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 168), rnode(GOUT, 85, 0, 26) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 169), rnode(GOUT, 86, 0, 0) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 170), rnode(GOUT, 86, 0, 10) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 171), rnode(GOUT, 86, 0, 9) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 172), rnode(GOUT, 86, 0, 43) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 173), rnode(GOUT, 86, 0, 38) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 174), rnode(GOUT, 86, 0, 27) },
  { pnode(HMC, 25, 0, IOINTDQDOUT, -1, 175), rnode(GOUT, 86, 0, 28) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 0), rnode(GOUT, 50, 0, 43) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 1), rnode(GOUT, 50, 0, 28) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 2), rnode(GOUT, 51, 0, 6) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 3), rnode(GOUT, 51, 0, 7) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 4), rnode(GOUT, 50, 0, 1) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 5), rnode(GOUT, 50, 0, 12) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 6), rnode(GOUT, 51, 0, 49) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 7), rnode(GOUT, 51, 0, 47) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 8), rnode(GOUT, 54, 0, 1) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 9), rnode(GOUT, 54, 0, 12) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 10), rnode(GOUT, 54, 0, 39) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 11), rnode(GOUT, 54, 0, 38) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 12), rnode(GOUT, 53, 0, 38) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 13), rnode(GOUT, 53, 0, 28) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 14), rnode(GOUT, 55, 0, 13) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 15), rnode(GOUT, 55, 0, 18) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 18), rnode(GOUT, 57, 0, 41) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 19), rnode(GOUT, 57, 0, 44) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 20), rnode(GOUT, 57, 0, 26) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 21), rnode(GOUT, 58, 0, 0) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 22), rnode(GOUT, 57, 0, 5) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 23), rnode(GOUT, 57, 0, 4) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 24), rnode(GOUT, 58, 0, 24) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 25), rnode(GOUT, 58, 0, 50) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 26), rnode(GOUT, 61, 0, 4) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 27), rnode(GOUT, 61, 0, 3) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 28), rnode(GOUT, 61, 0, 41) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 29), rnode(GOUT, 61, 0, 40) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 30), rnode(GOUT, 60, 0, 44) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 31), rnode(GOUT, 60, 0, 43) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 32), rnode(GOUT, 62, 0, 2) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 33), rnode(GOUT, 62, 0, 1) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 36), rnode(GOUT, 65, 0, 30) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 37), rnode(GOUT, 65, 0, 32) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 38), rnode(GOUT, 66, 0, 42) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 39), rnode(GOUT, 66, 0, 46) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 40), rnode(GOUT, 65, 0, 1) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 41), rnode(GOUT, 65, 0, 12) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 42), rnode(GOUT, 67, 0, 9) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 43), rnode(GOUT, 67, 0, 6) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 44), rnode(GOUT, 69, 0, 43) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 45), rnode(GOUT, 69, 0, 38) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 46), rnode(GOUT, 70, 0, 1) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 47), rnode(GOUT, 70, 0, 17) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 48), rnode(GOUT, 69, 0, 17) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 49), rnode(GOUT, 69, 0, 18) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 50), rnode(GOUT, 70, 0, 28) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 51), rnode(GOUT, 70, 0, 34) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 54), rnode(GOUT, 74, 0, 34) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 55), rnode(GOUT, 74, 0, 31) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 56), rnode(GOUT, 75, 0, 3) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 57), rnode(GOUT, 75, 0, 8) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 58), rnode(GOUT, 74, 0, 18) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 59), rnode(GOUT, 74, 0, 14) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 60), rnode(GOUT, 75, 0, 45) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 61), rnode(GOUT, 75, 0, 44) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 62), rnode(GOUT, 78, 0, 14) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 63), rnode(GOUT, 78, 0, 19) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 64), rnode(GOUT, 78, 0, 34) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 65), rnode(GOUT, 78, 0, 30) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 66), rnode(GOUT, 77, 0, 31) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 67), rnode(GOUT, 77, 0, 32) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 68), rnode(GOUT, 79, 0, 20) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 69), rnode(GOUT, 79, 0, 16) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 72), rnode(GOUT, 81, 0, 26) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 73), rnode(GOUT, 82, 0, 0) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 74), rnode(GOUT, 82, 0, 48) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 75), rnode(GOUT, 82, 0, 28) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 76), rnode(GOUT, 81, 0, 6) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 77), rnode(GOUT, 81, 0, 7) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 78), rnode(GOUT, 83, 0, 6) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 79), rnode(GOUT, 83, 0, 7) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 80), rnode(GOUT, 86, 0, 14) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 81), rnode(GOUT, 86, 0, 19) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 82), rnode(GOUT, 86, 0, 49) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 83), rnode(GOUT, 86, 0, 48) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 84), rnode(GOUT, 86, 0, 11) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 85), rnode(GOUT, 86, 0, 7) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 86), rnode(GOUT, 86, 0, 34) },
  { pnode(HMC, 25, 0, IOINTDQOE, -1, 87), rnode(GOUT, 86, 0, 29) },
  { pnode(HMC, 25, 0, IOINTDQSBDOUT, -1, 0), rnode(GOUT, 52, 0, 23) },
  { pnode(HMC, 25, 0, IOINTDQSBDOUT, -1, 1), rnode(GOUT, 52, 0, 24) },
  { pnode(HMC, 25, 0, IOINTDQSBDOUT, -1, 2), rnode(GOUT, 52, 0, 25) },
  { pnode(HMC, 25, 0, IOINTDQSBDOUT, -1, 3), rnode(GOUT, 52, 0, 50) },
  { pnode(HMC, 25, 0, IOINTDQSBDOUT, -1, 4), rnode(GOUT, 59, 0, 16) },
  { pnode(HMC, 25, 0, IOINTDQSBDOUT, -1, 5), rnode(GOUT, 59, 0, 21) },
  { pnode(HMC, 25, 0, IOINTDQSBDOUT, -1, 6), rnode(GOUT, 59, 0, 22) },
  { pnode(HMC, 25, 0, IOINTDQSBDOUT, -1, 7), rnode(GOUT, 59, 0, 23) },
  { pnode(HMC, 25, 0, IOINTDQSBDOUT, -1, 8), rnode(GOUT, 67, 0, 36) },
  { pnode(HMC, 25, 0, IOINTDQSBDOUT, -1, 9), rnode(GOUT, 67, 0, 26) },
  { pnode(HMC, 25, 0, IOINTDQSBDOUT, -1, 10), rnode(GOUT, 68, 0, 0) },
  { pnode(HMC, 25, 0, IOINTDQSBDOUT, -1, 11), rnode(GOUT, 68, 0, 10) },
  { pnode(HMC, 25, 0, IOINTDQSBDOUT, -1, 12), rnode(GOUT, 76, 0, 47) },
  { pnode(HMC, 25, 0, IOINTDQSBDOUT, -1, 13), rnode(GOUT, 76, 0, 42) },
  { pnode(HMC, 25, 0, IOINTDQSBDOUT, -1, 14), rnode(GOUT, 76, 0, 46) },
  { pnode(HMC, 25, 0, IOINTDQSBDOUT, -1, 15), rnode(GOUT, 76, 0, 41) },
  { pnode(HMC, 25, 0, IOINTDQSBDOUT, -1, 16), rnode(GOUT, 84, 0, 9) },
  { pnode(HMC, 25, 0, IOINTDQSBDOUT, -1, 17), rnode(GOUT, 84, 0, 11) },
  { pnode(HMC, 25, 0, IOINTDQSBDOUT, -1, 18), rnode(GOUT, 84, 0, 6) },
  { pnode(HMC, 25, 0, IOINTDQSBDOUT, -1, 19), rnode(GOUT, 84, 0, 7) },
  { pnode(HMC, 25, 0, IOINTDQSBOE, -1, 0), rnode(GOUT, 52, 0, 49) },
  { pnode(HMC, 25, 0, IOINTDQSBOE, -1, 1), rnode(GOUT, 52, 0, 47) },
  { pnode(HMC, 25, 0, IOINTDQSBOE, -1, 2), rnode(GOUT, 59, 0, 24) },
  { pnode(HMC, 25, 0, IOINTDQSBOE, -1, 3), rnode(GOUT, 59, 0, 50) },
  { pnode(HMC, 25, 0, IOINTDQSBOE, -1, 4), rnode(GOUT, 68, 0, 9) },
  { pnode(HMC, 25, 0, IOINTDQSBOE, -1, 5), rnode(GOUT, 68, 0, 6) },
  { pnode(HMC, 25, 0, IOINTDQSBOE, -1, 6), rnode(GOUT, 76, 0, 45) },
  { pnode(HMC, 25, 0, IOINTDQSBOE, -1, 7), rnode(GOUT, 76, 0, 44) },
  { pnode(HMC, 25, 0, IOINTDQSBOE, -1, 8), rnode(GOUT, 84, 0, 5) },
  { pnode(HMC, 25, 0, IOINTDQSBOE, -1, 9), rnode(GOUT, 84, 0, 4) },
  { pnode(HMC, 25, 0, IOINTDQSDOUT, -1, 0), rnode(GOUT, 53, 0, 0) },
  { pnode(HMC, 25, 0, IOINTDQSDOUT, -1, 1), rnode(GOUT, 53, 0, 10) },
  { pnode(HMC, 25, 0, IOINTDQSDOUT, -1, 2), rnode(GOUT, 53, 0, 9) },
  { pnode(HMC, 25, 0, IOINTDQSDOUT, -1, 3), rnode(GOUT, 53, 0, 6) },
  { pnode(HMC, 25, 0, IOINTDQSDOUT, -1, 4), rnode(GOUT, 59, 0, 35) },
  { pnode(HMC, 25, 0, IOINTDQSDOUT, -1, 5), rnode(GOUT, 59, 0, 36) },
  { pnode(HMC, 25, 0, IOINTDQSDOUT, -1, 6), rnode(GOUT, 59, 0, 26) },
  { pnode(HMC, 25, 0, IOINTDQSDOUT, -1, 7), rnode(GOUT, 60, 0, 10) },
  { pnode(HMC, 25, 0, IOINTDQSDOUT, -1, 8), rnode(GOUT, 68, 0, 50) },
  { pnode(HMC, 25, 0, IOINTDQSDOUT, -1, 9), rnode(GOUT, 68, 0, 49) },
  { pnode(HMC, 25, 0, IOINTDQSDOUT, -1, 10), rnode(GOUT, 68, 0, 48) },
  { pnode(HMC, 25, 0, IOINTDQSDOUT, -1, 11), rnode(GOUT, 68, 0, 42) },
  { pnode(HMC, 25, 0, IOINTDQSDOUT, -1, 12), rnode(GOUT, 77, 0, 5) },
  { pnode(HMC, 25, 0, IOINTDQSDOUT, -1, 13), rnode(GOUT, 77, 0, 4) },
  { pnode(HMC, 25, 0, IOINTDQSDOUT, -1, 14), rnode(GOUT, 77, 0, 3) },
  { pnode(HMC, 25, 0, IOINTDQSDOUT, -1, 15), rnode(GOUT, 77, 0, 2) },
  { pnode(HMC, 25, 0, IOINTDQSDOUT, -1, 16), rnode(GOUT, 84, 0, 30) },
  { pnode(HMC, 25, 0, IOINTDQSDOUT, -1, 17), rnode(GOUT, 84, 0, 31) },
  { pnode(HMC, 25, 0, IOINTDQSDOUT, -1, 18), rnode(GOUT, 84, 0, 33) },
  { pnode(HMC, 25, 0, IOINTDQSDOUT, -1, 19), rnode(GOUT, 84, 0, 32) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICACLRFIFOCTRL, -1, 0), rnode(GOUT, 52, 0, 32) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICACLRFIFOCTRL, -1, 1), rnode(GOUT, 59, 0, 30) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICACLRFIFOCTRL, -1, 2), rnode(GOUT, 68, 0, 21) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICACLRFIFOCTRL, -1, 3), rnode(GOUT, 77, 0, 10) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICACLRFIFOCTRL, -1, 4), rnode(GOUT, 84, 0, 49) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICACLRPSTAMBLE, -1, 0), rnode(GOUT, 52, 0, 33) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICACLRPSTAMBLE, -1, 1), rnode(GOUT, 59, 0, 29) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICACLRPSTAMBLE, -1, 2), rnode(GOUT, 68, 0, 16) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICACLRPSTAMBLE, -1, 3), rnode(GOUT, 77, 0, 0) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICACLRPSTAMBLE, -1, 4), rnode(GOUT, 84, 0, 50) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICDQSENA, -1, 0), rnode(GOUT, 55, 0, 21) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICDQSENA, -1, 1), rnode(GOUT, 55, 0, 16) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICDQSENA, -1, 2), rnode(GOUT, 62, 0, 19) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICDQSENA, -1, 3), rnode(GOUT, 62, 0, 14) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICDQSENA, -1, 4), rnode(GOUT, 70, 0, 37) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICDQSENA, -1, 5), rnode(GOUT, 70, 0, 32) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICDQSENA, -1, 6), rnode(GOUT, 79, 0, 50) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICDQSENA, -1, 7), rnode(GOUT, 79, 0, 25) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICDQSENA, -1, 8), rnode(GOUT, 86, 0, 35) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICDQSENA, -1, 9), rnode(GOUT, 86, 0, 37) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICFIFORESET, -1, 0), rnode(GOUT, 51, 0, 19) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICFIFORESET, -1, 1), rnode(GOUT, 58, 0, 12) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICFIFORESET, -1, 2), rnode(GOUT, 66, 0, 34) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICFIFORESET, -1, 3), rnode(GOUT, 75, 0, 21) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICFIFORESET, -1, 4), rnode(GOUT, 82, 0, 26) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICINCRDATAEN, -1, 0), rnode(GOUT, 53, 0, 26) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICINCRDATAEN, -1, 1), rnode(GOUT, 54, 0, 0) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICINCRDATAEN, -1, 2), rnode(GOUT, 60, 0, 32) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICINCRDATAEN, -1, 3), rnode(GOUT, 60, 0, 37) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICINCRDATAEN, -1, 4), rnode(GOUT, 69, 0, 25) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICINCRDATAEN, -1, 5), rnode(GOUT, 69, 0, 50) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICINCRDATAEN, -1, 6), rnode(GOUT, 78, 0, 7) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICINCRDATAEN, -1, 7), rnode(GOUT, 78, 0, 5) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICINCRDATAEN, -1, 8), rnode(GOUT, 86, 0, 2) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICINCRDATAEN, -1, 9), rnode(GOUT, 86, 0, 1) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICINCWRPTR, -1, 0), rnode(GOUT, 51, 0, 40) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICINCWRPTR, -1, 1), rnode(GOUT, 51, 0, 39) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICINCWRPTR, -1, 2), rnode(GOUT, 58, 0, 46) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICINCWRPTR, -1, 3), rnode(GOUT, 58, 0, 45) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICINCWRPTR, -1, 4), rnode(GOUT, 67, 0, 8) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICINCWRPTR, -1, 5), rnode(GOUT, 67, 0, 1) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICINCWRPTR, -1, 6), rnode(GOUT, 75, 0, 28) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICINCWRPTR, -1, 7), rnode(GOUT, 75, 0, 29) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICINCWRPTR, -1, 8), rnode(GOUT, 83, 0, 8) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICINCWRPTR, -1, 9), rnode(GOUT, 83, 0, 1) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICOCT, -1, 0), rnode(GOUT, 52, 0, 9) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICOCT, -1, 1), rnode(GOUT, 52, 0, 11) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICOCT, -1, 2), rnode(GOUT, 58, 0, 26) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICOCT, -1, 3), rnode(GOUT, 59, 0, 0) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICOCT, -1, 4), rnode(GOUT, 67, 0, 48) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICOCT, -1, 5), rnode(GOUT, 67, 0, 47) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICOCT, -1, 6), rnode(GOUT, 76, 0, 3) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICOCT, -1, 7), rnode(GOUT, 76, 0, 8) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICOCT, -1, 8), rnode(GOUT, 83, 0, 33) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICOCT, -1, 9), rnode(GOUT, 83, 0, 32) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICREADLATENCY, -1, 0), rnode(GOUT, 54, 0, 40) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICREADLATENCY, -1, 1), rnode(GOUT, 54, 0, 27) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICREADLATENCY, -1, 2), rnode(GOUT, 54, 0, 28) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICREADLATENCY, -1, 3), rnode(GOUT, 54, 0, 30) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICREADLATENCY, -1, 4), rnode(GOUT, 54, 0, 33) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICREADLATENCY, -1, 5), rnode(GOUT, 61, 0, 42) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICREADLATENCY, -1, 6), rnode(GOUT, 61, 0, 44) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICREADLATENCY, -1, 7), rnode(GOUT, 61, 0, 39) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICREADLATENCY, -1, 8), rnode(GOUT, 61, 0, 27) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICREADLATENCY, -1, 9), rnode(GOUT, 61, 0, 34) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICREADLATENCY, -1, 10), rnode(GOUT, 70, 0, 8) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICREADLATENCY, -1, 11), rnode(GOUT, 70, 0, 13) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICREADLATENCY, -1, 12), rnode(GOUT, 70, 0, 18) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICREADLATENCY, -1, 13), rnode(GOUT, 70, 0, 15) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICREADLATENCY, -1, 14), rnode(GOUT, 70, 0, 16) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICREADLATENCY, -1, 15), rnode(GOUT, 78, 0, 27) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICREADLATENCY, -1, 16), rnode(GOUT, 78, 0, 31) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICREADLATENCY, -1, 17), rnode(GOUT, 78, 0, 33) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICREADLATENCY, -1, 18), rnode(GOUT, 78, 0, 35) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICREADLATENCY, -1, 19), rnode(GOUT, 78, 0, 26) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICREADLATENCY, -1, 20), rnode(GOUT, 86, 0, 50) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICREADLATENCY, -1, 21), rnode(GOUT, 86, 0, 47) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICREADLATENCY, -1, 22), rnode(GOUT, 86, 0, 42) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICREADLATENCY, -1, 23), rnode(GOUT, 86, 0, 41) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICREADLATENCY, -1, 24), rnode(GOUT, 86, 0, 40) },
  { pnode(HMC, 25, 0, IOINTDQSOE, -1, 0), rnode(GOUT, 53, 0, 4) },
  { pnode(HMC, 25, 0, IOINTDQSOE, -1, 1), rnode(GOUT, 53, 0, 3) },
  { pnode(HMC, 25, 0, IOINTDQSOE, -1, 2), rnode(GOUT, 60, 0, 6) },
  { pnode(HMC, 25, 0, IOINTDQSOE, -1, 3), rnode(GOUT, 60, 0, 7) },
  { pnode(HMC, 25, 0, IOINTDQSOE, -1, 4), rnode(GOUT, 68, 0, 45) },
  { pnode(HMC, 25, 0, IOINTDQSOE, -1, 5), rnode(GOUT, 68, 0, 40) },
  { pnode(HMC, 25, 0, IOINTDQSOE, -1, 6), rnode(GOUT, 77, 0, 17) },
  { pnode(HMC, 25, 0, IOINTDQSOE, -1, 7), rnode(GOUT, 77, 0, 13) },
  { pnode(HMC, 25, 0, IOINTDQSOE, -1, 8), rnode(GOUT, 84, 0, 37) },
  { pnode(HMC, 25, 0, IOINTDQSOE, -1, 9), rnode(GOUT, 84, 0, 35) },
  { pnode(HMC, 25, 0, IOINTODTACLR, -1, 0), rnode(GOUT, 51, 0, 28) },
  { pnode(HMC, 25, 0, IOINTODTACLR, -1, 1), rnode(GOUT, 53, 0, 12) },
  { pnode(HMC, 25, 0, IOINTODTDOUT, -1, 0), rnode(GOUT, 51, 0, 37) },
  { pnode(HMC, 25, 0, IOINTODTDOUT, -1, 1), rnode(GOUT, 51, 0, 35) },
  { pnode(HMC, 25, 0, IOINTODTDOUT, -1, 2), rnode(GOUT, 51, 0, 36) },
  { pnode(HMC, 25, 0, IOINTODTDOUT, -1, 3), rnode(GOUT, 51, 0, 26) },
  { pnode(HMC, 25, 0, IOINTODTDOUT, -1, 4), rnode(GOUT, 53, 0, 17) },
  { pnode(HMC, 25, 0, IOINTODTDOUT, -1, 5), rnode(GOUT, 53, 0, 13) },
  { pnode(HMC, 25, 0, IOINTODTDOUT, -1, 6), rnode(GOUT, 53, 0, 18) },
  { pnode(HMC, 25, 0, IOINTODTDOUT, -1, 7), rnode(GOUT, 53, 0, 14) },
  { pnode(HMC, 25, 0, IOINTRASNACLR, -1, -1), rnode(GOUT, 30, 0, 26) },
  { pnode(HMC, 25, 0, IOINTRASNDOUT, -1, 0), rnode(GOUT, 31, 0, 0) },
  { pnode(HMC, 25, 0, IOINTRASNDOUT, -1, 1), rnode(GOUT, 31, 0, 10) },
  { pnode(HMC, 25, 0, IOINTRASNDOUT, -1, 2), rnode(GOUT, 31, 0, 9) },
  { pnode(HMC, 25, 0, IOINTRASNDOUT, -1, 3), rnode(GOUT, 31, 0, 11) },
  { pnode(HMC, 25, 0, IOINTRESETNACLR, -1, -1), rnode(GOUT, 67, 0, 18) },
  { pnode(HMC, 25, 0, IOINTRESETNDOUT, -1, 0), rnode(GOUT, 67, 0, 22) },
  { pnode(HMC, 25, 0, IOINTRESETNDOUT, -1, 1), rnode(GOUT, 67, 0, 23) },
  { pnode(HMC, 25, 0, IOINTRESETNDOUT, -1, 2), rnode(GOUT, 67, 0, 24) },
  { pnode(HMC, 25, 0, IOINTRESETNDOUT, -1, 3), rnode(GOUT, 67, 0, 25) },
  { pnode(HMC, 25, 0, IOINTWENACLR, -1, -1), rnode(GOUT, 26, 0, 20) },
  { pnode(HMC, 25, 0, IOINTWENDOUT, -1, 0), rnode(GOUT, 26, 0, 16) },
  { pnode(HMC, 25, 0, IOINTWENDOUT, -1, 1), rnode(GOUT, 26, 0, 21) },
  { pnode(HMC, 25, 0, IOINTWENDOUT, -1, 2), rnode(GOUT, 26, 0, 22) },
  { pnode(HMC, 25, 0, IOINTWENDOUT, -1, 3), rnode(GOUT, 26, 0, 23) },
  { pnode(HMC, 25, 0, LOCALDEEPPOWERDNCHIP, -1, 0), rnode(GOUT, 41, 0, 50) },
  { pnode(HMC, 25, 0, LOCALDEEPPOWERDNCHIP, -1, 1), rnode(GOUT, 41, 0, 49) },
  { pnode(HMC, 25, 0, LOCALDEEPPOWERDNREQ, -1, -1), rnode(GOUT, 41, 0, 48) },
  { pnode(HMC, 25, 0, LOCALREFRESHCHIP, -1, 0), rnode(GOUT, 41, 0, 42) },
  { pnode(HMC, 25, 0, LOCALREFRESHCHIP, -1, 1), rnode(GOUT, 41, 0, 46) },
  { pnode(HMC, 25, 0, LOCALREFRESHREQ, -1, -1), rnode(GOUT, 41, 0, 47) },
  { pnode(HMC, 25, 0, LOCALSELFRFSHCHIP, -1, 0), rnode(GOUT, 41, 0, 41) },
  { pnode(HMC, 25, 0, LOCALSELFRFSHCHIP, -1, 1), rnode(GOUT, 41, 0, 45) },
  { pnode(HMC, 25, 0, LOCALSELFRFSHREQ, -1, -1), rnode(GOUT, 41, 0, 40) },
  { pnode(HMC, 25, 0, MMRADDR, -1, 0), rnode(GOUT, 73, 0, 42) },
  { pnode(HMC, 25, 0, MMRADDR, -1, 1), rnode(GOUT, 73, 0, 46) },
  { pnode(HMC, 25, 0, MMRADDR, -1, 2), rnode(GOUT, 73, 0, 41) },
  { pnode(HMC, 25, 0, MMRADDR, -1, 3), rnode(GOUT, 73, 0, 45) },
  { pnode(HMC, 25, 0, MMRADDR, -1, 4), rnode(GOUT, 73, 0, 43) },
  { pnode(HMC, 25, 0, MMRADDR, -1, 5), rnode(GOUT, 73, 0, 27) },
  { pnode(HMC, 25, 0, MMRADDR, -1, 6), rnode(GOUT, 73, 0, 28) },
  { pnode(HMC, 25, 0, MMRADDR, -1, 7), rnode(GOUT, 73, 0, 29) },
  { pnode(HMC, 25, 0, MMRADDR, -1, 8), rnode(GOUT, 73, 0, 31) },
  { pnode(HMC, 25, 0, MMRADDR, -1, 9), rnode(GOUT, 73, 0, 33) },
  { pnode(HMC, 25, 0, MMRBE, -1, -1), rnode(GOUT, 74, 0, 4) },
  { pnode(HMC, 25, 0, MMRBURSTBEGIN, -1, -1), rnode(GOUT, 74, 0, 1) },
  { pnode(HMC, 25, 0, MMRBURSTCOUNT, -1, 0), rnode(GOUT, 77, 0, 41) },
  { pnode(HMC, 25, 0, MMRBURSTCOUNT, -1, 1), rnode(GOUT, 77, 0, 40) },
  { pnode(HMC, 25, 0, MMRCLK, -1, -1), rnode(DCMUX, 73, 0, 8) },
  { pnode(HMC, 25, 0, MMRREADREQ, -1, -1), rnode(GOUT, 77, 0, 25) },
  { pnode(HMC, 25, 0, MMRRESETN, -1, -1), rnode(GOUT, 77, 0, 48) },
  { pnode(HMC, 25, 0, MMRWDATA, -1, 0), rnode(GOUT, 73, 0, 37) },
  { pnode(HMC, 25, 0, MMRWDATA, -1, 1), rnode(GOUT, 73, 0, 36) },
  { pnode(HMC, 25, 0, MMRWDATA, -1, 2), rnode(GOUT, 74, 0, 0) },
  { pnode(HMC, 25, 0, MMRWDATA, -1, 3), rnode(GOUT, 74, 0, 9) },
  { pnode(HMC, 25, 0, MMRWDATA, -1, 4), rnode(GOUT, 74, 0, 11) },
  { pnode(HMC, 25, 0, MMRWDATA, -1, 5), rnode(GOUT, 74, 0, 6) },
  { pnode(HMC, 25, 0, MMRWDATA, -1, 6), rnode(GOUT, 74, 0, 7) },
  { pnode(HMC, 25, 0, MMRWDATA, -1, 7), rnode(GOUT, 74, 0, 5) },
  { pnode(HMC, 25, 0, MMRWRITEREQ, -1, -1), rnode(GOUT, 74, 0, 17) },
  { pnode(HMC, 25, 0, PLLLOCKED, -1, -1), rnode(GOUT, 77, 0, 42) },
  { pnode(HMC, 25, 0, PORTCLK, 0, -1), rnode(DCMUX, 41, 0, 0) },
  { pnode(HMC, 25, 0, PORTCLK, 1, -1), rnode(DCMUX, 41, 0, 15) },
  { pnode(HMC, 25, 0, PORTCLK, 2, -1), rnode(DCMUX, 42, 0, 7) },
  { pnode(HMC, 25, 0, PORTCLK, 3, -1), rnode(DCMUX, 45, 0, 13) },
  { pnode(HMC, 25, 0, PORTCLK, 4, -1), rnode(DCMUX, 47, 0, 0) },
  { pnode(HMC, 25, 0, PORTCLK, 5, -1), rnode(DCMUX, 48, 0, 0) },
  { pnode(HMC, 25, 0, SCADDR, -1, 0), rnode(GOUT, 77, 0, 43) },
  { pnode(HMC, 25, 0, SCADDR, -1, 1), rnode(GOUT, 77, 0, 34) },
  { pnode(HMC, 25, 0, SCADDR, -1, 2), rnode(GOUT, 77, 0, 30) },
  { pnode(HMC, 25, 0, SCADDR, -1, 3), rnode(GOUT, 77, 0, 35) },
  { pnode(HMC, 25, 0, SCADDR, -1, 4), rnode(GOUT, 77, 0, 36) },
  { pnode(HMC, 25, 0, SCADDR, -1, 5), rnode(GOUT, 78, 0, 0) },
  { pnode(HMC, 25, 0, SCADDR, -1, 6), rnode(GOUT, 78, 0, 10) },
  { pnode(HMC, 25, 0, SCADDR, -1, 7), rnode(GOUT, 78, 0, 11) },
  { pnode(HMC, 25, 0, SCADDR, -1, 8), rnode(GOUT, 78, 0, 4) },
  { pnode(HMC, 25, 0, SCADDR, -1, 9), rnode(GOUT, 78, 0, 3) },
  { pnode(HMC, 25, 0, SCANEN, -1, -1), rnode(GOUT, 78, 0, 40) },
  { pnode(HMC, 25, 0, SCBE, -1, -1), rnode(GOUT, 78, 0, 20) },
  { pnode(HMC, 25, 0, SCBURSTBEGIN, -1, -1), rnode(GOUT, 78, 0, 45) },
  { pnode(HMC, 25, 0, SCBURSTCOUNT, -1, 0), rnode(GOUT, 78, 0, 46) },
  { pnode(HMC, 25, 0, SCBURSTCOUNT, -1, 1), rnode(GOUT, 78, 0, 41) },
  { pnode(HMC, 25, 0, SCCLK, -1, -1), rnode(DCMUX, 77, 0, 8) },
  { pnode(HMC, 25, 0, SCREADREQ, -1, -1), rnode(GOUT, 78, 0, 2) },
  { pnode(HMC, 25, 0, SCRESETN, -1, -1), rnode(GOUT, 78, 0, 1) },
  { pnode(HMC, 25, 0, SCWDATA, -1, 0), rnode(GOUT, 78, 0, 16) },
  { pnode(HMC, 25, 0, SCWDATA, -1, 1), rnode(GOUT, 78, 0, 21) },
  { pnode(HMC, 25, 0, SCWDATA, -1, 2), rnode(GOUT, 78, 0, 22) },
  { pnode(HMC, 25, 0, SCWDATA, -1, 3), rnode(GOUT, 78, 0, 24) },
  { pnode(HMC, 25, 0, SCWDATA, -1, 4), rnode(GOUT, 78, 0, 25) },
  { pnode(HMC, 25, 0, SCWDATA, -1, 5), rnode(GOUT, 78, 0, 49) },
  { pnode(HMC, 25, 0, SCWDATA, -1, 6), rnode(GOUT, 78, 0, 47) },
  { pnode(HMC, 25, 0, SCWDATA, -1, 7), rnode(GOUT, 78, 0, 42) },
  { pnode(HMC, 25, 0, SCWRITEREQ, -1, -1), rnode(GOUT, 78, 0, 8) },
  { pnode(HMC, 25, 0, SOFTRESETN, -1, -1), rnode(GOUT, 77, 0, 39) },
  { pnode(HMC, 25, 0, AFICTLLONGIDLE, -1, 0), rnode(GIN, 77, 0, 25) },
  { pnode(HMC, 25, 0, AFICTLLONGIDLE, -1, 1), rnode(GIN, 77, 0, 23) },
  { pnode(HMC, 25, 0, AFICTLREFRESHDONE, -1, 0), rnode(GIN, 77, 0, 22) },
  { pnode(HMC, 25, 0, AFICTLREFRESHDONE, -1, 1), rnode(GIN, 77, 0, 20) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 0), rnode(GIN, 76, 0, 22) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 1), rnode(GIN, 76, 0, 21) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 2), rnode(GIN, 76, 0, 20) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 3), rnode(GIN, 76, 0, 19) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 4), rnode(GIN, 76, 0, 18) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 5), rnode(GIN, 76, 0, 17) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 6), rnode(GIN, 76, 0, 16) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 7), rnode(GIN, 76, 0, 14) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 8), rnode(GIN, 76, 0, 13) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 9), rnode(GIN, 77, 0, 0) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 10), rnode(GIN, 77, 0, 1) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 11), rnode(GIN, 77, 0, 2) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 12), rnode(GIN, 77, 0, 3) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 13), rnode(GIN, 77, 0, 4) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 14), rnode(GIN, 77, 0, 5) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 15), rnode(GIN, 77, 0, 6) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 16), rnode(GIN, 78, 0, 16) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 17), rnode(GIN, 78, 0, 14) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 18), rnode(GIN, 78, 0, 13) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 19), rnode(GIN, 79, 0, 0) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 20), rnode(GIN, 79, 0, 1) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 21), rnode(GIN, 79, 0, 2) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 22), rnode(GIN, 79, 0, 4) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 23), rnode(GIN, 79, 0, 5) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 24), rnode(GIN, 79, 0, 8) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 25), rnode(GIN, 79, 0, 10) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 26), rnode(GIN, 79, 0, 11) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 27), rnode(GIN, 79, 0, 25) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 28), rnode(GIN, 79, 0, 23) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 29), rnode(GIN, 79, 0, 22) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 30), rnode(GIN, 79, 0, 21) },
  { pnode(HMC, 25, 0, AVLREADDATA, -1, 31), rnode(GIN, 79, 0, 20) },
  { pnode(HMC, 25, 0, AVLWAITREQUEST, -1, -1), rnode(GIN, 77, 0, 18) },
  { pnode(HMC, 25, 0, BONDINGOUT, 0, 0), rnode(GIN, 42, 0, 10) },
  { pnode(HMC, 25, 0, BONDINGOUT, 0, 1), rnode(GIN, 41, 0, 5) },
  { pnode(HMC, 25, 0, BONDINGOUT, 0, 2), rnode(GIN, 57, 0, 25) },
  { pnode(HMC, 25, 0, BONDINGOUT, 0, 3), rnode(GIN, 66, 0, 21) },
  { pnode(HMC, 25, 0, BONDINGOUT, 1, 0), rnode(GIN, 41, 0, 3) },
  { pnode(HMC, 25, 0, BONDINGOUT, 1, 1), rnode(GIN, 41, 0, 8) },
  { pnode(HMC, 25, 0, BONDINGOUT, 1, 2), rnode(GIN, 41, 0, 25) },
  { pnode(HMC, 25, 0, BONDINGOUT, 1, 3), rnode(GIN, 47, 0, 25) },
  { pnode(HMC, 25, 0, BONDINGOUT, 1, 4), rnode(GIN, 47, 0, 20) },
  { pnode(HMC, 25, 0, BONDINGOUT, 1, 5), rnode(GIN, 47, 0, 15) },
  { pnode(HMC, 25, 0, BONDINGOUT, 2, 0), rnode(GIN, 41, 0, 4) },
  { pnode(HMC, 25, 0, BONDINGOUT, 2, 1), rnode(GIN, 41, 0, 9) },
  { pnode(HMC, 25, 0, BONDINGOUT, 2, 2), rnode(GIN, 41, 0, 24) },
  { pnode(HMC, 25, 0, BONDINGOUT, 2, 3), rnode(GIN, 47, 0, 24) },
  { pnode(HMC, 25, 0, BONDINGOUT, 2, 4), rnode(GIN, 47, 0, 19) },
  { pnode(HMC, 25, 0, BONDINGOUT, 2, 5), rnode(GIN, 47, 0, 14) },
  { pnode(HMC, 25, 0, CTLCALREQ, -1, -1), rnode(GIN, 46, 0, 4) },
  { pnode(HMC, 25, 0, IOINTAFICALFAIL, -1, -1), rnode(GIN, 79, 0, 19) },
  { pnode(HMC, 25, 0, IOINTAFICALSUCCESS, -1, -1), rnode(GIN, 79, 0, 17) },
  { pnode(HMC, 25, 0, IOINTAFIRLAT, -1, 0), rnode(GIN, 79, 0, 16) },
  { pnode(HMC, 25, 0, IOINTAFIRLAT, -1, 1), rnode(GIN, 80, 0, 2) },
  { pnode(HMC, 25, 0, IOINTAFIRLAT, -1, 2), rnode(GIN, 80, 0, 4) },
  { pnode(HMC, 25, 0, IOINTAFIRLAT, -1, 3), rnode(GIN, 80, 0, 5) },
  { pnode(HMC, 25, 0, IOINTAFIRLAT, -1, 4), rnode(GIN, 80, 0, 6) },
  { pnode(HMC, 25, 0, IOINTAFIWLAT, -1, 0), rnode(GIN, 77, 0, 7) },
  { pnode(HMC, 25, 0, IOINTAFIWLAT, -1, 1), rnode(GIN, 77, 0, 8) },
  { pnode(HMC, 25, 0, IOINTAFIWLAT, -1, 2), rnode(GIN, 77, 0, 9) },
  { pnode(HMC, 25, 0, IOINTAFIWLAT, -1, 3), rnode(GIN, 77, 0, 11) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 0), rnode(GIN, 50, 0, 1) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 1), rnode(GIN, 50, 0, 2) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 2), rnode(GIN, 50, 0, 3) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 3), rnode(GIN, 50, 0, 4) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 4), rnode(GIN, 50, 0, 22) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 5), rnode(GIN, 50, 0, 20) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 6), rnode(GIN, 50, 0, 19) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 7), rnode(GIN, 50, 0, 17) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 8), rnode(GIN, 49, 0, 17) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 9), rnode(GIN, 49, 0, 16) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 10), rnode(GIN, 49, 0, 15) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 11), rnode(GIN, 49, 0, 14) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 12), rnode(GIN, 51, 0, 25) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 13), rnode(GIN, 51, 0, 24) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 14), rnode(GIN, 51, 0, 23) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 15), rnode(GIN, 51, 0, 22) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 16), rnode(GIN, 54, 0, 1) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 17), rnode(GIN, 54, 0, 2) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 18), rnode(GIN, 54, 0, 3) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 19), rnode(GIN, 54, 0, 4) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 20), rnode(GIN, 54, 0, 7) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 21), rnode(GIN, 54, 0, 8) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 22), rnode(GIN, 54, 0, 9) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 23), rnode(GIN, 54, 0, 10) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 24), rnode(GIN, 53, 0, 19) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 25), rnode(GIN, 53, 0, 18) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 26), rnode(GIN, 53, 0, 17) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 27), rnode(GIN, 53, 0, 16) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 28), rnode(GIN, 54, 0, 25) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 29), rnode(GIN, 54, 0, 24) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 30), rnode(GIN, 54, 0, 23) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 31), rnode(GIN, 54, 0, 22) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 36), rnode(GIN, 56, 0, 15) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 37), rnode(GIN, 56, 0, 14) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 38), rnode(GIN, 56, 0, 13) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 39), rnode(GIN, 57, 0, 0) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 40), rnode(GIN, 57, 0, 12) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 41), rnode(GIN, 57, 0, 24) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 42), rnode(GIN, 57, 0, 23) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 43), rnode(GIN, 57, 0, 21) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 44), rnode(GIN, 56, 0, 21) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 45), rnode(GIN, 56, 0, 20) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 46), rnode(GIN, 56, 0, 19) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 47), rnode(GIN, 56, 0, 18) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 48), rnode(GIN, 58, 0, 9) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 49), rnode(GIN, 58, 0, 10) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 50), rnode(GIN, 58, 0, 11) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 51), rnode(GIN, 58, 0, 12) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 52), rnode(GIN, 60, 0, 15) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 53), rnode(GIN, 60, 0, 14) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 54), rnode(GIN, 60, 0, 13) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 55), rnode(GIN, 61, 0, 0) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 56), rnode(GIN, 61, 0, 3) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 57), rnode(GIN, 61, 0, 4) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 58), rnode(GIN, 61, 0, 5) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 59), rnode(GIN, 61, 0, 6) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 60), rnode(GIN, 60, 0, 23) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 61), rnode(GIN, 60, 0, 22) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 62), rnode(GIN, 60, 0, 21) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 63), rnode(GIN, 60, 0, 20) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 64), rnode(GIN, 61, 0, 9) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 65), rnode(GIN, 61, 0, 10) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 66), rnode(GIN, 61, 0, 11) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 67), rnode(GIN, 61, 0, 12) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 72), rnode(GIN, 65, 0, 25) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 73), rnode(GIN, 65, 0, 24) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 74), rnode(GIN, 65, 0, 23) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 75), rnode(GIN, 65, 0, 22) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 76), rnode(GIN, 66, 0, 2) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 77), rnode(GIN, 66, 0, 4) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 78), rnode(GIN, 66, 0, 5) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 79), rnode(GIN, 66, 0, 7) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 80), rnode(GIN, 65, 0, 0) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 81), rnode(GIN, 65, 0, 1) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 82), rnode(GIN, 65, 0, 2) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 83), rnode(GIN, 65, 0, 3) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 84), rnode(GIN, 66, 0, 13) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 85), rnode(GIN, 67, 0, 0) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 86), rnode(GIN, 67, 0, 1) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 87), rnode(GIN, 67, 0, 2) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 88), rnode(GIN, 69, 0, 22) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 89), rnode(GIN, 69, 0, 21) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 90), rnode(GIN, 69, 0, 20) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 91), rnode(GIN, 69, 0, 19) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 92), rnode(GIN, 69, 0, 16) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 93), rnode(GIN, 69, 0, 15) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 94), rnode(GIN, 69, 0, 14) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 95), rnode(GIN, 69, 0, 13) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 96), rnode(GIN, 69, 0, 8) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 97), rnode(GIN, 69, 0, 9) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 98), rnode(GIN, 69, 0, 10) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 99), rnode(GIN, 69, 0, 11) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 100), rnode(GIN, 70, 0, 2) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 101), rnode(GIN, 70, 0, 3) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 102), rnode(GIN, 70, 0, 4) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 103), rnode(GIN, 70, 0, 5) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 108), rnode(GIN, 74, 0, 6) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 109), rnode(GIN, 74, 0, 7) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 110), rnode(GIN, 74, 0, 8) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 111), rnode(GIN, 74, 0, 9) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 112), rnode(GIN, 74, 0, 17) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 113), rnode(GIN, 74, 0, 15) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 114), rnode(GIN, 74, 0, 14) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 115), rnode(GIN, 75, 0, 0) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 116), rnode(GIN, 74, 0, 0) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 117), rnode(GIN, 74, 0, 1) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 118), rnode(GIN, 74, 0, 2) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 119), rnode(GIN, 74, 0, 3) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 120), rnode(GIN, 75, 0, 20) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 121), rnode(GIN, 75, 0, 19) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 122), rnode(GIN, 75, 0, 18) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 123), rnode(GIN, 75, 0, 17) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 124), rnode(GIN, 78, 0, 6) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 125), rnode(GIN, 78, 0, 7) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 126), rnode(GIN, 78, 0, 8) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 127), rnode(GIN, 78, 0, 9) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 128), rnode(GIN, 78, 0, 12) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 129), rnode(GIN, 78, 0, 25) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 130), rnode(GIN, 78, 0, 24) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 131), rnode(GIN, 78, 0, 23) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 132), rnode(GIN, 77, 0, 14) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 133), rnode(GIN, 77, 0, 13) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 134), rnode(GIN, 78, 0, 0) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 135), rnode(GIN, 78, 0, 1) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 136), rnode(GIN, 78, 0, 20) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 137), rnode(GIN, 78, 0, 19) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 138), rnode(GIN, 78, 0, 18) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 139), rnode(GIN, 78, 0, 17) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 144), rnode(GIN, 81, 0, 25) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 145), rnode(GIN, 81, 0, 22) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 146), rnode(GIN, 81, 0, 18) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 147), rnode(GIN, 81, 0, 14) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 148), rnode(GIN, 82, 0, 8) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 149), rnode(GIN, 82, 0, 9) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 150), rnode(GIN, 82, 0, 10) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 151), rnode(GIN, 82, 0, 11) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 152), rnode(GIN, 80, 0, 13) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 153), rnode(GIN, 81, 0, 0) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 154), rnode(GIN, 81, 0, 1) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 155), rnode(GIN, 81, 0, 2) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 156), rnode(GIN, 82, 0, 15) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 157), rnode(GIN, 82, 0, 14) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 158), rnode(GIN, 82, 0, 13) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 159), rnode(GIN, 83, 0, 0) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 160), rnode(GIN, 86, 0, 3) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 161), rnode(GIN, 86, 0, 4) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 162), rnode(GIN, 86, 0, 5) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 163), rnode(GIN, 86, 0, 6) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 164), rnode(GIN, 86, 0, 9) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 165), rnode(GIN, 86, 0, 10) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 166), rnode(GIN, 86, 0, 11) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 167), rnode(GIN, 86, 0, 12) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 168), rnode(GIN, 85, 0, 17) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 169), rnode(GIN, 85, 0, 16) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 170), rnode(GIN, 85, 0, 15) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 171), rnode(GIN, 85, 0, 14) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 172), rnode(GIN, 86, 0, 23) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 173), rnode(GIN, 86, 0, 22) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 174), rnode(GIN, 86, 0, 21) },
  { pnode(HMC, 25, 0, IOINTDQDIN, -1, 175), rnode(GIN, 86, 0, 20) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICRDATAVALID, -1, 0), rnode(GIN, 54, 0, 0) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICRDATAVALID, -1, 1), rnode(GIN, 60, 0, 16) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICRDATAVALID, -1, 2), rnode(GIN, 69, 0, 23) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICRDATAVALID, -1, 3), rnode(GIN, 78, 0, 5) },
  { pnode(HMC, 25, 0, IOINTDQSLOGICRDATAVALID, -1, 4), rnode(GIN, 86, 0, 2) },
  { pnode(HMC, 25, 0, LOCALDEEPPOWERDNACK, -1, -1), rnode(GIN, 40, 0, 17) },
  { pnode(HMC, 25, 0, LOCALINITDONE, -1, -1), rnode(GIN, 40, 0, 16) },
  { pnode(HMC, 25, 0, LOCALPOWERDOWNACK, -1, -1), rnode(GIN, 40, 0, 15) },
  { pnode(HMC, 25, 0, LOCALREFRESHACK, -1, -1), rnode(GIN, 40, 0, 14) },
  { pnode(HMC, 25, 0, LOCALSELFRFSHACK, -1, -1), rnode(GIN, 40, 0, 13) },
  { pnode(HMC, 25, 0, MMRRDATA, -1, 0), rnode(GIN, 74, 0, 16) },
  { pnode(HMC, 25, 0, MMRRDATA, -1, 1), rnode(GIN, 74, 0, 13) },
  { pnode(HMC, 25, 0, MMRRDATA, -1, 2), rnode(GIN, 75, 0, 1) },
  { pnode(HMC, 25, 0, MMRRDATA, -1, 3), rnode(GIN, 75, 0, 3) },
  { pnode(HMC, 25, 0, MMRRDATA, -1, 4), rnode(GIN, 75, 0, 4) },
  { pnode(HMC, 25, 0, MMRRDATA, -1, 5), rnode(GIN, 75, 0, 5) },
  { pnode(HMC, 25, 0, MMRRDATA, -1, 6), rnode(GIN, 75, 0, 6) },
  { pnode(HMC, 25, 0, MMRRDATA, -1, 7), rnode(GIN, 75, 0, 7) },
  { pnode(HMC, 25, 0, MMRRDATAVALID, -1, -1), rnode(GIN, 74, 0, 18) },
  { pnode(HMC, 25, 0, MMRWAITREQUEST, -1, -1), rnode(GIN, 75, 0, 21) },
  { pnode(HMC, 25, 0, OAMMREADY, -1, 0), rnode(GIN, 41, 0, 0) },
  { pnode(HMC, 25, 0, OAMMREADY, -1, 1), rnode(GIN, 51, 0, 9) },
  { pnode(HMC, 25, 0, OAMMREADY, -1, 2), rnode(GIN, 41, 0, 10) },
  { pnode(HMC, 25, 0, OAMMREADY, -1, 3), rnode(GIN, 47, 0, 10) },
  { pnode(HMC, 25, 0, OAMMREADY, -1, 4), rnode(GIN, 47, 0, 23) },
  { pnode(HMC, 25, 0, OAMMREADY, -1, 5), rnode(GIN, 47, 0, 18) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 0), rnode(GIN, 41, 0, 23) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 1), rnode(GIN, 41, 0, 22) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 2), rnode(GIN, 41, 0, 21) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 3), rnode(GIN, 41, 0, 20) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 4), rnode(GIN, 41, 0, 19) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 5), rnode(GIN, 41, 0, 18) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 6), rnode(GIN, 41, 0, 17) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 7), rnode(GIN, 41, 0, 16) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 8), rnode(GIN, 41, 0, 15) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 9), rnode(GIN, 41, 0, 14) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 10), rnode(GIN, 41, 0, 13) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 11), rnode(GIN, 42, 0, 0) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 12), rnode(GIN, 42, 0, 1) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 13), rnode(GIN, 42, 0, 2) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 14), rnode(GIN, 42, 0, 3) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 15), rnode(GIN, 42, 0, 4) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 16), rnode(GIN, 42, 0, 5) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 17), rnode(GIN, 42, 0, 6) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 18), rnode(GIN, 42, 0, 7) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 19), rnode(GIN, 42, 0, 8) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 20), rnode(GIN, 42, 0, 11) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 21), rnode(GIN, 42, 0, 12) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 22), rnode(GIN, 42, 0, 25) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 23), rnode(GIN, 42, 0, 24) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 24), rnode(GIN, 42, 0, 23) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 25), rnode(GIN, 42, 0, 22) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 26), rnode(GIN, 43, 0, 0) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 27), rnode(GIN, 43, 0, 1) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 28), rnode(GIN, 43, 0, 2) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 29), rnode(GIN, 43, 0, 3) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 30), rnode(GIN, 43, 0, 4) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 31), rnode(GIN, 43, 0, 5) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 32), rnode(GIN, 43, 0, 6) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 33), rnode(GIN, 43, 0, 7) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 34), rnode(GIN, 43, 0, 8) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 35), rnode(GIN, 43, 0, 9) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 36), rnode(GIN, 43, 0, 10) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 37), rnode(GIN, 43, 0, 11) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 38), rnode(GIN, 43, 0, 12) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 39), rnode(GIN, 43, 0, 25) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 40), rnode(GIN, 43, 0, 24) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 41), rnode(GIN, 43, 0, 23) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 42), rnode(GIN, 43, 0, 22) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 43), rnode(GIN, 43, 0, 21) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 44), rnode(GIN, 43, 0, 20) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 45), rnode(GIN, 43, 0, 19) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 46), rnode(GIN, 43, 0, 18) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 47), rnode(GIN, 43, 0, 17) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 48), rnode(GIN, 43, 0, 16) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 49), rnode(GIN, 43, 0, 15) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 50), rnode(GIN, 43, 0, 14) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 51), rnode(GIN, 43, 0, 13) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 52), rnode(GIN, 45, 0, 16) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 53), rnode(GIN, 45, 0, 15) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 54), rnode(GIN, 45, 0, 14) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 55), rnode(GIN, 45, 0, 13) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 56), rnode(GIN, 46, 0, 0) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 57), rnode(GIN, 46, 0, 1) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 58), rnode(GIN, 46, 0, 2) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 59), rnode(GIN, 46, 0, 3) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 60), rnode(GIN, 46, 0, 5) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 61), rnode(GIN, 46, 0, 6) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 62), rnode(GIN, 46, 0, 7) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 63), rnode(GIN, 46, 0, 8) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 64), rnode(GIN, 46, 0, 9) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 65), rnode(GIN, 46, 0, 10) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 66), rnode(GIN, 46, 0, 11) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 67), rnode(GIN, 46, 0, 12) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 68), rnode(GIN, 46, 0, 25) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 69), rnode(GIN, 46, 0, 24) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 70), rnode(GIN, 46, 0, 23) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 71), rnode(GIN, 46, 0, 22) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 72), rnode(GIN, 46, 0, 21) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 73), rnode(GIN, 46, 0, 20) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 74), rnode(GIN, 46, 0, 19) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 75), rnode(GIN, 46, 0, 18) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 76), rnode(GIN, 47, 0, 6) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 77), rnode(GIN, 47, 0, 7) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 78), rnode(GIN, 47, 0, 8) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 0, 79), rnode(GIN, 47, 0, 9) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 0), rnode(GIN, 47, 0, 13) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 1), rnode(GIN, 48, 0, 0) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 2), rnode(GIN, 48, 0, 1) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 3), rnode(GIN, 48, 0, 7) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 4), rnode(GIN, 48, 0, 8) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 5), rnode(GIN, 48, 0, 9) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 6), rnode(GIN, 48, 0, 10) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 7), rnode(GIN, 48, 0, 11) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 8), rnode(GIN, 48, 0, 12) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 9), rnode(GIN, 48, 0, 25) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 10), rnode(GIN, 48, 0, 24) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 11), rnode(GIN, 48, 0, 23) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 12), rnode(GIN, 48, 0, 22) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 13), rnode(GIN, 48, 0, 21) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 14), rnode(GIN, 48, 0, 20) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 15), rnode(GIN, 48, 0, 19) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 16), rnode(GIN, 48, 0, 18) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 17), rnode(GIN, 48, 0, 17) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 18), rnode(GIN, 48, 0, 16) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 19), rnode(GIN, 48, 0, 15) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 20), rnode(GIN, 48, 0, 14) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 21), rnode(GIN, 48, 0, 13) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 22), rnode(GIN, 49, 0, 0) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 23), rnode(GIN, 49, 0, 1) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 24), rnode(GIN, 49, 0, 2) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 25), rnode(GIN, 50, 0, 7) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 26), rnode(GIN, 50, 0, 8) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 27), rnode(GIN, 50, 0, 9) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 28), rnode(GIN, 50, 0, 10) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 29), rnode(GIN, 50, 0, 11) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 30), rnode(GIN, 50, 0, 12) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 31), rnode(GIN, 50, 0, 25) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 32), rnode(GIN, 50, 0, 24) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 33), rnode(GIN, 50, 0, 23) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 34), rnode(GIN, 50, 0, 21) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 35), rnode(GIN, 50, 0, 18) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 36), rnode(GIN, 50, 0, 16) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 37), rnode(GIN, 50, 0, 14) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 38), rnode(GIN, 50, 0, 13) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 39), rnode(GIN, 51, 0, 0) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 40), rnode(GIN, 51, 0, 1) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 41), rnode(GIN, 51, 0, 2) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 42), rnode(GIN, 51, 0, 3) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 43), rnode(GIN, 51, 0, 4) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 44), rnode(GIN, 51, 0, 5) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 45), rnode(GIN, 51, 0, 10) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 46), rnode(GIN, 51, 0, 11) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 47), rnode(GIN, 52, 0, 11) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 48), rnode(GIN, 52, 0, 12) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 49), rnode(GIN, 52, 0, 25) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 50), rnode(GIN, 52, 0, 24) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 51), rnode(GIN, 52, 0, 23) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 52), rnode(GIN, 52, 0, 22) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 53), rnode(GIN, 52, 0, 21) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 54), rnode(GIN, 52, 0, 19) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 55), rnode(GIN, 52, 0, 18) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 56), rnode(GIN, 52, 0, 17) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 57), rnode(GIN, 52, 0, 16) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 58), rnode(GIN, 52, 0, 15) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 59), rnode(GIN, 52, 0, 14) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 60), rnode(GIN, 52, 0, 13) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 61), rnode(GIN, 53, 0, 0) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 62), rnode(GIN, 53, 0, 1) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 63), rnode(GIN, 53, 0, 2) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 64), rnode(GIN, 53, 0, 3) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 65), rnode(GIN, 53, 0, 4) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 66), rnode(GIN, 53, 0, 6) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 67), rnode(GIN, 53, 0, 8) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 68), rnode(GIN, 53, 0, 11) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 69), rnode(GIN, 53, 0, 25) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 70), rnode(GIN, 53, 0, 23) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 71), rnode(GIN, 54, 0, 21) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 72), rnode(GIN, 54, 0, 19) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 73), rnode(GIN, 54, 0, 18) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 74), rnode(GIN, 54, 0, 17) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 75), rnode(GIN, 54, 0, 16) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 76), rnode(GIN, 54, 0, 15) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 77), rnode(GIN, 54, 0, 13) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 78), rnode(GIN, 55, 0, 0) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 1, 79), rnode(GIN, 55, 0, 3) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 0), rnode(GIN, 55, 0, 5) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 1), rnode(GIN, 55, 0, 6) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 2), rnode(GIN, 55, 0, 8) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 3), rnode(GIN, 55, 0, 10) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 4), rnode(GIN, 55, 0, 11) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 5), rnode(GIN, 55, 0, 12) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 6), rnode(GIN, 55, 0, 25) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 7), rnode(GIN, 55, 0, 24) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 8), rnode(GIN, 55, 0, 22) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 9), rnode(GIN, 55, 0, 21) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 10), rnode(GIN, 55, 0, 15) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 11), rnode(GIN, 55, 0, 13) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 12), rnode(GIN, 57, 0, 3) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 13), rnode(GIN, 57, 0, 4) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 14), rnode(GIN, 57, 0, 5) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 15), rnode(GIN, 57, 0, 6) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 16), rnode(GIN, 57, 0, 7) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 17), rnode(GIN, 57, 0, 8) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 18), rnode(GIN, 57, 0, 9) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 19), rnode(GIN, 57, 0, 10) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 20), rnode(GIN, 57, 0, 22) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 21), rnode(GIN, 57, 0, 20) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 22), rnode(GIN, 57, 0, 18) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 23), rnode(GIN, 57, 0, 17) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 24), rnode(GIN, 57, 0, 16) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 25), rnode(GIN, 57, 0, 15) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 26), rnode(GIN, 57, 0, 14) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 27), rnode(GIN, 57, 0, 13) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 28), rnode(GIN, 58, 0, 0) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 29), rnode(GIN, 58, 0, 1) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 30), rnode(GIN, 58, 0, 2) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 31), rnode(GIN, 59, 0, 7) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 32), rnode(GIN, 59, 0, 8) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 33), rnode(GIN, 59, 0, 9) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 34), rnode(GIN, 59, 0, 10) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 35), rnode(GIN, 59, 0, 11) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 36), rnode(GIN, 59, 0, 12) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 37), rnode(GIN, 59, 0, 25) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 38), rnode(GIN, 59, 0, 23) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 39), rnode(GIN, 59, 0, 22) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 40), rnode(GIN, 59, 0, 21) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 41), rnode(GIN, 59, 0, 20) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 42), rnode(GIN, 59, 0, 19) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 43), rnode(GIN, 59, 0, 18) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 44), rnode(GIN, 59, 0, 17) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 45), rnode(GIN, 59, 0, 16) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 46), rnode(GIN, 59, 0, 15) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 47), rnode(GIN, 59, 0, 14) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 48), rnode(GIN, 59, 0, 13) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 49), rnode(GIN, 60, 0, 0) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 50), rnode(GIN, 60, 0, 2) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 51), rnode(GIN, 60, 0, 4) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 52), rnode(GIN, 60, 0, 6) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 53), rnode(GIN, 60, 0, 7) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 54), rnode(GIN, 60, 0, 9) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 55), rnode(GIN, 60, 0, 11) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 56), rnode(GIN, 61, 0, 25) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 57), rnode(GIN, 61, 0, 23) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 58), rnode(GIN, 61, 0, 22) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 59), rnode(GIN, 61, 0, 21) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 60), rnode(GIN, 61, 0, 20) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 61), rnode(GIN, 61, 0, 19) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 62), rnode(GIN, 61, 0, 17) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 63), rnode(GIN, 61, 0, 16) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 64), rnode(GIN, 61, 0, 13) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 65), rnode(GIN, 62, 0, 1) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 66), rnode(GIN, 62, 0, 2) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 67), rnode(GIN, 62, 0, 4) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 68), rnode(GIN, 62, 0, 6) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 69), rnode(GIN, 62, 0, 7) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 70), rnode(GIN, 62, 0, 8) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 71), rnode(GIN, 62, 0, 9) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 72), rnode(GIN, 62, 0, 10) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 73), rnode(GIN, 62, 0, 12) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 74), rnode(GIN, 62, 0, 25) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 75), rnode(GIN, 62, 0, 16) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 76), rnode(GIN, 62, 0, 14) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 77), rnode(GIN, 62, 0, 13) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 78), rnode(GIN, 63, 0, 0) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 2, 79), rnode(GIN, 63, 0, 2) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 0), rnode(GIN, 63, 0, 5) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 1), rnode(GIN, 63, 0, 7) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 2), rnode(GIN, 65, 0, 19) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 3), rnode(GIN, 65, 0, 18) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 4), rnode(GIN, 65, 0, 17) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 5), rnode(GIN, 65, 0, 16) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 6), rnode(GIN, 65, 0, 15) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 7), rnode(GIN, 65, 0, 14) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 8), rnode(GIN, 65, 0, 13) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 9), rnode(GIN, 66, 0, 0) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 10), rnode(GIN, 66, 0, 1) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 11), rnode(GIN, 66, 0, 3) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 12), rnode(GIN, 66, 0, 6) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 13), rnode(GIN, 66, 0, 8) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 14), rnode(GIN, 66, 0, 10) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 15), rnode(GIN, 66, 0, 11) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 16), rnode(GIN, 66, 0, 12) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 17), rnode(GIN, 66, 0, 25) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 18), rnode(GIN, 66, 0, 24) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 19), rnode(GIN, 66, 0, 23) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 20), rnode(GIN, 66, 0, 20) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 21), rnode(GIN, 66, 0, 19) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 22), rnode(GIN, 66, 0, 17) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 23), rnode(GIN, 66, 0, 16) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 24), rnode(GIN, 66, 0, 15) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 25), rnode(GIN, 66, 0, 14) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 26), rnode(GIN, 68, 0, 0) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 27), rnode(GIN, 68, 0, 1) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 28), rnode(GIN, 68, 0, 2) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 29), rnode(GIN, 68, 0, 3) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 30), rnode(GIN, 68, 0, 4) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 31), rnode(GIN, 68, 0, 5) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 32), rnode(GIN, 68, 0, 6) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 33), rnode(GIN, 68, 0, 8) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 34), rnode(GIN, 68, 0, 9) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 35), rnode(GIN, 68, 0, 10) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 36), rnode(GIN, 68, 0, 11) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 37), rnode(GIN, 68, 0, 12) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 38), rnode(GIN, 68, 0, 25) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 39), rnode(GIN, 68, 0, 24) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 40), rnode(GIN, 68, 0, 22) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 41), rnode(GIN, 68, 0, 21) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 42), rnode(GIN, 68, 0, 20) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 43), rnode(GIN, 68, 0, 19) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 44), rnode(GIN, 68, 0, 17) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 45), rnode(GIN, 68, 0, 15) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 46), rnode(GIN, 68, 0, 23) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 47), rnode(GIN, 70, 0, 6) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 48), rnode(GIN, 70, 0, 8) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 49), rnode(GIN, 70, 0, 9) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 50), rnode(GIN, 70, 0, 10) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 51), rnode(GIN, 70, 0, 11) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 52), rnode(GIN, 70, 0, 12) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 53), rnode(GIN, 70, 0, 24) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 54), rnode(GIN, 70, 0, 23) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 55), rnode(GIN, 70, 0, 20) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 56), rnode(GIN, 70, 0, 18) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 57), rnode(GIN, 70, 0, 17) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 58), rnode(GIN, 70, 0, 15) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 59), rnode(GIN, 70, 0, 13) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 60), rnode(GIN, 71, 0, 0) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 61), rnode(GIN, 71, 0, 1) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 62), rnode(GIN, 71, 0, 2) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 63), rnode(GIN, 71, 0, 3) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 64), rnode(GIN, 71, 0, 5) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 65), rnode(GIN, 71, 0, 6) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 66), rnode(GIN, 71, 0, 25) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 67), rnode(GIN, 71, 0, 23) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 68), rnode(GIN, 71, 0, 22) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 69), rnode(GIN, 71, 0, 21) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 70), rnode(GIN, 71, 0, 19) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 71), rnode(GIN, 71, 0, 16) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 72), rnode(GIN, 74, 0, 12) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 73), rnode(GIN, 74, 0, 25) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 74), rnode(GIN, 74, 0, 24) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 75), rnode(GIN, 74, 0, 23) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 76), rnode(GIN, 74, 0, 22) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 77), rnode(GIN, 74, 0, 21) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 78), rnode(GIN, 74, 0, 20) },
  { pnode(HMC, 25, 0, ORDAVSTDATA, 3, 79), rnode(GIN, 74, 0, 19) },
  { pnode(HMC, 25, 0, ORDAVSTVALID, 0, -1), rnode(GIN, 42, 0, 9) },
  { pnode(HMC, 25, 0, ORDAVSTVALID, 1, -1), rnode(GIN, 51, 0, 6) },
  { pnode(HMC, 25, 0, ORDAVSTVALID, 2, -1), rnode(GIN, 57, 0, 11) },
  { pnode(HMC, 25, 0, ORDAVSTVALID, 3, -1), rnode(GIN, 66, 0, 22) },
  { pnode(HMC, 25, 0, OWRACKAVSTDATA, 0, -1), rnode(GIN, 41, 0, 1) },
  { pnode(HMC, 25, 0, OWRACKAVSTDATA, 1, -1), rnode(GIN, 41, 0, 6) },
  { pnode(HMC, 25, 0, OWRACKAVSTDATA, 2, -1), rnode(GIN, 41, 0, 11) },
  { pnode(HMC, 25, 0, OWRACKAVSTDATA, 3, -1), rnode(GIN, 47, 0, 11) },
  { pnode(HMC, 25, 0, OWRACKAVSTDATA, 4, -1), rnode(GIN, 47, 0, 22) },
  { pnode(HMC, 25, 0, OWRACKAVSTDATA, 5, -1), rnode(GIN, 47, 0, 17) },
  { pnode(HMC, 25, 0, OWRACKAVSTVALID, 0, -1), rnode(GIN, 41, 0, 2) },
  { pnode(HMC, 25, 0, OWRACKAVSTVALID, 1, -1), rnode(GIN, 41, 0, 7) },
  { pnode(HMC, 25, 0, OWRACKAVSTVALID, 2, -1), rnode(GIN, 41, 0, 12) },
  { pnode(HMC, 25, 0, OWRACKAVSTVALID, 3, -1), rnode(GIN, 47, 0, 12) },
  { pnode(HMC, 25, 0, OWRACKAVSTVALID, 4, -1), rnode(GIN, 47, 0, 21) },
  { pnode(HMC, 25, 0, OWRACKAVSTVALID, 5, -1), rnode(GIN, 47, 0, 16) },
  { pnode(HMC, 25, 0, PHYRESETN, -1, -1), rnode(GIN, 80, 0, 8) },
  { pnode(HMC, 25, 0, SCRDATA, -1, 0), rnode(GIN, 75, 0, 8) },
  { pnode(HMC, 25, 0, SCRDATA, -1, 1), rnode(GIN, 75, 0, 9) },
  { pnode(HMC, 25, 0, SCRDATA, -1, 2), rnode(GIN, 75, 0, 10) },
  { pnode(HMC, 25, 0, SCRDATA, -1, 3), rnode(GIN, 75, 0, 11) },
  { pnode(HMC, 25, 0, SCRDATA, -1, 4), rnode(GIN, 75, 0, 12) },
  { pnode(HMC, 25, 0, SCRDATA, -1, 5), rnode(GIN, 75, 0, 24) },
  { pnode(HMC, 25, 0, SCRDATA, -1, 6), rnode(GIN, 75, 0, 23) },
  { pnode(HMC, 25, 0, SCRDATA, -1, 7), rnode(GIN, 75, 0, 22) },
  { pnode(HMC, 25, 0, SCRDATAVALID, -1, -1), rnode(GIN, 80, 0, 11) },
  { pnode(HMC, 25, 0, SCWAITREQUEST, -1, -1), rnode(GIN, 80, 0, 25) },
  { pnode(CMUXHG, 0, 35, CLKOUT, 0, -1), rnode(GCLK, 0, 36, 0) },
  { pnode(CMUXHG, 0, 35, CLKOUT, 1, -1), rnode(GCLK, 0, 36, 1) },
  { pnode(CMUXHG, 0, 35, CLKOUT, 2, -1), rnode(GCLK, 0, 36, 2) },
  { pnode(CMUXHG, 0, 35, CLKOUT, 3, -1), rnode(GCLK, 0, 36, 3) },
  { pnode(CMUXHR, 0, 35, CLKOUT, 0, -1), rnode(RCLK, 0, 59, 10) },
  { pnode(CMUXHR, 0, 35, CLKOUT, 1, -1), rnode(RCLK, 0, 59, 11) },
  { pnode(CMUXHR, 0, 35, CLKOUT, 2, -1), rnode(RCLK, 0, 59, 12) },
  { pnode(CMUXHR, 0, 35, CLKOUT, 3, -1), rnode(RCLK, 0, 59, 13) },
  { pnode(CMUXHR, 0, 35, CLKOUT, 4, -1), rnode(RCLK, 0, 59, 14) },
  { pnode(CMUXHR, 0, 35, CLKOUT, 5, -1), rnode(RCLK, 0, 59, 15) },
  { pnode(CMUXHR, 0, 35, CLKOUT, 6, -1), rnode(RCLK, 0, 18, 10) },
  { pnode(CMUXHR, 0, 35, CLKOUT, 7, -1), rnode(RCLK, 0, 18, 11) },
  { pnode(CMUXHR, 0, 35, CLKOUT, 8, -1), rnode(RCLK, 0, 18, 12) },
  { pnode(CMUXHR, 0, 35, CLKOUT, 9, -1), rnode(RCLK, 0, 18, 13) },
  { pnode(CMUXHR, 0, 35, CLKOUT, 10, -1), rnode(RCLK, 0, 18, 14) },
  { pnode(CMUXHR, 0, 35, CLKOUT, 11, -1), rnode(RCLK, 0, 18, 15) },
  { pnode(CMUXHG, 0, 35, CLKFBOUT, -1, 0), rnode(GCLKFB, 22, 18, 1) },
  { pnode(CMUXHG, 0, 35, CLKFBOUT, -1, 1), rnode(GCLKFB, 22, 58, 1) },
  { pnode(CMUXHR, 0, 35, CLKFBOUT, -1, 0), rnode(RCLKFB, 22, 58, 1) },
  { pnode(CMUXHR, 0, 35, CLKFBOUT, -1, 1), rnode(RCLKFB, 22, 18, 1) },
  { pnode(CMUXHG, 0, 35, SWITCHCLK, 0, -1), rnode(GIN, 0, 37, 59) },
  { pnode(CMUXHG, 0, 35, SWITCHCLK, 1, -1), rnode(GIN, 0, 37, 73) },
  { pnode(CMUXHG, 0, 35, SWITCHCLK, 2, -1), rnode(GIN, 0, 36, 2) },
  { pnode(CMUXHG, 0, 35, SWITCHCLK, 3, -1), rnode(GIN, 0, 36, 10) },
  { pnode(CMUXHG, 0, 35, SYN_EN, 0, -1), rnode(GIN, 0, 37, 60) },
  { pnode(CMUXHG, 0, 35, SYN_EN, 1, -1), rnode(GIN, 0, 37, 74) },
  { pnode(CMUXHG, 0, 35, SYN_EN, 2, -1), rnode(GIN, 0, 36, 3) },
  { pnode(CMUXHG, 0, 35, SYN_EN, 3, -1), rnode(GIN, 0, 36, 11) },
  { pnode(CMUXHG, 0, 35, CLKIN, -1, 0), rnode(DCMUX, 0, 37, 0) },
  { pnode(CMUXHG, 0, 35, CLKIN, -1, 1), rnode(DCMUX, 0, 37, 1) },
  { pnode(CMUXHG, 0, 35, CLKIN, -1, 2), rnode(DCMUX, 0, 36, 9) },
  { pnode(CMUXHG, 0, 35, CLKIN, -1, 3), rnode(DCMUX, 0, 36, 1) },
  { pnode(CMUXHR, 0, 35, CLKIN, -1, 0), rnode(DCMUX, 0, 37, 2) },
  { pnode(CMUXHR, 0, 35, CLKIN, -1, 1), rnode(DCMUX, 0, 37, 3) },
  { pnode(CMUXHR, 0, 35, CLKIN, -1, 2), rnode(DCMUX, 0, 37, 5) },
  { pnode(CMUXHR, 0, 35, CLKIN, -1, 3), rnode(DCMUX, 0, 36, 6) },
  { pnode(CMUXHR, 0, 35, CLKFBIN, -1, 0), rnode(DCMUX, 0, 35, 4) },
  { pnode(CMUXHR, 0, 35, CLKFBIN, -1, 1), rnode(DCMUX, 0, 3, 4) },
  { pnode(CMUXHG, 0, 35, SWITCHIN, 0, 0), rnode(GOUT, 0, 37, 54) },
  { pnode(CMUXHG, 0, 35, SWITCHIN, 1, 0), rnode(GOUT, 0, 37, 55) },
  { pnode(CMUXHG, 0, 35, SWITCHIN, 2, 0), rnode(GOUT, 0, 37, 68) },
  { pnode(CMUXHG, 0, 35, SWITCHIN, 3, 0), rnode(GOUT, 0, 37, 69) },
  { pnode(CMUXHG, 0, 35, SWITCHIN, 0, 1), rnode(GOUT, 0, 36, 3) },
  { pnode(CMUXHG, 0, 35, SWITCHIN, 1, 1), rnode(GOUT, 0, 36, 4) },
  { pnode(CMUXHG, 0, 35, SWITCHIN, 2, 1), rnode(GOUT, 0, 36, 12) },
  { pnode(CMUXHG, 0, 35, SWITCHIN, 3, 1), rnode(GOUT, 0, 36, 11) },
  { pnode(CMUXHG, 0, 35, BURSTCNT, -1, 0), rnode(GOUT, 0, 37, 63) },
  { pnode(CMUXHG, 0, 35, BURSTCNT, -1, 1), rnode(GOUT, 0, 37, 70) },
  { pnode(CMUXHG, 0, 35, BURSTCNT, -1, 2), rnode(GOUT, 0, 36, 5) },
  { pnode(CMUXHG, 0, 35, ENABLE, 0, -1), rnode(GOUT, 0, 37, 58) },
  { pnode(CMUXHG, 0, 35, ENABLE, 1, -1), rnode(GOUT, 0, 37, 57) },
  { pnode(CMUXHG, 0, 35, ENABLE, 2, -1), rnode(GOUT, 0, 36, 7) },
  { pnode(CMUXHG, 0, 35, ENABLE, 3, -1), rnode(GOUT, 0, 36, 8) },
  { pnode(CMUXHR, 0, 35, ENABLE, 0, -1), rnode(GOUT, 0, 37, 21) },
  { pnode(CMUXHR, 0, 35, ENABLE, 1, -1), rnode(GOUT, 0, 37, 33) },
  { pnode(CMUXHR, 0, 35, ENABLE, 2, -1), rnode(GOUT, 0, 37, 41) },
  { pnode(CMUXHR, 0, 35, ENABLE, 3, -1), rnode(GOUT, 0, 37, 48) },
  { pnode(CMUXHR, 0, 35, ENABLE, 4, -1), rnode(GOUT, 0, 37, 49) },
  { pnode(CMUXHR, 0, 35, ENABLE, 5, -1), rnode(GOUT, 0, 37, 50) },
  { pnode(CMUXHR, 0, 35, ENABLE, 6, -1), rnode(GOUT, 0, 36, 51) },
  { pnode(CMUXHR, 0, 35, ENABLE, 7, -1), rnode(GOUT, 0, 36, 37) },
  { pnode(CMUXHR, 0, 35, ENABLE, 8, -1), rnode(GOUT, 0, 36, 26) },
  { pnode(CMUXHR, 0, 35, ENABLE, 9, -1), rnode(GOUT, 0, 36, 16) },
  { pnode(CMUXHR, 0, 35, ENABLE, 10, -1), rnode(GOUT, 0, 36, 15) },
  { pnode(CMUXHR, 0, 35, ENABLE, 11, -1), rnode(GOUT, 0, 36, 14) },
  { pnode(CMUXP, 0, 36, CLKOUT, -1, 0), rnode(PCLK, 1, 9, 4) },
  { pnode(CMUXP, 0, 36, CLKOUT, -1, 1), rnode(PCLK, 16, 9, 5) },
  { pnode(CMUXP, 0, 36, CLKIN, -1, 0), rnode(DCMUX, 0, 14, 0) },
  { pnode(CMUXP, 0, 37, CLKOUT, -1, 0), rnode(PCLK, 1, 9, 0) },
  { pnode(CMUXP, 0, 37, CLKOUT, -1, 1), rnode(PCLK, 16, 9, 1) },
  { pnode(CMUXP, 0, 37, CLKIN, -1, 0), rnode(DCMUX, 0, 13, 0) },
  { pnode(CMUXP, 0, 38, CLKOUT, -1, 0), rnode(PCLK, 1, 27, 12) },
  { pnode(CMUXP, 0, 38, CLKOUT, -1, 1), rnode(PCLK, 16, 27, 13) },
  { pnode(CMUXP, 0, 38, CLKIN, -1, 0), rnode(DCMUX, 9, 21, 0) },
  { pnode(CMUXP, 0, 39, CLKOUT, -1, 0), rnode(PCLK, 1, 27, 8) },
  { pnode(CMUXP, 0, 39, CLKOUT, -1, 1), rnode(PCLK, 16, 27, 9) },
  { pnode(CMUXP, 0, 39, CLKIN, -1, 0), rnode(DCMUX, 9, 20, 0) },
  { pnode(CMUXP, 0, 40, CLKOUT, -1, 0), rnode(PCLK, 1, 27, 20) },
  { pnode(CMUXP, 0, 40, CLKOUT, -1, 1), rnode(PCLK, 16, 27, 21) },
  { pnode(CMUXP, 0, 40, CLKIN, -1, 0), rnode(DCMUX, 9, 29, 0) },
  { pnode(CMUXP, 0, 41, CLKOUT, -1, 0), rnode(PCLK, 1, 27, 16) },
  { pnode(CMUXP, 0, 41, CLKOUT, -1, 1), rnode(PCLK, 16, 27, 17) },
  { pnode(CMUXP, 0, 41, CLKIN, -1, 0), rnode(DCMUX, 9, 28, 0) },
  { pnode(CMUXP, 0, 42, CLKOUT, -1, 0), rnode(PCLK, 1, 27, 28) },
  { pnode(CMUXP, 0, 42, CLKOUT, -1, 1), rnode(PCLK, 16, 27, 29) },
  { pnode(CMUXP, 0, 42, CLKIN, -1, 0), rnode(DCMUX, 0, 36, 0) },
  { pnode(CMUXP, 0, 43, CLKOUT, -1, 0), rnode(PCLK, 1, 27, 24) },
  { pnode(CMUXP, 0, 43, CLKOUT, -1, 1), rnode(PCLK, 16, 27, 25) },
  { pnode(CMUXP, 0, 43, CLKIN, -1, 0), rnode(DCMUX, 0, 35, 0) },
  { pnode(CMUXP, 0, 44, CLKOUT, -1, 0), rnode(PCLK, 1, 47, 36) },
  { pnode(CMUXP, 0, 44, CLKOUT, -1, 1), rnode(PCLK, 16, 47, 37) },
  { pnode(CMUXP, 0, 44, CLKIN, -1, 0), rnode(DCMUX, 0, 41, 0) },
  { pnode(CMUXP, 0, 45, CLKOUT, -1, 0), rnode(PCLK, 1, 47, 32) },
  { pnode(CMUXP, 0, 45, CLKOUT, -1, 1), rnode(PCLK, 16, 47, 33) },
  { pnode(CMUXP, 0, 45, CLKIN, -1, 0), rnode(DCMUX, 0, 40, 0) },
  { pnode(CMUXP, 0, 46, CLKOUT, -1, 0), rnode(PCLK, 1, 47, 44) },
  { pnode(CMUXP, 0, 46, CLKOUT, -1, 1), rnode(PCLK, 16, 47, 45) },
  { pnode(CMUXP, 0, 46, CLKIN, -1, 0), rnode(DCMUX, 0, 48, 0) },
  { pnode(CMUXP, 0, 47, CLKOUT, -1, 0), rnode(PCLK, 1, 47, 40) },
  { pnode(CMUXP, 0, 47, CLKOUT, -1, 1), rnode(PCLK, 16, 47, 41) },
  { pnode(CMUXP, 0, 47, CLKIN, -1, 0), rnode(DCMUX, 0, 47, 0) },
  { pnode(CMUXP, 0, 49, CLKOUT, -1, 0), rnode(PCLK, 1, 47, 52) },
  { pnode(CMUXP, 0, 49, CLKOUT, -1, 1), rnode(PCLK, 16, 47, 53) },
  { pnode(CMUXP, 0, 49, CLKIN, -1, 0), rnode(DCMUX, 0, 55, 0) },
  { pnode(CMUXP, 0, 50, CLKOUT, -1, 0), rnode(PCLK, 1, 47, 48) },
  { pnode(CMUXP, 0, 50, CLKOUT, -1, 1), rnode(PCLK, 16, 47, 49) },
  { pnode(CMUXP, 0, 50, CLKIN, -1, 0), rnode(DCMUX, 0, 54, 0) },
  { pnode(CMUXP, 0, 51, CLKOUT, -1, 0), rnode(PCLK, 1, 70, 60) },
  { pnode(CMUXP, 0, 51, CLKOUT, -1, 1), rnode(PCLK, 16, 70, 61) },
  { pnode(CMUXP, 0, 51, CLKIN, -1, 0), rnode(DCMUX, 9, 62, 0) },
  { pnode(CMUXP, 0, 52, CLKOUT, -1, 0), rnode(PCLK, 1, 70, 56) },
  { pnode(CMUXP, 0, 52, CLKOUT, -1, 1), rnode(PCLK, 16, 70, 57) },
  { pnode(CMUXP, 0, 52, CLKIN, -1, 0), rnode(DCMUX, 9, 61, 0) },
  { pnode(CMUXP, 0, 53, CLKOUT, -1, 0), rnode(PCLK, 1, 70, 68) },
  { pnode(CMUXP, 0, 53, CLKOUT, -1, 1), rnode(PCLK, 16, 70, 69) },
  { pnode(CMUXP, 0, 53, CLKIN, -1, 0), rnode(DCMUX, 9, 70, 0) },
  { pnode(CMUXP, 0, 54, CLKOUT, -1, 0), rnode(PCLK, 1, 70, 64) },
  { pnode(CMUXP, 0, 54, CLKOUT, -1, 1), rnode(PCLK, 16, 70, 65) },
  { pnode(CMUXP, 0, 54, CLKIN, -1, 0), rnode(DCMUX, 9, 69, 0) },
  { pnode(CMUXCR, 5, 0, CLKOUT, 0, -1), rnode(RCLK, 0, 18, 16) },
  { pnode(CMUXCR, 5, 0, CLKOUT, 1, -1), rnode(RCLK, 0, 18, 17) },
  { pnode(CMUXCR, 5, 0, CLKOUT, 2, -1), rnode(RCLK, 0, 18, 18) },
  { pnode(CMUXCR, 5, 0, CLKOUT, 3, -1), rnode(RCLK, 0, 18, 19) },
  { pnode(CMUXCR, 5, 0, CLKOUT, 4, -1), rnode(RCLK, 0, 18, 20) },
  { pnode(CMUXCR, 5, 0, CLKOUT, 5, -1), rnode(RCLK, 0, 18, 21) },
  { pnode(CMUXCR, 5, 0, CLKFBOUT, -1, 0), rnode(RCLKFB, 22, 18, 0) },
  { pnode(CMUXCR, 5, 0, CLKFBOUT, -1, 1), rnode(RCLKFB, 22, 18, 2) },
  { pnode(CMUXCR, 5, 0, CLKIN, -1, 0), rnode(DCMUX, 1, 0, 6) },
  { pnode(CMUXCR, 5, 0, CLKIN, -1, 1), rnode(DCMUX, 1, 0, 4) },
  { pnode(CMUXCR, 5, 0, CLKIN, -1, 2), rnode(DCMUX, 1, 0, 2) },
  { pnode(CMUXCR, 5, 0, CLKIN, -1, 3), rnode(DCMUX, 1, 0, 0) },
  { pnode(CMUXCR, 5, 0, ENABLE, 0, -1), rnode(GOUT, 2, 0, 9) },
  { pnode(CMUXCR, 5, 0, ENABLE, 1, -1), rnode(GOUT, 2, 0, 10) },
  { pnode(CMUXCR, 5, 0, ENABLE, 2, -1), rnode(GOUT, 2, 0, 0) },
  { pnode(CMUXCR, 5, 0, ENABLE, 3, -1), rnode(GOUT, 1, 0, 26) },
  { pnode(CMUXCR, 5, 0, ENABLE, 4, -1), rnode(GOUT, 1, 0, 36) },
  { pnode(CMUXCR, 5, 0, ENABLE, 5, -1), rnode(GOUT, 1, 0, 35) },
  { pnode(CMUXCR, 5, 81, CLKOUT, 0, -1), rnode(RCLK, 0, 59, 16) },
  { pnode(CMUXCR, 5, 81, CLKOUT, 1, -1), rnode(RCLK, 0, 59, 17) },
  { pnode(CMUXCR, 5, 81, CLKOUT, 2, -1), rnode(RCLK, 0, 59, 18) },
  { pnode(CMUXCR, 5, 81, CLKOUT, 3, -1), rnode(RCLK, 0, 59, 19) },
  { pnode(CMUXCR, 5, 81, CLKOUT, 4, -1), rnode(RCLK, 0, 59, 20) },
  { pnode(CMUXCR, 5, 81, CLKOUT, 5, -1), rnode(RCLK, 0, 59, 21) },
  { pnode(CMUXCR, 5, 81, CLKFBOUT, -1, 0), rnode(RCLKFB, 22, 58, 0) },
  { pnode(CMUXCR, 5, 81, CLKFBOUT, -1, 1), rnode(RCLKFB, 22, 58, 2) },
  { pnode(CMUXCR, 5, 81, CLKIN, -1, 0), rnode(DCMUX, 1, 81, 6) },
  { pnode(CMUXCR, 5, 81, CLKIN, -1, 1), rnode(DCMUX, 1, 81, 4) },
  { pnode(CMUXCR, 5, 81, CLKIN, -1, 2), rnode(DCMUX, 1, 81, 2) },
  { pnode(CMUXCR, 5, 81, CLKIN, -1, 3), rnode(DCMUX, 1, 81, 0) },
  { pnode(CMUXCR, 5, 81, ENABLE, 0, -1), rnode(GOUT, 2, 81, 9) },
  { pnode(CMUXCR, 5, 81, ENABLE, 1, -1), rnode(GOUT, 2, 81, 10) },
  { pnode(CMUXCR, 5, 81, ENABLE, 2, -1), rnode(GOUT, 2, 81, 0) },
  { pnode(CMUXCR, 5, 81, ENABLE, 3, -1), rnode(GOUT, 1, 81, 26) },
  { pnode(CMUXCR, 5, 81, ENABLE, 4, -1), rnode(GOUT, 1, 81, 36) },
  { pnode(CMUXCR, 5, 81, ENABLE, 5, -1), rnode(GOUT, 1, 81, 35) },
  { pnode(CMUXVG, 42, 0, CLKOUT, 0, -1), rnode(GCLK, 0, 36, 4) },
  { pnode(CMUXVG, 42, 0, CLKOUT, 1, -1), rnode(GCLK, 0, 36, 5) },
  { pnode(CMUXVG, 42, 0, CLKOUT, 2, -1), rnode(GCLK, 0, 36, 6) },
  { pnode(CMUXVG, 42, 0, CLKOUT, 3, -1), rnode(GCLK, 0, 36, 7) },
  { pnode(CMUXVR, 42, 0, CLKOUT, 0, -1), rnode(RCLK, 0, 18, 0) },
  { pnode(CMUXVR, 42, 0, CLKOUT, 1, -1), rnode(RCLK, 0, 18, 1) },
  { pnode(CMUXVR, 42, 0, CLKOUT, 2, -1), rnode(RCLK, 0, 18, 2) },
  { pnode(CMUXVR, 42, 0, CLKOUT, 3, -1), rnode(RCLK, 0, 18, 3) },
  { pnode(CMUXVR, 42, 0, CLKOUT, 4, -1), rnode(RCLK, 0, 18, 4) },
  { pnode(CMUXVR, 42, 0, CLKOUT, 5, -1), rnode(RCLK, 0, 18, 5) },
  { pnode(CMUXVR, 42, 0, CLKOUT, 6, -1), rnode(RCLK, 0, 18, 6) },
  { pnode(CMUXVR, 42, 0, CLKOUT, 7, -1), rnode(RCLK, 0, 18, 7) },
  { pnode(CMUXVR, 42, 0, CLKOUT, 8, -1), rnode(RCLK, 0, 18, 8) },
  { pnode(CMUXVR, 42, 0, CLKOUT, 9, -1), rnode(RCLK, 0, 18, 9) },
  { pnode(CMUXVR, 42, 0, CLKOUT, 10, -1), rnode(RCLK, 45, 18, 0) },
  { pnode(CMUXVR, 42, 0, CLKOUT, 11, -1), rnode(RCLK, 45, 18, 1) },
  { pnode(CMUXVR, 42, 0, CLKOUT, 12, -1), rnode(RCLK, 45, 18, 2) },
  { pnode(CMUXVR, 42, 0, CLKOUT, 13, -1), rnode(RCLK, 45, 18, 3) },
  { pnode(CMUXVR, 42, 0, CLKOUT, 14, -1), rnode(RCLK, 45, 18, 4) },
  { pnode(CMUXVR, 42, 0, CLKOUT, 15, -1), rnode(RCLK, 45, 18, 5) },
  { pnode(CMUXVR, 42, 0, CLKOUT, 16, -1), rnode(RCLK, 45, 18, 6) },
  { pnode(CMUXVR, 42, 0, CLKOUT, 17, -1), rnode(RCLK, 45, 18, 7) },
  { pnode(CMUXVR, 42, 0, CLKOUT, 18, -1), rnode(RCLK, 45, 18, 8) },
  { pnode(CMUXVR, 42, 0, CLKOUT, 19, -1), rnode(RCLK, 45, 18, 9) },
  { pnode(CMUXVG, 42, 0, CLKFBOUT, -1, 0), rnode(GCLKFB, 22, 18, 2) },
  { pnode(CMUXVG, 42, 0, CLKFBOUT, -1, 1), rnode(GCLKFB, 22, 18, 0) },
  { pnode(CMUXVG, 42, 0, CLKFBOUT, -1, 2), rnode(GCLKFB, 66, 18, 0) },
  { pnode(CMUXVG, 42, 0, SWITCHCLK, 0, -1), rnode(GIN, 45, 0, 0) },
  { pnode(CMUXVG, 42, 0, SWITCHCLK, 1, -1), rnode(GIN, 45, 0, 6) },
  { pnode(CMUXVG, 42, 0, SWITCHCLK, 2, -1), rnode(GIN, 45, 0, 2) },
  { pnode(CMUXVG, 42, 0, SWITCHCLK, 3, -1), rnode(GIN, 45, 0, 4) },
  { pnode(CMUXVG, 42, 0, SYN_EN, 0, -1), rnode(GIN, 45, 0, 1) },
  { pnode(CMUXVG, 42, 0, SYN_EN, 1, -1), rnode(GIN, 45, 0, 7) },
  { pnode(CMUXVG, 42, 0, SYN_EN, 2, -1), rnode(GIN, 45, 0, 3) },
  { pnode(CMUXVG, 42, 0, SYN_EN, 3, -1), rnode(GIN, 45, 0, 5) },
  { pnode(CMUXVG, 42, 0, CLKIN, -1, 0), rnode(DCMUX, 45, 0, 0) },
  { pnode(CMUXVG, 42, 0, CLKIN, -1, 1), rnode(DCMUX, 45, 0, 6) },
  { pnode(CMUXVG, 42, 0, CLKIN, -1, 2), rnode(DCMUX, 45, 0, 2) },
  { pnode(CMUXVG, 42, 0, CLKIN, -1, 3), rnode(DCMUX, 45, 0, 4) },
  { pnode(CMUXVR, 42, 0, CLKIN, -1, 0), rnode(DCMUX, 45, 0, 7) },
  { pnode(CMUXVR, 42, 0, CLKIN, -1, 1), rnode(DCMUX, 45, 0, 5) },
  { pnode(CMUXVR, 42, 0, CLKIN, -1, 2), rnode(DCMUX, 45, 0, 3) },
  { pnode(CMUXVR, 42, 0, CLKIN, -1, 3), rnode(DCMUX, 45, 0, 1) },
  { pnode(CMUXVG, 42, 0, SWITCHIN, 0, 0), rnode(GOUT, 45, 0, 9) },
  { pnode(CMUXVG, 42, 0, SWITCHIN, 1, 0), rnode(GOUT, 45, 0, 11) },
  { pnode(CMUXVG, 42, 0, SWITCHIN, 2, 0), rnode(GOUT, 45, 0, 18) },
  { pnode(CMUXVG, 42, 0, SWITCHIN, 3, 0), rnode(GOUT, 45, 0, 14) },
  { pnode(CMUXVG, 42, 0, SWITCHIN, 0, 1), rnode(GOUT, 45, 0, 5) },
  { pnode(CMUXVG, 42, 0, SWITCHIN, 1, 1), rnode(GOUT, 45, 0, 4) },
  { pnode(CMUXVG, 42, 0, SWITCHIN, 2, 1), rnode(GOUT, 45, 0, 3) },
  { pnode(CMUXVG, 42, 0, SWITCHIN, 3, 1), rnode(GOUT, 45, 0, 8) },
  { pnode(CMUXVG, 42, 0, BURSTCNT, -1, 0), rnode(GOUT, 45, 0, 12) },
  { pnode(CMUXVG, 42, 0, BURSTCNT, -1, 1), rnode(GOUT, 45, 0, 17) },
  { pnode(CMUXVG, 42, 0, BURSTCNT, -1, 2), rnode(GOUT, 45, 0, 13) },
  { pnode(CMUXVG, 42, 0, ENABLE, 0, -1), rnode(GOUT, 45, 0, 6) },
  { pnode(CMUXVG, 42, 0, ENABLE, 1, -1), rnode(GOUT, 45, 0, 1) },
  { pnode(CMUXVG, 42, 0, ENABLE, 2, -1), rnode(GOUT, 45, 0, 7) },
  { pnode(CMUXVG, 42, 0, ENABLE, 3, -1), rnode(GOUT, 45, 0, 2) },
  { pnode(CMUXVR, 42, 0, ENABLE, 0, -1), rnode(GOUT, 45, 0, 10) },
  { pnode(CMUXVR, 42, 0, ENABLE, 1, -1), rnode(GOUT, 45, 0, 0) },
  { pnode(CMUXVR, 42, 0, ENABLE, 2, -1), rnode(GOUT, 43, 0, 26) },
  { pnode(CMUXVR, 42, 0, ENABLE, 3, -1), rnode(GOUT, 43, 0, 36) },
  { pnode(CMUXVR, 42, 0, ENABLE, 4, -1), rnode(GOUT, 43, 0, 35) },
  { pnode(CMUXVR, 42, 0, ENABLE, 5, -1), rnode(GOUT, 43, 0, 37) },
  { pnode(CMUXVR, 42, 0, ENABLE, 6, -1), rnode(GOUT, 43, 0, 32) },
  { pnode(CMUXVR, 42, 0, ENABLE, 7, -1), rnode(GOUT, 43, 0, 33) },
  { pnode(CMUXVR, 42, 0, ENABLE, 8, -1), rnode(GOUT, 43, 0, 31) },
  { pnode(CMUXVR, 42, 0, ENABLE, 9, -1), rnode(GOUT, 43, 0, 30) },
  { pnode(CMUXVR, 42, 0, ENABLE, 10, -1), rnode(GOUT, 45, 0, 19) },
  { pnode(CMUXVR, 42, 0, ENABLE, 11, -1), rnode(GOUT, 45, 0, 15) },
  { pnode(CMUXVR, 42, 0, ENABLE, 12, -1), rnode(GOUT, 45, 0, 20) },
  { pnode(CMUXVR, 42, 0, ENABLE, 13, -1), rnode(GOUT, 45, 0, 16) },
  { pnode(CMUXVR, 42, 0, ENABLE, 14, -1), rnode(GOUT, 45, 0, 21) },
  { pnode(CMUXVR, 42, 0, ENABLE, 15, -1), rnode(GOUT, 45, 0, 22) },
  { pnode(CMUXVR, 42, 0, ENABLE, 16, -1), rnode(GOUT, 45, 0, 47) },
  { pnode(CMUXVR, 42, 0, ENABLE, 17, -1), rnode(GOUT, 45, 0, 33) },
  { pnode(CMUXVR, 42, 0, ENABLE, 18, -1), rnode(GOUT, 46, 0, 2) },
  { pnode(CMUXVR, 42, 0, ENABLE, 19, -1), rnode(GOUT, 46, 0, 24) },
  { pnode(CMUXVG, 42, 81, CLKOUT, 0, -1), rnode(GCLK, 0, 36, 12) },
  { pnode(CMUXVG, 42, 81, CLKOUT, 1, -1), rnode(GCLK, 0, 36, 13) },
  { pnode(CMUXVG, 42, 81, CLKOUT, 2, -1), rnode(GCLK, 0, 36, 14) },
  { pnode(CMUXVG, 42, 81, CLKOUT, 3, -1), rnode(GCLK, 0, 36, 15) },
  { pnode(CMUXVR, 42, 81, CLKOUT, 0, -1), rnode(RCLK, 0, 59, 0) },
  { pnode(CMUXVR, 42, 81, CLKOUT, 1, -1), rnode(RCLK, 0, 59, 1) },
  { pnode(CMUXVR, 42, 81, CLKOUT, 2, -1), rnode(RCLK, 0, 59, 2) },
  { pnode(CMUXVR, 42, 81, CLKOUT, 3, -1), rnode(RCLK, 0, 59, 3) },
  { pnode(CMUXVR, 42, 81, CLKOUT, 4, -1), rnode(RCLK, 0, 59, 4) },
  { pnode(CMUXVR, 42, 81, CLKOUT, 5, -1), rnode(RCLK, 0, 59, 5) },
  { pnode(CMUXVR, 42, 81, CLKOUT, 6, -1), rnode(RCLK, 0, 59, 6) },
  { pnode(CMUXVR, 42, 81, CLKOUT, 7, -1), rnode(RCLK, 0, 59, 7) },
  { pnode(CMUXVR, 42, 81, CLKOUT, 8, -1), rnode(RCLK, 0, 59, 8) },
  { pnode(CMUXVR, 42, 81, CLKOUT, 9, -1), rnode(RCLK, 0, 59, 9) },
  { pnode(CMUXVG, 42, 81, CLKFBOUT, -1, 0), rnode(GCLKFB, 22, 58, 2) },
  { pnode(CMUXVG, 42, 81, CLKFBOUT, -1, 1), rnode(GCLKFB, 22, 58, 0) },
  { pnode(CMUXVG, 42, 81, SWITCHCLK, 0, -1), rnode(GIN, 43, 81, 0) },
  { pnode(CMUXVG, 42, 81, SWITCHCLK, 1, -1), rnode(GIN, 43, 81, 6) },
  { pnode(CMUXVG, 42, 81, SWITCHCLK, 2, -1), rnode(GIN, 43, 81, 2) },
  { pnode(CMUXVG, 42, 81, SWITCHCLK, 3, -1), rnode(GIN, 43, 81, 4) },
  { pnode(CMUXVG, 42, 81, SYN_EN, 0, -1), rnode(GIN, 43, 81, 1) },
  { pnode(CMUXVG, 42, 81, SYN_EN, 1, -1), rnode(GIN, 43, 81, 7) },
  { pnode(CMUXVG, 42, 81, SYN_EN, 2, -1), rnode(GIN, 43, 81, 3) },
  { pnode(CMUXVG, 42, 81, SYN_EN, 3, -1), rnode(GIN, 43, 81, 5) },
  { pnode(CMUXVG, 42, 81, CLKIN, -1, 0), rnode(DCMUX, 43, 81, 0) },
  { pnode(CMUXVG, 42, 81, CLKIN, -1, 1), rnode(DCMUX, 43, 81, 6) },
  { pnode(CMUXVG, 42, 81, CLKIN, -1, 2), rnode(DCMUX, 43, 81, 2) },
  { pnode(CMUXVG, 42, 81, CLKIN, -1, 3), rnode(DCMUX, 43, 81, 4) },
  { pnode(CMUXVR, 42, 81, CLKIN, -1, 0), rnode(DCMUX, 43, 81, 7) },
  { pnode(CMUXVR, 42, 81, CLKIN, -1, 1), rnode(DCMUX, 43, 81, 5) },
  { pnode(CMUXVR, 42, 81, CLKIN, -1, 2), rnode(DCMUX, 43, 81, 3) },
  { pnode(CMUXVR, 42, 81, CLKIN, -1, 3), rnode(DCMUX, 43, 81, 1) },
  { pnode(CMUXVG, 42, 81, SWITCHIN, 0, 0), rnode(GOUT, 43, 81, 9) },
  { pnode(CMUXVG, 42, 81, SWITCHIN, 1, 0), rnode(GOUT, 43, 81, 11) },
  { pnode(CMUXVG, 42, 81, SWITCHIN, 2, 0), rnode(GOUT, 43, 81, 18) },
  { pnode(CMUXVG, 42, 81, SWITCHIN, 3, 0), rnode(GOUT, 43, 81, 14) },
  { pnode(CMUXVG, 42, 81, SWITCHIN, 0, 1), rnode(GOUT, 43, 81, 5) },
  { pnode(CMUXVG, 42, 81, SWITCHIN, 1, 1), rnode(GOUT, 43, 81, 4) },
  { pnode(CMUXVG, 42, 81, SWITCHIN, 2, 1), rnode(GOUT, 43, 81, 3) },
  { pnode(CMUXVG, 42, 81, SWITCHIN, 3, 1), rnode(GOUT, 43, 81, 8) },
  { pnode(CMUXVG, 42, 81, BURSTCNT, -1, 0), rnode(GOUT, 43, 81, 12) },
  { pnode(CMUXVG, 42, 81, BURSTCNT, -1, 1), rnode(GOUT, 43, 81, 17) },
  { pnode(CMUXVG, 42, 81, BURSTCNT, -1, 2), rnode(GOUT, 43, 81, 13) },
  { pnode(CMUXVG, 42, 81, ENABLE, 0, -1), rnode(GOUT, 43, 81, 6) },
  { pnode(CMUXVG, 42, 81, ENABLE, 1, -1), rnode(GOUT, 43, 81, 1) },
  { pnode(CMUXVG, 42, 81, ENABLE, 2, -1), rnode(GOUT, 43, 81, 7) },
  { pnode(CMUXVG, 42, 81, ENABLE, 3, -1), rnode(GOUT, 43, 81, 2) },
  { pnode(CMUXVR, 42, 81, ENABLE, 0, -1), rnode(GOUT, 43, 81, 10) },
  { pnode(CMUXVR, 42, 81, ENABLE, 1, -1), rnode(GOUT, 43, 81, 0) },
  { pnode(CMUXVR, 42, 81, ENABLE, 2, -1), rnode(GOUT, 43, 81, 26) },
  { pnode(CMUXVR, 42, 81, ENABLE, 3, -1), rnode(GOUT, 43, 81, 36) },
  { pnode(CMUXVR, 42, 81, ENABLE, 4, -1), rnode(GOUT, 43, 81, 35) },
  { pnode(CMUXVR, 42, 81, ENABLE, 5, -1), rnode(GOUT, 43, 81, 37) },
  { pnode(CMUXVR, 42, 81, ENABLE, 6, -1), rnode(GOUT, 43, 81, 32) },
  { pnode(CMUXVR, 42, 81, ENABLE, 7, -1), rnode(GOUT, 43, 81, 33) },
  { pnode(CMUXVR, 42, 81, ENABLE, 8, -1), rnode(GOUT, 43, 81, 31) },
  { pnode(CMUXVR, 42, 81, ENABLE, 9, -1), rnode(GOUT, 43, 81, 30) },
  { pnode(CMUXVR, 42, 81, ENABLE, 10, -1), rnode(GOUT, 45, 81, 19) },
  { pnode(CMUXVR, 42, 81, ENABLE, 11, -1), rnode(GOUT, 45, 81, 15) },
  { pnode(CMUXVR, 42, 81, ENABLE, 12, -1), rnode(GOUT, 45, 81, 20) },
  { pnode(CMUXVR, 42, 81, ENABLE, 13, -1), rnode(GOUT, 45, 81, 16) },
  { pnode(CMUXVR, 42, 81, ENABLE, 14, -1), rnode(GOUT, 45, 81, 21) },
  { pnode(CMUXVR, 42, 81, ENABLE, 15, -1), rnode(GOUT, 45, 81, 22) },
  { pnode(CMUXVR, 42, 81, ENABLE, 16, -1), rnode(GOUT, 45, 81, 47) },
  { pnode(CMUXVR, 42, 81, ENABLE, 17, -1), rnode(GOUT, 45, 81, 33) },
  { pnode(CMUXVR, 42, 81, ENABLE, 18, -1), rnode(GOUT, 46, 81, 2) },
  { pnode(CMUXVR, 42, 81, ENABLE, 19, -1), rnode(GOUT, 46, 81, 24) },
  { pnode(CMUXCR, 89, 3, CLKOUT, 0, -1), rnode(RCLK, 45, 18, 16) },
  { pnode(CMUXCR, 89, 3, CLKOUT, 1, -1), rnode(RCLK, 45, 18, 17) },
  { pnode(CMUXCR, 89, 3, CLKOUT, 2, -1), rnode(RCLK, 45, 18, 18) },
  { pnode(CMUXCR, 89, 3, CLKOUT, 3, -1), rnode(RCLK, 45, 18, 19) },
  { pnode(CMUXCR, 89, 3, CLKOUT, 4, -1), rnode(RCLK, 45, 18, 20) },
  { pnode(CMUXCR, 89, 3, CLKOUT, 5, -1), rnode(RCLK, 45, 18, 21) },
  { pnode(CMUXCR, 89, 3, CLKFBOUT, -1, 0), rnode(RCLKFB, 66, 18, 0) },
  { pnode(CMUXCR, 89, 3, CLKIN, -1, 0), rnode(DCMUX, 87, 0, 10) },
  { pnode(CMUXCR, 89, 3, CLKIN, -1, 1), rnode(DCMUX, 87, 0, 12) },
  { pnode(CMUXCR, 89, 3, CLKIN, -1, 2), rnode(DCMUX, 87, 0, 14) },
  { pnode(CMUXCR, 89, 3, CLKIN, -1, 3), rnode(DCMUX, 87, 0, 9) },
  { pnode(CMUXCR, 89, 3, ENABLE, 0, -1), rnode(GOUT, 88, 0, 36) },
  { pnode(CMUXCR, 89, 3, ENABLE, 1, -1), rnode(GOUT, 88, 0, 35) },
  { pnode(CMUXCR, 89, 3, ENABLE, 2, -1), rnode(GOUT, 88, 0, 37) },
  { pnode(CMUXCR, 89, 3, ENABLE, 3, -1), rnode(GOUT, 88, 0, 32) },
  { pnode(CMUXCR, 89, 3, ENABLE, 4, -1), rnode(GOUT, 88, 0, 33) },
  { pnode(CMUXCR, 89, 3, ENABLE, 5, -1), rnode(GOUT, 88, 0, 31) },
  { pnode(CMUXHG, 89, 35, CLKOUT, 0, -1), rnode(GCLK, 0, 36, 8) },
  { pnode(CMUXHG, 89, 35, CLKOUT, 1, -1), rnode(GCLK, 0, 36, 9) },
  { pnode(CMUXHG, 89, 35, CLKOUT, 2, -1), rnode(GCLK, 0, 36, 10) },
  { pnode(CMUXHG, 89, 35, CLKOUT, 3, -1), rnode(GCLK, 0, 36, 11) },
  { pnode(CMUXHR, 89, 35, CLKOUT, 6, -1), rnode(RCLK, 45, 18, 10) },
  { pnode(CMUXHR, 89, 35, CLKOUT, 7, -1), rnode(RCLK, 45, 18, 11) },
  { pnode(CMUXHR, 89, 35, CLKOUT, 8, -1), rnode(RCLK, 45, 18, 12) },
  { pnode(CMUXHR, 89, 35, CLKOUT, 9, -1), rnode(RCLK, 45, 18, 13) },
  { pnode(CMUXHR, 89, 35, CLKOUT, 10, -1), rnode(RCLK, 45, 18, 14) },
  { pnode(CMUXHR, 89, 35, CLKOUT, 11, -1), rnode(RCLK, 45, 18, 15) },
  { pnode(CMUXHG, 89, 35, SWITCHCLK, 0, -1), rnode(GIN, 89, 35, 76) },
  { pnode(CMUXHG, 89, 35, SWITCHCLK, 1, -1), rnode(GIN, 89, 35, 79) },
  { pnode(CMUXHG, 89, 35, SWITCHCLK, 2, -1), rnode(GIN, 89, 34, 1) },
  { pnode(CMUXHG, 89, 35, SWITCHCLK, 3, -1), rnode(GIN, 89, 34, 2) },
  { pnode(CMUXHG, 89, 35, SYN_EN, 0, -1), rnode(GIN, 89, 35, 77) },
  { pnode(CMUXHG, 89, 35, SYN_EN, 1, -1), rnode(GIN, 89, 35, 80) },
  { pnode(CMUXHG, 89, 35, SYN_EN, 2, -1), rnode(GIN, 89, 34, 0) },
  { pnode(CMUXHG, 89, 35, SYN_EN, 3, -1), rnode(GIN, 89, 34, 3) },
  { pnode(CMUXHG, 89, 35, CLKIN, -1, 0), rnode(DCMUX, 89, 36, 11) },
  { pnode(CMUXHG, 89, 35, CLKIN, -1, 1), rnode(DCMUX, 89, 36, 13) },
  { pnode(CMUXHG, 89, 35, CLKIN, -1, 2), rnode(DCMUX, 89, 34, 3) },
  { pnode(CMUXHG, 89, 35, CLKIN, -1, 3), rnode(DCMUX, 89, 34, 1) },
  { pnode(CMUXHR, 89, 35, CLKIN, -1, 0), rnode(DCMUX, 89, 36, 12) },
  { pnode(CMUXHR, 89, 35, CLKIN, -1, 1), rnode(DCMUX, 89, 36, 15) },
  { pnode(CMUXHR, 89, 35, CLKIN, -1, 2), rnode(DCMUX, 89, 34, 0) },
  { pnode(CMUXHR, 89, 35, CLKIN, -1, 3), rnode(DCMUX, 89, 34, 2) },
  { pnode(CMUXHG, 89, 35, SWITCHIN, 0, 0), rnode(GOUT, 89, 35, 60) },
  { pnode(CMUXHG, 89, 35, SWITCHIN, 1, 0), rnode(GOUT, 89, 35, 61) },
  { pnode(CMUXHG, 89, 35, SWITCHIN, 2, 0), rnode(GOUT, 89, 35, 68) },
  { pnode(CMUXHG, 89, 35, SWITCHIN, 3, 0), rnode(GOUT, 89, 35, 70) },
  { pnode(CMUXHG, 89, 35, SWITCHIN, 0, 1), rnode(GOUT, 89, 34, 6) },
  { pnode(CMUXHG, 89, 35, SWITCHIN, 1, 1), rnode(GOUT, 89, 34, 7) },
  { pnode(CMUXHG, 89, 35, SWITCHIN, 2, 1), rnode(GOUT, 89, 34, 14) },
  { pnode(CMUXHG, 89, 35, SWITCHIN, 3, 1), rnode(GOUT, 89, 34, 13) },
  { pnode(CMUXHG, 89, 35, BURSTCNT, -1, 0), rnode(GOUT, 89, 35, 64) },
  { pnode(CMUXHG, 89, 35, BURSTCNT, -1, 1), rnode(GOUT, 89, 34, 5) },
  { pnode(CMUXHG, 89, 35, BURSTCNT, -1, 2), rnode(GOUT, 89, 34, 8) },
  { pnode(CMUXHG, 89, 35, ENABLE, 0, -1), rnode(GOUT, 89, 35, 63) },
  { pnode(CMUXHG, 89, 35, ENABLE, 1, -1), rnode(GOUT, 89, 35, 62) },
  { pnode(CMUXHG, 89, 35, ENABLE, 2, -1), rnode(GOUT, 89, 34, 10) },
  { pnode(CMUXHG, 89, 35, ENABLE, 3, -1), rnode(GOUT, 89, 34, 9) },
  { pnode(CMUXHR, 89, 35, ENABLE, 0, -1), rnode(GOUT, 89, 35, 13) },
  { pnode(CMUXHR, 89, 35, ENABLE, 1, -1), rnode(GOUT, 89, 35, 14) },
  { pnode(CMUXHR, 89, 35, ENABLE, 2, -1), rnode(GOUT, 89, 35, 15) },
  { pnode(CMUXHR, 89, 35, ENABLE, 3, -1), rnode(GOUT, 89, 35, 56) },
  { pnode(CMUXHR, 89, 35, ENABLE, 4, -1), rnode(GOUT, 89, 35, 57) },
  { pnode(CMUXHR, 89, 35, ENABLE, 5, -1), rnode(GOUT, 89, 35, 58) },
  { pnode(CMUXHR, 89, 35, ENABLE, 6, -1), rnode(GOUT, 89, 34, 71) },
  { pnode(CMUXHR, 89, 35, ENABLE, 7, -1), rnode(GOUT, 89, 34, 66) },
  { pnode(CMUXHR, 89, 35, ENABLE, 8, -1), rnode(GOUT, 89, 34, 59) },
  { pnode(CMUXHR, 89, 35, ENABLE, 9, -1), rnode(GOUT, 89, 34, 57) },
  { pnode(CMUXHR, 89, 35, ENABLE, 10, -1), rnode(GOUT, 89, 34, 56) },
  { pnode(CMUXHR, 89, 35, ENABLE, 11, -1), rnode(GOUT, 89, 34, 15) },
  { pnode(FPLL, 0, 0, ATPGMODE, -1, -1), rnode(GOUT, 1, 0, 11) },
  { pnode(FPLL, 0, 0, CLKEN, -1, 0), rnode(GOUT, 1, 0, 6) },
  { pnode(FPLL, 0, 0, CLKEN, -1, 1), rnode(GOUT, 1, 0, 7) },
  { pnode(FPLL, 0, 0, CNT_SEL, -1, 0), rnode(GOUT, 1, 0, 5) },
  { pnode(FPLL, 0, 0, CNT_SEL, -1, 1), rnode(GOUT, 1, 0, 4) },
  { pnode(FPLL, 0, 0, CNT_SEL, -1, 2), rnode(GOUT, 1, 0, 3) },
  { pnode(FPLL, 0, 0, CNT_SEL, -1, 3), rnode(GOUT, 1, 0, 8) },
  { pnode(FPLL, 0, 0, CNT_SEL, -1, 4), rnode(GOUT, 1, 0, 2) },
  { pnode(FPLL, 0, 0, REG_BYTE_EN, -1, 0), rnode(GOUT, 1, 0, 1) },
  { pnode(FPLL, 0, 0, REG_BYTE_EN, -1, 1), rnode(GOUT, 1, 0, 12) },
  { pnode(FPLL, 0, 0, REG_CLK, -1, -1), rnode(GOUT, 1, 0, 17) },
  { pnode(FPLL, 0, 0, REG_MDIO_DIS, -1, -1), rnode(GOUT, 1, 0, 13) },
  { pnode(FPLL, 0, 0, REG_READ, -1, -1), rnode(GOUT, 1, 0, 18) },
  { pnode(FPLL, 0, 0, REG_REG_ADDR, -1, 0), rnode(GOUT, 1, 0, 14) },
  { pnode(FPLL, 0, 0, REG_REG_ADDR, -1, 1), rnode(GOUT, 1, 0, 19) },
  { pnode(FPLL, 0, 0, REG_REG_ADDR, -1, 2), rnode(GOUT, 1, 0, 15) },
  { pnode(FPLL, 0, 0, REG_REG_ADDR, -1, 3), rnode(GOUT, 1, 0, 20) },
  { pnode(FPLL, 0, 0, REG_REG_ADDR, -1, 4), rnode(GOUT, 1, 0, 16) },
  { pnode(FPLL, 0, 0, REG_REG_ADDR, -1, 5), rnode(GOUT, 1, 0, 21) },
  { pnode(FPLL, 0, 0, REG_RST_N, -1, -1), rnode(GOUT, 1, 0, 22) },
  { pnode(FPLL, 0, 0, REG_SER_SHIFT_LOAD, -1, -1), rnode(GOUT, 1, 0, 23) },
  { pnode(FPLL, 0, 0, REG_WRITE, -1, -1), rnode(GOUT, 1, 0, 24) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 0), rnode(GOUT, 1, 0, 25) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 1), rnode(GOUT, 1, 0, 41) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 2), rnode(GOUT, 1, 0, 45) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 3), rnode(GOUT, 1, 0, 40) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 4), rnode(GOUT, 1, 0, 44) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 5), rnode(GOUT, 1, 0, 39) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 6), rnode(GOUT, 1, 0, 43) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 7), rnode(GOUT, 1, 0, 38) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 8), rnode(GOUT, 1, 0, 27) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 9), rnode(GOUT, 1, 0, 28) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 10), rnode(GOUT, 1, 0, 50) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 11), rnode(GOUT, 1, 0, 49) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 12), rnode(GOUT, 1, 0, 48) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 13), rnode(GOUT, 1, 0, 47) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 14), rnode(GOUT, 1, 0, 42) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 15), rnode(GOUT, 1, 0, 46) },
  { pnode(FPLL, 0, 0, EXTSWITCH, -1, -1), rnode(GOUT, 1, 0, 34) },
  { pnode(FPLL, 0, 0, FBCLK_IN_R, -1, -1), rnode(DCMUX, 0, 1, 4) },
  { pnode(FPLL, 0, 0, CSR_TEST, -1, -1), rnode(GOUT, 1, 0, 29) },
  { pnode(FPLL, 0, 0, NRESET, -1, -1), rnode(GOUT, 1, 0, 30) },
  { pnode(FPLL, 0, 0, PFDEN, -1, -1), rnode(GOUT, 1, 0, 31) },
  { pnode(FPLL, 0, 0, PHASE_EN, -1, -1), rnode(GOUT, 1, 0, 33) },
  { pnode(FPLL, 0, 0, SCANEN, -1, -1), rnode(GOUT, 1, 0, 32) },
  { pnode(FPLL, 0, 0, UP_DN, -1, -1), rnode(GOUT, 1, 0, 37) },
  { pnode(FPLL, 0, 0, CLK0_BAD, -1, -1), rnode(GIN, 1, 0, 5) },
  { pnode(FPLL, 0, 0, CLK1_BAD, -1, -1), rnode(GIN, 1, 0, 6) },
  { pnode(FPLL, 0, 0, CLKSEL, -1, -1), rnode(GIN, 1, 0, 7) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 0), rnode(GIN, 1, 0, 8) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 1), rnode(GIN, 1, 0, 23) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 2), rnode(GIN, 1, 0, 22) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 3), rnode(GIN, 1, 0, 21) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 4), rnode(GIN, 1, 0, 20) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 5), rnode(GIN, 1, 0, 19) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 6), rnode(GIN, 1, 0, 18) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 7), rnode(GIN, 1, 0, 17) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 8), rnode(GIN, 1, 0, 16) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 9), rnode(GIN, 1, 0, 15) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 10), rnode(GIN, 1, 0, 9) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 11), rnode(GIN, 1, 0, 10) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 12), rnode(GIN, 1, 0, 11) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 13), rnode(GIN, 1, 0, 12) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 14), rnode(GIN, 1, 0, 25) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 15), rnode(GIN, 1, 0, 24) },
  { pnode(FPLL, 0, 0, LOCK, -1, -1), rnode(GIN, 1, 0, 14) },
  { pnode(FPLL, 0, 0, PHASE_DONE, -1, -1), rnode(GIN, 1, 0, 13) },
  { pnode(FPLL, 0, 14, ATPGMODE, -1, -1), rnode(GOUT, 9, 28, 17) },
  { pnode(FPLL, 0, 14, CLKEN, -1, 0), rnode(GOUT, 9, 29, 53) },
  { pnode(FPLL, 0, 14, CLKEN, -1, 1), rnode(GOUT, 9, 29, 52) },
  { pnode(FPLL, 0, 14, CNT_SEL, -1, 0), rnode(GOUT, 9, 28, 69) },
  { pnode(FPLL, 0, 14, CNT_SEL, -1, 1), rnode(GOUT, 9, 28, 67) },
  { pnode(FPLL, 0, 14, CNT_SEL, -1, 2), rnode(GOUT, 9, 28, 66) },
  { pnode(FPLL, 0, 14, CNT_SEL, -1, 3), rnode(GOUT, 9, 28, 53) },
  { pnode(FPLL, 0, 14, CNT_SEL, -1, 4), rnode(GOUT, 9, 28, 52) },
  { pnode(FPLL, 0, 14, REG_BYTE_EN, -1, 0), rnode(GOUT, 9, 26, 13) },
  { pnode(FPLL, 0, 14, REG_BYTE_EN, -1, 1), rnode(GOUT, 9, 28, 71) },
  { pnode(FPLL, 0, 14, REG_CLK, -1, -1), rnode(DCMUX, 9, 28, 2) },
  { pnode(FPLL, 0, 14, REG_MDIO_DIS, -1, -1), rnode(GOUT, 9, 26, 17) },
  { pnode(FPLL, 0, 14, REG_READ, -1, -1), rnode(GOUT, 9, 26, 18) },
  { pnode(FPLL, 0, 14, REG_REG_ADDR, -1, 0), rnode(GOUT, 9, 28, 49) },
  { pnode(FPLL, 0, 14, REG_REG_ADDR, -1, 1), rnode(GOUT, 9, 28, 48) },
  { pnode(FPLL, 0, 14, REG_REG_ADDR, -1, 2), rnode(GOUT, 9, 28, 35) },
  { pnode(FPLL, 0, 14, REG_REG_ADDR, -1, 3), rnode(GOUT, 9, 28, 34) },
  { pnode(FPLL, 0, 14, REG_REG_ADDR, -1, 4), rnode(GOUT, 9, 28, 32) },
  { pnode(FPLL, 0, 14, REG_REG_ADDR, -1, 5), rnode(GOUT, 9, 28, 31) },
  { pnode(FPLL, 0, 14, REG_RST_N, -1, -1), rnode(GOUT, 9, 29, 71) },
  { pnode(FPLL, 0, 14, REG_SER_SHIFT_LOAD, -1, -1), rnode(GOUT, 9, 26, 14) },
  { pnode(FPLL, 0, 14, REG_WRITE, -1, -1), rnode(GOUT, 9, 26, 32) },
  { pnode(FPLL, 0, 14, REG_WRITEDATA, -1, 0), rnode(GOUT, 9, 25, 35) },
  { pnode(FPLL, 0, 14, REG_WRITEDATA, -1, 1), rnode(GOUT, 9, 25, 34) },
  { pnode(FPLL, 0, 14, REG_WRITEDATA, -1, 2), rnode(GOUT, 9, 25, 32) },
  { pnode(FPLL, 0, 14, REG_WRITEDATA, -1, 3), rnode(GOUT, 9, 25, 31) },
  { pnode(FPLL, 0, 14, REG_WRITEDATA, -1, 4), rnode(GOUT, 9, 25, 18) },
  { pnode(FPLL, 0, 14, REG_WRITEDATA, -1, 5), rnode(GOUT, 9, 25, 17) },
  { pnode(FPLL, 0, 14, REG_WRITEDATA, -1, 6), rnode(GOUT, 9, 25, 14) },
  { pnode(FPLL, 0, 14, REG_WRITEDATA, -1, 7), rnode(GOUT, 9, 25, 13) },
  { pnode(FPLL, 0, 14, REG_WRITEDATA, -1, 8), rnode(GOUT, 9, 26, 71) },
  { pnode(FPLL, 0, 14, REG_WRITEDATA, -1, 9), rnode(GOUT, 9, 26, 69) },
  { pnode(FPLL, 0, 14, REG_WRITEDATA, -1, 10), rnode(GOUT, 9, 26, 67) },
  { pnode(FPLL, 0, 14, REG_WRITEDATA, -1, 11), rnode(GOUT, 9, 26, 66) },
  { pnode(FPLL, 0, 14, REG_WRITEDATA, -1, 12), rnode(GOUT, 9, 26, 53) },
  { pnode(FPLL, 0, 14, REG_WRITEDATA, -1, 13), rnode(GOUT, 9, 26, 52) },
  { pnode(FPLL, 0, 14, REG_WRITEDATA, -1, 14), rnode(GOUT, 9, 26, 49) },
  { pnode(FPLL, 0, 14, REG_WRITEDATA, -1, 15), rnode(GOUT, 9, 26, 48) },
  { pnode(FPLL, 0, 14, EXTSWITCH, -1, -1), rnode(GOUT, 9, 21, 14) },
  { pnode(FPLL, 0, 14, FBCLK_IN_L, -1, -1), rnode(DCMUX, 0, 1, 5) },
  { pnode(FPLL, 0, 14, CSR_TEST, -1, -1), rnode(GOUT, 9, 28, 14) },
  { pnode(FPLL, 0, 14, NRESET, -1, -1), rnode(GOUT, 9, 29, 48) },
  { pnode(FPLL, 0, 14, PFDEN, -1, -1), rnode(GOUT, 9, 29, 67) },
  { pnode(FPLL, 0, 14, PHASE_EN, -1, -1), rnode(GOUT, 9, 26, 31) },
  { pnode(FPLL, 0, 14, SCANEN, -1, -1), rnode(GOUT, 9, 28, 18) },
  { pnode(FPLL, 0, 14, UP_DN, -1, -1), rnode(GOUT, 9, 21, 13) },
  { pnode(FPLL, 0, 14, CLK0_BAD, -1, -1), rnode(GIN, 9, 21, 19) },
  { pnode(FPLL, 0, 14, CLK1_BAD, -1, -1), rnode(GIN, 9, 21, 18) },
  { pnode(FPLL, 0, 14, CLKSEL, -1, -1), rnode(GIN, 9, 21, 15) },
  { pnode(FPLL, 0, 14, REG_READDATA, -1, 0), rnode(GIN, 9, 26, 80) },
  { pnode(FPLL, 0, 14, REG_READDATA, -1, 1), rnode(GIN, 9, 26, 79) },
  { pnode(FPLL, 0, 14, REG_READDATA, -1, 2), rnode(GIN, 9, 26, 76) },
  { pnode(FPLL, 0, 14, REG_READDATA, -1, 3), rnode(GIN, 9, 26, 75) },
  { pnode(FPLL, 0, 14, REG_READDATA, -1, 4), rnode(GIN, 9, 26, 60) },
  { pnode(FPLL, 0, 14, REG_READDATA, -1, 5), rnode(GIN, 9, 26, 59) },
  { pnode(FPLL, 0, 14, REG_READDATA, -1, 6), rnode(GIN, 9, 26, 56) },
  { pnode(FPLL, 0, 14, REG_READDATA, -1, 7), rnode(GIN, 9, 26, 55) },
  { pnode(FPLL, 0, 14, REG_READDATA, -1, 8), rnode(GIN, 9, 25, 39) },
  { pnode(FPLL, 0, 14, REG_READDATA, -1, 9), rnode(GIN, 9, 25, 38) },
  { pnode(FPLL, 0, 14, REG_READDATA, -1, 10), rnode(GIN, 9, 25, 35) },
  { pnode(FPLL, 0, 14, REG_READDATA, -1, 11), rnode(GIN, 9, 25, 34) },
  { pnode(FPLL, 0, 14, REG_READDATA, -1, 12), rnode(GIN, 9, 25, 19) },
  { pnode(FPLL, 0, 14, REG_READDATA, -1, 13), rnode(GIN, 9, 25, 18) },
  { pnode(FPLL, 0, 14, REG_READDATA, -1, 14), rnode(GIN, 9, 25, 15) },
  { pnode(FPLL, 0, 14, REG_READDATA, -1, 15), rnode(GIN, 9, 25, 14) },
  { pnode(FPLL, 0, 14, LOCK, -1, -1), rnode(GIN, 9, 29, 60) },
  { pnode(FPLL, 0, 14, PHASE_DONE, -1, -1), rnode(GIN, 9, 26, 38) },
  { pnode(FPLL, 0, 31, ATPGMODE, -1, -1), rnode(GOUT, 0, 33, 67) },
  { pnode(FPLL, 0, 31, CLKEN, -1, 0), rnode(GOUT, 0, 32, 31) },
  { pnode(FPLL, 0, 31, CLKEN, -1, 1), rnode(GOUT, 0, 32, 32) },
  { pnode(FPLL, 0, 31, CNT_SEL, -1, 0), rnode(GOUT, 0, 33, 14) },
  { pnode(FPLL, 0, 31, CNT_SEL, -1, 1), rnode(GOUT, 0, 33, 17) },
  { pnode(FPLL, 0, 31, CNT_SEL, -1, 2), rnode(GOUT, 0, 33, 18) },
  { pnode(FPLL, 0, 31, CNT_SEL, -1, 3), rnode(GOUT, 0, 33, 31) },
  { pnode(FPLL, 0, 31, CNT_SEL, -1, 4), rnode(GOUT, 0, 33, 32) },
  { pnode(FPLL, 0, 31, REG_BYTE_EN, -1, 0), rnode(GOUT, 0, 35, 71) },
  { pnode(FPLL, 0, 31, REG_BYTE_EN, -1, 1), rnode(GOUT, 0, 33, 13) },
  { pnode(FPLL, 0, 31, REG_CLK, -1, -1), rnode(DCMUX, 0, 32, 1) },
  { pnode(FPLL, 0, 31, REG_MDIO_DIS, -1, -1), rnode(GOUT, 0, 35, 67) },
  { pnode(FPLL, 0, 31, REG_READ, -1, -1), rnode(GOUT, 0, 35, 66) },
  { pnode(FPLL, 0, 31, REG_REG_ADDR, -1, 0), rnode(GOUT, 0, 33, 34) },
  { pnode(FPLL, 0, 31, REG_REG_ADDR, -1, 1), rnode(GOUT, 0, 33, 35) },
  { pnode(FPLL, 0, 31, REG_REG_ADDR, -1, 2), rnode(GOUT, 0, 33, 48) },
  { pnode(FPLL, 0, 31, REG_REG_ADDR, -1, 3), rnode(GOUT, 0, 33, 49) },
  { pnode(FPLL, 0, 31, REG_REG_ADDR, -1, 4), rnode(GOUT, 0, 33, 52) },
  { pnode(FPLL, 0, 31, REG_REG_ADDR, -1, 5), rnode(GOUT, 0, 33, 53) },
  { pnode(FPLL, 0, 31, REG_RST_N, -1, -1), rnode(GOUT, 0, 32, 13) },
  { pnode(FPLL, 0, 31, REG_SER_SHIFT_LOAD, -1, -1), rnode(GOUT, 0, 35, 69) },
  { pnode(FPLL, 0, 31, REG_WRITE, -1, -1), rnode(GOUT, 0, 35, 52) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 0), rnode(GOUT, 0, 36, 48) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 1), rnode(GOUT, 0, 36, 49) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 2), rnode(GOUT, 0, 36, 52) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 3), rnode(GOUT, 0, 36, 53) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 4), rnode(GOUT, 0, 36, 66) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 5), rnode(GOUT, 0, 36, 67) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 6), rnode(GOUT, 0, 36, 69) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 7), rnode(GOUT, 0, 36, 71) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 8), rnode(GOUT, 0, 35, 13) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 9), rnode(GOUT, 0, 35, 14) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 10), rnode(GOUT, 0, 35, 17) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 11), rnode(GOUT, 0, 35, 18) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 12), rnode(GOUT, 0, 35, 31) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 13), rnode(GOUT, 0, 35, 32) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 14), rnode(GOUT, 0, 35, 34) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 15), rnode(GOUT, 0, 35, 35) },
  { pnode(FPLL, 0, 31, EXTSWITCH, -1, -1), rnode(GOUT, 0, 37, 34) },
  { pnode(FPLL, 0, 31, CSR_TEST, -1, -1), rnode(GOUT, 0, 33, 69) },
  { pnode(FPLL, 0, 31, NRESET, -1, -1), rnode(GOUT, 0, 32, 35) },
  { pnode(FPLL, 0, 31, PFDEN, -1, -1), rnode(GOUT, 0, 32, 17) },
  { pnode(FPLL, 0, 31, PHASE_EN, -1, -1), rnode(GOUT, 0, 35, 53) },
  { pnode(FPLL, 0, 31, SCANEN, -1, -1), rnode(GOUT, 0, 33, 66) },
  { pnode(FPLL, 0, 31, UP_DN, -1, -1), rnode(GOUT, 0, 37, 35) },
  { pnode(FPLL, 0, 31, CLK0_BAD, -1, -1), rnode(GIN, 0, 37, 34) },
  { pnode(FPLL, 0, 31, CLK1_BAD, -1, -1), rnode(GIN, 0, 37, 35) },
  { pnode(FPLL, 0, 31, CLKSEL, -1, -1), rnode(GIN, 0, 37, 38) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 0), rnode(GIN, 0, 35, 14) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 1), rnode(GIN, 0, 35, 15) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 2), rnode(GIN, 0, 35, 18) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 3), rnode(GIN, 0, 35, 19) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 4), rnode(GIN, 0, 35, 34) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 5), rnode(GIN, 0, 35, 35) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 6), rnode(GIN, 0, 35, 38) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 7), rnode(GIN, 0, 35, 39) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 8), rnode(GIN, 0, 36, 55) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 9), rnode(GIN, 0, 36, 56) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 10), rnode(GIN, 0, 36, 59) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 11), rnode(GIN, 0, 36, 60) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 12), rnode(GIN, 0, 36, 75) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 13), rnode(GIN, 0, 36, 76) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 14), rnode(GIN, 0, 36, 79) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 15), rnode(GIN, 0, 36, 80) },
  { pnode(FPLL, 0, 31, LOCK, -1, -1), rnode(GIN, 0, 32, 34) },
  { pnode(FPLL, 0, 31, PHASE_DONE, -1, -1), rnode(GIN, 0, 35, 56) },
  { pnode(FPLL, 0, 55, ATPGMODE, -1, -1), rnode(GOUT, 9, 69, 17) },
  { pnode(FPLL, 0, 55, CLKEN, -1, 0), rnode(GOUT, 9, 70, 53) },
  { pnode(FPLL, 0, 55, CLKEN, -1, 1), rnode(GOUT, 9, 70, 52) },
  { pnode(FPLL, 0, 55, CNT_SEL, -1, 0), rnode(GOUT, 9, 69, 69) },
  { pnode(FPLL, 0, 55, CNT_SEL, -1, 1), rnode(GOUT, 9, 69, 67) },
  { pnode(FPLL, 0, 55, CNT_SEL, -1, 2), rnode(GOUT, 9, 69, 66) },
  { pnode(FPLL, 0, 55, CNT_SEL, -1, 3), rnode(GOUT, 9, 69, 53) },
  { pnode(FPLL, 0, 55, CNT_SEL, -1, 4), rnode(GOUT, 9, 69, 52) },
  { pnode(FPLL, 0, 55, REG_BYTE_EN, -1, 0), rnode(GOUT, 9, 67, 13) },
  { pnode(FPLL, 0, 55, REG_BYTE_EN, -1, 1), rnode(GOUT, 9, 69, 71) },
  { pnode(FPLL, 0, 55, REG_CLK, -1, -1), rnode(DCMUX, 9, 69, 2) },
  { pnode(FPLL, 0, 55, REG_MDIO_DIS, -1, -1), rnode(GOUT, 9, 67, 17) },
  { pnode(FPLL, 0, 55, REG_READ, -1, -1), rnode(GOUT, 9, 67, 18) },
  { pnode(FPLL, 0, 55, REG_REG_ADDR, -1, 0), rnode(GOUT, 9, 69, 49) },
  { pnode(FPLL, 0, 55, REG_REG_ADDR, -1, 1), rnode(GOUT, 9, 69, 48) },
  { pnode(FPLL, 0, 55, REG_REG_ADDR, -1, 2), rnode(GOUT, 9, 69, 35) },
  { pnode(FPLL, 0, 55, REG_REG_ADDR, -1, 3), rnode(GOUT, 9, 69, 34) },
  { pnode(FPLL, 0, 55, REG_REG_ADDR, -1, 4), rnode(GOUT, 9, 69, 32) },
  { pnode(FPLL, 0, 55, REG_REG_ADDR, -1, 5), rnode(GOUT, 9, 69, 31) },
  { pnode(FPLL, 0, 55, REG_RST_N, -1, -1), rnode(GOUT, 9, 70, 71) },
  { pnode(FPLL, 0, 55, REG_SER_SHIFT_LOAD, -1, -1), rnode(GOUT, 9, 67, 14) },
  { pnode(FPLL, 0, 55, REG_WRITE, -1, -1), rnode(GOUT, 9, 67, 32) },
  { pnode(FPLL, 0, 55, REG_WRITEDATA, -1, 0), rnode(GOUT, 9, 66, 35) },
  { pnode(FPLL, 0, 55, REG_WRITEDATA, -1, 1), rnode(GOUT, 9, 66, 34) },
  { pnode(FPLL, 0, 55, REG_WRITEDATA, -1, 2), rnode(GOUT, 9, 66, 32) },
  { pnode(FPLL, 0, 55, REG_WRITEDATA, -1, 3), rnode(GOUT, 9, 66, 31) },
  { pnode(FPLL, 0, 55, REG_WRITEDATA, -1, 4), rnode(GOUT, 9, 66, 18) },
  { pnode(FPLL, 0, 55, REG_WRITEDATA, -1, 5), rnode(GOUT, 9, 66, 17) },
  { pnode(FPLL, 0, 55, REG_WRITEDATA, -1, 6), rnode(GOUT, 9, 66, 14) },
  { pnode(FPLL, 0, 55, REG_WRITEDATA, -1, 7), rnode(GOUT, 9, 66, 13) },
  { pnode(FPLL, 0, 55, REG_WRITEDATA, -1, 8), rnode(GOUT, 9, 67, 71) },
  { pnode(FPLL, 0, 55, REG_WRITEDATA, -1, 9), rnode(GOUT, 9, 67, 69) },
  { pnode(FPLL, 0, 55, REG_WRITEDATA, -1, 10), rnode(GOUT, 9, 67, 67) },
  { pnode(FPLL, 0, 55, REG_WRITEDATA, -1, 11), rnode(GOUT, 9, 67, 66) },
  { pnode(FPLL, 0, 55, REG_WRITEDATA, -1, 12), rnode(GOUT, 9, 67, 53) },
  { pnode(FPLL, 0, 55, REG_WRITEDATA, -1, 13), rnode(GOUT, 9, 67, 52) },
  { pnode(FPLL, 0, 55, REG_WRITEDATA, -1, 14), rnode(GOUT, 9, 67, 49) },
  { pnode(FPLL, 0, 55, REG_WRITEDATA, -1, 15), rnode(GOUT, 9, 67, 48) },
  { pnode(FPLL, 0, 55, EXTSWITCH, -1, -1), rnode(GOUT, 9, 62, 14) },
  { pnode(FPLL, 0, 55, FBCLK_IN_L, -1, -1), rnode(DCMUX, 0, 37, 4) },
  { pnode(FPLL, 0, 55, CSR_TEST, -1, -1), rnode(GOUT, 9, 69, 14) },
  { pnode(FPLL, 0, 55, NRESET, -1, -1), rnode(GOUT, 9, 70, 48) },
  { pnode(FPLL, 0, 55, PFDEN, -1, -1), rnode(GOUT, 9, 70, 67) },
  { pnode(FPLL, 0, 55, PHASE_EN, -1, -1), rnode(GOUT, 9, 67, 31) },
  { pnode(FPLL, 0, 55, SCANEN, -1, -1), rnode(GOUT, 9, 69, 18) },
  { pnode(FPLL, 0, 55, UP_DN, -1, -1), rnode(GOUT, 9, 62, 13) },
  { pnode(FPLL, 0, 55, CLK0_BAD, -1, -1), rnode(GIN, 9, 62, 19) },
  { pnode(FPLL, 0, 55, CLK1_BAD, -1, -1), rnode(GIN, 9, 62, 18) },
  { pnode(FPLL, 0, 55, CLKSEL, -1, -1), rnode(GIN, 9, 62, 15) },
  { pnode(FPLL, 0, 55, REG_READDATA, -1, 0), rnode(GIN, 9, 67, 80) },
  { pnode(FPLL, 0, 55, REG_READDATA, -1, 1), rnode(GIN, 9, 67, 79) },
  { pnode(FPLL, 0, 55, REG_READDATA, -1, 2), rnode(GIN, 9, 67, 76) },
  { pnode(FPLL, 0, 55, REG_READDATA, -1, 3), rnode(GIN, 9, 67, 75) },
  { pnode(FPLL, 0, 55, REG_READDATA, -1, 4), rnode(GIN, 9, 67, 60) },
  { pnode(FPLL, 0, 55, REG_READDATA, -1, 5), rnode(GIN, 9, 67, 59) },
  { pnode(FPLL, 0, 55, REG_READDATA, -1, 6), rnode(GIN, 9, 67, 56) },
  { pnode(FPLL, 0, 55, REG_READDATA, -1, 7), rnode(GIN, 9, 67, 55) },
  { pnode(FPLL, 0, 55, REG_READDATA, -1, 8), rnode(GIN, 9, 66, 39) },
  { pnode(FPLL, 0, 55, REG_READDATA, -1, 9), rnode(GIN, 9, 66, 38) },
  { pnode(FPLL, 0, 55, REG_READDATA, -1, 10), rnode(GIN, 9, 66, 35) },
  { pnode(FPLL, 0, 55, REG_READDATA, -1, 11), rnode(GIN, 9, 66, 34) },
  { pnode(FPLL, 0, 55, REG_READDATA, -1, 12), rnode(GIN, 9, 66, 19) },
  { pnode(FPLL, 0, 55, REG_READDATA, -1, 13), rnode(GIN, 9, 66, 18) },
  { pnode(FPLL, 0, 55, REG_READDATA, -1, 14), rnode(GIN, 9, 66, 15) },
  { pnode(FPLL, 0, 55, REG_READDATA, -1, 15), rnode(GIN, 9, 66, 14) },
  { pnode(FPLL, 0, 55, LOCK, -1, -1), rnode(GIN, 9, 70, 60) },
  { pnode(FPLL, 0, 55, PHASE_DONE, -1, -1), rnode(GIN, 9, 67, 38) },
  { pnode(FPLL, 0, 73, ATPGMODE, -1, -1), rnode(GOUT, 1, 81, 11) },
  { pnode(FPLL, 0, 73, CLKEN, -1, 0), rnode(GOUT, 1, 81, 6) },
  { pnode(FPLL, 0, 73, CLKEN, -1, 1), rnode(GOUT, 1, 81, 7) },
  { pnode(FPLL, 0, 73, CNT_SEL, -1, 0), rnode(GOUT, 1, 81, 5) },
  { pnode(FPLL, 0, 73, CNT_SEL, -1, 1), rnode(GOUT, 1, 81, 4) },
  { pnode(FPLL, 0, 73, CNT_SEL, -1, 2), rnode(GOUT, 1, 81, 3) },
  { pnode(FPLL, 0, 73, CNT_SEL, -1, 3), rnode(GOUT, 1, 81, 8) },
  { pnode(FPLL, 0, 73, CNT_SEL, -1, 4), rnode(GOUT, 1, 81, 2) },
  { pnode(FPLL, 0, 73, REG_BYTE_EN, -1, 0), rnode(GOUT, 1, 81, 1) },
  { pnode(FPLL, 0, 73, REG_BYTE_EN, -1, 1), rnode(GOUT, 1, 81, 12) },
  { pnode(FPLL, 0, 73, REG_CLK, -1, -1), rnode(GOUT, 1, 81, 17) },
  { pnode(FPLL, 0, 73, REG_MDIO_DIS, -1, -1), rnode(GOUT, 1, 81, 13) },
  { pnode(FPLL, 0, 73, REG_READ, -1, -1), rnode(GOUT, 1, 81, 18) },
  { pnode(FPLL, 0, 73, REG_REG_ADDR, -1, 0), rnode(GOUT, 1, 81, 14) },
  { pnode(FPLL, 0, 73, REG_REG_ADDR, -1, 1), rnode(GOUT, 1, 81, 19) },
  { pnode(FPLL, 0, 73, REG_REG_ADDR, -1, 2), rnode(GOUT, 1, 81, 15) },
  { pnode(FPLL, 0, 73, REG_REG_ADDR, -1, 3), rnode(GOUT, 1, 81, 20) },
  { pnode(FPLL, 0, 73, REG_REG_ADDR, -1, 4), rnode(GOUT, 1, 81, 16) },
  { pnode(FPLL, 0, 73, REG_REG_ADDR, -1, 5), rnode(GOUT, 1, 81, 21) },
  { pnode(FPLL, 0, 73, REG_RST_N, -1, -1), rnode(GOUT, 1, 81, 22) },
  { pnode(FPLL, 0, 73, REG_SER_SHIFT_LOAD, -1, -1), rnode(GOUT, 1, 81, 23) },
  { pnode(FPLL, 0, 73, REG_WRITE, -1, -1), rnode(GOUT, 1, 81, 24) },
  { pnode(FPLL, 0, 73, REG_WRITEDATA, -1, 0), rnode(GOUT, 1, 81, 25) },
  { pnode(FPLL, 0, 73, REG_WRITEDATA, -1, 1), rnode(GOUT, 1, 81, 41) },
  { pnode(FPLL, 0, 73, REG_WRITEDATA, -1, 2), rnode(GOUT, 1, 81, 45) },
  { pnode(FPLL, 0, 73, REG_WRITEDATA, -1, 3), rnode(GOUT, 1, 81, 40) },
  { pnode(FPLL, 0, 73, REG_WRITEDATA, -1, 4), rnode(GOUT, 1, 81, 44) },
  { pnode(FPLL, 0, 73, REG_WRITEDATA, -1, 5), rnode(GOUT, 1, 81, 39) },
  { pnode(FPLL, 0, 73, REG_WRITEDATA, -1, 6), rnode(GOUT, 1, 81, 43) },
  { pnode(FPLL, 0, 73, REG_WRITEDATA, -1, 7), rnode(GOUT, 1, 81, 38) },
  { pnode(FPLL, 0, 73, REG_WRITEDATA, -1, 8), rnode(GOUT, 1, 81, 27) },
  { pnode(FPLL, 0, 73, REG_WRITEDATA, -1, 9), rnode(GOUT, 1, 81, 28) },
  { pnode(FPLL, 0, 73, REG_WRITEDATA, -1, 10), rnode(GOUT, 1, 81, 50) },
  { pnode(FPLL, 0, 73, REG_WRITEDATA, -1, 11), rnode(GOUT, 1, 81, 49) },
  { pnode(FPLL, 0, 73, REG_WRITEDATA, -1, 12), rnode(GOUT, 1, 81, 48) },
  { pnode(FPLL, 0, 73, REG_WRITEDATA, -1, 13), rnode(GOUT, 1, 81, 47) },
  { pnode(FPLL, 0, 73, REG_WRITEDATA, -1, 14), rnode(GOUT, 1, 81, 42) },
  { pnode(FPLL, 0, 73, REG_WRITEDATA, -1, 15), rnode(GOUT, 1, 81, 46) },
  { pnode(FPLL, 0, 73, EXTSWITCH, -1, -1), rnode(GOUT, 1, 81, 34) },
  { pnode(FPLL, 0, 73, FBCLK_IN_R, -1, -1), rnode(DCMUX, 0, 80, 4) },
  { pnode(FPLL, 0, 73, CSR_TEST, -1, -1), rnode(GOUT, 1, 81, 29) },
  { pnode(FPLL, 0, 73, NRESET, -1, -1), rnode(GOUT, 1, 81, 30) },
  { pnode(FPLL, 0, 73, PFDEN, -1, -1), rnode(GOUT, 1, 81, 31) },
  { pnode(FPLL, 0, 73, PHASE_EN, -1, -1), rnode(GOUT, 1, 81, 33) },
  { pnode(FPLL, 0, 73, SCANEN, -1, -1), rnode(GOUT, 1, 81, 32) },
  { pnode(FPLL, 0, 73, UP_DN, -1, -1), rnode(GOUT, 1, 81, 37) },
  { pnode(FPLL, 0, 73, CLK0_BAD, -1, -1), rnode(GIN, 1, 81, 5) },
  { pnode(FPLL, 0, 73, CLK1_BAD, -1, -1), rnode(GIN, 1, 81, 6) },
  { pnode(FPLL, 0, 73, CLKSEL, -1, -1), rnode(GIN, 1, 81, 7) },
  { pnode(FPLL, 0, 73, REG_READDATA, -1, 0), rnode(GIN, 1, 81, 8) },
  { pnode(FPLL, 0, 73, REG_READDATA, -1, 1), rnode(GIN, 1, 81, 23) },
  { pnode(FPLL, 0, 73, REG_READDATA, -1, 2), rnode(GIN, 1, 81, 22) },
  { pnode(FPLL, 0, 73, REG_READDATA, -1, 3), rnode(GIN, 1, 81, 21) },
  { pnode(FPLL, 0, 73, REG_READDATA, -1, 4), rnode(GIN, 1, 81, 20) },
  { pnode(FPLL, 0, 73, REG_READDATA, -1, 5), rnode(GIN, 1, 81, 19) },
  { pnode(FPLL, 0, 73, REG_READDATA, -1, 6), rnode(GIN, 1, 81, 18) },
  { pnode(FPLL, 0, 73, REG_READDATA, -1, 7), rnode(GIN, 1, 81, 17) },
  { pnode(FPLL, 0, 73, REG_READDATA, -1, 8), rnode(GIN, 1, 81, 16) },
  { pnode(FPLL, 0, 73, REG_READDATA, -1, 9), rnode(GIN, 1, 81, 15) },
  { pnode(FPLL, 0, 73, REG_READDATA, -1, 10), rnode(GIN, 1, 81, 9) },
  { pnode(FPLL, 0, 73, REG_READDATA, -1, 11), rnode(GIN, 1, 81, 10) },
  { pnode(FPLL, 0, 73, REG_READDATA, -1, 12), rnode(GIN, 1, 81, 11) },
  { pnode(FPLL, 0, 73, REG_READDATA, -1, 13), rnode(GIN, 1, 81, 12) },
  { pnode(FPLL, 0, 73, REG_READDATA, -1, 14), rnode(GIN, 1, 81, 25) },
  { pnode(FPLL, 0, 73, REG_READDATA, -1, 15), rnode(GIN, 1, 81, 24) },
  { pnode(FPLL, 0, 73, LOCK, -1, -1), rnode(GIN, 1, 81, 14) },
  { pnode(FPLL, 0, 73, PHASE_DONE, -1, -1), rnode(GIN, 1, 81, 13) },
  { pnode(FPLL, 89, 0, ATPGMODE, -1, -1), rnode(GOUT, 89, 1, 30) },
  { pnode(FPLL, 89, 0, CLKEN, -1, 0), rnode(GOUT, 89, 1, 26) },
  { pnode(FPLL, 89, 0, CLKEN, -1, 1), rnode(GOUT, 89, 1, 24) },
  { pnode(FPLL, 89, 0, CNT_SEL, -1, 0), rnode(GOUT, 89, 1, 43) },
  { pnode(FPLL, 89, 0, CNT_SEL, -1, 1), rnode(GOUT, 89, 1, 42) },
  { pnode(FPLL, 89, 0, CNT_SEL, -1, 2), rnode(GOUT, 89, 1, 40) },
  { pnode(FPLL, 89, 0, CNT_SEL, -1, 3), rnode(GOUT, 89, 1, 37) },
  { pnode(FPLL, 89, 0, CNT_SEL, -1, 4), rnode(GOUT, 89, 1, 38) },
  { pnode(FPLL, 89, 0, REG_BYTE_EN, -1, 0), rnode(GOUT, 89, 1, 61) },
  { pnode(FPLL, 89, 0, REG_BYTE_EN, -1, 1), rnode(GOUT, 89, 1, 45) },
  { pnode(FPLL, 89, 0, REG_CLK, -1, -1), rnode(GOUT, 89, 1, 29) },
  { pnode(FPLL, 89, 0, REG_MDIO_DIS, -1, -1), rnode(GOUT, 89, 1, 65) },
  { pnode(FPLL, 89, 0, REG_READ, -1, -1), rnode(GOUT, 89, 1, 66) },
  { pnode(FPLL, 89, 0, REG_REG_ADDR, -1, 0), rnode(GOUT, 89, 1, 41) },
  { pnode(FPLL, 89, 0, REG_REG_ADDR, -1, 1), rnode(GOUT, 89, 1, 39) },
  { pnode(FPLL, 89, 0, REG_REG_ADDR, -1, 2), rnode(GOUT, 89, 1, 36) },
  { pnode(FPLL, 89, 0, REG_REG_ADDR, -1, 3), rnode(GOUT, 89, 1, 34) },
  { pnode(FPLL, 89, 0, REG_REG_ADDR, -1, 4), rnode(GOUT, 89, 1, 35) },
  { pnode(FPLL, 89, 0, REG_REG_ADDR, -1, 5), rnode(GOUT, 89, 1, 33) },
  { pnode(FPLL, 89, 0, REG_RST_N, -1, -1), rnode(GOUT, 89, 1, 28) },
  { pnode(FPLL, 89, 0, REG_SER_SHIFT_LOAD, -1, -1), rnode(GOUT, 89, 1, 62) },
  { pnode(FPLL, 89, 0, REG_WRITE, -1, -1), rnode(GOUT, 89, 1, 68) },
  { pnode(FPLL, 89, 0, REG_WRITEDATA, -1, 0), rnode(GOUT, 89, 1, 58) },
  { pnode(FPLL, 89, 0, REG_WRITEDATA, -1, 1), rnode(GOUT, 89, 1, 60) },
  { pnode(FPLL, 89, 0, REG_WRITEDATA, -1, 2), rnode(GOUT, 89, 1, 57) },
  { pnode(FPLL, 89, 0, REG_WRITEDATA, -1, 3), rnode(GOUT, 89, 1, 59) },
  { pnode(FPLL, 89, 0, REG_WRITEDATA, -1, 4), rnode(GOUT, 89, 1, 55) },
  { pnode(FPLL, 89, 0, REG_WRITEDATA, -1, 5), rnode(GOUT, 89, 1, 56) },
  { pnode(FPLL, 89, 0, REG_WRITEDATA, -1, 6), rnode(GOUT, 89, 1, 53) },
  { pnode(FPLL, 89, 0, REG_WRITEDATA, -1, 7), rnode(GOUT, 89, 1, 54) },
  { pnode(FPLL, 89, 0, REG_WRITEDATA, -1, 8), rnode(GOUT, 89, 1, 51) },
  { pnode(FPLL, 89, 0, REG_WRITEDATA, -1, 9), rnode(GOUT, 89, 1, 52) },
  { pnode(FPLL, 89, 0, REG_WRITEDATA, -1, 10), rnode(GOUT, 89, 1, 49) },
  { pnode(FPLL, 89, 0, REG_WRITEDATA, -1, 11), rnode(GOUT, 89, 1, 50) },
  { pnode(FPLL, 89, 0, REG_WRITEDATA, -1, 12), rnode(GOUT, 89, 1, 47) },
  { pnode(FPLL, 89, 0, REG_WRITEDATA, -1, 13), rnode(GOUT, 89, 1, 48) },
  { pnode(FPLL, 89, 0, REG_WRITEDATA, -1, 14), rnode(GOUT, 89, 1, 44) },
  { pnode(FPLL, 89, 0, REG_WRITEDATA, -1, 15), rnode(GOUT, 89, 1, 46) },
  { pnode(FPLL, 89, 0, EXTSWITCH, -1, -1), rnode(GOUT, 89, 1, 64) },
  { pnode(FPLL, 89, 0, FBCLK_IN_R, -1, -1), rnode(DCMUX, 89, 1, 6) },
  { pnode(FPLL, 89, 0, CSR_TEST, -1, -1), rnode(GOUT, 89, 1, 31) },
  { pnode(FPLL, 89, 0, NRESET, -1, -1), rnode(GOUT, 89, 1, 25) },
  { pnode(FPLL, 89, 0, PFDEN, -1, -1), rnode(GOUT, 89, 1, 27) },
  { pnode(FPLL, 89, 0, PHASE_EN, -1, -1), rnode(GOUT, 89, 1, 67) },
  { pnode(FPLL, 89, 0, SCANEN, -1, -1), rnode(GOUT, 89, 1, 32) },
  { pnode(FPLL, 89, 0, UP_DN, -1, -1), rnode(GOUT, 89, 1, 63) },
  { pnode(FPLL, 89, 0, CLK0_BAD, -1, -1), rnode(GIN, 89, 1, 70) },
  { pnode(FPLL, 89, 0, CLK1_BAD, -1, -1), rnode(GIN, 89, 1, 69) },
  { pnode(FPLL, 89, 0, CLKSEL, -1, -1), rnode(GIN, 89, 1, 71) },
  { pnode(FPLL, 89, 0, REG_READDATA, -1, 0), rnode(GIN, 89, 1, 59) },
  { pnode(FPLL, 89, 0, REG_READDATA, -1, 1), rnode(GIN, 89, 1, 60) },
  { pnode(FPLL, 89, 0, REG_READDATA, -1, 2), rnode(GIN, 89, 1, 57) },
  { pnode(FPLL, 89, 0, REG_READDATA, -1, 3), rnode(GIN, 89, 1, 58) },
  { pnode(FPLL, 89, 0, REG_READDATA, -1, 4), rnode(GIN, 89, 1, 55) },
  { pnode(FPLL, 89, 0, REG_READDATA, -1, 5), rnode(GIN, 89, 1, 56) },
  { pnode(FPLL, 89, 0, REG_READDATA, -1, 6), rnode(GIN, 89, 1, 53) },
  { pnode(FPLL, 89, 0, REG_READDATA, -1, 7), rnode(GIN, 89, 1, 54) },
  { pnode(FPLL, 89, 0, REG_READDATA, -1, 8), rnode(GIN, 89, 1, 67) },
  { pnode(FPLL, 89, 0, REG_READDATA, -1, 9), rnode(GIN, 89, 1, 68) },
  { pnode(FPLL, 89, 0, REG_READDATA, -1, 10), rnode(GIN, 89, 1, 65) },
  { pnode(FPLL, 89, 0, REG_READDATA, -1, 11), rnode(GIN, 89, 1, 66) },
  { pnode(FPLL, 89, 0, REG_READDATA, -1, 12), rnode(GIN, 89, 1, 63) },
  { pnode(FPLL, 89, 0, REG_READDATA, -1, 13), rnode(GIN, 89, 1, 64) },
  { pnode(FPLL, 89, 0, REG_READDATA, -1, 14), rnode(GIN, 89, 1, 61) },
  { pnode(FPLL, 89, 0, REG_READDATA, -1, 15), rnode(GIN, 89, 1, 62) },
  { pnode(FPLL, 89, 0, LOCK, -1, -1), rnode(GIN, 89, 1, 51) },
  { pnode(FPLL, 89, 0, PHASE_DONE, -1, -1), rnode(GIN, 89, 1, 52) },
  { pnode(CTRL, 0, 2, CAPTNUPDT_RU, -1, -1), rnode(GOUT, 0, 2, 33) },
  { pnode(CTRL, 0, 2, CLOCK_CHIPID, -1, -1), rnode(DCMUX, 0, 2, 0) },
  { pnode(CTRL, 0, 2, CLOCK_CRC, -1, -1), rnode(DCMUX, 0, 2, 4) },
  { pnode(CTRL, 0, 2, CLOCK_OPREG, -1, -1), rnode(DCMUX, 0, 1, 0) },
  { pnode(CTRL, 0, 2, CLOCK_PR, -1, -1), rnode(DCMUX, 0, 2, 6) },
  { pnode(CTRL, 0, 2, CLOCK_RU, -1, -1), rnode(DCMUX, 0, 2, 11) },
  { pnode(CTRL, 0, 2, CLOCK_SPI, -1, -1), rnode(DCMUX, 0, 2, 2) },
  { pnode(CTRL, 0, 2, CONFIG, -1, -1), rnode(GOUT, 0, 2, 37) },
  { pnode(CTRL, 0, 2, CORECTL_JTAG, -1, -1), rnode(GOUT, 0, 2, 8) },
  { pnode(CTRL, 0, 2, CORECTL_PR, -1, -1), rnode(GOUT, 0, 2, 12) },
  { pnode(CTRL, 0, 2, DATA, -1, 0), rnode(GOUT, 0, 2, 14) },
  { pnode(CTRL, 0, 2, DATA, -1, 1), rnode(GOUT, 0, 2, 15) },
  { pnode(CTRL, 0, 2, DATA, -1, 2), rnode(GOUT, 0, 2, 16) },
  { pnode(CTRL, 0, 2, DATA, -1, 3), rnode(GOUT, 0, 2, 17) },
  { pnode(CTRL, 0, 2, DATA, -1, 4), rnode(GOUT, 0, 2, 18) },
  { pnode(CTRL, 0, 2, DATA, -1, 5), rnode(GOUT, 0, 2, 19) },
  { pnode(CTRL, 0, 2, DATA, -1, 6), rnode(GOUT, 0, 2, 20) },
  { pnode(CTRL, 0, 2, DATA, -1, 7), rnode(GOUT, 0, 2, 21) },
  { pnode(CTRL, 0, 2, DATA, -1, 8), rnode(GOUT, 0, 2, 22) },
  { pnode(CTRL, 0, 2, DATA, -1, 9), rnode(GOUT, 0, 2, 23) },
  { pnode(CTRL, 0, 2, DATA, -1, 10), rnode(GOUT, 0, 2, 24) },
  { pnode(CTRL, 0, 2, DATA, -1, 11), rnode(GOUT, 0, 2, 25) },
  { pnode(CTRL, 0, 2, DATA, -1, 12), rnode(GOUT, 0, 2, 26) },
  { pnode(CTRL, 0, 2, DATA, -1, 13), rnode(GOUT, 0, 2, 27) },
  { pnode(CTRL, 0, 2, DATA, -1, 14), rnode(GOUT, 0, 2, 28) },
  { pnode(CTRL, 0, 2, DATA, -1, 15), rnode(GOUT, 0, 2, 29) },
  { pnode(CTRL, 0, 2, DATA0OE, -1, -1), rnode(GOUT, 0, 1, 6) },
  { pnode(CTRL, 0, 2, DATA0OUT, -1, -1), rnode(GOUT, 0, 1, 14) },
  { pnode(CTRL, 0, 2, DATA1OE, -1, -1), rnode(GOUT, 0, 1, 7) },
  { pnode(CTRL, 0, 2, DATA1OUT, -1, -1), rnode(GOUT, 0, 1, 15) },
  { pnode(CTRL, 0, 2, DATA2OE, -1, -1), rnode(GOUT, 0, 1, 8) },
  { pnode(CTRL, 0, 2, DATA2OUT, -1, -1), rnode(GOUT, 0, 1, 16) },
  { pnode(CTRL, 0, 2, DATA3OE, -1, -1), rnode(GOUT, 0, 1, 9) },
  { pnode(CTRL, 0, 2, DATA3OUT, -1, -1), rnode(GOUT, 0, 1, 17) },
  { pnode(CTRL, 0, 2, DFT_IN, -1, 0), rnode(GOUT, 0, 1, 23) },
  { pnode(CTRL, 0, 2, DFT_IN, -1, 1), rnode(GOUT, 0, 1, 24) },
  { pnode(CTRL, 0, 2, DFT_IN, -1, 2), rnode(GOUT, 0, 1, 25) },
  { pnode(CTRL, 0, 2, DFT_IN, -1, 3), rnode(GOUT, 0, 1, 26) },
  { pnode(CTRL, 0, 2, DFT_IN, -1, 4), rnode(GOUT, 0, 1, 27) },
  { pnode(CTRL, 0, 2, DFT_IN, -1, 5), rnode(GOUT, 0, 1, 28) },
  { pnode(CTRL, 0, 2, NTDOPINENA, -1, -1), rnode(GOUT, 0, 1, 34) },
  { pnode(CTRL, 0, 2, OSC_ENA, -1, -1), rnode(GOUT, 0, 2, 10) },
  { pnode(CTRL, 0, 2, OUTPUT_ENABLE, -1, -1), rnode(GOUT, 0, 2, 4) },
  { pnode(CTRL, 0, 2, PRREQUEST, -1, -1), rnode(GOUT, 0, 2, 31) },
  { pnode(CTRL, 0, 2, REGIN, -1, -1), rnode(GOUT, 0, 2, 35) },
  { pnode(CTRL, 0, 2, RSTTIMER, -1, -1), rnode(GOUT, 0, 2, 39) },
  { pnode(CTRL, 0, 2, SCE_IN, -1, -1), rnode(GOUT, 0, 2, 2) },
  { pnode(CTRL, 0, 2, SHIFTNLD_CHIPID, -1, -1), rnode(GOUT, 0, 2, 0) },
  { pnode(CTRL, 0, 2, SHIFTNLD_CRC, -1, -1), rnode(GOUT, 0, 2, 6) },
  { pnode(CTRL, 0, 2, SHIFTNLD_OPREG, -1, -1), rnode(GOUT, 0, 1, 0) },
  { pnode(CTRL, 0, 2, SHIFTNLD_RU, -1, -1), rnode(GOUT, 0, 2, 41) },
  { pnode(CTRL, 0, 2, TCKCORE, -1, -1), rnode(DCMUX, 0, 2, 15) },
  { pnode(CTRL, 0, 2, TDICORE, -1, -1), rnode(GOUT, 0, 2, 43) },
  { pnode(CTRL, 0, 2, TDOUTAP, -1, -1), rnode(GOUT, 0, 2, 45) },
  { pnode(CTRL, 0, 2, TMSCORE, -1, -1), rnode(GOUT, 0, 2, 47) },
  { pnode(CTRL, 0, 2, CLKDRUSER, -1, -1), rnode(GIN, 0, 2, 2) },
  { pnode(CTRL, 0, 2, CLK_OUT, -1, -1), rnode(GIN, 0, 1, 36) },
  { pnode(CTRL, 0, 2, CLK_OUT1, -1, -1), rnode(GIN, 0, 1, 38) },
  { pnode(CTRL, 0, 2, CRCERROR, -1, -1), rnode(GIN, 0, 2, 9) },
  { pnode(CTRL, 0, 2, DATA0IN, -1, -1), rnode(GIN, 0, 2, 4) },
  { pnode(CTRL, 0, 2, DATA1IN, -1, -1), rnode(GIN, 0, 2, 5) },
  { pnode(CTRL, 0, 2, DATA2IN, -1, -1), rnode(GIN, 0, 2, 6) },
  { pnode(CTRL, 0, 2, DATA3IN, -1, -1), rnode(GIN, 0, 2, 7) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 0), rnode(GIN, 0, 1, 6) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 1), rnode(GIN, 0, 1, 7) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 2), rnode(GIN, 0, 1, 8) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 3), rnode(GIN, 0, 1, 9) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 4), rnode(GIN, 0, 1, 10) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 5), rnode(GIN, 0, 1, 11) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 6), rnode(GIN, 0, 1, 12) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 7), rnode(GIN, 0, 1, 13) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 8), rnode(GIN, 0, 1, 14) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 9), rnode(GIN, 0, 1, 15) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 10), rnode(GIN, 0, 1, 16) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 11), rnode(GIN, 0, 1, 17) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 12), rnode(GIN, 0, 1, 18) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 13), rnode(GIN, 0, 1, 19) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 14), rnode(GIN, 0, 1, 20) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 15), rnode(GIN, 0, 1, 21) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 16), rnode(GIN, 0, 1, 22) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 17), rnode(GIN, 0, 1, 23) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 18), rnode(GIN, 0, 1, 24) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 19), rnode(GIN, 0, 1, 25) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 20), rnode(GIN, 0, 1, 26) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 21), rnode(GIN, 0, 1, 27) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 22), rnode(GIN, 0, 1, 28) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 23), rnode(GIN, 0, 1, 29) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 24), rnode(GIN, 0, 1, 30) },
  { pnode(CTRL, 0, 2, DONE, -1, -1), rnode(GIN, 0, 2, 17) },
  { pnode(CTRL, 0, 2, END_OF_ED_FULLCHIP, -1, -1), rnode(GIN, 0, 2, 13) },
  { pnode(CTRL, 0, 2, EXTERNALREQUEST, -1, -1), rnode(GIN, 0, 2, 21) },
  { pnode(CTRL, 0, 2, NCE_OUT, -1, -1), rnode(GIN, 0, 2, 15) },
  { pnode(CTRL, 0, 2, OERROR, -1, -1), rnode(GIN, 0, 2, 19) },
  { pnode(CTRL, 0, 2, READY, -1, -1), rnode(GIN, 0, 2, 23) },
  { pnode(CTRL, 0, 2, REG_OUT_CHIPID, -1, -1), rnode(GIN, 0, 2, 0) },
  { pnode(CTRL, 0, 2, REG_OUT_CRC, -1, -1), rnode(GIN, 0, 2, 11) },
  { pnode(CTRL, 0, 2, REG_OUT_OPREG, -1, -1), rnode(GIN, 0, 1, 0) },
  { pnode(CTRL, 0, 2, REG_OUT_RU, -1, -1), rnode(GIN, 0, 2, 27) },
  { pnode(CTRL, 0, 2, RUNIDLEUSER, -1, -1), rnode(GIN, 0, 2, 25) },
  { pnode(CTRL, 0, 2, SHIFTUSER, -1, -1), rnode(GIN, 0, 2, 33) },
  { pnode(CTRL, 0, 2, TCKUTAP, -1, -1), rnode(GIN, 0, 2, 35) },
  { pnode(CTRL, 0, 2, TDIUTAP, -1, -1), rnode(GIN, 0, 2, 37) },
  { pnode(CTRL, 0, 2, TDOCORE, -1, -1), rnode(GIN, 0, 2, 39) },
  { pnode(CTRL, 0, 2, TMSUTAP, -1, -1), rnode(GIN, 0, 2, 41) },
  { pnode(CTRL, 0, 2, UPDATEUSER, -1, -1), rnode(GIN, 0, 2, 43) },
  { pnode(CTRL, 0, 2, USR1USER, -1, -1), rnode(GIN, 0, 2, 45) },
  { pnode(HPS_BOOT, 52, 74, BOOT_FROM_FPGA_ON_FAILURE, -1, -1), rnode(GOUT, 51, 77, 2) },
  { pnode(HPS_BOOT, 52, 74, BOOT_FROM_FPGA_READY, -1, -1), rnode(GOUT, 51, 77, 1) },
  { pnode(HPS_BOOT, 52, 74, BSEL, -1, 0), rnode(GOUT, 51, 76, 10) },
  { pnode(HPS_BOOT, 52, 74, BSEL, -1, 1), rnode(GOUT, 51, 76, 9) },
  { pnode(HPS_BOOT, 52, 74, BSEL, -1, 2), rnode(GOUT, 51, 76, 8) },
  { pnode(HPS_BOOT, 52, 74, BSEL_EN, -1, -1), rnode(GOUT, 51, 76, 7) },
  { pnode(HPS_BOOT, 52, 74, CSEL, -1, 0), rnode(GOUT, 51, 76, 6) },
  { pnode(HPS_BOOT, 52, 74, CSEL, -1, 1), rnode(GOUT, 51, 76, 5) },
  { pnode(HPS_BOOT, 52, 74, CSEL_EN, -1, -1), rnode(GOUT, 51, 76, 4) },
  { pnode(HPS_CLOCKS_RESETS, 52, 78, F2H_COLD_RST_REQ_N, -1, -1), rnode(GOUT, 51, 77, 31) },
  { pnode(HPS_CLOCKS_RESETS, 52, 78, F2H_DBG_RST_REQ_N, -1, -1), rnode(GOUT, 51, 77, 30) },
  { pnode(HPS_CLOCKS_RESETS, 52, 78, F2H_PENDING_RST_ACK, -1, -1), rnode(GOUT, 51, 77, 29) },
  { pnode(HPS_CLOCKS_RESETS, 52, 78, F2H_PERIPH_REF_CLK, -1, -1), rnode(DCMUX, 51, 80, 2) },
  { pnode(HPS_CLOCKS_RESETS, 52, 78, F2H_SDRAM_REF_CLK, -1, -1), rnode(DCMUX, 51, 80, 1) },
  { pnode(HPS_CLOCKS_RESETS, 52, 78, F2H_WARM_RST_REQ_N, -1, -1), rnode(GOUT, 51, 77, 28) },
  { pnode(HPS_CLOCKS_RESETS, 52, 78, PTP_REF_CLK, -1, -1), rnode(DCMUX, 51, 66, 2) },
  { pnode(HPS_CLOCKS_RESETS, 52, 78, H2F_PENDING_RST_REQ_N, -1, -1), rnode(GIN, 51, 79, 21) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, CLK, -1, -1), rnode(DCMUX, 51, 48, 2) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, CLK_EN, -1, -1), rnode(GOUT, 51, 41, 46) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_IN, -1, 0), rnode(GOUT, 51, 41, 45) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_IN, -1, 1), rnode(GOUT, 51, 41, 44) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_IN, -1, 2), rnode(GOUT, 51, 41, 43) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_IN, -1, 3), rnode(GOUT, 51, 41, 42) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_IN, -1, 4), rnode(GOUT, 51, 41, 41) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_IN, -1, 5), rnode(GOUT, 51, 41, 40) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_IN, -1, 6), rnode(GOUT, 51, 41, 39) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_IN, -1, 7), rnode(GOUT, 51, 41, 38) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_OUTACK, -1, 0), rnode(GOUT, 51, 41, 37) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_OUTACK, -1, 1), rnode(GOUT, 51, 41, 36) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_OUTACK, -1, 2), rnode(GOUT, 51, 41, 35) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_OUTACK, -1, 3), rnode(GOUT, 51, 41, 34) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_OUTACK, -1, 4), rnode(GOUT, 51, 41, 33) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_OUTACK, -1, 5), rnode(GOUT, 51, 41, 32) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_OUTACK, -1, 6), rnode(GOUT, 51, 41, 31) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_OUTACK, -1, 7), rnode(GOUT, 51, 41, 30) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, ASICCTL, -1, 0), rnode(GIN, 51, 41, 2) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, ASICCTL, -1, 1), rnode(GIN, 51, 41, 1) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, ASICCTL, -1, 2), rnode(GIN, 51, 41, 0) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, ASICCTL, -1, 3), rnode(GIN, 51, 40, 53) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, ASICCTL, -1, 4), rnode(GIN, 51, 40, 52) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, ASICCTL, -1, 5), rnode(GIN, 51, 40, 51) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, ASICCTL, -1, 6), rnode(GIN, 51, 40, 50) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, ASICCTL, -1, 7), rnode(GIN, 51, 40, 49) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_INACK, -1, 0), rnode(GIN, 51, 40, 48) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_INACK, -1, 1), rnode(GIN, 51, 40, 47) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_INACK, -1, 2), rnode(GIN, 51, 40, 46) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_INACK, -1, 3), rnode(GIN, 51, 40, 45) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_INACK, -1, 4), rnode(GIN, 51, 40, 44) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_INACK, -1, 5), rnode(GIN, 51, 40, 43) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_INACK, -1, 6), rnode(GIN, 51, 40, 42) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_INACK, -1, 7), rnode(GIN, 51, 40, 41) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_OUT, -1, 0), rnode(GIN, 51, 40, 40) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_OUT, -1, 1), rnode(GIN, 51, 40, 39) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_OUT, -1, 2), rnode(GIN, 51, 40, 38) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_OUT, -1, 3), rnode(GIN, 51, 40, 37) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_OUT, -1, 4), rnode(GIN, 51, 40, 36) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_OUT, -1, 5), rnode(GIN, 51, 40, 35) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_OUT, -1, 6), rnode(GIN, 51, 40, 34) },
  { pnode(HPS_CROSS_TRIGGER, 52, 41, TRIG_OUT, -1, 7), rnode(GIN, 51, 40, 33) },
  { pnode(HPS_DBG_APB, 52, 80, DBG_APB_DISABLE, -1, -1), rnode(GOUT, 51, 41, 1) },
  { pnode(HPS_DBG_APB, 52, 80, P_CLK, -1, -1), rnode(DCMUX, 51, 48, 1) },
  { pnode(HPS_DBG_APB, 52, 80, P_CLK_EN, -1, -1), rnode(GOUT, 51, 41, 0) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 0), rnode(GOUT, 51, 40, 51) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 1), rnode(GOUT, 51, 40, 40) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 2), rnode(GOUT, 51, 40, 29) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 3), rnode(GOUT, 51, 40, 26) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 4), rnode(GOUT, 51, 40, 25) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 5), rnode(GOUT, 51, 40, 24) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 6), rnode(GOUT, 51, 40, 23) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 7), rnode(GOUT, 51, 40, 22) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 8), rnode(GOUT, 51, 40, 21) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 9), rnode(GOUT, 51, 40, 20) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 10), rnode(GOUT, 51, 40, 50) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 11), rnode(GOUT, 51, 40, 49) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 12), rnode(GOUT, 51, 40, 48) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 13), rnode(GOUT, 51, 40, 47) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 14), rnode(GOUT, 51, 40, 46) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 15), rnode(GOUT, 51, 40, 45) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 16), rnode(GOUT, 51, 40, 44) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 17), rnode(GOUT, 51, 40, 43) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 18), rnode(GOUT, 51, 40, 42) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 19), rnode(GOUT, 51, 40, 41) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 20), rnode(GOUT, 51, 40, 39) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 21), rnode(GOUT, 51, 40, 38) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 22), rnode(GOUT, 51, 40, 37) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 23), rnode(GOUT, 51, 40, 36) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 24), rnode(GOUT, 51, 40, 35) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 25), rnode(GOUT, 51, 40, 34) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 26), rnode(GOUT, 51, 40, 33) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 27), rnode(GOUT, 51, 40, 32) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 28), rnode(GOUT, 51, 40, 31) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 29), rnode(GOUT, 51, 40, 30) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 30), rnode(GOUT, 51, 40, 28) },
  { pnode(HPS_DBG_APB, 52, 80, P_RDATA, -1, 31), rnode(GOUT, 51, 40, 27) },
  { pnode(HPS_DBG_APB, 52, 80, P_READY, -1, -1), rnode(GOUT, 51, 40, 19) },
  { pnode(HPS_DBG_APB, 52, 80, P_SLV_ERR, -1, -1), rnode(GOUT, 51, 40, 18) },
  { pnode(HPS_DBG_APB, 52, 80, P_ADDR, -1, 0), rnode(GIN, 51, 40, 21) },
  { pnode(HPS_DBG_APB, 52, 80, P_ADDR, -1, 1), rnode(GIN, 51, 40, 20) },
  { pnode(HPS_DBG_APB, 52, 80, P_ADDR, -1, 2), rnode(GIN, 51, 40, 19) },
  { pnode(HPS_DBG_APB, 52, 80, P_ADDR, -1, 3), rnode(GIN, 51, 40, 18) },
  { pnode(HPS_DBG_APB, 52, 80, P_ADDR, -1, 4), rnode(GIN, 51, 40, 17) },
  { pnode(HPS_DBG_APB, 52, 80, P_ADDR, -1, 5), rnode(GIN, 51, 40, 16) },
  { pnode(HPS_DBG_APB, 52, 80, P_ADDR, -1, 6), rnode(GIN, 51, 40, 15) },
  { pnode(HPS_DBG_APB, 52, 80, P_ADDR, -1, 7), rnode(GIN, 51, 40, 14) },
  { pnode(HPS_DBG_APB, 52, 80, P_ADDR, -1, 8), rnode(GIN, 51, 40, 31) },
  { pnode(HPS_DBG_APB, 52, 80, P_ADDR, -1, 9), rnode(GIN, 51, 40, 30) },
  { pnode(HPS_DBG_APB, 52, 80, P_ADDR, -1, 10), rnode(GIN, 51, 40, 29) },
  { pnode(HPS_DBG_APB, 52, 80, P_ADDR, -1, 11), rnode(GIN, 51, 40, 28) },
  { pnode(HPS_DBG_APB, 52, 80, P_ADDR, -1, 12), rnode(GIN, 51, 40, 27) },
  { pnode(HPS_DBG_APB, 52, 80, P_ADDR, -1, 13), rnode(GIN, 51, 40, 26) },
  { pnode(HPS_DBG_APB, 52, 80, P_ADDR, -1, 14), rnode(GIN, 51, 40, 25) },
  { pnode(HPS_DBG_APB, 52, 80, P_ADDR, -1, 15), rnode(GIN, 51, 40, 24) },
  { pnode(HPS_DBG_APB, 52, 80, P_ADDR, -1, 16), rnode(GIN, 51, 40, 23) },
  { pnode(HPS_DBG_APB, 52, 80, P_ADDR, -1, 17), rnode(GIN, 51, 40, 22) },
  { pnode(HPS_DBG_APB, 52, 80, P_ADDR_31, -1, -1), rnode(GIN, 51, 40, 32) },
  { pnode(HPS_DBG_APB, 52, 80, P_ENABLE, -1, -1), rnode(GIN, 51, 40, 13) },
  { pnode(HPS_DBG_APB, 52, 80, P_RESET_N, -1, -1), rnode(GIN, 51, 40, 12) },
  { pnode(HPS_DBG_APB, 52, 80, P_SEL, -1, -1), rnode(GIN, 51, 40, 11) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 0), rnode(GIN, 51, 40, 10) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 1), rnode(GIN, 51, 39, 53) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 2), rnode(GIN, 51, 39, 42) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 3), rnode(GIN, 51, 39, 39) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 4), rnode(GIN, 51, 39, 38) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 5), rnode(GIN, 51, 39, 37) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 6), rnode(GIN, 51, 39, 36) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 7), rnode(GIN, 51, 39, 35) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 8), rnode(GIN, 51, 39, 34) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 9), rnode(GIN, 51, 39, 33) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 10), rnode(GIN, 51, 40, 9) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 11), rnode(GIN, 51, 40, 8) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 12), rnode(GIN, 51, 40, 7) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 13), rnode(GIN, 51, 40, 6) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 14), rnode(GIN, 51, 40, 5) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 15), rnode(GIN, 51, 40, 4) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 16), rnode(GIN, 51, 40, 3) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 17), rnode(GIN, 51, 40, 2) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 18), rnode(GIN, 51, 40, 1) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 19), rnode(GIN, 51, 40, 0) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 20), rnode(GIN, 51, 39, 52) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 21), rnode(GIN, 51, 39, 51) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 22), rnode(GIN, 51, 39, 50) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 23), rnode(GIN, 51, 39, 49) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 24), rnode(GIN, 51, 39, 48) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 25), rnode(GIN, 51, 39, 47) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 26), rnode(GIN, 51, 39, 46) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 27), rnode(GIN, 51, 39, 45) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 28), rnode(GIN, 51, 39, 44) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 29), rnode(GIN, 51, 39, 43) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 30), rnode(GIN, 51, 39, 41) },
  { pnode(HPS_DBG_APB, 52, 80, P_WDATA, -1, 31), rnode(GIN, 51, 39, 40) },
  { pnode(HPS_DBG_APB, 52, 80, P_WRITE, -1, -1), rnode(GIN, 51, 39, 32) },
  { pnode(HPS_DMA, 52, 69, REQ, 0, -1), rnode(GOUT, 51, 75, 40) },
  { pnode(HPS_DMA, 52, 69, SINGLE, 0, -1), rnode(GOUT, 51, 75, 39) },
  { pnode(HPS_DMA, 52, 69, REQ, 1, -1), rnode(GOUT, 51, 75, 38) },
  { pnode(HPS_DMA, 52, 69, SINGLE, 1, -1), rnode(GOUT, 51, 75, 37) },
  { pnode(HPS_DMA, 52, 69, REQ, 2, -1), rnode(GOUT, 51, 75, 36) },
  { pnode(HPS_DMA, 52, 69, SINGLE, 2, -1), rnode(GOUT, 51, 75, 35) },
  { pnode(HPS_DMA, 52, 69, REQ, 3, -1), rnode(GOUT, 51, 75, 34) },
  { pnode(HPS_DMA, 52, 69, SINGLE, 3, -1), rnode(GOUT, 51, 75, 33) },
  { pnode(HPS_DMA, 52, 69, REQ, 4, -1), rnode(GOUT, 51, 75, 32) },
  { pnode(HPS_DMA, 52, 69, SINGLE, 4, -1), rnode(GOUT, 51, 75, 31) },
  { pnode(HPS_DMA, 52, 69, REQ, 5, -1), rnode(GOUT, 51, 75, 30) },
  { pnode(HPS_DMA, 52, 69, SINGLE, 5, -1), rnode(GOUT, 51, 75, 29) },
  { pnode(HPS_DMA, 52, 69, REQ, 6, -1), rnode(GOUT, 51, 75, 28) },
  { pnode(HPS_DMA, 52, 69, SINGLE, 6, -1), rnode(GOUT, 51, 75, 27) },
  { pnode(HPS_DMA, 52, 69, REQ, 7, -1), rnode(GOUT, 51, 75, 26) },
  { pnode(HPS_DMA, 52, 69, SINGLE, 7, -1), rnode(GOUT, 51, 75, 25) },
  { pnode(HPS_DMA, 52, 69, ACK, 0, -1), rnode(GIN, 51, 75, 32) },
  { pnode(HPS_DMA, 52, 69, ACK, 1, -1), rnode(GIN, 51, 75, 31) },
  { pnode(HPS_DMA, 52, 69, ACK, 2, -1), rnode(GIN, 51, 75, 30) },
  { pnode(HPS_DMA, 52, 69, ACK, 3, -1), rnode(GIN, 51, 75, 29) },
  { pnode(HPS_DMA, 52, 69, ACK, 4, -1), rnode(GIN, 51, 75, 28) },
  { pnode(HPS_DMA, 52, 69, ACK, 5, -1), rnode(GIN, 51, 75, 27) },
  { pnode(HPS_DMA, 52, 69, ACK, 6, -1), rnode(GIN, 51, 75, 26) },
  { pnode(HPS_DMA, 52, 69, ACK, 7, -1), rnode(GIN, 51, 75, 25) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 0), rnode(GOUT, 51, 48, 36) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 1), rnode(GOUT, 51, 48, 25) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 2), rnode(GOUT, 51, 48, 14) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 3), rnode(GOUT, 51, 48, 11) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 4), rnode(GOUT, 51, 48, 10) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 5), rnode(GOUT, 51, 48, 9) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 6), rnode(GOUT, 51, 48, 8) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 7), rnode(GOUT, 51, 48, 7) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 8), rnode(GOUT, 51, 48, 6) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 9), rnode(GOUT, 51, 48, 5) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 10), rnode(GOUT, 51, 48, 35) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 11), rnode(GOUT, 51, 48, 34) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 12), rnode(GOUT, 51, 48, 33) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 13), rnode(GOUT, 51, 48, 32) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 14), rnode(GOUT, 51, 48, 31) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 15), rnode(GOUT, 51, 48, 30) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 16), rnode(GOUT, 51, 48, 29) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 17), rnode(GOUT, 51, 48, 28) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 18), rnode(GOUT, 51, 48, 27) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 19), rnode(GOUT, 51, 48, 26) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 20), rnode(GOUT, 51, 48, 24) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 21), rnode(GOUT, 51, 48, 23) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 22), rnode(GOUT, 51, 48, 22) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 23), rnode(GOUT, 51, 48, 21) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 24), rnode(GOUT, 51, 48, 20) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 25), rnode(GOUT, 51, 48, 19) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 26), rnode(GOUT, 51, 48, 18) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 27), rnode(GOUT, 51, 48, 17) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 28), rnode(GOUT, 51, 48, 16) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 29), rnode(GOUT, 51, 48, 15) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 30), rnode(GOUT, 51, 48, 13) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARADDR, -1, 31), rnode(GOUT, 51, 48, 12) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARBURST, -1, 0), rnode(GOUT, 51, 48, 4) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARBURST, -1, 1), rnode(GOUT, 51, 48, 3) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARCACHE, -1, 0), rnode(GOUT, 51, 48, 2) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARCACHE, -1, 1), rnode(GOUT, 51, 48, 1) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARCACHE, -1, 2), rnode(GOUT, 51, 48, 0) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARCACHE, -1, 3), rnode(GOUT, 51, 47, 51) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARID, -1, 0), rnode(GOUT, 51, 47, 50) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARID, -1, 1), rnode(GOUT, 51, 47, 49) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARID, -1, 2), rnode(GOUT, 51, 47, 48) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARID, -1, 3), rnode(GOUT, 51, 47, 47) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARID, -1, 4), rnode(GOUT, 51, 47, 46) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARID, -1, 5), rnode(GOUT, 51, 47, 45) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARID, -1, 6), rnode(GOUT, 51, 47, 44) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARID, -1, 7), rnode(GOUT, 51, 47, 43) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARLEN, -1, 0), rnode(GOUT, 51, 47, 42) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARLEN, -1, 1), rnode(GOUT, 51, 47, 41) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARLEN, -1, 2), rnode(GOUT, 51, 47, 40) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARLEN, -1, 3), rnode(GOUT, 51, 47, 39) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARLOCK, -1, 0), rnode(GOUT, 51, 47, 38) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARLOCK, -1, 1), rnode(GOUT, 51, 47, 37) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARPROT, -1, 0), rnode(GOUT, 51, 47, 36) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARPROT, -1, 1), rnode(GOUT, 51, 47, 35) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARPROT, -1, 2), rnode(GOUT, 51, 47, 34) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARSIZE, -1, 0), rnode(GOUT, 51, 47, 33) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARSIZE, -1, 1), rnode(GOUT, 51, 47, 32) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARSIZE, -1, 2), rnode(GOUT, 51, 47, 31) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARUSER, -1, 0), rnode(GOUT, 51, 47, 30) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARUSER, -1, 1), rnode(GOUT, 51, 47, 29) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARUSER, -1, 2), rnode(GOUT, 51, 47, 28) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARUSER, -1, 3), rnode(GOUT, 51, 47, 27) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARUSER, -1, 4), rnode(GOUT, 51, 47, 26) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARVALID, -1, -1), rnode(GOUT, 51, 47, 25) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 0), rnode(GOUT, 51, 47, 24) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 1), rnode(GOUT, 51, 47, 13) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 2), rnode(GOUT, 51, 47, 2) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 3), rnode(GOUT, 51, 46, 51) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 4), rnode(GOUT, 51, 46, 50) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 5), rnode(GOUT, 51, 46, 49) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 6), rnode(GOUT, 51, 46, 48) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 7), rnode(GOUT, 51, 46, 47) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 8), rnode(GOUT, 51, 46, 46) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 9), rnode(GOUT, 51, 46, 45) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 10), rnode(GOUT, 51, 47, 23) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 11), rnode(GOUT, 51, 47, 22) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 12), rnode(GOUT, 51, 47, 21) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 13), rnode(GOUT, 51, 47, 20) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 14), rnode(GOUT, 51, 47, 19) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 15), rnode(GOUT, 51, 47, 18) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 16), rnode(GOUT, 51, 47, 17) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 17), rnode(GOUT, 51, 47, 16) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 18), rnode(GOUT, 51, 47, 15) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 19), rnode(GOUT, 51, 47, 14) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 20), rnode(GOUT, 51, 47, 12) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 21), rnode(GOUT, 51, 47, 11) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 22), rnode(GOUT, 51, 47, 10) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 23), rnode(GOUT, 51, 47, 9) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 24), rnode(GOUT, 51, 47, 8) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 25), rnode(GOUT, 51, 47, 7) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 26), rnode(GOUT, 51, 47, 6) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 27), rnode(GOUT, 51, 47, 5) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 28), rnode(GOUT, 51, 47, 4) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 29), rnode(GOUT, 51, 47, 3) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 30), rnode(GOUT, 51, 47, 1) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWADDR, -1, 31), rnode(GOUT, 51, 47, 0) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWBURST, -1, 0), rnode(GOUT, 51, 46, 44) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWBURST, -1, 1), rnode(GOUT, 51, 46, 43) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWCACHE, -1, 0), rnode(GOUT, 51, 46, 42) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWCACHE, -1, 1), rnode(GOUT, 51, 46, 41) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWCACHE, -1, 2), rnode(GOUT, 51, 46, 40) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWCACHE, -1, 3), rnode(GOUT, 51, 46, 39) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWID, -1, 0), rnode(GOUT, 51, 46, 38) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWID, -1, 1), rnode(GOUT, 51, 46, 37) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWID, -1, 2), rnode(GOUT, 51, 46, 36) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWID, -1, 3), rnode(GOUT, 51, 46, 35) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWID, -1, 4), rnode(GOUT, 51, 46, 34) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWID, -1, 5), rnode(GOUT, 51, 46, 33) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWID, -1, 6), rnode(GOUT, 51, 46, 32) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWID, -1, 7), rnode(GOUT, 51, 46, 31) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWLEN, -1, 0), rnode(GOUT, 51, 46, 30) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWLEN, -1, 1), rnode(GOUT, 51, 46, 29) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWLEN, -1, 2), rnode(GOUT, 51, 46, 28) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWLEN, -1, 3), rnode(GOUT, 51, 46, 27) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWLOCK, -1, 0), rnode(GOUT, 51, 46, 26) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWLOCK, -1, 1), rnode(GOUT, 51, 46, 25) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWPROT, -1, 0), rnode(GOUT, 51, 46, 24) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWPROT, -1, 1), rnode(GOUT, 51, 46, 23) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWPROT, -1, 2), rnode(GOUT, 51, 46, 22) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWSIZE, -1, 0), rnode(GOUT, 51, 46, 21) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWSIZE, -1, 1), rnode(GOUT, 51, 46, 20) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWSIZE, -1, 2), rnode(GOUT, 51, 46, 19) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWUSER, -1, 0), rnode(GOUT, 51, 46, 18) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWUSER, -1, 1), rnode(GOUT, 51, 46, 17) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWUSER, -1, 2), rnode(GOUT, 51, 46, 16) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWUSER, -1, 3), rnode(GOUT, 51, 46, 15) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWUSER, -1, 4), rnode(GOUT, 51, 46, 14) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWVALID, -1, -1), rnode(GOUT, 51, 46, 13) },
  { pnode(HPS_FPGA2HPS, 52, 45, BREADY, -1, -1), rnode(GOUT, 51, 46, 12) },
  { pnode(HPS_FPGA2HPS, 52, 45, CLK, -1, -1), rnode(DCMUX, 51, 47, 2) },
  { pnode(HPS_FPGA2HPS, 52, 45, PORT_SIZE_CONFIG, -1, 0), rnode(GOUT, 51, 43, 12) },
  { pnode(HPS_FPGA2HPS, 52, 45, PORT_SIZE_CONFIG, -1, 1), rnode(GOUT, 51, 43, 11) },
  { pnode(HPS_FPGA2HPS, 52, 45, RREADY, -1, -1), rnode(GOUT, 51, 46, 11) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 0), rnode(GOUT, 51, 46, 10) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 1), rnode(GOUT, 51, 45, 23) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 2), rnode(GOUT, 51, 45, 12) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 3), rnode(GOUT, 51, 45, 1) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 4), rnode(GOUT, 51, 44, 42) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 5), rnode(GOUT, 51, 44, 31) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 6), rnode(GOUT, 51, 44, 20) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 7), rnode(GOUT, 51, 44, 9) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 8), rnode(GOUT, 51, 43, 50) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 9), rnode(GOUT, 51, 43, 39) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 10), rnode(GOUT, 51, 45, 51) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 11), rnode(GOUT, 51, 45, 40) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 12), rnode(GOUT, 51, 45, 31) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 13), rnode(GOUT, 51, 45, 30) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 14), rnode(GOUT, 51, 45, 29) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 15), rnode(GOUT, 51, 45, 28) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 16), rnode(GOUT, 51, 45, 27) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 17), rnode(GOUT, 51, 45, 26) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 18), rnode(GOUT, 51, 45, 25) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 19), rnode(GOUT, 51, 45, 24) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 20), rnode(GOUT, 51, 45, 22) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 21), rnode(GOUT, 51, 45, 21) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 22), rnode(GOUT, 51, 45, 20) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 23), rnode(GOUT, 51, 45, 19) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 24), rnode(GOUT, 51, 45, 18) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 25), rnode(GOUT, 51, 45, 17) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 26), rnode(GOUT, 51, 45, 16) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 27), rnode(GOUT, 51, 45, 15) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 28), rnode(GOUT, 51, 45, 14) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 29), rnode(GOUT, 51, 45, 13) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 30), rnode(GOUT, 51, 45, 11) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 31), rnode(GOUT, 51, 45, 10) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 32), rnode(GOUT, 51, 45, 9) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 33), rnode(GOUT, 51, 45, 8) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 34), rnode(GOUT, 51, 45, 7) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 35), rnode(GOUT, 51, 45, 6) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 36), rnode(GOUT, 51, 45, 5) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 37), rnode(GOUT, 51, 45, 4) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 38), rnode(GOUT, 51, 45, 3) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 39), rnode(GOUT, 51, 45, 2) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 40), rnode(GOUT, 51, 45, 0) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 41), rnode(GOUT, 51, 44, 51) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 42), rnode(GOUT, 51, 44, 50) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 43), rnode(GOUT, 51, 44, 49) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 44), rnode(GOUT, 51, 44, 48) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 45), rnode(GOUT, 51, 44, 47) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 46), rnode(GOUT, 51, 44, 46) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 47), rnode(GOUT, 51, 44, 45) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 48), rnode(GOUT, 51, 44, 44) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 49), rnode(GOUT, 51, 44, 43) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 50), rnode(GOUT, 51, 44, 41) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 51), rnode(GOUT, 51, 44, 40) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 52), rnode(GOUT, 51, 44, 39) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 53), rnode(GOUT, 51, 44, 38) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 54), rnode(GOUT, 51, 44, 37) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 55), rnode(GOUT, 51, 44, 36) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 56), rnode(GOUT, 51, 44, 35) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 57), rnode(GOUT, 51, 44, 34) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 58), rnode(GOUT, 51, 44, 33) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 59), rnode(GOUT, 51, 44, 32) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 60), rnode(GOUT, 51, 44, 30) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 61), rnode(GOUT, 51, 44, 29) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 62), rnode(GOUT, 51, 44, 28) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 63), rnode(GOUT, 51, 44, 27) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 64), rnode(GOUT, 51, 44, 26) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 65), rnode(GOUT, 51, 44, 25) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 66), rnode(GOUT, 51, 44, 24) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 67), rnode(GOUT, 51, 44, 23) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 68), rnode(GOUT, 51, 44, 22) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 69), rnode(GOUT, 51, 44, 21) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 70), rnode(GOUT, 51, 44, 19) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 71), rnode(GOUT, 51, 44, 18) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 72), rnode(GOUT, 51, 44, 17) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 73), rnode(GOUT, 51, 44, 16) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 74), rnode(GOUT, 51, 44, 15) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 75), rnode(GOUT, 51, 44, 14) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 76), rnode(GOUT, 51, 44, 13) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 77), rnode(GOUT, 51, 44, 12) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 78), rnode(GOUT, 51, 44, 11) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 79), rnode(GOUT, 51, 44, 10) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 80), rnode(GOUT, 51, 44, 8) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 81), rnode(GOUT, 51, 44, 7) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 82), rnode(GOUT, 51, 44, 6) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 83), rnode(GOUT, 51, 44, 5) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 84), rnode(GOUT, 51, 44, 4) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 85), rnode(GOUT, 51, 44, 3) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 86), rnode(GOUT, 51, 44, 2) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 87), rnode(GOUT, 51, 44, 1) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 88), rnode(GOUT, 51, 44, 0) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 89), rnode(GOUT, 51, 43, 51) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 90), rnode(GOUT, 51, 43, 49) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 91), rnode(GOUT, 51, 43, 48) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 92), rnode(GOUT, 51, 43, 47) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 93), rnode(GOUT, 51, 43, 46) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 94), rnode(GOUT, 51, 43, 45) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 95), rnode(GOUT, 51, 43, 44) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 96), rnode(GOUT, 51, 43, 43) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 97), rnode(GOUT, 51, 43, 42) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 98), rnode(GOUT, 51, 43, 41) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 99), rnode(GOUT, 51, 43, 40) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 100), rnode(GOUT, 51, 46, 9) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 101), rnode(GOUT, 51, 46, 8) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 102), rnode(GOUT, 51, 46, 7) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 103), rnode(GOUT, 51, 46, 6) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 104), rnode(GOUT, 51, 46, 5) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 105), rnode(GOUT, 51, 46, 4) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 106), rnode(GOUT, 51, 46, 3) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 107), rnode(GOUT, 51, 46, 2) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 108), rnode(GOUT, 51, 46, 1) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 109), rnode(GOUT, 51, 46, 0) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 110), rnode(GOUT, 51, 45, 50) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 111), rnode(GOUT, 51, 45, 49) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 112), rnode(GOUT, 51, 45, 48) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 113), rnode(GOUT, 51, 45, 47) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 114), rnode(GOUT, 51, 45, 46) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 115), rnode(GOUT, 51, 45, 45) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 116), rnode(GOUT, 51, 45, 44) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 117), rnode(GOUT, 51, 45, 43) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 118), rnode(GOUT, 51, 45, 42) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 119), rnode(GOUT, 51, 45, 41) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 120), rnode(GOUT, 51, 45, 39) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 121), rnode(GOUT, 51, 45, 38) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 122), rnode(GOUT, 51, 45, 37) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 123), rnode(GOUT, 51, 45, 36) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 124), rnode(GOUT, 51, 45, 35) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 125), rnode(GOUT, 51, 45, 34) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 126), rnode(GOUT, 51, 45, 33) },
  { pnode(HPS_FPGA2HPS, 52, 45, WDATA, -1, 127), rnode(GOUT, 51, 45, 32) },
  { pnode(HPS_FPGA2HPS, 52, 45, WID, -1, 0), rnode(GOUT, 51, 43, 38) },
  { pnode(HPS_FPGA2HPS, 52, 45, WID, -1, 1), rnode(GOUT, 51, 43, 37) },
  { pnode(HPS_FPGA2HPS, 52, 45, WID, -1, 2), rnode(GOUT, 51, 43, 36) },
  { pnode(HPS_FPGA2HPS, 52, 45, WID, -1, 3), rnode(GOUT, 51, 43, 35) },
  { pnode(HPS_FPGA2HPS, 52, 45, WID, -1, 4), rnode(GOUT, 51, 43, 34) },
  { pnode(HPS_FPGA2HPS, 52, 45, WID, -1, 5), rnode(GOUT, 51, 43, 33) },
  { pnode(HPS_FPGA2HPS, 52, 45, WID, -1, 6), rnode(GOUT, 51, 43, 32) },
  { pnode(HPS_FPGA2HPS, 52, 45, WID, -1, 7), rnode(GOUT, 51, 43, 31) },
  { pnode(HPS_FPGA2HPS, 52, 45, WLAST, -1, -1), rnode(GOUT, 51, 43, 30) },
  { pnode(HPS_FPGA2HPS, 52, 45, WSTRB, -1, 0), rnode(GOUT, 51, 43, 29) },
  { pnode(HPS_FPGA2HPS, 52, 45, WSTRB, -1, 1), rnode(GOUT, 51, 43, 22) },
  { pnode(HPS_FPGA2HPS, 52, 45, WSTRB, -1, 2), rnode(GOUT, 51, 43, 21) },
  { pnode(HPS_FPGA2HPS, 52, 45, WSTRB, -1, 3), rnode(GOUT, 51, 43, 20) },
  { pnode(HPS_FPGA2HPS, 52, 45, WSTRB, -1, 4), rnode(GOUT, 51, 43, 19) },
  { pnode(HPS_FPGA2HPS, 52, 45, WSTRB, -1, 5), rnode(GOUT, 51, 43, 18) },
  { pnode(HPS_FPGA2HPS, 52, 45, WSTRB, -1, 6), rnode(GOUT, 51, 43, 17) },
  { pnode(HPS_FPGA2HPS, 52, 45, WSTRB, -1, 7), rnode(GOUT, 51, 43, 16) },
  { pnode(HPS_FPGA2HPS, 52, 45, WSTRB, -1, 8), rnode(GOUT, 51, 43, 15) },
  { pnode(HPS_FPGA2HPS, 52, 45, WSTRB, -1, 9), rnode(GOUT, 51, 43, 14) },
  { pnode(HPS_FPGA2HPS, 52, 45, WSTRB, -1, 10), rnode(GOUT, 51, 43, 28) },
  { pnode(HPS_FPGA2HPS, 52, 45, WSTRB, -1, 11), rnode(GOUT, 51, 43, 27) },
  { pnode(HPS_FPGA2HPS, 52, 45, WSTRB, -1, 12), rnode(GOUT, 51, 43, 26) },
  { pnode(HPS_FPGA2HPS, 52, 45, WSTRB, -1, 13), rnode(GOUT, 51, 43, 25) },
  { pnode(HPS_FPGA2HPS, 52, 45, WSTRB, -1, 14), rnode(GOUT, 51, 43, 24) },
  { pnode(HPS_FPGA2HPS, 52, 45, WSTRB, -1, 15), rnode(GOUT, 51, 43, 23) },
  { pnode(HPS_FPGA2HPS, 52, 45, WVALID, -1, -1), rnode(GOUT, 51, 43, 13) },
  { pnode(HPS_FPGA2HPS, 52, 45, ARREADY, -1, -1), rnode(GIN, 51, 46, 40) },
  { pnode(HPS_FPGA2HPS, 52, 45, AWREADY, -1, -1), rnode(GIN, 51, 46, 39) },
  { pnode(HPS_FPGA2HPS, 52, 45, BID, -1, 0), rnode(GIN, 51, 46, 38) },
  { pnode(HPS_FPGA2HPS, 52, 45, BID, -1, 1), rnode(GIN, 51, 46, 37) },
  { pnode(HPS_FPGA2HPS, 52, 45, BID, -1, 2), rnode(GIN, 51, 46, 36) },
  { pnode(HPS_FPGA2HPS, 52, 45, BID, -1, 3), rnode(GIN, 51, 46, 35) },
  { pnode(HPS_FPGA2HPS, 52, 45, BID, -1, 4), rnode(GIN, 51, 46, 34) },
  { pnode(HPS_FPGA2HPS, 52, 45, BID, -1, 5), rnode(GIN, 51, 46, 33) },
  { pnode(HPS_FPGA2HPS, 52, 45, BID, -1, 6), rnode(GIN, 51, 46, 32) },
  { pnode(HPS_FPGA2HPS, 52, 45, BID, -1, 7), rnode(GIN, 51, 46, 31) },
  { pnode(HPS_FPGA2HPS, 52, 45, BRESP, -1, 0), rnode(GIN, 51, 46, 30) },
  { pnode(HPS_FPGA2HPS, 52, 45, BRESP, -1, 1), rnode(GIN, 51, 46, 29) },
  { pnode(HPS_FPGA2HPS, 52, 45, BVALID, -1, -1), rnode(GIN, 51, 46, 28) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 0), rnode(GIN, 51, 46, 27) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 1), rnode(GIN, 51, 45, 43) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 2), rnode(GIN, 51, 45, 32) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 3), rnode(GIN, 51, 45, 21) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 4), rnode(GIN, 51, 45, 10) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 5), rnode(GIN, 51, 44, 54) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 6), rnode(GIN, 51, 44, 43) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 7), rnode(GIN, 51, 44, 32) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 8), rnode(GIN, 51, 44, 21) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 9), rnode(GIN, 51, 44, 10) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 10), rnode(GIN, 51, 46, 16) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 11), rnode(GIN, 51, 46, 5) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 12), rnode(GIN, 51, 45, 51) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 13), rnode(GIN, 51, 45, 50) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 14), rnode(GIN, 51, 45, 49) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 15), rnode(GIN, 51, 45, 48) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 16), rnode(GIN, 51, 45, 47) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 17), rnode(GIN, 51, 45, 46) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 18), rnode(GIN, 51, 45, 45) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 19), rnode(GIN, 51, 45, 44) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 20), rnode(GIN, 51, 45, 42) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 21), rnode(GIN, 51, 45, 41) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 22), rnode(GIN, 51, 45, 40) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 23), rnode(GIN, 51, 45, 39) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 24), rnode(GIN, 51, 45, 38) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 25), rnode(GIN, 51, 45, 37) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 26), rnode(GIN, 51, 45, 36) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 27), rnode(GIN, 51, 45, 35) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 28), rnode(GIN, 51, 45, 34) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 29), rnode(GIN, 51, 45, 33) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 30), rnode(GIN, 51, 45, 31) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 31), rnode(GIN, 51, 45, 30) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 32), rnode(GIN, 51, 45, 29) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 33), rnode(GIN, 51, 45, 28) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 34), rnode(GIN, 51, 45, 27) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 35), rnode(GIN, 51, 45, 26) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 36), rnode(GIN, 51, 45, 25) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 37), rnode(GIN, 51, 45, 24) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 38), rnode(GIN, 51, 45, 23) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 39), rnode(GIN, 51, 45, 22) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 40), rnode(GIN, 51, 45, 20) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 41), rnode(GIN, 51, 45, 19) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 42), rnode(GIN, 51, 45, 18) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 43), rnode(GIN, 51, 45, 17) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 44), rnode(GIN, 51, 45, 16) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 45), rnode(GIN, 51, 45, 15) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 46), rnode(GIN, 51, 45, 14) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 47), rnode(GIN, 51, 45, 13) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 48), rnode(GIN, 51, 45, 12) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 49), rnode(GIN, 51, 45, 11) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 50), rnode(GIN, 51, 45, 9) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 51), rnode(GIN, 51, 45, 8) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 52), rnode(GIN, 51, 45, 7) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 53), rnode(GIN, 51, 45, 6) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 54), rnode(GIN, 51, 45, 5) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 55), rnode(GIN, 51, 45, 4) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 56), rnode(GIN, 51, 45, 3) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 57), rnode(GIN, 51, 45, 2) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 58), rnode(GIN, 51, 45, 1) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 59), rnode(GIN, 51, 45, 0) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 60), rnode(GIN, 51, 44, 53) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 61), rnode(GIN, 51, 44, 52) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 62), rnode(GIN, 51, 44, 51) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 63), rnode(GIN, 51, 44, 50) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 64), rnode(GIN, 51, 44, 49) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 65), rnode(GIN, 51, 44, 48) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 66), rnode(GIN, 51, 44, 47) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 67), rnode(GIN, 51, 44, 46) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 68), rnode(GIN, 51, 44, 45) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 69), rnode(GIN, 51, 44, 44) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 70), rnode(GIN, 51, 44, 42) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 71), rnode(GIN, 51, 44, 41) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 72), rnode(GIN, 51, 44, 40) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 73), rnode(GIN, 51, 44, 39) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 74), rnode(GIN, 51, 44, 38) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 75), rnode(GIN, 51, 44, 37) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 76), rnode(GIN, 51, 44, 36) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 77), rnode(GIN, 51, 44, 35) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 78), rnode(GIN, 51, 44, 34) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 79), rnode(GIN, 51, 44, 33) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 80), rnode(GIN, 51, 44, 31) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 81), rnode(GIN, 51, 44, 30) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 82), rnode(GIN, 51, 44, 29) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 83), rnode(GIN, 51, 44, 28) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 84), rnode(GIN, 51, 44, 27) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 85), rnode(GIN, 51, 44, 26) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 86), rnode(GIN, 51, 44, 25) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 87), rnode(GIN, 51, 44, 24) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 88), rnode(GIN, 51, 44, 23) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 89), rnode(GIN, 51, 44, 22) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 90), rnode(GIN, 51, 44, 20) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 91), rnode(GIN, 51, 44, 19) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 92), rnode(GIN, 51, 44, 18) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 93), rnode(GIN, 51, 44, 17) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 94), rnode(GIN, 51, 44, 16) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 95), rnode(GIN, 51, 44, 15) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 96), rnode(GIN, 51, 44, 14) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 97), rnode(GIN, 51, 44, 13) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 98), rnode(GIN, 51, 44, 12) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 99), rnode(GIN, 51, 44, 11) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 100), rnode(GIN, 51, 46, 26) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 101), rnode(GIN, 51, 46, 25) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 102), rnode(GIN, 51, 46, 24) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 103), rnode(GIN, 51, 46, 23) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 104), rnode(GIN, 51, 46, 22) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 105), rnode(GIN, 51, 46, 21) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 106), rnode(GIN, 51, 46, 20) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 107), rnode(GIN, 51, 46, 19) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 108), rnode(GIN, 51, 46, 18) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 109), rnode(GIN, 51, 46, 17) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 110), rnode(GIN, 51, 46, 15) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 111), rnode(GIN, 51, 46, 14) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 112), rnode(GIN, 51, 46, 13) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 113), rnode(GIN, 51, 46, 12) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 114), rnode(GIN, 51, 46, 11) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 115), rnode(GIN, 51, 46, 10) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 116), rnode(GIN, 51, 46, 9) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 117), rnode(GIN, 51, 46, 8) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 118), rnode(GIN, 51, 46, 7) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 119), rnode(GIN, 51, 46, 6) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 120), rnode(GIN, 51, 46, 4) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 121), rnode(GIN, 51, 46, 3) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 122), rnode(GIN, 51, 46, 2) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 123), rnode(GIN, 51, 46, 1) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 124), rnode(GIN, 51, 46, 0) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 125), rnode(GIN, 51, 45, 54) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 126), rnode(GIN, 51, 45, 53) },
  { pnode(HPS_FPGA2HPS, 52, 45, RDATA, -1, 127), rnode(GIN, 51, 45, 52) },
  { pnode(HPS_FPGA2HPS, 52, 45, RID, -1, 0), rnode(GIN, 51, 44, 9) },
  { pnode(HPS_FPGA2HPS, 52, 45, RID, -1, 1), rnode(GIN, 51, 44, 8) },
  { pnode(HPS_FPGA2HPS, 52, 45, RID, -1, 2), rnode(GIN, 51, 44, 7) },
  { pnode(HPS_FPGA2HPS, 52, 45, RID, -1, 3), rnode(GIN, 51, 44, 6) },
  { pnode(HPS_FPGA2HPS, 52, 45, RID, -1, 4), rnode(GIN, 51, 44, 5) },
  { pnode(HPS_FPGA2HPS, 52, 45, RID, -1, 5), rnode(GIN, 51, 44, 4) },
  { pnode(HPS_FPGA2HPS, 52, 45, RID, -1, 6), rnode(GIN, 51, 44, 3) },
  { pnode(HPS_FPGA2HPS, 52, 45, RID, -1, 7), rnode(GIN, 51, 44, 2) },
  { pnode(HPS_FPGA2HPS, 52, 45, RLAST, -1, -1), rnode(GIN, 51, 44, 1) },
  { pnode(HPS_FPGA2HPS, 52, 45, RRESP, -1, 0), rnode(GIN, 51, 44, 0) },
  { pnode(HPS_FPGA2HPS, 52, 45, RRESP, -1, 1), rnode(GIN, 51, 43, 53) },
  { pnode(HPS_FPGA2HPS, 52, 45, RVALID, -1, -1), rnode(GIN, 51, 43, 52) },
  { pnode(HPS_FPGA2HPS, 52, 45, WREADY, -1, -1), rnode(GIN, 51, 43, 51) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_AXI_MM_SELECT, -1, 0), rnode(GOUT, 51, 62, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_AXI_MM_SELECT, -1, 1), rnode(GOUT, 51, 62, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_AXI_MM_SELECT, -1, 2), rnode(GOUT, 51, 62, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_AXI_MM_SELECT, -1, 3), rnode(GOUT, 51, 62, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_AXI_MM_SELECT, -1, 4), rnode(GOUT, 51, 62, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_AXI_MM_SELECT, -1, 5), rnode(GOUT, 51, 62, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_RFIFO_MAP, -1, 0), rnode(GOUT, 51, 61, 53) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_RFIFO_MAP, -1, 1), rnode(GOUT, 51, 61, 44) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_RFIFO_MAP, -1, 2), rnode(GOUT, 51, 61, 43) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_RFIFO_MAP, -1, 3), rnode(GOUT, 51, 61, 42) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_RFIFO_MAP, -1, 4), rnode(GOUT, 51, 61, 41) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_RFIFO_MAP, -1, 5), rnode(GOUT, 51, 61, 40) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_RFIFO_MAP, -1, 6), rnode(GOUT, 51, 61, 39) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_RFIFO_MAP, -1, 7), rnode(GOUT, 51, 61, 38) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_RFIFO_MAP, -1, 8), rnode(GOUT, 51, 61, 37) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_RFIFO_MAP, -1, 9), rnode(GOUT, 51, 61, 36) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_RFIFO_MAP, -1, 10), rnode(GOUT, 51, 61, 52) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_RFIFO_MAP, -1, 11), rnode(GOUT, 51, 61, 51) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_RFIFO_MAP, -1, 12), rnode(GOUT, 51, 61, 50) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_RFIFO_MAP, -1, 13), rnode(GOUT, 51, 61, 49) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_RFIFO_MAP, -1, 14), rnode(GOUT, 51, 61, 48) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_RFIFO_MAP, -1, 15), rnode(GOUT, 51, 61, 47) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_RFIFO_MAP, -1, 16), rnode(GOUT, 51, 61, 46) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_RFIFO_MAP, -1, 17), rnode(GOUT, 51, 61, 45) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_TYPE, -1, 0), rnode(GOUT, 51, 61, 35) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_TYPE, -1, 1), rnode(GOUT, 51, 61, 32) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_TYPE, -1, 2), rnode(GOUT, 51, 61, 31) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_TYPE, -1, 3), rnode(GOUT, 51, 61, 30) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_TYPE, -1, 4), rnode(GOUT, 51, 61, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_TYPE, -1, 5), rnode(GOUT, 51, 61, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_TYPE, -1, 6), rnode(GOUT, 51, 61, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_TYPE, -1, 7), rnode(GOUT, 51, 61, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_TYPE, -1, 8), rnode(GOUT, 51, 61, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_TYPE, -1, 9), rnode(GOUT, 51, 61, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_TYPE, -1, 10), rnode(GOUT, 51, 61, 34) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_TYPE, -1, 11), rnode(GOUT, 51, 61, 33) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_WFIFO_MAP, -1, 0), rnode(GOUT, 51, 61, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_WFIFO_MAP, -1, 1), rnode(GOUT, 51, 61, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_WFIFO_MAP, -1, 2), rnode(GOUT, 51, 61, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_WFIFO_MAP, -1, 3), rnode(GOUT, 51, 61, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_WFIFO_MAP, -1, 4), rnode(GOUT, 51, 61, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_WFIFO_MAP, -1, 5), rnode(GOUT, 51, 61, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_WFIFO_MAP, -1, 6), rnode(GOUT, 51, 61, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_WFIFO_MAP, -1, 7), rnode(GOUT, 51, 61, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_WFIFO_MAP, -1, 8), rnode(GOUT, 51, 61, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_WFIFO_MAP, -1, 9), rnode(GOUT, 51, 61, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_WFIFO_MAP, -1, 10), rnode(GOUT, 51, 61, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_WFIFO_MAP, -1, 11), rnode(GOUT, 51, 61, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_WFIFO_MAP, -1, 12), rnode(GOUT, 51, 61, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_WFIFO_MAP, -1, 13), rnode(GOUT, 51, 61, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_WFIFO_MAP, -1, 14), rnode(GOUT, 51, 61, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_WFIFO_MAP, -1, 15), rnode(GOUT, 51, 61, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_WFIFO_MAP, -1, 16), rnode(GOUT, 51, 61, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_CPORT_WFIFO_MAP, -1, 17), rnode(GOUT, 51, 61, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_PORT_WIDTH, -1, 0), rnode(GOUT, 51, 61, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_PORT_WIDTH, -1, 1), rnode(GOUT, 51, 61, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_PORT_WIDTH, -1, 2), rnode(GOUT, 51, 61, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_PORT_WIDTH, -1, 3), rnode(GOUT, 51, 61, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_PORT_WIDTH, -1, 4), rnode(GOUT, 51, 60, 53) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_PORT_WIDTH, -1, 5), rnode(GOUT, 51, 60, 52) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_PORT_WIDTH, -1, 6), rnode(GOUT, 51, 60, 51) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_PORT_WIDTH, -1, 7), rnode(GOUT, 51, 60, 50) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_PORT_WIDTH, -1, 8), rnode(GOUT, 51, 60, 49) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_PORT_WIDTH, -1, 9), rnode(GOUT, 51, 60, 48) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_PORT_WIDTH, -1, 10), rnode(GOUT, 51, 61, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_PORT_WIDTH, -1, 11), rnode(GOUT, 51, 61, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_RFIFO_CPORT_MAP, -1, 0), rnode(GOUT, 51, 60, 47) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_RFIFO_CPORT_MAP, -1, 1), rnode(GOUT, 51, 60, 40) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_RFIFO_CPORT_MAP, -1, 2), rnode(GOUT, 51, 60, 39) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_RFIFO_CPORT_MAP, -1, 3), rnode(GOUT, 51, 60, 38) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_RFIFO_CPORT_MAP, -1, 4), rnode(GOUT, 51, 60, 37) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_RFIFO_CPORT_MAP, -1, 5), rnode(GOUT, 51, 60, 36) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_RFIFO_CPORT_MAP, -1, 6), rnode(GOUT, 51, 60, 35) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_RFIFO_CPORT_MAP, -1, 7), rnode(GOUT, 51, 60, 34) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_RFIFO_CPORT_MAP, -1, 8), rnode(GOUT, 51, 60, 33) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_RFIFO_CPORT_MAP, -1, 9), rnode(GOUT, 51, 60, 32) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_RFIFO_CPORT_MAP, -1, 10), rnode(GOUT, 51, 60, 46) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_RFIFO_CPORT_MAP, -1, 11), rnode(GOUT, 51, 60, 45) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_RFIFO_CPORT_MAP, -1, 12), rnode(GOUT, 51, 60, 44) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_RFIFO_CPORT_MAP, -1, 13), rnode(GOUT, 51, 60, 43) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_RFIFO_CPORT_MAP, -1, 14), rnode(GOUT, 51, 60, 42) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_RFIFO_CPORT_MAP, -1, 15), rnode(GOUT, 51, 60, 41) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_WFIFO_CPORT_MAP, -1, 0), rnode(GOUT, 51, 60, 31) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_WFIFO_CPORT_MAP, -1, 1), rnode(GOUT, 51, 60, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_WFIFO_CPORT_MAP, -1, 2), rnode(GOUT, 51, 60, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_WFIFO_CPORT_MAP, -1, 3), rnode(GOUT, 51, 60, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_WFIFO_CPORT_MAP, -1, 4), rnode(GOUT, 51, 60, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_WFIFO_CPORT_MAP, -1, 5), rnode(GOUT, 51, 60, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_WFIFO_CPORT_MAP, -1, 6), rnode(GOUT, 51, 60, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_WFIFO_CPORT_MAP, -1, 7), rnode(GOUT, 51, 60, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_WFIFO_CPORT_MAP, -1, 8), rnode(GOUT, 51, 60, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_WFIFO_CPORT_MAP, -1, 9), rnode(GOUT, 51, 60, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_WFIFO_CPORT_MAP, -1, 10), rnode(GOUT, 51, 60, 30) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_WFIFO_CPORT_MAP, -1, 11), rnode(GOUT, 51, 60, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_WFIFO_CPORT_MAP, -1, 12), rnode(GOUT, 51, 60, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_WFIFO_CPORT_MAP, -1, 13), rnode(GOUT, 51, 60, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_WFIFO_CPORT_MAP, -1, 14), rnode(GOUT, 51, 60, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CFG_WFIFO_CPORT_MAP, -1, 15), rnode(GOUT, 51, 60, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 0), rnode(GOUT, 51, 60, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 1), rnode(GOUT, 51, 60, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 2), rnode(GOUT, 51, 59, 47) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 3), rnode(GOUT, 51, 59, 36) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 4), rnode(GOUT, 51, 59, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 5), rnode(GOUT, 51, 59, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 6), rnode(GOUT, 51, 59, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 7), rnode(GOUT, 51, 59, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 8), rnode(GOUT, 51, 59, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 9), rnode(GOUT, 51, 59, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 10), rnode(GOUT, 51, 60, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 11), rnode(GOUT, 51, 60, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 12), rnode(GOUT, 51, 60, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 13), rnode(GOUT, 51, 60, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 14), rnode(GOUT, 51, 60, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 15), rnode(GOUT, 51, 60, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 16), rnode(GOUT, 51, 60, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 17), rnode(GOUT, 51, 60, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 18), rnode(GOUT, 51, 60, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 19), rnode(GOUT, 51, 60, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 20), rnode(GOUT, 51, 60, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 21), rnode(GOUT, 51, 60, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 22), rnode(GOUT, 51, 60, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 23), rnode(GOUT, 51, 60, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 24), rnode(GOUT, 51, 59, 53) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 25), rnode(GOUT, 51, 59, 52) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 26), rnode(GOUT, 51, 59, 51) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 27), rnode(GOUT, 51, 59, 50) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 28), rnode(GOUT, 51, 59, 49) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 29), rnode(GOUT, 51, 59, 48) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 30), rnode(GOUT, 51, 59, 46) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 31), rnode(GOUT, 51, 59, 45) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 32), rnode(GOUT, 51, 59, 44) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 33), rnode(GOUT, 51, 59, 43) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 34), rnode(GOUT, 51, 59, 42) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 35), rnode(GOUT, 51, 59, 41) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 36), rnode(GOUT, 51, 59, 40) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 37), rnode(GOUT, 51, 59, 39) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 38), rnode(GOUT, 51, 59, 38) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 39), rnode(GOUT, 51, 59, 37) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 40), rnode(GOUT, 51, 59, 35) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 41), rnode(GOUT, 51, 59, 34) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 42), rnode(GOUT, 51, 59, 33) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 43), rnode(GOUT, 51, 59, 32) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 44), rnode(GOUT, 51, 59, 31) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 45), rnode(GOUT, 51, 59, 30) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 46), rnode(GOUT, 51, 59, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 47), rnode(GOUT, 51, 59, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 48), rnode(GOUT, 51, 59, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 49), rnode(GOUT, 51, 59, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 50), rnode(GOUT, 51, 59, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 51), rnode(GOUT, 51, 59, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 52), rnode(GOUT, 51, 59, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 53), rnode(GOUT, 51, 59, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 54), rnode(GOUT, 51, 59, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 55), rnode(GOUT, 51, 59, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 56), rnode(GOUT, 51, 59, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 57), rnode(GOUT, 51, 59, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 58), rnode(GOUT, 51, 59, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 0, 59), rnode(GOUT, 51, 59, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 0), rnode(GOUT, 51, 59, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 1), rnode(GOUT, 51, 58, 51) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 2), rnode(GOUT, 51, 58, 40) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 3), rnode(GOUT, 51, 58, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 4), rnode(GOUT, 51, 58, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 5), rnode(GOUT, 51, 58, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 6), rnode(GOUT, 51, 58, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 7), rnode(GOUT, 51, 58, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 8), rnode(GOUT, 51, 58, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 9), rnode(GOUT, 51, 58, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 10), rnode(GOUT, 51, 59, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 11), rnode(GOUT, 51, 59, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 12), rnode(GOUT, 51, 59, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 13), rnode(GOUT, 51, 59, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 14), rnode(GOUT, 51, 59, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 15), rnode(GOUT, 51, 59, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 16), rnode(GOUT, 51, 59, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 17), rnode(GOUT, 51, 59, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 18), rnode(GOUT, 51, 58, 53) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 19), rnode(GOUT, 51, 58, 52) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 20), rnode(GOUT, 51, 58, 50) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 21), rnode(GOUT, 51, 58, 49) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 22), rnode(GOUT, 51, 58, 48) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 23), rnode(GOUT, 51, 58, 47) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 24), rnode(GOUT, 51, 58, 46) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 25), rnode(GOUT, 51, 58, 45) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 26), rnode(GOUT, 51, 58, 44) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 27), rnode(GOUT, 51, 58, 43) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 28), rnode(GOUT, 51, 58, 42) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 29), rnode(GOUT, 51, 58, 41) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 30), rnode(GOUT, 51, 58, 39) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 31), rnode(GOUT, 51, 58, 38) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 32), rnode(GOUT, 51, 58, 37) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 33), rnode(GOUT, 51, 58, 36) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 34), rnode(GOUT, 51, 58, 35) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 35), rnode(GOUT, 51, 58, 34) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 36), rnode(GOUT, 51, 58, 33) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 37), rnode(GOUT, 51, 58, 32) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 38), rnode(GOUT, 51, 58, 31) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 39), rnode(GOUT, 51, 58, 30) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 40), rnode(GOUT, 51, 58, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 41), rnode(GOUT, 51, 58, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 42), rnode(GOUT, 51, 58, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 43), rnode(GOUT, 51, 58, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 44), rnode(GOUT, 51, 58, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 45), rnode(GOUT, 51, 58, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 46), rnode(GOUT, 51, 58, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 47), rnode(GOUT, 51, 58, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 48), rnode(GOUT, 51, 58, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 49), rnode(GOUT, 51, 58, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 50), rnode(GOUT, 51, 58, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 51), rnode(GOUT, 51, 58, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 52), rnode(GOUT, 51, 58, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 53), rnode(GOUT, 51, 58, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 54), rnode(GOUT, 51, 58, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 55), rnode(GOUT, 51, 58, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 56), rnode(GOUT, 51, 58, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 57), rnode(GOUT, 51, 58, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 58), rnode(GOUT, 51, 58, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 1, 59), rnode(GOUT, 51, 58, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 0), rnode(GOUT, 51, 58, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 1), rnode(GOUT, 51, 57, 44) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 2), rnode(GOUT, 51, 57, 33) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 3), rnode(GOUT, 51, 57, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 4), rnode(GOUT, 51, 57, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 5), rnode(GOUT, 51, 57, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 6), rnode(GOUT, 51, 56, 53) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 7), rnode(GOUT, 51, 56, 52) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 8), rnode(GOUT, 51, 56, 51) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 9), rnode(GOUT, 51, 56, 50) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 10), rnode(GOUT, 51, 58, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 11), rnode(GOUT, 51, 57, 53) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 12), rnode(GOUT, 51, 57, 52) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 13), rnode(GOUT, 51, 57, 51) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 14), rnode(GOUT, 51, 57, 50) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 15), rnode(GOUT, 51, 57, 49) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 16), rnode(GOUT, 51, 57, 48) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 17), rnode(GOUT, 51, 57, 47) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 18), rnode(GOUT, 51, 57, 46) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 19), rnode(GOUT, 51, 57, 45) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 20), rnode(GOUT, 51, 57, 43) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 21), rnode(GOUT, 51, 57, 42) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 22), rnode(GOUT, 51, 57, 41) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 23), rnode(GOUT, 51, 57, 40) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 24), rnode(GOUT, 51, 57, 39) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 25), rnode(GOUT, 51, 57, 38) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 26), rnode(GOUT, 51, 57, 37) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 27), rnode(GOUT, 51, 57, 36) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 28), rnode(GOUT, 51, 57, 35) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 29), rnode(GOUT, 51, 57, 34) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 30), rnode(GOUT, 51, 57, 32) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 31), rnode(GOUT, 51, 57, 31) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 32), rnode(GOUT, 51, 57, 30) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 33), rnode(GOUT, 51, 57, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 34), rnode(GOUT, 51, 57, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 35), rnode(GOUT, 51, 57, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 36), rnode(GOUT, 51, 57, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 37), rnode(GOUT, 51, 57, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 38), rnode(GOUT, 51, 57, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 39), rnode(GOUT, 51, 57, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 40), rnode(GOUT, 51, 57, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 41), rnode(GOUT, 51, 57, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 42), rnode(GOUT, 51, 57, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 43), rnode(GOUT, 51, 57, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 44), rnode(GOUT, 51, 57, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 45), rnode(GOUT, 51, 57, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 46), rnode(GOUT, 51, 57, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 47), rnode(GOUT, 51, 57, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 48), rnode(GOUT, 51, 57, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 49), rnode(GOUT, 51, 57, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 50), rnode(GOUT, 51, 57, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 51), rnode(GOUT, 51, 57, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 52), rnode(GOUT, 51, 57, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 53), rnode(GOUT, 51, 57, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 54), rnode(GOUT, 51, 57, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 55), rnode(GOUT, 51, 57, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 56), rnode(GOUT, 51, 57, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 57), rnode(GOUT, 51, 57, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 58), rnode(GOUT, 51, 57, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 2, 59), rnode(GOUT, 51, 57, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 0), rnode(GOUT, 51, 56, 48) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 1), rnode(GOUT, 51, 56, 37) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 2), rnode(GOUT, 51, 56, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 3), rnode(GOUT, 51, 56, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 4), rnode(GOUT, 51, 56, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 5), rnode(GOUT, 51, 55, 47) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 6), rnode(GOUT, 51, 55, 46) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 7), rnode(GOUT, 51, 55, 45) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 8), rnode(GOUT, 51, 55, 44) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 9), rnode(GOUT, 51, 55, 43) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 10), rnode(GOUT, 51, 56, 47) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 11), rnode(GOUT, 51, 56, 46) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 12), rnode(GOUT, 51, 56, 45) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 13), rnode(GOUT, 51, 56, 44) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 14), rnode(GOUT, 51, 56, 43) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 15), rnode(GOUT, 51, 56, 42) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 16), rnode(GOUT, 51, 56, 41) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 17), rnode(GOUT, 51, 56, 40) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 18), rnode(GOUT, 51, 56, 39) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 19), rnode(GOUT, 51, 56, 38) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 20), rnode(GOUT, 51, 56, 36) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 21), rnode(GOUT, 51, 56, 35) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 22), rnode(GOUT, 51, 56, 34) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 23), rnode(GOUT, 51, 56, 33) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 24), rnode(GOUT, 51, 56, 32) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 25), rnode(GOUT, 51, 56, 31) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 26), rnode(GOUT, 51, 56, 30) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 27), rnode(GOUT, 51, 56, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 28), rnode(GOUT, 51, 56, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 29), rnode(GOUT, 51, 56, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 30), rnode(GOUT, 51, 56, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 31), rnode(GOUT, 51, 56, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 32), rnode(GOUT, 51, 56, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 33), rnode(GOUT, 51, 56, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 34), rnode(GOUT, 51, 56, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 35), rnode(GOUT, 51, 56, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 36), rnode(GOUT, 51, 56, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 37), rnode(GOUT, 51, 56, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 38), rnode(GOUT, 51, 56, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 39), rnode(GOUT, 51, 56, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 40), rnode(GOUT, 51, 56, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 41), rnode(GOUT, 51, 56, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 42), rnode(GOUT, 51, 56, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 43), rnode(GOUT, 51, 56, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 44), rnode(GOUT, 51, 56, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 45), rnode(GOUT, 51, 56, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 46), rnode(GOUT, 51, 56, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 47), rnode(GOUT, 51, 56, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 48), rnode(GOUT, 51, 56, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 49), rnode(GOUT, 51, 56, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 50), rnode(GOUT, 51, 56, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 51), rnode(GOUT, 51, 56, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 52), rnode(GOUT, 51, 56, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 53), rnode(GOUT, 51, 56, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 54), rnode(GOUT, 51, 55, 53) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 55), rnode(GOUT, 51, 55, 52) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 56), rnode(GOUT, 51, 55, 51) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 57), rnode(GOUT, 51, 55, 50) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 58), rnode(GOUT, 51, 55, 49) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 3, 59), rnode(GOUT, 51, 55, 48) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 0), rnode(GOUT, 51, 55, 41) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 1), rnode(GOUT, 51, 55, 30) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 2), rnode(GOUT, 51, 55, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 3), rnode(GOUT, 51, 55, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 4), rnode(GOUT, 51, 54, 51) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 5), rnode(GOUT, 51, 54, 40) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 6), rnode(GOUT, 51, 54, 39) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 7), rnode(GOUT, 51, 54, 38) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 8), rnode(GOUT, 51, 54, 37) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 9), rnode(GOUT, 51, 54, 36) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 10), rnode(GOUT, 51, 55, 40) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 11), rnode(GOUT, 51, 55, 39) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 12), rnode(GOUT, 51, 55, 38) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 13), rnode(GOUT, 51, 55, 37) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 14), rnode(GOUT, 51, 55, 36) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 15), rnode(GOUT, 51, 55, 35) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 16), rnode(GOUT, 51, 55, 34) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 17), rnode(GOUT, 51, 55, 33) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 18), rnode(GOUT, 51, 55, 32) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 19), rnode(GOUT, 51, 55, 31) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 20), rnode(GOUT, 51, 55, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 21), rnode(GOUT, 51, 55, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 22), rnode(GOUT, 51, 55, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 23), rnode(GOUT, 51, 55, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 24), rnode(GOUT, 51, 55, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 25), rnode(GOUT, 51, 55, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 26), rnode(GOUT, 51, 55, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 27), rnode(GOUT, 51, 55, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 28), rnode(GOUT, 51, 55, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 29), rnode(GOUT, 51, 55, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 30), rnode(GOUT, 51, 55, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 31), rnode(GOUT, 51, 55, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 32), rnode(GOUT, 51, 55, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 33), rnode(GOUT, 51, 55, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 34), rnode(GOUT, 51, 55, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 35), rnode(GOUT, 51, 55, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 36), rnode(GOUT, 51, 55, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 37), rnode(GOUT, 51, 55, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 38), rnode(GOUT, 51, 55, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 39), rnode(GOUT, 51, 55, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 40), rnode(GOUT, 51, 55, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 41), rnode(GOUT, 51, 55, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 42), rnode(GOUT, 51, 55, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 43), rnode(GOUT, 51, 55, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 44), rnode(GOUT, 51, 55, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 45), rnode(GOUT, 51, 55, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 46), rnode(GOUT, 51, 55, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 47), rnode(GOUT, 51, 55, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 48), rnode(GOUT, 51, 54, 53) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 49), rnode(GOUT, 51, 54, 52) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 50), rnode(GOUT, 51, 54, 50) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 51), rnode(GOUT, 51, 54, 49) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 52), rnode(GOUT, 51, 54, 48) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 53), rnode(GOUT, 51, 54, 47) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 54), rnode(GOUT, 51, 54, 46) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 55), rnode(GOUT, 51, 54, 45) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 56), rnode(GOUT, 51, 54, 44) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 57), rnode(GOUT, 51, 54, 43) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 58), rnode(GOUT, 51, 54, 42) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 4, 59), rnode(GOUT, 51, 54, 41) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 0), rnode(GOUT, 51, 54, 34) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 1), rnode(GOUT, 51, 54, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 2), rnode(GOUT, 51, 54, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 3), rnode(GOUT, 51, 54, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 4), rnode(GOUT, 51, 53, 44) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 5), rnode(GOUT, 51, 53, 33) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 6), rnode(GOUT, 51, 53, 32) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 7), rnode(GOUT, 51, 53, 31) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 8), rnode(GOUT, 51, 53, 30) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 9), rnode(GOUT, 51, 53, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 10), rnode(GOUT, 51, 54, 33) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 11), rnode(GOUT, 51, 54, 32) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 12), rnode(GOUT, 51, 54, 31) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 13), rnode(GOUT, 51, 54, 30) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 14), rnode(GOUT, 51, 54, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 15), rnode(GOUT, 51, 54, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 16), rnode(GOUT, 51, 54, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 17), rnode(GOUT, 51, 54, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 18), rnode(GOUT, 51, 54, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 19), rnode(GOUT, 51, 54, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 20), rnode(GOUT, 51, 54, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 21), rnode(GOUT, 51, 54, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 22), rnode(GOUT, 51, 54, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 23), rnode(GOUT, 51, 54, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 24), rnode(GOUT, 51, 54, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 25), rnode(GOUT, 51, 54, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 26), rnode(GOUT, 51, 54, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 27), rnode(GOUT, 51, 54, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 28), rnode(GOUT, 51, 54, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 29), rnode(GOUT, 51, 54, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 30), rnode(GOUT, 51, 54, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 31), rnode(GOUT, 51, 54, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 32), rnode(GOUT, 51, 54, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 33), rnode(GOUT, 51, 54, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 34), rnode(GOUT, 51, 54, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 35), rnode(GOUT, 51, 54, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 36), rnode(GOUT, 51, 54, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 37), rnode(GOUT, 51, 54, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 38), rnode(GOUT, 51, 54, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 39), rnode(GOUT, 51, 54, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 40), rnode(GOUT, 51, 54, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 41), rnode(GOUT, 51, 53, 53) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 42), rnode(GOUT, 51, 53, 52) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 43), rnode(GOUT, 51, 53, 51) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 44), rnode(GOUT, 51, 53, 50) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 45), rnode(GOUT, 51, 53, 49) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 46), rnode(GOUT, 51, 53, 48) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 47), rnode(GOUT, 51, 53, 47) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 48), rnode(GOUT, 51, 53, 46) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 49), rnode(GOUT, 51, 53, 45) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 50), rnode(GOUT, 51, 53, 43) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 51), rnode(GOUT, 51, 53, 42) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 52), rnode(GOUT, 51, 53, 41) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 53), rnode(GOUT, 51, 53, 40) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 54), rnode(GOUT, 51, 53, 39) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 55), rnode(GOUT, 51, 53, 38) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 56), rnode(GOUT, 51, 53, 37) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 57), rnode(GOUT, 51, 53, 36) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 58), rnode(GOUT, 51, 53, 35) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_DATA, 5, 59), rnode(GOUT, 51, 53, 34) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_PORT_CLK, 0, -1), rnode(DCMUX, 51, 63, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_PORT_CLK, 1, -1), rnode(DCMUX, 51, 62, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_PORT_CLK, 2, -1), rnode(DCMUX, 51, 61, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_PORT_CLK, 3, -1), rnode(DCMUX, 51, 60, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_PORT_CLK, 4, -1), rnode(DCMUX, 51, 59, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_PORT_CLK, 5, -1), rnode(DCMUX, 51, 58, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_VALID, 0, -1), rnode(GOUT, 51, 59, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_VALID, 1, -1), rnode(GOUT, 51, 58, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_VALID, 2, -1), rnode(GOUT, 51, 56, 49) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_VALID, 3, -1), rnode(GOUT, 51, 55, 42) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_VALID, 4, -1), rnode(GOUT, 51, 54, 35) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_VALID, 5, -1), rnode(GOUT, 51, 53, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_CLK, 0, -1), rnode(DCMUX, 51, 64, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_CLK, 1, -1), rnode(DCMUX, 51, 62, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_CLK, 2, -1), rnode(DCMUX, 51, 60, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_CLK, 3, -1), rnode(DCMUX, 51, 58, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_READY, 0, -1), rnode(GOUT, 51, 53, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_READY, 1, -1), rnode(GOUT, 51, 53, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_READY, 2, -1), rnode(GOUT, 51, 53, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_READY, 3, -1), rnode(GOUT, 51, 53, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_READY, 0, -1), rnode(GOUT, 51, 62, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_READY, 1, -1), rnode(GOUT, 51, 62, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_READY, 2, -1), rnode(GOUT, 51, 62, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_READY, 3, -1), rnode(GOUT, 51, 62, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_READY, 4, -1), rnode(GOUT, 51, 62, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_READY, 5, -1), rnode(GOUT, 51, 62, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_CLK, 0, -1), rnode(DCMUX, 51, 64, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_CLK, 1, -1), rnode(DCMUX, 51, 63, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_CLK, 2, -1), rnode(DCMUX, 51, 61, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_CLK, 3, -1), rnode(DCMUX, 51, 59, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 0), rnode(GOUT, 51, 68, 49) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 1), rnode(GOUT, 51, 68, 38) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 2), rnode(GOUT, 51, 68, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 3), rnode(GOUT, 51, 68, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 4), rnode(GOUT, 51, 68, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 5), rnode(GOUT, 51, 67, 49) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 6), rnode(GOUT, 51, 67, 38) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 7), rnode(GOUT, 51, 67, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 8), rnode(GOUT, 51, 67, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 9), rnode(GOUT, 51, 67, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 10), rnode(GOUT, 51, 68, 48) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 11), rnode(GOUT, 51, 68, 47) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 12), rnode(GOUT, 51, 68, 46) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 13), rnode(GOUT, 51, 68, 45) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 14), rnode(GOUT, 51, 68, 44) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 15), rnode(GOUT, 51, 68, 43) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 16), rnode(GOUT, 51, 68, 42) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 17), rnode(GOUT, 51, 68, 41) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 18), rnode(GOUT, 51, 68, 40) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 19), rnode(GOUT, 51, 68, 39) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 20), rnode(GOUT, 51, 68, 37) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 21), rnode(GOUT, 51, 68, 36) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 22), rnode(GOUT, 51, 68, 35) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 23), rnode(GOUT, 51, 68, 34) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 24), rnode(GOUT, 51, 68, 33) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 25), rnode(GOUT, 51, 68, 32) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 26), rnode(GOUT, 51, 68, 31) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 27), rnode(GOUT, 51, 68, 30) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 28), rnode(GOUT, 51, 68, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 29), rnode(GOUT, 51, 68, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 30), rnode(GOUT, 51, 68, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 31), rnode(GOUT, 51, 68, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 32), rnode(GOUT, 51, 68, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 33), rnode(GOUT, 51, 68, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 34), rnode(GOUT, 51, 68, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 35), rnode(GOUT, 51, 68, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 36), rnode(GOUT, 51, 68, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 37), rnode(GOUT, 51, 68, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 38), rnode(GOUT, 51, 68, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 39), rnode(GOUT, 51, 68, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 40), rnode(GOUT, 51, 68, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 41), rnode(GOUT, 51, 68, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 42), rnode(GOUT, 51, 68, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 43), rnode(GOUT, 51, 68, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 44), rnode(GOUT, 51, 68, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 45), rnode(GOUT, 51, 68, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 46), rnode(GOUT, 51, 68, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 47), rnode(GOUT, 51, 68, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 48), rnode(GOUT, 51, 68, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 49), rnode(GOUT, 51, 68, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 50), rnode(GOUT, 51, 68, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 51), rnode(GOUT, 51, 68, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 52), rnode(GOUT, 51, 68, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 53), rnode(GOUT, 51, 68, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 54), rnode(GOUT, 51, 68, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 55), rnode(GOUT, 51, 67, 54) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 56), rnode(GOUT, 51, 67, 53) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 57), rnode(GOUT, 51, 67, 52) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 58), rnode(GOUT, 51, 67, 51) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 59), rnode(GOUT, 51, 67, 50) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 60), rnode(GOUT, 51, 67, 48) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 61), rnode(GOUT, 51, 67, 47) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 62), rnode(GOUT, 51, 67, 46) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 63), rnode(GOUT, 51, 67, 45) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 64), rnode(GOUT, 51, 67, 44) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 65), rnode(GOUT, 51, 67, 43) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 66), rnode(GOUT, 51, 67, 42) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 67), rnode(GOUT, 51, 67, 41) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 68), rnode(GOUT, 51, 67, 40) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 69), rnode(GOUT, 51, 67, 39) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 70), rnode(GOUT, 51, 67, 37) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 71), rnode(GOUT, 51, 67, 36) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 72), rnode(GOUT, 51, 67, 35) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 73), rnode(GOUT, 51, 67, 34) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 74), rnode(GOUT, 51, 67, 33) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 75), rnode(GOUT, 51, 67, 32) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 76), rnode(GOUT, 51, 67, 31) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 77), rnode(GOUT, 51, 67, 30) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 78), rnode(GOUT, 51, 67, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 79), rnode(GOUT, 51, 67, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 80), rnode(GOUT, 51, 67, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 81), rnode(GOUT, 51, 67, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 82), rnode(GOUT, 51, 67, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 83), rnode(GOUT, 51, 67, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 84), rnode(GOUT, 51, 67, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 85), rnode(GOUT, 51, 67, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 86), rnode(GOUT, 51, 67, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 87), rnode(GOUT, 51, 67, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 88), rnode(GOUT, 51, 67, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 0, 89), rnode(GOUT, 51, 67, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 0), rnode(GOUT, 51, 67, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 1), rnode(GOUT, 51, 67, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 2), rnode(GOUT, 51, 66, 46) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 3), rnode(GOUT, 51, 66, 35) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 4), rnode(GOUT, 51, 66, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 5), rnode(GOUT, 51, 66, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 6), rnode(GOUT, 51, 66, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 7), rnode(GOUT, 51, 65, 45) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 8), rnode(GOUT, 51, 65, 34) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 9), rnode(GOUT, 51, 65, 33) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 10), rnode(GOUT, 51, 67, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 11), rnode(GOUT, 51, 67, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 12), rnode(GOUT, 51, 67, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 13), rnode(GOUT, 51, 67, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 14), rnode(GOUT, 51, 67, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 15), rnode(GOUT, 51, 67, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 16), rnode(GOUT, 51, 67, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 17), rnode(GOUT, 51, 67, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 18), rnode(GOUT, 51, 67, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 19), rnode(GOUT, 51, 67, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 20), rnode(GOUT, 51, 67, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 21), rnode(GOUT, 51, 67, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 22), rnode(GOUT, 51, 66, 54) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 23), rnode(GOUT, 51, 66, 53) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 24), rnode(GOUT, 51, 66, 52) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 25), rnode(GOUT, 51, 66, 51) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 26), rnode(GOUT, 51, 66, 50) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 27), rnode(GOUT, 51, 66, 49) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 28), rnode(GOUT, 51, 66, 48) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 29), rnode(GOUT, 51, 66, 47) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 30), rnode(GOUT, 51, 66, 45) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 31), rnode(GOUT, 51, 66, 44) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 32), rnode(GOUT, 51, 66, 43) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 33), rnode(GOUT, 51, 66, 42) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 34), rnode(GOUT, 51, 66, 41) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 35), rnode(GOUT, 51, 66, 40) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 36), rnode(GOUT, 51, 66, 39) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 37), rnode(GOUT, 51, 66, 38) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 38), rnode(GOUT, 51, 66, 37) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 39), rnode(GOUT, 51, 66, 36) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 40), rnode(GOUT, 51, 66, 34) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 41), rnode(GOUT, 51, 66, 33) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 42), rnode(GOUT, 51, 66, 32) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 43), rnode(GOUT, 51, 66, 31) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 44), rnode(GOUT, 51, 66, 30) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 45), rnode(GOUT, 51, 66, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 46), rnode(GOUT, 51, 66, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 47), rnode(GOUT, 51, 66, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 48), rnode(GOUT, 51, 66, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 49), rnode(GOUT, 51, 66, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 50), rnode(GOUT, 51, 66, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 51), rnode(GOUT, 51, 66, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 52), rnode(GOUT, 51, 66, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 53), rnode(GOUT, 51, 66, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 54), rnode(GOUT, 51, 66, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 55), rnode(GOUT, 51, 66, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 56), rnode(GOUT, 51, 66, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 57), rnode(GOUT, 51, 66, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 58), rnode(GOUT, 51, 66, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 59), rnode(GOUT, 51, 66, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 60), rnode(GOUT, 51, 66, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 61), rnode(GOUT, 51, 66, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 62), rnode(GOUT, 51, 66, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 63), rnode(GOUT, 51, 66, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 64), rnode(GOUT, 51, 66, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 65), rnode(GOUT, 51, 66, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 66), rnode(GOUT, 51, 66, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 67), rnode(GOUT, 51, 66, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 68), rnode(GOUT, 51, 66, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 69), rnode(GOUT, 51, 66, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 70), rnode(GOUT, 51, 66, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 71), rnode(GOUT, 51, 66, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 72), rnode(GOUT, 51, 65, 53) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 73), rnode(GOUT, 51, 65, 52) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 74), rnode(GOUT, 51, 65, 51) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 75), rnode(GOUT, 51, 65, 50) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 76), rnode(GOUT, 51, 65, 49) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 77), rnode(GOUT, 51, 65, 48) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 78), rnode(GOUT, 51, 65, 47) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 79), rnode(GOUT, 51, 65, 46) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 80), rnode(GOUT, 51, 65, 44) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 81), rnode(GOUT, 51, 65, 43) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 82), rnode(GOUT, 51, 65, 42) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 83), rnode(GOUT, 51, 65, 41) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 84), rnode(GOUT, 51, 65, 40) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 85), rnode(GOUT, 51, 65, 39) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 86), rnode(GOUT, 51, 65, 38) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 87), rnode(GOUT, 51, 65, 37) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 88), rnode(GOUT, 51, 65, 36) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 1, 89), rnode(GOUT, 51, 65, 35) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 0), rnode(GOUT, 51, 65, 31) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 1), rnode(GOUT, 51, 65, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 2), rnode(GOUT, 51, 65, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 3), rnode(GOUT, 51, 64, 52) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 4), rnode(GOUT, 51, 64, 41) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 5), rnode(GOUT, 51, 64, 30) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 6), rnode(GOUT, 51, 64, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 7), rnode(GOUT, 51, 64, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 8), rnode(GOUT, 51, 63, 51) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 9), rnode(GOUT, 51, 63, 50) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 10), rnode(GOUT, 51, 65, 30) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 11), rnode(GOUT, 51, 65, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 12), rnode(GOUT, 51, 65, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 13), rnode(GOUT, 51, 65, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 14), rnode(GOUT, 51, 65, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 15), rnode(GOUT, 51, 65, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 16), rnode(GOUT, 51, 65, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 17), rnode(GOUT, 51, 65, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 18), rnode(GOUT, 51, 65, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 19), rnode(GOUT, 51, 65, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 20), rnode(GOUT, 51, 65, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 21), rnode(GOUT, 51, 65, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 22), rnode(GOUT, 51, 65, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 23), rnode(GOUT, 51, 65, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 24), rnode(GOUT, 51, 65, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 25), rnode(GOUT, 51, 65, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 26), rnode(GOUT, 51, 65, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 27), rnode(GOUT, 51, 65, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 28), rnode(GOUT, 51, 65, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 29), rnode(GOUT, 51, 65, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 30), rnode(GOUT, 51, 65, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 31), rnode(GOUT, 51, 65, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 32), rnode(GOUT, 51, 65, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 33), rnode(GOUT, 51, 65, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 34), rnode(GOUT, 51, 65, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 35), rnode(GOUT, 51, 65, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 36), rnode(GOUT, 51, 65, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 37), rnode(GOUT, 51, 65, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 38), rnode(GOUT, 51, 65, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 39), rnode(GOUT, 51, 64, 53) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 40), rnode(GOUT, 51, 64, 51) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 41), rnode(GOUT, 51, 64, 50) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 42), rnode(GOUT, 51, 64, 49) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 43), rnode(GOUT, 51, 64, 48) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 44), rnode(GOUT, 51, 64, 47) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 45), rnode(GOUT, 51, 64, 46) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 46), rnode(GOUT, 51, 64, 45) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 47), rnode(GOUT, 51, 64, 44) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 48), rnode(GOUT, 51, 64, 43) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 49), rnode(GOUT, 51, 64, 42) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 50), rnode(GOUT, 51, 64, 40) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 51), rnode(GOUT, 51, 64, 39) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 52), rnode(GOUT, 51, 64, 38) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 53), rnode(GOUT, 51, 64, 37) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 54), rnode(GOUT, 51, 64, 36) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 55), rnode(GOUT, 51, 64, 35) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 56), rnode(GOUT, 51, 64, 34) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 57), rnode(GOUT, 51, 64, 33) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 58), rnode(GOUT, 51, 64, 32) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 59), rnode(GOUT, 51, 64, 31) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 60), rnode(GOUT, 51, 64, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 61), rnode(GOUT, 51, 64, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 62), rnode(GOUT, 51, 64, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 63), rnode(GOUT, 51, 64, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 64), rnode(GOUT, 51, 64, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 65), rnode(GOUT, 51, 64, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 66), rnode(GOUT, 51, 64, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 67), rnode(GOUT, 51, 64, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 68), rnode(GOUT, 51, 64, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 69), rnode(GOUT, 51, 64, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 70), rnode(GOUT, 51, 64, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 71), rnode(GOUT, 51, 64, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 72), rnode(GOUT, 51, 64, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 73), rnode(GOUT, 51, 64, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 74), rnode(GOUT, 51, 64, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 75), rnode(GOUT, 51, 64, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 76), rnode(GOUT, 51, 64, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 77), rnode(GOUT, 51, 64, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 78), rnode(GOUT, 51, 64, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 79), rnode(GOUT, 51, 64, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 80), rnode(GOUT, 51, 64, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 81), rnode(GOUT, 51, 64, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 82), rnode(GOUT, 51, 64, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 83), rnode(GOUT, 51, 64, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 84), rnode(GOUT, 51, 64, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 85), rnode(GOUT, 51, 64, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 86), rnode(GOUT, 51, 64, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 87), rnode(GOUT, 51, 64, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 88), rnode(GOUT, 51, 63, 53) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 2, 89), rnode(GOUT, 51, 63, 52) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 0), rnode(GOUT, 51, 63, 48) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 1), rnode(GOUT, 51, 63, 37) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 2), rnode(GOUT, 51, 63, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 3), rnode(GOUT, 51, 63, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 4), rnode(GOUT, 51, 63, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 5), rnode(GOUT, 51, 62, 47) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 6), rnode(GOUT, 51, 62, 36) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 7), rnode(GOUT, 51, 62, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 8), rnode(GOUT, 51, 62, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 9), rnode(GOUT, 51, 62, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 10), rnode(GOUT, 51, 63, 47) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 11), rnode(GOUT, 51, 63, 46) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 12), rnode(GOUT, 51, 63, 45) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 13), rnode(GOUT, 51, 63, 44) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 14), rnode(GOUT, 51, 63, 43) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 15), rnode(GOUT, 51, 63, 42) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 16), rnode(GOUT, 51, 63, 41) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 17), rnode(GOUT, 51, 63, 40) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 18), rnode(GOUT, 51, 63, 39) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 19), rnode(GOUT, 51, 63, 38) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 20), rnode(GOUT, 51, 63, 36) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 21), rnode(GOUT, 51, 63, 35) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 22), rnode(GOUT, 51, 63, 34) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 23), rnode(GOUT, 51, 63, 33) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 24), rnode(GOUT, 51, 63, 32) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 25), rnode(GOUT, 51, 63, 31) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 26), rnode(GOUT, 51, 63, 30) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 27), rnode(GOUT, 51, 63, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 28), rnode(GOUT, 51, 63, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 29), rnode(GOUT, 51, 63, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 30), rnode(GOUT, 51, 63, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 31), rnode(GOUT, 51, 63, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 32), rnode(GOUT, 51, 63, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 33), rnode(GOUT, 51, 63, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 34), rnode(GOUT, 51, 63, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 35), rnode(GOUT, 51, 63, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 36), rnode(GOUT, 51, 63, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 37), rnode(GOUT, 51, 63, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 38), rnode(GOUT, 51, 63, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 39), rnode(GOUT, 51, 63, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 40), rnode(GOUT, 51, 63, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 41), rnode(GOUT, 51, 63, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 42), rnode(GOUT, 51, 63, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 43), rnode(GOUT, 51, 63, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 44), rnode(GOUT, 51, 63, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 45), rnode(GOUT, 51, 63, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 46), rnode(GOUT, 51, 63, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 47), rnode(GOUT, 51, 63, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 48), rnode(GOUT, 51, 63, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 49), rnode(GOUT, 51, 63, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 50), rnode(GOUT, 51, 63, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 51), rnode(GOUT, 51, 63, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 52), rnode(GOUT, 51, 63, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 53), rnode(GOUT, 51, 63, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 54), rnode(GOUT, 51, 62, 53) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 55), rnode(GOUT, 51, 62, 52) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 56), rnode(GOUT, 51, 62, 51) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 57), rnode(GOUT, 51, 62, 50) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 58), rnode(GOUT, 51, 62, 49) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 59), rnode(GOUT, 51, 62, 48) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 60), rnode(GOUT, 51, 62, 46) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 61), rnode(GOUT, 51, 62, 45) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 62), rnode(GOUT, 51, 62, 44) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 63), rnode(GOUT, 51, 62, 43) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 64), rnode(GOUT, 51, 62, 42) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 65), rnode(GOUT, 51, 62, 41) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 66), rnode(GOUT, 51, 62, 40) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 67), rnode(GOUT, 51, 62, 39) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 68), rnode(GOUT, 51, 62, 38) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 69), rnode(GOUT, 51, 62, 37) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 70), rnode(GOUT, 51, 62, 35) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 71), rnode(GOUT, 51, 62, 34) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 72), rnode(GOUT, 51, 62, 33) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 73), rnode(GOUT, 51, 62, 32) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 74), rnode(GOUT, 51, 62, 31) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 75), rnode(GOUT, 51, 62, 30) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 76), rnode(GOUT, 51, 62, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 77), rnode(GOUT, 51, 62, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 78), rnode(GOUT, 51, 62, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 79), rnode(GOUT, 51, 62, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 80), rnode(GOUT, 51, 62, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 81), rnode(GOUT, 51, 62, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 82), rnode(GOUT, 51, 62, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 83), rnode(GOUT, 51, 62, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 84), rnode(GOUT, 51, 62, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 85), rnode(GOUT, 51, 62, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 86), rnode(GOUT, 51, 62, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 87), rnode(GOUT, 51, 62, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 88), rnode(GOUT, 51, 62, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_DATA, 3, 89), rnode(GOUT, 51, 62, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_VALID, 0, -1), rnode(GOUT, 51, 67, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_VALID, 1, -1), rnode(GOUT, 51, 65, 32) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_VALID, 2, -1), rnode(GOUT, 51, 63, 49) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_VALID, 3, -1), rnode(GOUT, 51, 62, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, BONDING_OUT, 0, 0), rnode(GIN, 51, 64, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, BONDING_OUT, 0, 1), rnode(GIN, 51, 64, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, BONDING_OUT, 0, 2), rnode(GIN, 51, 64, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, BONDING_OUT, 0, 3), rnode(GIN, 51, 64, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, BONDING_OUT, 1, 0), rnode(GIN, 51, 64, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, BONDING_OUT, 1, 1), rnode(GIN, 51, 64, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, BONDING_OUT, 1, 2), rnode(GIN, 51, 64, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, BONDING_OUT, 1, 3), rnode(GIN, 51, 64, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_READY, 0, -1), rnode(GIN, 51, 64, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_READY, 1, -1), rnode(GIN, 51, 64, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_READY, 2, -1), rnode(GIN, 51, 64, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_READY, 3, -1), rnode(GIN, 51, 64, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_READY, 4, -1), rnode(GIN, 51, 64, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, CMD_READY, 5, -1), rnode(GIN, 51, 64, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 0), rnode(GIN, 51, 63, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 1), rnode(GIN, 51, 63, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 2), rnode(GIN, 51, 63, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 3), rnode(GIN, 51, 62, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 4), rnode(GIN, 51, 62, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 5), rnode(GIN, 51, 61, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 6), rnode(GIN, 51, 61, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 7), rnode(GIN, 51, 61, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 8), rnode(GIN, 51, 61, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 9), rnode(GIN, 51, 61, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 10), rnode(GIN, 51, 63, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 11), rnode(GIN, 51, 63, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 12), rnode(GIN, 51, 63, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 13), rnode(GIN, 51, 63, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 14), rnode(GIN, 51, 63, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 15), rnode(GIN, 51, 63, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 16), rnode(GIN, 51, 63, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 17), rnode(GIN, 51, 63, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 18), rnode(GIN, 51, 63, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 19), rnode(GIN, 51, 63, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 20), rnode(GIN, 51, 63, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 21), rnode(GIN, 51, 63, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 22), rnode(GIN, 51, 63, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 23), rnode(GIN, 51, 63, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 24), rnode(GIN, 51, 63, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 25), rnode(GIN, 51, 63, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 26), rnode(GIN, 51, 63, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 27), rnode(GIN, 51, 63, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 28), rnode(GIN, 51, 63, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 29), rnode(GIN, 51, 63, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 30), rnode(GIN, 51, 63, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 31), rnode(GIN, 51, 62, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 32), rnode(GIN, 51, 62, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 33), rnode(GIN, 51, 62, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 34), rnode(GIN, 51, 62, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 35), rnode(GIN, 51, 62, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 36), rnode(GIN, 51, 62, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 37), rnode(GIN, 51, 62, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 38), rnode(GIN, 51, 62, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 39), rnode(GIN, 51, 62, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 40), rnode(GIN, 51, 62, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 41), rnode(GIN, 51, 62, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 42), rnode(GIN, 51, 62, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 43), rnode(GIN, 51, 62, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 44), rnode(GIN, 51, 62, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 45), rnode(GIN, 51, 62, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 46), rnode(GIN, 51, 62, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 47), rnode(GIN, 51, 62, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 48), rnode(GIN, 51, 62, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 49), rnode(GIN, 51, 62, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 50), rnode(GIN, 51, 62, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 51), rnode(GIN, 51, 62, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 52), rnode(GIN, 51, 62, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 53), rnode(GIN, 51, 62, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 54), rnode(GIN, 51, 62, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 55), rnode(GIN, 51, 62, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 56), rnode(GIN, 51, 62, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 57), rnode(GIN, 51, 62, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 58), rnode(GIN, 51, 62, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 59), rnode(GIN, 51, 61, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 60), rnode(GIN, 51, 61, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 61), rnode(GIN, 51, 61, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 62), rnode(GIN, 51, 61, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 63), rnode(GIN, 51, 61, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 64), rnode(GIN, 51, 61, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 65), rnode(GIN, 51, 61, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 66), rnode(GIN, 51, 61, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 67), rnode(GIN, 51, 61, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 68), rnode(GIN, 51, 61, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 69), rnode(GIN, 51, 61, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 70), rnode(GIN, 51, 61, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 71), rnode(GIN, 51, 61, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 72), rnode(GIN, 51, 61, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 73), rnode(GIN, 51, 61, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 74), rnode(GIN, 51, 61, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 75), rnode(GIN, 51, 61, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 76), rnode(GIN, 51, 61, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 77), rnode(GIN, 51, 61, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 78), rnode(GIN, 51, 61, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 0, 79), rnode(GIN, 51, 61, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 0), rnode(GIN, 51, 61, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 1), rnode(GIN, 51, 60, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 2), rnode(GIN, 51, 60, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 3), rnode(GIN, 51, 59, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 4), rnode(GIN, 51, 59, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 5), rnode(GIN, 51, 59, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 6), rnode(GIN, 51, 58, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 7), rnode(GIN, 51, 58, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 8), rnode(GIN, 51, 58, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 9), rnode(GIN, 51, 58, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 10), rnode(GIN, 51, 61, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 11), rnode(GIN, 51, 61, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 12), rnode(GIN, 51, 60, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 13), rnode(GIN, 51, 60, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 14), rnode(GIN, 51, 60, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 15), rnode(GIN, 51, 60, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 16), rnode(GIN, 51, 60, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 17), rnode(GIN, 51, 60, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 18), rnode(GIN, 51, 60, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 19), rnode(GIN, 51, 60, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 20), rnode(GIN, 51, 60, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 21), rnode(GIN, 51, 60, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 22), rnode(GIN, 51, 60, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 23), rnode(GIN, 51, 60, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 24), rnode(GIN, 51, 60, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 25), rnode(GIN, 51, 60, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 26), rnode(GIN, 51, 60, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 27), rnode(GIN, 51, 60, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 28), rnode(GIN, 51, 60, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 29), rnode(GIN, 51, 60, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 30), rnode(GIN, 51, 60, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 31), rnode(GIN, 51, 60, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 32), rnode(GIN, 51, 60, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 33), rnode(GIN, 51, 60, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 34), rnode(GIN, 51, 60, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 35), rnode(GIN, 51, 60, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 36), rnode(GIN, 51, 60, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 37), rnode(GIN, 51, 60, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 38), rnode(GIN, 51, 60, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 39), rnode(GIN, 51, 60, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 40), rnode(GIN, 51, 59, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 41), rnode(GIN, 51, 59, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 42), rnode(GIN, 51, 59, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 43), rnode(GIN, 51, 59, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 44), rnode(GIN, 51, 59, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 45), rnode(GIN, 51, 59, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 46), rnode(GIN, 51, 59, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 47), rnode(GIN, 51, 59, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 48), rnode(GIN, 51, 59, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 49), rnode(GIN, 51, 59, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 50), rnode(GIN, 51, 59, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 51), rnode(GIN, 51, 59, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 52), rnode(GIN, 51, 59, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 53), rnode(GIN, 51, 59, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 54), rnode(GIN, 51, 59, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 55), rnode(GIN, 51, 59, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 56), rnode(GIN, 51, 59, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 57), rnode(GIN, 51, 59, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 58), rnode(GIN, 51, 59, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 59), rnode(GIN, 51, 59, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 60), rnode(GIN, 51, 59, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 61), rnode(GIN, 51, 59, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 62), rnode(GIN, 51, 59, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 63), rnode(GIN, 51, 59, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 64), rnode(GIN, 51, 59, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 65), rnode(GIN, 51, 59, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 66), rnode(GIN, 51, 59, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 67), rnode(GIN, 51, 58, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 68), rnode(GIN, 51, 58, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 69), rnode(GIN, 51, 58, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 70), rnode(GIN, 51, 58, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 71), rnode(GIN, 51, 58, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 72), rnode(GIN, 51, 58, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 73), rnode(GIN, 51, 58, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 74), rnode(GIN, 51, 58, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 75), rnode(GIN, 51, 58, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 76), rnode(GIN, 51, 58, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 77), rnode(GIN, 51, 58, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 78), rnode(GIN, 51, 58, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 1, 79), rnode(GIN, 51, 58, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 0), rnode(GIN, 51, 58, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 1), rnode(GIN, 51, 58, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 2), rnode(GIN, 51, 57, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 3), rnode(GIN, 51, 57, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 4), rnode(GIN, 51, 56, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 5), rnode(GIN, 51, 56, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 6), rnode(GIN, 51, 56, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 7), rnode(GIN, 51, 55, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 8), rnode(GIN, 51, 55, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 9), rnode(GIN, 51, 55, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 10), rnode(GIN, 51, 58, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 11), rnode(GIN, 51, 58, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 12), rnode(GIN, 51, 58, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 13), rnode(GIN, 51, 58, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 14), rnode(GIN, 51, 58, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 15), rnode(GIN, 51, 58, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 16), rnode(GIN, 51, 58, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 17), rnode(GIN, 51, 58, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 18), rnode(GIN, 51, 58, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 19), rnode(GIN, 51, 58, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 20), rnode(GIN, 51, 57, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 21), rnode(GIN, 51, 57, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 22), rnode(GIN, 51, 57, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 23), rnode(GIN, 51, 57, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 24), rnode(GIN, 51, 57, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 25), rnode(GIN, 51, 57, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 26), rnode(GIN, 51, 57, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 27), rnode(GIN, 51, 57, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 28), rnode(GIN, 51, 57, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 29), rnode(GIN, 51, 57, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 30), rnode(GIN, 51, 57, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 31), rnode(GIN, 51, 57, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 32), rnode(GIN, 51, 57, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 33), rnode(GIN, 51, 57, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 34), rnode(GIN, 51, 57, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 35), rnode(GIN, 51, 57, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 36), rnode(GIN, 51, 57, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 37), rnode(GIN, 51, 57, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 38), rnode(GIN, 51, 57, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 39), rnode(GIN, 51, 57, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 40), rnode(GIN, 51, 57, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 41), rnode(GIN, 51, 57, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 42), rnode(GIN, 51, 57, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 43), rnode(GIN, 51, 57, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 44), rnode(GIN, 51, 57, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 45), rnode(GIN, 51, 57, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 46), rnode(GIN, 51, 57, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 47), rnode(GIN, 51, 57, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 48), rnode(GIN, 51, 56, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 49), rnode(GIN, 51, 56, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 50), rnode(GIN, 51, 56, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 51), rnode(GIN, 51, 56, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 52), rnode(GIN, 51, 56, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 53), rnode(GIN, 51, 56, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 54), rnode(GIN, 51, 56, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 55), rnode(GIN, 51, 56, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 56), rnode(GIN, 51, 56, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 57), rnode(GIN, 51, 56, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 58), rnode(GIN, 51, 56, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 59), rnode(GIN, 51, 56, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 60), rnode(GIN, 51, 56, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 61), rnode(GIN, 51, 56, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 62), rnode(GIN, 51, 56, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 63), rnode(GIN, 51, 56, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 64), rnode(GIN, 51, 56, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 65), rnode(GIN, 51, 56, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 66), rnode(GIN, 51, 56, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 67), rnode(GIN, 51, 56, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 68), rnode(GIN, 51, 56, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 69), rnode(GIN, 51, 56, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 70), rnode(GIN, 51, 56, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 71), rnode(GIN, 51, 56, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 72), rnode(GIN, 51, 56, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 73), rnode(GIN, 51, 56, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 74), rnode(GIN, 51, 56, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 75), rnode(GIN, 51, 55, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 76), rnode(GIN, 51, 55, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 77), rnode(GIN, 51, 55, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 78), rnode(GIN, 51, 55, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 2, 79), rnode(GIN, 51, 55, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 0), rnode(GIN, 51, 55, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 1), rnode(GIN, 51, 55, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 2), rnode(GIN, 51, 54, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 3), rnode(GIN, 51, 54, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 4), rnode(GIN, 51, 54, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 5), rnode(GIN, 51, 53, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 6), rnode(GIN, 51, 53, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 7), rnode(GIN, 51, 53, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 8), rnode(GIN, 51, 53, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 9), rnode(GIN, 51, 53, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 10), rnode(GIN, 51, 55, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 11), rnode(GIN, 51, 55, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 12), rnode(GIN, 51, 55, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 13), rnode(GIN, 51, 55, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 14), rnode(GIN, 51, 55, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 15), rnode(GIN, 51, 55, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 16), rnode(GIN, 51, 55, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 17), rnode(GIN, 51, 55, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 18), rnode(GIN, 51, 55, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 19), rnode(GIN, 51, 55, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 20), rnode(GIN, 51, 55, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 21), rnode(GIN, 51, 55, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 22), rnode(GIN, 51, 55, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 23), rnode(GIN, 51, 55, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 24), rnode(GIN, 51, 55, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 25), rnode(GIN, 51, 55, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 26), rnode(GIN, 51, 55, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 27), rnode(GIN, 51, 55, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 28), rnode(GIN, 51, 55, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 29), rnode(GIN, 51, 54, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 30), rnode(GIN, 51, 54, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 31), rnode(GIN, 51, 54, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 32), rnode(GIN, 51, 54, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 33), rnode(GIN, 51, 54, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 34), rnode(GIN, 51, 54, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 35), rnode(GIN, 51, 54, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 36), rnode(GIN, 51, 54, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 37), rnode(GIN, 51, 54, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 38), rnode(GIN, 51, 54, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 39), rnode(GIN, 51, 54, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 40), rnode(GIN, 51, 54, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 41), rnode(GIN, 51, 54, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 42), rnode(GIN, 51, 54, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 43), rnode(GIN, 51, 54, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 44), rnode(GIN, 51, 54, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 45), rnode(GIN, 51, 54, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 46), rnode(GIN, 51, 54, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 47), rnode(GIN, 51, 54, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 48), rnode(GIN, 51, 54, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 49), rnode(GIN, 51, 54, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 50), rnode(GIN, 51, 54, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 51), rnode(GIN, 51, 54, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 52), rnode(GIN, 51, 54, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 53), rnode(GIN, 51, 54, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 54), rnode(GIN, 51, 54, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 55), rnode(GIN, 51, 54, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 56), rnode(GIN, 51, 53, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 57), rnode(GIN, 51, 53, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 58), rnode(GIN, 51, 53, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 59), rnode(GIN, 51, 53, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 60), rnode(GIN, 51, 53, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 61), rnode(GIN, 51, 53, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 62), rnode(GIN, 51, 53, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 63), rnode(GIN, 51, 53, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 64), rnode(GIN, 51, 53, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 65), rnode(GIN, 51, 53, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 66), rnode(GIN, 51, 53, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 67), rnode(GIN, 51, 53, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 68), rnode(GIN, 51, 53, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 69), rnode(GIN, 51, 53, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 70), rnode(GIN, 51, 53, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 71), rnode(GIN, 51, 53, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 72), rnode(GIN, 51, 53, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 73), rnode(GIN, 51, 53, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 74), rnode(GIN, 51, 53, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 75), rnode(GIN, 51, 53, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 76), rnode(GIN, 51, 53, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 77), rnode(GIN, 51, 53, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 78), rnode(GIN, 51, 53, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_DATA, 3, 79), rnode(GIN, 51, 53, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_VALID, 0, -1), rnode(GIN, 51, 61, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_VALID, 1, -1), rnode(GIN, 51, 58, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_VALID, 2, -1), rnode(GIN, 51, 55, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, RD_VALID, 3, -1), rnode(GIN, 51, 53, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 0, 0), rnode(GIN, 51, 67, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 0, 1), rnode(GIN, 51, 67, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 0, 2), rnode(GIN, 51, 67, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 0, 3), rnode(GIN, 51, 67, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 0, 4), rnode(GIN, 51, 66, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 0, 5), rnode(GIN, 51, 66, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 0, 6), rnode(GIN, 51, 66, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 0, 7), rnode(GIN, 51, 66, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 0, 8), rnode(GIN, 51, 66, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 0, 9), rnode(GIN, 51, 66, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 1, 0), rnode(GIN, 51, 66, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 1, 1), rnode(GIN, 51, 66, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 1, 2), rnode(GIN, 51, 66, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 1, 3), rnode(GIN, 51, 66, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 1, 4), rnode(GIN, 51, 66, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 1, 5), rnode(GIN, 51, 66, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 1, 6), rnode(GIN, 51, 66, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 1, 7), rnode(GIN, 51, 66, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 1, 8), rnode(GIN, 51, 66, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 1, 9), rnode(GIN, 51, 66, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 2, 0), rnode(GIN, 51, 66, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 2, 1), rnode(GIN, 51, 66, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 2, 2), rnode(GIN, 51, 66, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 2, 3), rnode(GIN, 51, 66, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 2, 4), rnode(GIN, 51, 66, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 2, 5), rnode(GIN, 51, 66, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 2, 6), rnode(GIN, 51, 66, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 2, 7), rnode(GIN, 51, 66, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 2, 8), rnode(GIN, 51, 66, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 2, 9), rnode(GIN, 51, 66, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 3, 0), rnode(GIN, 51, 66, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 3, 1), rnode(GIN, 51, 65, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 3, 2), rnode(GIN, 51, 65, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 3, 3), rnode(GIN, 51, 65, 27) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 3, 4), rnode(GIN, 51, 65, 26) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 3, 5), rnode(GIN, 51, 65, 25) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 3, 6), rnode(GIN, 51, 65, 24) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 3, 7), rnode(GIN, 51, 65, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 3, 8), rnode(GIN, 51, 65, 22) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 3, 9), rnode(GIN, 51, 65, 21) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 4, 0), rnode(GIN, 51, 65, 19) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 4, 1), rnode(GIN, 51, 65, 18) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 4, 2), rnode(GIN, 51, 65, 17) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 4, 3), rnode(GIN, 51, 65, 16) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 4, 4), rnode(GIN, 51, 65, 15) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 4, 5), rnode(GIN, 51, 65, 14) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 4, 6), rnode(GIN, 51, 65, 13) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 4, 7), rnode(GIN, 51, 65, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 4, 8), rnode(GIN, 51, 65, 11) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 4, 9), rnode(GIN, 51, 65, 10) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 5, 0), rnode(GIN, 51, 65, 8) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 5, 1), rnode(GIN, 51, 65, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 5, 2), rnode(GIN, 51, 65, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 5, 3), rnode(GIN, 51, 65, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 5, 4), rnode(GIN, 51, 65, 4) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 5, 5), rnode(GIN, 51, 65, 3) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 5, 6), rnode(GIN, 51, 65, 2) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 5, 7), rnode(GIN, 51, 65, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 5, 8), rnode(GIN, 51, 65, 0) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_DATA, 5, 9), rnode(GIN, 51, 64, 29) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_VALID, 0, -1), rnode(GIN, 51, 66, 23) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_VALID, 1, -1), rnode(GIN, 51, 66, 12) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_VALID, 2, -1), rnode(GIN, 51, 66, 1) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_VALID, 3, -1), rnode(GIN, 51, 65, 20) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_VALID, 4, -1), rnode(GIN, 51, 65, 9) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WRACK_VALID, 5, -1), rnode(GIN, 51, 64, 28) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_READY, 0, -1), rnode(GIN, 51, 67, 7) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_READY, 1, -1), rnode(GIN, 51, 67, 6) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_READY, 2, -1), rnode(GIN, 51, 67, 5) },
  { pnode(HPS_FPGA2SDRAM, 52, 53, WR_READY, 3, -1), rnode(GIN, 51, 67, 4) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARREADY, -1, -1), rnode(GOUT, 51, 51, 45) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWREADY, -1, -1), rnode(GOUT, 51, 51, 44) },
  { pnode(HPS_HPS2FPGA, 52, 47, BID, -1, 0), rnode(GOUT, 51, 51, 43) },
  { pnode(HPS_HPS2FPGA, 52, 47, BID, -1, 1), rnode(GOUT, 51, 51, 40) },
  { pnode(HPS_HPS2FPGA, 52, 47, BID, -1, 2), rnode(GOUT, 51, 51, 39) },
  { pnode(HPS_HPS2FPGA, 52, 47, BID, -1, 3), rnode(GOUT, 51, 51, 38) },
  { pnode(HPS_HPS2FPGA, 52, 47, BID, -1, 4), rnode(GOUT, 51, 51, 37) },
  { pnode(HPS_HPS2FPGA, 52, 47, BID, -1, 5), rnode(GOUT, 51, 51, 36) },
  { pnode(HPS_HPS2FPGA, 52, 47, BID, -1, 6), rnode(GOUT, 51, 51, 35) },
  { pnode(HPS_HPS2FPGA, 52, 47, BID, -1, 7), rnode(GOUT, 51, 51, 34) },
  { pnode(HPS_HPS2FPGA, 52, 47, BID, -1, 8), rnode(GOUT, 51, 51, 33) },
  { pnode(HPS_HPS2FPGA, 52, 47, BID, -1, 9), rnode(GOUT, 51, 51, 32) },
  { pnode(HPS_HPS2FPGA, 52, 47, BID, -1, 10), rnode(GOUT, 51, 51, 42) },
  { pnode(HPS_HPS2FPGA, 52, 47, BID, -1, 11), rnode(GOUT, 51, 51, 41) },
  { pnode(HPS_HPS2FPGA, 52, 47, BRESP, -1, 0), rnode(GOUT, 51, 51, 31) },
  { pnode(HPS_HPS2FPGA, 52, 47, BRESP, -1, 1), rnode(GOUT, 51, 51, 30) },
  { pnode(HPS_HPS2FPGA, 52, 47, BVALID, -1, -1), rnode(GOUT, 51, 51, 29) },
  { pnode(HPS_HPS2FPGA, 52, 47, CLK, -1, -1), rnode(DCMUX, 51, 47, 1) },
  { pnode(HPS_HPS2FPGA, 52, 47, PORT_SIZE_CONFIG, -1, 0), rnode(GOUT, 51, 48, 39) },
  { pnode(HPS_HPS2FPGA, 52, 47, PORT_SIZE_CONFIG, -1, 1), rnode(GOUT, 51, 48, 38) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 0), rnode(GOUT, 51, 51, 28) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 1), rnode(GOUT, 51, 50, 41) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 2), rnode(GOUT, 51, 50, 30) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 3), rnode(GOUT, 51, 50, 19) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 4), rnode(GOUT, 51, 50, 8) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 5), rnode(GOUT, 51, 49, 49) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 6), rnode(GOUT, 51, 49, 38) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 7), rnode(GOUT, 51, 49, 27) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 8), rnode(GOUT, 51, 49, 16) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 9), rnode(GOUT, 51, 49, 5) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 10), rnode(GOUT, 51, 51, 17) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 11), rnode(GOUT, 51, 51, 6) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 12), rnode(GOUT, 51, 50, 49) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 13), rnode(GOUT, 51, 50, 48) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 14), rnode(GOUT, 51, 50, 47) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 15), rnode(GOUT, 51, 50, 46) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 16), rnode(GOUT, 51, 50, 45) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 17), rnode(GOUT, 51, 50, 44) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 18), rnode(GOUT, 51, 50, 43) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 19), rnode(GOUT, 51, 50, 42) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 20), rnode(GOUT, 51, 50, 40) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 21), rnode(GOUT, 51, 50, 39) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 22), rnode(GOUT, 51, 50, 38) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 23), rnode(GOUT, 51, 50, 37) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 24), rnode(GOUT, 51, 50, 36) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 25), rnode(GOUT, 51, 50, 35) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 26), rnode(GOUT, 51, 50, 34) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 27), rnode(GOUT, 51, 50, 33) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 28), rnode(GOUT, 51, 50, 32) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 29), rnode(GOUT, 51, 50, 31) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 30), rnode(GOUT, 51, 50, 29) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 31), rnode(GOUT, 51, 50, 28) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 32), rnode(GOUT, 51, 50, 27) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 33), rnode(GOUT, 51, 50, 26) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 34), rnode(GOUT, 51, 50, 25) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 35), rnode(GOUT, 51, 50, 24) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 36), rnode(GOUT, 51, 50, 23) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 37), rnode(GOUT, 51, 50, 22) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 38), rnode(GOUT, 51, 50, 21) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 39), rnode(GOUT, 51, 50, 20) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 40), rnode(GOUT, 51, 50, 18) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 41), rnode(GOUT, 51, 50, 17) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 42), rnode(GOUT, 51, 50, 16) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 43), rnode(GOUT, 51, 50, 15) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 44), rnode(GOUT, 51, 50, 14) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 45), rnode(GOUT, 51, 50, 13) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 46), rnode(GOUT, 51, 50, 12) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 47), rnode(GOUT, 51, 50, 11) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 48), rnode(GOUT, 51, 50, 10) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 49), rnode(GOUT, 51, 50, 9) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 50), rnode(GOUT, 51, 50, 7) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 51), rnode(GOUT, 51, 50, 6) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 52), rnode(GOUT, 51, 50, 5) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 53), rnode(GOUT, 51, 50, 4) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 54), rnode(GOUT, 51, 50, 3) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 55), rnode(GOUT, 51, 50, 2) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 56), rnode(GOUT, 51, 50, 1) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 57), rnode(GOUT, 51, 50, 0) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 58), rnode(GOUT, 51, 49, 51) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 59), rnode(GOUT, 51, 49, 50) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 60), rnode(GOUT, 51, 49, 48) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 61), rnode(GOUT, 51, 49, 47) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 62), rnode(GOUT, 51, 49, 46) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 63), rnode(GOUT, 51, 49, 45) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 64), rnode(GOUT, 51, 49, 44) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 65), rnode(GOUT, 51, 49, 43) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 66), rnode(GOUT, 51, 49, 42) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 67), rnode(GOUT, 51, 49, 41) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 68), rnode(GOUT, 51, 49, 40) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 69), rnode(GOUT, 51, 49, 39) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 70), rnode(GOUT, 51, 49, 37) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 71), rnode(GOUT, 51, 49, 36) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 72), rnode(GOUT, 51, 49, 35) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 73), rnode(GOUT, 51, 49, 34) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 74), rnode(GOUT, 51, 49, 33) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 75), rnode(GOUT, 51, 49, 32) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 76), rnode(GOUT, 51, 49, 31) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 77), rnode(GOUT, 51, 49, 30) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 78), rnode(GOUT, 51, 49, 29) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 79), rnode(GOUT, 51, 49, 28) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 80), rnode(GOUT, 51, 49, 26) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 81), rnode(GOUT, 51, 49, 25) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 82), rnode(GOUT, 51, 49, 24) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 83), rnode(GOUT, 51, 49, 23) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 84), rnode(GOUT, 51, 49, 22) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 85), rnode(GOUT, 51, 49, 21) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 86), rnode(GOUT, 51, 49, 20) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 87), rnode(GOUT, 51, 49, 19) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 88), rnode(GOUT, 51, 49, 18) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 89), rnode(GOUT, 51, 49, 17) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 90), rnode(GOUT, 51, 49, 15) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 91), rnode(GOUT, 51, 49, 14) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 92), rnode(GOUT, 51, 49, 13) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 93), rnode(GOUT, 51, 49, 12) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 94), rnode(GOUT, 51, 49, 11) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 95), rnode(GOUT, 51, 49, 10) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 96), rnode(GOUT, 51, 49, 9) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 97), rnode(GOUT, 51, 49, 8) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 98), rnode(GOUT, 51, 49, 7) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 99), rnode(GOUT, 51, 49, 6) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 100), rnode(GOUT, 51, 51, 27) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 101), rnode(GOUT, 51, 51, 26) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 102), rnode(GOUT, 51, 51, 25) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 103), rnode(GOUT, 51, 51, 24) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 104), rnode(GOUT, 51, 51, 23) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 105), rnode(GOUT, 51, 51, 22) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 106), rnode(GOUT, 51, 51, 21) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 107), rnode(GOUT, 51, 51, 20) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 108), rnode(GOUT, 51, 51, 19) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 109), rnode(GOUT, 51, 51, 18) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 110), rnode(GOUT, 51, 51, 16) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 111), rnode(GOUT, 51, 51, 15) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 112), rnode(GOUT, 51, 51, 14) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 113), rnode(GOUT, 51, 51, 13) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 114), rnode(GOUT, 51, 51, 12) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 115), rnode(GOUT, 51, 51, 11) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 116), rnode(GOUT, 51, 51, 10) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 117), rnode(GOUT, 51, 51, 9) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 118), rnode(GOUT, 51, 51, 8) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 119), rnode(GOUT, 51, 51, 7) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 120), rnode(GOUT, 51, 51, 5) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 121), rnode(GOUT, 51, 51, 4) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 122), rnode(GOUT, 51, 51, 3) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 123), rnode(GOUT, 51, 51, 2) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 124), rnode(GOUT, 51, 51, 1) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 125), rnode(GOUT, 51, 51, 0) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 126), rnode(GOUT, 51, 50, 51) },
  { pnode(HPS_HPS2FPGA, 52, 47, RDATA, -1, 127), rnode(GOUT, 51, 50, 50) },
  { pnode(HPS_HPS2FPGA, 52, 47, RID, -1, 0), rnode(GOUT, 51, 49, 4) },
  { pnode(HPS_HPS2FPGA, 52, 47, RID, -1, 1), rnode(GOUT, 51, 49, 1) },
  { pnode(HPS_HPS2FPGA, 52, 47, RID, -1, 2), rnode(GOUT, 51, 49, 0) },
  { pnode(HPS_HPS2FPGA, 52, 47, RID, -1, 3), rnode(GOUT, 51, 48, 51) },
  { pnode(HPS_HPS2FPGA, 52, 47, RID, -1, 4), rnode(GOUT, 51, 48, 50) },
  { pnode(HPS_HPS2FPGA, 52, 47, RID, -1, 5), rnode(GOUT, 51, 48, 49) },
  { pnode(HPS_HPS2FPGA, 52, 47, RID, -1, 6), rnode(GOUT, 51, 48, 48) },
  { pnode(HPS_HPS2FPGA, 52, 47, RID, -1, 7), rnode(GOUT, 51, 48, 47) },
  { pnode(HPS_HPS2FPGA, 52, 47, RID, -1, 8), rnode(GOUT, 51, 48, 46) },
  { pnode(HPS_HPS2FPGA, 52, 47, RID, -1, 9), rnode(GOUT, 51, 48, 45) },
  { pnode(HPS_HPS2FPGA, 52, 47, RID, -1, 10), rnode(GOUT, 51, 49, 3) },
  { pnode(HPS_HPS2FPGA, 52, 47, RID, -1, 11), rnode(GOUT, 51, 49, 2) },
  { pnode(HPS_HPS2FPGA, 52, 47, RLAST, -1, -1), rnode(GOUT, 51, 48, 44) },
  { pnode(HPS_HPS2FPGA, 52, 47, RRESP, -1, 0), rnode(GOUT, 51, 48, 43) },
  { pnode(HPS_HPS2FPGA, 52, 47, RRESP, -1, 1), rnode(GOUT, 51, 48, 42) },
  { pnode(HPS_HPS2FPGA, 52, 47, RVALID, -1, -1), rnode(GOUT, 51, 48, 41) },
  { pnode(HPS_HPS2FPGA, 52, 47, WREADY, -1, -1), rnode(GOUT, 51, 48, 40) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 0), rnode(GIN, 51, 51, 47) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 1), rnode(GIN, 51, 51, 36) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 2), rnode(GIN, 51, 51, 25) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 3), rnode(GIN, 51, 51, 24) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 4), rnode(GIN, 51, 51, 23) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 5), rnode(GIN, 51, 51, 22) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 6), rnode(GIN, 51, 51, 21) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 7), rnode(GIN, 51, 51, 20) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 8), rnode(GIN, 51, 51, 19) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 9), rnode(GIN, 51, 51, 18) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 10), rnode(GIN, 51, 51, 46) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 11), rnode(GIN, 51, 51, 45) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 12), rnode(GIN, 51, 51, 44) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 13), rnode(GIN, 51, 51, 43) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 14), rnode(GIN, 51, 51, 42) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 15), rnode(GIN, 51, 51, 41) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 16), rnode(GIN, 51, 51, 40) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 17), rnode(GIN, 51, 51, 39) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 18), rnode(GIN, 51, 51, 38) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 19), rnode(GIN, 51, 51, 37) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 20), rnode(GIN, 51, 51, 35) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 21), rnode(GIN, 51, 51, 34) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 22), rnode(GIN, 51, 51, 33) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 23), rnode(GIN, 51, 51, 32) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 24), rnode(GIN, 51, 51, 31) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 25), rnode(GIN, 51, 51, 30) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 26), rnode(GIN, 51, 51, 29) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 27), rnode(GIN, 51, 51, 28) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 28), rnode(GIN, 51, 51, 27) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARADDR, -1, 29), rnode(GIN, 51, 51, 26) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARBURST, -1, 0), rnode(GIN, 51, 51, 17) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARBURST, -1, 1), rnode(GIN, 51, 51, 16) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARCACHE, -1, 0), rnode(GIN, 51, 51, 15) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARCACHE, -1, 1), rnode(GIN, 51, 51, 14) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARCACHE, -1, 2), rnode(GIN, 51, 51, 13) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARCACHE, -1, 3), rnode(GIN, 51, 51, 12) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARID, -1, 0), rnode(GIN, 51, 51, 11) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARID, -1, 1), rnode(GIN, 51, 51, 8) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARID, -1, 2), rnode(GIN, 51, 51, 7) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARID, -1, 3), rnode(GIN, 51, 51, 6) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARID, -1, 4), rnode(GIN, 51, 51, 5) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARID, -1, 5), rnode(GIN, 51, 51, 4) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARID, -1, 6), rnode(GIN, 51, 51, 3) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARID, -1, 7), rnode(GIN, 51, 51, 2) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARID, -1, 8), rnode(GIN, 51, 51, 1) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARID, -1, 9), rnode(GIN, 51, 51, 0) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARID, -1, 10), rnode(GIN, 51, 51, 10) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARID, -1, 11), rnode(GIN, 51, 51, 9) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARLEN, -1, 0), rnode(GIN, 51, 50, 54) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARLEN, -1, 1), rnode(GIN, 51, 50, 53) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARLEN, -1, 2), rnode(GIN, 51, 50, 52) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARLEN, -1, 3), rnode(GIN, 51, 50, 51) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARLOCK, -1, 0), rnode(GIN, 51, 50, 50) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARLOCK, -1, 1), rnode(GIN, 51, 50, 49) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARPROT, -1, 0), rnode(GIN, 51, 50, 48) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARPROT, -1, 1), rnode(GIN, 51, 50, 47) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARPROT, -1, 2), rnode(GIN, 51, 50, 46) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARSIZE, -1, 0), rnode(GIN, 51, 50, 45) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARSIZE, -1, 1), rnode(GIN, 51, 50, 44) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARSIZE, -1, 2), rnode(GIN, 51, 50, 43) },
  { pnode(HPS_HPS2FPGA, 52, 47, ARVALID, -1, -1), rnode(GIN, 51, 50, 42) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 0), rnode(GIN, 51, 50, 41) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 1), rnode(GIN, 51, 50, 30) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 2), rnode(GIN, 51, 50, 19) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 3), rnode(GIN, 51, 50, 18) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 4), rnode(GIN, 51, 50, 17) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 5), rnode(GIN, 51, 50, 16) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 6), rnode(GIN, 51, 50, 15) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 7), rnode(GIN, 51, 50, 14) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 8), rnode(GIN, 51, 50, 13) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 9), rnode(GIN, 51, 50, 12) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 10), rnode(GIN, 51, 50, 40) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 11), rnode(GIN, 51, 50, 39) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 12), rnode(GIN, 51, 50, 38) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 13), rnode(GIN, 51, 50, 37) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 14), rnode(GIN, 51, 50, 36) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 15), rnode(GIN, 51, 50, 35) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 16), rnode(GIN, 51, 50, 34) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 17), rnode(GIN, 51, 50, 33) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 18), rnode(GIN, 51, 50, 32) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 19), rnode(GIN, 51, 50, 31) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 20), rnode(GIN, 51, 50, 29) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 21), rnode(GIN, 51, 50, 28) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 22), rnode(GIN, 51, 50, 27) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 23), rnode(GIN, 51, 50, 26) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 24), rnode(GIN, 51, 50, 25) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 25), rnode(GIN, 51, 50, 24) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 26), rnode(GIN, 51, 50, 23) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 27), rnode(GIN, 51, 50, 22) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 28), rnode(GIN, 51, 50, 21) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWADDR, -1, 29), rnode(GIN, 51, 50, 20) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWBURST, -1, 0), rnode(GIN, 51, 50, 11) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWBURST, -1, 1), rnode(GIN, 51, 50, 10) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWCACHE, -1, 0), rnode(GIN, 51, 50, 9) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWCACHE, -1, 1), rnode(GIN, 51, 50, 8) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWCACHE, -1, 2), rnode(GIN, 51, 50, 7) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWCACHE, -1, 3), rnode(GIN, 51, 50, 6) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWID, -1, 0), rnode(GIN, 51, 50, 5) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWID, -1, 1), rnode(GIN, 51, 50, 2) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWID, -1, 2), rnode(GIN, 51, 50, 1) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWID, -1, 3), rnode(GIN, 51, 50, 0) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWID, -1, 4), rnode(GIN, 51, 49, 54) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWID, -1, 5), rnode(GIN, 51, 49, 53) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWID, -1, 6), rnode(GIN, 51, 49, 52) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWID, -1, 7), rnode(GIN, 51, 49, 51) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWID, -1, 8), rnode(GIN, 51, 49, 50) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWID, -1, 9), rnode(GIN, 51, 49, 49) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWID, -1, 10), rnode(GIN, 51, 50, 4) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWID, -1, 11), rnode(GIN, 51, 50, 3) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWLEN, -1, 0), rnode(GIN, 51, 49, 48) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWLEN, -1, 1), rnode(GIN, 51, 49, 47) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWLEN, -1, 2), rnode(GIN, 51, 49, 46) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWLEN, -1, 3), rnode(GIN, 51, 49, 45) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWLOCK, -1, 0), rnode(GIN, 51, 49, 44) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWLOCK, -1, 1), rnode(GIN, 51, 49, 43) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWPROT, -1, 0), rnode(GIN, 51, 49, 42) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWPROT, -1, 1), rnode(GIN, 51, 49, 41) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWPROT, -1, 2), rnode(GIN, 51, 49, 40) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWSIZE, -1, 0), rnode(GIN, 51, 49, 39) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWSIZE, -1, 1), rnode(GIN, 51, 49, 38) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWSIZE, -1, 2), rnode(GIN, 51, 49, 37) },
  { pnode(HPS_HPS2FPGA, 52, 47, AWVALID, -1, -1), rnode(GIN, 51, 49, 36) },
  { pnode(HPS_HPS2FPGA, 52, 47, BREADY, -1, -1), rnode(GIN, 51, 49, 35) },
  { pnode(HPS_HPS2FPGA, 52, 47, RREADY, -1, -1), rnode(GIN, 51, 49, 34) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 0), rnode(GIN, 51, 49, 33) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 1), rnode(GIN, 51, 48, 49) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 2), rnode(GIN, 51, 48, 38) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 3), rnode(GIN, 51, 48, 27) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 4), rnode(GIN, 51, 48, 16) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 5), rnode(GIN, 51, 48, 5) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 6), rnode(GIN, 51, 47, 49) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 7), rnode(GIN, 51, 47, 38) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 8), rnode(GIN, 51, 47, 27) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 9), rnode(GIN, 51, 47, 16) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 10), rnode(GIN, 51, 49, 22) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 11), rnode(GIN, 51, 49, 11) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 12), rnode(GIN, 51, 49, 2) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 13), rnode(GIN, 51, 49, 1) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 14), rnode(GIN, 51, 49, 0) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 15), rnode(GIN, 51, 48, 54) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 16), rnode(GIN, 51, 48, 53) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 17), rnode(GIN, 51, 48, 52) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 18), rnode(GIN, 51, 48, 51) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 19), rnode(GIN, 51, 48, 50) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 20), rnode(GIN, 51, 48, 48) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 21), rnode(GIN, 51, 48, 47) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 22), rnode(GIN, 51, 48, 46) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 23), rnode(GIN, 51, 48, 45) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 24), rnode(GIN, 51, 48, 44) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 25), rnode(GIN, 51, 48, 43) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 26), rnode(GIN, 51, 48, 42) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 27), rnode(GIN, 51, 48, 41) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 28), rnode(GIN, 51, 48, 40) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 29), rnode(GIN, 51, 48, 39) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 30), rnode(GIN, 51, 48, 37) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 31), rnode(GIN, 51, 48, 36) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 32), rnode(GIN, 51, 48, 35) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 33), rnode(GIN, 51, 48, 34) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 34), rnode(GIN, 51, 48, 33) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 35), rnode(GIN, 51, 48, 32) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 36), rnode(GIN, 51, 48, 31) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 37), rnode(GIN, 51, 48, 30) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 38), rnode(GIN, 51, 48, 29) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 39), rnode(GIN, 51, 48, 28) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 40), rnode(GIN, 51, 48, 26) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 41), rnode(GIN, 51, 48, 25) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 42), rnode(GIN, 51, 48, 24) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 43), rnode(GIN, 51, 48, 23) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 44), rnode(GIN, 51, 48, 22) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 45), rnode(GIN, 51, 48, 21) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 46), rnode(GIN, 51, 48, 20) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 47), rnode(GIN, 51, 48, 19) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 48), rnode(GIN, 51, 48, 18) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 49), rnode(GIN, 51, 48, 17) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 50), rnode(GIN, 51, 48, 15) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 51), rnode(GIN, 51, 48, 14) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 52), rnode(GIN, 51, 48, 13) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 53), rnode(GIN, 51, 48, 12) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 54), rnode(GIN, 51, 48, 11) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 55), rnode(GIN, 51, 48, 10) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 56), rnode(GIN, 51, 48, 9) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 57), rnode(GIN, 51, 48, 8) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 58), rnode(GIN, 51, 48, 7) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 59), rnode(GIN, 51, 48, 6) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 60), rnode(GIN, 51, 48, 4) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 61), rnode(GIN, 51, 48, 3) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 62), rnode(GIN, 51, 48, 2) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 63), rnode(GIN, 51, 48, 1) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 64), rnode(GIN, 51, 48, 0) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 65), rnode(GIN, 51, 47, 54) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 66), rnode(GIN, 51, 47, 53) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 67), rnode(GIN, 51, 47, 52) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 68), rnode(GIN, 51, 47, 51) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 69), rnode(GIN, 51, 47, 50) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 70), rnode(GIN, 51, 47, 48) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 71), rnode(GIN, 51, 47, 47) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 72), rnode(GIN, 51, 47, 46) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 73), rnode(GIN, 51, 47, 45) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 74), rnode(GIN, 51, 47, 44) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 75), rnode(GIN, 51, 47, 43) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 76), rnode(GIN, 51, 47, 42) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 77), rnode(GIN, 51, 47, 41) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 78), rnode(GIN, 51, 47, 40) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 79), rnode(GIN, 51, 47, 39) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 80), rnode(GIN, 51, 47, 37) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 81), rnode(GIN, 51, 47, 36) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 82), rnode(GIN, 51, 47, 35) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 83), rnode(GIN, 51, 47, 34) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 84), rnode(GIN, 51, 47, 33) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 85), rnode(GIN, 51, 47, 32) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 86), rnode(GIN, 51, 47, 31) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 87), rnode(GIN, 51, 47, 30) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 88), rnode(GIN, 51, 47, 29) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 89), rnode(GIN, 51, 47, 28) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 90), rnode(GIN, 51, 47, 26) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 91), rnode(GIN, 51, 47, 25) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 92), rnode(GIN, 51, 47, 24) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 93), rnode(GIN, 51, 47, 23) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 94), rnode(GIN, 51, 47, 22) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 95), rnode(GIN, 51, 47, 21) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 96), rnode(GIN, 51, 47, 20) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 97), rnode(GIN, 51, 47, 19) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 98), rnode(GIN, 51, 47, 18) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 99), rnode(GIN, 51, 47, 17) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 100), rnode(GIN, 51, 49, 32) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 101), rnode(GIN, 51, 49, 31) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 102), rnode(GIN, 51, 49, 30) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 103), rnode(GIN, 51, 49, 29) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 104), rnode(GIN, 51, 49, 28) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 105), rnode(GIN, 51, 49, 27) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 106), rnode(GIN, 51, 49, 26) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 107), rnode(GIN, 51, 49, 25) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 108), rnode(GIN, 51, 49, 24) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 109), rnode(GIN, 51, 49, 23) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 110), rnode(GIN, 51, 49, 21) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 111), rnode(GIN, 51, 49, 20) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 112), rnode(GIN, 51, 49, 19) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 113), rnode(GIN, 51, 49, 18) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 114), rnode(GIN, 51, 49, 17) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 115), rnode(GIN, 51, 49, 16) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 116), rnode(GIN, 51, 49, 15) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 117), rnode(GIN, 51, 49, 14) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 118), rnode(GIN, 51, 49, 13) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 119), rnode(GIN, 51, 49, 12) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 120), rnode(GIN, 51, 49, 10) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 121), rnode(GIN, 51, 49, 9) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 122), rnode(GIN, 51, 49, 8) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 123), rnode(GIN, 51, 49, 7) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 124), rnode(GIN, 51, 49, 6) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 125), rnode(GIN, 51, 49, 5) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 126), rnode(GIN, 51, 49, 4) },
  { pnode(HPS_HPS2FPGA, 52, 47, WDATA, -1, 127), rnode(GIN, 51, 49, 3) },
  { pnode(HPS_HPS2FPGA, 52, 47, WID, -1, 0), rnode(GIN, 51, 47, 15) },
  { pnode(HPS_HPS2FPGA, 52, 47, WID, -1, 1), rnode(GIN, 51, 47, 12) },
  { pnode(HPS_HPS2FPGA, 52, 47, WID, -1, 2), rnode(GIN, 51, 47, 11) },
  { pnode(HPS_HPS2FPGA, 52, 47, WID, -1, 3), rnode(GIN, 51, 47, 10) },
  { pnode(HPS_HPS2FPGA, 52, 47, WID, -1, 4), rnode(GIN, 51, 47, 9) },
  { pnode(HPS_HPS2FPGA, 52, 47, WID, -1, 5), rnode(GIN, 51, 47, 8) },
  { pnode(HPS_HPS2FPGA, 52, 47, WID, -1, 6), rnode(GIN, 51, 47, 7) },
  { pnode(HPS_HPS2FPGA, 52, 47, WID, -1, 7), rnode(GIN, 51, 47, 6) },
  { pnode(HPS_HPS2FPGA, 52, 47, WID, -1, 8), rnode(GIN, 51, 47, 5) },
  { pnode(HPS_HPS2FPGA, 52, 47, WID, -1, 9), rnode(GIN, 51, 47, 4) },
  { pnode(HPS_HPS2FPGA, 52, 47, WID, -1, 10), rnode(GIN, 51, 47, 14) },
  { pnode(HPS_HPS2FPGA, 52, 47, WID, -1, 11), rnode(GIN, 51, 47, 13) },
  { pnode(HPS_HPS2FPGA, 52, 47, WLAST, -1, -1), rnode(GIN, 51, 47, 3) },
  { pnode(HPS_HPS2FPGA, 52, 47, WSTRB, -1, 0), rnode(GIN, 51, 47, 2) },
  { pnode(HPS_HPS2FPGA, 52, 47, WSTRB, -1, 1), rnode(GIN, 51, 46, 50) },
  { pnode(HPS_HPS2FPGA, 52, 47, WSTRB, -1, 2), rnode(GIN, 51, 46, 49) },
  { pnode(HPS_HPS2FPGA, 52, 47, WSTRB, -1, 3), rnode(GIN, 51, 46, 48) },
  { pnode(HPS_HPS2FPGA, 52, 47, WSTRB, -1, 4), rnode(GIN, 51, 46, 47) },
  { pnode(HPS_HPS2FPGA, 52, 47, WSTRB, -1, 5), rnode(GIN, 51, 46, 46) },
  { pnode(HPS_HPS2FPGA, 52, 47, WSTRB, -1, 6), rnode(GIN, 51, 46, 45) },
  { pnode(HPS_HPS2FPGA, 52, 47, WSTRB, -1, 7), rnode(GIN, 51, 46, 44) },
  { pnode(HPS_HPS2FPGA, 52, 47, WSTRB, -1, 8), rnode(GIN, 51, 46, 43) },
  { pnode(HPS_HPS2FPGA, 52, 47, WSTRB, -1, 9), rnode(GIN, 51, 46, 42) },
  { pnode(HPS_HPS2FPGA, 52, 47, WSTRB, -1, 10), rnode(GIN, 51, 47, 1) },
  { pnode(HPS_HPS2FPGA, 52, 47, WSTRB, -1, 11), rnode(GIN, 51, 47, 0) },
  { pnode(HPS_HPS2FPGA, 52, 47, WSTRB, -1, 12), rnode(GIN, 51, 46, 54) },
  { pnode(HPS_HPS2FPGA, 52, 47, WSTRB, -1, 13), rnode(GIN, 51, 46, 53) },
  { pnode(HPS_HPS2FPGA, 52, 47, WSTRB, -1, 14), rnode(GIN, 51, 46, 52) },
  { pnode(HPS_HPS2FPGA, 52, 47, WSTRB, -1, 15), rnode(GIN, 51, 46, 51) },
  { pnode(HPS_HPS2FPGA, 52, 47, WVALID, -1, -1), rnode(GIN, 51, 46, 41) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARREADY, -1, -1), rnode(GOUT, 51, 43, 9) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWREADY, -1, -1), rnode(GOUT, 51, 43, 8) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, BID, -1, 0), rnode(GOUT, 51, 43, 7) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, BID, -1, 1), rnode(GOUT, 51, 43, 4) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, BID, -1, 2), rnode(GOUT, 51, 43, 3) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, BID, -1, 3), rnode(GOUT, 51, 43, 2) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, BID, -1, 4), rnode(GOUT, 51, 43, 1) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, BID, -1, 5), rnode(GOUT, 51, 43, 0) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, BID, -1, 6), rnode(GOUT, 51, 42, 51) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, BID, -1, 7), rnode(GOUT, 51, 42, 50) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, BID, -1, 8), rnode(GOUT, 51, 42, 49) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, BID, -1, 9), rnode(GOUT, 51, 42, 48) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, BID, -1, 10), rnode(GOUT, 51, 43, 6) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, BID, -1, 11), rnode(GOUT, 51, 43, 5) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, BRESP, -1, 0), rnode(GOUT, 51, 42, 47) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, BRESP, -1, 1), rnode(GOUT, 51, 42, 46) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, BVALID, -1, -1), rnode(GOUT, 51, 42, 45) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, CLK, -1, -1), rnode(DCMUX, 51, 46, 1) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 0), rnode(GOUT, 51, 42, 44) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 1), rnode(GOUT, 51, 42, 33) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 2), rnode(GOUT, 51, 42, 22) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 3), rnode(GOUT, 51, 42, 19) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 4), rnode(GOUT, 51, 42, 18) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 5), rnode(GOUT, 51, 42, 17) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 6), rnode(GOUT, 51, 42, 16) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 7), rnode(GOUT, 51, 42, 15) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 8), rnode(GOUT, 51, 42, 14) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 9), rnode(GOUT, 51, 42, 13) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 10), rnode(GOUT, 51, 42, 43) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 11), rnode(GOUT, 51, 42, 42) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 12), rnode(GOUT, 51, 42, 41) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 13), rnode(GOUT, 51, 42, 40) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 14), rnode(GOUT, 51, 42, 39) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 15), rnode(GOUT, 51, 42, 38) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 16), rnode(GOUT, 51, 42, 37) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 17), rnode(GOUT, 51, 42, 36) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 18), rnode(GOUT, 51, 42, 35) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 19), rnode(GOUT, 51, 42, 34) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 20), rnode(GOUT, 51, 42, 32) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 21), rnode(GOUT, 51, 42, 31) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 22), rnode(GOUT, 51, 42, 30) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 23), rnode(GOUT, 51, 42, 29) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 24), rnode(GOUT, 51, 42, 28) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 25), rnode(GOUT, 51, 42, 27) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 26), rnode(GOUT, 51, 42, 26) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 27), rnode(GOUT, 51, 42, 25) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 28), rnode(GOUT, 51, 42, 24) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 29), rnode(GOUT, 51, 42, 23) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 30), rnode(GOUT, 51, 42, 21) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RDATA, -1, 31), rnode(GOUT, 51, 42, 20) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RID, -1, 0), rnode(GOUT, 51, 42, 12) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RID, -1, 1), rnode(GOUT, 51, 42, 9) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RID, -1, 2), rnode(GOUT, 51, 42, 8) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RID, -1, 3), rnode(GOUT, 51, 42, 7) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RID, -1, 4), rnode(GOUT, 51, 42, 6) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RID, -1, 5), rnode(GOUT, 51, 42, 5) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RID, -1, 6), rnode(GOUT, 51, 42, 4) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RID, -1, 7), rnode(GOUT, 51, 42, 3) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RID, -1, 8), rnode(GOUT, 51, 42, 2) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RID, -1, 9), rnode(GOUT, 51, 42, 1) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RID, -1, 10), rnode(GOUT, 51, 42, 11) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RID, -1, 11), rnode(GOUT, 51, 42, 10) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RLAST, -1, -1), rnode(GOUT, 51, 42, 0) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RRESP, -1, 0), rnode(GOUT, 51, 41, 51) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RRESP, -1, 1), rnode(GOUT, 51, 41, 50) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RVALID, -1, -1), rnode(GOUT, 51, 41, 49) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WREADY, -1, -1), rnode(GOUT, 51, 41, 48) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARADDR, -1, 0), rnode(GIN, 51, 43, 50) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARADDR, -1, 1), rnode(GIN, 51, 43, 39) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARADDR, -1, 2), rnode(GIN, 51, 43, 37) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARADDR, -1, 3), rnode(GIN, 51, 43, 36) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARADDR, -1, 4), rnode(GIN, 51, 43, 35) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARADDR, -1, 5), rnode(GIN, 51, 43, 34) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARADDR, -1, 6), rnode(GIN, 51, 43, 33) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARADDR, -1, 7), rnode(GIN, 51, 43, 32) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARADDR, -1, 8), rnode(GIN, 51, 43, 31) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARADDR, -1, 9), rnode(GIN, 51, 43, 30) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARADDR, -1, 10), rnode(GIN, 51, 43, 49) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARADDR, -1, 11), rnode(GIN, 51, 43, 48) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARADDR, -1, 12), rnode(GIN, 51, 43, 47) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARADDR, -1, 13), rnode(GIN, 51, 43, 46) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARADDR, -1, 14), rnode(GIN, 51, 43, 45) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARADDR, -1, 15), rnode(GIN, 51, 43, 44) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARADDR, -1, 16), rnode(GIN, 51, 43, 43) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARADDR, -1, 17), rnode(GIN, 51, 43, 42) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARADDR, -1, 18), rnode(GIN, 51, 43, 41) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARADDR, -1, 19), rnode(GIN, 51, 43, 40) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARADDR, -1, 20), rnode(GIN, 51, 43, 38) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARBURST, -1, 0), rnode(GIN, 51, 43, 29) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARBURST, -1, 1), rnode(GIN, 51, 43, 28) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARCACHE, -1, 0), rnode(GIN, 51, 43, 27) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARCACHE, -1, 1), rnode(GIN, 51, 43, 26) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARCACHE, -1, 2), rnode(GIN, 51, 43, 25) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARCACHE, -1, 3), rnode(GIN, 51, 43, 24) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARID, -1, 0), rnode(GIN, 51, 43, 23) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARID, -1, 1), rnode(GIN, 51, 43, 20) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARID, -1, 2), rnode(GIN, 51, 43, 19) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARID, -1, 3), rnode(GIN, 51, 43, 18) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARID, -1, 4), rnode(GIN, 51, 43, 17) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARID, -1, 5), rnode(GIN, 51, 43, 16) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARID, -1, 6), rnode(GIN, 51, 43, 15) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARID, -1, 7), rnode(GIN, 51, 43, 14) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARID, -1, 8), rnode(GIN, 51, 43, 13) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARID, -1, 9), rnode(GIN, 51, 43, 12) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARID, -1, 10), rnode(GIN, 51, 43, 22) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARID, -1, 11), rnode(GIN, 51, 43, 21) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARLEN, -1, 0), rnode(GIN, 51, 43, 11) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARLEN, -1, 1), rnode(GIN, 51, 43, 10) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARLEN, -1, 2), rnode(GIN, 51, 43, 9) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARLEN, -1, 3), rnode(GIN, 51, 43, 8) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARLOCK, -1, 0), rnode(GIN, 51, 43, 7) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARLOCK, -1, 1), rnode(GIN, 51, 43, 6) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARPROT, -1, 0), rnode(GIN, 51, 43, 5) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARPROT, -1, 1), rnode(GIN, 51, 43, 4) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARPROT, -1, 2), rnode(GIN, 51, 43, 3) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARSIZE, -1, 0), rnode(GIN, 51, 43, 2) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARSIZE, -1, 1), rnode(GIN, 51, 43, 1) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARSIZE, -1, 2), rnode(GIN, 51, 43, 0) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, ARVALID, -1, -1), rnode(GIN, 51, 42, 53) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWADDR, -1, 0), rnode(GIN, 51, 42, 52) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWADDR, -1, 1), rnode(GIN, 51, 42, 41) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWADDR, -1, 2), rnode(GIN, 51, 42, 39) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWADDR, -1, 3), rnode(GIN, 51, 42, 38) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWADDR, -1, 4), rnode(GIN, 51, 42, 37) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWADDR, -1, 5), rnode(GIN, 51, 42, 36) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWADDR, -1, 6), rnode(GIN, 51, 42, 35) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWADDR, -1, 7), rnode(GIN, 51, 42, 34) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWADDR, -1, 8), rnode(GIN, 51, 42, 33) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWADDR, -1, 9), rnode(GIN, 51, 42, 32) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWADDR, -1, 10), rnode(GIN, 51, 42, 51) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWADDR, -1, 11), rnode(GIN, 51, 42, 50) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWADDR, -1, 12), rnode(GIN, 51, 42, 49) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWADDR, -1, 13), rnode(GIN, 51, 42, 48) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWADDR, -1, 14), rnode(GIN, 51, 42, 47) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWADDR, -1, 15), rnode(GIN, 51, 42, 46) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWADDR, -1, 16), rnode(GIN, 51, 42, 45) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWADDR, -1, 17), rnode(GIN, 51, 42, 44) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWADDR, -1, 18), rnode(GIN, 51, 42, 43) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWADDR, -1, 19), rnode(GIN, 51, 42, 42) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWADDR, -1, 20), rnode(GIN, 51, 42, 40) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWBURST, -1, 0), rnode(GIN, 51, 42, 31) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWBURST, -1, 1), rnode(GIN, 51, 42, 30) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWCACHE, -1, 0), rnode(GIN, 51, 42, 29) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWCACHE, -1, 1), rnode(GIN, 51, 42, 28) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWCACHE, -1, 2), rnode(GIN, 51, 42, 27) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWCACHE, -1, 3), rnode(GIN, 51, 42, 26) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWID, -1, 0), rnode(GIN, 51, 42, 25) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWID, -1, 1), rnode(GIN, 51, 42, 22) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWID, -1, 2), rnode(GIN, 51, 42, 21) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWID, -1, 3), rnode(GIN, 51, 42, 20) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWID, -1, 4), rnode(GIN, 51, 42, 19) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWID, -1, 5), rnode(GIN, 51, 42, 18) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWID, -1, 6), rnode(GIN, 51, 42, 17) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWID, -1, 7), rnode(GIN, 51, 42, 16) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWID, -1, 8), rnode(GIN, 51, 42, 15) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWID, -1, 9), rnode(GIN, 51, 42, 14) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWID, -1, 10), rnode(GIN, 51, 42, 24) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWID, -1, 11), rnode(GIN, 51, 42, 23) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWLEN, -1, 0), rnode(GIN, 51, 42, 13) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWLEN, -1, 1), rnode(GIN, 51, 42, 12) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWLEN, -1, 2), rnode(GIN, 51, 42, 11) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWLEN, -1, 3), rnode(GIN, 51, 42, 10) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWLOCK, -1, 0), rnode(GIN, 51, 42, 9) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWLOCK, -1, 1), rnode(GIN, 51, 42, 8) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWPROT, -1, 0), rnode(GIN, 51, 42, 7) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWPROT, -1, 1), rnode(GIN, 51, 42, 6) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWPROT, -1, 2), rnode(GIN, 51, 42, 5) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWSIZE, -1, 0), rnode(GIN, 51, 42, 4) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWSIZE, -1, 1), rnode(GIN, 51, 42, 3) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWSIZE, -1, 2), rnode(GIN, 51, 42, 2) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, AWVALID, -1, -1), rnode(GIN, 51, 42, 1) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, BREADY, -1, -1), rnode(GIN, 51, 42, 0) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, RREADY, -1, -1), rnode(GIN, 51, 41, 53) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 0), rnode(GIN, 51, 41, 52) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 1), rnode(GIN, 51, 41, 41) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 2), rnode(GIN, 51, 41, 30) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 3), rnode(GIN, 51, 41, 27) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 4), rnode(GIN, 51, 41, 26) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 5), rnode(GIN, 51, 41, 25) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 6), rnode(GIN, 51, 41, 24) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 7), rnode(GIN, 51, 41, 23) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 8), rnode(GIN, 51, 41, 22) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 9), rnode(GIN, 51, 41, 21) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 10), rnode(GIN, 51, 41, 51) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 11), rnode(GIN, 51, 41, 50) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 12), rnode(GIN, 51, 41, 49) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 13), rnode(GIN, 51, 41, 48) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 14), rnode(GIN, 51, 41, 47) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 15), rnode(GIN, 51, 41, 46) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 16), rnode(GIN, 51, 41, 45) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 17), rnode(GIN, 51, 41, 44) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 18), rnode(GIN, 51, 41, 43) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 19), rnode(GIN, 51, 41, 42) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 20), rnode(GIN, 51, 41, 40) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 21), rnode(GIN, 51, 41, 39) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 22), rnode(GIN, 51, 41, 38) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 23), rnode(GIN, 51, 41, 37) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 24), rnode(GIN, 51, 41, 36) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 25), rnode(GIN, 51, 41, 35) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 26), rnode(GIN, 51, 41, 34) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 27), rnode(GIN, 51, 41, 33) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 28), rnode(GIN, 51, 41, 32) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 29), rnode(GIN, 51, 41, 31) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 30), rnode(GIN, 51, 41, 29) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WDATA, -1, 31), rnode(GIN, 51, 41, 28) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WID, -1, 0), rnode(GIN, 51, 41, 20) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WID, -1, 1), rnode(GIN, 51, 41, 17) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WID, -1, 2), rnode(GIN, 51, 41, 16) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WID, -1, 3), rnode(GIN, 51, 41, 15) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WID, -1, 4), rnode(GIN, 51, 41, 14) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WID, -1, 5), rnode(GIN, 51, 41, 13) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WID, -1, 6), rnode(GIN, 51, 41, 12) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WID, -1, 7), rnode(GIN, 51, 41, 11) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WID, -1, 8), rnode(GIN, 51, 41, 10) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WID, -1, 9), rnode(GIN, 51, 41, 9) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WID, -1, 10), rnode(GIN, 51, 41, 19) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WID, -1, 11), rnode(GIN, 51, 41, 18) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WLAST, -1, -1), rnode(GIN, 51, 41, 8) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WSTRB, -1, 0), rnode(GIN, 51, 41, 7) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WSTRB, -1, 1), rnode(GIN, 51, 41, 6) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WSTRB, -1, 2), rnode(GIN, 51, 41, 5) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WSTRB, -1, 3), rnode(GIN, 51, 41, 4) },
  { pnode(HPS_HPS2FPGA_LIGHT_WEIGHT, 52, 43, WVALID, -1, -1), rnode(GIN, 51, 41, 3) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 0), rnode(GOUT, 51, 40, 11) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 1), rnode(GOUT, 51, 40, 0) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 2), rnode(GOUT, 51, 39, 41) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 3), rnode(GOUT, 51, 39, 30) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 4), rnode(GOUT, 51, 39, 19) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 5), rnode(GOUT, 51, 39, 8) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 6), rnode(GOUT, 51, 39, 3) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 7), rnode(GOUT, 51, 39, 2) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 8), rnode(GOUT, 51, 39, 1) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 9), rnode(GOUT, 51, 39, 0) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 10), rnode(GOUT, 51, 40, 10) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 11), rnode(GOUT, 51, 40, 9) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 12), rnode(GOUT, 51, 40, 8) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 13), rnode(GOUT, 51, 40, 7) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 14), rnode(GOUT, 51, 40, 6) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 15), rnode(GOUT, 51, 40, 5) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 16), rnode(GOUT, 51, 40, 4) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 17), rnode(GOUT, 51, 40, 3) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 18), rnode(GOUT, 51, 40, 2) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 19), rnode(GOUT, 51, 40, 1) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 20), rnode(GOUT, 51, 39, 51) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 21), rnode(GOUT, 51, 39, 50) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 22), rnode(GOUT, 51, 39, 49) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 23), rnode(GOUT, 51, 39, 48) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 24), rnode(GOUT, 51, 39, 47) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 25), rnode(GOUT, 51, 39, 46) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 26), rnode(GOUT, 51, 39, 45) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 27), rnode(GOUT, 51, 39, 44) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 28), rnode(GOUT, 51, 39, 43) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 29), rnode(GOUT, 51, 39, 42) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 30), rnode(GOUT, 51, 39, 40) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 31), rnode(GOUT, 51, 39, 39) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 32), rnode(GOUT, 51, 39, 38) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 33), rnode(GOUT, 51, 39, 37) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 34), rnode(GOUT, 51, 39, 36) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 35), rnode(GOUT, 51, 39, 35) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 36), rnode(GOUT, 51, 39, 34) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 37), rnode(GOUT, 51, 39, 33) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 38), rnode(GOUT, 51, 39, 32) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 39), rnode(GOUT, 51, 39, 31) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 40), rnode(GOUT, 51, 39, 29) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 41), rnode(GOUT, 51, 39, 28) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 42), rnode(GOUT, 51, 39, 27) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 43), rnode(GOUT, 51, 39, 26) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 44), rnode(GOUT, 51, 39, 25) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 45), rnode(GOUT, 51, 39, 24) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 46), rnode(GOUT, 51, 39, 23) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 47), rnode(GOUT, 51, 39, 22) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 48), rnode(GOUT, 51, 39, 21) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 49), rnode(GOUT, 51, 39, 20) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 50), rnode(GOUT, 51, 39, 18) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 51), rnode(GOUT, 51, 39, 17) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 52), rnode(GOUT, 51, 39, 16) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 53), rnode(GOUT, 51, 39, 15) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 54), rnode(GOUT, 51, 39, 14) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 55), rnode(GOUT, 51, 39, 13) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 56), rnode(GOUT, 51, 39, 12) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 57), rnode(GOUT, 51, 39, 11) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 58), rnode(GOUT, 51, 39, 10) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 59), rnode(GOUT, 51, 39, 9) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 60), rnode(GOUT, 51, 39, 7) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 61), rnode(GOUT, 51, 39, 6) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 62), rnode(GOUT, 51, 39, 5) },
  { pnode(HPS_INTERRUPTS, 52, 40, IRQ, -1, 63), rnode(GOUT, 51, 39, 4) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_CAN_IRQ, 0, -1), rnode(GIN, 51, 80, 38) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_CAN_IRQ, 1, -1), rnode(GIN, 51, 80, 37) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_CLKMGR_IRQ, -1, -1), rnode(GIN, 51, 59, 31) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_CTI_IRQ_N, 0, -1), rnode(GIN, 51, 60, 41) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_CTI_IRQ_N, 1, -1), rnode(GIN, 51, 60, 40) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_DMA_ABORT_IRQ, -1, -1), rnode(GIN, 51, 59, 37) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_DMA_IRQ, 0, -1), rnode(GIN, 51, 79, 35) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_DMA_IRQ, 1, -1), rnode(GIN, 51, 78, 34) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_DMA_IRQ, 2, -1), rnode(GIN, 51, 76, 33) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_DMA_IRQ, 3, -1), rnode(GIN, 51, 74, 36) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_DMA_IRQ, 4, -1), rnode(GIN, 51, 77, 31) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_DMA_IRQ, 5, -1), rnode(GIN, 51, 77, 30) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_DMA_IRQ, 6, -1), rnode(GIN, 51, 77, 29) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_DMA_IRQ, 7, -1), rnode(GIN, 51, 76, 32) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_EMAC_IRQ, 0, -1), rnode(GIN, 51, 59, 36) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_EMAC_IRQ, 1, -1), rnode(GIN, 51, 59, 35) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_FPGA_MAN_IRQ, -1, -1), rnode(GIN, 51, 80, 36) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_GPIO_IRQ, 0, -1), rnode(GIN, 51, 40, 54) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_GPIO_IRQ, 1, -1), rnode(GIN, 51, 39, 61) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_GPIO_IRQ, 2, -1), rnode(GIN, 51, 39, 60) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_I2C_IRQ, 0, -1), rnode(GIN, 51, 40, 61) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_I2C_IRQ, 1, -1), rnode(GIN, 51, 40, 60) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_I2C_EMAC_IRQ, 0, -1), rnode(GIN, 51, 40, 59) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_I2C_EMAC_IRQ, 1, -1), rnode(GIN, 51, 40, 58) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_L4SP_IRQ, 0, -1), rnode(GIN, 51, 39, 59) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_L4SP_IRQ, 1, -1), rnode(GIN, 51, 39, 58) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_MPUWAKEUP_IRQ, -1, -1), rnode(GIN, 51, 46, 56) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_NAND_IRQ, -1, -1), rnode(GIN, 51, 43, 62) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_OSC_IRQ, 0, -1), rnode(GIN, 51, 39, 57) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_OSC_IRQ, 1, -1), rnode(GIN, 51, 39, 56) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_QSPI_IRQ, -1, -1), rnode(GIN, 51, 42, 60) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_SDMMC_IRQ, -1, -1), rnode(GIN, 51, 45, 55) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_SPI_IRQ, 0, -1), rnode(GIN, 51, 41, 58) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_SPI_IRQ, 1, -1), rnode(GIN, 51, 40, 56) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_SPI_IRQ, 2, -1), rnode(GIN, 51, 40, 62) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_SPI_IRQ, 3, -1), rnode(GIN, 51, 60, 39) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_UART_IRQ, 0, -1), rnode(GIN, 51, 40, 57) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_UART_IRQ, 1, -1), rnode(GIN, 51, 40, 55) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_USB_IRQ, 0, -1), rnode(GIN, 51, 59, 34) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_USB_IRQ, 1, -1), rnode(GIN, 51, 59, 33) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_WDOG_IRQ, 0, -1), rnode(GIN, 51, 39, 55) },
  { pnode(HPS_INTERRUPTS, 52, 40, H2F_WDOG_IRQ, 1, -1), rnode(GIN, 51, 39, 54) },
  { pnode(HPS_JTAG, 52, 75, NENAB_JTAG, -1, -1), rnode(GIN, 51, 76, 3) },
  { pnode(HPS_JTAG, 52, 75, NTRST, -1, -1), rnode(GIN, 51, 76, 7) },
  { pnode(HPS_JTAG, 52, 75, TCK, -1, -1), rnode(GIN, 51, 76, 6) },
  { pnode(HPS_JTAG, 52, 75, TDI, -1, -1), rnode(GIN, 51, 76, 5) },
  { pnode(HPS_JTAG, 52, 75, TMS, -1, -1), rnode(GIN, 51, 76, 4) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 0), rnode(GOUT, 51, 74, 23) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 1), rnode(GOUT, 51, 74, 22) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 2), rnode(GOUT, 51, 74, 11) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 3), rnode(GOUT, 51, 74, 0) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 4), rnode(GOUT, 51, 73, 30) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 5), rnode(GOUT, 51, 73, 19) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 6), rnode(GOUT, 51, 73, 8) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 7), rnode(GOUT, 51, 72, 37) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 8), rnode(GOUT, 51, 72, 35) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 9), rnode(GOUT, 51, 72, 34) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 10), rnode(GOUT, 51, 74, 21) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 11), rnode(GOUT, 51, 74, 20) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 12), rnode(GOUT, 51, 74, 19) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 13), rnode(GOUT, 51, 74, 18) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 14), rnode(GOUT, 51, 74, 17) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 15), rnode(GOUT, 51, 74, 16) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 16), rnode(GOUT, 51, 74, 15) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 17), rnode(GOUT, 51, 74, 14) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 18), rnode(GOUT, 51, 74, 13) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 19), rnode(GOUT, 51, 74, 12) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 20), rnode(GOUT, 51, 74, 10) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 21), rnode(GOUT, 51, 74, 9) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 22), rnode(GOUT, 51, 74, 8) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 23), rnode(GOUT, 51, 74, 7) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 24), rnode(GOUT, 51, 74, 6) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 25), rnode(GOUT, 51, 74, 5) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 26), rnode(GOUT, 51, 74, 4) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 27), rnode(GOUT, 51, 74, 3) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 28), rnode(GOUT, 51, 74, 2) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 29), rnode(GOUT, 51, 74, 1) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 30), rnode(GOUT, 51, 73, 40) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 31), rnode(GOUT, 51, 73, 39) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 32), rnode(GOUT, 51, 73, 38) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 33), rnode(GOUT, 51, 73, 37) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 34), rnode(GOUT, 51, 73, 36) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 35), rnode(GOUT, 51, 73, 35) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 36), rnode(GOUT, 51, 73, 34) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 37), rnode(GOUT, 51, 73, 33) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 38), rnode(GOUT, 51, 73, 32) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 39), rnode(GOUT, 51, 73, 31) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 40), rnode(GOUT, 51, 73, 29) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 41), rnode(GOUT, 51, 73, 28) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 42), rnode(GOUT, 51, 73, 27) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 43), rnode(GOUT, 51, 73, 26) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 44), rnode(GOUT, 51, 73, 25) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 45), rnode(GOUT, 51, 73, 24) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 46), rnode(GOUT, 51, 73, 23) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 47), rnode(GOUT, 51, 73, 22) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 48), rnode(GOUT, 51, 73, 21) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 49), rnode(GOUT, 51, 73, 20) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 50), rnode(GOUT, 51, 73, 18) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 51), rnode(GOUT, 51, 73, 17) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 52), rnode(GOUT, 51, 73, 16) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 53), rnode(GOUT, 51, 73, 15) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 54), rnode(GOUT, 51, 73, 14) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 55), rnode(GOUT, 51, 73, 13) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 56), rnode(GOUT, 51, 73, 12) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 57), rnode(GOUT, 51, 73, 11) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 58), rnode(GOUT, 51, 73, 10) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 59), rnode(GOUT, 51, 73, 9) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 60), rnode(GOUT, 51, 73, 7) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 61), rnode(GOUT, 51, 73, 6) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 62), rnode(GOUT, 51, 73, 5) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 63), rnode(GOUT, 51, 73, 4) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 64), rnode(GOUT, 51, 73, 3) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 65), rnode(GOUT, 51, 73, 2) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 66), rnode(GOUT, 51, 73, 1) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 67), rnode(GOUT, 51, 73, 0) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 68), rnode(GOUT, 51, 72, 39) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 69), rnode(GOUT, 51, 72, 38) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OE, -1, 70), rnode(GOUT, 51, 72, 36) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 0), rnode(GOUT, 51, 72, 33) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 1), rnode(GOUT, 51, 72, 32) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 2), rnode(GOUT, 51, 72, 21) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 3), rnode(GOUT, 51, 72, 10) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 4), rnode(GOUT, 51, 71, 39) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 5), rnode(GOUT, 51, 71, 28) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 6), rnode(GOUT, 51, 71, 17) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 7), rnode(GOUT, 51, 71, 6) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 8), rnode(GOUT, 51, 71, 4) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 9), rnode(GOUT, 51, 71, 3) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 10), rnode(GOUT, 51, 72, 31) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 11), rnode(GOUT, 51, 72, 30) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 12), rnode(GOUT, 51, 72, 29) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 13), rnode(GOUT, 51, 72, 28) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 14), rnode(GOUT, 51, 72, 27) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 15), rnode(GOUT, 51, 72, 26) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 16), rnode(GOUT, 51, 72, 25) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 17), rnode(GOUT, 51, 72, 24) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 18), rnode(GOUT, 51, 72, 23) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 19), rnode(GOUT, 51, 72, 22) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 20), rnode(GOUT, 51, 72, 20) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 21), rnode(GOUT, 51, 72, 19) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 22), rnode(GOUT, 51, 72, 18) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 23), rnode(GOUT, 51, 72, 17) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 24), rnode(GOUT, 51, 72, 16) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 25), rnode(GOUT, 51, 72, 15) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 26), rnode(GOUT, 51, 72, 14) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 27), rnode(GOUT, 51, 72, 13) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 28), rnode(GOUT, 51, 72, 12) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 29), rnode(GOUT, 51, 72, 11) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 30), rnode(GOUT, 51, 72, 9) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 31), rnode(GOUT, 51, 72, 8) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 32), rnode(GOUT, 51, 72, 7) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 33), rnode(GOUT, 51, 72, 6) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 34), rnode(GOUT, 51, 72, 5) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 35), rnode(GOUT, 51, 72, 4) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 36), rnode(GOUT, 51, 72, 3) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 37), rnode(GOUT, 51, 72, 2) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 38), rnode(GOUT, 51, 72, 1) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 39), rnode(GOUT, 51, 72, 0) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 40), rnode(GOUT, 51, 71, 38) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 41), rnode(GOUT, 51, 71, 37) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 42), rnode(GOUT, 51, 71, 36) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 43), rnode(GOUT, 51, 71, 35) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 44), rnode(GOUT, 51, 71, 34) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 45), rnode(GOUT, 51, 71, 33) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 46), rnode(GOUT, 51, 71, 32) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 47), rnode(GOUT, 51, 71, 31) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 48), rnode(GOUT, 51, 71, 30) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 49), rnode(GOUT, 51, 71, 29) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 50), rnode(GOUT, 51, 71, 27) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 51), rnode(GOUT, 51, 71, 26) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 52), rnode(GOUT, 51, 71, 25) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 53), rnode(GOUT, 51, 71, 24) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 54), rnode(GOUT, 51, 71, 23) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 55), rnode(GOUT, 51, 71, 22) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 56), rnode(GOUT, 51, 71, 21) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 57), rnode(GOUT, 51, 71, 20) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 58), rnode(GOUT, 51, 71, 19) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 59), rnode(GOUT, 51, 71, 18) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 60), rnode(GOUT, 51, 71, 16) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 61), rnode(GOUT, 51, 71, 15) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 62), rnode(GOUT, 51, 71, 14) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 63), rnode(GOUT, 51, 71, 13) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 64), rnode(GOUT, 51, 71, 12) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 65), rnode(GOUT, 51, 71, 11) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 66), rnode(GOUT, 51, 71, 10) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 67), rnode(GOUT, 51, 71, 9) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 68), rnode(GOUT, 51, 71, 8) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 69), rnode(GOUT, 51, 71, 7) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_OUT, -1, 70), rnode(GOUT, 51, 71, 5) },
  { pnode(HPS_LOAN_IO, 52, 62, INPUT_ONLY, -1, 0), rnode(GIN, 51, 64, 7) },
  { pnode(HPS_LOAN_IO, 52, 62, INPUT_ONLY, -1, 1), rnode(GIN, 51, 64, 2) },
  { pnode(HPS_LOAN_IO, 52, 62, INPUT_ONLY, -1, 2), rnode(GIN, 51, 64, 1) },
  { pnode(HPS_LOAN_IO, 52, 62, INPUT_ONLY, -1, 3), rnode(GIN, 51, 64, 0) },
  { pnode(HPS_LOAN_IO, 52, 62, INPUT_ONLY, -1, 4), rnode(GIN, 51, 63, 29) },
  { pnode(HPS_LOAN_IO, 52, 62, INPUT_ONLY, -1, 5), rnode(GIN, 51, 63, 28) },
  { pnode(HPS_LOAN_IO, 52, 62, INPUT_ONLY, -1, 6), rnode(GIN, 51, 63, 27) },
  { pnode(HPS_LOAN_IO, 52, 62, INPUT_ONLY, -1, 7), rnode(GIN, 51, 63, 26) },
  { pnode(HPS_LOAN_IO, 52, 62, INPUT_ONLY, -1, 8), rnode(GIN, 51, 63, 25) },
  { pnode(HPS_LOAN_IO, 52, 62, INPUT_ONLY, -1, 9), rnode(GIN, 51, 63, 24) },
  { pnode(HPS_LOAN_IO, 52, 62, INPUT_ONLY, -1, 10), rnode(GIN, 51, 64, 6) },
  { pnode(HPS_LOAN_IO, 52, 62, INPUT_ONLY, -1, 11), rnode(GIN, 51, 64, 5) },
  { pnode(HPS_LOAN_IO, 52, 62, INPUT_ONLY, -1, 12), rnode(GIN, 51, 64, 4) },
  { pnode(HPS_LOAN_IO, 52, 62, INPUT_ONLY, -1, 13), rnode(GIN, 51, 64, 3) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 0), rnode(GIN, 51, 73, 22) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 1), rnode(GIN, 51, 73, 21) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 2), rnode(GIN, 51, 73, 10) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 3), rnode(GIN, 51, 72, 32) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 4), rnode(GIN, 51, 72, 21) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 5), rnode(GIN, 51, 72, 10) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 6), rnode(GIN, 51, 71, 32) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 7), rnode(GIN, 51, 71, 21) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 8), rnode(GIN, 51, 71, 19) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 9), rnode(GIN, 51, 71, 18) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 10), rnode(GIN, 51, 73, 20) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 11), rnode(GIN, 51, 73, 19) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 12), rnode(GIN, 51, 73, 18) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 13), rnode(GIN, 51, 73, 17) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 14), rnode(GIN, 51, 73, 16) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 15), rnode(GIN, 51, 73, 15) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 16), rnode(GIN, 51, 73, 14) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 17), rnode(GIN, 51, 73, 13) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 18), rnode(GIN, 51, 73, 12) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 19), rnode(GIN, 51, 73, 11) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 20), rnode(GIN, 51, 73, 9) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 21), rnode(GIN, 51, 73, 8) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 22), rnode(GIN, 51, 73, 7) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 23), rnode(GIN, 51, 73, 6) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 24), rnode(GIN, 51, 73, 5) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 25), rnode(GIN, 51, 73, 4) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 26), rnode(GIN, 51, 73, 3) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 27), rnode(GIN, 51, 73, 2) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 28), rnode(GIN, 51, 73, 1) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 29), rnode(GIN, 51, 73, 0) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 30), rnode(GIN, 51, 72, 31) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 31), rnode(GIN, 51, 72, 30) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 32), rnode(GIN, 51, 72, 29) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 33), rnode(GIN, 51, 72, 28) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 34), rnode(GIN, 51, 72, 27) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 35), rnode(GIN, 51, 72, 26) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 36), rnode(GIN, 51, 72, 25) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 37), rnode(GIN, 51, 72, 24) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 38), rnode(GIN, 51, 72, 23) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 39), rnode(GIN, 51, 72, 22) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 40), rnode(GIN, 51, 72, 20) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 41), rnode(GIN, 51, 72, 19) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 42), rnode(GIN, 51, 72, 18) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 43), rnode(GIN, 51, 72, 17) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 44), rnode(GIN, 51, 72, 16) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 45), rnode(GIN, 51, 72, 15) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 46), rnode(GIN, 51, 72, 14) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 47), rnode(GIN, 51, 72, 13) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 48), rnode(GIN, 51, 72, 12) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 49), rnode(GIN, 51, 72, 11) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 50), rnode(GIN, 51, 72, 9) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 51), rnode(GIN, 51, 72, 8) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 52), rnode(GIN, 51, 72, 7) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 53), rnode(GIN, 51, 72, 6) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 54), rnode(GIN, 51, 72, 5) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 55), rnode(GIN, 51, 72, 4) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 56), rnode(GIN, 51, 72, 3) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 57), rnode(GIN, 51, 72, 2) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 58), rnode(GIN, 51, 72, 1) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 59), rnode(GIN, 51, 72, 0) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 60), rnode(GIN, 51, 71, 31) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 61), rnode(GIN, 51, 71, 30) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 62), rnode(GIN, 51, 71, 29) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 63), rnode(GIN, 51, 71, 28) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 64), rnode(GIN, 51, 71, 27) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 65), rnode(GIN, 51, 71, 26) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 66), rnode(GIN, 51, 71, 25) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 67), rnode(GIN, 51, 71, 24) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 68), rnode(GIN, 51, 71, 23) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 69), rnode(GIN, 51, 71, 22) },
  { pnode(HPS_LOAN_IO, 52, 62, LOANIO_IN, -1, 70), rnode(GIN, 51, 71, 20) },
  { pnode(HPS_MPU_EVENT_STANDBY, 52, 49, EVENTI, -1, -1), rnode(GOUT, 51, 51, 52) },
  { pnode(HPS_MPU_EVENT_STANDBY, 52, 49, EVENTO, -1, -1), rnode(GIN, 51, 51, 54) },
  { pnode(HPS_MPU_EVENT_STANDBY, 52, 49, STANDBYWFE, -1, 0), rnode(GIN, 51, 51, 53) },
  { pnode(HPS_MPU_EVENT_STANDBY, 52, 49, STANDBYWFE, -1, 1), rnode(GIN, 51, 51, 52) },
  { pnode(HPS_MPU_EVENT_STANDBY, 52, 49, STANDBYWFI, -1, 0), rnode(GIN, 51, 51, 51) },
  { pnode(HPS_MPU_EVENT_STANDBY, 52, 49, STANDBYWFI, -1, 1), rnode(GIN, 51, 51, 50) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 0), rnode(GOUT, 51, 77, 0) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 1), rnode(GOUT, 51, 76, 34) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 2), rnode(GOUT, 51, 76, 23) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 3), rnode(GOUT, 51, 76, 20) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 4), rnode(GOUT, 51, 76, 19) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 5), rnode(GOUT, 51, 76, 18) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 6), rnode(GOUT, 51, 76, 17) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 7), rnode(GOUT, 51, 76, 16) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 8), rnode(GOUT, 51, 76, 15) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 9), rnode(GOUT, 51, 76, 14) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 10), rnode(GOUT, 51, 76, 44) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 11), rnode(GOUT, 51, 76, 43) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 12), rnode(GOUT, 51, 76, 42) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 13), rnode(GOUT, 51, 76, 41) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 14), rnode(GOUT, 51, 76, 40) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 15), rnode(GOUT, 51, 76, 39) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 16), rnode(GOUT, 51, 76, 38) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 17), rnode(GOUT, 51, 76, 37) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 18), rnode(GOUT, 51, 76, 36) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 19), rnode(GOUT, 51, 76, 35) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 20), rnode(GOUT, 51, 76, 33) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 21), rnode(GOUT, 51, 76, 32) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 22), rnode(GOUT, 51, 76, 31) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 23), rnode(GOUT, 51, 76, 30) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 24), rnode(GOUT, 51, 76, 29) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 25), rnode(GOUT, 51, 76, 28) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 26), rnode(GOUT, 51, 76, 27) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 27), rnode(GOUT, 51, 76, 26) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 28), rnode(GOUT, 51, 76, 25) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 29), rnode(GOUT, 51, 76, 24) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 30), rnode(GOUT, 51, 76, 22) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_IN, -1, 31), rnode(GOUT, 51, 76, 21) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 0), rnode(GIN, 51, 77, 11) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 1), rnode(GIN, 51, 77, 0) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 2), rnode(GIN, 51, 76, 18) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 3), rnode(GIN, 51, 76, 15) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 4), rnode(GIN, 51, 76, 14) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 5), rnode(GIN, 51, 76, 13) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 6), rnode(GIN, 51, 76, 12) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 7), rnode(GIN, 51, 76, 11) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 8), rnode(GIN, 51, 76, 10) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 9), rnode(GIN, 51, 76, 9) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 10), rnode(GIN, 51, 77, 10) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 11), rnode(GIN, 51, 77, 9) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 12), rnode(GIN, 51, 77, 8) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 13), rnode(GIN, 51, 77, 7) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 14), rnode(GIN, 51, 77, 6) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 15), rnode(GIN, 51, 77, 5) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 16), rnode(GIN, 51, 77, 4) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 17), rnode(GIN, 51, 77, 3) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 18), rnode(GIN, 51, 77, 2) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 19), rnode(GIN, 51, 77, 1) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 20), rnode(GIN, 51, 76, 28) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 21), rnode(GIN, 51, 76, 27) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 22), rnode(GIN, 51, 76, 26) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 23), rnode(GIN, 51, 76, 25) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 24), rnode(GIN, 51, 76, 24) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 25), rnode(GIN, 51, 76, 23) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 26), rnode(GIN, 51, 76, 22) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 27), rnode(GIN, 51, 76, 21) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 28), rnode(GIN, 51, 76, 20) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 29), rnode(GIN, 51, 76, 19) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 30), rnode(GIN, 51, 76, 17) },
  { pnode(HPS_MPU_GENERAL_PURPOSE, 52, 79, GP_OUT, -1, 31), rnode(GIN, 51, 76, 16) },
  { pnode(HPS_PERIPHERAL_CAN, 52, 70, RXD, -1, -1), rnode(GOUT, 51, 76, 3) },
  { pnode(HPS_PERIPHERAL_CAN, 52, 70, TXD, -1, -1), rnode(GIN, 51, 76, 1) },
  { pnode(HPS_PERIPHERAL_CAN, 52, 71, RXD, -1, -1), rnode(GOUT, 51, 76, 1) },
  { pnode(HPS_PERIPHERAL_CAN, 52, 71, TXD, -1, -1), rnode(GIN, 51, 76, 0) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, CLK_RX_I, -1, -1), rnode(DCMUX, 51, 65, 2) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, CLK_TX_I, -1, -1), rnode(DCMUX, 51, 65, 1) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, GMII_MDI_I, -1, -1), rnode(GOUT, 51, 70, 27) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, PHY_COL_I, -1, -1), rnode(GOUT, 51, 70, 26) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, PHY_CRS_I, -1, -1), rnode(GOUT, 51, 70, 25) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, PHY_RXDV_I, -1, -1), rnode(GOUT, 51, 70, 16) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, PHY_RXD_I, -1, 0), rnode(GOUT, 51, 70, 24) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, PHY_RXD_I, -1, 1), rnode(GOUT, 51, 70, 23) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, PHY_RXD_I, -1, 2), rnode(GOUT, 51, 70, 22) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, PHY_RXD_I, -1, 3), rnode(GOUT, 51, 70, 21) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, PHY_RXD_I, -1, 4), rnode(GOUT, 51, 70, 20) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, PHY_RXD_I, -1, 5), rnode(GOUT, 51, 70, 19) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, PHY_RXD_I, -1, 6), rnode(GOUT, 51, 70, 18) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, PHY_RXD_I, -1, 7), rnode(GOUT, 51, 70, 17) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, PHY_RXER_I, -1, -1), rnode(GOUT, 51, 70, 15) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, PTP_AUX_TS_TRIG_I, -1, -1), rnode(GOUT, 51, 70, 14) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, GMII_MDC_O, -1, -1), rnode(GIN, 51, 70, 32) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, GMII_MDO_O, -1, -1), rnode(GIN, 51, 70, 31) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, GMII_MDO_O_E, -1, -1), rnode(GIN, 51, 70, 30) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, PHY_TXD_O, -1, 0), rnode(GIN, 51, 70, 29) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, PHY_TXD_O, -1, 1), rnode(GIN, 51, 70, 28) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, PHY_TXD_O, -1, 2), rnode(GIN, 51, 70, 27) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, PHY_TXD_O, -1, 3), rnode(GIN, 51, 70, 26) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, PHY_TXD_O, -1, 4), rnode(GIN, 51, 70, 25) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, PHY_TXD_O, -1, 5), rnode(GIN, 51, 70, 24) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, PHY_TXD_O, -1, 6), rnode(GIN, 51, 70, 23) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, PHY_TXD_O, -1, 7), rnode(GIN, 51, 70, 22) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, PHY_TXEN_O, -1, -1), rnode(GIN, 51, 70, 21) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, PHY_TXER_O, -1, -1), rnode(GIN, 51, 70, 20) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, PTP_PPS_O, -1, -1), rnode(GIN, 51, 70, 19) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, RST_CLK_RX_N_O, -1, -1), rnode(GIN, 51, 70, 18) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 56, RST_CLK_TX_N_O, -1, -1), rnode(GIN, 51, 70, 17) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, CLK_RX_I, -1, -1), rnode(DCMUX, 51, 78, 2) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, CLK_TX_I, -1, -1), rnode(DCMUX, 51, 78, 1) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, GMII_MDI_I, -1, -1), rnode(GOUT, 51, 77, 27) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, PHY_COL_I, -1, -1), rnode(GOUT, 51, 77, 26) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, PHY_CRS_I, -1, -1), rnode(GOUT, 51, 77, 25) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, PHY_RXDV_I, -1, -1), rnode(GOUT, 51, 77, 16) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, PHY_RXD_I, -1, 0), rnode(GOUT, 51, 77, 24) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, PHY_RXD_I, -1, 1), rnode(GOUT, 51, 77, 23) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, PHY_RXD_I, -1, 2), rnode(GOUT, 51, 77, 22) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, PHY_RXD_I, -1, 3), rnode(GOUT, 51, 77, 21) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, PHY_RXD_I, -1, 4), rnode(GOUT, 51, 77, 20) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, PHY_RXD_I, -1, 5), rnode(GOUT, 51, 77, 19) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, PHY_RXD_I, -1, 6), rnode(GOUT, 51, 77, 18) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, PHY_RXD_I, -1, 7), rnode(GOUT, 51, 77, 17) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, PHY_RXER_I, -1, -1), rnode(GOUT, 51, 77, 15) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, PTP_AUX_TS_TRIG_I, -1, -1), rnode(GOUT, 51, 77, 14) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, GMII_MDC_O, -1, -1), rnode(GIN, 51, 79, 20) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, GMII_MDO_O, -1, -1), rnode(GIN, 51, 79, 19) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, GMII_MDO_O_E, -1, -1), rnode(GIN, 51, 79, 18) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, PHY_TXD_O, -1, 0), rnode(GIN, 51, 79, 17) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, PHY_TXD_O, -1, 1), rnode(GIN, 51, 79, 16) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, PHY_TXD_O, -1, 2), rnode(GIN, 51, 79, 15) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, PHY_TXD_O, -1, 3), rnode(GIN, 51, 79, 14) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, PHY_TXD_O, -1, 4), rnode(GIN, 51, 79, 13) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, PHY_TXD_O, -1, 5), rnode(GIN, 51, 79, 12) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, PHY_TXD_O, -1, 6), rnode(GIN, 51, 79, 11) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, PHY_TXD_O, -1, 7), rnode(GIN, 51, 79, 10) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, PHY_TXEN_O, -1, -1), rnode(GIN, 51, 79, 9) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, PHY_TXER_O, -1, -1), rnode(GIN, 51, 79, 8) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, PTP_PPS_O, -1, -1), rnode(GIN, 51, 79, 7) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, RST_CLK_RX_N_O, -1, -1), rnode(GIN, 51, 79, 6) },
  { pnode(HPS_PERIPHERAL_EMAC, 52, 77, RST_CLK_TX_N_O, -1, -1), rnode(GIN, 51, 79, 5) },
  { pnode(HPS_PERIPHERAL_I2C, 52, 58, SCL, -1, -1), rnode(DCMUX, 51, 69, 1) },
  { pnode(HPS_PERIPHERAL_I2C, 52, 58, SDA, -1, -1), rnode(GOUT, 51, 74, 27) },
  { pnode(HPS_PERIPHERAL_I2C, 52, 58, OUT_CLK, -1, -1), rnode(GIN, 51, 73, 30) },
  { pnode(HPS_PERIPHERAL_I2C, 52, 58, OUT_DATA, -1, -1), rnode(GIN, 51, 73, 29) },
  { pnode(HPS_PERIPHERAL_I2C, 52, 59, SCL, -1, -1), rnode(DCMUX, 51, 70, 1) },
  { pnode(HPS_PERIPHERAL_I2C, 52, 59, SDA, -1, -1), rnode(GOUT, 51, 74, 26) },
  { pnode(HPS_PERIPHERAL_I2C, 52, 59, OUT_CLK, -1, -1), rnode(GIN, 51, 73, 28) },
  { pnode(HPS_PERIPHERAL_I2C, 52, 59, OUT_DATA, -1, -1), rnode(GIN, 51, 73, 27) },
  { pnode(HPS_PERIPHERAL_I2C, 52, 60, SCL, -1, -1), rnode(DCMUX, 51, 68, 2) },
  { pnode(HPS_PERIPHERAL_I2C, 52, 60, SDA, -1, -1), rnode(GOUT, 51, 74, 25) },
  { pnode(HPS_PERIPHERAL_I2C, 52, 60, OUT_CLK, -1, -1), rnode(GIN, 51, 73, 26) },
  { pnode(HPS_PERIPHERAL_I2C, 52, 60, OUT_DATA, -1, -1), rnode(GIN, 51, 73, 25) },
  { pnode(HPS_PERIPHERAL_I2C, 52, 61, SCL, -1, -1), rnode(DCMUX, 51, 68, 1) },
  { pnode(HPS_PERIPHERAL_I2C, 52, 61, SDA, -1, -1), rnode(GOUT, 51, 74, 24) },
  { pnode(HPS_PERIPHERAL_I2C, 52, 61, OUT_CLK, -1, -1), rnode(GIN, 51, 73, 24) },
  { pnode(HPS_PERIPHERAL_I2C, 52, 61, OUT_DATA, -1, -1), rnode(GIN, 51, 73, 23) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, ADQ_IN, -1, 0), rnode(GOUT, 51, 71, 2) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, ADQ_IN, -1, 1), rnode(GOUT, 51, 71, 1) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, ADQ_IN, -1, 2), rnode(GOUT, 51, 71, 0) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, ADQ_IN, -1, 3), rnode(GOUT, 51, 70, 39) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, ADQ_IN, -1, 4), rnode(GOUT, 51, 70, 38) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, ADQ_IN, -1, 5), rnode(GOUT, 51, 70, 37) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, ADQ_IN, -1, 6), rnode(GOUT, 51, 70, 36) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, ADQ_IN, -1, 7), rnode(GOUT, 51, 70, 35) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, RDY_BUSY, -1, 0), rnode(GOUT, 51, 70, 34) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, RDY_BUSY, -1, 1), rnode(GOUT, 51, 70, 33) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, RDY_BUSY, -1, 2), rnode(GOUT, 51, 70, 32) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, RDY_BUSY, -1, 3), rnode(GOUT, 51, 70, 31) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, ADQ_OE, -1, -1), rnode(GIN, 51, 71, 17) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, ADQ_OUT, -1, 0), rnode(GIN, 51, 71, 16) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, ADQ_OUT, -1, 1), rnode(GIN, 51, 71, 15) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, ADQ_OUT, -1, 2), rnode(GIN, 51, 71, 14) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, ADQ_OUT, -1, 3), rnode(GIN, 51, 71, 13) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, ADQ_OUT, -1, 4), rnode(GIN, 51, 71, 12) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, ADQ_OUT, -1, 5), rnode(GIN, 51, 71, 11) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, ADQ_OUT, -1, 6), rnode(GIN, 51, 71, 10) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, ADQ_OUT, -1, 7), rnode(GIN, 51, 71, 9) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, ALE, -1, -1), rnode(GIN, 51, 71, 8) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, CEBAR, -1, 0), rnode(GIN, 51, 71, 7) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, CEBAR, -1, 1), rnode(GIN, 51, 71, 6) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, CEBAR, -1, 2), rnode(GIN, 51, 71, 5) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, CEBAR, -1, 3), rnode(GIN, 51, 71, 4) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, CLE, -1, -1), rnode(GIN, 51, 71, 3) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, REBAR, -1, -1), rnode(GIN, 51, 71, 2) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, WEBAR, -1, -1), rnode(GIN, 51, 71, 1) },
  { pnode(HPS_PERIPHERAL_NAND, 52, 50, WPBAR, -1, -1), rnode(GIN, 51, 71, 0) },
  { pnode(HPS_PERIPHERAL_QSPI, 52, 65, MI, 0, -1), rnode(GOUT, 51, 75, 1) },
  { pnode(HPS_PERIPHERAL_QSPI, 52, 65, MI, 1, -1), rnode(GOUT, 51, 75, 0) },
  { pnode(HPS_PERIPHERAL_QSPI, 52, 65, MI, 2, -1), rnode(GOUT, 51, 74, 40) },
  { pnode(HPS_PERIPHERAL_QSPI, 52, 65, MI, 3, -1), rnode(GOUT, 51, 74, 39) },
  { pnode(HPS_PERIPHERAL_QSPI, 52, 65, MO, 0, -1), rnode(GIN, 51, 74, 19) },
  { pnode(HPS_PERIPHERAL_QSPI, 52, 65, MO, 1, -1), rnode(GIN, 51, 74, 18) },
  { pnode(HPS_PERIPHERAL_QSPI, 52, 65, MO, 2, -1), rnode(GIN, 51, 74, 17) },
  { pnode(HPS_PERIPHERAL_QSPI, 52, 65, MO, 3, -1), rnode(GIN, 51, 74, 16) },
  { pnode(HPS_PERIPHERAL_QSPI, 52, 65, N_MO_EN, -1, 0), rnode(GIN, 51, 74, 15) },
  { pnode(HPS_PERIPHERAL_QSPI, 52, 65, N_MO_EN, -1, 1), rnode(GIN, 51, 74, 14) },
  { pnode(HPS_PERIPHERAL_QSPI, 52, 65, N_MO_EN, -1, 2), rnode(GIN, 51, 74, 13) },
  { pnode(HPS_PERIPHERAL_QSPI, 52, 65, N_MO_EN, -1, 3), rnode(GIN, 51, 74, 12) },
  { pnode(HPS_PERIPHERAL_QSPI, 52, 65, N_SS_OUT, -1, 0), rnode(GIN, 51, 74, 11) },
  { pnode(HPS_PERIPHERAL_QSPI, 52, 65, N_SS_OUT, -1, 1), rnode(GIN, 51, 74, 10) },
  { pnode(HPS_PERIPHERAL_QSPI, 52, 65, N_SS_OUT, -1, 2), rnode(GIN, 51, 74, 9) },
  { pnode(HPS_PERIPHERAL_QSPI, 52, 65, N_SS_OUT, -1, 3), rnode(GIN, 51, 74, 8) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, CARD_INTN_I, -1, -1), rnode(GOUT, 51, 75, 15) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, CDN_I, -1, -1), rnode(GOUT, 51, 75, 14) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, CLK_IN, -1, -1), rnode(GOUT, 51, 75, 13) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, CMD_I, -1, -1), rnode(GOUT, 51, 75, 12) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, DATA_I, -1, 0), rnode(GOUT, 51, 75, 11) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, DATA_I, -1, 1), rnode(GOUT, 51, 75, 10) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, DATA_I, -1, 2), rnode(GOUT, 51, 75, 9) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, DATA_I, -1, 3), rnode(GOUT, 51, 75, 8) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, DATA_I, -1, 4), rnode(GOUT, 51, 75, 7) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, DATA_I, -1, 5), rnode(GOUT, 51, 75, 6) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, DATA_I, -1, 6), rnode(GOUT, 51, 75, 5) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, DATA_I, -1, 7), rnode(GOUT, 51, 75, 4) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, WP_I, -1, -1), rnode(GOUT, 51, 75, 3) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, CCLK_OUT, -1, -1), rnode(GIN, 51, 75, 8) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, CMD_EN, -1, -1), rnode(GIN, 51, 75, 7) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, CMD_O, -1, -1), rnode(GIN, 51, 75, 6) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, DATA_EN, -1, 0), rnode(GIN, 51, 75, 5) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, DATA_EN, -1, 1), rnode(GIN, 51, 75, 4) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, DATA_EN, -1, 2), rnode(GIN, 51, 75, 3) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, DATA_EN, -1, 3), rnode(GIN, 51, 75, 2) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, DATA_EN, -1, 4), rnode(GIN, 51, 75, 1) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, DATA_EN, -1, 5), rnode(GIN, 51, 75, 0) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, DATA_EN, -1, 6), rnode(GIN, 51, 74, 32) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, DATA_EN, -1, 7), rnode(GIN, 51, 74, 31) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, DATA_O, -1, 0), rnode(GIN, 51, 74, 30) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, DATA_O, -1, 1), rnode(GIN, 51, 74, 29) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, DATA_O, -1, 2), rnode(GIN, 51, 74, 28) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, DATA_O, -1, 3), rnode(GIN, 51, 74, 27) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, DATA_O, -1, 4), rnode(GIN, 51, 74, 26) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, DATA_O, -1, 5), rnode(GIN, 51, 74, 25) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, DATA_O, -1, 6), rnode(GIN, 51, 74, 24) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, DATA_O, -1, 7), rnode(GIN, 51, 74, 23) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, PWR_ENA_O, -1, -1), rnode(GIN, 51, 74, 22) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, RSTN_O, -1, -1), rnode(GIN, 51, 74, 21) },
  { pnode(HPS_PERIPHERAL_SDMMC, 52, 68, VS_O, -1, -1), rnode(GIN, 51, 74, 20) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 52, 72, RXD, -1, -1), rnode(GOUT, 51, 75, 24) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 52, 72, SS_IN_N, -1, -1), rnode(GOUT, 51, 75, 23) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 52, 72, SSI_OE_N, -1, -1), rnode(GIN, 51, 75, 20) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 52, 72, SS_N, 0, -1), rnode(GIN, 51, 75, 24) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 52, 72, SS_N, 1, -1), rnode(GIN, 51, 75, 23) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 52, 72, SS_N, 2, -1), rnode(GIN, 51, 75, 22) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 52, 72, SS_N, 3, -1), rnode(GIN, 51, 75, 21) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 52, 72, TXD, -1, -1), rnode(GIN, 51, 75, 19) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 52, 73, RXD, -1, -1), rnode(GOUT, 51, 75, 21) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 52, 73, SS_IN_N, -1, -1), rnode(GOUT, 51, 75, 20) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 52, 73, SSI_OE_N, -1, -1), rnode(GIN, 51, 75, 14) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 52, 73, SS_N, 0, -1), rnode(GIN, 51, 75, 18) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 52, 73, SS_N, 1, -1), rnode(GIN, 51, 75, 17) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 52, 73, SS_N, 2, -1), rnode(GIN, 51, 75, 16) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 52, 73, SS_N, 3, -1), rnode(GIN, 51, 75, 15) },
  { pnode(HPS_PERIPHERAL_SPI_MASTER, 52, 73, TXD, -1, -1), rnode(GIN, 51, 75, 13) },
  { pnode(HPS_PERIPHERAL_SPI_SLAVE, 52, 63, RXD, -1, -1), rnode(GOUT, 51, 75, 19) },
  { pnode(HPS_PERIPHERAL_SPI_SLAVE, 52, 63, SCLK_IN, -1, -1), rnode(DCMUX, 51, 71, 1) },
  { pnode(HPS_PERIPHERAL_SPI_SLAVE, 52, 63, SS_IN_N, -1, -1), rnode(GOUT, 51, 75, 18) },
  { pnode(HPS_PERIPHERAL_SPI_SLAVE, 52, 63, SSI_OE_N, -1, -1), rnode(GIN, 51, 75, 12) },
  { pnode(HPS_PERIPHERAL_SPI_SLAVE, 52, 63, TXD, -1, -1), rnode(GIN, 51, 75, 11) },
  { pnode(HPS_PERIPHERAL_SPI_SLAVE, 52, 64, RXD, -1, -1), rnode(GOUT, 51, 75, 17) },
  { pnode(HPS_PERIPHERAL_SPI_SLAVE, 52, 64, SCLK_IN, -1, -1), rnode(DCMUX, 51, 72, 1) },
  { pnode(HPS_PERIPHERAL_SPI_SLAVE, 52, 64, SS_IN_N, -1, -1), rnode(GOUT, 51, 75, 16) },
  { pnode(HPS_PERIPHERAL_SPI_SLAVE, 52, 64, SSI_OE_N, -1, -1), rnode(GIN, 51, 75, 10) },
  { pnode(HPS_PERIPHERAL_SPI_SLAVE, 52, 64, TXD, -1, -1), rnode(GIN, 51, 75, 9) },
  { pnode(HPS_PERIPHERAL_UART, 52, 66, CTS, -1, -1), rnode(GOUT, 51, 74, 37) },
  { pnode(HPS_PERIPHERAL_UART, 52, 66, DCD, -1, -1), rnode(GOUT, 51, 74, 36) },
  { pnode(HPS_PERIPHERAL_UART, 52, 66, DSR, -1, -1), rnode(GOUT, 51, 74, 35) },
  { pnode(HPS_PERIPHERAL_UART, 52, 66, RI, -1, -1), rnode(GOUT, 51, 74, 34) },
  { pnode(HPS_PERIPHERAL_UART, 52, 66, RXD, -1, -1), rnode(GOUT, 51, 74, 33) },
  { pnode(HPS_PERIPHERAL_UART, 52, 66, DTR, -1, -1), rnode(GIN, 51, 74, 7) },
  { pnode(HPS_PERIPHERAL_UART, 52, 66, OUT_N, 0, -1), rnode(GIN, 51, 74, 6) },
  { pnode(HPS_PERIPHERAL_UART, 52, 66, OUT_N, 1, -1), rnode(GIN, 51, 74, 5) },
  { pnode(HPS_PERIPHERAL_UART, 52, 66, RTS, -1, -1), rnode(GIN, 51, 74, 4) },
  { pnode(HPS_PERIPHERAL_UART, 52, 66, TXD, -1, -1), rnode(GIN, 51, 74, 3) },
  { pnode(HPS_PERIPHERAL_UART, 52, 67, CTS, -1, -1), rnode(GOUT, 51, 74, 32) },
  { pnode(HPS_PERIPHERAL_UART, 52, 67, DCD, -1, -1), rnode(GOUT, 51, 74, 31) },
  { pnode(HPS_PERIPHERAL_UART, 52, 67, DSR, -1, -1), rnode(GOUT, 51, 74, 30) },
  { pnode(HPS_PERIPHERAL_UART, 52, 67, RI, -1, -1), rnode(GOUT, 51, 74, 29) },
  { pnode(HPS_PERIPHERAL_UART, 52, 67, RXD, -1, -1), rnode(GOUT, 51, 74, 28) },
  { pnode(HPS_PERIPHERAL_UART, 52, 67, DTR, -1, -1), rnode(GIN, 51, 74, 2) },
  { pnode(HPS_PERIPHERAL_UART, 52, 67, OUT_N, 0, -1), rnode(GIN, 51, 74, 1) },
  { pnode(HPS_PERIPHERAL_UART, 52, 67, OUT_N, 1, -1), rnode(GIN, 51, 74, 0) },
  { pnode(HPS_PERIPHERAL_UART, 52, 67, RTS, -1, -1), rnode(GIN, 51, 73, 32) },
  { pnode(HPS_PERIPHERAL_UART, 52, 67, TXD, -1, -1), rnode(GIN, 51, 73, 31) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, CLK, -1, -1), rnode(DCMUX, 51, 66, 1) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, DATAIN, -1, 0), rnode(GOUT, 51, 70, 12) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, DATAIN, -1, 1), rnode(GOUT, 51, 70, 11) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, DATAIN, -1, 2), rnode(GOUT, 51, 70, 10) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, DATAIN, -1, 3), rnode(GOUT, 51, 70, 9) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, DATAIN, -1, 4), rnode(GOUT, 51, 70, 8) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, DATAIN, -1, 5), rnode(GOUT, 51, 70, 7) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, DATAIN, -1, 6), rnode(GOUT, 51, 70, 6) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, DATAIN, -1, 7), rnode(GOUT, 51, 70, 5) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, DIR, -1, -1), rnode(GOUT, 51, 70, 4) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, NXT, -1, -1), rnode(GOUT, 51, 70, 3) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, DATAOUT, -1, 0), rnode(GIN, 51, 70, 8) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, DATAOUT, -1, 1), rnode(GIN, 51, 70, 7) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, DATAOUT, -1, 2), rnode(GIN, 51, 70, 6) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, DATAOUT, -1, 3), rnode(GIN, 51, 70, 5) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, DATAOUT, -1, 4), rnode(GIN, 51, 70, 4) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, DATAOUT, -1, 5), rnode(GIN, 51, 70, 3) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, DATAOUT, -1, 6), rnode(GIN, 51, 70, 2) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, DATAOUT, -1, 7), rnode(GIN, 51, 70, 1) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, DATA_OUT_EN, -1, 0), rnode(GIN, 51, 70, 16) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, DATA_OUT_EN, -1, 1), rnode(GIN, 51, 70, 15) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, DATA_OUT_EN, -1, 2), rnode(GIN, 51, 70, 14) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, DATA_OUT_EN, -1, 3), rnode(GIN, 51, 70, 13) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, DATA_OUT_EN, -1, 4), rnode(GIN, 51, 70, 12) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, DATA_OUT_EN, -1, 5), rnode(GIN, 51, 70, 11) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, DATA_OUT_EN, -1, 6), rnode(GIN, 51, 70, 10) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, DATA_OUT_EN, -1, 7), rnode(GIN, 51, 70, 9) },
  { pnode(HPS_PERIPHERAL_USB, 52, 57, STP, -1, -1), rnode(GIN, 51, 70, 0) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, CLK, -1, -1), rnode(DCMUX, 51, 79, 2) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, DATAIN, -1, 0), rnode(GOUT, 51, 77, 12) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, DATAIN, -1, 1), rnode(GOUT, 51, 77, 11) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, DATAIN, -1, 2), rnode(GOUT, 51, 77, 10) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, DATAIN, -1, 3), rnode(GOUT, 51, 77, 9) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, DATAIN, -1, 4), rnode(GOUT, 51, 77, 8) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, DATAIN, -1, 5), rnode(GOUT, 51, 77, 7) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, DATAIN, -1, 6), rnode(GOUT, 51, 77, 6) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, DATAIN, -1, 7), rnode(GOUT, 51, 77, 5) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, DIR, -1, -1), rnode(GOUT, 51, 77, 4) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, NXT, -1, -1), rnode(GOUT, 51, 77, 3) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, DATAOUT, -1, 0), rnode(GIN, 51, 78, 25) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, DATAOUT, -1, 1), rnode(GIN, 51, 78, 24) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, DATAOUT, -1, 2), rnode(GIN, 51, 78, 23) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, DATAOUT, -1, 3), rnode(GIN, 51, 78, 22) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, DATAOUT, -1, 4), rnode(GIN, 51, 78, 21) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, DATAOUT, -1, 5), rnode(GIN, 51, 78, 20) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, DATAOUT, -1, 6), rnode(GIN, 51, 78, 19) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, DATAOUT, -1, 7), rnode(GIN, 51, 78, 18) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, DATA_OUT_EN, -1, 0), rnode(GIN, 51, 79, 4) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, DATA_OUT_EN, -1, 1), rnode(GIN, 51, 79, 3) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, DATA_OUT_EN, -1, 2), rnode(GIN, 51, 79, 2) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, DATA_OUT_EN, -1, 3), rnode(GIN, 51, 79, 1) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, DATA_OUT_EN, -1, 4), rnode(GIN, 51, 79, 0) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, DATA_OUT_EN, -1, 5), rnode(GIN, 51, 78, 28) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, DATA_OUT_EN, -1, 6), rnode(GIN, 51, 78, 27) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, DATA_OUT_EN, -1, 7), rnode(GIN, 51, 78, 26) },
  { pnode(HPS_PERIPHERAL_USB, 52, 76, STP, -1, -1), rnode(GIN, 51, 78, 17) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 0), rnode(GOUT, 51, 41, 29) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 1), rnode(GOUT, 51, 41, 18) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 2), rnode(GOUT, 51, 41, 9) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 3), rnode(GOUT, 51, 41, 8) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 4), rnode(GOUT, 51, 41, 7) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 5), rnode(GOUT, 51, 41, 6) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 6), rnode(GOUT, 51, 41, 5) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 7), rnode(GOUT, 51, 41, 4) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 8), rnode(GOUT, 51, 41, 3) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 9), rnode(GOUT, 51, 41, 2) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 10), rnode(GOUT, 51, 41, 28) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 11), rnode(GOUT, 51, 41, 27) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 12), rnode(GOUT, 51, 41, 26) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 13), rnode(GOUT, 51, 41, 25) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 14), rnode(GOUT, 51, 41, 24) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 15), rnode(GOUT, 51, 41, 23) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 16), rnode(GOUT, 51, 41, 22) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 17), rnode(GOUT, 51, 41, 21) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 18), rnode(GOUT, 51, 41, 20) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 19), rnode(GOUT, 51, 41, 19) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 20), rnode(GOUT, 51, 41, 17) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 21), rnode(GOUT, 51, 41, 16) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 22), rnode(GOUT, 51, 41, 15) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 23), rnode(GOUT, 51, 41, 14) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 24), rnode(GOUT, 51, 41, 13) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 25), rnode(GOUT, 51, 41, 12) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 26), rnode(GOUT, 51, 41, 11) },
  { pnode(HPS_STM_EVENT, 52, 42, STM_EVENT, -1, 27), rnode(GOUT, 51, 41, 10) },
  { pnode(HPS_TEST, 52, 46, CFG_DFX_BYPASS_ENABLE, -1, -1), rnode(GOUT, 51, 53, 12) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_ATPG_EN, -1, -1), rnode(GOUT, 51, 69, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_AVSTCMDPORTCLK_TESTEN, -1, 0), rnode(GOUT, 51, 69, 53) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_AVSTCMDPORTCLK_TESTEN, -1, 1), rnode(GOUT, 51, 69, 52) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_AVSTCMDPORTCLK_TESTEN, -1, 2), rnode(GOUT, 51, 69, 51) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_AVSTCMDPORTCLK_TESTEN, -1, 3), rnode(GOUT, 51, 69, 50) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_AVSTCMDPORTCLK_TESTEN, -1, 4), rnode(GOUT, 51, 69, 49) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_AVSTCMDPORTCLK_TESTEN, -1, 5), rnode(GOUT, 51, 69, 48) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_AVSTRDCLK_TESTEN, -1, 0), rnode(GOUT, 51, 69, 47) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_AVSTRDCLK_TESTEN, -1, 1), rnode(GOUT, 51, 69, 46) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_AVSTRDCLK_TESTEN, -1, 2), rnode(GOUT, 51, 69, 45) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_AVSTRDCLK_TESTEN, -1, 3), rnode(GOUT, 51, 69, 44) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_AVSTWRCLK_TESTEN, -1, 0), rnode(GOUT, 51, 69, 43) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_AVSTWRCLK_TESTEN, -1, 1), rnode(GOUT, 51, 69, 42) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_AVSTWRCLK_TESTEN, -1, 2), rnode(GOUT, 51, 69, 41) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_AVSTWRCLK_TESTEN, -1, 3), rnode(GOUT, 51, 69, 40) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_BISTEN, -1, -1), rnode(GOUT, 51, 69, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_BIST_CPU_SI, -1, -1), rnode(GOUT, 51, 69, 39) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_BIST_L2_SI, -1, -1), rnode(GOUT, 51, 69, 38) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_BIST_NRST, -1, -1), rnode(GOUT, 51, 69, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_BIST_PERI_SI, 0, -1), rnode(GOUT, 51, 69, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_BIST_PERI_SI, 1, -1), rnode(GOUT, 51, 69, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_BIST_PERI_SI, 2, -1), rnode(GOUT, 51, 51, 51) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_BIST_SE, -1, -1), rnode(GOUT, 51, 69, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_CANTESTEN, 0, -1), rnode(GOUT, 51, 76, 2) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_CANTESTEN, 1, -1), rnode(GOUT, 51, 76, 0) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_CFGTESTEN, -1, -1), rnode(GOUT, 51, 69, 32) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_CTICLK_TESTEN, -1, -1), rnode(GOUT, 51, 40, 13) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_DBGATTESTEN, -1, -1), rnode(GOUT, 51, 53, 3) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_DBGTESTEN, -1, -1), rnode(GOUT, 51, 53, 2) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_DBGTMTESTEN, -1, -1), rnode(GOUT, 51, 53, 1) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_DBGTRTESTEN, -1, -1), rnode(GOUT, 51, 53, 0) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_DDR2XDQSTESTEN, -1, -1), rnode(GOUT, 51, 69, 31) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_DDRDQSTESTEN, -1, -1), rnode(GOUT, 51, 69, 30) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_DDRDQTESTEN, -1, -1), rnode(GOUT, 51, 69, 29) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_DLLNRST, -1, -1), rnode(GOUT, 51, 80, 9) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_DLLUPDWNEN, -1, -1), rnode(GOUT, 51, 80, 8) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_DLLUPNDN, -1, -1), rnode(GOUT, 51, 80, 7) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_DQSUPDTEN, -1, 0), rnode(GOUT, 51, 69, 28) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_DQSUPDTEN, -1, 1), rnode(GOUT, 51, 69, 27) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_DQSUPDTEN, -1, 2), rnode(GOUT, 51, 69, 26) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_DQSUPDTEN, -1, 3), rnode(GOUT, 51, 69, 25) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_DQSUPDTEN, -1, 4), rnode(GOUT, 51, 69, 24) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_ECCBYP, -1, -1), rnode(GOUT, 51, 69, 23) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_EMACTESTEN, 0, -1), rnode(GOUT, 51, 70, 13) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_EMACTESTEN, 1, -1), rnode(GOUT, 51, 77, 13) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_F2SAXICLK_TESTEN, -1, -1), rnode(GOUT, 51, 43, 10) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_F2SPCLKDBG_TESTEN, -1, -1), rnode(GOUT, 51, 40, 14) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_FMBHNIOTRI, -1, -1), rnode(GOUT, 51, 80, 6) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_FMCSREN, -1, -1), rnode(GOUT, 51, 80, 5) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_FMNIOTRI, -1, -1), rnode(GOUT, 51, 80, 4) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_FMPLNIOTRI, -1, -1), rnode(GOUT, 51, 80, 3) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_GPIODBTESTEN, -1, -1), rnode(GOUT, 51, 70, 30) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_HIOCLKIN0, -1, -1), rnode(GOUT, 51, 69, 22) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_HIOSCANCLK_TESTEN, -1, -1), rnode(GOUT, 51, 69, 21) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_HIOSCANEN, -1, -1), rnode(GOUT, 51, 80, 2) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_HIOSCANIN, -1, 0), rnode(GOUT, 51, 80, 1) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_HIOSCANIN, -1, 1), rnode(GOUT, 51, 80, 0) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_HIOSCLR, -1, -1), rnode(GOUT, 51, 69, 20) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_IPSCCLK, -1, -1), rnode(GOUT, 51, 69, 19) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_IPSCENABLE, -1, 0), rnode(GOUT, 51, 69, 18) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_IPSCENABLE, -1, 1), rnode(GOUT, 51, 69, 15) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_IPSCENABLE, -1, 2), rnode(GOUT, 51, 69, 14) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_IPSCENABLE, -1, 3), rnode(GOUT, 51, 69, 13) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_IPSCENABLE, -1, 4), rnode(GOUT, 51, 69, 12) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_IPSCENABLE, -1, 5), rnode(GOUT, 51, 69, 11) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_IPSCENABLE, -1, 6), rnode(GOUT, 51, 69, 10) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_IPSCENABLE, -1, 7), rnode(GOUT, 51, 69, 9) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_IPSCENABLE, -1, 8), rnode(GOUT, 51, 69, 8) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_IPSCENABLE, -1, 9), rnode(GOUT, 51, 69, 7) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_IPSCENABLE, -1, 10), rnode(GOUT, 51, 69, 17) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_IPSCENABLE, -1, 11), rnode(GOUT, 51, 69, 16) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_IPSCIN, -1, -1), rnode(GOUT, 51, 69, 6) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_IPSCUPDATE, -1, -1), rnode(GOUT, 51, 69, 5) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_L3MAINTESTEN, -1, -1), rnode(GOUT, 51, 52, 5) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_L3MPTESTEN, -1, -1), rnode(GOUT, 51, 52, 4) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_L3SPTESTEN, -1, -1), rnode(GOUT, 51, 52, 3) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_L4MAINTESTEN, -1, -1), rnode(GOUT, 51, 52, 2) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_L4MPTESTEN, -1, -1), rnode(GOUT, 51, 52, 1) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_L4SPTESTEN, -1, -1), rnode(GOUT, 51, 52, 0) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_LWH2FAXICLK_TESTEN, -1, -1), rnode(GOUT, 51, 41, 47) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_MEM_CPU_SI, -1, -1), rnode(GOUT, 51, 69, 4) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_MEM_L2_SI, -1, -1), rnode(GOUT, 51, 69, 3) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_MEM_PERI_SI, 0, -1), rnode(GOUT, 51, 69, 2) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_MEM_PERI_SI, 1, -1), rnode(GOUT, 51, 69, 1) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_MEM_PERI_SI, 2, -1), rnode(GOUT, 51, 51, 50) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_MEM_SE, -1, -1), rnode(GOUT, 51, 69, 0) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_MPUL2RAMTESTEN, -1, -1), rnode(GOUT, 51, 51, 48) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_MPUPERITESTEN, -1, -1), rnode(GOUT, 51, 51, 47) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_MPUTESTEN, -1, -1), rnode(GOUT, 51, 51, 46) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_MPU_SCAN_MODE, -1, -1), rnode(GOUT, 51, 51, 49) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_MTESTEN, -1, -1), rnode(GOUT, 51, 68, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_NANDTESTEN, -1, -1), rnode(GOUT, 51, 70, 29) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_NANDXTESTEN, -1, -1), rnode(GOUT, 51, 70, 28) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_OCTCLKENUSR, -1, -1), rnode(GOUT, 51, 79, 45) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_OCTCLKUSR, -1, -1), rnode(GOUT, 51, 79, 44) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_OCTENSERUSER, -1, -1), rnode(GOUT, 51, 79, 43) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_OCTNCLRUSR, -1, -1), rnode(GOUT, 51, 79, 42) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_OCTS2PLOAD, -1, -1), rnode(GOUT, 51, 79, 41) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_OCTSCANCLK, -1, -1), rnode(GOUT, 51, 79, 40) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_OCTSCANEN, -1, -1), rnode(GOUT, 51, 79, 39) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_OCTSCANIN, -1, -1), rnode(GOUT, 51, 79, 38) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_OCTSERDATA, -1, -1), rnode(GOUT, 51, 79, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_OSC1TESTEN, -1, -1), rnode(GOUT, 51, 79, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PIPELINE_SE_ENABLE, -1, -1), rnode(GOUT, 51, 68, 53) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_BG_PWRDN, 0, -1), rnode(GOUT, 51, 79, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_BG_RESET, 0, -1), rnode(GOUT, 51, 79, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLK_SELECT, 0, -1), rnode(GOUT, 51, 79, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_OUTRESET, 0, -1), rnode(GOUT, 51, 79, 32) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_OUTRESETALL, 0, -1), rnode(GOUT, 51, 79, 31) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_PWRDN, 0, -1), rnode(GOUT, 51, 79, 30) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_REG_PWRDN, 0, -1), rnode(GOUT, 51, 79, 29) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_REG_RESET, 0, -1), rnode(GOUT, 51, 79, 28) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_REG_TEST_SEL, 0, -1), rnode(GOUT, 51, 79, 27) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_RESET, 0, -1), rnode(GOUT, 51, 79, 26) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_TEST, 0, -1), rnode(GOUT, 51, 79, 25) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_BG_PWRDN, 1, -1), rnode(GOUT, 51, 79, 24) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_BG_RESET, 1, -1), rnode(GOUT, 51, 79, 23) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLK_SELECT, 1, -1), rnode(GOUT, 51, 79, 22) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_OUTRESET, 1, -1), rnode(GOUT, 51, 79, 21) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_OUTRESETALL, 1, -1), rnode(GOUT, 51, 79, 20) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_PWRDN, 1, -1), rnode(GOUT, 51, 79, 19) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_REG_PWRDN, 1, -1), rnode(GOUT, 51, 79, 18) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_REG_RESET, 1, -1), rnode(GOUT, 51, 79, 17) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_REG_TEST_SEL, 1, -1), rnode(GOUT, 51, 79, 16) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_RESET, 1, -1), rnode(GOUT, 51, 79, 15) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_TEST, 1, -1), rnode(GOUT, 51, 79, 14) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_BG_PWRDN, 2, -1), rnode(GOUT, 51, 79, 13) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_BG_RESET, 2, -1), rnode(GOUT, 51, 79, 12) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLK_SELECT, 2, -1), rnode(GOUT, 51, 79, 11) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_OUTRESET, 2, -1), rnode(GOUT, 51, 79, 10) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_OUTRESETALL, 2, -1), rnode(GOUT, 51, 79, 9) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_PWRDN, 2, -1), rnode(GOUT, 51, 79, 8) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_REG_PWRDN, 2, -1), rnode(GOUT, 51, 79, 7) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_REG_RESET, 2, -1), rnode(GOUT, 51, 79, 6) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_REG_TEST_SEL, 2, -1), rnode(GOUT, 51, 79, 5) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_RESET, 2, -1), rnode(GOUT, 51, 79, 4) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_TEST, 2, -1), rnode(GOUT, 51, 79, 3) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLLBYPASS, -1, -1), rnode(GOUT, 51, 77, 39) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLLBYPASS_SEL, -1, -1), rnode(GOUT, 51, 77, 38) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLLTEST_INPUT_EN, -1, -1), rnode(GOUT, 51, 77, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_ADVANCE, -1, -1), rnode(GOUT, 51, 79, 2) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_BWADJ, -1, 0), rnode(GOUT, 51, 79, 1) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_BWADJ, -1, 1), rnode(GOUT, 51, 78, 43) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_BWADJ, -1, 2), rnode(GOUT, 51, 78, 42) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_BWADJ, -1, 3), rnode(GOUT, 51, 78, 41) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_BWADJ, -1, 4), rnode(GOUT, 51, 78, 40) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_BWADJ, -1, 5), rnode(GOUT, 51, 78, 39) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_BWADJ, -1, 6), rnode(GOUT, 51, 78, 38) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_BWADJ, -1, 7), rnode(GOUT, 51, 78, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_BWADJ, -1, 8), rnode(GOUT, 51, 78, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_BWADJ, -1, 9), rnode(GOUT, 51, 78, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_BWADJ, -1, 10), rnode(GOUT, 51, 79, 0) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_BWADJ, -1, 11), rnode(GOUT, 51, 78, 44) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKF, -1, 0), rnode(GOUT, 51, 78, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKF, -1, 1), rnode(GOUT, 51, 78, 30) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKF, -1, 2), rnode(GOUT, 51, 78, 29) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKF, -1, 3), rnode(GOUT, 51, 78, 28) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKF, -1, 4), rnode(GOUT, 51, 78, 27) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKF, -1, 5), rnode(GOUT, 51, 78, 26) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKF, -1, 6), rnode(GOUT, 51, 78, 25) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKF, -1, 7), rnode(GOUT, 51, 78, 24) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKF, -1, 8), rnode(GOUT, 51, 78, 23) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKF, -1, 9), rnode(GOUT, 51, 78, 22) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKF, -1, 10), rnode(GOUT, 51, 78, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKF, -1, 11), rnode(GOUT, 51, 78, 32) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKF, -1, 12), rnode(GOUT, 51, 78, 31) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKOD, -1, 0), rnode(GOUT, 51, 78, 21) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKOD, -1, 1), rnode(GOUT, 51, 78, 20) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKOD, -1, 2), rnode(GOUT, 51, 78, 19) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKOD, -1, 3), rnode(GOUT, 51, 78, 18) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKOD, -1, 4), rnode(GOUT, 51, 78, 17) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKOD, -1, 5), rnode(GOUT, 51, 78, 16) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKOD, -1, 6), rnode(GOUT, 51, 78, 15) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKOD, -1, 7), rnode(GOUT, 51, 78, 14) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKOD, -1, 8), rnode(GOUT, 51, 78, 13) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKR, -1, 0), rnode(GOUT, 51, 78, 12) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKR, -1, 1), rnode(GOUT, 51, 78, 11) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKR, -1, 2), rnode(GOUT, 51, 78, 10) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKR, -1, 3), rnode(GOUT, 51, 78, 9) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKR, -1, 4), rnode(GOUT, 51, 78, 8) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_CLKR, -1, 5), rnode(GOUT, 51, 78, 7) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_ENSAT, -1, -1), rnode(GOUT, 51, 78, 6) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_FASTEN, -1, -1), rnode(GOUT, 51, 78, 5) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_REG_EXT_SEL, -1, -1), rnode(GOUT, 51, 78, 4) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_REG_TEST_DRV, -1, -1), rnode(GOUT, 51, 78, 3) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_REG_TEST_OUT, -1, -1), rnode(GOUT, 51, 78, 2) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_REG_TEST_REP, -1, -1), rnode(GOUT, 51, 78, 1) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_STEP, -1, -1), rnode(GOUT, 51, 78, 0) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_TESTBUS_SEL, -1, 0), rnode(GOUT, 51, 77, 44) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_TESTBUS_SEL, -1, 1), rnode(GOUT, 51, 77, 43) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_TESTBUS_SEL, -1, 2), rnode(GOUT, 51, 77, 42) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_TESTBUS_SEL, -1, 3), rnode(GOUT, 51, 77, 41) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PLL_TESTBUS_SEL, -1, 4), rnode(GOUT, 51, 77, 40) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_PSTDQSENA, -1, -1), rnode(GOUT, 51, 68, 52) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_QSPITESTEN, -1, -1), rnode(GOUT, 51, 74, 38) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_S2FAXICLK_TESTEN, -1, -1), rnode(GOUT, 51, 48, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 0), rnode(GOUT, 51, 80, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 1), rnode(GOUT, 51, 80, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 2), rnode(GOUT, 51, 69, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 3), rnode(GOUT, 51, 55, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 4), rnode(GOUT, 51, 45, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 5), rnode(GOUT, 51, 44, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 6), rnode(GOUT, 51, 43, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 7), rnode(GOUT, 51, 42, 52) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 8), rnode(GOUT, 51, 40, 62) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 9), rnode(GOUT, 51, 39, 62) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 10), rnode(GOUT, 51, 80, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 11), rnode(GOUT, 51, 80, 46) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 12), rnode(GOUT, 51, 79, 49) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 13), rnode(GOUT, 51, 78, 50) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 14), rnode(GOUT, 51, 77, 48) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 15), rnode(GOUT, 51, 76, 46) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 16), rnode(GOUT, 51, 74, 48) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 17), rnode(GOUT, 51, 73, 45) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 18), rnode(GOUT, 51, 72, 41) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 19), rnode(GOUT, 51, 70, 48) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 20), rnode(GOUT, 51, 69, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 21), rnode(GOUT, 51, 68, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 22), rnode(GOUT, 51, 66, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 23), rnode(GOUT, 51, 65, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 24), rnode(GOUT, 51, 64, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 25), rnode(GOUT, 51, 62, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 26), rnode(GOUT, 51, 61, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 27), rnode(GOUT, 51, 59, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 28), rnode(GOUT, 51, 58, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 29), rnode(GOUT, 51, 57, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 30), rnode(GOUT, 51, 55, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 31), rnode(GOUT, 51, 54, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 32), rnode(GOUT, 51, 53, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 33), rnode(GOUT, 51, 52, 8) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 34), rnode(GOUT, 51, 51, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 35), rnode(GOUT, 51, 50, 52) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 36), rnode(GOUT, 51, 48, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 37), rnode(GOUT, 51, 47, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 38), rnode(GOUT, 51, 46, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 39), rnode(GOUT, 51, 45, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 40), rnode(GOUT, 51, 45, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 41), rnode(GOUT, 51, 45, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 42), rnode(GOUT, 51, 45, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 43), rnode(GOUT, 51, 45, 53) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 44), rnode(GOUT, 51, 45, 52) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 45), rnode(GOUT, 51, 44, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 46), rnode(GOUT, 51, 44, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 47), rnode(GOUT, 51, 44, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 48), rnode(GOUT, 51, 44, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 49), rnode(GOUT, 51, 44, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 50), rnode(GOUT, 51, 44, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 51), rnode(GOUT, 51, 44, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 52), rnode(GOUT, 51, 44, 53) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 53), rnode(GOUT, 51, 44, 52) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 54), rnode(GOUT, 51, 43, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 55), rnode(GOUT, 51, 43, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 56), rnode(GOUT, 51, 43, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 57), rnode(GOUT, 51, 43, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 58), rnode(GOUT, 51, 43, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 59), rnode(GOUT, 51, 43, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 60), rnode(GOUT, 51, 43, 53) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 61), rnode(GOUT, 51, 43, 52) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 62), rnode(GOUT, 51, 42, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 63), rnode(GOUT, 51, 42, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 64), rnode(GOUT, 51, 42, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 65), rnode(GOUT, 51, 42, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 66), rnode(GOUT, 51, 42, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 67), rnode(GOUT, 51, 42, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 68), rnode(GOUT, 51, 42, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 69), rnode(GOUT, 51, 42, 53) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 70), rnode(GOUT, 51, 41, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 71), rnode(GOUT, 51, 41, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 72), rnode(GOUT, 51, 41, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 73), rnode(GOUT, 51, 41, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 74), rnode(GOUT, 51, 41, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 75), rnode(GOUT, 51, 41, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 76), rnode(GOUT, 51, 41, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 77), rnode(GOUT, 51, 41, 53) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 78), rnode(GOUT, 51, 41, 52) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 79), rnode(GOUT, 51, 40, 63) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 80), rnode(GOUT, 51, 40, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 81), rnode(GOUT, 51, 40, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 82), rnode(GOUT, 51, 40, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 83), rnode(GOUT, 51, 40, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 84), rnode(GOUT, 51, 40, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 85), rnode(GOUT, 51, 40, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 86), rnode(GOUT, 51, 40, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 87), rnode(GOUT, 51, 40, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 88), rnode(GOUT, 51, 40, 53) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 89), rnode(GOUT, 51, 40, 52) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 90), rnode(GOUT, 51, 39, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 91), rnode(GOUT, 51, 39, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 92), rnode(GOUT, 51, 39, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 93), rnode(GOUT, 51, 39, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 94), rnode(GOUT, 51, 39, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 95), rnode(GOUT, 51, 39, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 96), rnode(GOUT, 51, 39, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 97), rnode(GOUT, 51, 39, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 98), rnode(GOUT, 51, 39, 53) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 99), rnode(GOUT, 51, 39, 52) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 100), rnode(GOUT, 51, 80, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 101), rnode(GOUT, 51, 80, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 102), rnode(GOUT, 51, 80, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 103), rnode(GOUT, 51, 80, 53) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 104), rnode(GOUT, 51, 80, 52) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 105), rnode(GOUT, 51, 80, 51) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 106), rnode(GOUT, 51, 80, 50) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 107), rnode(GOUT, 51, 80, 49) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 108), rnode(GOUT, 51, 80, 48) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 109), rnode(GOUT, 51, 80, 47) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 110), rnode(GOUT, 51, 79, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 111), rnode(GOUT, 51, 79, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 112), rnode(GOUT, 51, 79, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 113), rnode(GOUT, 51, 79, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 114), rnode(GOUT, 51, 79, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 115), rnode(GOUT, 51, 79, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 116), rnode(GOUT, 51, 79, 53) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 117), rnode(GOUT, 51, 79, 52) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 118), rnode(GOUT, 51, 79, 51) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 119), rnode(GOUT, 51, 79, 50) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 120), rnode(GOUT, 51, 79, 48) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 121), rnode(GOUT, 51, 79, 47) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 122), rnode(GOUT, 51, 79, 46) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 123), rnode(GOUT, 51, 78, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 124), rnode(GOUT, 51, 78, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 125), rnode(GOUT, 51, 78, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 126), rnode(GOUT, 51, 78, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 127), rnode(GOUT, 51, 78, 53) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 128), rnode(GOUT, 51, 78, 52) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 129), rnode(GOUT, 51, 78, 51) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 130), rnode(GOUT, 51, 78, 49) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 131), rnode(GOUT, 51, 78, 48) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 132), rnode(GOUT, 51, 78, 47) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 133), rnode(GOUT, 51, 78, 46) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 134), rnode(GOUT, 51, 78, 45) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 135), rnode(GOUT, 51, 77, 53) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 136), rnode(GOUT, 51, 77, 52) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 137), rnode(GOUT, 51, 77, 51) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 138), rnode(GOUT, 51, 77, 50) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 139), rnode(GOUT, 51, 77, 49) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 140), rnode(GOUT, 51, 77, 47) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 141), rnode(GOUT, 51, 77, 46) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 142), rnode(GOUT, 51, 77, 45) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 143), rnode(GOUT, 51, 76, 53) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 144), rnode(GOUT, 51, 76, 52) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 145), rnode(GOUT, 51, 76, 51) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 146), rnode(GOUT, 51, 76, 50) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 147), rnode(GOUT, 51, 76, 49) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 148), rnode(GOUT, 51, 76, 48) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 149), rnode(GOUT, 51, 76, 47) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 150), rnode(GOUT, 51, 76, 45) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 151), rnode(GOUT, 51, 75, 49) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 152), rnode(GOUT, 51, 75, 48) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 153), rnode(GOUT, 51, 75, 47) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 154), rnode(GOUT, 51, 75, 46) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 155), rnode(GOUT, 51, 75, 45) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 156), rnode(GOUT, 51, 75, 44) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 157), rnode(GOUT, 51, 75, 43) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 158), rnode(GOUT, 51, 75, 42) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 159), rnode(GOUT, 51, 75, 41) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 160), rnode(GOUT, 51, 74, 47) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 161), rnode(GOUT, 51, 74, 46) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 162), rnode(GOUT, 51, 74, 45) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 163), rnode(GOUT, 51, 74, 44) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 164), rnode(GOUT, 51, 74, 43) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 165), rnode(GOUT, 51, 74, 42) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 166), rnode(GOUT, 51, 74, 41) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 167), rnode(GOUT, 51, 73, 48) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 168), rnode(GOUT, 51, 73, 47) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 169), rnode(GOUT, 51, 73, 46) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 170), rnode(GOUT, 51, 73, 44) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 171), rnode(GOUT, 51, 73, 43) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 172), rnode(GOUT, 51, 73, 42) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 173), rnode(GOUT, 51, 73, 41) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 174), rnode(GOUT, 51, 72, 47) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 175), rnode(GOUT, 51, 72, 46) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 176), rnode(GOUT, 51, 72, 45) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 177), rnode(GOUT, 51, 72, 44) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 178), rnode(GOUT, 51, 72, 43) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 179), rnode(GOUT, 51, 72, 42) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 180), rnode(GOUT, 51, 72, 40) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 181), rnode(GOUT, 51, 71, 48) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 182), rnode(GOUT, 51, 71, 47) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 183), rnode(GOUT, 51, 71, 46) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 184), rnode(GOUT, 51, 71, 45) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 185), rnode(GOUT, 51, 71, 44) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 186), rnode(GOUT, 51, 71, 43) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 187), rnode(GOUT, 51, 71, 42) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 188), rnode(GOUT, 51, 71, 41) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 189), rnode(GOUT, 51, 71, 40) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 190), rnode(GOUT, 51, 70, 47) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 191), rnode(GOUT, 51, 70, 46) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 192), rnode(GOUT, 51, 70, 45) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 193), rnode(GOUT, 51, 70, 44) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 194), rnode(GOUT, 51, 70, 43) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 195), rnode(GOUT, 51, 70, 42) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 196), rnode(GOUT, 51, 70, 41) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 197), rnode(GOUT, 51, 70, 40) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 198), rnode(GOUT, 51, 69, 62) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 199), rnode(GOUT, 51, 69, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 200), rnode(GOUT, 51, 69, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 201), rnode(GOUT, 51, 69, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 202), rnode(GOUT, 51, 69, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 203), rnode(GOUT, 51, 69, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 204), rnode(GOUT, 51, 68, 62) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 205), rnode(GOUT, 51, 68, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 206), rnode(GOUT, 51, 68, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 207), rnode(GOUT, 51, 68, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 208), rnode(GOUT, 51, 68, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 209), rnode(GOUT, 51, 68, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 210), rnode(GOUT, 51, 68, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 211), rnode(GOUT, 51, 67, 62) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 212), rnode(GOUT, 51, 67, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 213), rnode(GOUT, 51, 67, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 214), rnode(GOUT, 51, 67, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 215), rnode(GOUT, 51, 67, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 216), rnode(GOUT, 51, 67, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 217), rnode(GOUT, 51, 67, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 218), rnode(GOUT, 51, 67, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 219), rnode(GOUT, 51, 66, 62) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 220), rnode(GOUT, 51, 66, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 221), rnode(GOUT, 51, 66, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 222), rnode(GOUT, 51, 66, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 223), rnode(GOUT, 51, 66, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 224), rnode(GOUT, 51, 66, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 225), rnode(GOUT, 51, 66, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 226), rnode(GOUT, 51, 65, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 227), rnode(GOUT, 51, 65, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 228), rnode(GOUT, 51, 65, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 229), rnode(GOUT, 51, 65, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 230), rnode(GOUT, 51, 65, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 231), rnode(GOUT, 51, 65, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 232), rnode(GOUT, 51, 65, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 233), rnode(GOUT, 51, 64, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 234), rnode(GOUT, 51, 64, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 235), rnode(GOUT, 51, 64, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 236), rnode(GOUT, 51, 64, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 237), rnode(GOUT, 51, 64, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 238), rnode(GOUT, 51, 64, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 239), rnode(GOUT, 51, 64, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 240), rnode(GOUT, 51, 63, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 241), rnode(GOUT, 51, 63, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 242), rnode(GOUT, 51, 63, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 243), rnode(GOUT, 51, 63, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 244), rnode(GOUT, 51, 63, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 245), rnode(GOUT, 51, 63, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 246), rnode(GOUT, 51, 63, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 247), rnode(GOUT, 51, 63, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 248), rnode(GOUT, 51, 62, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 249), rnode(GOUT, 51, 62, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 250), rnode(GOUT, 51, 62, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 251), rnode(GOUT, 51, 62, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 252), rnode(GOUT, 51, 62, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 253), rnode(GOUT, 51, 62, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 254), rnode(GOUT, 51, 62, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 255), rnode(GOUT, 51, 61, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 256), rnode(GOUT, 51, 61, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 257), rnode(GOUT, 51, 61, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 258), rnode(GOUT, 51, 61, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 259), rnode(GOUT, 51, 61, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 260), rnode(GOUT, 51, 61, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 261), rnode(GOUT, 51, 61, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 262), rnode(GOUT, 51, 60, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 263), rnode(GOUT, 51, 60, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 264), rnode(GOUT, 51, 60, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 265), rnode(GOUT, 51, 60, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 266), rnode(GOUT, 51, 60, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 267), rnode(GOUT, 51, 60, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 268), rnode(GOUT, 51, 60, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 269), rnode(GOUT, 51, 60, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 270), rnode(GOUT, 51, 59, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 271), rnode(GOUT, 51, 59, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 272), rnode(GOUT, 51, 59, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 273), rnode(GOUT, 51, 59, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 274), rnode(GOUT, 51, 59, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 275), rnode(GOUT, 51, 59, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 276), rnode(GOUT, 51, 59, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 277), rnode(GOUT, 51, 58, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 278), rnode(GOUT, 51, 58, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 279), rnode(GOUT, 51, 58, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 280), rnode(GOUT, 51, 58, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 281), rnode(GOUT, 51, 58, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 282), rnode(GOUT, 51, 58, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 283), rnode(GOUT, 51, 58, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 284), rnode(GOUT, 51, 57, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 285), rnode(GOUT, 51, 57, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 286), rnode(GOUT, 51, 57, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 287), rnode(GOUT, 51, 57, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 288), rnode(GOUT, 51, 57, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 289), rnode(GOUT, 51, 57, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 290), rnode(GOUT, 51, 56, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 291), rnode(GOUT, 51, 56, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 292), rnode(GOUT, 51, 56, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 293), rnode(GOUT, 51, 56, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 294), rnode(GOUT, 51, 56, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 295), rnode(GOUT, 51, 56, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 296), rnode(GOUT, 51, 56, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 297), rnode(GOUT, 51, 55, 63) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 298), rnode(GOUT, 51, 55, 62) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 299), rnode(GOUT, 51, 55, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 300), rnode(GOUT, 51, 55, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 301), rnode(GOUT, 51, 55, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 302), rnode(GOUT, 51, 55, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 303), rnode(GOUT, 51, 55, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 304), rnode(GOUT, 51, 55, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 305), rnode(GOUT, 51, 54, 63) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 306), rnode(GOUT, 51, 54, 62) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 307), rnode(GOUT, 51, 54, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 308), rnode(GOUT, 51, 54, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 309), rnode(GOUT, 51, 54, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 310), rnode(GOUT, 51, 54, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 311), rnode(GOUT, 51, 54, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 312), rnode(GOUT, 51, 54, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 313), rnode(GOUT, 51, 54, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 314), rnode(GOUT, 51, 53, 63) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 315), rnode(GOUT, 51, 53, 62) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 316), rnode(GOUT, 51, 53, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 317), rnode(GOUT, 51, 53, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 318), rnode(GOUT, 51, 53, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 319), rnode(GOUT, 51, 53, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 320), rnode(GOUT, 51, 53, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 321), rnode(GOUT, 51, 53, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 322), rnode(GOUT, 51, 53, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 323), rnode(GOUT, 51, 52, 15) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 324), rnode(GOUT, 51, 52, 14) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 325), rnode(GOUT, 51, 52, 13) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 326), rnode(GOUT, 51, 52, 12) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 327), rnode(GOUT, 51, 52, 11) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 328), rnode(GOUT, 51, 52, 10) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 329), rnode(GOUT, 51, 52, 9) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 330), rnode(GOUT, 51, 52, 7) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 331), rnode(GOUT, 51, 52, 6) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 332), rnode(GOUT, 51, 51, 62) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 333), rnode(GOUT, 51, 51, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 334), rnode(GOUT, 51, 51, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 335), rnode(GOUT, 51, 51, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 336), rnode(GOUT, 51, 51, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 337), rnode(GOUT, 51, 51, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 338), rnode(GOUT, 51, 51, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 339), rnode(GOUT, 51, 51, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 340), rnode(GOUT, 51, 51, 53) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 341), rnode(GOUT, 51, 50, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 342), rnode(GOUT, 51, 50, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 343), rnode(GOUT, 51, 50, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 344), rnode(GOUT, 51, 50, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 345), rnode(GOUT, 51, 50, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 346), rnode(GOUT, 51, 50, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 347), rnode(GOUT, 51, 50, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 348), rnode(GOUT, 51, 50, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 349), rnode(GOUT, 51, 50, 53) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 350), rnode(GOUT, 51, 49, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 351), rnode(GOUT, 51, 49, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 352), rnode(GOUT, 51, 49, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 353), rnode(GOUT, 51, 49, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 354), rnode(GOUT, 51, 49, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 355), rnode(GOUT, 51, 49, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 356), rnode(GOUT, 51, 49, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 357), rnode(GOUT, 51, 49, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 358), rnode(GOUT, 51, 49, 53) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 359), rnode(GOUT, 51, 49, 52) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 360), rnode(GOUT, 51, 48, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 361), rnode(GOUT, 51, 48, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 362), rnode(GOUT, 51, 48, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 363), rnode(GOUT, 51, 48, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 364), rnode(GOUT, 51, 48, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 365), rnode(GOUT, 51, 48, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 366), rnode(GOUT, 51, 48, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 367), rnode(GOUT, 51, 48, 53) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 368), rnode(GOUT, 51, 48, 52) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 369), rnode(GOUT, 51, 47, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 370), rnode(GOUT, 51, 47, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 371), rnode(GOUT, 51, 47, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 372), rnode(GOUT, 51, 47, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 373), rnode(GOUT, 51, 47, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 374), rnode(GOUT, 51, 47, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 375), rnode(GOUT, 51, 47, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 376), rnode(GOUT, 51, 47, 53) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 377), rnode(GOUT, 51, 47, 52) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 378), rnode(GOUT, 51, 46, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 379), rnode(GOUT, 51, 46, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 380), rnode(GOUT, 51, 46, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 381), rnode(GOUT, 51, 46, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 382), rnode(GOUT, 51, 46, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 383), rnode(GOUT, 51, 46, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 384), rnode(GOUT, 51, 46, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 385), rnode(GOUT, 51, 46, 53) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 386), rnode(GOUT, 51, 46, 52) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 387), rnode(GOUT, 51, 45, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 388), rnode(GOUT, 51, 45, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCANIN, -1, 389), rnode(GOUT, 51, 45, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SCAN_EN, -1, -1), rnode(GOUT, 51, 68, 51) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SDMMCTESTEN, -1, -1), rnode(GOUT, 51, 75, 2) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_SPIMTESTEN, -1, -1), rnode(GOUT, 51, 75, 22) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_TEST_CKEN, -1, -1), rnode(GOUT, 51, 77, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_TEST_CLK, -1, -1), rnode(DCMUX, 51, 79, 1) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_TEST_CLKOFF, -1, -1), rnode(GOUT, 51, 77, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_TPIUTRACECLKIN_TESTEN, -1, -1), rnode(GOUT, 51, 40, 12) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_USBMPTESTEN, -1, -1), rnode(GOUT, 51, 70, 2) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_USBULPICLK_TESTEN, -1, 0), rnode(GOUT, 51, 70, 1) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_USBULPICLK_TESTEN, -1, 1), rnode(GOUT, 51, 70, 0) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_VIOSCANCLK_TESTEN, -1, -1), rnode(GOUT, 51, 77, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_VIOSCANEN, -1, -1), rnode(GOUT, 51, 77, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_FPGA_VIOSCANIN, -1, -1), rnode(GOUT, 51, 77, 32) },
  { pnode(HPS_TEST, 52, 46, DFT_IN_HPS_TESTMODE_N, -1, -1), rnode(GOUT, 51, 68, 50) },
  { pnode(HPS_TEST, 52, 46, DFX_IN_FPGA_T2_CLK, -1, -1), rnode(GOUT, 51, 76, 13) },
  { pnode(HPS_TEST, 52, 46, DFX_IN_FPGA_T2_DATAIN, -1, -1), rnode(GOUT, 51, 76, 12) },
  { pnode(HPS_TEST, 52, 46, DFX_IN_FPGA_T2_SCAN_EN_N, -1, -1), rnode(GOUT, 51, 76, 11) },
  { pnode(HPS_TEST, 52, 46, DFX_SCAN_CLK, -1, -1), rnode(GOUT, 51, 53, 11) },
  { pnode(HPS_TEST, 52, 46, DFX_SCAN_DIN, -1, -1), rnode(GOUT, 51, 53, 10) },
  { pnode(HPS_TEST, 52, 46, DFX_SCAN_EN, -1, -1), rnode(GOUT, 51, 53, 9) },
  { pnode(HPS_TEST, 52, 46, DFX_SCAN_LOAD, -1, -1), rnode(GOUT, 51, 53, 8) },
  { pnode(HPS_TEST, 52, 46, F2S_CTRL, -1, -1), rnode(GOUT, 51, 40, 17) },
  { pnode(HPS_TEST, 52, 46, F2S_JTAG_ENABLE_CORE, -1, -1), rnode(GOUT, 51, 40, 16) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_BIST_CPU_SO, -1, -1), rnode(GIN, 51, 69, 30) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_BIST_L2_SO, -1, -1), rnode(GIN, 51, 69, 29) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_BIST_PERI_SO, 0, -1), rnode(GIN, 51, 69, 28) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_BIST_PERI_SO, 1, -1), rnode(GIN, 51, 69, 27) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_BIST_PERI_SO, 2, -1), rnode(GIN, 51, 51, 49) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_DLLLOCKED, -1, -1), rnode(GIN, 51, 80, 27) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_DLLSETTING, -1, 0), rnode(GIN, 51, 80, 26) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_DLLSETTING, -1, 1), rnode(GIN, 51, 80, 25) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_DLLSETTING, -1, 2), rnode(GIN, 51, 80, 24) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_DLLSETTING, -1, 3), rnode(GIN, 51, 80, 23) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_DLLSETTING, -1, 4), rnode(GIN, 51, 80, 22) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_DLLSETTING, -1, 5), rnode(GIN, 51, 80, 21) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_DLLSETTING, -1, 6), rnode(GIN, 51, 80, 20) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_DLLUPDWNCORE, -1, -1), rnode(GIN, 51, 80, 19) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 0), rnode(GIN, 51, 69, 26) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 1), rnode(GIN, 51, 69, 15) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 2), rnode(GIN, 51, 69, 4) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 3), rnode(GIN, 51, 68, 24) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 4), rnode(GIN, 51, 68, 18) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 5), rnode(GIN, 51, 68, 17) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 6), rnode(GIN, 51, 68, 16) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 7), rnode(GIN, 51, 68, 15) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 8), rnode(GIN, 51, 68, 14) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 9), rnode(GIN, 51, 68, 13) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 10), rnode(GIN, 51, 69, 25) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 11), rnode(GIN, 51, 69, 24) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 12), rnode(GIN, 51, 69, 23) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 13), rnode(GIN, 51, 69, 22) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 14), rnode(GIN, 51, 69, 21) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 15), rnode(GIN, 51, 69, 20) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 16), rnode(GIN, 51, 69, 19) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 17), rnode(GIN, 51, 69, 18) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 18), rnode(GIN, 51, 69, 17) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 19), rnode(GIN, 51, 69, 16) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 20), rnode(GIN, 51, 69, 14) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 21), rnode(GIN, 51, 69, 13) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 22), rnode(GIN, 51, 69, 12) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 23), rnode(GIN, 51, 69, 11) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 24), rnode(GIN, 51, 69, 10) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 25), rnode(GIN, 51, 69, 9) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 26), rnode(GIN, 51, 69, 8) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 27), rnode(GIN, 51, 69, 7) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 28), rnode(GIN, 51, 69, 6) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 29), rnode(GIN, 51, 69, 5) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 30), rnode(GIN, 51, 69, 3) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 31), rnode(GIN, 51, 69, 2) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 32), rnode(GIN, 51, 69, 1) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 33), rnode(GIN, 51, 69, 0) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 34), rnode(GIN, 51, 68, 30) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 35), rnode(GIN, 51, 68, 29) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 36), rnode(GIN, 51, 68, 28) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 37), rnode(GIN, 51, 68, 27) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 38), rnode(GIN, 51, 68, 26) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 39), rnode(GIN, 51, 68, 25) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 40), rnode(GIN, 51, 68, 23) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 41), rnode(GIN, 51, 68, 22) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 42), rnode(GIN, 51, 68, 21) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 43), rnode(GIN, 51, 68, 20) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOCDATA3IN, -1, 44), rnode(GIN, 51, 68, 19) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIODQSOUT, -1, 0), rnode(GIN, 51, 68, 12) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIODQSOUT, -1, 1), rnode(GIN, 51, 68, 11) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIODQSOUT, -1, 2), rnode(GIN, 51, 68, 10) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIODQSOUT, -1, 3), rnode(GIN, 51, 68, 9) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIODQSOUT, -1, 4), rnode(GIN, 51, 68, 8) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIODQSUNGATING, -1, 0), rnode(GIN, 51, 68, 7) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIODQSUNGATING, -1, 1), rnode(GIN, 51, 68, 6) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIODQSUNGATING, -1, 2), rnode(GIN, 51, 68, 5) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIODQSUNGATING, -1, 3), rnode(GIN, 51, 68, 4) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIODQSUNGATING, -1, 4), rnode(GIN, 51, 68, 3) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOOCTRT, -1, 0), rnode(GIN, 51, 68, 2) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOOCTRT, -1, 1), rnode(GIN, 51, 68, 1) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOOCTRT, -1, 2), rnode(GIN, 51, 68, 0) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOOCTRT, -1, 3), rnode(GIN, 51, 67, 30) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOOCTRT, -1, 4), rnode(GIN, 51, 67, 29) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOSCANOUT, -1, 0), rnode(GIN, 51, 67, 28) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_HIOSCANOUT, -1, 1), rnode(GIN, 51, 67, 27) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_IPSCOUT, -1, 0), rnode(GIN, 51, 67, 26) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_IPSCOUT, -1, 1), rnode(GIN, 51, 67, 25) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_IPSCOUT, -1, 2), rnode(GIN, 51, 67, 24) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_IPSCOUT, -1, 3), rnode(GIN, 51, 67, 23) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_IPSCOUT, -1, 4), rnode(GIN, 51, 67, 22) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_MEM_CPU_SO, -1, -1), rnode(GIN, 51, 67, 21) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_MEM_L2_SO, -1, -1), rnode(GIN, 51, 67, 20) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_MEM_PERI_SO, 0, -1), rnode(GIN, 51, 67, 19) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_MEM_PERI_SO, 1, -1), rnode(GIN, 51, 67, 18) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_MEM_PERI_SO, 2, -1), rnode(GIN, 51, 51, 48) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_OCTCLKUSRDFT, -1, -1), rnode(GIN, 51, 80, 18) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_OCTCOMPOUT_RDN, -1, -1), rnode(GIN, 51, 80, 17) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_OCTCOMPOUT_RUP, -1, -1), rnode(GIN, 51, 80, 16) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_OCTSCANOUT, -1, -1), rnode(GIN, 51, 80, 15) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_OCTSERDATA, -1, -1), rnode(GIN, 51, 80, 14) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_PLL_TESTBUS_OUT, -1, 0), rnode(GIN, 51, 80, 13) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_PLL_TESTBUS_OUT, -1, 1), rnode(GIN, 51, 80, 12) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_PLL_TESTBUS_OUT, -1, 2), rnode(GIN, 51, 80, 11) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_PSTTRACKSAMPLE, -1, 0), rnode(GIN, 51, 67, 17) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_PSTTRACKSAMPLE, -1, 1), rnode(GIN, 51, 67, 16) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_PSTTRACKSAMPLE, -1, 2), rnode(GIN, 51, 67, 15) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_PSTTRACKSAMPLE, -1, 3), rnode(GIN, 51, 67, 14) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_PSTTRACKSAMPLE, -1, 4), rnode(GIN, 51, 67, 13) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_PSTVFIFO, -1, 0), rnode(GIN, 51, 67, 12) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_PSTVFIFO, -1, 1), rnode(GIN, 51, 67, 11) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_PSTVFIFO, -1, 2), rnode(GIN, 51, 67, 10) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_PSTVFIFO, -1, 3), rnode(GIN, 51, 67, 9) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_PSTVFIFO, -1, 4), rnode(GIN, 51, 67, 8) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 0), rnode(GIN, 51, 80, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 1), rnode(GIN, 51, 80, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 2), rnode(GIN, 51, 80, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 3), rnode(GIN, 51, 80, 32) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 4), rnode(GIN, 51, 80, 31) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 5), rnode(GIN, 51, 80, 30) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 6), rnode(GIN, 51, 80, 29) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 7), rnode(GIN, 51, 79, 38) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 8), rnode(GIN, 51, 79, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 9), rnode(GIN, 51, 79, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 10), rnode(GIN, 51, 79, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 11), rnode(GIN, 51, 79, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 12), rnode(GIN, 51, 79, 32) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 13), rnode(GIN, 51, 79, 31) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 14), rnode(GIN, 51, 79, 30) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 15), rnode(GIN, 51, 79, 29) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 16), rnode(GIN, 51, 78, 38) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 17), rnode(GIN, 51, 78, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 18), rnode(GIN, 51, 78, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 19), rnode(GIN, 51, 78, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 20), rnode(GIN, 51, 78, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 21), rnode(GIN, 51, 78, 32) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 22), rnode(GIN, 51, 78, 31) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 23), rnode(GIN, 51, 78, 30) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 24), rnode(GIN, 51, 78, 29) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 25), rnode(GIN, 51, 77, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_100_126, -1, 26), rnode(GIN, 51, 77, 32) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 0), rnode(GIN, 51, 76, 31) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 1), rnode(GIN, 51, 76, 30) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 2), rnode(GIN, 51, 76, 29) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 3), rnode(GIN, 51, 75, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 4), rnode(GIN, 51, 75, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 5), rnode(GIN, 51, 75, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 6), rnode(GIN, 51, 75, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 7), rnode(GIN, 51, 75, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 8), rnode(GIN, 51, 74, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 9), rnode(GIN, 51, 74, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 10), rnode(GIN, 51, 74, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 11), rnode(GIN, 51, 74, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 12), rnode(GIN, 51, 73, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 13), rnode(GIN, 51, 73, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 14), rnode(GIN, 51, 73, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 15), rnode(GIN, 51, 73, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 16), rnode(GIN, 51, 73, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 17), rnode(GIN, 51, 72, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 18), rnode(GIN, 51, 72, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 19), rnode(GIN, 51, 72, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 20), rnode(GIN, 51, 72, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 21), rnode(GIN, 51, 71, 41) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 22), rnode(GIN, 51, 71, 40) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 23), rnode(GIN, 51, 71, 39) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 24), rnode(GIN, 51, 71, 38) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 25), rnode(GIN, 51, 71, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 26), rnode(GIN, 51, 71, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 27), rnode(GIN, 51, 71, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 28), rnode(GIN, 51, 71, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 29), rnode(GIN, 51, 70, 41) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 30), rnode(GIN, 51, 70, 40) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 31), rnode(GIN, 51, 70, 39) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 32), rnode(GIN, 51, 70, 38) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 33), rnode(GIN, 51, 70, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 34), rnode(GIN, 51, 70, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 35), rnode(GIN, 51, 70, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 36), rnode(GIN, 51, 70, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 37), rnode(GIN, 51, 70, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 38), rnode(GIN, 51, 69, 38) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 39), rnode(GIN, 51, 69, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 40), rnode(GIN, 51, 69, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 41), rnode(GIN, 51, 69, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 42), rnode(GIN, 51, 69, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 43), rnode(GIN, 51, 69, 32) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 44), rnode(GIN, 51, 69, 31) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 45), rnode(GIN, 51, 68, 38) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 46), rnode(GIN, 51, 68, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 47), rnode(GIN, 51, 68, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 48), rnode(GIN, 51, 68, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 49), rnode(GIN, 51, 68, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 50), rnode(GIN, 51, 68, 32) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 51), rnode(GIN, 51, 68, 31) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 52), rnode(GIN, 51, 67, 38) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 53), rnode(GIN, 51, 67, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 54), rnode(GIN, 51, 67, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 55), rnode(GIN, 51, 67, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 56), rnode(GIN, 51, 67, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 57), rnode(GIN, 51, 67, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 58), rnode(GIN, 51, 67, 32) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 59), rnode(GIN, 51, 66, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 60), rnode(GIN, 51, 66, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 61), rnode(GIN, 51, 66, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 62), rnode(GIN, 51, 66, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 63), rnode(GIN, 51, 66, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 64), rnode(GIN, 51, 66, 32) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 65), rnode(GIN, 51, 66, 31) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 66), rnode(GIN, 51, 66, 30) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 67), rnode(GIN, 51, 65, 41) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 68), rnode(GIN, 51, 65, 40) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 69), rnode(GIN, 51, 65, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 70), rnode(GIN, 51, 65, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 71), rnode(GIN, 51, 65, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 72), rnode(GIN, 51, 65, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 73), rnode(GIN, 51, 65, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 74), rnode(GIN, 51, 65, 32) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 75), rnode(GIN, 51, 65, 31) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 76), rnode(GIN, 51, 65, 30) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 77), rnode(GIN, 51, 64, 41) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 78), rnode(GIN, 51, 64, 40) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 79), rnode(GIN, 51, 64, 38) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 80), rnode(GIN, 51, 64, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 81), rnode(GIN, 51, 64, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 82), rnode(GIN, 51, 64, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 83), rnode(GIN, 51, 64, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 84), rnode(GIN, 51, 64, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 85), rnode(GIN, 51, 64, 32) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 86), rnode(GIN, 51, 64, 31) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 87), rnode(GIN, 51, 64, 30) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 88), rnode(GIN, 51, 63, 41) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 89), rnode(GIN, 51, 63, 39) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 90), rnode(GIN, 51, 63, 38) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 91), rnode(GIN, 51, 63, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 92), rnode(GIN, 51, 63, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 93), rnode(GIN, 51, 63, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 94), rnode(GIN, 51, 63, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 95), rnode(GIN, 51, 63, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 96), rnode(GIN, 51, 63, 32) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 97), rnode(GIN, 51, 63, 31) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 98), rnode(GIN, 51, 63, 30) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 99), rnode(GIN, 51, 62, 40) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 100), rnode(GIN, 51, 62, 39) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 101), rnode(GIN, 51, 62, 38) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 102), rnode(GIN, 51, 62, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 103), rnode(GIN, 51, 62, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 104), rnode(GIN, 51, 62, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 105), rnode(GIN, 51, 62, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 106), rnode(GIN, 51, 62, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 107), rnode(GIN, 51, 62, 32) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 108), rnode(GIN, 51, 62, 31) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 109), rnode(GIN, 51, 61, 41) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 110), rnode(GIN, 51, 61, 40) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 111), rnode(GIN, 51, 61, 39) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 112), rnode(GIN, 51, 61, 38) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 113), rnode(GIN, 51, 61, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 114), rnode(GIN, 51, 61, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 115), rnode(GIN, 51, 61, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 116), rnode(GIN, 51, 61, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 117), rnode(GIN, 51, 61, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 118), rnode(GIN, 51, 61, 32) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_131_250, -1, 119), rnode(GIN, 51, 61, 30) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 0), rnode(GIN, 51, 72, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 1), rnode(GIN, 51, 71, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 2), rnode(GIN, 51, 69, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 3), rnode(GIN, 51, 68, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 4), rnode(GIN, 51, 67, 31) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 5), rnode(GIN, 51, 65, 38) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 6), rnode(GIN, 51, 64, 39) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 7), rnode(GIN, 51, 63, 40) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 8), rnode(GIN, 51, 62, 41) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 9), rnode(GIN, 51, 62, 30) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 10), rnode(GIN, 51, 61, 31) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 11), rnode(GIN, 51, 60, 32) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 12), rnode(GIN, 51, 59, 32) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 13), rnode(GIN, 51, 58, 32) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 14), rnode(GIN, 51, 57, 32) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 15), rnode(GIN, 51, 56, 31) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 16), rnode(GIN, 51, 55, 30) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 17), rnode(GIN, 51, 53, 39) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 18), rnode(GIN, 51, 52, 8) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 19), rnode(GIN, 51, 51, 62) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 20), rnode(GIN, 51, 50, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 21), rnode(GIN, 51, 49, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 22), rnode(GIN, 51, 48, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 23), rnode(GIN, 51, 47, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 24), rnode(GIN, 51, 46, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 25), rnode(GIN, 51, 46, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 26), rnode(GIN, 51, 45, 64) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 27), rnode(GIN, 51, 45, 63) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 28), rnode(GIN, 51, 45, 62) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 29), rnode(GIN, 51, 45, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 30), rnode(GIN, 51, 45, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 31), rnode(GIN, 51, 45, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 32), rnode(GIN, 51, 45, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 33), rnode(GIN, 51, 45, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 34), rnode(GIN, 51, 45, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 35), rnode(GIN, 51, 44, 64) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 36), rnode(GIN, 51, 44, 63) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 37), rnode(GIN, 51, 44, 62) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 38), rnode(GIN, 51, 44, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 39), rnode(GIN, 51, 44, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 40), rnode(GIN, 51, 44, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 41), rnode(GIN, 51, 44, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 42), rnode(GIN, 51, 44, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 43), rnode(GIN, 51, 44, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 44), rnode(GIN, 51, 44, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 45), rnode(GIN, 51, 43, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 46), rnode(GIN, 51, 43, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 47), rnode(GIN, 51, 43, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 48), rnode(GIN, 51, 43, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 49), rnode(GIN, 51, 43, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 50), rnode(GIN, 51, 43, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 51), rnode(GIN, 51, 43, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 52), rnode(GIN, 51, 43, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 53), rnode(GIN, 51, 42, 62) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 54), rnode(GIN, 51, 42, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 55), rnode(GIN, 51, 42, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 56), rnode(GIN, 51, 42, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 57), rnode(GIN, 51, 42, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 58), rnode(GIN, 51, 42, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 59), rnode(GIN, 51, 42, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 60), rnode(GIN, 51, 42, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 61), rnode(GIN, 51, 41, 62) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 62), rnode(GIN, 51, 41, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 63), rnode(GIN, 51, 41, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 64), rnode(GIN, 51, 41, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 65), rnode(GIN, 51, 41, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 66), rnode(GIN, 51, 41, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 67), rnode(GIN, 51, 41, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_15_83, -1, 68), rnode(GIN, 51, 41, 54) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_254_264, -1, 0), rnode(GIN, 51, 60, 38) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_254_264, -1, 1), rnode(GIN, 51, 60, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_254_264, -1, 2), rnode(GIN, 51, 60, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_254_264, -1, 3), rnode(GIN, 51, 60, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_254_264, -1, 4), rnode(GIN, 51, 60, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_254_264, -1, 5), rnode(GIN, 51, 60, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_254_264, -1, 6), rnode(GIN, 51, 60, 31) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_254_264, -1, 7), rnode(GIN, 51, 60, 30) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_254_264, -1, 8), rnode(GIN, 51, 59, 40) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_254_264, -1, 9), rnode(GIN, 51, 59, 39) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_254_264, -1, 10), rnode(GIN, 51, 59, 38) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 0), rnode(GIN, 51, 59, 30) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 1), rnode(GIN, 51, 58, 40) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 2), rnode(GIN, 51, 58, 39) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 3), rnode(GIN, 51, 58, 38) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 4), rnode(GIN, 51, 58, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 5), rnode(GIN, 51, 58, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 6), rnode(GIN, 51, 58, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 7), rnode(GIN, 51, 58, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 8), rnode(GIN, 51, 58, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 9), rnode(GIN, 51, 58, 31) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 10), rnode(GIN, 51, 58, 30) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 11), rnode(GIN, 51, 57, 40) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 12), rnode(GIN, 51, 57, 39) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 13), rnode(GIN, 51, 57, 38) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 14), rnode(GIN, 51, 57, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 15), rnode(GIN, 51, 57, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 16), rnode(GIN, 51, 57, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 17), rnode(GIN, 51, 57, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 18), rnode(GIN, 51, 57, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 19), rnode(GIN, 51, 57, 31) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 20), rnode(GIN, 51, 57, 30) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 21), rnode(GIN, 51, 56, 40) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 22), rnode(GIN, 51, 56, 39) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 23), rnode(GIN, 51, 56, 38) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 24), rnode(GIN, 51, 56, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 25), rnode(GIN, 51, 56, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 26), rnode(GIN, 51, 56, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 27), rnode(GIN, 51, 56, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 28), rnode(GIN, 51, 56, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 29), rnode(GIN, 51, 56, 30) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 30), rnode(GIN, 51, 55, 39) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 31), rnode(GIN, 51, 55, 38) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 32), rnode(GIN, 51, 55, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 33), rnode(GIN, 51, 55, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 34), rnode(GIN, 51, 55, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 35), rnode(GIN, 51, 55, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 36), rnode(GIN, 51, 55, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 37), rnode(GIN, 51, 55, 32) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 38), rnode(GIN, 51, 55, 31) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 39), rnode(GIN, 51, 54, 39) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 40), rnode(GIN, 51, 54, 38) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 41), rnode(GIN, 51, 54, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 42), rnode(GIN, 51, 54, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 43), rnode(GIN, 51, 54, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 44), rnode(GIN, 51, 54, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 45), rnode(GIN, 51, 54, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 46), rnode(GIN, 51, 54, 32) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 47), rnode(GIN, 51, 54, 31) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 48), rnode(GIN, 51, 54, 30) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 49), rnode(GIN, 51, 53, 38) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 50), rnode(GIN, 51, 53, 37) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 51), rnode(GIN, 51, 53, 36) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 52), rnode(GIN, 51, 53, 35) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 53), rnode(GIN, 51, 53, 34) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 54), rnode(GIN, 51, 53, 33) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 55), rnode(GIN, 51, 53, 32) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 56), rnode(GIN, 51, 53, 31) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 57), rnode(GIN, 51, 53, 30) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 58), rnode(GIN, 51, 52, 9) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 59), rnode(GIN, 51, 52, 7) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 60), rnode(GIN, 51, 52, 6) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 61), rnode(GIN, 51, 52, 5) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 62), rnode(GIN, 51, 52, 4) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 63), rnode(GIN, 51, 52, 3) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 64), rnode(GIN, 51, 52, 2) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 65), rnode(GIN, 51, 52, 1) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 66), rnode(GIN, 51, 52, 0) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 67), rnode(GIN, 51, 51, 64) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 68), rnode(GIN, 51, 51, 63) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 69), rnode(GIN, 51, 51, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 70), rnode(GIN, 51, 51, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 71), rnode(GIN, 51, 51, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 72), rnode(GIN, 51, 51, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 73), rnode(GIN, 51, 51, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 74), rnode(GIN, 51, 51, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 75), rnode(GIN, 51, 51, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 76), rnode(GIN, 51, 50, 64) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 77), rnode(GIN, 51, 50, 63) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 78), rnode(GIN, 51, 50, 62) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 79), rnode(GIN, 51, 50, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 80), rnode(GIN, 51, 50, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 81), rnode(GIN, 51, 50, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 82), rnode(GIN, 51, 50, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 83), rnode(GIN, 51, 50, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 84), rnode(GIN, 51, 50, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 85), rnode(GIN, 51, 49, 64) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 86), rnode(GIN, 51, 49, 63) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 87), rnode(GIN, 51, 49, 62) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 88), rnode(GIN, 51, 49, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 89), rnode(GIN, 51, 49, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 90), rnode(GIN, 51, 49, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 91), rnode(GIN, 51, 49, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 92), rnode(GIN, 51, 49, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 93), rnode(GIN, 51, 49, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 94), rnode(GIN, 51, 48, 64) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 95), rnode(GIN, 51, 48, 63) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 96), rnode(GIN, 51, 48, 62) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 97), rnode(GIN, 51, 48, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 98), rnode(GIN, 51, 48, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 99), rnode(GIN, 51, 48, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 100), rnode(GIN, 51, 48, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 101), rnode(GIN, 51, 48, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 102), rnode(GIN, 51, 48, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 103), rnode(GIN, 51, 47, 64) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 104), rnode(GIN, 51, 47, 63) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 105), rnode(GIN, 51, 47, 62) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 106), rnode(GIN, 51, 47, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 107), rnode(GIN, 51, 47, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 108), rnode(GIN, 51, 47, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 109), rnode(GIN, 51, 47, 57) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 110), rnode(GIN, 51, 47, 56) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 111), rnode(GIN, 51, 47, 55) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 112), rnode(GIN, 51, 46, 64) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 113), rnode(GIN, 51, 46, 63) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 114), rnode(GIN, 51, 46, 62) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 115), rnode(GIN, 51, 46, 61) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 116), rnode(GIN, 51, 46, 60) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 117), rnode(GIN, 51, 46, 59) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_271_389, -1, 118), rnode(GIN, 51, 46, 58) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_2_3, -1, 0), rnode(GIN, 51, 65, 39) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_SCANOUT_2_3, -1, 1), rnode(GIN, 51, 56, 32) },
  { pnode(HPS_TEST, 52, 46, DFT_OUT_FPGA_VIOSCANOUT, -1, -1), rnode(GIN, 51, 76, 2) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_DATA, -1, 0), rnode(GIN, 51, 80, 10) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_DATA, -1, 1), rnode(GIN, 51, 80, 1) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_DATA, -1, 2), rnode(GIN, 51, 80, 0) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_DATA, -1, 3), rnode(GIN, 51, 79, 28) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_DATA, -1, 4), rnode(GIN, 51, 79, 27) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_DATA, -1, 5), rnode(GIN, 51, 79, 26) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_DATA, -1, 6), rnode(GIN, 51, 79, 25) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_DATA, -1, 7), rnode(GIN, 51, 79, 24) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_DATA, -1, 8), rnode(GIN, 51, 79, 23) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_DATA, -1, 9), rnode(GIN, 51, 79, 22) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_DATA, -1, 10), rnode(GIN, 51, 80, 9) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_DATA, -1, 11), rnode(GIN, 51, 80, 8) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_DATA, -1, 12), rnode(GIN, 51, 80, 7) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_DATA, -1, 13), rnode(GIN, 51, 80, 6) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_DATA, -1, 14), rnode(GIN, 51, 80, 5) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_DATA, -1, 15), rnode(GIN, 51, 80, 4) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_DATA, -1, 16), rnode(GIN, 51, 80, 3) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_DATA, -1, 17), rnode(GIN, 51, 80, 2) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_DCLK, -1, -1), rnode(GIN, 51, 78, 16) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_OSC1_CLK, -1, -1), rnode(GIN, 51, 80, 28) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_PR_REQUEST, -1, -1), rnode(GIN, 51, 78, 15) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 0), rnode(GIN, 51, 78, 14) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 1), rnode(GIN, 51, 78, 3) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 2), rnode(GIN, 51, 77, 21) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 3), rnode(GIN, 51, 77, 18) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 4), rnode(GIN, 51, 77, 17) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 5), rnode(GIN, 51, 77, 16) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 6), rnode(GIN, 51, 77, 15) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 7), rnode(GIN, 51, 77, 14) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 8), rnode(GIN, 51, 77, 13) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 9), rnode(GIN, 51, 77, 12) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 10), rnode(GIN, 51, 78, 13) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 11), rnode(GIN, 51, 78, 12) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 12), rnode(GIN, 51, 78, 11) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 13), rnode(GIN, 51, 78, 10) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 14), rnode(GIN, 51, 78, 9) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 15), rnode(GIN, 51, 78, 8) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 16), rnode(GIN, 51, 78, 7) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 17), rnode(GIN, 51, 78, 6) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 18), rnode(GIN, 51, 78, 5) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 19), rnode(GIN, 51, 78, 4) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 20), rnode(GIN, 51, 78, 2) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 21), rnode(GIN, 51, 78, 1) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 22), rnode(GIN, 51, 78, 0) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 23), rnode(GIN, 51, 77, 28) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 24), rnode(GIN, 51, 77, 27) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 25), rnode(GIN, 51, 77, 26) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 26), rnode(GIN, 51, 77, 25) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 27), rnode(GIN, 51, 77, 24) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 28), rnode(GIN, 51, 77, 23) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 29), rnode(GIN, 51, 77, 22) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 30), rnode(GIN, 51, 77, 20) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_S2F_DATA, -1, 31), rnode(GIN, 51, 77, 19) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_SDRAM_OBSERVE, -1, 0), rnode(GIN, 51, 64, 13) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_SDRAM_OBSERVE, -1, 1), rnode(GIN, 51, 64, 12) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_SDRAM_OBSERVE, -1, 2), rnode(GIN, 51, 64, 11) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_SDRAM_OBSERVE, -1, 3), rnode(GIN, 51, 64, 10) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_SDRAM_OBSERVE, -1, 4), rnode(GIN, 51, 64, 9) },
  { pnode(HPS_TEST, 52, 46, DFX_OUT_FPGA_T2_DATAOUT, -1, -1), rnode(GIN, 51, 76, 8) },
  { pnode(HPS_TEST, 52, 46, DFX_SCAN_DOUT, -1, -1), rnode(GIN, 51, 64, 8) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACECLKIN, -1, -1), rnode(DCMUX, 51, 46, 2) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACECLK_CTL, -1, -1), rnode(GOUT, 51, 40, 15) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 0), rnode(GIN, 51, 39, 31) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 1), rnode(GIN, 51, 39, 20) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 2), rnode(GIN, 51, 39, 9) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 3), rnode(GIN, 51, 39, 6) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 4), rnode(GIN, 51, 39, 5) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 5), rnode(GIN, 51, 39, 4) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 6), rnode(GIN, 51, 39, 3) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 7), rnode(GIN, 51, 39, 2) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 8), rnode(GIN, 51, 39, 1) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 9), rnode(GIN, 51, 39, 0) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 10), rnode(GIN, 51, 39, 30) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 11), rnode(GIN, 51, 39, 29) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 12), rnode(GIN, 51, 39, 28) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 13), rnode(GIN, 51, 39, 27) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 14), rnode(GIN, 51, 39, 26) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 15), rnode(GIN, 51, 39, 25) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 16), rnode(GIN, 51, 39, 24) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 17), rnode(GIN, 51, 39, 23) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 18), rnode(GIN, 51, 39, 22) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 19), rnode(GIN, 51, 39, 21) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 20), rnode(GIN, 51, 39, 19) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 21), rnode(GIN, 51, 39, 18) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 22), rnode(GIN, 51, 39, 17) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 23), rnode(GIN, 51, 39, 16) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 24), rnode(GIN, 51, 39, 15) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 25), rnode(GIN, 51, 39, 14) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 26), rnode(GIN, 51, 39, 13) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 27), rnode(GIN, 51, 39, 12) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 28), rnode(GIN, 51, 39, 11) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 29), rnode(GIN, 51, 39, 10) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 30), rnode(GIN, 51, 39, 8) },
  { pnode(HPS_TPIU_TRACE, 52, 39, TRACE_DATA, -1, 31), rnode(GIN, 51, 39, 7) },
  { pnode(DLL, 0, 79, ASYNC_LOAD, -1, -1), rnode(GOUT, 1, 81, 10) },
  { pnode(DLL, 0, 79, UPNDN_IN, -1, -1), rnode(GOUT, 1, 81, 9) },
  { pnode(DLL, 0, 79, UPNDN_IN_CLK_ENA, -1, -1), rnode(GOUT, 1, 81, 0) },
  { pnode(DLL, 0, 79, CTRL_OUT, -1, 0), rnode(GIN, 1, 81, 0) },
  { pnode(DLL, 0, 79, CTRL_OUT, -1, 1), rnode(GIN, 1, 81, 1) },
  { pnode(DLL, 0, 79, CTRL_OUT, -1, 2), rnode(GIN, 1, 81, 2) },
  { pnode(DLL, 0, 79, CTRL_OUT, -1, 3), rnode(GIN, 1, 81, 3) },
  { pnode(DLL, 0, 79, CTRL_OUT, -1, 4), rnode(GIN, 1, 81, 4) },
  { pnode(DLL, 0, 79, CTRL_OUT, -1, 5), rnode(GIN, 2, 81, 3) },
  { pnode(DLL, 0, 79, CTRL_OUT, -1, 6), rnode(GIN, 2, 81, 2) },
  { pnode(DLL, 0, 79, LOCKED, -1, -1), rnode(GIN, 2, 81, 0) },
  { pnode(DLL, 0, 79, UPNDN_OUT, -1, -1), rnode(GIN, 2, 81, 1) },
  { pnode(DLL, 7, 0, ASYNC_LOAD, -1, -1), rnode(GOUT, 1, 0, 10) },
  { pnode(DLL, 7, 0, UPNDN_IN, -1, -1), rnode(GOUT, 1, 0, 9) },
  { pnode(DLL, 7, 0, UPNDN_IN_CLK_ENA, -1, -1), rnode(GOUT, 1, 0, 0) },
  { pnode(DLL, 7, 0, CTRL_OUT, -1, 0), rnode(GIN, 1, 0, 0) },
  { pnode(DLL, 7, 0, CTRL_OUT, -1, 1), rnode(GIN, 1, 0, 1) },
  { pnode(DLL, 7, 0, CTRL_OUT, -1, 2), rnode(GIN, 1, 0, 2) },
  { pnode(DLL, 7, 0, CTRL_OUT, -1, 3), rnode(GIN, 1, 0, 3) },
  { pnode(DLL, 7, 0, CTRL_OUT, -1, 4), rnode(GIN, 1, 0, 4) },
  { pnode(DLL, 7, 0, CTRL_OUT, -1, 5), rnode(GIN, 2, 0, 3) },
  { pnode(DLL, 7, 0, CTRL_OUT, -1, 6), rnode(GIN, 2, 0, 2) },
  { pnode(DLL, 7, 0, LOCKED, -1, -1), rnode(GIN, 2, 0, 0) },
  { pnode(DLL, 7, 0, UPNDN_OUT, -1, -1), rnode(GIN, 2, 0, 1) },
  { pnode(DLL, 85, 0, ASYNC_LOAD, -1, -1), rnode(GOUT, 89, 1, 71) },
  { pnode(DLL, 85, 0, UPNDN_IN, -1, -1), rnode(GOUT, 89, 1, 69) },
  { pnode(DLL, 85, 0, UPNDN_IN_CLK_ENA, -1, -1), rnode(GOUT, 89, 1, 70) },
  { pnode(DLL, 85, 0, CTRL_OUT, -1, 0), rnode(GIN, 89, 1, 80) },
  { pnode(DLL, 85, 0, CTRL_OUT, -1, 1), rnode(GIN, 89, 1, 79) },
  { pnode(DLL, 85, 0, CTRL_OUT, -1, 2), rnode(GIN, 89, 1, 78) },
  { pnode(DLL, 85, 0, CTRL_OUT, -1, 3), rnode(GIN, 89, 1, 77) },
  { pnode(DLL, 85, 0, CTRL_OUT, -1, 4), rnode(GIN, 89, 1, 76) },
  { pnode(DLL, 85, 0, CTRL_OUT, -1, 5), rnode(GIN, 89, 1, 75) },
  { pnode(DLL, 85, 0, CTRL_OUT, -1, 6), rnode(GIN, 89, 1, 74) },
  { pnode(DLL, 85, 0, LOCKED, -1, -1), rnode(GIN, 89, 1, 72) },
  { pnode(DLL, 85, 0, UPNDN_OUT, -1, -1), rnode(GIN, 89, 1, 73) },
  { }
};

const mistral::CycloneV::p2p_info mistral::CycloneV::sx120f_p2p_info[] = {
  { pnode(GPIO, 50, 0, DATAOUT, 1, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 0) },
  { pnode(GPIO, 50, 0, DATAOUT, 1, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 1) },
  { pnode(GPIO, 50, 0, DATAOUT, 1, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 2) },
  { pnode(GPIO, 50, 0, DATAOUT, 1, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 3) },
  { pnode(GPIO, 50, 0, DATAOUT, 0, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 4) },
  { pnode(GPIO, 50, 0, DATAOUT, 0, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 5) },
  { pnode(GPIO, 50, 0, DATAOUT, 0, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 6) },
  { pnode(GPIO, 50, 0, DATAOUT, 0, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 7) },
  { pnode(GPIO, 50, 0, DATAOUT, 2, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 8) },
  { pnode(GPIO, 50, 0, DATAOUT, 2, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 9) },
  { pnode(GPIO, 50, 0, DATAOUT, 2, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 10) },
  { pnode(GPIO, 50, 0, DATAOUT, 2, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 11) },
  { pnode(GPIO, 52, 0, DATAOUT, 3, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 12) },
  { pnode(GPIO, 52, 0, DATAOUT, 3, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 13) },
  { pnode(GPIO, 52, 0, DATAOUT, 3, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 14) },
  { pnode(GPIO, 52, 0, DATAOUT, 3, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 15) },
  { pnode(GPIO, 54, 0, DATAOUT, 1, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 16) },
  { pnode(GPIO, 54, 0, DATAOUT, 1, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 17) },
  { pnode(GPIO, 54, 0, DATAOUT, 1, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 18) },
  { pnode(GPIO, 54, 0, DATAOUT, 1, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 19) },
  { pnode(GPIO, 54, 0, DATAOUT, 0, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 20) },
  { pnode(GPIO, 54, 0, DATAOUT, 0, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 21) },
  { pnode(GPIO, 54, 0, DATAOUT, 0, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 22) },
  { pnode(GPIO, 54, 0, DATAOUT, 0, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 23) },
  { pnode(GPIO, 54, 0, DATAOUT, 2, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 24) },
  { pnode(GPIO, 54, 0, DATAOUT, 2, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 25) },
  { pnode(GPIO, 54, 0, DATAOUT, 2, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 26) },
  { pnode(GPIO, 54, 0, DATAOUT, 2, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 27) },
  { pnode(GPIO, 56, 0, DATAOUT, 3, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 28) },
  { pnode(GPIO, 56, 0, DATAOUT, 3, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 29) },
  { pnode(GPIO, 56, 0, DATAOUT, 3, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 30) },
  { pnode(GPIO, 56, 0, DATAOUT, 3, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 31) },
  { pnode(GPIO, 58, 0, DATAOUT, 1, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 36) },
  { pnode(GPIO, 58, 0, DATAOUT, 1, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 37) },
  { pnode(GPIO, 58, 0, DATAOUT, 1, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 38) },
  { pnode(GPIO, 58, 0, DATAOUT, 1, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 39) },
  { pnode(GPIO, 58, 0, DATAOUT, 0, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 40) },
  { pnode(GPIO, 58, 0, DATAOUT, 0, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 41) },
  { pnode(GPIO, 58, 0, DATAOUT, 0, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 42) },
  { pnode(GPIO, 58, 0, DATAOUT, 0, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 43) },
  { pnode(GPIO, 58, 0, DATAOUT, 2, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 44) },
  { pnode(GPIO, 58, 0, DATAOUT, 2, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 45) },
  { pnode(GPIO, 58, 0, DATAOUT, 2, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 46) },
  { pnode(GPIO, 58, 0, DATAOUT, 2, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 47) },
  { pnode(GPIO, 60, 0, DATAOUT, 3, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 48) },
  { pnode(GPIO, 60, 0, DATAOUT, 3, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 49) },
  { pnode(GPIO, 60, 0, DATAOUT, 3, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 50) },
  { pnode(GPIO, 60, 0, DATAOUT, 3, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 51) },
  { pnode(GPIO, 62, 0, DATAOUT, 1, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 52) },
  { pnode(GPIO, 62, 0, DATAOUT, 1, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 53) },
  { pnode(GPIO, 62, 0, DATAOUT, 1, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 54) },
  { pnode(GPIO, 62, 0, DATAOUT, 1, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 55) },
  { pnode(GPIO, 62, 0, DATAOUT, 0, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 56) },
  { pnode(GPIO, 62, 0, DATAOUT, 0, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 57) },
  { pnode(GPIO, 62, 0, DATAOUT, 0, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 58) },
  { pnode(GPIO, 62, 0, DATAOUT, 0, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 59) },
  { pnode(GPIO, 62, 0, DATAOUT, 2, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 60) },
  { pnode(GPIO, 62, 0, DATAOUT, 2, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 61) },
  { pnode(GPIO, 62, 0, DATAOUT, 2, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 62) },
  { pnode(GPIO, 62, 0, DATAOUT, 2, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 63) },
  { pnode(GPIO, 64, 0, DATAOUT, 3, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 64) },
  { pnode(GPIO, 64, 0, DATAOUT, 3, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 65) },
  { pnode(GPIO, 64, 0, DATAOUT, 3, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 66) },
  { pnode(GPIO, 64, 0, DATAOUT, 3, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 67) },
  { pnode(GPIO, 66, 0, DATAOUT, 1, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 72) },
  { pnode(GPIO, 66, 0, DATAOUT, 1, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 73) },
  { pnode(GPIO, 66, 0, DATAOUT, 1, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 74) },
  { pnode(GPIO, 66, 0, DATAOUT, 1, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 75) },
  { pnode(GPIO, 66, 0, DATAOUT, 0, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 76) },
  { pnode(GPIO, 66, 0, DATAOUT, 0, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 77) },
  { pnode(GPIO, 66, 0, DATAOUT, 0, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 78) },
  { pnode(GPIO, 66, 0, DATAOUT, 0, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 79) },
  { pnode(GPIO, 66, 0, DATAOUT, 2, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 80) },
  { pnode(GPIO, 66, 0, DATAOUT, 2, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 81) },
  { pnode(GPIO, 66, 0, DATAOUT, 2, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 82) },
  { pnode(GPIO, 66, 0, DATAOUT, 2, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 83) },
  { pnode(GPIO, 68, 0, DATAOUT, 3, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 84) },
  { pnode(GPIO, 68, 0, DATAOUT, 3, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 85) },
  { pnode(GPIO, 68, 0, DATAOUT, 3, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 86) },
  { pnode(GPIO, 68, 0, DATAOUT, 3, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 87) },
  { pnode(GPIO, 70, 0, DATAOUT, 1, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 88) },
  { pnode(GPIO, 70, 0, DATAOUT, 1, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 89) },
  { pnode(GPIO, 70, 0, DATAOUT, 1, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 90) },
  { pnode(GPIO, 70, 0, DATAOUT, 1, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 91) },
  { pnode(GPIO, 70, 0, DATAOUT, 0, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 92) },
  { pnode(GPIO, 70, 0, DATAOUT, 0, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 93) },
  { pnode(GPIO, 70, 0, DATAOUT, 0, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 94) },
  { pnode(GPIO, 70, 0, DATAOUT, 0, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 95) },
  { pnode(GPIO, 70, 0, DATAOUT, 2, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 96) },
  { pnode(GPIO, 70, 0, DATAOUT, 2, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 97) },
  { pnode(GPIO, 70, 0, DATAOUT, 2, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 98) },
  { pnode(GPIO, 70, 0, DATAOUT, 2, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 99) },
  { pnode(GPIO, 72, 0, DATAOUT, 3, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 100) },
  { pnode(GPIO, 72, 0, DATAOUT, 3, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 101) },
  { pnode(GPIO, 72, 0, DATAOUT, 3, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 102) },
  { pnode(GPIO, 72, 0, DATAOUT, 3, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 103) },
  { pnode(GPIO, 74, 0, DATAOUT, 1, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 108) },
  { pnode(GPIO, 74, 0, DATAOUT, 1, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 109) },
  { pnode(GPIO, 74, 0, DATAOUT, 1, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 110) },
  { pnode(GPIO, 74, 0, DATAOUT, 1, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 111) },
  { pnode(GPIO, 74, 0, DATAOUT, 0, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 112) },
  { pnode(GPIO, 74, 0, DATAOUT, 0, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 113) },
  { pnode(GPIO, 74, 0, DATAOUT, 0, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 114) },
  { pnode(GPIO, 74, 0, DATAOUT, 0, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 115) },
  { pnode(GPIO, 74, 0, DATAOUT, 2, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 116) },
  { pnode(GPIO, 74, 0, DATAOUT, 2, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 117) },
  { pnode(GPIO, 74, 0, DATAOUT, 2, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 118) },
  { pnode(GPIO, 74, 0, DATAOUT, 2, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 119) },
  { pnode(GPIO, 76, 0, DATAOUT, 3, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 120) },
  { pnode(GPIO, 76, 0, DATAOUT, 3, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 121) },
  { pnode(GPIO, 76, 0, DATAOUT, 3, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 122) },
  { pnode(GPIO, 76, 0, DATAOUT, 3, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 123) },
  { pnode(GPIO, 78, 0, DATAOUT, 1, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 124) },
  { pnode(GPIO, 78, 0, DATAOUT, 1, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 125) },
  { pnode(GPIO, 78, 0, DATAOUT, 1, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 126) },
  { pnode(GPIO, 78, 0, DATAOUT, 1, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 127) },
  { pnode(GPIO, 78, 0, DATAOUT, 0, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 128) },
  { pnode(GPIO, 78, 0, DATAOUT, 0, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 129) },
  { pnode(GPIO, 78, 0, DATAOUT, 0, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 130) },
  { pnode(GPIO, 78, 0, DATAOUT, 0, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 131) },
  { pnode(GPIO, 78, 0, DATAOUT, 2, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 132) },
  { pnode(GPIO, 78, 0, DATAOUT, 2, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 133) },
  { pnode(GPIO, 78, 0, DATAOUT, 2, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 134) },
  { pnode(GPIO, 78, 0, DATAOUT, 2, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 135) },
  { pnode(GPIO, 80, 0, DATAOUT, 3, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 136) },
  { pnode(GPIO, 80, 0, DATAOUT, 3, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 137) },
  { pnode(GPIO, 80, 0, DATAOUT, 3, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 138) },
  { pnode(GPIO, 80, 0, DATAOUT, 3, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 139) },
  { pnode(GPIO, 82, 0, DATAOUT, 1, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 144) },
  { pnode(GPIO, 82, 0, DATAOUT, 1, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 145) },
  { pnode(GPIO, 82, 0, DATAOUT, 1, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 146) },
  { pnode(GPIO, 82, 0, DATAOUT, 1, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 147) },
  { pnode(GPIO, 82, 0, DATAOUT, 0, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 148) },
  { pnode(GPIO, 82, 0, DATAOUT, 0, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 149) },
  { pnode(GPIO, 82, 0, DATAOUT, 0, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 150) },
  { pnode(GPIO, 82, 0, DATAOUT, 0, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 151) },
  { pnode(GPIO, 82, 0, DATAOUT, 2, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 152) },
  { pnode(GPIO, 82, 0, DATAOUT, 2, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 153) },
  { pnode(GPIO, 82, 0, DATAOUT, 2, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 154) },
  { pnode(GPIO, 82, 0, DATAOUT, 2, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 155) },
  { pnode(GPIO, 84, 0, DATAOUT, 3, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 156) },
  { pnode(GPIO, 84, 0, DATAOUT, 3, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 157) },
  { pnode(GPIO, 84, 0, DATAOUT, 3, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 158) },
  { pnode(GPIO, 84, 0, DATAOUT, 3, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 159) },
  { pnode(GPIO, 86, 0, DATAOUT, 1, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 160) },
  { pnode(GPIO, 86, 0, DATAOUT, 1, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 161) },
  { pnode(GPIO, 86, 0, DATAOUT, 1, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 162) },
  { pnode(GPIO, 86, 0, DATAOUT, 1, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 163) },
  { pnode(GPIO, 86, 0, DATAOUT, 0, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 164) },
  { pnode(GPIO, 86, 0, DATAOUT, 0, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 165) },
  { pnode(GPIO, 86, 0, DATAOUT, 0, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 166) },
  { pnode(GPIO, 86, 0, DATAOUT, 0, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 167) },
  { pnode(GPIO, 86, 0, DATAOUT, 2, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 168) },
  { pnode(GPIO, 86, 0, DATAOUT, 2, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 169) },
  { pnode(GPIO, 86, 0, DATAOUT, 2, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 170) },
  { pnode(GPIO, 86, 0, DATAOUT, 2, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 171) },
  { pnode(GPIO, 88, 0, DATAOUT, 3, 0), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 172) },
  { pnode(GPIO, 88, 0, DATAOUT, 3, 1), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 173) },
  { pnode(GPIO, 88, 0, DATAOUT, 3, 2), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 174) },
  { pnode(GPIO, 88, 0, DATAOUT, 3, 3), pnode(HMC, 25, 0, DDIOPHYDQDIN, -1, 175) },
  { pnode(HMC, 25, 0, PHYDDIOADDRACLR, -1, 0), pnode(GPIO, 40, 0, ACLR, 2, -1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRACLR, -1, 1), pnode(GPIO, 40, 0, ACLR, 3, -1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRACLR, -1, 2), pnode(GPIO, 38, 0, ACLR, 2, -1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRACLR, -1, 3), pnode(GPIO, 38, 0, ACLR, 3, -1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRACLR, -1, 4), pnode(GPIO, 38, 0, ACLR, 0, -1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRACLR, -1, 5), pnode(GPIO, 38, 0, ACLR, 1, -1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRACLR, -1, 6), pnode(GPIO, 36, 0, ACLR, 2, -1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRACLR, -1, 7), pnode(GPIO, 36, 0, ACLR, 3, -1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRACLR, -1, 8), pnode(GPIO, 30, 0, ACLR, 0, -1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRACLR, -1, 9), pnode(GPIO, 30, 0, ACLR, 1, -1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRACLR, -1, 10), pnode(GPIO, 30, 0, ACLR, 2, -1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRACLR, -1, 11), pnode(GPIO, 30, 0, ACLR, 3, -1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRACLR, -1, 12), pnode(GPIO, 28, 0, ACLR, 2, -1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRACLR, -1, 13), pnode(GPIO, 28, 0, ACLR, 3, -1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRACLR, -1, 14), pnode(GPIO, 26, 0, ACLR, 0, -1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRACLR, -1, 15), pnode(GPIO, 26, 0, ACLR, 1, -1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 0), pnode(GPIO, 40, 0, DATAIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 1), pnode(GPIO, 40, 0, DATAIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 2), pnode(GPIO, 40, 0, DATAIN, 2, 2) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 3), pnode(GPIO, 40, 0, DATAIN, 2, 3) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 4), pnode(GPIO, 40, 0, DATAIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 5), pnode(GPIO, 40, 0, DATAIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 6), pnode(GPIO, 40, 0, DATAIN, 3, 2) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 7), pnode(GPIO, 40, 0, DATAIN, 3, 3) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 8), pnode(GPIO, 38, 0, DATAIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 9), pnode(GPIO, 38, 0, DATAIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 10), pnode(GPIO, 38, 0, DATAIN, 2, 2) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 11), pnode(GPIO, 38, 0, DATAIN, 2, 3) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 12), pnode(GPIO, 38, 0, DATAIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 13), pnode(GPIO, 38, 0, DATAIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 14), pnode(GPIO, 38, 0, DATAIN, 3, 2) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 15), pnode(GPIO, 38, 0, DATAIN, 3, 3) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 16), pnode(GPIO, 38, 0, DATAIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 17), pnode(GPIO, 38, 0, DATAIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 18), pnode(GPIO, 38, 0, DATAIN, 0, 2) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 19), pnode(GPIO, 38, 0, DATAIN, 0, 3) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 20), pnode(GPIO, 38, 0, DATAIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 21), pnode(GPIO, 38, 0, DATAIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 22), pnode(GPIO, 38, 0, DATAIN, 1, 2) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 23), pnode(GPIO, 38, 0, DATAIN, 1, 3) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 24), pnode(GPIO, 36, 0, DATAIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 25), pnode(GPIO, 36, 0, DATAIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 26), pnode(GPIO, 36, 0, DATAIN, 2, 2) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 27), pnode(GPIO, 36, 0, DATAIN, 2, 3) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 28), pnode(GPIO, 36, 0, DATAIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 29), pnode(GPIO, 36, 0, DATAIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 30), pnode(GPIO, 36, 0, DATAIN, 3, 2) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 31), pnode(GPIO, 36, 0, DATAIN, 3, 3) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 32), pnode(GPIO, 30, 0, DATAIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 33), pnode(GPIO, 30, 0, DATAIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 34), pnode(GPIO, 30, 0, DATAIN, 0, 2) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 35), pnode(GPIO, 30, 0, DATAIN, 0, 3) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 36), pnode(GPIO, 30, 0, DATAIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 37), pnode(GPIO, 30, 0, DATAIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 38), pnode(GPIO, 30, 0, DATAIN, 1, 2) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 39), pnode(GPIO, 30, 0, DATAIN, 1, 3) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 40), pnode(GPIO, 30, 0, DATAIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 41), pnode(GPIO, 30, 0, DATAIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 42), pnode(GPIO, 30, 0, DATAIN, 2, 2) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 43), pnode(GPIO, 30, 0, DATAIN, 2, 3) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 44), pnode(GPIO, 30, 0, DATAIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 45), pnode(GPIO, 30, 0, DATAIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 46), pnode(GPIO, 30, 0, DATAIN, 3, 2) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 47), pnode(GPIO, 30, 0, DATAIN, 3, 3) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 48), pnode(GPIO, 28, 0, DATAIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 49), pnode(GPIO, 28, 0, DATAIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 50), pnode(GPIO, 28, 0, DATAIN, 2, 2) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 51), pnode(GPIO, 28, 0, DATAIN, 2, 3) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 52), pnode(GPIO, 28, 0, DATAIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 53), pnode(GPIO, 28, 0, DATAIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 54), pnode(GPIO, 28, 0, DATAIN, 3, 2) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 55), pnode(GPIO, 28, 0, DATAIN, 3, 3) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 56), pnode(GPIO, 26, 0, DATAIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 57), pnode(GPIO, 26, 0, DATAIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 58), pnode(GPIO, 26, 0, DATAIN, 0, 2) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 59), pnode(GPIO, 26, 0, DATAIN, 0, 3) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 60), pnode(GPIO, 26, 0, DATAIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 61), pnode(GPIO, 26, 0, DATAIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 62), pnode(GPIO, 26, 0, DATAIN, 1, 2) },
  { pnode(HMC, 25, 0, PHYDDIOADDRDOUT, -1, 63), pnode(GPIO, 26, 0, DATAIN, 1, 3) },
  { pnode(HMC, 25, 0, PHYDDIOBAACLR, -1, -1), pnode(GPIO, 34, 0, ACLR, 1, -1) },
  { pnode(HMC, 25, 0, PHYDDIOBADOUT, -1, 0), pnode(GPIO, 34, 0, DATAIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIOBADOUT, -1, 1), pnode(GPIO, 34, 0, DATAIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIOBADOUT, -1, 2), pnode(GPIO, 34, 0, DATAIN, 2, 2) },
  { pnode(HMC, 25, 0, PHYDDIOBADOUT, -1, 3), pnode(GPIO, 34, 0, DATAIN, 2, 3) },
  { pnode(HMC, 25, 0, PHYDDIOCASNACLR, -1, -1), pnode(GPIO, 32, 0, ACLR, 2, -1) },
  { pnode(HMC, 25, 0, PHYDDIOCASNDOUT, -1, 0), pnode(GPIO, 32, 0, DATAIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIOCASNDOUT, -1, 1), pnode(GPIO, 32, 0, DATAIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIOCASNDOUT, -1, 2), pnode(GPIO, 32, 0, DATAIN, 2, 2) },
  { pnode(HMC, 25, 0, PHYDDIOCASNDOUT, -1, 3), pnode(GPIO, 32, 0, DATAIN, 2, 3) },
  { pnode(HMC, 25, 0, PHYDDIOCKDOUT, -1, 0), pnode(GPIO, 36, 0, DATAIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIOCKDOUT, -1, 1), pnode(GPIO, 36, 0, DATAIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIOCKDOUT, -1, 2), pnode(GPIO, 36, 0, DATAIN, 0, 2) },
  { pnode(HMC, 25, 0, PHYDDIOCKDOUT, -1, 3), pnode(GPIO, 36, 0, DATAIN, 0, 3) },
  { pnode(HMC, 25, 0, PHYDDIOCKEACLR, -1, 0), pnode(GPIO, 62, 0, ACLR, 3, -1) },
  { pnode(HMC, 25, 0, PHYDDIOCKEACLR, -1, 1), pnode(GPIO, 60, 0, ACLR, 2, -1) },
  { pnode(HMC, 25, 0, PHYDDIOCKEDOUT, -1, 0), pnode(GPIO, 62, 0, DATAIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIOCKEDOUT, -1, 1), pnode(GPIO, 62, 0, DATAIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIOCKEDOUT, -1, 2), pnode(GPIO, 62, 0, DATAIN, 3, 2) },
  { pnode(HMC, 25, 0, PHYDDIOCKEDOUT, -1, 3), pnode(GPIO, 62, 0, DATAIN, 3, 3) },
  { pnode(HMC, 25, 0, PHYDDIOCKEDOUT, -1, 4), pnode(GPIO, 60, 0, DATAIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIOCKEDOUT, -1, 5), pnode(GPIO, 60, 0, DATAIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIOCKEDOUT, -1, 6), pnode(GPIO, 60, 0, DATAIN, 2, 2) },
  { pnode(HMC, 25, 0, PHYDDIOCKEDOUT, -1, 7), pnode(GPIO, 60, 0, DATAIN, 2, 3) },
  { pnode(HMC, 25, 0, PHYDDIOCKNDOUT, -1, 0), pnode(GPIO, 36, 0, DATAIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIOCKNDOUT, -1, 1), pnode(GPIO, 36, 0, DATAIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIOCKNDOUT, -1, 2), pnode(GPIO, 36, 0, DATAIN, 1, 2) },
  { pnode(HMC, 25, 0, PHYDDIOCKNDOUT, -1, 3), pnode(GPIO, 36, 0, DATAIN, 1, 3) },
  { pnode(HMC, 25, 0, PHYDDIOCSNACLR, -1, 0), pnode(GPIO, 28, 0, ACLR, 0, -1) },
  { pnode(HMC, 25, 0, PHYDDIOCSNACLR, -1, 1), pnode(GPIO, 28, 0, ACLR, 1, -1) },
  { pnode(HMC, 25, 0, PHYDDIOCSNDOUT, -1, 0), pnode(GPIO, 28, 0, DATAIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIOCSNDOUT, -1, 1), pnode(GPIO, 28, 0, DATAIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIOCSNDOUT, -1, 2), pnode(GPIO, 28, 0, DATAIN, 0, 2) },
  { pnode(HMC, 25, 0, PHYDDIOCSNDOUT, -1, 3), pnode(GPIO, 28, 0, DATAIN, 0, 3) },
  { pnode(HMC, 25, 0, PHYDDIOCSNDOUT, -1, 4), pnode(GPIO, 28, 0, DATAIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIOCSNDOUT, -1, 5), pnode(GPIO, 28, 0, DATAIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIOCSNDOUT, -1, 6), pnode(GPIO, 28, 0, DATAIN, 1, 2) },
  { pnode(HMC, 25, 0, PHYDDIOCSNDOUT, -1, 7), pnode(GPIO, 28, 0, DATAIN, 1, 3) },
  { pnode(HMC, 25, 0, PHYDDIODMDOUT, -1, 0), pnode(GPIO, 56, 0, DATAIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIODMDOUT, -1, 1), pnode(GPIO, 56, 0, DATAIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIODMDOUT, -1, 2), pnode(GPIO, 56, 0, DATAIN, 2, 2) },
  { pnode(HMC, 25, 0, PHYDDIODMDOUT, -1, 3), pnode(GPIO, 56, 0, DATAIN, 2, 3) },
  { pnode(HMC, 25, 0, PHYDDIODMDOUT, -1, 4), pnode(GPIO, 64, 0, DATAIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIODMDOUT, -1, 5), pnode(GPIO, 64, 0, DATAIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIODMDOUT, -1, 6), pnode(GPIO, 64, 0, DATAIN, 2, 2) },
  { pnode(HMC, 25, 0, PHYDDIODMDOUT, -1, 7), pnode(GPIO, 64, 0, DATAIN, 2, 3) },
  { pnode(HMC, 25, 0, PHYDDIODMDOUT, -1, 8), pnode(GPIO, 72, 0, DATAIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIODMDOUT, -1, 9), pnode(GPIO, 72, 0, DATAIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIODMDOUT, -1, 10), pnode(GPIO, 72, 0, DATAIN, 2, 2) },
  { pnode(HMC, 25, 0, PHYDDIODMDOUT, -1, 11), pnode(GPIO, 72, 0, DATAIN, 2, 3) },
  { pnode(HMC, 25, 0, PHYDDIODMDOUT, -1, 12), pnode(GPIO, 80, 0, DATAIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIODMDOUT, -1, 13), pnode(GPIO, 80, 0, DATAIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIODMDOUT, -1, 14), pnode(GPIO, 80, 0, DATAIN, 2, 2) },
  { pnode(HMC, 25, 0, PHYDDIODMDOUT, -1, 15), pnode(GPIO, 80, 0, DATAIN, 2, 3) },
  { pnode(HMC, 25, 0, PHYDDIODMDOUT, -1, 16), pnode(GPIO, 88, 0, DATAIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIODMDOUT, -1, 17), pnode(GPIO, 88, 0, DATAIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIODMDOUT, -1, 18), pnode(GPIO, 88, 0, DATAIN, 2, 2) },
  { pnode(HMC, 25, 0, PHYDDIODMDOUT, -1, 19), pnode(GPIO, 88, 0, DATAIN, 2, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 0), pnode(GPIO, 50, 0, DATAIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 1), pnode(GPIO, 50, 0, DATAIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 2), pnode(GPIO, 50, 0, DATAIN, 1, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 3), pnode(GPIO, 50, 0, DATAIN, 1, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 4), pnode(GPIO, 50, 0, DATAIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 5), pnode(GPIO, 50, 0, DATAIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 6), pnode(GPIO, 50, 0, DATAIN, 0, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 7), pnode(GPIO, 50, 0, DATAIN, 0, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 8), pnode(GPIO, 50, 0, DATAIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 9), pnode(GPIO, 50, 0, DATAIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 10), pnode(GPIO, 50, 0, DATAIN, 2, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 11), pnode(GPIO, 50, 0, DATAIN, 2, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 12), pnode(GPIO, 52, 0, DATAIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 13), pnode(GPIO, 52, 0, DATAIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 14), pnode(GPIO, 52, 0, DATAIN, 3, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 15), pnode(GPIO, 52, 0, DATAIN, 3, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 16), pnode(GPIO, 54, 0, DATAIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 17), pnode(GPIO, 54, 0, DATAIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 18), pnode(GPIO, 54, 0, DATAIN, 1, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 19), pnode(GPIO, 54, 0, DATAIN, 1, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 20), pnode(GPIO, 54, 0, DATAIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 21), pnode(GPIO, 54, 0, DATAIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 22), pnode(GPIO, 54, 0, DATAIN, 0, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 23), pnode(GPIO, 54, 0, DATAIN, 0, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 24), pnode(GPIO, 54, 0, DATAIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 25), pnode(GPIO, 54, 0, DATAIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 26), pnode(GPIO, 54, 0, DATAIN, 2, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 27), pnode(GPIO, 54, 0, DATAIN, 2, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 28), pnode(GPIO, 56, 0, DATAIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 29), pnode(GPIO, 56, 0, DATAIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 30), pnode(GPIO, 56, 0, DATAIN, 3, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 31), pnode(GPIO, 56, 0, DATAIN, 3, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 36), pnode(GPIO, 58, 0, DATAIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 37), pnode(GPIO, 58, 0, DATAIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 38), pnode(GPIO, 58, 0, DATAIN, 1, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 39), pnode(GPIO, 58, 0, DATAIN, 1, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 40), pnode(GPIO, 58, 0, DATAIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 41), pnode(GPIO, 58, 0, DATAIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 42), pnode(GPIO, 58, 0, DATAIN, 0, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 43), pnode(GPIO, 58, 0, DATAIN, 0, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 44), pnode(GPIO, 58, 0, DATAIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 45), pnode(GPIO, 58, 0, DATAIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 46), pnode(GPIO, 58, 0, DATAIN, 2, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 47), pnode(GPIO, 58, 0, DATAIN, 2, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 48), pnode(GPIO, 60, 0, DATAIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 49), pnode(GPIO, 60, 0, DATAIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 50), pnode(GPIO, 60, 0, DATAIN, 3, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 51), pnode(GPIO, 60, 0, DATAIN, 3, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 52), pnode(GPIO, 62, 0, DATAIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 53), pnode(GPIO, 62, 0, DATAIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 54), pnode(GPIO, 62, 0, DATAIN, 1, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 55), pnode(GPIO, 62, 0, DATAIN, 1, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 56), pnode(GPIO, 62, 0, DATAIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 57), pnode(GPIO, 62, 0, DATAIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 58), pnode(GPIO, 62, 0, DATAIN, 0, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 59), pnode(GPIO, 62, 0, DATAIN, 0, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 60), pnode(GPIO, 62, 0, DATAIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 61), pnode(GPIO, 62, 0, DATAIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 62), pnode(GPIO, 62, 0, DATAIN, 2, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 63), pnode(GPIO, 62, 0, DATAIN, 2, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 64), pnode(GPIO, 64, 0, DATAIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 65), pnode(GPIO, 64, 0, DATAIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 66), pnode(GPIO, 64, 0, DATAIN, 3, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 67), pnode(GPIO, 64, 0, DATAIN, 3, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 72), pnode(GPIO, 66, 0, DATAIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 73), pnode(GPIO, 66, 0, DATAIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 74), pnode(GPIO, 66, 0, DATAIN, 1, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 75), pnode(GPIO, 66, 0, DATAIN, 1, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 76), pnode(GPIO, 66, 0, DATAIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 77), pnode(GPIO, 66, 0, DATAIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 78), pnode(GPIO, 66, 0, DATAIN, 0, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 79), pnode(GPIO, 66, 0, DATAIN, 0, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 80), pnode(GPIO, 66, 0, DATAIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 81), pnode(GPIO, 66, 0, DATAIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 82), pnode(GPIO, 66, 0, DATAIN, 2, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 83), pnode(GPIO, 66, 0, DATAIN, 2, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 84), pnode(GPIO, 68, 0, DATAIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 85), pnode(GPIO, 68, 0, DATAIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 86), pnode(GPIO, 68, 0, DATAIN, 3, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 87), pnode(GPIO, 68, 0, DATAIN, 3, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 88), pnode(GPIO, 70, 0, DATAIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 89), pnode(GPIO, 70, 0, DATAIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 90), pnode(GPIO, 70, 0, DATAIN, 1, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 91), pnode(GPIO, 70, 0, DATAIN, 1, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 92), pnode(GPIO, 70, 0, DATAIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 93), pnode(GPIO, 70, 0, DATAIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 94), pnode(GPIO, 70, 0, DATAIN, 0, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 95), pnode(GPIO, 70, 0, DATAIN, 0, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 96), pnode(GPIO, 70, 0, DATAIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 97), pnode(GPIO, 70, 0, DATAIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 98), pnode(GPIO, 70, 0, DATAIN, 2, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 99), pnode(GPIO, 70, 0, DATAIN, 2, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 100), pnode(GPIO, 72, 0, DATAIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 101), pnode(GPIO, 72, 0, DATAIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 102), pnode(GPIO, 72, 0, DATAIN, 3, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 103), pnode(GPIO, 72, 0, DATAIN, 3, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 108), pnode(GPIO, 74, 0, DATAIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 109), pnode(GPIO, 74, 0, DATAIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 110), pnode(GPIO, 74, 0, DATAIN, 1, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 111), pnode(GPIO, 74, 0, DATAIN, 1, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 112), pnode(GPIO, 74, 0, DATAIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 113), pnode(GPIO, 74, 0, DATAIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 114), pnode(GPIO, 74, 0, DATAIN, 0, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 115), pnode(GPIO, 74, 0, DATAIN, 0, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 116), pnode(GPIO, 74, 0, DATAIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 117), pnode(GPIO, 74, 0, DATAIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 118), pnode(GPIO, 74, 0, DATAIN, 2, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 119), pnode(GPIO, 74, 0, DATAIN, 2, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 120), pnode(GPIO, 76, 0, DATAIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 121), pnode(GPIO, 76, 0, DATAIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 122), pnode(GPIO, 76, 0, DATAIN, 3, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 123), pnode(GPIO, 76, 0, DATAIN, 3, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 124), pnode(GPIO, 78, 0, DATAIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 125), pnode(GPIO, 78, 0, DATAIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 126), pnode(GPIO, 78, 0, DATAIN, 1, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 127), pnode(GPIO, 78, 0, DATAIN, 1, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 128), pnode(GPIO, 78, 0, DATAIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 129), pnode(GPIO, 78, 0, DATAIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 130), pnode(GPIO, 78, 0, DATAIN, 0, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 131), pnode(GPIO, 78, 0, DATAIN, 0, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 132), pnode(GPIO, 78, 0, DATAIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 133), pnode(GPIO, 78, 0, DATAIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 134), pnode(GPIO, 78, 0, DATAIN, 2, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 135), pnode(GPIO, 78, 0, DATAIN, 2, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 136), pnode(GPIO, 80, 0, DATAIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 137), pnode(GPIO, 80, 0, DATAIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 138), pnode(GPIO, 80, 0, DATAIN, 3, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 139), pnode(GPIO, 80, 0, DATAIN, 3, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 144), pnode(GPIO, 82, 0, DATAIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 145), pnode(GPIO, 82, 0, DATAIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 146), pnode(GPIO, 82, 0, DATAIN, 1, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 147), pnode(GPIO, 82, 0, DATAIN, 1, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 148), pnode(GPIO, 82, 0, DATAIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 149), pnode(GPIO, 82, 0, DATAIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 150), pnode(GPIO, 82, 0, DATAIN, 0, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 151), pnode(GPIO, 82, 0, DATAIN, 0, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 152), pnode(GPIO, 82, 0, DATAIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 153), pnode(GPIO, 82, 0, DATAIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 154), pnode(GPIO, 82, 0, DATAIN, 2, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 155), pnode(GPIO, 82, 0, DATAIN, 2, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 156), pnode(GPIO, 84, 0, DATAIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 157), pnode(GPIO, 84, 0, DATAIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 158), pnode(GPIO, 84, 0, DATAIN, 3, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 159), pnode(GPIO, 84, 0, DATAIN, 3, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 160), pnode(GPIO, 86, 0, DATAIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 161), pnode(GPIO, 86, 0, DATAIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 162), pnode(GPIO, 86, 0, DATAIN, 1, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 163), pnode(GPIO, 86, 0, DATAIN, 1, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 164), pnode(GPIO, 86, 0, DATAIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 165), pnode(GPIO, 86, 0, DATAIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 166), pnode(GPIO, 86, 0, DATAIN, 0, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 167), pnode(GPIO, 86, 0, DATAIN, 0, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 168), pnode(GPIO, 86, 0, DATAIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 169), pnode(GPIO, 86, 0, DATAIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 170), pnode(GPIO, 86, 0, DATAIN, 2, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 171), pnode(GPIO, 86, 0, DATAIN, 2, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 172), pnode(GPIO, 88, 0, DATAIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 173), pnode(GPIO, 88, 0, DATAIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 174), pnode(GPIO, 88, 0, DATAIN, 3, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQDOUT, -1, 175), pnode(GPIO, 88, 0, DATAIN, 3, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 0), pnode(GPIO, 50, 0, OEIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 1), pnode(GPIO, 50, 0, OEIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 2), pnode(GPIO, 50, 0, OEIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 3), pnode(GPIO, 50, 0, OEIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 4), pnode(GPIO, 50, 0, OEIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 5), pnode(GPIO, 50, 0, OEIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 6), pnode(GPIO, 52, 0, OEIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 7), pnode(GPIO, 52, 0, OEIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 8), pnode(GPIO, 54, 0, OEIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 9), pnode(GPIO, 54, 0, OEIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 10), pnode(GPIO, 54, 0, OEIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 11), pnode(GPIO, 54, 0, OEIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 12), pnode(GPIO, 54, 0, OEIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 13), pnode(GPIO, 54, 0, OEIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 14), pnode(GPIO, 56, 0, OEIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 15), pnode(GPIO, 56, 0, OEIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 18), pnode(GPIO, 58, 0, OEIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 19), pnode(GPIO, 58, 0, OEIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 20), pnode(GPIO, 58, 0, OEIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 21), pnode(GPIO, 58, 0, OEIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 22), pnode(GPIO, 58, 0, OEIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 23), pnode(GPIO, 58, 0, OEIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 24), pnode(GPIO, 60, 0, OEIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 25), pnode(GPIO, 60, 0, OEIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 26), pnode(GPIO, 62, 0, OEIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 27), pnode(GPIO, 62, 0, OEIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 28), pnode(GPIO, 62, 0, OEIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 29), pnode(GPIO, 62, 0, OEIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 30), pnode(GPIO, 62, 0, OEIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 31), pnode(GPIO, 62, 0, OEIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 32), pnode(GPIO, 64, 0, OEIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 33), pnode(GPIO, 64, 0, OEIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 36), pnode(GPIO, 66, 0, OEIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 37), pnode(GPIO, 66, 0, OEIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 38), pnode(GPIO, 66, 0, OEIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 39), pnode(GPIO, 66, 0, OEIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 40), pnode(GPIO, 66, 0, OEIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 41), pnode(GPIO, 66, 0, OEIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 42), pnode(GPIO, 68, 0, OEIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 43), pnode(GPIO, 68, 0, OEIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 44), pnode(GPIO, 70, 0, OEIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 45), pnode(GPIO, 70, 0, OEIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 46), pnode(GPIO, 70, 0, OEIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 47), pnode(GPIO, 70, 0, OEIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 48), pnode(GPIO, 70, 0, OEIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 49), pnode(GPIO, 70, 0, OEIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 50), pnode(GPIO, 72, 0, OEIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 51), pnode(GPIO, 72, 0, OEIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 54), pnode(GPIO, 74, 0, OEIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 55), pnode(GPIO, 74, 0, OEIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 56), pnode(GPIO, 74, 0, OEIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 57), pnode(GPIO, 74, 0, OEIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 58), pnode(GPIO, 74, 0, OEIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 59), pnode(GPIO, 74, 0, OEIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 60), pnode(GPIO, 76, 0, OEIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 61), pnode(GPIO, 76, 0, OEIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 62), pnode(GPIO, 78, 0, OEIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 63), pnode(GPIO, 78, 0, OEIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 64), pnode(GPIO, 78, 0, OEIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 65), pnode(GPIO, 78, 0, OEIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 66), pnode(GPIO, 78, 0, OEIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 67), pnode(GPIO, 78, 0, OEIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 68), pnode(GPIO, 80, 0, OEIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 69), pnode(GPIO, 80, 0, OEIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 72), pnode(GPIO, 82, 0, OEIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 73), pnode(GPIO, 82, 0, OEIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 74), pnode(GPIO, 82, 0, OEIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 75), pnode(GPIO, 82, 0, OEIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 76), pnode(GPIO, 82, 0, OEIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 77), pnode(GPIO, 82, 0, OEIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 78), pnode(GPIO, 84, 0, OEIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 79), pnode(GPIO, 84, 0, OEIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 80), pnode(GPIO, 86, 0, OEIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 81), pnode(GPIO, 86, 0, OEIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 82), pnode(GPIO, 86, 0, OEIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 83), pnode(GPIO, 86, 0, OEIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 84), pnode(GPIO, 86, 0, OEIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 85), pnode(GPIO, 86, 0, OEIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 86), pnode(GPIO, 88, 0, OEIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQOE, -1, 87), pnode(GPIO, 88, 0, OEIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQSBDOUT, -1, 0), pnode(GPIO, 52, 0, DATAIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQSBDOUT, -1, 1), pnode(GPIO, 52, 0, DATAIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQSBDOUT, -1, 2), pnode(GPIO, 52, 0, DATAIN, 1, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQSBDOUT, -1, 3), pnode(GPIO, 52, 0, DATAIN, 1, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQSBDOUT, -1, 4), pnode(GPIO, 60, 0, DATAIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQSBDOUT, -1, 5), pnode(GPIO, 60, 0, DATAIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQSBDOUT, -1, 6), pnode(GPIO, 60, 0, DATAIN, 1, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQSBDOUT, -1, 7), pnode(GPIO, 60, 0, DATAIN, 1, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQSBDOUT, -1, 8), pnode(GPIO, 68, 0, DATAIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQSBDOUT, -1, 9), pnode(GPIO, 68, 0, DATAIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQSBDOUT, -1, 10), pnode(GPIO, 68, 0, DATAIN, 1, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQSBDOUT, -1, 11), pnode(GPIO, 68, 0, DATAIN, 1, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQSBDOUT, -1, 12), pnode(GPIO, 76, 0, DATAIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQSBDOUT, -1, 13), pnode(GPIO, 76, 0, DATAIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQSBDOUT, -1, 14), pnode(GPIO, 76, 0, DATAIN, 1, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQSBDOUT, -1, 15), pnode(GPIO, 76, 0, DATAIN, 1, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQSBDOUT, -1, 16), pnode(GPIO, 84, 0, DATAIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQSBDOUT, -1, 17), pnode(GPIO, 84, 0, DATAIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQSBDOUT, -1, 18), pnode(GPIO, 84, 0, DATAIN, 1, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQSBDOUT, -1, 19), pnode(GPIO, 84, 0, DATAIN, 1, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQSBOE, -1, 0), pnode(GPIO, 52, 0, OEIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQSBOE, -1, 1), pnode(GPIO, 52, 0, OEIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQSBOE, -1, 2), pnode(GPIO, 60, 0, OEIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQSBOE, -1, 3), pnode(GPIO, 60, 0, OEIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQSBOE, -1, 4), pnode(GPIO, 68, 0, OEIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQSBOE, -1, 5), pnode(GPIO, 68, 0, OEIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQSBOE, -1, 6), pnode(GPIO, 76, 0, OEIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQSBOE, -1, 7), pnode(GPIO, 76, 0, OEIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQSBOE, -1, 8), pnode(GPIO, 84, 0, OEIN, 1, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQSBOE, -1, 9), pnode(GPIO, 84, 0, OEIN, 1, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQSDOUT, -1, 0), pnode(GPIO, 52, 0, DATAIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQSDOUT, -1, 1), pnode(GPIO, 52, 0, DATAIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQSDOUT, -1, 2), pnode(GPIO, 52, 0, DATAIN, 0, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQSDOUT, -1, 3), pnode(GPIO, 52, 0, DATAIN, 0, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQSDOUT, -1, 4), pnode(GPIO, 60, 0, DATAIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQSDOUT, -1, 5), pnode(GPIO, 60, 0, DATAIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQSDOUT, -1, 6), pnode(GPIO, 60, 0, DATAIN, 0, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQSDOUT, -1, 7), pnode(GPIO, 60, 0, DATAIN, 0, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQSDOUT, -1, 8), pnode(GPIO, 68, 0, DATAIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQSDOUT, -1, 9), pnode(GPIO, 68, 0, DATAIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQSDOUT, -1, 10), pnode(GPIO, 68, 0, DATAIN, 0, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQSDOUT, -1, 11), pnode(GPIO, 68, 0, DATAIN, 0, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQSDOUT, -1, 12), pnode(GPIO, 76, 0, DATAIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQSDOUT, -1, 13), pnode(GPIO, 76, 0, DATAIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQSDOUT, -1, 14), pnode(GPIO, 76, 0, DATAIN, 0, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQSDOUT, -1, 15), pnode(GPIO, 76, 0, DATAIN, 0, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQSDOUT, -1, 16), pnode(GPIO, 84, 0, DATAIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQSDOUT, -1, 17), pnode(GPIO, 84, 0, DATAIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQSDOUT, -1, 18), pnode(GPIO, 84, 0, DATAIN, 0, 2) },
  { pnode(HMC, 25, 0, PHYDDIODQSDOUT, -1, 19), pnode(GPIO, 84, 0, DATAIN, 0, 3) },
  { pnode(HMC, 25, 0, PHYDDIODQSOE, -1, 0), pnode(GPIO, 52, 0, OEIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQSOE, -1, 1), pnode(GPIO, 52, 0, OEIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQSOE, -1, 2), pnode(GPIO, 60, 0, OEIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQSOE, -1, 3), pnode(GPIO, 60, 0, OEIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQSOE, -1, 4), pnode(GPIO, 68, 0, OEIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQSOE, -1, 5), pnode(GPIO, 68, 0, OEIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQSOE, -1, 6), pnode(GPIO, 76, 0, OEIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQSOE, -1, 7), pnode(GPIO, 76, 0, OEIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIODQSOE, -1, 8), pnode(GPIO, 84, 0, OEIN, 0, 0) },
  { pnode(HMC, 25, 0, PHYDDIODQSOE, -1, 9), pnode(GPIO, 84, 0, OEIN, 0, 1) },
  { pnode(HMC, 25, 0, PHYDDIOODTACLR, -1, 0), pnode(GPIO, 52, 0, ACLR, 2, -1) },
  { pnode(HMC, 25, 0, PHYDDIOODTACLR, -1, 1), pnode(GPIO, 54, 0, ACLR, 3, -1) },
  { pnode(HMC, 25, 0, PHYDDIOODTDOUT, -1, 0), pnode(GPIO, 52, 0, DATAIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIOODTDOUT, -1, 1), pnode(GPIO, 52, 0, DATAIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIOODTDOUT, -1, 2), pnode(GPIO, 52, 0, DATAIN, 2, 2) },
  { pnode(HMC, 25, 0, PHYDDIOODTDOUT, -1, 3), pnode(GPIO, 52, 0, DATAIN, 2, 3) },
  { pnode(HMC, 25, 0, PHYDDIOODTDOUT, -1, 4), pnode(GPIO, 54, 0, DATAIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIOODTDOUT, -1, 5), pnode(GPIO, 54, 0, DATAIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIOODTDOUT, -1, 6), pnode(GPIO, 54, 0, DATAIN, 3, 2) },
  { pnode(HMC, 25, 0, PHYDDIOODTDOUT, -1, 7), pnode(GPIO, 54, 0, DATAIN, 3, 3) },
  { pnode(HMC, 25, 0, PHYDDIORASNACLR, -1, -1), pnode(GPIO, 32, 0, ACLR, 3, -1) },
  { pnode(HMC, 25, 0, PHYDDIORASNDOUT, -1, 0), pnode(GPIO, 32, 0, DATAIN, 3, 0) },
  { pnode(HMC, 25, 0, PHYDDIORASNDOUT, -1, 1), pnode(GPIO, 32, 0, DATAIN, 3, 1) },
  { pnode(HMC, 25, 0, PHYDDIORASNDOUT, -1, 2), pnode(GPIO, 32, 0, DATAIN, 3, 2) },
  { pnode(HMC, 25, 0, PHYDDIORASNDOUT, -1, 3), pnode(GPIO, 32, 0, DATAIN, 3, 3) },
  { pnode(HMC, 25, 0, PHYDDIORESETNACLR, -1, -1), pnode(GPIO, 68, 0, ACLR, 2, -1) },
  { pnode(HMC, 25, 0, PHYDDIORESETNDOUT, -1, 0), pnode(GPIO, 68, 0, DATAIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIORESETNDOUT, -1, 1), pnode(GPIO, 68, 0, DATAIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIORESETNDOUT, -1, 2), pnode(GPIO, 68, 0, DATAIN, 2, 2) },
  { pnode(HMC, 25, 0, PHYDDIORESETNDOUT, -1, 3), pnode(GPIO, 68, 0, DATAIN, 2, 3) },
  { pnode(HMC, 25, 0, PHYDDIOWENACLR, -1, -1), pnode(GPIO, 26, 0, ACLR, 2, -1) },
  { pnode(HMC, 25, 0, PHYDDIOWENDOUT, -1, 0), pnode(GPIO, 26, 0, DATAIN, 2, 0) },
  { pnode(HMC, 25, 0, PHYDDIOWENDOUT, -1, 1), pnode(GPIO, 26, 0, DATAIN, 2, 1) },
  { pnode(HMC, 25, 0, PHYDDIOWENDOUT, -1, 2), pnode(GPIO, 26, 0, DATAIN, 2, 2) },
  { pnode(HMC, 25, 0, PHYDDIOWENDOUT, -1, 3), pnode(GPIO, 26, 0, DATAIN, 2, 3) },
  { pnode(HMC, 25, 0, PNONE, 0, -1), pnode(DQS16, 50, 0, PNONE, -1, -1) },
  { pnode(HMC, 25, 0, PNONE, 1, -1), pnode(DQS16, 58, 0, PNONE, -1, -1) },
  { pnode(HMC, 25, 0, PNONE, 2, -1), pnode(DQS16, 66, 0, PNONE, -1, -1) },
  { pnode(HMC, 25, 0, PNONE, 3, -1), pnode(DQS16, 74, 0, PNONE, -1, -1) },
  { pnode(HMC, 25, 0, PNONE, 4, -1), pnode(DQS16, 82, 0, PNONE, -1, -1) },
  { pnode(HMC, 25, 0, PNONE, -1, -1), pnode(LVL, 55, 0, PNONE, -1, -1) },
  { pnode(GPIO, 89, 66, DATAOUT, 1, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 0) },
  { pnode(GPIO, 89, 66, DATAOUT, 1, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 1) },
  { pnode(GPIO, 89, 66, DATAOUT, 1, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 2) },
  { pnode(GPIO, 89, 66, DATAOUT, 1, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 3) },
  { pnode(GPIO, 89, 66, DATAOUT, 0, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 4) },
  { pnode(GPIO, 89, 66, DATAOUT, 0, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 5) },
  { pnode(GPIO, 89, 66, DATAOUT, 0, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 6) },
  { pnode(GPIO, 89, 66, DATAOUT, 0, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 7) },
  { pnode(GPIO, 89, 66, DATAOUT, 2, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 8) },
  { pnode(GPIO, 89, 66, DATAOUT, 2, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 9) },
  { pnode(GPIO, 89, 66, DATAOUT, 2, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 10) },
  { pnode(GPIO, 89, 66, DATAOUT, 2, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 11) },
  { pnode(GPIO, 89, 65, DATAOUT, 3, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 12) },
  { pnode(GPIO, 89, 65, DATAOUT, 3, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 13) },
  { pnode(GPIO, 89, 65, DATAOUT, 3, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 14) },
  { pnode(GPIO, 89, 65, DATAOUT, 3, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 15) },
  { pnode(GPIO, 89, 64, DATAOUT, 1, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 16) },
  { pnode(GPIO, 89, 64, DATAOUT, 1, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 17) },
  { pnode(GPIO, 89, 64, DATAOUT, 1, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 18) },
  { pnode(GPIO, 89, 64, DATAOUT, 1, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 19) },
  { pnode(GPIO, 89, 64, DATAOUT, 0, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 20) },
  { pnode(GPIO, 89, 64, DATAOUT, 0, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 21) },
  { pnode(GPIO, 89, 64, DATAOUT, 0, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 22) },
  { pnode(GPIO, 89, 64, DATAOUT, 0, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 23) },
  { pnode(GPIO, 89, 64, DATAOUT, 2, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 24) },
  { pnode(GPIO, 89, 64, DATAOUT, 2, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 25) },
  { pnode(GPIO, 89, 64, DATAOUT, 2, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 26) },
  { pnode(GPIO, 89, 64, DATAOUT, 2, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 27) },
  { pnode(GPIO, 89, 63, DATAOUT, 3, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 28) },
  { pnode(GPIO, 89, 63, DATAOUT, 3, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 29) },
  { pnode(GPIO, 89, 63, DATAOUT, 3, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 30) },
  { pnode(GPIO, 89, 63, DATAOUT, 3, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 31) },
  { pnode(GPIO, 89, 59, DATAOUT, 1, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 36) },
  { pnode(GPIO, 89, 59, DATAOUT, 1, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 37) },
  { pnode(GPIO, 89, 59, DATAOUT, 1, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 38) },
  { pnode(GPIO, 89, 59, DATAOUT, 1, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 39) },
  { pnode(GPIO, 89, 59, DATAOUT, 0, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 40) },
  { pnode(GPIO, 89, 59, DATAOUT, 0, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 41) },
  { pnode(GPIO, 89, 59, DATAOUT, 0, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 42) },
  { pnode(GPIO, 89, 59, DATAOUT, 0, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 43) },
  { pnode(GPIO, 89, 59, DATAOUT, 2, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 44) },
  { pnode(GPIO, 89, 59, DATAOUT, 2, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 45) },
  { pnode(GPIO, 89, 59, DATAOUT, 2, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 46) },
  { pnode(GPIO, 89, 59, DATAOUT, 2, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 47) },
  { pnode(GPIO, 89, 58, DATAOUT, 3, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 48) },
  { pnode(GPIO, 89, 58, DATAOUT, 3, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 49) },
  { pnode(GPIO, 89, 58, DATAOUT, 3, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 50) },
  { pnode(GPIO, 89, 58, DATAOUT, 3, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 51) },
  { pnode(GPIO, 89, 57, DATAOUT, 1, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 52) },
  { pnode(GPIO, 89, 57, DATAOUT, 1, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 53) },
  { pnode(GPIO, 89, 57, DATAOUT, 1, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 54) },
  { pnode(GPIO, 89, 57, DATAOUT, 1, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 55) },
  { pnode(GPIO, 89, 57, DATAOUT, 0, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 56) },
  { pnode(GPIO, 89, 57, DATAOUT, 0, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 57) },
  { pnode(GPIO, 89, 57, DATAOUT, 0, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 58) },
  { pnode(GPIO, 89, 57, DATAOUT, 0, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 59) },
  { pnode(GPIO, 89, 57, DATAOUT, 2, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 60) },
  { pnode(GPIO, 89, 57, DATAOUT, 2, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 61) },
  { pnode(GPIO, 89, 57, DATAOUT, 2, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 62) },
  { pnode(GPIO, 89, 57, DATAOUT, 2, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 63) },
  { pnode(GPIO, 89, 56, DATAOUT, 3, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 64) },
  { pnode(GPIO, 89, 56, DATAOUT, 3, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 65) },
  { pnode(GPIO, 89, 56, DATAOUT, 3, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 66) },
  { pnode(GPIO, 89, 56, DATAOUT, 3, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 67) },
  { pnode(GPIO, 89, 52, DATAOUT, 1, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 72) },
  { pnode(GPIO, 89, 52, DATAOUT, 1, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 73) },
  { pnode(GPIO, 89, 52, DATAOUT, 1, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 74) },
  { pnode(GPIO, 89, 52, DATAOUT, 1, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 75) },
  { pnode(GPIO, 89, 52, DATAOUT, 0, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 76) },
  { pnode(GPIO, 89, 52, DATAOUT, 0, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 77) },
  { pnode(GPIO, 89, 52, DATAOUT, 0, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 78) },
  { pnode(GPIO, 89, 52, DATAOUT, 0, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 79) },
  { pnode(GPIO, 89, 52, DATAOUT, 2, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 80) },
  { pnode(GPIO, 89, 52, DATAOUT, 2, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 81) },
  { pnode(GPIO, 89, 52, DATAOUT, 2, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 82) },
  { pnode(GPIO, 89, 52, DATAOUT, 2, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 83) },
  { pnode(GPIO, 89, 51, DATAOUT, 3, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 84) },
  { pnode(GPIO, 89, 51, DATAOUT, 3, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 85) },
  { pnode(GPIO, 89, 51, DATAOUT, 3, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 86) },
  { pnode(GPIO, 89, 51, DATAOUT, 3, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 87) },
  { pnode(GPIO, 89, 50, DATAOUT, 1, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 88) },
  { pnode(GPIO, 89, 50, DATAOUT, 1, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 89) },
  { pnode(GPIO, 89, 50, DATAOUT, 1, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 90) },
  { pnode(GPIO, 89, 50, DATAOUT, 1, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 91) },
  { pnode(GPIO, 89, 50, DATAOUT, 0, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 92) },
  { pnode(GPIO, 89, 50, DATAOUT, 0, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 93) },
  { pnode(GPIO, 89, 50, DATAOUT, 0, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 94) },
  { pnode(GPIO, 89, 50, DATAOUT, 0, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 95) },
  { pnode(GPIO, 89, 50, DATAOUT, 2, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 96) },
  { pnode(GPIO, 89, 50, DATAOUT, 2, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 97) },
  { pnode(GPIO, 89, 50, DATAOUT, 2, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 98) },
  { pnode(GPIO, 89, 50, DATAOUT, 2, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 99) },
  { pnode(GPIO, 89, 49, DATAOUT, 3, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 100) },
  { pnode(GPIO, 89, 49, DATAOUT, 3, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 101) },
  { pnode(GPIO, 89, 49, DATAOUT, 3, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 102) },
  { pnode(GPIO, 89, 49, DATAOUT, 3, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 103) },
  { pnode(GPIO, 89, 45, DATAOUT, 1, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 108) },
  { pnode(GPIO, 89, 45, DATAOUT, 1, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 109) },
  { pnode(GPIO, 89, 45, DATAOUT, 1, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 110) },
  { pnode(GPIO, 89, 45, DATAOUT, 1, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 111) },
  { pnode(GPIO, 89, 45, DATAOUT, 0, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 112) },
  { pnode(GPIO, 89, 45, DATAOUT, 0, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 113) },
  { pnode(GPIO, 89, 45, DATAOUT, 0, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 114) },
  { pnode(GPIO, 89, 45, DATAOUT, 0, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 115) },
  { pnode(GPIO, 89, 45, DATAOUT, 2, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 116) },
  { pnode(GPIO, 89, 45, DATAOUT, 2, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 117) },
  { pnode(GPIO, 89, 45, DATAOUT, 2, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 118) },
  { pnode(GPIO, 89, 45, DATAOUT, 2, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 119) },
  { pnode(GPIO, 89, 44, DATAOUT, 3, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 120) },
  { pnode(GPIO, 89, 44, DATAOUT, 3, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 121) },
  { pnode(GPIO, 89, 44, DATAOUT, 3, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 122) },
  { pnode(GPIO, 89, 44, DATAOUT, 3, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 123) },
  { pnode(GPIO, 89, 43, DATAOUT, 1, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 124) },
  { pnode(GPIO, 89, 43, DATAOUT, 1, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 125) },
  { pnode(GPIO, 89, 43, DATAOUT, 1, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 126) },
  { pnode(GPIO, 89, 43, DATAOUT, 1, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 127) },
  { pnode(GPIO, 89, 43, DATAOUT, 0, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 128) },
  { pnode(GPIO, 89, 43, DATAOUT, 0, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 129) },
  { pnode(GPIO, 89, 43, DATAOUT, 0, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 130) },
  { pnode(GPIO, 89, 43, DATAOUT, 0, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 131) },
  { pnode(GPIO, 89, 43, DATAOUT, 2, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 132) },
  { pnode(GPIO, 89, 43, DATAOUT, 2, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 133) },
  { pnode(GPIO, 89, 43, DATAOUT, 2, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 134) },
  { pnode(GPIO, 89, 43, DATAOUT, 2, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 135) },
  { pnode(GPIO, 89, 42, DATAOUT, 3, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 136) },
  { pnode(GPIO, 89, 42, DATAOUT, 3, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 137) },
  { pnode(GPIO, 89, 42, DATAOUT, 3, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 138) },
  { pnode(GPIO, 89, 42, DATAOUT, 3, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 139) },
  { pnode(GPIO, 89, 39, DATAOUT, 1, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 144) },
  { pnode(GPIO, 89, 39, DATAOUT, 1, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 145) },
  { pnode(GPIO, 89, 39, DATAOUT, 1, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 146) },
  { pnode(GPIO, 89, 39, DATAOUT, 1, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 147) },
  { pnode(GPIO, 89, 39, DATAOUT, 0, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 148) },
  { pnode(GPIO, 89, 39, DATAOUT, 0, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 149) },
  { pnode(GPIO, 89, 39, DATAOUT, 0, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 150) },
  { pnode(GPIO, 89, 39, DATAOUT, 0, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 151) },
  { pnode(GPIO, 89, 39, DATAOUT, 2, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 152) },
  { pnode(GPIO, 89, 39, DATAOUT, 2, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 153) },
  { pnode(GPIO, 89, 39, DATAOUT, 2, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 154) },
  { pnode(GPIO, 89, 39, DATAOUT, 2, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 155) },
  { pnode(GPIO, 89, 38, DATAOUT, 3, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 156) },
  { pnode(GPIO, 89, 38, DATAOUT, 3, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 157) },
  { pnode(GPIO, 89, 38, DATAOUT, 3, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 158) },
  { pnode(GPIO, 89, 38, DATAOUT, 3, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 159) },
  { pnode(GPIO, 89, 37, DATAOUT, 1, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 160) },
  { pnode(GPIO, 89, 37, DATAOUT, 1, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 161) },
  { pnode(GPIO, 89, 37, DATAOUT, 1, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 162) },
  { pnode(GPIO, 89, 37, DATAOUT, 1, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 163) },
  { pnode(GPIO, 89, 37, DATAOUT, 0, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 164) },
  { pnode(GPIO, 89, 37, DATAOUT, 0, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 165) },
  { pnode(GPIO, 89, 37, DATAOUT, 0, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 166) },
  { pnode(GPIO, 89, 37, DATAOUT, 0, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 167) },
  { pnode(GPIO, 89, 37, DATAOUT, 2, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 168) },
  { pnode(GPIO, 89, 37, DATAOUT, 2, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 169) },
  { pnode(GPIO, 89, 37, DATAOUT, 2, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 170) },
  { pnode(GPIO, 89, 37, DATAOUT, 2, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 171) },
  { pnode(GPIO, 89, 36, DATAOUT, 3, 0), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 172) },
  { pnode(GPIO, 89, 36, DATAOUT, 3, 1), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 173) },
  { pnode(GPIO, 89, 36, DATAOUT, 3, 2), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 174) },
  { pnode(GPIO, 89, 36, DATAOUT, 3, 3), pnode(HMC, 89, 80, DDIOPHYDQDIN, -1, 175) },
  { pnode(HMC, 89, 80, PHYDDIOADDRACLR, -1, 0), pnode(GPIO, 89, 71, ACLR, 2, -1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRACLR, -1, 1), pnode(GPIO, 89, 71, ACLR, 3, -1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRACLR, -1, 2), pnode(GPIO, 89, 72, ACLR, 2, -1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRACLR, -1, 3), pnode(GPIO, 89, 72, ACLR, 3, -1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRACLR, -1, 4), pnode(GPIO, 89, 72, ACLR, 0, -1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRACLR, -1, 5), pnode(GPIO, 89, 72, ACLR, 1, -1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRACLR, -1, 6), pnode(GPIO, 89, 73, ACLR, 2, -1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRACLR, -1, 7), pnode(GPIO, 89, 73, ACLR, 3, -1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRACLR, -1, 8), pnode(GPIO, 89, 78, ACLR, 0, -1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRACLR, -1, 9), pnode(GPIO, 89, 78, ACLR, 1, -1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRACLR, -1, 10), pnode(GPIO, 89, 78, ACLR, 2, -1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRACLR, -1, 11), pnode(GPIO, 89, 78, ACLR, 3, -1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRACLR, -1, 12), pnode(GPIO, 89, 79, ACLR, 2, -1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRACLR, -1, 13), pnode(GPIO, 89, 79, ACLR, 3, -1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRACLR, -1, 14), pnode(GPIO, 89, 80, ACLR, 0, -1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRACLR, -1, 15), pnode(GPIO, 89, 80, ACLR, 1, -1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 0), pnode(GPIO, 89, 71, DATAIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 1), pnode(GPIO, 89, 71, DATAIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 2), pnode(GPIO, 89, 71, DATAIN, 2, 2) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 3), pnode(GPIO, 89, 71, DATAIN, 2, 3) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 4), pnode(GPIO, 89, 71, DATAIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 5), pnode(GPIO, 89, 71, DATAIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 6), pnode(GPIO, 89, 71, DATAIN, 3, 2) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 7), pnode(GPIO, 89, 71, DATAIN, 3, 3) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 8), pnode(GPIO, 89, 72, DATAIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 9), pnode(GPIO, 89, 72, DATAIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 10), pnode(GPIO, 89, 72, DATAIN, 2, 2) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 11), pnode(GPIO, 89, 72, DATAIN, 2, 3) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 12), pnode(GPIO, 89, 72, DATAIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 13), pnode(GPIO, 89, 72, DATAIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 14), pnode(GPIO, 89, 72, DATAIN, 3, 2) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 15), pnode(GPIO, 89, 72, DATAIN, 3, 3) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 16), pnode(GPIO, 89, 72, DATAIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 17), pnode(GPIO, 89, 72, DATAIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 18), pnode(GPIO, 89, 72, DATAIN, 0, 2) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 19), pnode(GPIO, 89, 72, DATAIN, 0, 3) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 20), pnode(GPIO, 89, 72, DATAIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 21), pnode(GPIO, 89, 72, DATAIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 22), pnode(GPIO, 89, 72, DATAIN, 1, 2) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 23), pnode(GPIO, 89, 72, DATAIN, 1, 3) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 24), pnode(GPIO, 89, 73, DATAIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 25), pnode(GPIO, 89, 73, DATAIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 26), pnode(GPIO, 89, 73, DATAIN, 2, 2) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 27), pnode(GPIO, 89, 73, DATAIN, 2, 3) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 28), pnode(GPIO, 89, 73, DATAIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 29), pnode(GPIO, 89, 73, DATAIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 30), pnode(GPIO, 89, 73, DATAIN, 3, 2) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 31), pnode(GPIO, 89, 73, DATAIN, 3, 3) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 32), pnode(GPIO, 89, 78, DATAIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 33), pnode(GPIO, 89, 78, DATAIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 34), pnode(GPIO, 89, 78, DATAIN, 0, 2) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 35), pnode(GPIO, 89, 78, DATAIN, 0, 3) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 36), pnode(GPIO, 89, 78, DATAIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 37), pnode(GPIO, 89, 78, DATAIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 38), pnode(GPIO, 89, 78, DATAIN, 1, 2) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 39), pnode(GPIO, 89, 78, DATAIN, 1, 3) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 40), pnode(GPIO, 89, 78, DATAIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 41), pnode(GPIO, 89, 78, DATAIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 42), pnode(GPIO, 89, 78, DATAIN, 2, 2) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 43), pnode(GPIO, 89, 78, DATAIN, 2, 3) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 44), pnode(GPIO, 89, 78, DATAIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 45), pnode(GPIO, 89, 78, DATAIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 46), pnode(GPIO, 89, 78, DATAIN, 3, 2) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 47), pnode(GPIO, 89, 78, DATAIN, 3, 3) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 48), pnode(GPIO, 89, 79, DATAIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 49), pnode(GPIO, 89, 79, DATAIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 50), pnode(GPIO, 89, 79, DATAIN, 2, 2) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 51), pnode(GPIO, 89, 79, DATAIN, 2, 3) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 52), pnode(GPIO, 89, 79, DATAIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 53), pnode(GPIO, 89, 79, DATAIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 54), pnode(GPIO, 89, 79, DATAIN, 3, 2) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 55), pnode(GPIO, 89, 79, DATAIN, 3, 3) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 56), pnode(GPIO, 89, 80, DATAIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 57), pnode(GPIO, 89, 80, DATAIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 58), pnode(GPIO, 89, 80, DATAIN, 0, 2) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 59), pnode(GPIO, 89, 80, DATAIN, 0, 3) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 60), pnode(GPIO, 89, 80, DATAIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 61), pnode(GPIO, 89, 80, DATAIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 62), pnode(GPIO, 89, 80, DATAIN, 1, 2) },
  { pnode(HMC, 89, 80, PHYDDIOADDRDOUT, -1, 63), pnode(GPIO, 89, 80, DATAIN, 1, 3) },
  { pnode(HMC, 89, 80, PHYDDIOBAACLR, -1, -1), pnode(GPIO, 89, 74, ACLR, 1, -1) },
  { pnode(HMC, 89, 80, PHYDDIOBADOUT, -1, 0), pnode(GPIO, 89, 74, DATAIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIOBADOUT, -1, 1), pnode(GPIO, 89, 74, DATAIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIOBADOUT, -1, 2), pnode(GPIO, 89, 74, DATAIN, 2, 2) },
  { pnode(HMC, 89, 80, PHYDDIOBADOUT, -1, 3), pnode(GPIO, 89, 74, DATAIN, 2, 3) },
  { pnode(HMC, 89, 80, PHYDDIOCASNACLR, -1, -1), pnode(GPIO, 89, 77, ACLR, 2, -1) },
  { pnode(HMC, 89, 80, PHYDDIOCASNDOUT, -1, 0), pnode(GPIO, 89, 77, DATAIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIOCASNDOUT, -1, 1), pnode(GPIO, 89, 77, DATAIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIOCASNDOUT, -1, 2), pnode(GPIO, 89, 77, DATAIN, 2, 2) },
  { pnode(HMC, 89, 80, PHYDDIOCASNDOUT, -1, 3), pnode(GPIO, 89, 77, DATAIN, 2, 3) },
  { pnode(HMC, 89, 80, PHYDDIOCKDOUT, -1, 0), pnode(GPIO, 89, 73, DATAIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIOCKDOUT, -1, 1), pnode(GPIO, 89, 73, DATAIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIOCKDOUT, -1, 2), pnode(GPIO, 89, 73, DATAIN, 0, 2) },
  { pnode(HMC, 89, 80, PHYDDIOCKDOUT, -1, 3), pnode(GPIO, 89, 73, DATAIN, 0, 3) },
  { pnode(HMC, 89, 80, PHYDDIOCKEACLR, -1, 0), pnode(GPIO, 89, 57, ACLR, 3, -1) },
  { pnode(HMC, 89, 80, PHYDDIOCKEACLR, -1, 1), pnode(GPIO, 89, 58, ACLR, 2, -1) },
  { pnode(HMC, 89, 80, PHYDDIOCKEDOUT, -1, 0), pnode(GPIO, 89, 57, DATAIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIOCKEDOUT, -1, 1), pnode(GPIO, 89, 57, DATAIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIOCKEDOUT, -1, 2), pnode(GPIO, 89, 57, DATAIN, 3, 2) },
  { pnode(HMC, 89, 80, PHYDDIOCKEDOUT, -1, 3), pnode(GPIO, 89, 57, DATAIN, 3, 3) },
  { pnode(HMC, 89, 80, PHYDDIOCKEDOUT, -1, 4), pnode(GPIO, 89, 58, DATAIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIOCKEDOUT, -1, 5), pnode(GPIO, 89, 58, DATAIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIOCKEDOUT, -1, 6), pnode(GPIO, 89, 58, DATAIN, 2, 2) },
  { pnode(HMC, 89, 80, PHYDDIOCKEDOUT, -1, 7), pnode(GPIO, 89, 58, DATAIN, 2, 3) },
  { pnode(HMC, 89, 80, PHYDDIOCKNDOUT, -1, 0), pnode(GPIO, 89, 73, DATAIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIOCKNDOUT, -1, 1), pnode(GPIO, 89, 73, DATAIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIOCKNDOUT, -1, 2), pnode(GPIO, 89, 73, DATAIN, 1, 2) },
  { pnode(HMC, 89, 80, PHYDDIOCKNDOUT, -1, 3), pnode(GPIO, 89, 73, DATAIN, 1, 3) },
  { pnode(HMC, 89, 80, PHYDDIOCSNACLR, -1, 0), pnode(GPIO, 89, 79, ACLR, 0, -1) },
  { pnode(HMC, 89, 80, PHYDDIOCSNACLR, -1, 1), pnode(GPIO, 89, 79, ACLR, 1, -1) },
  { pnode(HMC, 89, 80, PHYDDIOCSNDOUT, -1, 0), pnode(GPIO, 89, 79, DATAIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIOCSNDOUT, -1, 1), pnode(GPIO, 89, 79, DATAIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIOCSNDOUT, -1, 2), pnode(GPIO, 89, 79, DATAIN, 0, 2) },
  { pnode(HMC, 89, 80, PHYDDIOCSNDOUT, -1, 3), pnode(GPIO, 89, 79, DATAIN, 0, 3) },
  { pnode(HMC, 89, 80, PHYDDIOCSNDOUT, -1, 4), pnode(GPIO, 89, 79, DATAIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIOCSNDOUT, -1, 5), pnode(GPIO, 89, 79, DATAIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIOCSNDOUT, -1, 6), pnode(GPIO, 89, 79, DATAIN, 1, 2) },
  { pnode(HMC, 89, 80, PHYDDIOCSNDOUT, -1, 7), pnode(GPIO, 89, 79, DATAIN, 1, 3) },
  { pnode(HMC, 89, 80, PHYDDIODMDOUT, -1, 0), pnode(GPIO, 89, 63, DATAIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIODMDOUT, -1, 1), pnode(GPIO, 89, 63, DATAIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIODMDOUT, -1, 2), pnode(GPIO, 89, 63, DATAIN, 2, 2) },
  { pnode(HMC, 89, 80, PHYDDIODMDOUT, -1, 3), pnode(GPIO, 89, 63, DATAIN, 2, 3) },
  { pnode(HMC, 89, 80, PHYDDIODMDOUT, -1, 4), pnode(GPIO, 89, 56, DATAIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIODMDOUT, -1, 5), pnode(GPIO, 89, 56, DATAIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIODMDOUT, -1, 6), pnode(GPIO, 89, 56, DATAIN, 2, 2) },
  { pnode(HMC, 89, 80, PHYDDIODMDOUT, -1, 7), pnode(GPIO, 89, 56, DATAIN, 2, 3) },
  { pnode(HMC, 89, 80, PHYDDIODMDOUT, -1, 8), pnode(GPIO, 89, 49, DATAIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIODMDOUT, -1, 9), pnode(GPIO, 89, 49, DATAIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIODMDOUT, -1, 10), pnode(GPIO, 89, 49, DATAIN, 2, 2) },
  { pnode(HMC, 89, 80, PHYDDIODMDOUT, -1, 11), pnode(GPIO, 89, 49, DATAIN, 2, 3) },
  { pnode(HMC, 89, 80, PHYDDIODMDOUT, -1, 12), pnode(GPIO, 89, 42, DATAIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIODMDOUT, -1, 13), pnode(GPIO, 89, 42, DATAIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIODMDOUT, -1, 14), pnode(GPIO, 89, 42, DATAIN, 2, 2) },
  { pnode(HMC, 89, 80, PHYDDIODMDOUT, -1, 15), pnode(GPIO, 89, 42, DATAIN, 2, 3) },
  { pnode(HMC, 89, 80, PHYDDIODMDOUT, -1, 16), pnode(GPIO, 89, 36, DATAIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIODMDOUT, -1, 17), pnode(GPIO, 89, 36, DATAIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIODMDOUT, -1, 18), pnode(GPIO, 89, 36, DATAIN, 2, 2) },
  { pnode(HMC, 89, 80, PHYDDIODMDOUT, -1, 19), pnode(GPIO, 89, 36, DATAIN, 2, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 0), pnode(GPIO, 89, 66, DATAIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 1), pnode(GPIO, 89, 66, DATAIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 2), pnode(GPIO, 89, 66, DATAIN, 1, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 3), pnode(GPIO, 89, 66, DATAIN, 1, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 4), pnode(GPIO, 89, 66, DATAIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 5), pnode(GPIO, 89, 66, DATAIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 6), pnode(GPIO, 89, 66, DATAIN, 0, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 7), pnode(GPIO, 89, 66, DATAIN, 0, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 8), pnode(GPIO, 89, 66, DATAIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 9), pnode(GPIO, 89, 66, DATAIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 10), pnode(GPIO, 89, 66, DATAIN, 2, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 11), pnode(GPIO, 89, 66, DATAIN, 2, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 12), pnode(GPIO, 89, 65, DATAIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 13), pnode(GPIO, 89, 65, DATAIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 14), pnode(GPIO, 89, 65, DATAIN, 3, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 15), pnode(GPIO, 89, 65, DATAIN, 3, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 16), pnode(GPIO, 89, 64, DATAIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 17), pnode(GPIO, 89, 64, DATAIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 18), pnode(GPIO, 89, 64, DATAIN, 1, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 19), pnode(GPIO, 89, 64, DATAIN, 1, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 20), pnode(GPIO, 89, 64, DATAIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 21), pnode(GPIO, 89, 64, DATAIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 22), pnode(GPIO, 89, 64, DATAIN, 0, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 23), pnode(GPIO, 89, 64, DATAIN, 0, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 24), pnode(GPIO, 89, 64, DATAIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 25), pnode(GPIO, 89, 64, DATAIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 26), pnode(GPIO, 89, 64, DATAIN, 2, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 27), pnode(GPIO, 89, 64, DATAIN, 2, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 28), pnode(GPIO, 89, 63, DATAIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 29), pnode(GPIO, 89, 63, DATAIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 30), pnode(GPIO, 89, 63, DATAIN, 3, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 31), pnode(GPIO, 89, 63, DATAIN, 3, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 36), pnode(GPIO, 89, 59, DATAIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 37), pnode(GPIO, 89, 59, DATAIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 38), pnode(GPIO, 89, 59, DATAIN, 1, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 39), pnode(GPIO, 89, 59, DATAIN, 1, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 40), pnode(GPIO, 89, 59, DATAIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 41), pnode(GPIO, 89, 59, DATAIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 42), pnode(GPIO, 89, 59, DATAIN, 0, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 43), pnode(GPIO, 89, 59, DATAIN, 0, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 44), pnode(GPIO, 89, 59, DATAIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 45), pnode(GPIO, 89, 59, DATAIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 46), pnode(GPIO, 89, 59, DATAIN, 2, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 47), pnode(GPIO, 89, 59, DATAIN, 2, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 48), pnode(GPIO, 89, 58, DATAIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 49), pnode(GPIO, 89, 58, DATAIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 50), pnode(GPIO, 89, 58, DATAIN, 3, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 51), pnode(GPIO, 89, 58, DATAIN, 3, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 52), pnode(GPIO, 89, 57, DATAIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 53), pnode(GPIO, 89, 57, DATAIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 54), pnode(GPIO, 89, 57, DATAIN, 1, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 55), pnode(GPIO, 89, 57, DATAIN, 1, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 56), pnode(GPIO, 89, 57, DATAIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 57), pnode(GPIO, 89, 57, DATAIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 58), pnode(GPIO, 89, 57, DATAIN, 0, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 59), pnode(GPIO, 89, 57, DATAIN, 0, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 60), pnode(GPIO, 89, 57, DATAIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 61), pnode(GPIO, 89, 57, DATAIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 62), pnode(GPIO, 89, 57, DATAIN, 2, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 63), pnode(GPIO, 89, 57, DATAIN, 2, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 64), pnode(GPIO, 89, 56, DATAIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 65), pnode(GPIO, 89, 56, DATAIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 66), pnode(GPIO, 89, 56, DATAIN, 3, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 67), pnode(GPIO, 89, 56, DATAIN, 3, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 72), pnode(GPIO, 89, 52, DATAIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 73), pnode(GPIO, 89, 52, DATAIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 74), pnode(GPIO, 89, 52, DATAIN, 1, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 75), pnode(GPIO, 89, 52, DATAIN, 1, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 76), pnode(GPIO, 89, 52, DATAIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 77), pnode(GPIO, 89, 52, DATAIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 78), pnode(GPIO, 89, 52, DATAIN, 0, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 79), pnode(GPIO, 89, 52, DATAIN, 0, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 80), pnode(GPIO, 89, 52, DATAIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 81), pnode(GPIO, 89, 52, DATAIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 82), pnode(GPIO, 89, 52, DATAIN, 2, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 83), pnode(GPIO, 89, 52, DATAIN, 2, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 84), pnode(GPIO, 89, 51, DATAIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 85), pnode(GPIO, 89, 51, DATAIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 86), pnode(GPIO, 89, 51, DATAIN, 3, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 87), pnode(GPIO, 89, 51, DATAIN, 3, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 88), pnode(GPIO, 89, 50, DATAIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 89), pnode(GPIO, 89, 50, DATAIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 90), pnode(GPIO, 89, 50, DATAIN, 1, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 91), pnode(GPIO, 89, 50, DATAIN, 1, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 92), pnode(GPIO, 89, 50, DATAIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 93), pnode(GPIO, 89, 50, DATAIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 94), pnode(GPIO, 89, 50, DATAIN, 0, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 95), pnode(GPIO, 89, 50, DATAIN, 0, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 96), pnode(GPIO, 89, 50, DATAIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 97), pnode(GPIO, 89, 50, DATAIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 98), pnode(GPIO, 89, 50, DATAIN, 2, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 99), pnode(GPIO, 89, 50, DATAIN, 2, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 100), pnode(GPIO, 89, 49, DATAIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 101), pnode(GPIO, 89, 49, DATAIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 102), pnode(GPIO, 89, 49, DATAIN, 3, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 103), pnode(GPIO, 89, 49, DATAIN, 3, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 108), pnode(GPIO, 89, 45, DATAIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 109), pnode(GPIO, 89, 45, DATAIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 110), pnode(GPIO, 89, 45, DATAIN, 1, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 111), pnode(GPIO, 89, 45, DATAIN, 1, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 112), pnode(GPIO, 89, 45, DATAIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 113), pnode(GPIO, 89, 45, DATAIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 114), pnode(GPIO, 89, 45, DATAIN, 0, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 115), pnode(GPIO, 89, 45, DATAIN, 0, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 116), pnode(GPIO, 89, 45, DATAIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 117), pnode(GPIO, 89, 45, DATAIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 118), pnode(GPIO, 89, 45, DATAIN, 2, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 119), pnode(GPIO, 89, 45, DATAIN, 2, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 120), pnode(GPIO, 89, 44, DATAIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 121), pnode(GPIO, 89, 44, DATAIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 122), pnode(GPIO, 89, 44, DATAIN, 3, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 123), pnode(GPIO, 89, 44, DATAIN, 3, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 124), pnode(GPIO, 89, 43, DATAIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 125), pnode(GPIO, 89, 43, DATAIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 126), pnode(GPIO, 89, 43, DATAIN, 1, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 127), pnode(GPIO, 89, 43, DATAIN, 1, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 128), pnode(GPIO, 89, 43, DATAIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 129), pnode(GPIO, 89, 43, DATAIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 130), pnode(GPIO, 89, 43, DATAIN, 0, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 131), pnode(GPIO, 89, 43, DATAIN, 0, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 132), pnode(GPIO, 89, 43, DATAIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 133), pnode(GPIO, 89, 43, DATAIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 134), pnode(GPIO, 89, 43, DATAIN, 2, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 135), pnode(GPIO, 89, 43, DATAIN, 2, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 136), pnode(GPIO, 89, 42, DATAIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 137), pnode(GPIO, 89, 42, DATAIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 138), pnode(GPIO, 89, 42, DATAIN, 3, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 139), pnode(GPIO, 89, 42, DATAIN, 3, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 144), pnode(GPIO, 89, 39, DATAIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 145), pnode(GPIO, 89, 39, DATAIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 146), pnode(GPIO, 89, 39, DATAIN, 1, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 147), pnode(GPIO, 89, 39, DATAIN, 1, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 148), pnode(GPIO, 89, 39, DATAIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 149), pnode(GPIO, 89, 39, DATAIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 150), pnode(GPIO, 89, 39, DATAIN, 0, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 151), pnode(GPIO, 89, 39, DATAIN, 0, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 152), pnode(GPIO, 89, 39, DATAIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 153), pnode(GPIO, 89, 39, DATAIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 154), pnode(GPIO, 89, 39, DATAIN, 2, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 155), pnode(GPIO, 89, 39, DATAIN, 2, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 156), pnode(GPIO, 89, 38, DATAIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 157), pnode(GPIO, 89, 38, DATAIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 158), pnode(GPIO, 89, 38, DATAIN, 3, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 159), pnode(GPIO, 89, 38, DATAIN, 3, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 160), pnode(GPIO, 89, 37, DATAIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 161), pnode(GPIO, 89, 37, DATAIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 162), pnode(GPIO, 89, 37, DATAIN, 1, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 163), pnode(GPIO, 89, 37, DATAIN, 1, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 164), pnode(GPIO, 89, 37, DATAIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 165), pnode(GPIO, 89, 37, DATAIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 166), pnode(GPIO, 89, 37, DATAIN, 0, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 167), pnode(GPIO, 89, 37, DATAIN, 0, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 168), pnode(GPIO, 89, 37, DATAIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 169), pnode(GPIO, 89, 37, DATAIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 170), pnode(GPIO, 89, 37, DATAIN, 2, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 171), pnode(GPIO, 89, 37, DATAIN, 2, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 172), pnode(GPIO, 89, 36, DATAIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 173), pnode(GPIO, 89, 36, DATAIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 174), pnode(GPIO, 89, 36, DATAIN, 3, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQDOUT, -1, 175), pnode(GPIO, 89, 36, DATAIN, 3, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 0), pnode(GPIO, 89, 66, OEIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 1), pnode(GPIO, 89, 66, OEIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 2), pnode(GPIO, 89, 66, OEIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 3), pnode(GPIO, 89, 66, OEIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 4), pnode(GPIO, 89, 66, OEIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 5), pnode(GPIO, 89, 66, OEIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 6), pnode(GPIO, 89, 65, OEIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 7), pnode(GPIO, 89, 65, OEIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 8), pnode(GPIO, 89, 64, OEIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 9), pnode(GPIO, 89, 64, OEIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 10), pnode(GPIO, 89, 64, OEIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 11), pnode(GPIO, 89, 64, OEIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 12), pnode(GPIO, 89, 64, OEIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 13), pnode(GPIO, 89, 64, OEIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 14), pnode(GPIO, 89, 63, OEIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 15), pnode(GPIO, 89, 63, OEIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 18), pnode(GPIO, 89, 59, OEIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 19), pnode(GPIO, 89, 59, OEIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 20), pnode(GPIO, 89, 59, OEIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 21), pnode(GPIO, 89, 59, OEIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 22), pnode(GPIO, 89, 59, OEIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 23), pnode(GPIO, 89, 59, OEIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 24), pnode(GPIO, 89, 58, OEIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 25), pnode(GPIO, 89, 58, OEIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 26), pnode(GPIO, 89, 57, OEIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 27), pnode(GPIO, 89, 57, OEIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 28), pnode(GPIO, 89, 57, OEIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 29), pnode(GPIO, 89, 57, OEIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 30), pnode(GPIO, 89, 57, OEIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 31), pnode(GPIO, 89, 57, OEIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 32), pnode(GPIO, 89, 56, OEIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 33), pnode(GPIO, 89, 56, OEIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 36), pnode(GPIO, 89, 52, OEIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 37), pnode(GPIO, 89, 52, OEIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 38), pnode(GPIO, 89, 52, OEIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 39), pnode(GPIO, 89, 52, OEIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 40), pnode(GPIO, 89, 52, OEIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 41), pnode(GPIO, 89, 52, OEIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 42), pnode(GPIO, 89, 51, OEIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 43), pnode(GPIO, 89, 51, OEIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 44), pnode(GPIO, 89, 50, OEIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 45), pnode(GPIO, 89, 50, OEIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 46), pnode(GPIO, 89, 50, OEIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 47), pnode(GPIO, 89, 50, OEIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 48), pnode(GPIO, 89, 50, OEIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 49), pnode(GPIO, 89, 50, OEIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 50), pnode(GPIO, 89, 49, OEIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 51), pnode(GPIO, 89, 49, OEIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 54), pnode(GPIO, 89, 45, OEIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 55), pnode(GPIO, 89, 45, OEIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 56), pnode(GPIO, 89, 45, OEIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 57), pnode(GPIO, 89, 45, OEIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 58), pnode(GPIO, 89, 45, OEIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 59), pnode(GPIO, 89, 45, OEIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 60), pnode(GPIO, 89, 44, OEIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 61), pnode(GPIO, 89, 44, OEIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 62), pnode(GPIO, 89, 43, OEIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 63), pnode(GPIO, 89, 43, OEIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 64), pnode(GPIO, 89, 43, OEIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 65), pnode(GPIO, 89, 43, OEIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 66), pnode(GPIO, 89, 43, OEIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 67), pnode(GPIO, 89, 43, OEIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 68), pnode(GPIO, 89, 42, OEIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 69), pnode(GPIO, 89, 42, OEIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 72), pnode(GPIO, 89, 39, OEIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 73), pnode(GPIO, 89, 39, OEIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 74), pnode(GPIO, 89, 39, OEIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 75), pnode(GPIO, 89, 39, OEIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 76), pnode(GPIO, 89, 39, OEIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 77), pnode(GPIO, 89, 39, OEIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 78), pnode(GPIO, 89, 38, OEIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 79), pnode(GPIO, 89, 38, OEIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 80), pnode(GPIO, 89, 37, OEIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 81), pnode(GPIO, 89, 37, OEIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 82), pnode(GPIO, 89, 37, OEIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 83), pnode(GPIO, 89, 37, OEIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 84), pnode(GPIO, 89, 37, OEIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 85), pnode(GPIO, 89, 37, OEIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 86), pnode(GPIO, 89, 36, OEIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQOE, -1, 87), pnode(GPIO, 89, 36, OEIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQSBDOUT, -1, 0), pnode(GPIO, 89, 65, DATAIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQSBDOUT, -1, 1), pnode(GPIO, 89, 65, DATAIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQSBDOUT, -1, 2), pnode(GPIO, 89, 65, DATAIN, 1, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQSBDOUT, -1, 3), pnode(GPIO, 89, 65, DATAIN, 1, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQSBDOUT, -1, 4), pnode(GPIO, 89, 58, DATAIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQSBDOUT, -1, 5), pnode(GPIO, 89, 58, DATAIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQSBDOUT, -1, 6), pnode(GPIO, 89, 58, DATAIN, 1, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQSBDOUT, -1, 7), pnode(GPIO, 89, 58, DATAIN, 1, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQSBDOUT, -1, 8), pnode(GPIO, 89, 51, DATAIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQSBDOUT, -1, 9), pnode(GPIO, 89, 51, DATAIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQSBDOUT, -1, 10), pnode(GPIO, 89, 51, DATAIN, 1, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQSBDOUT, -1, 11), pnode(GPIO, 89, 51, DATAIN, 1, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQSBDOUT, -1, 12), pnode(GPIO, 89, 44, DATAIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQSBDOUT, -1, 13), pnode(GPIO, 89, 44, DATAIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQSBDOUT, -1, 14), pnode(GPIO, 89, 44, DATAIN, 1, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQSBDOUT, -1, 15), pnode(GPIO, 89, 44, DATAIN, 1, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQSBDOUT, -1, 16), pnode(GPIO, 89, 38, DATAIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQSBDOUT, -1, 17), pnode(GPIO, 89, 38, DATAIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQSBDOUT, -1, 18), pnode(GPIO, 89, 38, DATAIN, 1, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQSBDOUT, -1, 19), pnode(GPIO, 89, 38, DATAIN, 1, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQSBOE, -1, 0), pnode(GPIO, 89, 65, OEIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQSBOE, -1, 1), pnode(GPIO, 89, 65, OEIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQSBOE, -1, 2), pnode(GPIO, 89, 58, OEIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQSBOE, -1, 3), pnode(GPIO, 89, 58, OEIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQSBOE, -1, 4), pnode(GPIO, 89, 51, OEIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQSBOE, -1, 5), pnode(GPIO, 89, 51, OEIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQSBOE, -1, 6), pnode(GPIO, 89, 44, OEIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQSBOE, -1, 7), pnode(GPIO, 89, 44, OEIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQSBOE, -1, 8), pnode(GPIO, 89, 38, OEIN, 1, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQSBOE, -1, 9), pnode(GPIO, 89, 38, OEIN, 1, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQSDOUT, -1, 0), pnode(GPIO, 89, 65, DATAIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQSDOUT, -1, 1), pnode(GPIO, 89, 65, DATAIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQSDOUT, -1, 2), pnode(GPIO, 89, 65, DATAIN, 0, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQSDOUT, -1, 3), pnode(GPIO, 89, 65, DATAIN, 0, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQSDOUT, -1, 4), pnode(GPIO, 89, 58, DATAIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQSDOUT, -1, 5), pnode(GPIO, 89, 58, DATAIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQSDOUT, -1, 6), pnode(GPIO, 89, 58, DATAIN, 0, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQSDOUT, -1, 7), pnode(GPIO, 89, 58, DATAIN, 0, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQSDOUT, -1, 8), pnode(GPIO, 89, 51, DATAIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQSDOUT, -1, 9), pnode(GPIO, 89, 51, DATAIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQSDOUT, -1, 10), pnode(GPIO, 89, 51, DATAIN, 0, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQSDOUT, -1, 11), pnode(GPIO, 89, 51, DATAIN, 0, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQSDOUT, -1, 12), pnode(GPIO, 89, 44, DATAIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQSDOUT, -1, 13), pnode(GPIO, 89, 44, DATAIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQSDOUT, -1, 14), pnode(GPIO, 89, 44, DATAIN, 0, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQSDOUT, -1, 15), pnode(GPIO, 89, 44, DATAIN, 0, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQSDOUT, -1, 16), pnode(GPIO, 89, 38, DATAIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQSDOUT, -1, 17), pnode(GPIO, 89, 38, DATAIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQSDOUT, -1, 18), pnode(GPIO, 89, 38, DATAIN, 0, 2) },
  { pnode(HMC, 89, 80, PHYDDIODQSDOUT, -1, 19), pnode(GPIO, 89, 38, DATAIN, 0, 3) },
  { pnode(HMC, 89, 80, PHYDDIODQSOE, -1, 0), pnode(GPIO, 89, 65, OEIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQSOE, -1, 1), pnode(GPIO, 89, 65, OEIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQSOE, -1, 2), pnode(GPIO, 89, 58, OEIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQSOE, -1, 3), pnode(GPIO, 89, 58, OEIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQSOE, -1, 4), pnode(GPIO, 89, 51, OEIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQSOE, -1, 5), pnode(GPIO, 89, 51, OEIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQSOE, -1, 6), pnode(GPIO, 89, 44, OEIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQSOE, -1, 7), pnode(GPIO, 89, 44, OEIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIODQSOE, -1, 8), pnode(GPIO, 89, 38, OEIN, 0, 0) },
  { pnode(HMC, 89, 80, PHYDDIODQSOE, -1, 9), pnode(GPIO, 89, 38, OEIN, 0, 1) },
  { pnode(HMC, 89, 80, PHYDDIOODTACLR, -1, 0), pnode(GPIO, 89, 65, ACLR, 2, -1) },
  { pnode(HMC, 89, 80, PHYDDIOODTACLR, -1, 1), pnode(GPIO, 89, 64, ACLR, 3, -1) },
  { pnode(HMC, 89, 80, PHYDDIOODTDOUT, -1, 0), pnode(GPIO, 89, 65, DATAIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIOODTDOUT, -1, 1), pnode(GPIO, 89, 65, DATAIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIOODTDOUT, -1, 2), pnode(GPIO, 89, 65, DATAIN, 2, 2) },
  { pnode(HMC, 89, 80, PHYDDIOODTDOUT, -1, 3), pnode(GPIO, 89, 65, DATAIN, 2, 3) },
  { pnode(HMC, 89, 80, PHYDDIOODTDOUT, -1, 4), pnode(GPIO, 89, 64, DATAIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIOODTDOUT, -1, 5), pnode(GPIO, 89, 64, DATAIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIOODTDOUT, -1, 6), pnode(GPIO, 89, 64, DATAIN, 3, 2) },
  { pnode(HMC, 89, 80, PHYDDIOODTDOUT, -1, 7), pnode(GPIO, 89, 64, DATAIN, 3, 3) },
  { pnode(HMC, 89, 80, PHYDDIORASNACLR, -1, -1), pnode(GPIO, 89, 77, ACLR, 3, -1) },
  { pnode(HMC, 89, 80, PHYDDIORASNDOUT, -1, 0), pnode(GPIO, 89, 77, DATAIN, 3, 0) },
  { pnode(HMC, 89, 80, PHYDDIORASNDOUT, -1, 1), pnode(GPIO, 89, 77, DATAIN, 3, 1) },
  { pnode(HMC, 89, 80, PHYDDIORASNDOUT, -1, 2), pnode(GPIO, 89, 77, DATAIN, 3, 2) },
  { pnode(HMC, 89, 80, PHYDDIORASNDOUT, -1, 3), pnode(GPIO, 89, 77, DATAIN, 3, 3) },
  { pnode(HMC, 89, 80, PHYDDIORESETNACLR, -1, -1), pnode(GPIO, 89, 51, ACLR, 2, -1) },
  { pnode(HMC, 89, 80, PHYDDIORESETNDOUT, -1, 0), pnode(GPIO, 89, 51, DATAIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIORESETNDOUT, -1, 1), pnode(GPIO, 89, 51, DATAIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIORESETNDOUT, -1, 2), pnode(GPIO, 89, 51, DATAIN, 2, 2) },
  { pnode(HMC, 89, 80, PHYDDIORESETNDOUT, -1, 3), pnode(GPIO, 89, 51, DATAIN, 2, 3) },
  { pnode(HMC, 89, 80, PHYDDIOWENACLR, -1, -1), pnode(GPIO, 89, 80, ACLR, 2, -1) },
  { pnode(HMC, 89, 80, PHYDDIOWENDOUT, -1, 0), pnode(GPIO, 89, 80, DATAIN, 2, 0) },
  { pnode(HMC, 89, 80, PHYDDIOWENDOUT, -1, 1), pnode(GPIO, 89, 80, DATAIN, 2, 1) },
  { pnode(HMC, 89, 80, PHYDDIOWENDOUT, -1, 2), pnode(GPIO, 89, 80, DATAIN, 2, 2) },
  { pnode(HMC, 89, 80, PHYDDIOWENDOUT, -1, 3), pnode(GPIO, 89, 80, DATAIN, 2, 3) },
  { pnode(HMC, 89, 80, PNONE, 0, -1), pnode(DQS16, 89, 63, PNONE, -1, -1) },
  { pnode(HMC, 89, 80, PNONE, 1, -1), pnode(DQS16, 89, 56, PNONE, -1, -1) },
  { pnode(HMC, 89, 80, PNONE, 2, -1), pnode(DQS16, 89, 49, PNONE, -1, -1) },
  { pnode(HMC, 89, 80, PNONE, 3, -1), pnode(DQS16, 89, 42, PNONE, -1, -1) },
  { pnode(HMC, 89, 80, PNONE, 4, -1), pnode(DQS16, 89, 36, PNONE, -1, -1) },
  { pnode(HMC, 89, 80, PNONE, -1, -1), pnode(LVL, 89, 69, PNONE, -1, -1) },
  { pnode(GPIO, 32, 81, COMBOUT, 0, -1), pnode(CMUXHG, 0, 35, CLKPIN, -1, 0) },
  { pnode(GPIO, 32, 81, COMBOUT, 0, -1), pnode(CMUXHR, 0, 35, CLKPIN, -1, 0) },
  { pnode(GPIO, 32, 0, COMBOUT, 0, -1), pnode(CMUXHG, 0, 35, CLKPIN, -1, 1) },
  { pnode(GPIO, 32, 0, COMBOUT, 0, -1), pnode(CMUXHR, 0, 35, CLKPIN, -1, 1) },
  { pnode(GPIO, 40, 81, COMBOUT, 0, -1), pnode(CMUXHG, 0, 35, CLKPIN, -1, 2) },
  { pnode(GPIO, 40, 81, COMBOUT, 0, -1), pnode(CMUXHR, 0, 35, CLKPIN, -1, 2) },
  { pnode(GPIO, 40, 0, COMBOUT, 0, -1), pnode(CMUXHG, 0, 35, CLKPIN, -1, 3) },
  { pnode(GPIO, 40, 0, COMBOUT, 0, -1), pnode(CMUXHR, 0, 35, CLKPIN, -1, 3) },
  { pnode(GPIO, 56, 0, COMBOUT, 0, -1), pnode(CMUXHG, 0, 35, CLKPIN, -1, 5) },
  { pnode(GPIO, 56, 0, COMBOUT, 0, -1), pnode(CMUXHR, 0, 35, CLKPIN, -1, 5) },
  { pnode(GPIO, 64, 0, COMBOUT, 0, -1), pnode(CMUXHG, 0, 35, CLKPIN, -1, 7) },
  { pnode(GPIO, 64, 0, COMBOUT, 0, -1), pnode(CMUXHR, 0, 35, CLKPIN, -1, 7) },
  { pnode(GPIO, 32, 81, COMBOUT, 1, -1), pnode(CMUXHG, 0, 35, NCLKPIN, -1, 0) },
  { pnode(GPIO, 32, 81, COMBOUT, 1, -1), pnode(CMUXHR, 0, 35, NCLKPIN, -1, 0) },
  { pnode(GPIO, 32, 0, COMBOUT, 1, -1), pnode(CMUXHG, 0, 35, NCLKPIN, -1, 1) },
  { pnode(GPIO, 32, 0, COMBOUT, 1, -1), pnode(CMUXHR, 0, 35, NCLKPIN, -1, 1) },
  { pnode(GPIO, 40, 81, COMBOUT, 1, -1), pnode(CMUXHG, 0, 35, NCLKPIN, -1, 2) },
  { pnode(GPIO, 40, 81, COMBOUT, 1, -1), pnode(CMUXHR, 0, 35, NCLKPIN, -1, 2) },
  { pnode(GPIO, 40, 0, COMBOUT, 1, -1), pnode(CMUXHG, 0, 35, NCLKPIN, -1, 3) },
  { pnode(GPIO, 40, 0, COMBOUT, 1, -1), pnode(CMUXHR, 0, 35, NCLKPIN, -1, 3) },
  { pnode(GPIO, 56, 0, COMBOUT, 1, -1), pnode(CMUXHG, 0, 35, NCLKPIN, -1, 5) },
  { pnode(GPIO, 56, 0, COMBOUT, 1, -1), pnode(CMUXHR, 0, 35, NCLKPIN, -1, 5) },
  { pnode(GPIO, 64, 0, COMBOUT, 1, -1), pnode(CMUXHG, 0, 35, NCLKPIN, -1, 7) },
  { pnode(GPIO, 64, 0, COMBOUT, 1, -1), pnode(CMUXHR, 0, 35, NCLKPIN, -1, 7) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 8), pnode(CMUXHG, 0, 35, PLLIN, -1, 0) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 7), pnode(CMUXHG, 0, 35, PLLIN, -1, 1) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 6), pnode(CMUXHG, 0, 35, PLLIN, -1, 2) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 5), pnode(CMUXHG, 0, 35, PLLIN, -1, 3) },
  { pnode(FPLL, 0, 31, CLKOUT, -1, 8), pnode(CMUXHG, 0, 35, PLLIN, -1, 4) },
  { pnode(FPLL, 0, 31, CLKOUT, -1, 7), pnode(CMUXHG, 0, 35, PLLIN, -1, 5) },
  { pnode(FPLL, 0, 31, CLKOUT, -1, 6), pnode(CMUXHG, 0, 35, PLLIN, -1, 6) },
  { pnode(FPLL, 0, 31, CLKOUT, -1, 5), pnode(CMUXHG, 0, 35, PLLIN, -1, 7) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 8), pnode(CMUXHG, 0, 35, PLLIN, -1, 8) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 7), pnode(CMUXHG, 0, 35, PLLIN, -1, 9) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 6), pnode(CMUXHG, 0, 35, PLLIN, -1, 10) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 5), pnode(CMUXHG, 0, 35, PLLIN, -1, 11) },
  { pnode(FPLL, 0, 73, CLKOUT, -1, 4), pnode(CMUXHG, 0, 35, PLLIN, -1, 16) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 4), pnode(CMUXHG, 0, 35, PLLIN, -1, 17) },
  { pnode(FPLL, 0, 73, CLKOUT, -1, 4), pnode(CMUXHG, 0, 35, PLLIN, -1, 19) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 8), pnode(CMUXHR, 0, 35, PLLIN, -1, 0) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 7), pnode(CMUXHR, 0, 35, PLLIN, -1, 1) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 6), pnode(CMUXHR, 0, 35, PLLIN, -1, 2) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 5), pnode(CMUXHR, 0, 35, PLLIN, -1, 3) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 4), pnode(CMUXHR, 0, 35, PLLIN, -1, 4) },
  { pnode(FPLL, 0, 31, CLKOUT, -1, 8), pnode(CMUXHR, 0, 35, PLLIN, -1, 7) },
  { pnode(FPLL, 0, 31, CLKOUT, -1, 7), pnode(CMUXHR, 0, 35, PLLIN, -1, 8) },
  { pnode(FPLL, 0, 31, CLKOUT, -1, 6), pnode(CMUXHR, 0, 35, PLLIN, -1, 9) },
  { pnode(FPLL, 0, 31, CLKOUT, -1, 5), pnode(CMUXHR, 0, 35, PLLIN, -1, 10) },
  { pnode(FPLL, 0, 31, CLKOUT, -1, 4), pnode(CMUXHR, 0, 35, PLLIN, -1, 11) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 8), pnode(CMUXHR, 0, 35, PLLIN, -1, 14) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 7), pnode(CMUXHR, 0, 35, PLLIN, -1, 15) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 6), pnode(CMUXHR, 0, 35, PLLIN, -1, 16) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 5), pnode(CMUXHR, 0, 35, PLLIN, -1, 17) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 4), pnode(CMUXHR, 0, 35, PLLIN, -1, 18) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 8), pnode(CMUXHR, 0, 35, PLLIN, -1, 19) },
  { pnode(GPIO, 32, 0, COMBOUT, 0, -1), pnode(CMUXCR, 5, 0, CLKPIN, -1, 0) },
  { pnode(GPIO, 40, 0, COMBOUT, 0, -1), pnode(CMUXCR, 5, 0, CLKPIN, -1, 1) },
  { pnode(GPIO, 56, 0, COMBOUT, 0, -1), pnode(CMUXCR, 5, 0, CLKPIN, -1, 2) },
  { pnode(GPIO, 64, 0, COMBOUT, 0, -1), pnode(CMUXCR, 5, 0, CLKPIN, -1, 3) },
  { pnode(GPIO, 32, 0, COMBOUT, 1, -1), pnode(CMUXCR, 5, 0, NCLKPIN, -1, 0) },
  { pnode(GPIO, 40, 0, COMBOUT, 1, -1), pnode(CMUXCR, 5, 0, NCLKPIN, -1, 1) },
  { pnode(GPIO, 56, 0, COMBOUT, 1, -1), pnode(CMUXCR, 5, 0, NCLKPIN, -1, 2) },
  { pnode(GPIO, 64, 0, COMBOUT, 1, -1), pnode(CMUXCR, 5, 0, NCLKPIN, -1, 3) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 2), pnode(CMUXCR, 5, 0, PLLIN, -1, 0) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 6), pnode(CMUXCR, 5, 0, PLLIN, -1, 1) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 0), pnode(CMUXCR, 5, 0, PLLIN, -1, 2) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 4), pnode(CMUXCR, 5, 0, PLLIN, -1, 3) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 4), pnode(CMUXCR, 5, 0, PLLIN, -1, 4) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 5), pnode(CMUXCR, 5, 0, PLLIN, -1, 5) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 6), pnode(CMUXCR, 5, 0, PLLIN, -1, 6) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 7), pnode(CMUXCR, 5, 0, PLLIN, -1, 7) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 0), pnode(CMUXCR, 5, 0, PLLIN, -1, 8) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 3), pnode(CMUXCR, 5, 0, PLLIN, -1, 9) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 5), pnode(CMUXCR, 5, 0, PLLIN, -1, 10) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 1), pnode(CMUXCR, 5, 0, PLLIN, -1, 11) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 4), pnode(CMUXCR, 5, 0, PLLIN, -1, 12) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 5), pnode(CMUXCR, 5, 0, PLLIN, -1, 13) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 8), pnode(CMUXCR, 5, 0, PLLIN, -1, 14) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 7), pnode(CMUXCR, 5, 0, PLLIN, -1, 15) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 7), pnode(CMUXCR, 5, 0, PLLIN, -1, 16) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 8), pnode(CMUXCR, 5, 0, PLLIN, -1, 17) },
  { pnode(GPIO, 32, 81, COMBOUT, 0, -1), pnode(CMUXCR, 5, 81, CLKPIN, -1, 0) },
  { pnode(GPIO, 40, 81, COMBOUT, 0, -1), pnode(CMUXCR, 5, 81, CLKPIN, -1, 1) },
  { pnode(GPIO, 32, 81, COMBOUT, 1, -1), pnode(CMUXCR, 5, 81, NCLKPIN, -1, 0) },
  { pnode(GPIO, 40, 81, COMBOUT, 1, -1), pnode(CMUXCR, 5, 81, NCLKPIN, -1, 1) },
  { pnode(FPLL, 0, 73, CLKOUT, -1, 2), pnode(CMUXCR, 5, 81, PLLIN, -1, 0) },
  { pnode(FPLL, 0, 73, CLKOUT, -1, 6), pnode(CMUXCR, 5, 81, PLLIN, -1, 1) },
  { pnode(FPLL, 0, 73, CLKOUT, -1, 0), pnode(CMUXCR, 5, 81, PLLIN, -1, 2) },
  { pnode(FPLL, 0, 73, CLKOUT, -1, 4), pnode(CMUXCR, 5, 81, PLLIN, -1, 3) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 4), pnode(CMUXCR, 5, 81, PLLIN, -1, 4) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 5), pnode(CMUXCR, 5, 81, PLLIN, -1, 5) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 6), pnode(CMUXCR, 5, 81, PLLIN, -1, 6) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 7), pnode(CMUXCR, 5, 81, PLLIN, -1, 7) },
  { pnode(FPLL, 0, 73, CLKOUT, -1, 0), pnode(CMUXCR, 5, 81, PLLIN, -1, 8) },
  { pnode(FPLL, 0, 73, CLKOUT, -1, 3), pnode(CMUXCR, 5, 81, PLLIN, -1, 9) },
  { pnode(FPLL, 0, 73, CLKOUT, -1, 5), pnode(CMUXCR, 5, 81, PLLIN, -1, 10) },
  { pnode(FPLL, 0, 73, CLKOUT, -1, 1), pnode(CMUXCR, 5, 81, PLLIN, -1, 11) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 4), pnode(CMUXCR, 5, 81, PLLIN, -1, 12) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 5), pnode(CMUXCR, 5, 81, PLLIN, -1, 13) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 8), pnode(CMUXCR, 5, 81, PLLIN, -1, 14) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 7), pnode(CMUXCR, 5, 81, PLLIN, -1, 15) },
  { pnode(FPLL, 0, 73, CLKOUT, -1, 7), pnode(CMUXCR, 5, 81, PLLIN, -1, 16) },
  { pnode(FPLL, 0, 73, CLKOUT, -1, 8), pnode(CMUXCR, 5, 81, PLLIN, -1, 17) },
  { pnode(GPIO, 32, 0, COMBOUT, 0, -1), pnode(CMUXVG, 42, 0, CLKPIN, -1, 0) },
  { pnode(GPIO, 32, 0, COMBOUT, 0, -1), pnode(CMUXVR, 42, 0, CLKPIN, -1, 0) },
  { pnode(GPIO, 56, 0, COMBOUT, 0, -1), pnode(CMUXVG, 42, 0, CLKPIN, -1, 1) },
  { pnode(GPIO, 56, 0, COMBOUT, 0, -1), pnode(CMUXVR, 42, 0, CLKPIN, -1, 1) },
  { pnode(GPIO, 40, 0, COMBOUT, 0, -1), pnode(CMUXVG, 42, 0, CLKPIN, -1, 2) },
  { pnode(GPIO, 40, 0, COMBOUT, 0, -1), pnode(CMUXVR, 42, 0, CLKPIN, -1, 2) },
  { pnode(GPIO, 64, 0, COMBOUT, 0, -1), pnode(CMUXVG, 42, 0, CLKPIN, -1, 3) },
  { pnode(GPIO, 64, 0, COMBOUT, 0, -1), pnode(CMUXVR, 42, 0, CLKPIN, -1, 3) },
  { pnode(GPIO, 32, 0, COMBOUT, 1, -1), pnode(CMUXVG, 42, 0, NCLKPIN, -1, 0) },
  { pnode(GPIO, 32, 0, COMBOUT, 1, -1), pnode(CMUXVR, 42, 0, NCLKPIN, -1, 0) },
  { pnode(GPIO, 56, 0, COMBOUT, 1, -1), pnode(CMUXVG, 42, 0, NCLKPIN, -1, 1) },
  { pnode(GPIO, 56, 0, COMBOUT, 1, -1), pnode(CMUXVR, 42, 0, NCLKPIN, -1, 1) },
  { pnode(GPIO, 40, 0, COMBOUT, 1, -1), pnode(CMUXVG, 42, 0, NCLKPIN, -1, 2) },
  { pnode(GPIO, 40, 0, COMBOUT, 1, -1), pnode(CMUXVR, 42, 0, NCLKPIN, -1, 2) },
  { pnode(GPIO, 64, 0, COMBOUT, 1, -1), pnode(CMUXVG, 42, 0, NCLKPIN, -1, 3) },
  { pnode(GPIO, 64, 0, COMBOUT, 1, -1), pnode(CMUXVR, 42, 0, NCLKPIN, -1, 3) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 5), pnode(CMUXVG, 42, 0, PLLIN, -1, 0) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 6), pnode(CMUXVG, 42, 0, PLLIN, -1, 1) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 7), pnode(CMUXVG, 42, 0, PLLIN, -1, 2) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 8), pnode(CMUXVG, 42, 0, PLLIN, -1, 3) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 8), pnode(CMUXVG, 42, 0, PLLIN, -1, 4) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 7), pnode(CMUXVG, 42, 0, PLLIN, -1, 5) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 6), pnode(CMUXVG, 42, 0, PLLIN, -1, 6) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 5), pnode(CMUXVG, 42, 0, PLLIN, -1, 7) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 5), pnode(CMUXVG, 42, 0, PLLIN, -1, 8) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 6), pnode(CMUXVG, 42, 0, PLLIN, -1, 9) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 7), pnode(CMUXVG, 42, 0, PLLIN, -1, 10) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 8), pnode(CMUXVG, 42, 0, PLLIN, -1, 11) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 8), pnode(CMUXVR, 42, 0, PLLIN, -1, 0) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 7), pnode(CMUXVR, 42, 0, PLLIN, -1, 1) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 6), pnode(CMUXVR, 42, 0, PLLIN, -1, 2) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 5), pnode(CMUXVR, 42, 0, PLLIN, -1, 3) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 4), pnode(CMUXVR, 42, 0, PLLIN, -1, 4) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 3), pnode(CMUXVR, 42, 0, PLLIN, -1, 5) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 2), pnode(CMUXVR, 42, 0, PLLIN, -1, 6) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 1), pnode(CMUXVR, 42, 0, PLLIN, -1, 7) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 0), pnode(CMUXVR, 42, 0, PLLIN, -1, 8) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 4), pnode(CMUXVR, 42, 0, PLLIN, -1, 18) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 5), pnode(CMUXVR, 42, 0, PLLIN, -1, 19) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 6), pnode(CMUXVR, 42, 0, PLLIN, -1, 20) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 7), pnode(CMUXVR, 42, 0, PLLIN, -1, 21) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 6), pnode(CMUXVR, 42, 0, PLLIN, -1, 22) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 7), pnode(CMUXVR, 42, 0, PLLIN, -1, 23) },
  { pnode(FPLL, 0, 14, CLKOUT, -1, 8), pnode(CMUXVR, 42, 0, PLLIN, -1, 24) },
  { pnode(GPIO, 32, 81, COMBOUT, 0, -1), pnode(CMUXVG, 42, 81, CLKPIN, -1, 0) },
  { pnode(GPIO, 32, 81, COMBOUT, 0, -1), pnode(CMUXVR, 42, 81, CLKPIN, -1, 0) },
  { pnode(GPIO, 40, 81, COMBOUT, 0, -1), pnode(CMUXVG, 42, 81, CLKPIN, -1, 2) },
  { pnode(GPIO, 40, 81, COMBOUT, 0, -1), pnode(CMUXVR, 42, 81, CLKPIN, -1, 2) },
  { pnode(GPIO, 32, 81, COMBOUT, 1, -1), pnode(CMUXVG, 42, 81, NCLKPIN, -1, 0) },
  { pnode(GPIO, 32, 81, COMBOUT, 1, -1), pnode(CMUXVR, 42, 81, NCLKPIN, -1, 0) },
  { pnode(GPIO, 40, 81, COMBOUT, 1, -1), pnode(CMUXVG, 42, 81, NCLKPIN, -1, 2) },
  { pnode(GPIO, 40, 81, COMBOUT, 1, -1), pnode(CMUXVR, 42, 81, NCLKPIN, -1, 2) },
  { pnode(FPLL, 0, 73, CLKOUT, -1, 5), pnode(CMUXVG, 42, 81, PLLIN, -1, 0) },
  { pnode(FPLL, 0, 73, CLKOUT, -1, 6), pnode(CMUXVG, 42, 81, PLLIN, -1, 1) },
  { pnode(FPLL, 0, 73, CLKOUT, -1, 7), pnode(CMUXVG, 42, 81, PLLIN, -1, 2) },
  { pnode(FPLL, 0, 73, CLKOUT, -1, 8), pnode(CMUXVG, 42, 81, PLLIN, -1, 3) },
  { pnode(HPS_CLOCKS, 56, 78, CLKOUT, 1, 8), pnode(CMUXVG, 42, 81, PLLIN, -1, 4) },
  { pnode(HPS_CLOCKS, 56, 78, CLKOUT, 1, 7), pnode(CMUXVG, 42, 81, PLLIN, -1, 5) },
  { pnode(HPS_CLOCKS, 56, 78, CLKOUT, 1, 6), pnode(CMUXVG, 42, 81, PLLIN, -1, 6) },
  { pnode(HPS_CLOCKS, 56, 78, CLKOUT, 1, 5), pnode(CMUXVG, 42, 81, PLLIN, -1, 7) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 5), pnode(CMUXVG, 42, 81, PLLIN, -1, 8) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 6), pnode(CMUXVG, 42, 81, PLLIN, -1, 9) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 7), pnode(CMUXVG, 42, 81, PLLIN, -1, 10) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 8), pnode(CMUXVG, 42, 81, PLLIN, -1, 11) },
  { pnode(HPS_CLOCKS, 56, 78, CLKOUT, 1, 8), pnode(CMUXVR, 42, 81, PLLIN, -1, 0) },
  { pnode(HPS_CLOCKS, 56, 78, CLKOUT, 1, 7), pnode(CMUXVR, 42, 81, PLLIN, -1, 1) },
  { pnode(HPS_CLOCKS, 56, 78, CLKOUT, 1, 6), pnode(CMUXVR, 42, 81, PLLIN, -1, 2) },
  { pnode(HPS_CLOCKS, 56, 78, CLKOUT, 1, 5), pnode(CMUXVR, 42, 81, PLLIN, -1, 3) },
  { pnode(HPS_CLOCKS, 56, 78, CLKOUT, 1, 4), pnode(CMUXVR, 42, 81, PLLIN, -1, 4) },
  { pnode(HPS_CLOCKS, 56, 78, CLKOUT, 1, 3), pnode(CMUXVR, 42, 81, PLLIN, -1, 5) },
  { pnode(HPS_CLOCKS, 56, 78, CLKOUT, 1, 2), pnode(CMUXVR, 42, 81, PLLIN, -1, 6) },
  { pnode(HPS_CLOCKS, 56, 78, CLKOUT, 1, 1), pnode(CMUXVR, 42, 81, PLLIN, -1, 7) },
  { pnode(HPS_CLOCKS, 56, 78, CLKOUT, 1, 0), pnode(CMUXVR, 42, 81, PLLIN, -1, 8) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 4), pnode(CMUXVR, 42, 81, PLLIN, -1, 18) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 5), pnode(CMUXVR, 42, 81, PLLIN, -1, 19) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 6), pnode(CMUXVR, 42, 81, PLLIN, -1, 20) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 7), pnode(CMUXVR, 42, 81, PLLIN, -1, 21) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 6), pnode(CMUXVR, 42, 81, PLLIN, -1, 22) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 7), pnode(CMUXVR, 42, 81, PLLIN, -1, 23) },
  { pnode(FPLL, 0, 55, CLKOUT, -1, 8), pnode(CMUXVR, 42, 81, PLLIN, -1, 24) },
  { pnode(GPIO, 56, 0, COMBOUT, 0, -1), pnode(CMUXCR, 89, 3, CLKPIN, -1, 0) },
  { pnode(GPIO, 64, 0, COMBOUT, 0, -1), pnode(CMUXCR, 89, 3, CLKPIN, -1, 1) },
  { pnode(GPIO, 89, 25, COMBOUT, 0, -1), pnode(CMUXCR, 89, 3, CLKPIN, -1, 2) },
  { pnode(GPIO, 89, 23, COMBOUT, 0, -1), pnode(CMUXCR, 89, 3, CLKPIN, -1, 3) },
  { pnode(GPIO, 56, 0, COMBOUT, 1, -1), pnode(CMUXCR, 89, 3, NCLKPIN, -1, 0) },
  { pnode(GPIO, 64, 0, COMBOUT, 1, -1), pnode(CMUXCR, 89, 3, NCLKPIN, -1, 1) },
  { pnode(GPIO, 89, 25, COMBOUT, 1, -1), pnode(CMUXCR, 89, 3, NCLKPIN, -1, 2) },
  { pnode(GPIO, 89, 23, COMBOUT, 1, -1), pnode(CMUXCR, 89, 3, NCLKPIN, -1, 3) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 8), pnode(CMUXCR, 89, 3, PLLIN, -1, 0) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 7), pnode(CMUXCR, 89, 3, PLLIN, -1, 1) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 6), pnode(CMUXCR, 89, 3, PLLIN, -1, 2) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 5), pnode(CMUXCR, 89, 3, PLLIN, -1, 3) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 4), pnode(CMUXCR, 89, 3, PLLIN, -1, 4) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 3), pnode(CMUXCR, 89, 3, PLLIN, -1, 5) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 2), pnode(CMUXCR, 89, 3, PLLIN, -1, 6) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 1), pnode(CMUXCR, 89, 3, PLLIN, -1, 7) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 6), pnode(CMUXCR, 89, 3, PLLIN, -1, 8) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 7), pnode(CMUXCR, 89, 3, PLLIN, -1, 9) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 4), pnode(CMUXCR, 89, 3, PLLIN, -1, 10) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 5), pnode(CMUXCR, 89, 3, PLLIN, -1, 11) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 2), pnode(CMUXCR, 89, 3, PLLIN, -1, 12) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 3), pnode(CMUXCR, 89, 3, PLLIN, -1, 13) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 0), pnode(CMUXCR, 89, 3, PLLIN, -1, 14) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 1), pnode(CMUXCR, 89, 3, PLLIN, -1, 15) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 8), pnode(CMUXCR, 89, 3, PLLIN, -1, 16) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 0), pnode(CMUXCR, 89, 3, PLLIN, -1, 17) },
  { pnode(GPIO, 89, 25, COMBOUT, 0, -1), pnode(CMUXHG, 89, 35, CLKPIN, -1, 5) },
  { pnode(GPIO, 89, 25, COMBOUT, 0, -1), pnode(CMUXHR, 89, 35, CLKPIN, -1, 5) },
  { pnode(GPIO, 89, 23, COMBOUT, 0, -1), pnode(CMUXHG, 89, 35, CLKPIN, -1, 7) },
  { pnode(GPIO, 89, 23, COMBOUT, 0, -1), pnode(CMUXHR, 89, 35, CLKPIN, -1, 7) },
  { pnode(GPIO, 89, 25, COMBOUT, 1, -1), pnode(CMUXHG, 89, 35, NCLKPIN, -1, 5) },
  { pnode(GPIO, 89, 25, COMBOUT, 1, -1), pnode(CMUXHR, 89, 35, NCLKPIN, -1, 5) },
  { pnode(GPIO, 89, 23, COMBOUT, 1, -1), pnode(CMUXHG, 89, 35, NCLKPIN, -1, 7) },
  { pnode(GPIO, 89, 23, COMBOUT, 1, -1), pnode(CMUXHR, 89, 35, NCLKPIN, -1, 7) },
  { pnode(HPS_CLOCKS, 56, 79, CLKOUT, 0, 0), pnode(CMUXHG, 89, 35, PLLIN, -1, 0) },
  { pnode(HPS_CLOCKS, 56, 79, CLKOUT, 0, 1), pnode(CMUXHG, 89, 35, PLLIN, -1, 1) },
  { pnode(HPS_CLOCKS, 56, 79, CLKOUT, 0, 2), pnode(CMUXHG, 89, 35, PLLIN, -1, 2) },
  { pnode(HPS_CLOCKS, 56, 79, CLKOUT, 0, 3), pnode(CMUXHG, 89, 35, PLLIN, -1, 3) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 0), pnode(CMUXHG, 89, 35, PLLIN, -1, 4) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 1), pnode(CMUXHG, 89, 35, PLLIN, -1, 5) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 2), pnode(CMUXHG, 89, 35, PLLIN, -1, 6) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 3), pnode(CMUXHG, 89, 35, PLLIN, -1, 7) },
  { pnode(HPS_CLOCKS, 56, 79, CLKOUT, 0, 0), pnode(CMUXHR, 89, 35, PLLIN, -1, 0) },
  { pnode(HPS_CLOCKS, 56, 79, CLKOUT, 0, 1), pnode(CMUXHR, 89, 35, PLLIN, -1, 1) },
  { pnode(HPS_CLOCKS, 56, 79, CLKOUT, 0, 2), pnode(CMUXHR, 89, 35, PLLIN, -1, 2) },
  { pnode(HPS_CLOCKS, 56, 79, CLKOUT, 0, 3), pnode(CMUXHR, 89, 35, PLLIN, -1, 3) },
  { pnode(HPS_CLOCKS, 56, 79, CLKOUT, 0, 4), pnode(CMUXHR, 89, 35, PLLIN, -1, 4) },
  { pnode(HPS_CLOCKS, 56, 79, CLKOUT, 0, 5), pnode(CMUXHR, 89, 35, PLLIN, -1, 5) },
  { pnode(HPS_CLOCKS, 56, 79, CLKOUT, 0, 6), pnode(CMUXHR, 89, 35, PLLIN, -1, 6) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 0), pnode(CMUXHR, 89, 35, PLLIN, -1, 7) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 1), pnode(CMUXHR, 89, 35, PLLIN, -1, 8) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 2), pnode(CMUXHR, 89, 35, PLLIN, -1, 9) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 3), pnode(CMUXHR, 89, 35, PLLIN, -1, 10) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 4), pnode(CMUXHR, 89, 35, PLLIN, -1, 11) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 5), pnode(CMUXHR, 89, 35, PLLIN, -1, 12) },
  { pnode(FPLL, 89, 0, CLKOUT, -1, 6), pnode(CMUXHR, 89, 35, PLLIN, -1, 13) },
  { pnode(HPS_CLOCKS, 56, 79, CLKOUT, 0, 8), pnode(CMUXHR, 89, 35, PLLIN, -1, 20) },
  { pnode(HPS_CLOCKS, 56, 79, CLKOUT, 0, 7), pnode(CMUXHR, 89, 35, PLLIN, -1, 21) },
  { pnode(GPIO, 32, 0, COMBOUT, 0, -1), pnode(FPLL, 0, 0, CLKIN, -1, 0) },
  { pnode(GPIO, 40, 0, COMBOUT, 0, -1), pnode(FPLL, 0, 0, CLKIN, -1, 1) },
  { pnode(GPIO, 56, 0, COMBOUT, 0, -1), pnode(FPLL, 0, 0, CLKIN, -1, 2) },
  { pnode(GPIO, 64, 0, COMBOUT, 0, -1), pnode(FPLL, 0, 0, CLKIN, -1, 3) },
  { pnode(GPIO, 38, 0, COMBOUT, 2, -1), pnode(FPLL, 0, 0, ZDB_IN, -1, -1) },
  { pnode(FPLL, 0, 0, EXTCLK, -1, -1), pnode(GPIO, 38, 0, PLLDIN, 3, -1) },
  { pnode(GPIO, 32, 0, COMBOUT, 0, -1), pnode(FPLL, 0, 14, CLKIN, -1, 0) },
  { pnode(GPIO, 40, 0, COMBOUT, 0, -1), pnode(FPLL, 0, 14, CLKIN, -1, 1) },
  { pnode(GPIO, 56, 0, COMBOUT, 0, -1), pnode(FPLL, 0, 14, CLKIN, -1, 2) },
  { pnode(GPIO, 64, 0, COMBOUT, 0, -1), pnode(FPLL, 0, 14, CLKIN, -1, 3) },
  { pnode(GPIO, 32, 81, COMBOUT, 0, -1), pnode(FPLL, 0, 31, CLKIN, -1, 0) },
  { pnode(GPIO, 40, 81, COMBOUT, 0, -1), pnode(FPLL, 0, 31, CLKIN, -1, 1) },
  { pnode(GPIO, 32, 0, COMBOUT, 0, -1), pnode(FPLL, 0, 31, CLKIN, -1, 2) },
  { pnode(GPIO, 40, 0, COMBOUT, 0, -1), pnode(FPLL, 0, 31, CLKIN, -1, 3) },
  { pnode(GPIO, 32, 81, COMBOUT, 0, -1), pnode(FPLL, 0, 55, CLKIN, -1, 0) },
  { pnode(GPIO, 40, 81, COMBOUT, 0, -1), pnode(FPLL, 0, 55, CLKIN, -1, 1) },
  { pnode(GPIO, 32, 81, COMBOUT, 0, -1), pnode(FPLL, 0, 73, CLKIN, -1, 0) },
  { pnode(GPIO, 40, 81, COMBOUT, 0, -1), pnode(FPLL, 0, 73, CLKIN, -1, 1) },
  { pnode(GPIO, 38, 81, COMBOUT, 2, -1), pnode(FPLL, 0, 73, ZDB_IN, -1, -1) },
  { pnode(FPLL, 0, 73, EXTCLK, -1, -1), pnode(GPIO, 38, 81, PLLDIN, 3, -1) },
  { pnode(GPIO, 56, 0, COMBOUT, 0, -1), pnode(FPLL, 89, 0, CLKIN, -1, 0) },
  { pnode(GPIO, 64, 0, COMBOUT, 0, -1), pnode(FPLL, 89, 0, CLKIN, -1, 1) },
  { pnode(GPIO, 89, 25, COMBOUT, 0, -1), pnode(FPLL, 89, 0, CLKIN, -1, 2) },
  { pnode(GPIO, 89, 23, COMBOUT, 0, -1), pnode(FPLL, 89, 0, CLKIN, -1, 3) },
  { pnode(GPIO, 89, 23, COMBOUT, 2, -1), pnode(FPLL, 89, 0, ZDB_IN, -1, -1) },
  { pnode(FPLL, 89, 0, EXTCLK, -1, -1), pnode(GPIO, 89, 23, PLLDIN, 3, -1) },
  { pnode(FPLL, 0, 73, CLKDOUT, -1, 0), pnode(DLL, 0, 79, CLKIN, -1, -1) },
  { pnode(FPLL, 0, 0, CLKDOUT, -1, 0), pnode(DLL, 7, 0, CLKIN, -1, -1) },
  { pnode(FPLL, 89, 0, CLKDOUT, -1, 0), pnode(DLL, 85, 0, CLKIN, -1, -1) },
  { }
};
