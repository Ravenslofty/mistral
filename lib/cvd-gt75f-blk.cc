// Generated file, edition is futile

#include "cyclonev.h"

const mistral::CycloneV::ioblock_info mistral::CycloneV::gt75f_ioblocks_info[] = {
  { xy2pos(0, 11), 0, 10, 0, HSSI_OUTPUT },
  { xy2pos(0, 11), 1, 11, 0, HSSI_OUTPUT },
  { xy2pos(0, 14), 0, 13, 0, HSSI_INPUT },
  { xy2pos(0, 14), 1, 12, 0, HSSI_INPUT },
  { xy2pos(0, 15), 0, 8, 0, HSSI_OUTPUT },
  { xy2pos(0, 15), 1, 9, 0, HSSI_OUTPUT },
  { xy2pos(0, 18), 0, 11, 0, HSSI_INPUT },
  { xy2pos(0, 18), 1, 10, 0, HSSI_INPUT },
  { xy2pos(0, 19), 0, 6, 0, HSSI_OUTPUT },
  { xy2pos(0, 19), 1, 7, 0, HSSI_OUTPUT },
  { xy2pos(0, 19), 2, 15, 0, HSSI_INPUT },
  { xy2pos(0, 19), 3, 14, 0, HSSI_INPUT },
  { xy2pos(0, 22), 0, 9, 0, HSSI_INPUT },
  { xy2pos(0, 22), 1, 8, 0, HSSI_INPUT },
  { xy2pos(0, 23), 0, 4, 0, HSSI_OUTPUT },
  { xy2pos(0, 23), 1, 5, 0, HSSI_OUTPUT },
  { xy2pos(0, 26), 0, 7, 0, HSSI_INPUT },
  { xy2pos(0, 26), 1, 6, 0, HSSI_INPUT },
  { xy2pos(0, 27), 0, 2, 0, HSSI_OUTPUT },
  { xy2pos(0, 27), 1, 3, 0, HSSI_OUTPUT },
  { xy2pos(0, 30), 0, 5, 0, HSSI_INPUT },
  { xy2pos(0, 30), 1, 4, 0, HSSI_INPUT },
  { xy2pos(0, 31), 0, 0, 0, HSSI_OUTPUT },
  { xy2pos(0, 31), 1, 1, 0, HSSI_OUTPUT },
  { xy2pos(0, 31), 2, 0, 0, HSSI_INPUT },
  { xy2pos(0, 31), 3, 1, 0, HSSI_INPUT },
  { xy2pos(0, 34), 0, 3, 0, HSSI_INPUT },
  { xy2pos(0, 34), 1, 2, 0, HSSI_INPUT },
  { xy2pos(2, 0), 0, 0, 1, GPIO, (0 << 16) | 1065 },
  { xy2pos(2, 0), 1, 1, 1, GPIO, (0 << 16) | 1065 },
  { xy2pos(2, 0), 2, 2, 1, GPIO, (0 << 16) | 1065 },
  { xy2pos(2, 0), 3, 3, 1, GPIO, (0 << 16) | 1065 },
  { xy2pos(2, 61), 0, 0, 1, GPIO, (12 << 16) | 1921 },
  { xy2pos(2, 61), 1, 1, 1, GPIO, (12 << 16) | 1921 },
  { xy2pos(2, 61), 2, 2, 1, GPIO, (12 << 16) | 1921 },
  { xy2pos(2, 61), 3, 3, 1, GPIO, (12 << 16) | 1921 },
  { xy2pos(4, 0), 0, 0, 1, GPIO, (0 << 16) | 1512 },
  { xy2pos(4, 0), 1, 1, 1, GPIO, (0 << 16) | 1512 },
  { xy2pos(4, 0), 2, 2, 1, GPIO, (0 << 16) | 1512 },
  { xy2pos(4, 0), 3, 3, 1, GPIO, (0 << 16) | 1512 },
  { xy2pos(4, 61), 0, 0, 1, GPIO, (12 << 16) | 1474 },
  { xy2pos(4, 61), 1, 1, 1, GPIO, (12 << 16) | 1474 },
  { xy2pos(4, 61), 2, 2, 1, GPIO, (12 << 16) | 1474 },
  { xy2pos(4, 61), 3, 3, 1, GPIO, (12 << 16) | 1474 },
  { xy2pos(6, 0), 0, 0, 1, GPIO, (0 << 16) | 1959 },
  { xy2pos(6, 0), 1, 1, 1, GPIO, (0 << 16) | 1959 },
  { xy2pos(6, 0), 2, 2, 1, GPIO, (0 << 16) | 1959 },
  { xy2pos(6, 0), 3, 3, 1, GPIO, (0 << 16) | 1959 },
  { xy2pos(6, 61), 0, 0, 1, GPIO, (12 << 16) | 1027 },
  { xy2pos(6, 61), 1, 1, 1, GPIO, (12 << 16) | 1027 },
  { xy2pos(6, 61), 2, 2, 1, GPIO, (12 << 16) | 1027 },
  { xy2pos(6, 61), 3, 3, 1, GPIO, (12 << 16) | 1027 },
  { xy2pos(7, 0), 0, 0, 1, GPIO, (0 << 16) | 2406 },
  { xy2pos(7, 0), 1, 1, 1, GPIO, (0 << 16) | 2406 },
  { xy2pos(7, 0), 2, 2, 1, GPIO, (0 << 16) | 2406 },
  { xy2pos(7, 0), 3, 3, 1, GPIO, (0 << 16) | 2406 },
  { xy2pos(7, 61), 0, 0, 1, GPIO, (12 << 16) | 0 },
  { xy2pos(7, 61), 1, 1, 1, GPIO, (12 << 16) | 0 },
  { xy2pos(7, 61), 2, 2, 1, GPIO, (12 << 16) | 0 },
  { xy2pos(7, 61), 3, 3, 1, GPIO, (12 << 16) | 0 },
  { xy2pos(10, 0), 0, 0, 1, GPIO, (1 << 16) | 0 },
  { xy2pos(10, 0), 1, 1, 1, GPIO, (1 << 16) | 0 },
  { xy2pos(10, 0), 2, 2, 1, GPIO, (1 << 16) | 0 },
  { xy2pos(10, 0), 3, 3, 1, GPIO, (1 << 16) | 0 },
  { xy2pos(10, 61), 0, 0, 1, GPIO, (11 << 16) | 4339 },
  { xy2pos(10, 61), 1, 1, 1, GPIO, (11 << 16) | 4339 },
  { xy2pos(10, 61), 2, 2, 1, GPIO, (11 << 16) | 4339 },
  { xy2pos(10, 61), 3, 3, 1, GPIO, (11 << 16) | 4339 },
  { xy2pos(11, 0), 0, 0, 0, JTAG },
  { xy2pos(11, 0), 1, 0, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(11, 0), 2, 1, 0, JTAG },
  { xy2pos(11, 0), 3, 1, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(11, 61), 0, 6, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(11, 61), 1, 7, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(11, 61), 2, 8, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(11, 61), 3, 9, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(12, 0), 0, 0, 1, GPIO, (1 << 16) | 447 },
  { xy2pos(12, 0), 1, 1, 1, GPIO, (1 << 16) | 447 },
  { xy2pos(12, 0), 2, 2, 1, GPIO, (1 << 16) | 447 },
  { xy2pos(12, 0), 3, 3, 1, GPIO, (1 << 16) | 447 },
  { xy2pos(12, 61), 0, 0, 1, GPIO, (11 << 16) | 3892 },
  { xy2pos(12, 61), 1, 1, 1, GPIO, (11 << 16) | 3892 },
  { xy2pos(12, 61), 2, 2, 1, GPIO, (11 << 16) | 3892 },
  { xy2pos(12, 61), 3, 3, 1, GPIO, (11 << 16) | 3892 },
  { xy2pos(13, 0), 0, 2, 0, JTAG },
  { xy2pos(13, 0), 1, 2, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(13, 0), 2, 3, 0, JTAG },
  { xy2pos(13, 0), 3, 3, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(13, 61), 0, 10, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(13, 61), 1, 11, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(13, 61), 2, 12, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(13, 61), 3, 13, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(14, 0), 0, 0, 1, GPIO, (1 << 16) | 894 },
  { xy2pos(14, 0), 1, 1, 1, GPIO, (1 << 16) | 894 },
  { xy2pos(14, 0), 2, 2, 1, GPIO, (1 << 16) | 894 },
  { xy2pos(14, 0), 3, 3, 1, GPIO, (1 << 16) | 894 },
  { xy2pos(14, 61), 0, 0, 1, GPIO, (11 << 16) | 3445 },
  { xy2pos(14, 61), 1, 1, 1, GPIO, (11 << 16) | 3445 },
  { xy2pos(14, 61), 2, 2, 1, GPIO, (11 << 16) | 3445 },
  { xy2pos(14, 61), 3, 3, 1, GPIO, (11 << 16) | 3445 },
  { xy2pos(15, 0), 0, 0, 1, GPIO, (1 << 16) | 1341 },
  { xy2pos(15, 0), 1, 1, 1, GPIO, (1 << 16) | 1341 },
  { xy2pos(15, 0), 2, 2, 1, GPIO, (1 << 16) | 1341 },
  { xy2pos(15, 0), 3, 3, 1, GPIO, (1 << 16) | 1341 },
  { xy2pos(15, 61), 0, 0, 1, GPIO, (11 << 16) | 2418 },
  { xy2pos(15, 61), 1, 1, 1, GPIO, (11 << 16) | 2418 },
  { xy2pos(15, 61), 2, 2, 1, GPIO, (11 << 16) | 2418 },
  { xy2pos(15, 61), 3, 3, 1, GPIO, (11 << 16) | 2418 },
  { xy2pos(17, 0), 0, 0, 1, GPIO, (1 << 16) | 2423 },
  { xy2pos(17, 0), 1, 1, 1, GPIO, (1 << 16) | 2423 },
  { xy2pos(17, 0), 2, 2, 1, GPIO, (1 << 16) | 2423 },
  { xy2pos(17, 0), 3, 3, 1, GPIO, (1 << 16) | 2423 },
  { xy2pos(17, 61), 0, 0, 1, GPIO, (11 << 16) | 1921 },
  { xy2pos(17, 61), 1, 1, 1, GPIO, (11 << 16) | 1921 },
  { xy2pos(17, 61), 2, 2, 1, GPIO, (11 << 16) | 1921 },
  { xy2pos(17, 61), 3, 3, 1, GPIO, (11 << 16) | 1921 },
  { xy2pos(18, 0), 0, 0, 1, GPIO, (1 << 16) | 2870 },
  { xy2pos(18, 0), 1, 1, 1, GPIO, (1 << 16) | 2870 },
  { xy2pos(18, 0), 2, 2, 1, GPIO, (1 << 16) | 2870 },
  { xy2pos(18, 0), 3, 3, 1, GPIO, (1 << 16) | 2870 },
  { xy2pos(18, 61), 0, 0, 1, GPIO, (11 << 16) | 1474 },
  { xy2pos(18, 61), 1, 1, 1, GPIO, (11 << 16) | 1474 },
  { xy2pos(18, 61), 2, 2, 1, GPIO, (11 << 16) | 1474 },
  { xy2pos(18, 61), 3, 3, 1, GPIO, (11 << 16) | 1474 },
  { xy2pos(19, 0), 0, 0, 1, GPIO, (1 << 16) | 3317 },
  { xy2pos(19, 0), 1, 1, 1, GPIO, (1 << 16) | 3317 },
  { xy2pos(19, 0), 2, 2, 1, GPIO, (1 << 16) | 3317 },
  { xy2pos(19, 0), 3, 3, 1, GPIO, (1 << 16) | 3317 },
  { xy2pos(19, 61), 0, 0, 1, GPIO, (11 << 16) | 1027 },
  { xy2pos(19, 61), 1, 1, 1, GPIO, (11 << 16) | 1027 },
  { xy2pos(19, 61), 2, 2, 1, GPIO, (11 << 16) | 1027 },
  { xy2pos(19, 61), 3, 3, 1, GPIO, (11 << 16) | 1027 },
  { xy2pos(20, 61), 0, 14, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(20, 61), 1, 15, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(21, 0), 0, 0, 1, GPIO, (1 << 16) | 3764 },
  { xy2pos(21, 0), 1, 1, 1, GPIO, (1 << 16) | 3764 },
  { xy2pos(21, 0), 2, 2, 1, GPIO, (1 << 16) | 3764 },
  { xy2pos(21, 0), 3, 3, 1, GPIO, (1 << 16) | 3764 },
  { xy2pos(21, 61), 0, 0, 1, GPIO, (11 << 16) | 0 },
  { xy2pos(21, 61), 1, 1, 1, GPIO, (11 << 16) | 0 },
  { xy2pos(21, 61), 2, 2, 1, GPIO, (11 << 16) | 0 },
  { xy2pos(21, 61), 3, 3, 1, GPIO, (11 << 16) | 0 },
  { xy2pos(22, 0), 0, 4, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(22, 0), 1, 5, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(32, 0), 0, 0, 1, GPIO, (2 << 16) | 40 },
  { xy2pos(32, 0), 1, 1, 1, GPIO, (2 << 16) | 40 },
  { xy2pos(32, 0), 2, 2, 1, GPIO, (2 << 16) | 40 },
  { xy2pos(32, 0), 3, 3, 1, GPIO, (2 << 16) | 40 },
  { xy2pos(32, 61), 0, 0, 1, GPIO, (10 << 16) | 4339 },
  { xy2pos(32, 61), 1, 1, 1, GPIO, (10 << 16) | 4339 },
  { xy2pos(32, 61), 2, 2, 1, GPIO, (10 << 16) | 4339 },
  { xy2pos(32, 61), 3, 3, 1, GPIO, (10 << 16) | 4339 },
  { xy2pos(34, 0), 0, 0, 1, GPIO, (2 << 16) | 487 },
  { xy2pos(34, 0), 1, 1, 1, GPIO, (2 << 16) | 487 },
  { xy2pos(34, 0), 2, 2, 1, GPIO, (2 << 16) | 487 },
  { xy2pos(34, 0), 3, 3, 1, GPIO, (2 << 16) | 487 },
  { xy2pos(34, 61), 0, 0, 1, GPIO, (10 << 16) | 3892 },
  { xy2pos(34, 61), 1, 1, 1, GPIO, (10 << 16) | 3892 },
  { xy2pos(34, 61), 2, 2, 1, GPIO, (10 << 16) | 3892 },
  { xy2pos(34, 61), 3, 3, 1, GPIO, (10 << 16) | 3892 },
  { xy2pos(36, 0), 0, 0, 1, GPIO, (2 << 16) | 934 },
  { xy2pos(36, 0), 1, 1, 1, GPIO, (2 << 16) | 934 },
  { xy2pos(36, 0), 2, 2, 1, GPIO, (2 << 16) | 934 },
  { xy2pos(36, 0), 3, 3, 1, GPIO, (2 << 16) | 934 },
  { xy2pos(36, 61), 0, 0, 1, GPIO, (10 << 16) | 3445 },
  { xy2pos(36, 61), 1, 1, 1, GPIO, (10 << 16) | 3445 },
  { xy2pos(36, 61), 2, 2, 1, GPIO, (10 << 16) | 3445 },
  { xy2pos(36, 61), 3, 3, 1, GPIO, (10 << 16) | 3445 },
  { xy2pos(38, 0), 0, 0, 1, GPIO, (2 << 16) | 1381 },
  { xy2pos(38, 0), 1, 1, 1, GPIO, (2 << 16) | 1381 },
  { xy2pos(38, 0), 2, 2, 1, GPIO, (2 << 16) | 1381 },
  { xy2pos(38, 0), 3, 3, 1, GPIO, (2 << 16) | 1381 },
  { xy2pos(38, 61), 0, 0, 1, GPIO, (10 << 16) | 2418 },
  { xy2pos(38, 61), 1, 1, 1, GPIO, (10 << 16) | 2418 },
  { xy2pos(38, 61), 2, 2, 1, GPIO, (10 << 16) | 2418 },
  { xy2pos(38, 61), 3, 3, 1, GPIO, (10 << 16) | 2418 },
  { xy2pos(40, 0), 0, 0, 1, GPIO, (2 << 16) | 2458 },
  { xy2pos(40, 0), 1, 1, 1, GPIO, (2 << 16) | 2458 },
  { xy2pos(40, 0), 2, 2, 1, GPIO, (2 << 16) | 2458 },
  { xy2pos(40, 0), 3, 3, 1, GPIO, (2 << 16) | 2458 },
  { xy2pos(40, 61), 0, 0, 1, GPIO, (10 << 16) | 1921 },
  { xy2pos(40, 61), 1, 1, 1, GPIO, (10 << 16) | 1921 },
  { xy2pos(40, 61), 2, 2, 1, GPIO, (10 << 16) | 1921 },
  { xy2pos(40, 61), 3, 3, 1, GPIO, (10 << 16) | 1921 },
  { xy2pos(42, 0), 0, 0, 1, GPIO, (2 << 16) | 2905 },
  { xy2pos(42, 0), 1, 1, 1, GPIO, (2 << 16) | 2905 },
  { xy2pos(42, 0), 2, 2, 1, GPIO, (2 << 16) | 2905 },
  { xy2pos(42, 0), 3, 3, 1, GPIO, (2 << 16) | 2905 },
  { xy2pos(42, 61), 0, 0, 1, GPIO, (10 << 16) | 1474 },
  { xy2pos(42, 61), 1, 1, 1, GPIO, (10 << 16) | 1474 },
  { xy2pos(42, 61), 2, 2, 1, GPIO, (10 << 16) | 1474 },
  { xy2pos(42, 61), 3, 3, 1, GPIO, (10 << 16) | 1474 },
  { xy2pos(44, 0), 0, 0, 1, GPIO, (2 << 16) | 3352 },
  { xy2pos(44, 0), 1, 1, 1, GPIO, (2 << 16) | 3352 },
  { xy2pos(44, 0), 2, 2, 1, GPIO, (2 << 16) | 3352 },
  { xy2pos(44, 0), 3, 3, 1, GPIO, (2 << 16) | 3352 },
  { xy2pos(44, 61), 0, 0, 1, GPIO, (10 << 16) | 1027 },
  { xy2pos(44, 61), 1, 1, 1, GPIO, (10 << 16) | 1027 },
  { xy2pos(44, 61), 2, 2, 1, GPIO, (10 << 16) | 1027 },
  { xy2pos(44, 61), 3, 3, 1, GPIO, (10 << 16) | 1027 },
  { xy2pos(46, 0), 0, 0, 1, GPIO, (2 << 16) | 3799 },
  { xy2pos(46, 0), 1, 1, 1, GPIO, (2 << 16) | 3799 },
  { xy2pos(46, 0), 2, 2, 1, GPIO, (2 << 16) | 3799 },
  { xy2pos(46, 0), 3, 3, 1, GPIO, (2 << 16) | 3799 },
  { xy2pos(46, 61), 0, 0, 1, GPIO, (10 << 16) | 0 },
  { xy2pos(46, 61), 1, 1, 1, GPIO, (10 << 16) | 0 },
  { xy2pos(46, 61), 2, 2, 1, GPIO, (10 << 16) | 0 },
  { xy2pos(46, 61), 3, 3, 1, GPIO, (10 << 16) | 0 },
  { xy2pos(48, 0), 0, 0, 1, GPIO, (3 << 16) | 0 },
  { xy2pos(48, 0), 1, 1, 1, GPIO, (3 << 16) | 0 },
  { xy2pos(48, 0), 2, 2, 1, GPIO, (3 << 16) | 0 },
  { xy2pos(48, 0), 3, 3, 1, GPIO, (3 << 16) | 0 },
  { xy2pos(48, 61), 0, 0, 1, GPIO, (9 << 16) | 4339 },
  { xy2pos(48, 61), 1, 1, 1, GPIO, (9 << 16) | 4339 },
  { xy2pos(48, 61), 2, 2, 1, GPIO, (9 << 16) | 4339 },
  { xy2pos(48, 61), 3, 3, 1, GPIO, (9 << 16) | 4339 },
  { xy2pos(50, 0), 0, 0, 1, GPIO, (3 << 16) | 447 },
  { xy2pos(50, 0), 1, 1, 1, GPIO, (3 << 16) | 447 },
  { xy2pos(50, 0), 2, 2, 1, GPIO, (3 << 16) | 447 },
  { xy2pos(50, 0), 3, 3, 1, GPIO, (3 << 16) | 447 },
  { xy2pos(50, 61), 0, 0, 1, GPIO, (9 << 16) | 3892 },
  { xy2pos(50, 61), 1, 1, 1, GPIO, (9 << 16) | 3892 },
  { xy2pos(50, 61), 2, 2, 1, GPIO, (9 << 16) | 3892 },
  { xy2pos(50, 61), 3, 3, 1, GPIO, (9 << 16) | 3892 },
  { xy2pos(51, 0), 0, 0, 1, GPIO, (3 << 16) | 894 },
  { xy2pos(51, 0), 1, 1, 1, GPIO, (3 << 16) | 894 },
  { xy2pos(51, 0), 2, 2, 1, GPIO, (3 << 16) | 894 },
  { xy2pos(51, 0), 3, 3, 1, GPIO, (3 << 16) | 894 },
  { xy2pos(51, 61), 0, 0, 1, GPIO, (9 << 16) | 3445 },
  { xy2pos(51, 61), 1, 1, 1, GPIO, (9 << 16) | 3445 },
  { xy2pos(51, 61), 2, 2, 1, GPIO, (9 << 16) | 3445 },
  { xy2pos(51, 61), 3, 3, 1, GPIO, (9 << 16) | 3445 },
  { xy2pos(53, 0), 0, 0, 1, GPIO, (3 << 16) | 1341 },
  { xy2pos(53, 0), 1, 1, 1, GPIO, (3 << 16) | 1341 },
  { xy2pos(53, 0), 2, 2, 1, GPIO, (3 << 16) | 1341 },
  { xy2pos(53, 0), 3, 3, 1, GPIO, (3 << 16) | 1341 },
  { xy2pos(53, 61), 0, 0, 1, GPIO, (9 << 16) | 2418 },
  { xy2pos(53, 61), 1, 1, 1, GPIO, (9 << 16) | 2418 },
  { xy2pos(53, 61), 2, 2, 1, GPIO, (9 << 16) | 2418 },
  { xy2pos(53, 61), 3, 3, 1, GPIO, (9 << 16) | 2418 },
  { xy2pos(55, 0), 0, 0, 1, GPIO, (3 << 16) | 2418 },
  { xy2pos(55, 0), 1, 1, 1, GPIO, (3 << 16) | 2418 },
  { xy2pos(55, 0), 2, 2, 1, GPIO, (3 << 16) | 2418 },
  { xy2pos(55, 0), 3, 3, 1, GPIO, (3 << 16) | 2418 },
  { xy2pos(55, 61), 0, 0, 1, GPIO, (9 << 16) | 1921 },
  { xy2pos(55, 61), 1, 1, 1, GPIO, (9 << 16) | 1921 },
  { xy2pos(55, 61), 2, 2, 1, GPIO, (9 << 16) | 1921 },
  { xy2pos(55, 61), 3, 3, 1, GPIO, (9 << 16) | 1921 },
  { xy2pos(57, 0), 0, 0, 1, GPIO, (3 << 16) | 2865 },
  { xy2pos(57, 0), 1, 1, 1, GPIO, (3 << 16) | 2865 },
  { xy2pos(57, 0), 2, 2, 1, GPIO, (3 << 16) | 2865 },
  { xy2pos(57, 0), 3, 3, 1, GPIO, (3 << 16) | 2865 },
  { xy2pos(57, 61), 0, 0, 1, GPIO, (9 << 16) | 1474 },
  { xy2pos(57, 61), 1, 1, 1, GPIO, (9 << 16) | 1474 },
  { xy2pos(57, 61), 2, 2, 1, GPIO, (9 << 16) | 1474 },
  { xy2pos(57, 61), 3, 3, 1, GPIO, (9 << 16) | 1474 },
  { xy2pos(58, 61), 0, 16, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(59, 0), 0, 0, 1, GPIO, (3 << 16) | 3312 },
  { xy2pos(59, 0), 1, 1, 1, GPIO, (3 << 16) | 3312 },
  { xy2pos(59, 0), 2, 2, 1, GPIO, (3 << 16) | 3312 },
  { xy2pos(59, 0), 3, 3, 1, GPIO, (3 << 16) | 3312 },
  { xy2pos(59, 61), 0, 0, 1, GPIO, (9 << 16) | 1027 },
  { xy2pos(59, 61), 1, 1, 1, GPIO, (9 << 16) | 1027 },
  { xy2pos(59, 61), 2, 2, 1, GPIO, (9 << 16) | 1027 },
  { xy2pos(59, 61), 3, 3, 1, GPIO, (9 << 16) | 1027 },
  { xy2pos(61, 0), 0, 0, 1, GPIO, (3 << 16) | 3759 },
  { xy2pos(61, 0), 1, 1, 1, GPIO, (3 << 16) | 3759 },
  { xy2pos(61, 0), 2, 2, 1, GPIO, (3 << 16) | 3759 },
  { xy2pos(61, 0), 3, 3, 1, GPIO, (3 << 16) | 3759 },
  { xy2pos(61, 61), 0, 0, 1, GPIO, (9 << 16) | 0 },
  { xy2pos(61, 61), 1, 1, 1, GPIO, (9 << 16) | 0 },
  { xy2pos(61, 61), 2, 2, 1, GPIO, (9 << 16) | 0 },
  { xy2pos(61, 61), 3, 3, 1, GPIO, (9 << 16) | 0 },
  { xy2pos(62, 0), 0, 0, 1, GPIO, (4 << 16) | 0 },
  { xy2pos(62, 0), 1, 1, 1, GPIO, (4 << 16) | 0 },
  { xy2pos(62, 0), 2, 2, 1, GPIO, (4 << 16) | 0 },
  { xy2pos(62, 0), 3, 3, 1, GPIO, (4 << 16) | 0 },
  { xy2pos(62, 61), 0, 0, 1, GPIO, (8 << 16) | 2936 },
  { xy2pos(62, 61), 1, 1, 1, GPIO, (8 << 16) | 2936 },
  { xy2pos(62, 61), 2, 2, 1, GPIO, (8 << 16) | 2936 },
  { xy2pos(62, 61), 3, 3, 1, GPIO, (8 << 16) | 2936 },
  { xy2pos(64, 0), 0, 0, 1, GPIO, (4 << 16) | 447 },
  { xy2pos(64, 0), 1, 1, 1, GPIO, (4 << 16) | 447 },
  { xy2pos(64, 0), 2, 2, 1, GPIO, (4 << 16) | 447 },
  { xy2pos(64, 0), 3, 3, 1, GPIO, (4 << 16) | 447 },
  { xy2pos(64, 61), 0, 0, 1, GPIO, (8 << 16) | 2489 },
  { xy2pos(64, 61), 1, 1, 1, GPIO, (8 << 16) | 2489 },
  { xy2pos(64, 61), 2, 2, 1, GPIO, (8 << 16) | 2489 },
  { xy2pos(64, 61), 3, 3, 1, GPIO, (8 << 16) | 2489 },
  { xy2pos(65, 0), 0, 0, 1, GPIO, (4 << 16) | 894 },
  { xy2pos(65, 0), 1, 1, 1, GPIO, (4 << 16) | 894 },
  { xy2pos(65, 0), 2, 2, 1, GPIO, (4 << 16) | 894 },
  { xy2pos(65, 0), 3, 3, 1, GPIO, (4 << 16) | 894 },
  { xy2pos(65, 61), 0, 0, 1, GPIO, (8 << 16) | 2042 },
  { xy2pos(65, 61), 1, 1, 1, GPIO, (8 << 16) | 2042 },
  { xy2pos(65, 61), 2, 2, 1, GPIO, (8 << 16) | 2042 },
  { xy2pos(65, 61), 3, 3, 1, GPIO, (8 << 16) | 2042 },
  { xy2pos(66, 0), 0, 0, 1, GPIO, (4 << 16) | 1341 },
  { xy2pos(66, 0), 1, 1, 1, GPIO, (4 << 16) | 1341 },
  { xy2pos(66, 0), 2, 2, 1, GPIO, (4 << 16) | 1341 },
  { xy2pos(66, 0), 3, 3, 1, GPIO, (4 << 16) | 1341 },
  { xy2pos(66, 61), 0, 0, 1, GPIO, (8 << 16) | 1015 },
  { xy2pos(66, 61), 1, 1, 1, GPIO, (8 << 16) | 1015 },
  { xy2pos(66, 61), 2, 2, 1, GPIO, (8 << 16) | 1015 },
  { xy2pos(66, 61), 3, 3, 1, GPIO, (8 << 16) | 1015 },
  { xy2pos(68, 10), 0, 0, 1, GPIO, (5 << 16) | 121 },
  { xy2pos(68, 10), 1, 1, 1, GPIO, (5 << 16) | 121 },
  { xy2pos(68, 10), 2, 2, 1, GPIO, (5 << 16) | 121 },
  { xy2pos(68, 10), 3, 3, 1, GPIO, (5 << 16) | 121 },
  { xy2pos(68, 11), 0, 0, 1, GPIO, (5 << 16) | 1148 },
  { xy2pos(68, 11), 1, 1, 1, GPIO, (5 << 16) | 1148 },
  { xy2pos(68, 11), 2, 2, 1, GPIO, (5 << 16) | 1148 },
  { xy2pos(68, 11), 3, 3, 1, GPIO, (5 << 16) | 1148 },
  { xy2pos(68, 12), 0, 0, 1, GPIO, (5 << 16) | 1595 },
  { xy2pos(68, 12), 1, 1, 1, GPIO, (5 << 16) | 1595 },
  { xy2pos(68, 12), 2, 2, 1, GPIO, (5 << 16) | 1595 },
  { xy2pos(68, 12), 3, 3, 1, GPIO, (5 << 16) | 1595 },
  { xy2pos(68, 13), 0, 0, 1, GPIO, (5 << 16) | 2042 },
  { xy2pos(68, 13), 1, 1, 1, GPIO, (5 << 16) | 2042 },
  { xy2pos(68, 13), 2, 2, 1, GPIO, (5 << 16) | 2042 },
  { xy2pos(68, 13), 3, 3, 1, GPIO, (5 << 16) | 2042 },
  { xy2pos(68, 14), 0, 0, 1, GPIO, (6 << 16) | 0 },
  { xy2pos(68, 14), 1, 1, 1, GPIO, (6 << 16) | 0 },
  { xy2pos(68, 14), 2, 2, 1, GPIO, (6 << 16) | 0 },
  { xy2pos(68, 14), 3, 3, 1, GPIO, (6 << 16) | 0 },
  { xy2pos(68, 16), 0, 0, 1, GPIO, (6 << 16) | 1027 },
  { xy2pos(68, 16), 1, 1, 1, GPIO, (6 << 16) | 1027 },
  { xy2pos(68, 16), 2, 2, 1, GPIO, (6 << 16) | 1027 },
  { xy2pos(68, 16), 3, 3, 1, GPIO, (6 << 16) | 1027 },
  { xy2pos(68, 17), 0, 0, 1, GPIO, (6 << 16) | 1474 },
  { xy2pos(68, 17), 1, 1, 1, GPIO, (6 << 16) | 1474 },
  { xy2pos(68, 17), 2, 2, 1, GPIO, (6 << 16) | 1474 },
  { xy2pos(68, 17), 3, 3, 1, GPIO, (6 << 16) | 1474 },
  { xy2pos(68, 19), 0, 0, 1, GPIO, (6 << 16) | 1921 },
  { xy2pos(68, 19), 1, 1, 1, GPIO, (6 << 16) | 1921 },
  { xy2pos(68, 19), 2, 2, 1, GPIO, (6 << 16) | 1921 },
  { xy2pos(68, 19), 3, 3, 1, GPIO, (6 << 16) | 1921 },
  { xy2pos(68, 22), 0, 0, 1, GPIO, (6 << 16) | 2423 },
  { xy2pos(68, 22), 1, 1, 1, GPIO, (6 << 16) | 2423 },
  { xy2pos(68, 22), 2, 2, 1, GPIO, (6 << 16) | 2423 },
  { xy2pos(68, 22), 3, 3, 1, GPIO, (6 << 16) | 2423 },
  { xy2pos(68, 24), 0, 0, 1, GPIO, (6 << 16) | 3450 },
  { xy2pos(68, 24), 1, 1, 1, GPIO, (6 << 16) | 3450 },
  { xy2pos(68, 24), 2, 2, 1, GPIO, (6 << 16) | 3450 },
  { xy2pos(68, 24), 3, 3, 1, GPIO, (6 << 16) | 3450 },
  { xy2pos(68, 26), 0, 0, 1, GPIO, (6 << 16) | 3897 },
  { xy2pos(68, 26), 1, 1, 1, GPIO, (6 << 16) | 3897 },
  { xy2pos(68, 26), 2, 2, 1, GPIO, (6 << 16) | 3897 },
  { xy2pos(68, 26), 3, 3, 1, GPIO, (6 << 16) | 3897 },
  { xy2pos(68, 27), 0, 0, 1, GPIO, (6 << 16) | 4344 },
  { xy2pos(68, 27), 1, 1, 1, GPIO, (6 << 16) | 4344 },
  { xy2pos(68, 27), 2, 2, 1, GPIO, (6 << 16) | 4344 },
  { xy2pos(68, 27), 3, 3, 1, GPIO, (6 << 16) | 4344 },
  { xy2pos(68, 32), 0, 0, 1, GPIO, (7 << 16) | 0 },
  { xy2pos(68, 32), 1, 1, 1, GPIO, (7 << 16) | 0 },
  { xy2pos(68, 32), 2, 2, 1, GPIO, (7 << 16) | 0 },
  { xy2pos(68, 32), 3, 3, 1, GPIO, (7 << 16) | 0 },
  { xy2pos(68, 33), 0, 0, 1, GPIO, (7 << 16) | 1027 },
  { xy2pos(68, 33), 1, 1, 1, GPIO, (7 << 16) | 1027 },
  { xy2pos(68, 33), 2, 2, 1, GPIO, (7 << 16) | 1027 },
  { xy2pos(68, 33), 3, 3, 1, GPIO, (7 << 16) | 1027 },
  { xy2pos(68, 35), 0, 0, 1, GPIO, (7 << 16) | 1474 },
  { xy2pos(68, 35), 1, 1, 1, GPIO, (7 << 16) | 1474 },
  { xy2pos(68, 35), 2, 2, 1, GPIO, (7 << 16) | 1474 },
  { xy2pos(68, 35), 3, 3, 1, GPIO, (7 << 16) | 1474 },
  { xy2pos(68, 37), 0, 0, 1, GPIO, (7 << 16) | 1921 },
  { xy2pos(68, 37), 1, 1, 1, GPIO, (7 << 16) | 1921 },
  { xy2pos(68, 37), 2, 2, 1, GPIO, (7 << 16) | 1921 },
  { xy2pos(68, 37), 3, 3, 1, GPIO, (7 << 16) | 1921 },
  { xy2pos(68, 40), 0, 0, 1, GPIO, (7 << 16) | 2418 },
  { xy2pos(68, 40), 1, 1, 1, GPIO, (7 << 16) | 2418 },
  { xy2pos(68, 40), 2, 2, 1, GPIO, (7 << 16) | 2418 },
  { xy2pos(68, 40), 3, 3, 1, GPIO, (7 << 16) | 2418 },
  { xy2pos(68, 41), 0, 0, 1, GPIO, (7 << 16) | 3445 },
  { xy2pos(68, 41), 1, 1, 1, GPIO, (7 << 16) | 3445 },
  { xy2pos(68, 41), 2, 2, 1, GPIO, (7 << 16) | 3445 },
  { xy2pos(68, 41), 3, 3, 1, GPIO, (7 << 16) | 3445 },
  { xy2pos(68, 43), 0, 0, 1, GPIO, (7 << 16) | 3892 },
  { xy2pos(68, 43), 1, 1, 1, GPIO, (7 << 16) | 3892 },
  { xy2pos(68, 43), 2, 2, 1, GPIO, (7 << 16) | 3892 },
  { xy2pos(68, 43), 3, 3, 1, GPIO, (7 << 16) | 3892 },
  { xy2pos(68, 45), 0, 0, 1, GPIO, (7 << 16) | 4339 },
  { xy2pos(68, 45), 1, 1, 1, GPIO, (7 << 16) | 4339 },
  { xy2pos(68, 45), 2, 2, 1, GPIO, (7 << 16) | 4339 },
  { xy2pos(68, 45), 3, 3, 1, GPIO, (7 << 16) | 4339 },
  { xy2pos(68, 47), 0, 0, 1, GPIO, (7 << 16) | 4786 },
  { xy2pos(68, 47), 1, 1, 1, GPIO, (7 << 16) | 4786 },
  { xy2pos(68, 47), 2, 2, 1, GPIO, (7 << 16) | 4786 },
  { xy2pos(68, 47), 3, 3, 1, GPIO, (7 << 16) | 4786 },
  { xy2pos(68, 49), 0, 0, 1, GPIO, (7 << 16) | 5813 },
  { xy2pos(68, 49), 1, 1, 1, GPIO, (7 << 16) | 5813 },
  { xy2pos(68, 49), 2, 2, 1, GPIO, (7 << 16) | 5813 },
  { xy2pos(68, 49), 3, 3, 1, GPIO, (7 << 16) | 5813 },
  { xy2pos(68, 51), 0, 0, 1, GPIO, (7 << 16) | 6260 },
  { xy2pos(68, 51), 1, 1, 1, GPIO, (7 << 16) | 6260 },
  { xy2pos(68, 51), 2, 2, 1, GPIO, (7 << 16) | 6260 },
  { xy2pos(68, 51), 3, 3, 1, GPIO, (7 << 16) | 6260 },
  { xy2pos(68, 52), 0, 0, 1, GPIO, (7 << 16) | 6707 },
  { xy2pos(68, 52), 1, 1, 1, GPIO, (7 << 16) | 6707 },
  { xy2pos(68, 52), 2, 2, 1, GPIO, (7 << 16) | 6707 },
  { xy2pos(68, 52), 3, 3, 1, GPIO, (7 << 16) | 6707 },
};

const mistral::CycloneV::dqs16_info mistral::CycloneV::gt75f_dqs16_info[] = {
  { xy2pos(4, 0), (1 << 23) | (1 << 22) | (0 << 16) | 1256 },
  { xy2pos(4, 61), (1 << 23) | (0 << 22) | (12 << 16) | 2112 },
  { xy2pos(12, 0), (1 << 23) | (1 << 22) | (1 << 16) | 191 },
  { xy2pos(12, 61), (1 << 23) | (0 << 22) | (11 << 16) | 4530 },
  { xy2pos(18, 0), (1 << 23) | (1 << 22) | (1 << 16) | 2614 },
  { xy2pos(18, 61), (1 << 23) | (0 << 22) | (11 << 16) | 2112 },
  { xy2pos(34, 0), (1 << 23) | (1 << 22) | (2 << 16) | 231 },
  { xy2pos(34, 61), (1 << 23) | (0 << 22) | (10 << 16) | 4530 },
  { xy2pos(42, 0), (1 << 23) | (1 << 22) | (2 << 16) | 2649 },
  { xy2pos(42, 61), (1 << 23) | (0 << 22) | (10 << 16) | 2112 },
  { xy2pos(50, 0), (1 << 23) | (1 << 22) | (3 << 16) | 191 },
  { xy2pos(50, 61), (1 << 23) | (0 << 22) | (9 << 16) | 4530 },
  { xy2pos(57, 0), (1 << 23) | (1 << 22) | (3 << 16) | 2609 },
  { xy2pos(57, 61), (1 << 23) | (0 << 22) | (9 << 16) | 2112 },
  { xy2pos(64, 0), (1 << 23) | (1 << 22) | (4 << 16) | 191 },
  { xy2pos(64, 61), (1 << 23) | (0 << 22) | (8 << 16) | 3127 },
  { xy2pos(68, 12), (1 << 23) | (0 << 22) | (5 << 16) | 2233 },
  { xy2pos(68, 17), (1 << 23) | (0 << 22) | (6 << 16) | 2112 },
  { xy2pos(68, 26), (1 << 23) | (0 << 22) | (6 << 16) | 4535 },
  { xy2pos(68, 35), (1 << 23) | (0 << 22) | (7 << 16) | 2112 },
  { xy2pos(68, 43), (1 << 23) | (0 << 22) | (7 << 16) | 4530 },
  { xy2pos(68, 51), (1 << 23) | (0 << 22) | (7 << 16) | 6898 },
};

const mistral::CycloneV::fixed_block_info mistral::CycloneV::gt75f_fixed_blocks_info[FB_COUNT] = {
  { xy2pos(0, 0), (0 << 16) | 112 },
  { xy2pos(0, 13), (14 << 16) | 4816 },
  { xy2pos(0, 29), (14 << 16) | 3984 },
  { xy2pos(0, 53), (12 << 16) | 2601 },
  { xy2pos(68, 0), (4 << 16) | 2551 },
  { xy2pos(68, 53), (8 << 16) | 112 },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { xy2pos(0, 2), (0 << 16) | 0 },
  { xy2pos(5, 61), (12 << 16) | 2449 },
  { xy2pos(68, 2), (4 << 16) | 2439 },
  { xy2pos(68, 59), (8 << 16) | 0 },
  { xy2pos(28, 0), (1 << 16) | 4791 },
  { xy2pos(28, 61), (10 << 16) | 4826 },
  { xy2pos(0, 8), (15 << 16) | 9136 },
  { xy2pos(68, 8), (5 << 16) | 2489 },
  { xy2pos(0, 59), (12 << 16) | 2561 },
  { xy2pos(8, 0), (0 << 16) | 944 },
  { xy2pos(68, 3), (4 << 16) | 2399 },
  { xy2pos(68, 58), (8 << 16) | 944 },
  { xy2pos(0, 11), (15 << 16) | 0 },
  { xy2pos(0, 23), (14 << 16) | 0 },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { xy2pos(3, 0), (7 << 16) | 7204 },
  { xy2pos(3, 61), (0 << 16) | 984 },
  { xy2pos(63, 0), (8 << 16) | 984 },
  { xy2pos(63, 61), (4 << 16) | 2368 },
  { xy2pos(68, 4), (5 << 16) | 50 },
  { xy2pos(68, 54), (12 << 16) | 2418 },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { xy2pos(5, 0), (6 << 16) | 2368 },
  { xy2pos(8, 61), (7 << 16) | 2368 },
  { xy2pos(16, 0), (0 << 16) | 1010 },
  { xy2pos(16, 61), (12 << 16) | 2368 },
  { xy2pos(39, 0), (1 << 16) | 2368 },
  { xy2pos(39, 61), (3 << 16) | 2368 },
  { xy2pos(54, 0), (9 << 16) | 2368 },
  { xy2pos(54, 61), (10 << 16) | 2368 },
  { xy2pos(68, 7), (5 << 16) | 0 },
  { xy2pos(68, 20), (2 << 16) | 2408 },
  { xy2pos(68, 38), (7 << 16) | 7154 },
  { xy2pos(68, 53), (11 << 16) | 2368 },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { xy2pos(0, 11), (0 << 24) | (14 << 16) | 5648 },
  { xy2pos(0, 23), (1 << 24) | (14 << 16) | 2832 },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { xy2pos(9, 0), (0 << 16) | 1060 },
  { xy2pos(9, 61), (12 << 16) | 2444 },
  { xy2pos(20, 0), (1 << 16) | 2418 },
  { xy2pos(60, 0), (4 << 16) | 2394 },
  { xy2pos(60, 61), (8 << 16) | 1010 },
  { xy2pos(68, 6), (5 << 16) | 116 },
  { xy2pos(68, 21), (6 << 16) | 2418 },
  { xy2pos(68, 50), (7 << 16) | 7230 },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { xy2pos(29, 0), (2 << 16) | 0 },
  { xy2pos(29, 61), (10 << 16) | 4786 },
  { xy2pos(68, 5), (5 << 16) | 76 },
  { 0xffff, 0xffffffff },
  { xy2pos(1, 14), (15 << 16) | 2832 },
  { xy2pos(1, 36), (13 << 16) | 0 },
  { xy2pos(22, 61), (9 << 16) | 4786 },
  { xy2pos(23, 0), (2 << 16) | 4826 },
};

const mistral::CycloneV::dcram_info mistral::CycloneV::gt75f_dcram_pos[] = {
  { 8, 1160 },
  { 8, 1161 },
  { 9, 1161 },
  { 8, 1074 },
  { 8, 1075 },
  { 9, 1075 },
  { 828, 1762 },
  { 828, 1763 },
  { 829, 1763 },
  { 828, 1676 },
  { 828, 1677 },
  { 829, 1677 },
  { 828, 2450 },
  { 828, 2451 },
  { 829, 2451 },
  { 828, 2364 },
  { 828, 2365 },
  { 829, 2365 },
  { 8, 3052 },
  { 8, 3053 },
  { 9, 3053 },
  { 8, 2966 },
  { 8, 2967 },
  { 9, 2967 },
  { 828, 3654 },
  { 828, 3655 },
  { 829, 3655 },
  { 828, 3568 },
  { 828, 3569 },
  { 829, 3569 },
  { 828, 4342 },
  { 828, 4343 },
  { 829, 4343 },
  { 828, 4256 },
  { 828, 4257 },
  { 829, 4257 },
};

const mistral::CycloneV::dcram_info mistral::CycloneV::gt75f_forced_1_info[20] = {
  { 1415, 82 },
  { 4302, 82 },
  { 1415, 87 },
  { 4302, 87 },
  { 1413, 724 },
  { 1415, 724 },
  { 4300, 724 },
  { 4302, 724 },
  { 1413, 729 },
  { 1415, 729 },
  { 4300, 729 },
  { 4302, 729 },
  { 4300, 810 },
  { 4302, 810 },
  { 4300, 815 },
  { 4302, 815 },
  { 1415, 5298 },
  { 4302, 5298 },
  { 1415, 5303 },
  { 4302, 5303 },
};

const mistral::CycloneV::p2r_info mistral::CycloneV::gt75f_p2r_info[] = {
  { pnode(GPIO, 2, 0, DATAIN, 0, 0), rnode(GOUT, 2, 0, 44) },
  { pnode(GPIO, 2, 0, DATAIN, 0, 1), rnode(GOUT, 2, 0, 34) },
  { pnode(GPIO, 2, 0, DATAIN, 0, 2), rnode(GOUT, 2, 0, 43) },
  { pnode(GPIO, 2, 0, DATAIN, 0, 3), rnode(GOUT, 2, 0, 29) },
  { pnode(GPIO, 2, 0, DATAOUT, 0, 0), rnode(GIN, 2, 0, 18) },
  { pnode(GPIO, 2, 0, DATAOUT, 0, 1), rnode(GIN, 2, 0, 17) },
  { pnode(GPIO, 2, 0, DATAOUT, 0, 2), rnode(GIN, 2, 0, 16) },
  { pnode(GPIO, 2, 0, DATAOUT, 0, 3), rnode(GIN, 2, 0, 15) },
  { pnode(GPIO, 2, 0, DATAOUT, 0, 4), rnode(GIN, 2, 0, 14) },
  { pnode(GPIO, 2, 0, OEIN, 0, 0), rnode(GOUT, 2, 0, 38) },
  { pnode(GPIO, 2, 0, OEIN, 0, 1), rnode(GOUT, 2, 0, 30) },
  { pnode(GPIO, 2, 0, BSLIPMAX, 0, -1), rnode(GIN, 2, 0, 19) },
  { pnode(GPIO, 2, 0, CEIN, 0, -1), rnode(GOUT, 2, 0, 27) },
  { pnode(GPIO, 2, 0, CEOUT, 0, -1), rnode(GOUT, 2, 0, 45) },
  { pnode(GPIO, 2, 0, ACLR, 0, -1), rnode(GOUT, 2, 0, 28) },
  { pnode(GPIO, 2, 0, SCLR, 0, -1), rnode(GOUT, 2, 0, 31) },
  { pnode(GPIO, 2, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 2, 0, 10) },
  { pnode(GPIO, 2, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 2, 0, 8) },
  { pnode(GPIO, 2, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 2, 0, 14) },
  { pnode(GPIO, 2, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 2, 0, 12) },
  { pnode(GPIO, 2, 0, DATAIN, 1, 0), rnode(GOUT, 2, 0, 49) },
  { pnode(GPIO, 2, 0, DATAIN, 1, 1), rnode(GOUT, 2, 0, 41) },
  { pnode(GPIO, 2, 0, DATAIN, 1, 2), rnode(GOUT, 2, 0, 48) },
  { pnode(GPIO, 2, 0, DATAIN, 1, 3), rnode(GOUT, 2, 0, 40) },
  { pnode(GPIO, 2, 0, DATAOUT, 1, 0), rnode(GIN, 2, 0, 24) },
  { pnode(GPIO, 2, 0, DATAOUT, 1, 1), rnode(GIN, 2, 0, 23) },
  { pnode(GPIO, 2, 0, DATAOUT, 1, 2), rnode(GIN, 2, 0, 22) },
  { pnode(GPIO, 2, 0, DATAOUT, 1, 3), rnode(GIN, 2, 0, 21) },
  { pnode(GPIO, 2, 0, DATAOUT, 1, 4), rnode(GIN, 2, 0, 20) },
  { pnode(GPIO, 2, 0, OEIN, 1, 0), rnode(GOUT, 2, 0, 47) },
  { pnode(GPIO, 2, 0, OEIN, 1, 1), rnode(GOUT, 2, 0, 39) },
  { pnode(GPIO, 2, 0, BSLIPMAX, 1, -1), rnode(GIN, 2, 0, 25) },
  { pnode(GPIO, 2, 0, CEIN, 1, -1), rnode(GOUT, 2, 0, 51) },
  { pnode(GPIO, 2, 0, CEOUT, 1, -1), rnode(GOUT, 2, 0, 50) },
  { pnode(GPIO, 2, 0, ACLR, 1, -1), rnode(GOUT, 2, 0, 42) },
  { pnode(GPIO, 2, 0, SCLR, 1, -1), rnode(GOUT, 2, 0, 46) },
  { pnode(GPIO, 2, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 2, 0, 11) },
  { pnode(GPIO, 2, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 2, 0, 9) },
  { pnode(GPIO, 2, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 2, 0, 15) },
  { pnode(GPIO, 2, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 2, 0, 13) },
  { pnode(GPIO, 2, 0, DATAIN, 2, 0), rnode(GOUT, 2, 0, 14) },
  { pnode(GPIO, 2, 0, DATAIN, 2, 1), rnode(GOUT, 2, 0, 22) },
  { pnode(GPIO, 2, 0, DATAIN, 2, 2), rnode(GOUT, 2, 0, 15) },
  { pnode(GPIO, 2, 0, DATAIN, 2, 3), rnode(GOUT, 2, 0, 23) },
  { pnode(GPIO, 2, 0, DATAOUT, 2, 0), rnode(GIN, 2, 0, 8) },
  { pnode(GPIO, 2, 0, DATAOUT, 2, 1), rnode(GIN, 2, 0, 9) },
  { pnode(GPIO, 2, 0, DATAOUT, 2, 2), rnode(GIN, 2, 0, 10) },
  { pnode(GPIO, 2, 0, DATAOUT, 2, 3), rnode(GIN, 2, 0, 11) },
  { pnode(GPIO, 2, 0, DATAOUT, 2, 4), rnode(GIN, 2, 0, 12) },
  { pnode(GPIO, 2, 0, OEIN, 2, 0), rnode(GOUT, 2, 0, 16) },
  { pnode(GPIO, 2, 0, OEIN, 2, 1), rnode(GOUT, 2, 0, 24) },
  { pnode(GPIO, 2, 0, BSLIPMAX, 2, -1), rnode(GIN, 2, 0, 7) },
  { pnode(GPIO, 2, 0, CEIN, 2, -1), rnode(GOUT, 2, 0, 20) },
  { pnode(GPIO, 2, 0, CEOUT, 2, -1), rnode(GOUT, 2, 0, 13) },
  { pnode(GPIO, 2, 0, ACLR, 2, -1), rnode(GOUT, 2, 0, 21) },
  { pnode(GPIO, 2, 0, SCLR, 2, -1), rnode(GOUT, 2, 0, 25) },
  { pnode(GPIO, 2, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 2, 0, 5) },
  { pnode(GPIO, 2, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 2, 0, 7) },
  { pnode(GPIO, 2, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 2, 0, 1) },
  { pnode(GPIO, 2, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 2, 0, 3) },
  { pnode(GPIO, 2, 0, DATAIN, 3, 0), rnode(GOUT, 2, 0, 3) },
  { pnode(GPIO, 2, 0, DATAIN, 3, 1), rnode(GOUT, 2, 0, 17) },
  { pnode(GPIO, 2, 0, DATAIN, 3, 2), rnode(GOUT, 2, 0, 8) },
  { pnode(GPIO, 2, 0, DATAIN, 3, 3), rnode(GOUT, 2, 0, 18) },
  { pnode(GPIO, 2, 0, DATAOUT, 3, 0), rnode(GIN, 2, 0, 2) },
  { pnode(GPIO, 2, 0, DATAOUT, 3, 1), rnode(GIN, 2, 0, 3) },
  { pnode(GPIO, 2, 0, DATAOUT, 3, 2), rnode(GIN, 2, 0, 4) },
  { pnode(GPIO, 2, 0, DATAOUT, 3, 3), rnode(GIN, 2, 0, 5) },
  { pnode(GPIO, 2, 0, DATAOUT, 3, 4), rnode(GIN, 2, 0, 6) },
  { pnode(GPIO, 2, 0, OEIN, 3, 0), rnode(GOUT, 2, 0, 2) },
  { pnode(GPIO, 2, 0, OEIN, 3, 1), rnode(GOUT, 2, 0, 19) },
  { pnode(GPIO, 2, 0, BSLIPMAX, 3, -1), rnode(GIN, 2, 0, 1) },
  { pnode(GPIO, 2, 0, CEIN, 3, -1), rnode(GOUT, 2, 0, 5) },
  { pnode(GPIO, 2, 0, CEOUT, 3, -1), rnode(GOUT, 2, 0, 4) },
  { pnode(GPIO, 2, 0, ACLR, 3, -1), rnode(GOUT, 2, 0, 12) },
  { pnode(GPIO, 2, 0, SCLR, 3, -1), rnode(GOUT, 2, 0, 1) },
  { pnode(GPIO, 2, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 2, 0, 4) },
  { pnode(GPIO, 2, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 2, 0, 6) },
  { pnode(GPIO, 2, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 2, 0, 0) },
  { pnode(GPIO, 2, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 2, 0, 2) },
  { pnode(GPIO, 2, 61, DATAIN, 0, 0), rnode(GOUT, 2, 61, 44) },
  { pnode(GPIO, 2, 61, DATAIN, 0, 1), rnode(GOUT, 2, 61, 34) },
  { pnode(GPIO, 2, 61, DATAIN, 0, 2), rnode(GOUT, 2, 61, 43) },
  { pnode(GPIO, 2, 61, DATAIN, 0, 3), rnode(GOUT, 2, 61, 29) },
  { pnode(GPIO, 2, 61, DATAOUT, 0, 0), rnode(GIN, 2, 61, 18) },
  { pnode(GPIO, 2, 61, DATAOUT, 0, 1), rnode(GIN, 2, 61, 17) },
  { pnode(GPIO, 2, 61, DATAOUT, 0, 2), rnode(GIN, 2, 61, 16) },
  { pnode(GPIO, 2, 61, DATAOUT, 0, 3), rnode(GIN, 2, 61, 15) },
  { pnode(GPIO, 2, 61, DATAOUT, 0, 4), rnode(GIN, 2, 61, 14) },
  { pnode(GPIO, 2, 61, OEIN, 0, 0), rnode(GOUT, 2, 61, 38) },
  { pnode(GPIO, 2, 61, OEIN, 0, 1), rnode(GOUT, 2, 61, 30) },
  { pnode(GPIO, 2, 61, BSLIPMAX, 0, -1), rnode(GIN, 2, 61, 19) },
  { pnode(GPIO, 2, 61, CEIN, 0, -1), rnode(GOUT, 2, 61, 27) },
  { pnode(GPIO, 2, 61, CEOUT, 0, -1), rnode(GOUT, 2, 61, 45) },
  { pnode(GPIO, 2, 61, ACLR, 0, -1), rnode(GOUT, 2, 61, 28) },
  { pnode(GPIO, 2, 61, SCLR, 0, -1), rnode(GOUT, 2, 61, 31) },
  { pnode(GPIO, 2, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 2, 61, 10) },
  { pnode(GPIO, 2, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 2, 61, 8) },
  { pnode(GPIO, 2, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 2, 61, 14) },
  { pnode(GPIO, 2, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 2, 61, 12) },
  { pnode(GPIO, 2, 61, DATAIN, 1, 0), rnode(GOUT, 2, 61, 49) },
  { pnode(GPIO, 2, 61, DATAIN, 1, 1), rnode(GOUT, 2, 61, 41) },
  { pnode(GPIO, 2, 61, DATAIN, 1, 2), rnode(GOUT, 2, 61, 48) },
  { pnode(GPIO, 2, 61, DATAIN, 1, 3), rnode(GOUT, 2, 61, 40) },
  { pnode(GPIO, 2, 61, DATAOUT, 1, 0), rnode(GIN, 2, 61, 24) },
  { pnode(GPIO, 2, 61, DATAOUT, 1, 1), rnode(GIN, 2, 61, 23) },
  { pnode(GPIO, 2, 61, DATAOUT, 1, 2), rnode(GIN, 2, 61, 22) },
  { pnode(GPIO, 2, 61, DATAOUT, 1, 3), rnode(GIN, 2, 61, 21) },
  { pnode(GPIO, 2, 61, DATAOUT, 1, 4), rnode(GIN, 2, 61, 20) },
  { pnode(GPIO, 2, 61, OEIN, 1, 0), rnode(GOUT, 2, 61, 47) },
  { pnode(GPIO, 2, 61, OEIN, 1, 1), rnode(GOUT, 2, 61, 39) },
  { pnode(GPIO, 2, 61, BSLIPMAX, 1, -1), rnode(GIN, 2, 61, 25) },
  { pnode(GPIO, 2, 61, CEIN, 1, -1), rnode(GOUT, 2, 61, 51) },
  { pnode(GPIO, 2, 61, CEOUT, 1, -1), rnode(GOUT, 2, 61, 50) },
  { pnode(GPIO, 2, 61, ACLR, 1, -1), rnode(GOUT, 2, 61, 42) },
  { pnode(GPIO, 2, 61, SCLR, 1, -1), rnode(GOUT, 2, 61, 46) },
  { pnode(GPIO, 2, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 2, 61, 11) },
  { pnode(GPIO, 2, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 2, 61, 9) },
  { pnode(GPIO, 2, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 2, 61, 15) },
  { pnode(GPIO, 2, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 2, 61, 13) },
  { pnode(GPIO, 2, 61, DATAIN, 2, 0), rnode(GOUT, 2, 61, 14) },
  { pnode(GPIO, 2, 61, DATAIN, 2, 1), rnode(GOUT, 2, 61, 22) },
  { pnode(GPIO, 2, 61, DATAIN, 2, 2), rnode(GOUT, 2, 61, 15) },
  { pnode(GPIO, 2, 61, DATAIN, 2, 3), rnode(GOUT, 2, 61, 23) },
  { pnode(GPIO, 2, 61, DATAOUT, 2, 0), rnode(GIN, 2, 61, 8) },
  { pnode(GPIO, 2, 61, DATAOUT, 2, 1), rnode(GIN, 2, 61, 9) },
  { pnode(GPIO, 2, 61, DATAOUT, 2, 2), rnode(GIN, 2, 61, 10) },
  { pnode(GPIO, 2, 61, DATAOUT, 2, 3), rnode(GIN, 2, 61, 11) },
  { pnode(GPIO, 2, 61, DATAOUT, 2, 4), rnode(GIN, 2, 61, 12) },
  { pnode(GPIO, 2, 61, OEIN, 2, 0), rnode(GOUT, 2, 61, 16) },
  { pnode(GPIO, 2, 61, OEIN, 2, 1), rnode(GOUT, 2, 61, 24) },
  { pnode(GPIO, 2, 61, BSLIPMAX, 2, -1), rnode(GIN, 2, 61, 7) },
  { pnode(GPIO, 2, 61, CEIN, 2, -1), rnode(GOUT, 2, 61, 20) },
  { pnode(GPIO, 2, 61, CEOUT, 2, -1), rnode(GOUT, 2, 61, 13) },
  { pnode(GPIO, 2, 61, ACLR, 2, -1), rnode(GOUT, 2, 61, 21) },
  { pnode(GPIO, 2, 61, SCLR, 2, -1), rnode(GOUT, 2, 61, 25) },
  { pnode(GPIO, 2, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 2, 61, 5) },
  { pnode(GPIO, 2, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 2, 61, 7) },
  { pnode(GPIO, 2, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 2, 61, 1) },
  { pnode(GPIO, 2, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 2, 61, 3) },
  { pnode(GPIO, 2, 61, DATAIN, 3, 0), rnode(GOUT, 2, 61, 3) },
  { pnode(GPIO, 2, 61, DATAIN, 3, 1), rnode(GOUT, 2, 61, 17) },
  { pnode(GPIO, 2, 61, DATAIN, 3, 2), rnode(GOUT, 2, 61, 8) },
  { pnode(GPIO, 2, 61, DATAIN, 3, 3), rnode(GOUT, 2, 61, 18) },
  { pnode(GPIO, 2, 61, DATAOUT, 3, 0), rnode(GIN, 2, 61, 2) },
  { pnode(GPIO, 2, 61, DATAOUT, 3, 1), rnode(GIN, 2, 61, 3) },
  { pnode(GPIO, 2, 61, DATAOUT, 3, 2), rnode(GIN, 2, 61, 4) },
  { pnode(GPIO, 2, 61, DATAOUT, 3, 3), rnode(GIN, 2, 61, 5) },
  { pnode(GPIO, 2, 61, DATAOUT, 3, 4), rnode(GIN, 2, 61, 6) },
  { pnode(GPIO, 2, 61, OEIN, 3, 0), rnode(GOUT, 2, 61, 2) },
  { pnode(GPIO, 2, 61, OEIN, 3, 1), rnode(GOUT, 2, 61, 19) },
  { pnode(GPIO, 2, 61, BSLIPMAX, 3, -1), rnode(GIN, 2, 61, 1) },
  { pnode(GPIO, 2, 61, CEIN, 3, -1), rnode(GOUT, 2, 61, 5) },
  { pnode(GPIO, 2, 61, CEOUT, 3, -1), rnode(GOUT, 2, 61, 4) },
  { pnode(GPIO, 2, 61, ACLR, 3, -1), rnode(GOUT, 2, 61, 12) },
  { pnode(GPIO, 2, 61, SCLR, 3, -1), rnode(GOUT, 2, 61, 1) },
  { pnode(GPIO, 2, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 2, 61, 4) },
  { pnode(GPIO, 2, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 2, 61, 6) },
  { pnode(GPIO, 2, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 2, 61, 0) },
  { pnode(GPIO, 2, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 2, 61, 2) },
  { pnode(GPIO, 4, 0, DATAIN, 0, 0), rnode(GOUT, 4, 0, 44) },
  { pnode(GPIO, 4, 0, DATAIN, 0, 1), rnode(GOUT, 4, 0, 34) },
  { pnode(GPIO, 4, 0, DATAIN, 0, 2), rnode(GOUT, 4, 0, 43) },
  { pnode(GPIO, 4, 0, DATAIN, 0, 3), rnode(GOUT, 4, 0, 29) },
  { pnode(GPIO, 4, 0, DATAOUT, 0, 0), rnode(GIN, 4, 0, 18) },
  { pnode(GPIO, 4, 0, DATAOUT, 0, 1), rnode(GIN, 4, 0, 17) },
  { pnode(GPIO, 4, 0, DATAOUT, 0, 2), rnode(GIN, 4, 0, 16) },
  { pnode(GPIO, 4, 0, DATAOUT, 0, 3), rnode(GIN, 4, 0, 15) },
  { pnode(GPIO, 4, 0, DATAOUT, 0, 4), rnode(GIN, 4, 0, 14) },
  { pnode(GPIO, 4, 0, OEIN, 0, 0), rnode(GOUT, 4, 0, 38) },
  { pnode(GPIO, 4, 0, OEIN, 0, 1), rnode(GOUT, 4, 0, 30) },
  { pnode(GPIO, 4, 0, BSLIPMAX, 0, -1), rnode(GIN, 4, 0, 19) },
  { pnode(GPIO, 4, 0, CEIN, 0, -1), rnode(GOUT, 4, 0, 27) },
  { pnode(GPIO, 4, 0, CEOUT, 0, -1), rnode(GOUT, 4, 0, 45) },
  { pnode(GPIO, 4, 0, ACLR, 0, -1), rnode(GOUT, 4, 0, 28) },
  { pnode(GPIO, 4, 0, SCLR, 0, -1), rnode(GOUT, 4, 0, 31) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 4, 0, 10) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 4, 0, 8) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 4, 0, 14) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 4, 0, 12) },
  { pnode(GPIO, 4, 0, DATAIN, 1, 0), rnode(GOUT, 4, 0, 49) },
  { pnode(GPIO, 4, 0, DATAIN, 1, 1), rnode(GOUT, 4, 0, 41) },
  { pnode(GPIO, 4, 0, DATAIN, 1, 2), rnode(GOUT, 4, 0, 48) },
  { pnode(GPIO, 4, 0, DATAIN, 1, 3), rnode(GOUT, 4, 0, 40) },
  { pnode(GPIO, 4, 0, DATAOUT, 1, 0), rnode(GIN, 4, 0, 24) },
  { pnode(GPIO, 4, 0, DATAOUT, 1, 1), rnode(GIN, 4, 0, 23) },
  { pnode(GPIO, 4, 0, DATAOUT, 1, 2), rnode(GIN, 4, 0, 22) },
  { pnode(GPIO, 4, 0, DATAOUT, 1, 3), rnode(GIN, 4, 0, 21) },
  { pnode(GPIO, 4, 0, DATAOUT, 1, 4), rnode(GIN, 4, 0, 20) },
  { pnode(GPIO, 4, 0, OEIN, 1, 0), rnode(GOUT, 4, 0, 47) },
  { pnode(GPIO, 4, 0, OEIN, 1, 1), rnode(GOUT, 4, 0, 39) },
  { pnode(GPIO, 4, 0, BSLIPMAX, 1, -1), rnode(GIN, 4, 0, 25) },
  { pnode(GPIO, 4, 0, CEIN, 1, -1), rnode(GOUT, 4, 0, 51) },
  { pnode(GPIO, 4, 0, CEOUT, 1, -1), rnode(GOUT, 4, 0, 50) },
  { pnode(GPIO, 4, 0, ACLR, 1, -1), rnode(GOUT, 4, 0, 42) },
  { pnode(GPIO, 4, 0, SCLR, 1, -1), rnode(GOUT, 4, 0, 46) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 4, 0, 11) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 4, 0, 9) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 4, 0, 15) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 4, 0, 13) },
  { pnode(GPIO, 4, 0, DATAIN, 2, 0), rnode(GOUT, 4, 0, 14) },
  { pnode(GPIO, 4, 0, DATAIN, 2, 1), rnode(GOUT, 4, 0, 22) },
  { pnode(GPIO, 4, 0, DATAIN, 2, 2), rnode(GOUT, 4, 0, 15) },
  { pnode(GPIO, 4, 0, DATAIN, 2, 3), rnode(GOUT, 4, 0, 23) },
  { pnode(GPIO, 4, 0, DATAOUT, 2, 0), rnode(GIN, 4, 0, 8) },
  { pnode(GPIO, 4, 0, DATAOUT, 2, 1), rnode(GIN, 4, 0, 9) },
  { pnode(GPIO, 4, 0, DATAOUT, 2, 2), rnode(GIN, 4, 0, 10) },
  { pnode(GPIO, 4, 0, DATAOUT, 2, 3), rnode(GIN, 4, 0, 11) },
  { pnode(GPIO, 4, 0, DATAOUT, 2, 4), rnode(GIN, 4, 0, 12) },
  { pnode(GPIO, 4, 0, OEIN, 2, 0), rnode(GOUT, 4, 0, 16) },
  { pnode(GPIO, 4, 0, OEIN, 2, 1), rnode(GOUT, 4, 0, 24) },
  { pnode(GPIO, 4, 0, BSLIPMAX, 2, -1), rnode(GIN, 4, 0, 7) },
  { pnode(GPIO, 4, 0, CEIN, 2, -1), rnode(GOUT, 4, 0, 20) },
  { pnode(GPIO, 4, 0, CEOUT, 2, -1), rnode(GOUT, 4, 0, 13) },
  { pnode(GPIO, 4, 0, ACLR, 2, -1), rnode(GOUT, 4, 0, 21) },
  { pnode(GPIO, 4, 0, SCLR, 2, -1), rnode(GOUT, 4, 0, 25) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 4, 0, 5) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 4, 0, 7) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 4, 0, 1) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 4, 0, 3) },
  { pnode(GPIO, 4, 0, DATAIN, 3, 0), rnode(GOUT, 4, 0, 3) },
  { pnode(GPIO, 4, 0, DATAIN, 3, 1), rnode(GOUT, 4, 0, 17) },
  { pnode(GPIO, 4, 0, DATAIN, 3, 2), rnode(GOUT, 4, 0, 8) },
  { pnode(GPIO, 4, 0, DATAIN, 3, 3), rnode(GOUT, 4, 0, 18) },
  { pnode(GPIO, 4, 0, DATAOUT, 3, 0), rnode(GIN, 4, 0, 2) },
  { pnode(GPIO, 4, 0, DATAOUT, 3, 1), rnode(GIN, 4, 0, 3) },
  { pnode(GPIO, 4, 0, DATAOUT, 3, 2), rnode(GIN, 4, 0, 4) },
  { pnode(GPIO, 4, 0, DATAOUT, 3, 3), rnode(GIN, 4, 0, 5) },
  { pnode(GPIO, 4, 0, DATAOUT, 3, 4), rnode(GIN, 4, 0, 6) },
  { pnode(GPIO, 4, 0, OEIN, 3, 0), rnode(GOUT, 4, 0, 2) },
  { pnode(GPIO, 4, 0, OEIN, 3, 1), rnode(GOUT, 4, 0, 19) },
  { pnode(GPIO, 4, 0, BSLIPMAX, 3, -1), rnode(GIN, 4, 0, 1) },
  { pnode(GPIO, 4, 0, CEIN, 3, -1), rnode(GOUT, 4, 0, 5) },
  { pnode(GPIO, 4, 0, CEOUT, 3, -1), rnode(GOUT, 4, 0, 4) },
  { pnode(GPIO, 4, 0, ACLR, 3, -1), rnode(GOUT, 4, 0, 12) },
  { pnode(GPIO, 4, 0, SCLR, 3, -1), rnode(GOUT, 4, 0, 1) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 4, 0, 4) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 4, 0, 6) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 4, 0, 0) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 4, 0, 2) },
  { pnode(GPIO, 4, 61, DATAIN, 0, 0), rnode(GOUT, 4, 61, 44) },
  { pnode(GPIO, 4, 61, DATAIN, 0, 1), rnode(GOUT, 4, 61, 34) },
  { pnode(GPIO, 4, 61, DATAIN, 0, 2), rnode(GOUT, 4, 61, 43) },
  { pnode(GPIO, 4, 61, DATAIN, 0, 3), rnode(GOUT, 4, 61, 29) },
  { pnode(GPIO, 4, 61, DATAOUT, 0, 0), rnode(GIN, 4, 61, 18) },
  { pnode(GPIO, 4, 61, DATAOUT, 0, 1), rnode(GIN, 4, 61, 17) },
  { pnode(GPIO, 4, 61, DATAOUT, 0, 2), rnode(GIN, 4, 61, 16) },
  { pnode(GPIO, 4, 61, DATAOUT, 0, 3), rnode(GIN, 4, 61, 15) },
  { pnode(GPIO, 4, 61, DATAOUT, 0, 4), rnode(GIN, 4, 61, 14) },
  { pnode(GPIO, 4, 61, OEIN, 0, 0), rnode(GOUT, 4, 61, 38) },
  { pnode(GPIO, 4, 61, OEIN, 0, 1), rnode(GOUT, 4, 61, 30) },
  { pnode(GPIO, 4, 61, BSLIPMAX, 0, -1), rnode(GIN, 4, 61, 19) },
  { pnode(GPIO, 4, 61, CEIN, 0, -1), rnode(GOUT, 4, 61, 27) },
  { pnode(GPIO, 4, 61, CEOUT, 0, -1), rnode(GOUT, 4, 61, 45) },
  { pnode(GPIO, 4, 61, ACLR, 0, -1), rnode(GOUT, 4, 61, 28) },
  { pnode(GPIO, 4, 61, SCLR, 0, -1), rnode(GOUT, 4, 61, 31) },
  { pnode(GPIO, 4, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 4, 61, 10) },
  { pnode(GPIO, 4, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 4, 61, 8) },
  { pnode(GPIO, 4, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 4, 61, 14) },
  { pnode(GPIO, 4, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 4, 61, 12) },
  { pnode(GPIO, 4, 61, DATAIN, 1, 0), rnode(GOUT, 4, 61, 49) },
  { pnode(GPIO, 4, 61, DATAIN, 1, 1), rnode(GOUT, 4, 61, 41) },
  { pnode(GPIO, 4, 61, DATAIN, 1, 2), rnode(GOUT, 4, 61, 48) },
  { pnode(GPIO, 4, 61, DATAIN, 1, 3), rnode(GOUT, 4, 61, 40) },
  { pnode(GPIO, 4, 61, DATAOUT, 1, 0), rnode(GIN, 4, 61, 24) },
  { pnode(GPIO, 4, 61, DATAOUT, 1, 1), rnode(GIN, 4, 61, 23) },
  { pnode(GPIO, 4, 61, DATAOUT, 1, 2), rnode(GIN, 4, 61, 22) },
  { pnode(GPIO, 4, 61, DATAOUT, 1, 3), rnode(GIN, 4, 61, 21) },
  { pnode(GPIO, 4, 61, DATAOUT, 1, 4), rnode(GIN, 4, 61, 20) },
  { pnode(GPIO, 4, 61, OEIN, 1, 0), rnode(GOUT, 4, 61, 47) },
  { pnode(GPIO, 4, 61, OEIN, 1, 1), rnode(GOUT, 4, 61, 39) },
  { pnode(GPIO, 4, 61, BSLIPMAX, 1, -1), rnode(GIN, 4, 61, 25) },
  { pnode(GPIO, 4, 61, CEIN, 1, -1), rnode(GOUT, 4, 61, 51) },
  { pnode(GPIO, 4, 61, CEOUT, 1, -1), rnode(GOUT, 4, 61, 50) },
  { pnode(GPIO, 4, 61, ACLR, 1, -1), rnode(GOUT, 4, 61, 42) },
  { pnode(GPIO, 4, 61, SCLR, 1, -1), rnode(GOUT, 4, 61, 46) },
  { pnode(GPIO, 4, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 4, 61, 11) },
  { pnode(GPIO, 4, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 4, 61, 9) },
  { pnode(GPIO, 4, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 4, 61, 15) },
  { pnode(GPIO, 4, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 4, 61, 13) },
  { pnode(GPIO, 4, 61, DATAIN, 2, 0), rnode(GOUT, 4, 61, 14) },
  { pnode(GPIO, 4, 61, DATAIN, 2, 1), rnode(GOUT, 4, 61, 22) },
  { pnode(GPIO, 4, 61, DATAIN, 2, 2), rnode(GOUT, 4, 61, 15) },
  { pnode(GPIO, 4, 61, DATAIN, 2, 3), rnode(GOUT, 4, 61, 23) },
  { pnode(GPIO, 4, 61, DATAOUT, 2, 0), rnode(GIN, 4, 61, 8) },
  { pnode(GPIO, 4, 61, DATAOUT, 2, 1), rnode(GIN, 4, 61, 9) },
  { pnode(GPIO, 4, 61, DATAOUT, 2, 2), rnode(GIN, 4, 61, 10) },
  { pnode(GPIO, 4, 61, DATAOUT, 2, 3), rnode(GIN, 4, 61, 11) },
  { pnode(GPIO, 4, 61, DATAOUT, 2, 4), rnode(GIN, 4, 61, 12) },
  { pnode(GPIO, 4, 61, OEIN, 2, 0), rnode(GOUT, 4, 61, 16) },
  { pnode(GPIO, 4, 61, OEIN, 2, 1), rnode(GOUT, 4, 61, 24) },
  { pnode(GPIO, 4, 61, BSLIPMAX, 2, -1), rnode(GIN, 4, 61, 7) },
  { pnode(GPIO, 4, 61, CEIN, 2, -1), rnode(GOUT, 4, 61, 20) },
  { pnode(GPIO, 4, 61, CEOUT, 2, -1), rnode(GOUT, 4, 61, 13) },
  { pnode(GPIO, 4, 61, ACLR, 2, -1), rnode(GOUT, 4, 61, 21) },
  { pnode(GPIO, 4, 61, SCLR, 2, -1), rnode(GOUT, 4, 61, 25) },
  { pnode(GPIO, 4, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 4, 61, 5) },
  { pnode(GPIO, 4, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 4, 61, 7) },
  { pnode(GPIO, 4, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 4, 61, 1) },
  { pnode(GPIO, 4, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 4, 61, 3) },
  { pnode(GPIO, 4, 61, DATAIN, 3, 0), rnode(GOUT, 4, 61, 3) },
  { pnode(GPIO, 4, 61, DATAIN, 3, 1), rnode(GOUT, 4, 61, 17) },
  { pnode(GPIO, 4, 61, DATAIN, 3, 2), rnode(GOUT, 4, 61, 8) },
  { pnode(GPIO, 4, 61, DATAIN, 3, 3), rnode(GOUT, 4, 61, 18) },
  { pnode(GPIO, 4, 61, DATAOUT, 3, 0), rnode(GIN, 4, 61, 2) },
  { pnode(GPIO, 4, 61, DATAOUT, 3, 1), rnode(GIN, 4, 61, 3) },
  { pnode(GPIO, 4, 61, DATAOUT, 3, 2), rnode(GIN, 4, 61, 4) },
  { pnode(GPIO, 4, 61, DATAOUT, 3, 3), rnode(GIN, 4, 61, 5) },
  { pnode(GPIO, 4, 61, DATAOUT, 3, 4), rnode(GIN, 4, 61, 6) },
  { pnode(GPIO, 4, 61, OEIN, 3, 0), rnode(GOUT, 4, 61, 2) },
  { pnode(GPIO, 4, 61, OEIN, 3, 1), rnode(GOUT, 4, 61, 19) },
  { pnode(GPIO, 4, 61, BSLIPMAX, 3, -1), rnode(GIN, 4, 61, 1) },
  { pnode(GPIO, 4, 61, CEIN, 3, -1), rnode(GOUT, 4, 61, 5) },
  { pnode(GPIO, 4, 61, CEOUT, 3, -1), rnode(GOUT, 4, 61, 4) },
  { pnode(GPIO, 4, 61, ACLR, 3, -1), rnode(GOUT, 4, 61, 12) },
  { pnode(GPIO, 4, 61, SCLR, 3, -1), rnode(GOUT, 4, 61, 1) },
  { pnode(GPIO, 4, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 4, 61, 4) },
  { pnode(GPIO, 4, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 4, 61, 6) },
  { pnode(GPIO, 4, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 4, 61, 0) },
  { pnode(GPIO, 4, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 4, 61, 2) },
  { pnode(GPIO, 6, 0, DATAIN, 0, 0), rnode(GOUT, 6, 0, 44) },
  { pnode(GPIO, 6, 0, DATAIN, 0, 1), rnode(GOUT, 6, 0, 34) },
  { pnode(GPIO, 6, 0, DATAIN, 0, 2), rnode(GOUT, 6, 0, 43) },
  { pnode(GPIO, 6, 0, DATAIN, 0, 3), rnode(GOUT, 6, 0, 29) },
  { pnode(GPIO, 6, 0, DATAOUT, 0, 0), rnode(GIN, 6, 0, 18) },
  { pnode(GPIO, 6, 0, DATAOUT, 0, 1), rnode(GIN, 6, 0, 17) },
  { pnode(GPIO, 6, 0, DATAOUT, 0, 2), rnode(GIN, 6, 0, 16) },
  { pnode(GPIO, 6, 0, DATAOUT, 0, 3), rnode(GIN, 6, 0, 15) },
  { pnode(GPIO, 6, 0, DATAOUT, 0, 4), rnode(GIN, 6, 0, 14) },
  { pnode(GPIO, 6, 0, OEIN, 0, 0), rnode(GOUT, 6, 0, 38) },
  { pnode(GPIO, 6, 0, OEIN, 0, 1), rnode(GOUT, 6, 0, 30) },
  { pnode(GPIO, 6, 0, BSLIPMAX, 0, -1), rnode(GIN, 6, 0, 19) },
  { pnode(GPIO, 6, 0, CEIN, 0, -1), rnode(GOUT, 6, 0, 27) },
  { pnode(GPIO, 6, 0, CEOUT, 0, -1), rnode(GOUT, 6, 0, 45) },
  { pnode(GPIO, 6, 0, ACLR, 0, -1), rnode(GOUT, 6, 0, 28) },
  { pnode(GPIO, 6, 0, SCLR, 0, -1), rnode(GOUT, 6, 0, 31) },
  { pnode(GPIO, 6, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 6, 0, 10) },
  { pnode(GPIO, 6, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 6, 0, 8) },
  { pnode(GPIO, 6, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 6, 0, 14) },
  { pnode(GPIO, 6, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 6, 0, 12) },
  { pnode(GPIO, 6, 0, DATAIN, 1, 0), rnode(GOUT, 6, 0, 49) },
  { pnode(GPIO, 6, 0, DATAIN, 1, 1), rnode(GOUT, 6, 0, 41) },
  { pnode(GPIO, 6, 0, DATAIN, 1, 2), rnode(GOUT, 6, 0, 48) },
  { pnode(GPIO, 6, 0, DATAIN, 1, 3), rnode(GOUT, 6, 0, 40) },
  { pnode(GPIO, 6, 0, DATAOUT, 1, 0), rnode(GIN, 6, 0, 24) },
  { pnode(GPIO, 6, 0, DATAOUT, 1, 1), rnode(GIN, 6, 0, 23) },
  { pnode(GPIO, 6, 0, DATAOUT, 1, 2), rnode(GIN, 6, 0, 22) },
  { pnode(GPIO, 6, 0, DATAOUT, 1, 3), rnode(GIN, 6, 0, 21) },
  { pnode(GPIO, 6, 0, DATAOUT, 1, 4), rnode(GIN, 6, 0, 20) },
  { pnode(GPIO, 6, 0, OEIN, 1, 0), rnode(GOUT, 6, 0, 47) },
  { pnode(GPIO, 6, 0, OEIN, 1, 1), rnode(GOUT, 6, 0, 39) },
  { pnode(GPIO, 6, 0, BSLIPMAX, 1, -1), rnode(GIN, 6, 0, 25) },
  { pnode(GPIO, 6, 0, CEIN, 1, -1), rnode(GOUT, 6, 0, 51) },
  { pnode(GPIO, 6, 0, CEOUT, 1, -1), rnode(GOUT, 6, 0, 50) },
  { pnode(GPIO, 6, 0, ACLR, 1, -1), rnode(GOUT, 6, 0, 42) },
  { pnode(GPIO, 6, 0, SCLR, 1, -1), rnode(GOUT, 6, 0, 46) },
  { pnode(GPIO, 6, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 6, 0, 11) },
  { pnode(GPIO, 6, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 6, 0, 9) },
  { pnode(GPIO, 6, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 6, 0, 15) },
  { pnode(GPIO, 6, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 6, 0, 13) },
  { pnode(GPIO, 6, 0, DATAIN, 2, 0), rnode(GOUT, 6, 0, 14) },
  { pnode(GPIO, 6, 0, DATAIN, 2, 1), rnode(GOUT, 6, 0, 22) },
  { pnode(GPIO, 6, 0, DATAIN, 2, 2), rnode(GOUT, 6, 0, 15) },
  { pnode(GPIO, 6, 0, DATAIN, 2, 3), rnode(GOUT, 6, 0, 23) },
  { pnode(GPIO, 6, 0, DATAOUT, 2, 0), rnode(GIN, 6, 0, 8) },
  { pnode(GPIO, 6, 0, DATAOUT, 2, 1), rnode(GIN, 6, 0, 9) },
  { pnode(GPIO, 6, 0, DATAOUT, 2, 2), rnode(GIN, 6, 0, 10) },
  { pnode(GPIO, 6, 0, DATAOUT, 2, 3), rnode(GIN, 6, 0, 11) },
  { pnode(GPIO, 6, 0, DATAOUT, 2, 4), rnode(GIN, 6, 0, 12) },
  { pnode(GPIO, 6, 0, OEIN, 2, 0), rnode(GOUT, 6, 0, 16) },
  { pnode(GPIO, 6, 0, OEIN, 2, 1), rnode(GOUT, 6, 0, 24) },
  { pnode(GPIO, 6, 0, BSLIPMAX, 2, -1), rnode(GIN, 6, 0, 7) },
  { pnode(GPIO, 6, 0, CEIN, 2, -1), rnode(GOUT, 6, 0, 20) },
  { pnode(GPIO, 6, 0, CEOUT, 2, -1), rnode(GOUT, 6, 0, 13) },
  { pnode(GPIO, 6, 0, ACLR, 2, -1), rnode(GOUT, 6, 0, 21) },
  { pnode(GPIO, 6, 0, SCLR, 2, -1), rnode(GOUT, 6, 0, 25) },
  { pnode(GPIO, 6, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 6, 0, 5) },
  { pnode(GPIO, 6, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 6, 0, 7) },
  { pnode(GPIO, 6, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 6, 0, 1) },
  { pnode(GPIO, 6, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 6, 0, 3) },
  { pnode(GPIO, 6, 0, DATAIN, 3, 0), rnode(GOUT, 6, 0, 3) },
  { pnode(GPIO, 6, 0, DATAIN, 3, 1), rnode(GOUT, 6, 0, 17) },
  { pnode(GPIO, 6, 0, DATAIN, 3, 2), rnode(GOUT, 6, 0, 8) },
  { pnode(GPIO, 6, 0, DATAIN, 3, 3), rnode(GOUT, 6, 0, 18) },
  { pnode(GPIO, 6, 0, DATAOUT, 3, 0), rnode(GIN, 6, 0, 2) },
  { pnode(GPIO, 6, 0, DATAOUT, 3, 1), rnode(GIN, 6, 0, 3) },
  { pnode(GPIO, 6, 0, DATAOUT, 3, 2), rnode(GIN, 6, 0, 4) },
  { pnode(GPIO, 6, 0, DATAOUT, 3, 3), rnode(GIN, 6, 0, 5) },
  { pnode(GPIO, 6, 0, DATAOUT, 3, 4), rnode(GIN, 6, 0, 6) },
  { pnode(GPIO, 6, 0, OEIN, 3, 0), rnode(GOUT, 6, 0, 2) },
  { pnode(GPIO, 6, 0, OEIN, 3, 1), rnode(GOUT, 6, 0, 19) },
  { pnode(GPIO, 6, 0, BSLIPMAX, 3, -1), rnode(GIN, 6, 0, 1) },
  { pnode(GPIO, 6, 0, CEIN, 3, -1), rnode(GOUT, 6, 0, 5) },
  { pnode(GPIO, 6, 0, CEOUT, 3, -1), rnode(GOUT, 6, 0, 4) },
  { pnode(GPIO, 6, 0, ACLR, 3, -1), rnode(GOUT, 6, 0, 12) },
  { pnode(GPIO, 6, 0, SCLR, 3, -1), rnode(GOUT, 6, 0, 1) },
  { pnode(GPIO, 6, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 6, 0, 4) },
  { pnode(GPIO, 6, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 6, 0, 6) },
  { pnode(GPIO, 6, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 6, 0, 0) },
  { pnode(GPIO, 6, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 6, 0, 2) },
  { pnode(GPIO, 6, 61, DATAIN, 0, 0), rnode(GOUT, 6, 61, 44) },
  { pnode(GPIO, 6, 61, DATAIN, 0, 1), rnode(GOUT, 6, 61, 34) },
  { pnode(GPIO, 6, 61, DATAIN, 0, 2), rnode(GOUT, 6, 61, 43) },
  { pnode(GPIO, 6, 61, DATAIN, 0, 3), rnode(GOUT, 6, 61, 29) },
  { pnode(GPIO, 6, 61, DATAOUT, 0, 0), rnode(GIN, 6, 61, 18) },
  { pnode(GPIO, 6, 61, DATAOUT, 0, 1), rnode(GIN, 6, 61, 17) },
  { pnode(GPIO, 6, 61, DATAOUT, 0, 2), rnode(GIN, 6, 61, 16) },
  { pnode(GPIO, 6, 61, DATAOUT, 0, 3), rnode(GIN, 6, 61, 15) },
  { pnode(GPIO, 6, 61, DATAOUT, 0, 4), rnode(GIN, 6, 61, 14) },
  { pnode(GPIO, 6, 61, OEIN, 0, 0), rnode(GOUT, 6, 61, 38) },
  { pnode(GPIO, 6, 61, OEIN, 0, 1), rnode(GOUT, 6, 61, 30) },
  { pnode(GPIO, 6, 61, BSLIPMAX, 0, -1), rnode(GIN, 6, 61, 19) },
  { pnode(GPIO, 6, 61, CEIN, 0, -1), rnode(GOUT, 6, 61, 27) },
  { pnode(GPIO, 6, 61, CEOUT, 0, -1), rnode(GOUT, 6, 61, 45) },
  { pnode(GPIO, 6, 61, ACLR, 0, -1), rnode(GOUT, 6, 61, 28) },
  { pnode(GPIO, 6, 61, SCLR, 0, -1), rnode(GOUT, 6, 61, 31) },
  { pnode(GPIO, 6, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 6, 61, 10) },
  { pnode(GPIO, 6, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 6, 61, 8) },
  { pnode(GPIO, 6, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 6, 61, 14) },
  { pnode(GPIO, 6, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 6, 61, 12) },
  { pnode(GPIO, 6, 61, DATAIN, 1, 0), rnode(GOUT, 6, 61, 49) },
  { pnode(GPIO, 6, 61, DATAIN, 1, 1), rnode(GOUT, 6, 61, 41) },
  { pnode(GPIO, 6, 61, DATAIN, 1, 2), rnode(GOUT, 6, 61, 48) },
  { pnode(GPIO, 6, 61, DATAIN, 1, 3), rnode(GOUT, 6, 61, 40) },
  { pnode(GPIO, 6, 61, DATAOUT, 1, 0), rnode(GIN, 6, 61, 24) },
  { pnode(GPIO, 6, 61, DATAOUT, 1, 1), rnode(GIN, 6, 61, 23) },
  { pnode(GPIO, 6, 61, DATAOUT, 1, 2), rnode(GIN, 6, 61, 22) },
  { pnode(GPIO, 6, 61, DATAOUT, 1, 3), rnode(GIN, 6, 61, 21) },
  { pnode(GPIO, 6, 61, DATAOUT, 1, 4), rnode(GIN, 6, 61, 20) },
  { pnode(GPIO, 6, 61, OEIN, 1, 0), rnode(GOUT, 6, 61, 47) },
  { pnode(GPIO, 6, 61, OEIN, 1, 1), rnode(GOUT, 6, 61, 39) },
  { pnode(GPIO, 6, 61, BSLIPMAX, 1, -1), rnode(GIN, 6, 61, 25) },
  { pnode(GPIO, 6, 61, CEIN, 1, -1), rnode(GOUT, 6, 61, 51) },
  { pnode(GPIO, 6, 61, CEOUT, 1, -1), rnode(GOUT, 6, 61, 50) },
  { pnode(GPIO, 6, 61, ACLR, 1, -1), rnode(GOUT, 6, 61, 42) },
  { pnode(GPIO, 6, 61, SCLR, 1, -1), rnode(GOUT, 6, 61, 46) },
  { pnode(GPIO, 6, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 6, 61, 11) },
  { pnode(GPIO, 6, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 6, 61, 9) },
  { pnode(GPIO, 6, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 6, 61, 15) },
  { pnode(GPIO, 6, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 6, 61, 13) },
  { pnode(GPIO, 6, 61, DATAIN, 2, 0), rnode(GOUT, 6, 61, 14) },
  { pnode(GPIO, 6, 61, DATAIN, 2, 1), rnode(GOUT, 6, 61, 22) },
  { pnode(GPIO, 6, 61, DATAIN, 2, 2), rnode(GOUT, 6, 61, 15) },
  { pnode(GPIO, 6, 61, DATAIN, 2, 3), rnode(GOUT, 6, 61, 23) },
  { pnode(GPIO, 6, 61, DATAOUT, 2, 0), rnode(GIN, 6, 61, 8) },
  { pnode(GPIO, 6, 61, DATAOUT, 2, 1), rnode(GIN, 6, 61, 9) },
  { pnode(GPIO, 6, 61, DATAOUT, 2, 2), rnode(GIN, 6, 61, 10) },
  { pnode(GPIO, 6, 61, DATAOUT, 2, 3), rnode(GIN, 6, 61, 11) },
  { pnode(GPIO, 6, 61, DATAOUT, 2, 4), rnode(GIN, 6, 61, 12) },
  { pnode(GPIO, 6, 61, OEIN, 2, 0), rnode(GOUT, 6, 61, 16) },
  { pnode(GPIO, 6, 61, OEIN, 2, 1), rnode(GOUT, 6, 61, 24) },
  { pnode(GPIO, 6, 61, BSLIPMAX, 2, -1), rnode(GIN, 6, 61, 7) },
  { pnode(GPIO, 6, 61, CEIN, 2, -1), rnode(GOUT, 6, 61, 20) },
  { pnode(GPIO, 6, 61, CEOUT, 2, -1), rnode(GOUT, 6, 61, 13) },
  { pnode(GPIO, 6, 61, ACLR, 2, -1), rnode(GOUT, 6, 61, 21) },
  { pnode(GPIO, 6, 61, SCLR, 2, -1), rnode(GOUT, 6, 61, 25) },
  { pnode(GPIO, 6, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 6, 61, 5) },
  { pnode(GPIO, 6, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 6, 61, 7) },
  { pnode(GPIO, 6, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 6, 61, 1) },
  { pnode(GPIO, 6, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 6, 61, 3) },
  { pnode(GPIO, 6, 61, DATAIN, 3, 0), rnode(GOUT, 6, 61, 3) },
  { pnode(GPIO, 6, 61, DATAIN, 3, 1), rnode(GOUT, 6, 61, 17) },
  { pnode(GPIO, 6, 61, DATAIN, 3, 2), rnode(GOUT, 6, 61, 8) },
  { pnode(GPIO, 6, 61, DATAIN, 3, 3), rnode(GOUT, 6, 61, 18) },
  { pnode(GPIO, 6, 61, DATAOUT, 3, 0), rnode(GIN, 6, 61, 2) },
  { pnode(GPIO, 6, 61, DATAOUT, 3, 1), rnode(GIN, 6, 61, 3) },
  { pnode(GPIO, 6, 61, DATAOUT, 3, 2), rnode(GIN, 6, 61, 4) },
  { pnode(GPIO, 6, 61, DATAOUT, 3, 3), rnode(GIN, 6, 61, 5) },
  { pnode(GPIO, 6, 61, DATAOUT, 3, 4), rnode(GIN, 6, 61, 6) },
  { pnode(GPIO, 6, 61, OEIN, 3, 0), rnode(GOUT, 6, 61, 2) },
  { pnode(GPIO, 6, 61, OEIN, 3, 1), rnode(GOUT, 6, 61, 19) },
  { pnode(GPIO, 6, 61, BSLIPMAX, 3, -1), rnode(GIN, 6, 61, 1) },
  { pnode(GPIO, 6, 61, CEIN, 3, -1), rnode(GOUT, 6, 61, 5) },
  { pnode(GPIO, 6, 61, CEOUT, 3, -1), rnode(GOUT, 6, 61, 4) },
  { pnode(GPIO, 6, 61, ACLR, 3, -1), rnode(GOUT, 6, 61, 12) },
  { pnode(GPIO, 6, 61, SCLR, 3, -1), rnode(GOUT, 6, 61, 1) },
  { pnode(GPIO, 6, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 6, 61, 4) },
  { pnode(GPIO, 6, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 6, 61, 6) },
  { pnode(GPIO, 6, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 6, 61, 0) },
  { pnode(GPIO, 6, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 6, 61, 2) },
  { pnode(GPIO, 7, 0, DATAIN, 0, 0), rnode(GOUT, 7, 0, 44) },
  { pnode(GPIO, 7, 0, DATAIN, 0, 1), rnode(GOUT, 7, 0, 34) },
  { pnode(GPIO, 7, 0, DATAIN, 0, 2), rnode(GOUT, 7, 0, 43) },
  { pnode(GPIO, 7, 0, DATAIN, 0, 3), rnode(GOUT, 7, 0, 29) },
  { pnode(GPIO, 7, 0, DATAOUT, 0, 0), rnode(GIN, 7, 0, 18) },
  { pnode(GPIO, 7, 0, DATAOUT, 0, 1), rnode(GIN, 7, 0, 17) },
  { pnode(GPIO, 7, 0, DATAOUT, 0, 2), rnode(GIN, 7, 0, 16) },
  { pnode(GPIO, 7, 0, DATAOUT, 0, 3), rnode(GIN, 7, 0, 15) },
  { pnode(GPIO, 7, 0, DATAOUT, 0, 4), rnode(GIN, 7, 0, 14) },
  { pnode(GPIO, 7, 0, OEIN, 0, 0), rnode(GOUT, 7, 0, 38) },
  { pnode(GPIO, 7, 0, OEIN, 0, 1), rnode(GOUT, 7, 0, 30) },
  { pnode(GPIO, 7, 0, BSLIPMAX, 0, -1), rnode(GIN, 7, 0, 19) },
  { pnode(GPIO, 7, 0, CEIN, 0, -1), rnode(GOUT, 7, 0, 27) },
  { pnode(GPIO, 7, 0, CEOUT, 0, -1), rnode(GOUT, 7, 0, 45) },
  { pnode(GPIO, 7, 0, ACLR, 0, -1), rnode(GOUT, 7, 0, 28) },
  { pnode(GPIO, 7, 0, SCLR, 0, -1), rnode(GOUT, 7, 0, 31) },
  { pnode(GPIO, 7, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 7, 0, 10) },
  { pnode(GPIO, 7, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 7, 0, 8) },
  { pnode(GPIO, 7, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 7, 0, 14) },
  { pnode(GPIO, 7, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 7, 0, 12) },
  { pnode(GPIO, 7, 0, DATAIN, 1, 0), rnode(GOUT, 7, 0, 49) },
  { pnode(GPIO, 7, 0, DATAIN, 1, 1), rnode(GOUT, 7, 0, 41) },
  { pnode(GPIO, 7, 0, DATAIN, 1, 2), rnode(GOUT, 7, 0, 48) },
  { pnode(GPIO, 7, 0, DATAIN, 1, 3), rnode(GOUT, 7, 0, 40) },
  { pnode(GPIO, 7, 0, DATAOUT, 1, 0), rnode(GIN, 7, 0, 24) },
  { pnode(GPIO, 7, 0, DATAOUT, 1, 1), rnode(GIN, 7, 0, 23) },
  { pnode(GPIO, 7, 0, DATAOUT, 1, 2), rnode(GIN, 7, 0, 22) },
  { pnode(GPIO, 7, 0, DATAOUT, 1, 3), rnode(GIN, 7, 0, 21) },
  { pnode(GPIO, 7, 0, DATAOUT, 1, 4), rnode(GIN, 7, 0, 20) },
  { pnode(GPIO, 7, 0, OEIN, 1, 0), rnode(GOUT, 7, 0, 47) },
  { pnode(GPIO, 7, 0, OEIN, 1, 1), rnode(GOUT, 7, 0, 39) },
  { pnode(GPIO, 7, 0, BSLIPMAX, 1, -1), rnode(GIN, 7, 0, 25) },
  { pnode(GPIO, 7, 0, CEIN, 1, -1), rnode(GOUT, 7, 0, 51) },
  { pnode(GPIO, 7, 0, CEOUT, 1, -1), rnode(GOUT, 7, 0, 50) },
  { pnode(GPIO, 7, 0, ACLR, 1, -1), rnode(GOUT, 7, 0, 42) },
  { pnode(GPIO, 7, 0, SCLR, 1, -1), rnode(GOUT, 7, 0, 46) },
  { pnode(GPIO, 7, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 7, 0, 11) },
  { pnode(GPIO, 7, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 7, 0, 9) },
  { pnode(GPIO, 7, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 7, 0, 15) },
  { pnode(GPIO, 7, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 7, 0, 13) },
  { pnode(GPIO, 7, 0, DATAIN, 2, 0), rnode(GOUT, 7, 0, 14) },
  { pnode(GPIO, 7, 0, DATAIN, 2, 1), rnode(GOUT, 7, 0, 22) },
  { pnode(GPIO, 7, 0, DATAIN, 2, 2), rnode(GOUT, 7, 0, 15) },
  { pnode(GPIO, 7, 0, DATAIN, 2, 3), rnode(GOUT, 7, 0, 23) },
  { pnode(GPIO, 7, 0, DATAOUT, 2, 0), rnode(GIN, 7, 0, 8) },
  { pnode(GPIO, 7, 0, DATAOUT, 2, 1), rnode(GIN, 7, 0, 9) },
  { pnode(GPIO, 7, 0, DATAOUT, 2, 2), rnode(GIN, 7, 0, 10) },
  { pnode(GPIO, 7, 0, DATAOUT, 2, 3), rnode(GIN, 7, 0, 11) },
  { pnode(GPIO, 7, 0, DATAOUT, 2, 4), rnode(GIN, 7, 0, 12) },
  { pnode(GPIO, 7, 0, OEIN, 2, 0), rnode(GOUT, 7, 0, 16) },
  { pnode(GPIO, 7, 0, OEIN, 2, 1), rnode(GOUT, 7, 0, 24) },
  { pnode(GPIO, 7, 0, BSLIPMAX, 2, -1), rnode(GIN, 7, 0, 7) },
  { pnode(GPIO, 7, 0, CEIN, 2, -1), rnode(GOUT, 7, 0, 20) },
  { pnode(GPIO, 7, 0, CEOUT, 2, -1), rnode(GOUT, 7, 0, 13) },
  { pnode(GPIO, 7, 0, ACLR, 2, -1), rnode(GOUT, 7, 0, 21) },
  { pnode(GPIO, 7, 0, SCLR, 2, -1), rnode(GOUT, 7, 0, 25) },
  { pnode(GPIO, 7, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 7, 0, 5) },
  { pnode(GPIO, 7, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 7, 0, 7) },
  { pnode(GPIO, 7, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 7, 0, 1) },
  { pnode(GPIO, 7, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 7, 0, 3) },
  { pnode(GPIO, 7, 0, DATAIN, 3, 0), rnode(GOUT, 7, 0, 3) },
  { pnode(GPIO, 7, 0, DATAIN, 3, 1), rnode(GOUT, 7, 0, 17) },
  { pnode(GPIO, 7, 0, DATAIN, 3, 2), rnode(GOUT, 7, 0, 8) },
  { pnode(GPIO, 7, 0, DATAIN, 3, 3), rnode(GOUT, 7, 0, 18) },
  { pnode(GPIO, 7, 0, DATAOUT, 3, 0), rnode(GIN, 7, 0, 2) },
  { pnode(GPIO, 7, 0, DATAOUT, 3, 1), rnode(GIN, 7, 0, 3) },
  { pnode(GPIO, 7, 0, DATAOUT, 3, 2), rnode(GIN, 7, 0, 4) },
  { pnode(GPIO, 7, 0, DATAOUT, 3, 3), rnode(GIN, 7, 0, 5) },
  { pnode(GPIO, 7, 0, DATAOUT, 3, 4), rnode(GIN, 7, 0, 6) },
  { pnode(GPIO, 7, 0, OEIN, 3, 0), rnode(GOUT, 7, 0, 2) },
  { pnode(GPIO, 7, 0, OEIN, 3, 1), rnode(GOUT, 7, 0, 19) },
  { pnode(GPIO, 7, 0, BSLIPMAX, 3, -1), rnode(GIN, 7, 0, 1) },
  { pnode(GPIO, 7, 0, CEIN, 3, -1), rnode(GOUT, 7, 0, 5) },
  { pnode(GPIO, 7, 0, CEOUT, 3, -1), rnode(GOUT, 7, 0, 4) },
  { pnode(GPIO, 7, 0, ACLR, 3, -1), rnode(GOUT, 7, 0, 12) },
  { pnode(GPIO, 7, 0, SCLR, 3, -1), rnode(GOUT, 7, 0, 1) },
  { pnode(GPIO, 7, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 7, 0, 4) },
  { pnode(GPIO, 7, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 7, 0, 6) },
  { pnode(GPIO, 7, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 7, 0, 0) },
  { pnode(GPIO, 7, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 7, 0, 2) },
  { pnode(GPIO, 7, 61, DATAIN, 0, 0), rnode(GOUT, 7, 61, 44) },
  { pnode(GPIO, 7, 61, DATAIN, 0, 1), rnode(GOUT, 7, 61, 34) },
  { pnode(GPIO, 7, 61, DATAIN, 0, 2), rnode(GOUT, 7, 61, 43) },
  { pnode(GPIO, 7, 61, DATAIN, 0, 3), rnode(GOUT, 7, 61, 29) },
  { pnode(GPIO, 7, 61, DATAOUT, 0, 0), rnode(GIN, 7, 61, 18) },
  { pnode(GPIO, 7, 61, DATAOUT, 0, 1), rnode(GIN, 7, 61, 17) },
  { pnode(GPIO, 7, 61, DATAOUT, 0, 2), rnode(GIN, 7, 61, 16) },
  { pnode(GPIO, 7, 61, DATAOUT, 0, 3), rnode(GIN, 7, 61, 15) },
  { pnode(GPIO, 7, 61, DATAOUT, 0, 4), rnode(GIN, 7, 61, 14) },
  { pnode(GPIO, 7, 61, OEIN, 0, 0), rnode(GOUT, 7, 61, 38) },
  { pnode(GPIO, 7, 61, OEIN, 0, 1), rnode(GOUT, 7, 61, 30) },
  { pnode(GPIO, 7, 61, BSLIPMAX, 0, -1), rnode(GIN, 7, 61, 19) },
  { pnode(GPIO, 7, 61, CEIN, 0, -1), rnode(GOUT, 7, 61, 27) },
  { pnode(GPIO, 7, 61, CEOUT, 0, -1), rnode(GOUT, 7, 61, 45) },
  { pnode(GPIO, 7, 61, ACLR, 0, -1), rnode(GOUT, 7, 61, 28) },
  { pnode(GPIO, 7, 61, SCLR, 0, -1), rnode(GOUT, 7, 61, 31) },
  { pnode(GPIO, 7, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 7, 61, 10) },
  { pnode(GPIO, 7, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 7, 61, 8) },
  { pnode(GPIO, 7, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 7, 61, 14) },
  { pnode(GPIO, 7, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 7, 61, 12) },
  { pnode(GPIO, 7, 61, DATAIN, 1, 0), rnode(GOUT, 7, 61, 49) },
  { pnode(GPIO, 7, 61, DATAIN, 1, 1), rnode(GOUT, 7, 61, 41) },
  { pnode(GPIO, 7, 61, DATAIN, 1, 2), rnode(GOUT, 7, 61, 48) },
  { pnode(GPIO, 7, 61, DATAIN, 1, 3), rnode(GOUT, 7, 61, 40) },
  { pnode(GPIO, 7, 61, DATAOUT, 1, 0), rnode(GIN, 7, 61, 24) },
  { pnode(GPIO, 7, 61, DATAOUT, 1, 1), rnode(GIN, 7, 61, 23) },
  { pnode(GPIO, 7, 61, DATAOUT, 1, 2), rnode(GIN, 7, 61, 22) },
  { pnode(GPIO, 7, 61, DATAOUT, 1, 3), rnode(GIN, 7, 61, 21) },
  { pnode(GPIO, 7, 61, DATAOUT, 1, 4), rnode(GIN, 7, 61, 20) },
  { pnode(GPIO, 7, 61, OEIN, 1, 0), rnode(GOUT, 7, 61, 47) },
  { pnode(GPIO, 7, 61, OEIN, 1, 1), rnode(GOUT, 7, 61, 39) },
  { pnode(GPIO, 7, 61, BSLIPMAX, 1, -1), rnode(GIN, 7, 61, 25) },
  { pnode(GPIO, 7, 61, CEIN, 1, -1), rnode(GOUT, 7, 61, 51) },
  { pnode(GPIO, 7, 61, CEOUT, 1, -1), rnode(GOUT, 7, 61, 50) },
  { pnode(GPIO, 7, 61, ACLR, 1, -1), rnode(GOUT, 7, 61, 42) },
  { pnode(GPIO, 7, 61, SCLR, 1, -1), rnode(GOUT, 7, 61, 46) },
  { pnode(GPIO, 7, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 7, 61, 11) },
  { pnode(GPIO, 7, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 7, 61, 9) },
  { pnode(GPIO, 7, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 7, 61, 15) },
  { pnode(GPIO, 7, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 7, 61, 13) },
  { pnode(GPIO, 7, 61, DATAIN, 2, 0), rnode(GOUT, 7, 61, 14) },
  { pnode(GPIO, 7, 61, DATAIN, 2, 1), rnode(GOUT, 7, 61, 22) },
  { pnode(GPIO, 7, 61, DATAIN, 2, 2), rnode(GOUT, 7, 61, 15) },
  { pnode(GPIO, 7, 61, DATAIN, 2, 3), rnode(GOUT, 7, 61, 23) },
  { pnode(GPIO, 7, 61, DATAOUT, 2, 0), rnode(GIN, 7, 61, 8) },
  { pnode(GPIO, 7, 61, DATAOUT, 2, 1), rnode(GIN, 7, 61, 9) },
  { pnode(GPIO, 7, 61, DATAOUT, 2, 2), rnode(GIN, 7, 61, 10) },
  { pnode(GPIO, 7, 61, DATAOUT, 2, 3), rnode(GIN, 7, 61, 11) },
  { pnode(GPIO, 7, 61, DATAOUT, 2, 4), rnode(GIN, 7, 61, 12) },
  { pnode(GPIO, 7, 61, OEIN, 2, 0), rnode(GOUT, 7, 61, 16) },
  { pnode(GPIO, 7, 61, OEIN, 2, 1), rnode(GOUT, 7, 61, 24) },
  { pnode(GPIO, 7, 61, BSLIPMAX, 2, -1), rnode(GIN, 7, 61, 7) },
  { pnode(GPIO, 7, 61, CEIN, 2, -1), rnode(GOUT, 7, 61, 20) },
  { pnode(GPIO, 7, 61, CEOUT, 2, -1), rnode(GOUT, 7, 61, 13) },
  { pnode(GPIO, 7, 61, ACLR, 2, -1), rnode(GOUT, 7, 61, 21) },
  { pnode(GPIO, 7, 61, SCLR, 2, -1), rnode(GOUT, 7, 61, 25) },
  { pnode(GPIO, 7, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 7, 61, 5) },
  { pnode(GPIO, 7, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 7, 61, 7) },
  { pnode(GPIO, 7, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 7, 61, 1) },
  { pnode(GPIO, 7, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 7, 61, 3) },
  { pnode(GPIO, 7, 61, DATAIN, 3, 0), rnode(GOUT, 7, 61, 3) },
  { pnode(GPIO, 7, 61, DATAIN, 3, 1), rnode(GOUT, 7, 61, 17) },
  { pnode(GPIO, 7, 61, DATAIN, 3, 2), rnode(GOUT, 7, 61, 8) },
  { pnode(GPIO, 7, 61, DATAIN, 3, 3), rnode(GOUT, 7, 61, 18) },
  { pnode(GPIO, 7, 61, DATAOUT, 3, 0), rnode(GIN, 7, 61, 2) },
  { pnode(GPIO, 7, 61, DATAOUT, 3, 1), rnode(GIN, 7, 61, 3) },
  { pnode(GPIO, 7, 61, DATAOUT, 3, 2), rnode(GIN, 7, 61, 4) },
  { pnode(GPIO, 7, 61, DATAOUT, 3, 3), rnode(GIN, 7, 61, 5) },
  { pnode(GPIO, 7, 61, DATAOUT, 3, 4), rnode(GIN, 7, 61, 6) },
  { pnode(GPIO, 7, 61, OEIN, 3, 0), rnode(GOUT, 7, 61, 2) },
  { pnode(GPIO, 7, 61, OEIN, 3, 1), rnode(GOUT, 7, 61, 19) },
  { pnode(GPIO, 7, 61, BSLIPMAX, 3, -1), rnode(GIN, 7, 61, 1) },
  { pnode(GPIO, 7, 61, CEIN, 3, -1), rnode(GOUT, 7, 61, 5) },
  { pnode(GPIO, 7, 61, CEOUT, 3, -1), rnode(GOUT, 7, 61, 4) },
  { pnode(GPIO, 7, 61, ACLR, 3, -1), rnode(GOUT, 7, 61, 12) },
  { pnode(GPIO, 7, 61, SCLR, 3, -1), rnode(GOUT, 7, 61, 1) },
  { pnode(GPIO, 7, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 7, 61, 4) },
  { pnode(GPIO, 7, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 7, 61, 6) },
  { pnode(GPIO, 7, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 7, 61, 0) },
  { pnode(GPIO, 7, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 7, 61, 2) },
  { pnode(GPIO, 10, 0, DATAOUT, 0, 0), rnode(GIN, 10, 0, 18) },
  { pnode(GPIO, 10, 0, DATAOUT, 0, 1), rnode(GIN, 10, 0, 17) },
  { pnode(GPIO, 10, 0, DATAOUT, 0, 2), rnode(GIN, 10, 0, 16) },
  { pnode(GPIO, 10, 0, DATAOUT, 0, 3), rnode(GIN, 10, 0, 15) },
  { pnode(GPIO, 10, 0, DATAOUT, 0, 4), rnode(GIN, 10, 0, 14) },
  { pnode(GPIO, 10, 0, OEIN, 0, 0), rnode(GOUT, 10, 0, 38) },
  { pnode(GPIO, 10, 0, OEIN, 0, 1), rnode(GOUT, 10, 0, 30) },
  { pnode(GPIO, 10, 0, BSLIPMAX, 0, -1), rnode(GIN, 10, 0, 19) },
  { pnode(GPIO, 10, 0, CEIN, 0, -1), rnode(GOUT, 10, 0, 27) },
  { pnode(GPIO, 10, 0, CEOUT, 0, -1), rnode(GOUT, 10, 0, 45) },
  { pnode(GPIO, 10, 0, SCLR, 0, -1), rnode(GOUT, 10, 0, 31) },
  { pnode(GPIO, 10, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 10, 0, 10) },
  { pnode(GPIO, 10, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 10, 0, 8) },
  { pnode(GPIO, 10, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 10, 0, 14) },
  { pnode(GPIO, 10, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 10, 0, 12) },
  { pnode(GPIO, 10, 0, DATAOUT, 1, 0), rnode(GIN, 10, 0, 24) },
  { pnode(GPIO, 10, 0, DATAOUT, 1, 1), rnode(GIN, 10, 0, 23) },
  { pnode(GPIO, 10, 0, DATAOUT, 1, 2), rnode(GIN, 10, 0, 22) },
  { pnode(GPIO, 10, 0, DATAOUT, 1, 3), rnode(GIN, 10, 0, 21) },
  { pnode(GPIO, 10, 0, DATAOUT, 1, 4), rnode(GIN, 10, 0, 20) },
  { pnode(GPIO, 10, 0, OEIN, 1, 0), rnode(GOUT, 10, 0, 47) },
  { pnode(GPIO, 10, 0, OEIN, 1, 1), rnode(GOUT, 10, 0, 39) },
  { pnode(GPIO, 10, 0, BSLIPMAX, 1, -1), rnode(GIN, 10, 0, 25) },
  { pnode(GPIO, 10, 0, CEIN, 1, -1), rnode(GOUT, 10, 0, 51) },
  { pnode(GPIO, 10, 0, CEOUT, 1, -1), rnode(GOUT, 10, 0, 50) },
  { pnode(GPIO, 10, 0, SCLR, 1, -1), rnode(GOUT, 10, 0, 46) },
  { pnode(GPIO, 10, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 10, 0, 11) },
  { pnode(GPIO, 10, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 10, 0, 9) },
  { pnode(GPIO, 10, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 10, 0, 15) },
  { pnode(GPIO, 10, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 10, 0, 13) },
  { pnode(GPIO, 10, 0, DATAOUT, 2, 0), rnode(GIN, 10, 0, 8) },
  { pnode(GPIO, 10, 0, DATAOUT, 2, 1), rnode(GIN, 10, 0, 9) },
  { pnode(GPIO, 10, 0, DATAOUT, 2, 2), rnode(GIN, 10, 0, 10) },
  { pnode(GPIO, 10, 0, DATAOUT, 2, 3), rnode(GIN, 10, 0, 11) },
  { pnode(GPIO, 10, 0, DATAOUT, 2, 4), rnode(GIN, 10, 0, 12) },
  { pnode(GPIO, 10, 0, OEIN, 2, 0), rnode(GOUT, 10, 0, 16) },
  { pnode(GPIO, 10, 0, OEIN, 2, 1), rnode(GOUT, 10, 0, 24) },
  { pnode(GPIO, 10, 0, BSLIPMAX, 2, -1), rnode(GIN, 10, 0, 7) },
  { pnode(GPIO, 10, 0, CEIN, 2, -1), rnode(GOUT, 10, 0, 20) },
  { pnode(GPIO, 10, 0, CEOUT, 2, -1), rnode(GOUT, 10, 0, 13) },
  { pnode(GPIO, 10, 0, SCLR, 2, -1), rnode(GOUT, 10, 0, 25) },
  { pnode(GPIO, 10, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 10, 0, 5) },
  { pnode(GPIO, 10, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 10, 0, 7) },
  { pnode(GPIO, 10, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 10, 0, 1) },
  { pnode(GPIO, 10, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 10, 0, 3) },
  { pnode(GPIO, 10, 0, DATAIN, 3, 0), rnode(GOUT, 10, 0, 3) },
  { pnode(GPIO, 10, 0, DATAIN, 3, 1), rnode(GOUT, 10, 0, 17) },
  { pnode(GPIO, 10, 0, DATAIN, 3, 2), rnode(GOUT, 10, 0, 8) },
  { pnode(GPIO, 10, 0, DATAIN, 3, 3), rnode(GOUT, 10, 0, 18) },
  { pnode(GPIO, 10, 0, DATAOUT, 3, 0), rnode(GIN, 10, 0, 2) },
  { pnode(GPIO, 10, 0, DATAOUT, 3, 1), rnode(GIN, 10, 0, 3) },
  { pnode(GPIO, 10, 0, DATAOUT, 3, 2), rnode(GIN, 10, 0, 4) },
  { pnode(GPIO, 10, 0, DATAOUT, 3, 3), rnode(GIN, 10, 0, 5) },
  { pnode(GPIO, 10, 0, DATAOUT, 3, 4), rnode(GIN, 10, 0, 6) },
  { pnode(GPIO, 10, 0, OEIN, 3, 0), rnode(GOUT, 10, 0, 2) },
  { pnode(GPIO, 10, 0, OEIN, 3, 1), rnode(GOUT, 10, 0, 19) },
  { pnode(GPIO, 10, 0, BSLIPMAX, 3, -1), rnode(GIN, 10, 0, 1) },
  { pnode(GPIO, 10, 0, CEIN, 3, -1), rnode(GOUT, 10, 0, 5) },
  { pnode(GPIO, 10, 0, CEOUT, 3, -1), rnode(GOUT, 10, 0, 4) },
  { pnode(GPIO, 10, 0, ACLR, 3, -1), rnode(GOUT, 10, 0, 12) },
  { pnode(GPIO, 10, 0, SCLR, 3, -1), rnode(GOUT, 10, 0, 1) },
  { pnode(GPIO, 10, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 10, 0, 4) },
  { pnode(GPIO, 10, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 10, 0, 6) },
  { pnode(GPIO, 10, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 10, 0, 0) },
  { pnode(GPIO, 10, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 10, 0, 2) },
  { pnode(GPIO, 10, 61, DATAOUT, 0, 0), rnode(GIN, 10, 61, 18) },
  { pnode(GPIO, 10, 61, DATAOUT, 0, 1), rnode(GIN, 10, 61, 17) },
  { pnode(GPIO, 10, 61, DATAOUT, 0, 2), rnode(GIN, 10, 61, 16) },
  { pnode(GPIO, 10, 61, DATAOUT, 0, 3), rnode(GIN, 10, 61, 15) },
  { pnode(GPIO, 10, 61, DATAOUT, 0, 4), rnode(GIN, 10, 61, 14) },
  { pnode(GPIO, 10, 61, OEIN, 0, 0), rnode(GOUT, 10, 61, 38) },
  { pnode(GPIO, 10, 61, OEIN, 0, 1), rnode(GOUT, 10, 61, 30) },
  { pnode(GPIO, 10, 61, BSLIPMAX, 0, -1), rnode(GIN, 10, 61, 19) },
  { pnode(GPIO, 10, 61, CEIN, 0, -1), rnode(GOUT, 10, 61, 27) },
  { pnode(GPIO, 10, 61, CEOUT, 0, -1), rnode(GOUT, 10, 61, 45) },
  { pnode(GPIO, 10, 61, SCLR, 0, -1), rnode(GOUT, 10, 61, 31) },
  { pnode(GPIO, 10, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 10, 61, 10) },
  { pnode(GPIO, 10, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 10, 61, 8) },
  { pnode(GPIO, 10, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 10, 61, 14) },
  { pnode(GPIO, 10, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 10, 61, 12) },
  { pnode(GPIO, 10, 61, DATAOUT, 1, 0), rnode(GIN, 10, 61, 24) },
  { pnode(GPIO, 10, 61, DATAOUT, 1, 1), rnode(GIN, 10, 61, 23) },
  { pnode(GPIO, 10, 61, DATAOUT, 1, 2), rnode(GIN, 10, 61, 22) },
  { pnode(GPIO, 10, 61, DATAOUT, 1, 3), rnode(GIN, 10, 61, 21) },
  { pnode(GPIO, 10, 61, DATAOUT, 1, 4), rnode(GIN, 10, 61, 20) },
  { pnode(GPIO, 10, 61, OEIN, 1, 0), rnode(GOUT, 10, 61, 47) },
  { pnode(GPIO, 10, 61, OEIN, 1, 1), rnode(GOUT, 10, 61, 39) },
  { pnode(GPIO, 10, 61, BSLIPMAX, 1, -1), rnode(GIN, 10, 61, 25) },
  { pnode(GPIO, 10, 61, CEIN, 1, -1), rnode(GOUT, 10, 61, 51) },
  { pnode(GPIO, 10, 61, CEOUT, 1, -1), rnode(GOUT, 10, 61, 50) },
  { pnode(GPIO, 10, 61, SCLR, 1, -1), rnode(GOUT, 10, 61, 46) },
  { pnode(GPIO, 10, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 10, 61, 11) },
  { pnode(GPIO, 10, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 10, 61, 9) },
  { pnode(GPIO, 10, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 10, 61, 15) },
  { pnode(GPIO, 10, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 10, 61, 13) },
  { pnode(GPIO, 10, 61, DATAOUT, 2, 0), rnode(GIN, 10, 61, 8) },
  { pnode(GPIO, 10, 61, DATAOUT, 2, 1), rnode(GIN, 10, 61, 9) },
  { pnode(GPIO, 10, 61, DATAOUT, 2, 2), rnode(GIN, 10, 61, 10) },
  { pnode(GPIO, 10, 61, DATAOUT, 2, 3), rnode(GIN, 10, 61, 11) },
  { pnode(GPIO, 10, 61, DATAOUT, 2, 4), rnode(GIN, 10, 61, 12) },
  { pnode(GPIO, 10, 61, OEIN, 2, 0), rnode(GOUT, 10, 61, 16) },
  { pnode(GPIO, 10, 61, OEIN, 2, 1), rnode(GOUT, 10, 61, 24) },
  { pnode(GPIO, 10, 61, BSLIPMAX, 2, -1), rnode(GIN, 10, 61, 7) },
  { pnode(GPIO, 10, 61, CEIN, 2, -1), rnode(GOUT, 10, 61, 20) },
  { pnode(GPIO, 10, 61, CEOUT, 2, -1), rnode(GOUT, 10, 61, 13) },
  { pnode(GPIO, 10, 61, SCLR, 2, -1), rnode(GOUT, 10, 61, 25) },
  { pnode(GPIO, 10, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 10, 61, 5) },
  { pnode(GPIO, 10, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 10, 61, 7) },
  { pnode(GPIO, 10, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 10, 61, 1) },
  { pnode(GPIO, 10, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 10, 61, 3) },
  { pnode(GPIO, 10, 61, DATAIN, 3, 0), rnode(GOUT, 10, 61, 3) },
  { pnode(GPIO, 10, 61, DATAIN, 3, 1), rnode(GOUT, 10, 61, 17) },
  { pnode(GPIO, 10, 61, DATAIN, 3, 2), rnode(GOUT, 10, 61, 8) },
  { pnode(GPIO, 10, 61, DATAIN, 3, 3), rnode(GOUT, 10, 61, 18) },
  { pnode(GPIO, 10, 61, DATAOUT, 3, 0), rnode(GIN, 10, 61, 2) },
  { pnode(GPIO, 10, 61, DATAOUT, 3, 1), rnode(GIN, 10, 61, 3) },
  { pnode(GPIO, 10, 61, DATAOUT, 3, 2), rnode(GIN, 10, 61, 4) },
  { pnode(GPIO, 10, 61, DATAOUT, 3, 3), rnode(GIN, 10, 61, 5) },
  { pnode(GPIO, 10, 61, DATAOUT, 3, 4), rnode(GIN, 10, 61, 6) },
  { pnode(GPIO, 10, 61, OEIN, 3, 0), rnode(GOUT, 10, 61, 2) },
  { pnode(GPIO, 10, 61, OEIN, 3, 1), rnode(GOUT, 10, 61, 19) },
  { pnode(GPIO, 10, 61, BSLIPMAX, 3, -1), rnode(GIN, 10, 61, 1) },
  { pnode(GPIO, 10, 61, CEIN, 3, -1), rnode(GOUT, 10, 61, 5) },
  { pnode(GPIO, 10, 61, CEOUT, 3, -1), rnode(GOUT, 10, 61, 4) },
  { pnode(GPIO, 10, 61, ACLR, 3, -1), rnode(GOUT, 10, 61, 12) },
  { pnode(GPIO, 10, 61, SCLR, 3, -1), rnode(GOUT, 10, 61, 1) },
  { pnode(GPIO, 10, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 10, 61, 4) },
  { pnode(GPIO, 10, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 10, 61, 6) },
  { pnode(GPIO, 10, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 10, 61, 0) },
  { pnode(GPIO, 10, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 10, 61, 2) },
  { pnode(GPIO, 12, 0, DATAOUT, 0, 0), rnode(GIN, 12, 0, 18) },
  { pnode(GPIO, 12, 0, DATAOUT, 0, 1), rnode(GIN, 12, 0, 17) },
  { pnode(GPIO, 12, 0, DATAOUT, 0, 2), rnode(GIN, 12, 0, 16) },
  { pnode(GPIO, 12, 0, DATAOUT, 0, 3), rnode(GIN, 12, 0, 15) },
  { pnode(GPIO, 12, 0, DATAOUT, 0, 4), rnode(GIN, 12, 0, 14) },
  { pnode(GPIO, 12, 0, OEIN, 0, 0), rnode(GOUT, 12, 0, 38) },
  { pnode(GPIO, 12, 0, OEIN, 0, 1), rnode(GOUT, 12, 0, 30) },
  { pnode(GPIO, 12, 0, BSLIPMAX, 0, -1), rnode(GIN, 12, 0, 19) },
  { pnode(GPIO, 12, 0, CEIN, 0, -1), rnode(GOUT, 12, 0, 27) },
  { pnode(GPIO, 12, 0, CEOUT, 0, -1), rnode(GOUT, 12, 0, 45) },
  { pnode(GPIO, 12, 0, SCLR, 0, -1), rnode(GOUT, 12, 0, 31) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 12, 0, 10) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 12, 0, 8) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 12, 0, 14) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 12, 0, 12) },
  { pnode(GPIO, 12, 0, DATAOUT, 1, 0), rnode(GIN, 12, 0, 24) },
  { pnode(GPIO, 12, 0, DATAOUT, 1, 1), rnode(GIN, 12, 0, 23) },
  { pnode(GPIO, 12, 0, DATAOUT, 1, 2), rnode(GIN, 12, 0, 22) },
  { pnode(GPIO, 12, 0, DATAOUT, 1, 3), rnode(GIN, 12, 0, 21) },
  { pnode(GPIO, 12, 0, DATAOUT, 1, 4), rnode(GIN, 12, 0, 20) },
  { pnode(GPIO, 12, 0, OEIN, 1, 0), rnode(GOUT, 12, 0, 47) },
  { pnode(GPIO, 12, 0, OEIN, 1, 1), rnode(GOUT, 12, 0, 39) },
  { pnode(GPIO, 12, 0, BSLIPMAX, 1, -1), rnode(GIN, 12, 0, 25) },
  { pnode(GPIO, 12, 0, CEIN, 1, -1), rnode(GOUT, 12, 0, 51) },
  { pnode(GPIO, 12, 0, CEOUT, 1, -1), rnode(GOUT, 12, 0, 50) },
  { pnode(GPIO, 12, 0, SCLR, 1, -1), rnode(GOUT, 12, 0, 46) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 12, 0, 11) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 12, 0, 9) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 12, 0, 15) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 12, 0, 13) },
  { pnode(GPIO, 12, 0, DATAOUT, 2, 0), rnode(GIN, 12, 0, 8) },
  { pnode(GPIO, 12, 0, DATAOUT, 2, 1), rnode(GIN, 12, 0, 9) },
  { pnode(GPIO, 12, 0, DATAOUT, 2, 2), rnode(GIN, 12, 0, 10) },
  { pnode(GPIO, 12, 0, DATAOUT, 2, 3), rnode(GIN, 12, 0, 11) },
  { pnode(GPIO, 12, 0, DATAOUT, 2, 4), rnode(GIN, 12, 0, 12) },
  { pnode(GPIO, 12, 0, OEIN, 2, 0), rnode(GOUT, 12, 0, 16) },
  { pnode(GPIO, 12, 0, OEIN, 2, 1), rnode(GOUT, 12, 0, 24) },
  { pnode(GPIO, 12, 0, BSLIPMAX, 2, -1), rnode(GIN, 12, 0, 7) },
  { pnode(GPIO, 12, 0, CEIN, 2, -1), rnode(GOUT, 12, 0, 20) },
  { pnode(GPIO, 12, 0, CEOUT, 2, -1), rnode(GOUT, 12, 0, 13) },
  { pnode(GPIO, 12, 0, SCLR, 2, -1), rnode(GOUT, 12, 0, 25) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 12, 0, 5) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 12, 0, 7) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 12, 0, 1) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 12, 0, 3) },
  { pnode(GPIO, 12, 0, DATAOUT, 3, 0), rnode(GIN, 12, 0, 2) },
  { pnode(GPIO, 12, 0, DATAOUT, 3, 1), rnode(GIN, 12, 0, 3) },
  { pnode(GPIO, 12, 0, DATAOUT, 3, 2), rnode(GIN, 12, 0, 4) },
  { pnode(GPIO, 12, 0, DATAOUT, 3, 3), rnode(GIN, 12, 0, 5) },
  { pnode(GPIO, 12, 0, DATAOUT, 3, 4), rnode(GIN, 12, 0, 6) },
  { pnode(GPIO, 12, 0, OEIN, 3, 0), rnode(GOUT, 12, 0, 2) },
  { pnode(GPIO, 12, 0, OEIN, 3, 1), rnode(GOUT, 12, 0, 19) },
  { pnode(GPIO, 12, 0, BSLIPMAX, 3, -1), rnode(GIN, 12, 0, 1) },
  { pnode(GPIO, 12, 0, CEIN, 3, -1), rnode(GOUT, 12, 0, 5) },
  { pnode(GPIO, 12, 0, CEOUT, 3, -1), rnode(GOUT, 12, 0, 4) },
  { pnode(GPIO, 12, 0, SCLR, 3, -1), rnode(GOUT, 12, 0, 1) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 12, 0, 4) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 12, 0, 6) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 12, 0, 0) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 12, 0, 2) },
  { pnode(GPIO, 12, 61, DATAOUT, 0, 0), rnode(GIN, 12, 61, 18) },
  { pnode(GPIO, 12, 61, DATAOUT, 0, 1), rnode(GIN, 12, 61, 17) },
  { pnode(GPIO, 12, 61, DATAOUT, 0, 2), rnode(GIN, 12, 61, 16) },
  { pnode(GPIO, 12, 61, DATAOUT, 0, 3), rnode(GIN, 12, 61, 15) },
  { pnode(GPIO, 12, 61, DATAOUT, 0, 4), rnode(GIN, 12, 61, 14) },
  { pnode(GPIO, 12, 61, OEIN, 0, 0), rnode(GOUT, 12, 61, 38) },
  { pnode(GPIO, 12, 61, OEIN, 0, 1), rnode(GOUT, 12, 61, 30) },
  { pnode(GPIO, 12, 61, BSLIPMAX, 0, -1), rnode(GIN, 12, 61, 19) },
  { pnode(GPIO, 12, 61, CEIN, 0, -1), rnode(GOUT, 12, 61, 27) },
  { pnode(GPIO, 12, 61, CEOUT, 0, -1), rnode(GOUT, 12, 61, 45) },
  { pnode(GPIO, 12, 61, SCLR, 0, -1), rnode(GOUT, 12, 61, 31) },
  { pnode(GPIO, 12, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 12, 61, 10) },
  { pnode(GPIO, 12, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 12, 61, 8) },
  { pnode(GPIO, 12, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 12, 61, 14) },
  { pnode(GPIO, 12, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 12, 61, 12) },
  { pnode(GPIO, 12, 61, DATAOUT, 1, 0), rnode(GIN, 12, 61, 24) },
  { pnode(GPIO, 12, 61, DATAOUT, 1, 1), rnode(GIN, 12, 61, 23) },
  { pnode(GPIO, 12, 61, DATAOUT, 1, 2), rnode(GIN, 12, 61, 22) },
  { pnode(GPIO, 12, 61, DATAOUT, 1, 3), rnode(GIN, 12, 61, 21) },
  { pnode(GPIO, 12, 61, DATAOUT, 1, 4), rnode(GIN, 12, 61, 20) },
  { pnode(GPIO, 12, 61, OEIN, 1, 0), rnode(GOUT, 12, 61, 47) },
  { pnode(GPIO, 12, 61, OEIN, 1, 1), rnode(GOUT, 12, 61, 39) },
  { pnode(GPIO, 12, 61, BSLIPMAX, 1, -1), rnode(GIN, 12, 61, 25) },
  { pnode(GPIO, 12, 61, CEIN, 1, -1), rnode(GOUT, 12, 61, 51) },
  { pnode(GPIO, 12, 61, CEOUT, 1, -1), rnode(GOUT, 12, 61, 50) },
  { pnode(GPIO, 12, 61, SCLR, 1, -1), rnode(GOUT, 12, 61, 46) },
  { pnode(GPIO, 12, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 12, 61, 11) },
  { pnode(GPIO, 12, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 12, 61, 9) },
  { pnode(GPIO, 12, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 12, 61, 15) },
  { pnode(GPIO, 12, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 12, 61, 13) },
  { pnode(GPIO, 12, 61, DATAOUT, 2, 0), rnode(GIN, 12, 61, 8) },
  { pnode(GPIO, 12, 61, DATAOUT, 2, 1), rnode(GIN, 12, 61, 9) },
  { pnode(GPIO, 12, 61, DATAOUT, 2, 2), rnode(GIN, 12, 61, 10) },
  { pnode(GPIO, 12, 61, DATAOUT, 2, 3), rnode(GIN, 12, 61, 11) },
  { pnode(GPIO, 12, 61, DATAOUT, 2, 4), rnode(GIN, 12, 61, 12) },
  { pnode(GPIO, 12, 61, OEIN, 2, 0), rnode(GOUT, 12, 61, 16) },
  { pnode(GPIO, 12, 61, OEIN, 2, 1), rnode(GOUT, 12, 61, 24) },
  { pnode(GPIO, 12, 61, BSLIPMAX, 2, -1), rnode(GIN, 12, 61, 7) },
  { pnode(GPIO, 12, 61, CEIN, 2, -1), rnode(GOUT, 12, 61, 20) },
  { pnode(GPIO, 12, 61, CEOUT, 2, -1), rnode(GOUT, 12, 61, 13) },
  { pnode(GPIO, 12, 61, SCLR, 2, -1), rnode(GOUT, 12, 61, 25) },
  { pnode(GPIO, 12, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 12, 61, 5) },
  { pnode(GPIO, 12, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 12, 61, 7) },
  { pnode(GPIO, 12, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 12, 61, 1) },
  { pnode(GPIO, 12, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 12, 61, 3) },
  { pnode(GPIO, 12, 61, DATAOUT, 3, 0), rnode(GIN, 12, 61, 2) },
  { pnode(GPIO, 12, 61, DATAOUT, 3, 1), rnode(GIN, 12, 61, 3) },
  { pnode(GPIO, 12, 61, DATAOUT, 3, 2), rnode(GIN, 12, 61, 4) },
  { pnode(GPIO, 12, 61, DATAOUT, 3, 3), rnode(GIN, 12, 61, 5) },
  { pnode(GPIO, 12, 61, DATAOUT, 3, 4), rnode(GIN, 12, 61, 6) },
  { pnode(GPIO, 12, 61, OEIN, 3, 0), rnode(GOUT, 12, 61, 2) },
  { pnode(GPIO, 12, 61, OEIN, 3, 1), rnode(GOUT, 12, 61, 19) },
  { pnode(GPIO, 12, 61, BSLIPMAX, 3, -1), rnode(GIN, 12, 61, 1) },
  { pnode(GPIO, 12, 61, CEIN, 3, -1), rnode(GOUT, 12, 61, 5) },
  { pnode(GPIO, 12, 61, CEOUT, 3, -1), rnode(GOUT, 12, 61, 4) },
  { pnode(GPIO, 12, 61, SCLR, 3, -1), rnode(GOUT, 12, 61, 1) },
  { pnode(GPIO, 12, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 12, 61, 4) },
  { pnode(GPIO, 12, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 12, 61, 6) },
  { pnode(GPIO, 12, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 12, 61, 0) },
  { pnode(GPIO, 12, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 12, 61, 2) },
  { pnode(GPIO, 14, 0, DATAOUT, 0, 0), rnode(GIN, 14, 0, 18) },
  { pnode(GPIO, 14, 0, DATAOUT, 0, 1), rnode(GIN, 14, 0, 17) },
  { pnode(GPIO, 14, 0, DATAOUT, 0, 2), rnode(GIN, 14, 0, 16) },
  { pnode(GPIO, 14, 0, DATAOUT, 0, 3), rnode(GIN, 14, 0, 15) },
  { pnode(GPIO, 14, 0, DATAOUT, 0, 4), rnode(GIN, 14, 0, 14) },
  { pnode(GPIO, 14, 0, OEIN, 0, 0), rnode(GOUT, 14, 0, 38) },
  { pnode(GPIO, 14, 0, OEIN, 0, 1), rnode(GOUT, 14, 0, 30) },
  { pnode(GPIO, 14, 0, BSLIPMAX, 0, -1), rnode(GIN, 14, 0, 19) },
  { pnode(GPIO, 14, 0, CEIN, 0, -1), rnode(GOUT, 14, 0, 27) },
  { pnode(GPIO, 14, 0, CEOUT, 0, -1), rnode(GOUT, 14, 0, 45) },
  { pnode(GPIO, 14, 0, SCLR, 0, -1), rnode(GOUT, 14, 0, 31) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 14, 0, 10) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 14, 0, 8) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 14, 0, 14) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 14, 0, 12) },
  { pnode(GPIO, 14, 0, DATAOUT, 1, 0), rnode(GIN, 14, 0, 24) },
  { pnode(GPIO, 14, 0, DATAOUT, 1, 1), rnode(GIN, 14, 0, 23) },
  { pnode(GPIO, 14, 0, DATAOUT, 1, 2), rnode(GIN, 14, 0, 22) },
  { pnode(GPIO, 14, 0, DATAOUT, 1, 3), rnode(GIN, 14, 0, 21) },
  { pnode(GPIO, 14, 0, DATAOUT, 1, 4), rnode(GIN, 14, 0, 20) },
  { pnode(GPIO, 14, 0, OEIN, 1, 0), rnode(GOUT, 14, 0, 47) },
  { pnode(GPIO, 14, 0, OEIN, 1, 1), rnode(GOUT, 14, 0, 39) },
  { pnode(GPIO, 14, 0, BSLIPMAX, 1, -1), rnode(GIN, 14, 0, 25) },
  { pnode(GPIO, 14, 0, CEIN, 1, -1), rnode(GOUT, 14, 0, 51) },
  { pnode(GPIO, 14, 0, CEOUT, 1, -1), rnode(GOUT, 14, 0, 50) },
  { pnode(GPIO, 14, 0, SCLR, 1, -1), rnode(GOUT, 14, 0, 46) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 14, 0, 11) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 14, 0, 9) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 14, 0, 15) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 14, 0, 13) },
  { pnode(GPIO, 14, 0, DATAOUT, 2, 0), rnode(GIN, 14, 0, 8) },
  { pnode(GPIO, 14, 0, DATAOUT, 2, 1), rnode(GIN, 14, 0, 9) },
  { pnode(GPIO, 14, 0, DATAOUT, 2, 2), rnode(GIN, 14, 0, 10) },
  { pnode(GPIO, 14, 0, DATAOUT, 2, 3), rnode(GIN, 14, 0, 11) },
  { pnode(GPIO, 14, 0, DATAOUT, 2, 4), rnode(GIN, 14, 0, 12) },
  { pnode(GPIO, 14, 0, OEIN, 2, 0), rnode(GOUT, 14, 0, 16) },
  { pnode(GPIO, 14, 0, OEIN, 2, 1), rnode(GOUT, 14, 0, 24) },
  { pnode(GPIO, 14, 0, BSLIPMAX, 2, -1), rnode(GIN, 14, 0, 7) },
  { pnode(GPIO, 14, 0, CEIN, 2, -1), rnode(GOUT, 14, 0, 20) },
  { pnode(GPIO, 14, 0, CEOUT, 2, -1), rnode(GOUT, 14, 0, 13) },
  { pnode(GPIO, 14, 0, SCLR, 2, -1), rnode(GOUT, 14, 0, 25) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 14, 0, 5) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 14, 0, 7) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 14, 0, 1) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 14, 0, 3) },
  { pnode(GPIO, 14, 0, DATAOUT, 3, 0), rnode(GIN, 14, 0, 2) },
  { pnode(GPIO, 14, 0, DATAOUT, 3, 1), rnode(GIN, 14, 0, 3) },
  { pnode(GPIO, 14, 0, DATAOUT, 3, 2), rnode(GIN, 14, 0, 4) },
  { pnode(GPIO, 14, 0, DATAOUT, 3, 3), rnode(GIN, 14, 0, 5) },
  { pnode(GPIO, 14, 0, DATAOUT, 3, 4), rnode(GIN, 14, 0, 6) },
  { pnode(GPIO, 14, 0, OEIN, 3, 0), rnode(GOUT, 14, 0, 2) },
  { pnode(GPIO, 14, 0, OEIN, 3, 1), rnode(GOUT, 14, 0, 19) },
  { pnode(GPIO, 14, 0, BSLIPMAX, 3, -1), rnode(GIN, 14, 0, 1) },
  { pnode(GPIO, 14, 0, CEIN, 3, -1), rnode(GOUT, 14, 0, 5) },
  { pnode(GPIO, 14, 0, CEOUT, 3, -1), rnode(GOUT, 14, 0, 4) },
  { pnode(GPIO, 14, 0, SCLR, 3, -1), rnode(GOUT, 14, 0, 1) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 14, 0, 4) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 14, 0, 6) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 14, 0, 0) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 14, 0, 2) },
  { pnode(GPIO, 14, 61, DATAOUT, 0, 0), rnode(GIN, 14, 61, 18) },
  { pnode(GPIO, 14, 61, DATAOUT, 0, 1), rnode(GIN, 14, 61, 17) },
  { pnode(GPIO, 14, 61, DATAOUT, 0, 2), rnode(GIN, 14, 61, 16) },
  { pnode(GPIO, 14, 61, DATAOUT, 0, 3), rnode(GIN, 14, 61, 15) },
  { pnode(GPIO, 14, 61, DATAOUT, 0, 4), rnode(GIN, 14, 61, 14) },
  { pnode(GPIO, 14, 61, OEIN, 0, 0), rnode(GOUT, 14, 61, 38) },
  { pnode(GPIO, 14, 61, OEIN, 0, 1), rnode(GOUT, 14, 61, 30) },
  { pnode(GPIO, 14, 61, BSLIPMAX, 0, -1), rnode(GIN, 14, 61, 19) },
  { pnode(GPIO, 14, 61, CEIN, 0, -1), rnode(GOUT, 14, 61, 27) },
  { pnode(GPIO, 14, 61, CEOUT, 0, -1), rnode(GOUT, 14, 61, 45) },
  { pnode(GPIO, 14, 61, SCLR, 0, -1), rnode(GOUT, 14, 61, 31) },
  { pnode(GPIO, 14, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 14, 61, 10) },
  { pnode(GPIO, 14, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 14, 61, 8) },
  { pnode(GPIO, 14, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 14, 61, 14) },
  { pnode(GPIO, 14, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 14, 61, 12) },
  { pnode(GPIO, 14, 61, DATAOUT, 1, 0), rnode(GIN, 14, 61, 24) },
  { pnode(GPIO, 14, 61, DATAOUT, 1, 1), rnode(GIN, 14, 61, 23) },
  { pnode(GPIO, 14, 61, DATAOUT, 1, 2), rnode(GIN, 14, 61, 22) },
  { pnode(GPIO, 14, 61, DATAOUT, 1, 3), rnode(GIN, 14, 61, 21) },
  { pnode(GPIO, 14, 61, DATAOUT, 1, 4), rnode(GIN, 14, 61, 20) },
  { pnode(GPIO, 14, 61, OEIN, 1, 0), rnode(GOUT, 14, 61, 47) },
  { pnode(GPIO, 14, 61, OEIN, 1, 1), rnode(GOUT, 14, 61, 39) },
  { pnode(GPIO, 14, 61, BSLIPMAX, 1, -1), rnode(GIN, 14, 61, 25) },
  { pnode(GPIO, 14, 61, CEIN, 1, -1), rnode(GOUT, 14, 61, 51) },
  { pnode(GPIO, 14, 61, CEOUT, 1, -1), rnode(GOUT, 14, 61, 50) },
  { pnode(GPIO, 14, 61, SCLR, 1, -1), rnode(GOUT, 14, 61, 46) },
  { pnode(GPIO, 14, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 14, 61, 11) },
  { pnode(GPIO, 14, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 14, 61, 9) },
  { pnode(GPIO, 14, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 14, 61, 15) },
  { pnode(GPIO, 14, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 14, 61, 13) },
  { pnode(GPIO, 14, 61, DATAOUT, 2, 0), rnode(GIN, 14, 61, 8) },
  { pnode(GPIO, 14, 61, DATAOUT, 2, 1), rnode(GIN, 14, 61, 9) },
  { pnode(GPIO, 14, 61, DATAOUT, 2, 2), rnode(GIN, 14, 61, 10) },
  { pnode(GPIO, 14, 61, DATAOUT, 2, 3), rnode(GIN, 14, 61, 11) },
  { pnode(GPIO, 14, 61, DATAOUT, 2, 4), rnode(GIN, 14, 61, 12) },
  { pnode(GPIO, 14, 61, OEIN, 2, 0), rnode(GOUT, 14, 61, 16) },
  { pnode(GPIO, 14, 61, OEIN, 2, 1), rnode(GOUT, 14, 61, 24) },
  { pnode(GPIO, 14, 61, BSLIPMAX, 2, -1), rnode(GIN, 14, 61, 7) },
  { pnode(GPIO, 14, 61, CEIN, 2, -1), rnode(GOUT, 14, 61, 20) },
  { pnode(GPIO, 14, 61, CEOUT, 2, -1), rnode(GOUT, 14, 61, 13) },
  { pnode(GPIO, 14, 61, SCLR, 2, -1), rnode(GOUT, 14, 61, 25) },
  { pnode(GPIO, 14, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 14, 61, 5) },
  { pnode(GPIO, 14, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 14, 61, 7) },
  { pnode(GPIO, 14, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 14, 61, 1) },
  { pnode(GPIO, 14, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 14, 61, 3) },
  { pnode(GPIO, 14, 61, DATAOUT, 3, 0), rnode(GIN, 14, 61, 2) },
  { pnode(GPIO, 14, 61, DATAOUT, 3, 1), rnode(GIN, 14, 61, 3) },
  { pnode(GPIO, 14, 61, DATAOUT, 3, 2), rnode(GIN, 14, 61, 4) },
  { pnode(GPIO, 14, 61, DATAOUT, 3, 3), rnode(GIN, 14, 61, 5) },
  { pnode(GPIO, 14, 61, DATAOUT, 3, 4), rnode(GIN, 14, 61, 6) },
  { pnode(GPIO, 14, 61, OEIN, 3, 0), rnode(GOUT, 14, 61, 2) },
  { pnode(GPIO, 14, 61, OEIN, 3, 1), rnode(GOUT, 14, 61, 19) },
  { pnode(GPIO, 14, 61, BSLIPMAX, 3, -1), rnode(GIN, 14, 61, 1) },
  { pnode(GPIO, 14, 61, CEIN, 3, -1), rnode(GOUT, 14, 61, 5) },
  { pnode(GPIO, 14, 61, CEOUT, 3, -1), rnode(GOUT, 14, 61, 4) },
  { pnode(GPIO, 14, 61, SCLR, 3, -1), rnode(GOUT, 14, 61, 1) },
  { pnode(GPIO, 14, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 14, 61, 4) },
  { pnode(GPIO, 14, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 14, 61, 6) },
  { pnode(GPIO, 14, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 14, 61, 0) },
  { pnode(GPIO, 14, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 14, 61, 2) },
  { pnode(GPIO, 15, 0, DATAIN, 0, 0), rnode(GOUT, 15, 0, 44) },
  { pnode(GPIO, 15, 0, DATAIN, 0, 1), rnode(GOUT, 15, 0, 34) },
  { pnode(GPIO, 15, 0, DATAIN, 0, 2), rnode(GOUT, 15, 0, 43) },
  { pnode(GPIO, 15, 0, DATAIN, 0, 3), rnode(GOUT, 15, 0, 29) },
  { pnode(GPIO, 15, 0, DATAOUT, 0, 0), rnode(GIN, 15, 0, 18) },
  { pnode(GPIO, 15, 0, DATAOUT, 0, 1), rnode(GIN, 15, 0, 17) },
  { pnode(GPIO, 15, 0, DATAOUT, 0, 2), rnode(GIN, 15, 0, 16) },
  { pnode(GPIO, 15, 0, DATAOUT, 0, 3), rnode(GIN, 15, 0, 15) },
  { pnode(GPIO, 15, 0, DATAOUT, 0, 4), rnode(GIN, 15, 0, 14) },
  { pnode(GPIO, 15, 0, OEIN, 0, 0), rnode(GOUT, 15, 0, 38) },
  { pnode(GPIO, 15, 0, OEIN, 0, 1), rnode(GOUT, 15, 0, 30) },
  { pnode(GPIO, 15, 0, BSLIPMAX, 0, -1), rnode(GIN, 15, 0, 19) },
  { pnode(GPIO, 15, 0, CEIN, 0, -1), rnode(GOUT, 15, 0, 27) },
  { pnode(GPIO, 15, 0, CEOUT, 0, -1), rnode(GOUT, 15, 0, 45) },
  { pnode(GPIO, 15, 0, ACLR, 0, -1), rnode(GOUT, 15, 0, 28) },
  { pnode(GPIO, 15, 0, SCLR, 0, -1), rnode(GOUT, 15, 0, 31) },
  { pnode(GPIO, 15, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 15, 0, 10) },
  { pnode(GPIO, 15, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 15, 0, 8) },
  { pnode(GPIO, 15, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 15, 0, 14) },
  { pnode(GPIO, 15, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 15, 0, 12) },
  { pnode(GPIO, 15, 0, DATAIN, 1, 0), rnode(GOUT, 15, 0, 49) },
  { pnode(GPIO, 15, 0, DATAIN, 1, 1), rnode(GOUT, 15, 0, 41) },
  { pnode(GPIO, 15, 0, DATAIN, 1, 2), rnode(GOUT, 15, 0, 48) },
  { pnode(GPIO, 15, 0, DATAIN, 1, 3), rnode(GOUT, 15, 0, 40) },
  { pnode(GPIO, 15, 0, DATAOUT, 1, 0), rnode(GIN, 15, 0, 24) },
  { pnode(GPIO, 15, 0, DATAOUT, 1, 1), rnode(GIN, 15, 0, 23) },
  { pnode(GPIO, 15, 0, DATAOUT, 1, 2), rnode(GIN, 15, 0, 22) },
  { pnode(GPIO, 15, 0, DATAOUT, 1, 3), rnode(GIN, 15, 0, 21) },
  { pnode(GPIO, 15, 0, DATAOUT, 1, 4), rnode(GIN, 15, 0, 20) },
  { pnode(GPIO, 15, 0, OEIN, 1, 0), rnode(GOUT, 15, 0, 47) },
  { pnode(GPIO, 15, 0, OEIN, 1, 1), rnode(GOUT, 15, 0, 39) },
  { pnode(GPIO, 15, 0, BSLIPMAX, 1, -1), rnode(GIN, 15, 0, 25) },
  { pnode(GPIO, 15, 0, CEIN, 1, -1), rnode(GOUT, 15, 0, 51) },
  { pnode(GPIO, 15, 0, CEOUT, 1, -1), rnode(GOUT, 15, 0, 50) },
  { pnode(GPIO, 15, 0, ACLR, 1, -1), rnode(GOUT, 15, 0, 42) },
  { pnode(GPIO, 15, 0, SCLR, 1, -1), rnode(GOUT, 15, 0, 46) },
  { pnode(GPIO, 15, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 15, 0, 11) },
  { pnode(GPIO, 15, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 15, 0, 9) },
  { pnode(GPIO, 15, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 15, 0, 15) },
  { pnode(GPIO, 15, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 15, 0, 13) },
  { pnode(GPIO, 15, 0, DATAOUT, 2, 0), rnode(GIN, 15, 0, 8) },
  { pnode(GPIO, 15, 0, DATAOUT, 2, 1), rnode(GIN, 15, 0, 9) },
  { pnode(GPIO, 15, 0, DATAOUT, 2, 2), rnode(GIN, 15, 0, 10) },
  { pnode(GPIO, 15, 0, DATAOUT, 2, 3), rnode(GIN, 15, 0, 11) },
  { pnode(GPIO, 15, 0, DATAOUT, 2, 4), rnode(GIN, 15, 0, 12) },
  { pnode(GPIO, 15, 0, OEIN, 2, 0), rnode(GOUT, 15, 0, 16) },
  { pnode(GPIO, 15, 0, OEIN, 2, 1), rnode(GOUT, 15, 0, 24) },
  { pnode(GPIO, 15, 0, BSLIPMAX, 2, -1), rnode(GIN, 15, 0, 7) },
  { pnode(GPIO, 15, 0, CEIN, 2, -1), rnode(GOUT, 15, 0, 20) },
  { pnode(GPIO, 15, 0, CEOUT, 2, -1), rnode(GOUT, 15, 0, 13) },
  { pnode(GPIO, 15, 0, SCLR, 2, -1), rnode(GOUT, 15, 0, 25) },
  { pnode(GPIO, 15, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 15, 0, 5) },
  { pnode(GPIO, 15, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 15, 0, 7) },
  { pnode(GPIO, 15, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 15, 0, 1) },
  { pnode(GPIO, 15, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 15, 0, 3) },
  { pnode(GPIO, 15, 0, DATAOUT, 3, 0), rnode(GIN, 15, 0, 2) },
  { pnode(GPIO, 15, 0, DATAOUT, 3, 1), rnode(GIN, 15, 0, 3) },
  { pnode(GPIO, 15, 0, DATAOUT, 3, 2), rnode(GIN, 15, 0, 4) },
  { pnode(GPIO, 15, 0, DATAOUT, 3, 3), rnode(GIN, 15, 0, 5) },
  { pnode(GPIO, 15, 0, DATAOUT, 3, 4), rnode(GIN, 15, 0, 6) },
  { pnode(GPIO, 15, 0, OEIN, 3, 0), rnode(GOUT, 15, 0, 2) },
  { pnode(GPIO, 15, 0, OEIN, 3, 1), rnode(GOUT, 15, 0, 19) },
  { pnode(GPIO, 15, 0, BSLIPMAX, 3, -1), rnode(GIN, 15, 0, 1) },
  { pnode(GPIO, 15, 0, CEIN, 3, -1), rnode(GOUT, 15, 0, 5) },
  { pnode(GPIO, 15, 0, CEOUT, 3, -1), rnode(GOUT, 15, 0, 4) },
  { pnode(GPIO, 15, 0, SCLR, 3, -1), rnode(GOUT, 15, 0, 1) },
  { pnode(GPIO, 15, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 15, 0, 4) },
  { pnode(GPIO, 15, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 15, 0, 6) },
  { pnode(GPIO, 15, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 15, 0, 0) },
  { pnode(GPIO, 15, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 15, 0, 2) },
  { pnode(GPIO, 15, 61, DATAIN, 0, 0), rnode(GOUT, 15, 61, 44) },
  { pnode(GPIO, 15, 61, DATAIN, 0, 1), rnode(GOUT, 15, 61, 34) },
  { pnode(GPIO, 15, 61, DATAIN, 0, 2), rnode(GOUT, 15, 61, 43) },
  { pnode(GPIO, 15, 61, DATAIN, 0, 3), rnode(GOUT, 15, 61, 29) },
  { pnode(GPIO, 15, 61, DATAOUT, 0, 0), rnode(GIN, 15, 61, 18) },
  { pnode(GPIO, 15, 61, DATAOUT, 0, 1), rnode(GIN, 15, 61, 17) },
  { pnode(GPIO, 15, 61, DATAOUT, 0, 2), rnode(GIN, 15, 61, 16) },
  { pnode(GPIO, 15, 61, DATAOUT, 0, 3), rnode(GIN, 15, 61, 15) },
  { pnode(GPIO, 15, 61, DATAOUT, 0, 4), rnode(GIN, 15, 61, 14) },
  { pnode(GPIO, 15, 61, OEIN, 0, 0), rnode(GOUT, 15, 61, 38) },
  { pnode(GPIO, 15, 61, OEIN, 0, 1), rnode(GOUT, 15, 61, 30) },
  { pnode(GPIO, 15, 61, BSLIPMAX, 0, -1), rnode(GIN, 15, 61, 19) },
  { pnode(GPIO, 15, 61, CEIN, 0, -1), rnode(GOUT, 15, 61, 27) },
  { pnode(GPIO, 15, 61, CEOUT, 0, -1), rnode(GOUT, 15, 61, 45) },
  { pnode(GPIO, 15, 61, ACLR, 0, -1), rnode(GOUT, 15, 61, 28) },
  { pnode(GPIO, 15, 61, SCLR, 0, -1), rnode(GOUT, 15, 61, 31) },
  { pnode(GPIO, 15, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 15, 61, 10) },
  { pnode(GPIO, 15, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 15, 61, 8) },
  { pnode(GPIO, 15, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 15, 61, 14) },
  { pnode(GPIO, 15, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 15, 61, 12) },
  { pnode(GPIO, 15, 61, DATAIN, 1, 0), rnode(GOUT, 15, 61, 49) },
  { pnode(GPIO, 15, 61, DATAIN, 1, 1), rnode(GOUT, 15, 61, 41) },
  { pnode(GPIO, 15, 61, DATAIN, 1, 2), rnode(GOUT, 15, 61, 48) },
  { pnode(GPIO, 15, 61, DATAIN, 1, 3), rnode(GOUT, 15, 61, 40) },
  { pnode(GPIO, 15, 61, DATAOUT, 1, 0), rnode(GIN, 15, 61, 24) },
  { pnode(GPIO, 15, 61, DATAOUT, 1, 1), rnode(GIN, 15, 61, 23) },
  { pnode(GPIO, 15, 61, DATAOUT, 1, 2), rnode(GIN, 15, 61, 22) },
  { pnode(GPIO, 15, 61, DATAOUT, 1, 3), rnode(GIN, 15, 61, 21) },
  { pnode(GPIO, 15, 61, DATAOUT, 1, 4), rnode(GIN, 15, 61, 20) },
  { pnode(GPIO, 15, 61, OEIN, 1, 0), rnode(GOUT, 15, 61, 47) },
  { pnode(GPIO, 15, 61, OEIN, 1, 1), rnode(GOUT, 15, 61, 39) },
  { pnode(GPIO, 15, 61, BSLIPMAX, 1, -1), rnode(GIN, 15, 61, 25) },
  { pnode(GPIO, 15, 61, CEIN, 1, -1), rnode(GOUT, 15, 61, 51) },
  { pnode(GPIO, 15, 61, CEOUT, 1, -1), rnode(GOUT, 15, 61, 50) },
  { pnode(GPIO, 15, 61, ACLR, 1, -1), rnode(GOUT, 15, 61, 42) },
  { pnode(GPIO, 15, 61, SCLR, 1, -1), rnode(GOUT, 15, 61, 46) },
  { pnode(GPIO, 15, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 15, 61, 11) },
  { pnode(GPIO, 15, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 15, 61, 9) },
  { pnode(GPIO, 15, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 15, 61, 15) },
  { pnode(GPIO, 15, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 15, 61, 13) },
  { pnode(GPIO, 15, 61, DATAOUT, 2, 0), rnode(GIN, 15, 61, 8) },
  { pnode(GPIO, 15, 61, DATAOUT, 2, 1), rnode(GIN, 15, 61, 9) },
  { pnode(GPIO, 15, 61, DATAOUT, 2, 2), rnode(GIN, 15, 61, 10) },
  { pnode(GPIO, 15, 61, DATAOUT, 2, 3), rnode(GIN, 15, 61, 11) },
  { pnode(GPIO, 15, 61, DATAOUT, 2, 4), rnode(GIN, 15, 61, 12) },
  { pnode(GPIO, 15, 61, OEIN, 2, 0), rnode(GOUT, 15, 61, 16) },
  { pnode(GPIO, 15, 61, OEIN, 2, 1), rnode(GOUT, 15, 61, 24) },
  { pnode(GPIO, 15, 61, BSLIPMAX, 2, -1), rnode(GIN, 15, 61, 7) },
  { pnode(GPIO, 15, 61, CEIN, 2, -1), rnode(GOUT, 15, 61, 20) },
  { pnode(GPIO, 15, 61, CEOUT, 2, -1), rnode(GOUT, 15, 61, 13) },
  { pnode(GPIO, 15, 61, SCLR, 2, -1), rnode(GOUT, 15, 61, 25) },
  { pnode(GPIO, 15, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 15, 61, 5) },
  { pnode(GPIO, 15, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 15, 61, 7) },
  { pnode(GPIO, 15, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 15, 61, 1) },
  { pnode(GPIO, 15, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 15, 61, 3) },
  { pnode(GPIO, 15, 61, DATAOUT, 3, 0), rnode(GIN, 15, 61, 2) },
  { pnode(GPIO, 15, 61, DATAOUT, 3, 1), rnode(GIN, 15, 61, 3) },
  { pnode(GPIO, 15, 61, DATAOUT, 3, 2), rnode(GIN, 15, 61, 4) },
  { pnode(GPIO, 15, 61, DATAOUT, 3, 3), rnode(GIN, 15, 61, 5) },
  { pnode(GPIO, 15, 61, DATAOUT, 3, 4), rnode(GIN, 15, 61, 6) },
  { pnode(GPIO, 15, 61, OEIN, 3, 0), rnode(GOUT, 15, 61, 2) },
  { pnode(GPIO, 15, 61, OEIN, 3, 1), rnode(GOUT, 15, 61, 19) },
  { pnode(GPIO, 15, 61, BSLIPMAX, 3, -1), rnode(GIN, 15, 61, 1) },
  { pnode(GPIO, 15, 61, CEIN, 3, -1), rnode(GOUT, 15, 61, 5) },
  { pnode(GPIO, 15, 61, CEOUT, 3, -1), rnode(GOUT, 15, 61, 4) },
  { pnode(GPIO, 15, 61, SCLR, 3, -1), rnode(GOUT, 15, 61, 1) },
  { pnode(GPIO, 15, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 15, 61, 4) },
  { pnode(GPIO, 15, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 15, 61, 6) },
  { pnode(GPIO, 15, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 15, 61, 0) },
  { pnode(GPIO, 15, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 15, 61, 2) },
  { pnode(GPIO, 17, 0, DATAOUT, 0, 0), rnode(GIN, 17, 0, 18) },
  { pnode(GPIO, 17, 0, DATAOUT, 0, 1), rnode(GIN, 17, 0, 17) },
  { pnode(GPIO, 17, 0, DATAOUT, 0, 2), rnode(GIN, 17, 0, 16) },
  { pnode(GPIO, 17, 0, DATAOUT, 0, 3), rnode(GIN, 17, 0, 15) },
  { pnode(GPIO, 17, 0, DATAOUT, 0, 4), rnode(GIN, 17, 0, 14) },
  { pnode(GPIO, 17, 0, OEIN, 0, 0), rnode(GOUT, 17, 0, 38) },
  { pnode(GPIO, 17, 0, OEIN, 0, 1), rnode(GOUT, 17, 0, 30) },
  { pnode(GPIO, 17, 0, BSLIPMAX, 0, -1), rnode(GIN, 17, 0, 19) },
  { pnode(GPIO, 17, 0, CEIN, 0, -1), rnode(GOUT, 17, 0, 27) },
  { pnode(GPIO, 17, 0, CEOUT, 0, -1), rnode(GOUT, 17, 0, 45) },
  { pnode(GPIO, 17, 0, SCLR, 0, -1), rnode(GOUT, 17, 0, 31) },
  { pnode(GPIO, 17, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 17, 0, 10) },
  { pnode(GPIO, 17, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 17, 0, 8) },
  { pnode(GPIO, 17, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 17, 0, 14) },
  { pnode(GPIO, 17, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 17, 0, 12) },
  { pnode(GPIO, 17, 0, DATAOUT, 1, 0), rnode(GIN, 17, 0, 24) },
  { pnode(GPIO, 17, 0, DATAOUT, 1, 1), rnode(GIN, 17, 0, 23) },
  { pnode(GPIO, 17, 0, DATAOUT, 1, 2), rnode(GIN, 17, 0, 22) },
  { pnode(GPIO, 17, 0, DATAOUT, 1, 3), rnode(GIN, 17, 0, 21) },
  { pnode(GPIO, 17, 0, DATAOUT, 1, 4), rnode(GIN, 17, 0, 20) },
  { pnode(GPIO, 17, 0, OEIN, 1, 0), rnode(GOUT, 17, 0, 47) },
  { pnode(GPIO, 17, 0, OEIN, 1, 1), rnode(GOUT, 17, 0, 39) },
  { pnode(GPIO, 17, 0, BSLIPMAX, 1, -1), rnode(GIN, 17, 0, 25) },
  { pnode(GPIO, 17, 0, CEIN, 1, -1), rnode(GOUT, 17, 0, 51) },
  { pnode(GPIO, 17, 0, CEOUT, 1, -1), rnode(GOUT, 17, 0, 50) },
  { pnode(GPIO, 17, 0, SCLR, 1, -1), rnode(GOUT, 17, 0, 46) },
  { pnode(GPIO, 17, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 17, 0, 11) },
  { pnode(GPIO, 17, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 17, 0, 9) },
  { pnode(GPIO, 17, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 17, 0, 15) },
  { pnode(GPIO, 17, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 17, 0, 13) },
  { pnode(GPIO, 17, 0, DATAOUT, 2, 0), rnode(GIN, 17, 0, 8) },
  { pnode(GPIO, 17, 0, DATAOUT, 2, 1), rnode(GIN, 17, 0, 9) },
  { pnode(GPIO, 17, 0, DATAOUT, 2, 2), rnode(GIN, 17, 0, 10) },
  { pnode(GPIO, 17, 0, DATAOUT, 2, 3), rnode(GIN, 17, 0, 11) },
  { pnode(GPIO, 17, 0, DATAOUT, 2, 4), rnode(GIN, 17, 0, 12) },
  { pnode(GPIO, 17, 0, OEIN, 2, 0), rnode(GOUT, 17, 0, 16) },
  { pnode(GPIO, 17, 0, OEIN, 2, 1), rnode(GOUT, 17, 0, 24) },
  { pnode(GPIO, 17, 0, BSLIPMAX, 2, -1), rnode(GIN, 17, 0, 7) },
  { pnode(GPIO, 17, 0, CEIN, 2, -1), rnode(GOUT, 17, 0, 20) },
  { pnode(GPIO, 17, 0, CEOUT, 2, -1), rnode(GOUT, 17, 0, 13) },
  { pnode(GPIO, 17, 0, SCLR, 2, -1), rnode(GOUT, 17, 0, 25) },
  { pnode(GPIO, 17, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 17, 0, 5) },
  { pnode(GPIO, 17, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 17, 0, 7) },
  { pnode(GPIO, 17, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 17, 0, 1) },
  { pnode(GPIO, 17, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 17, 0, 3) },
  { pnode(GPIO, 17, 0, DATAIN, 3, 0), rnode(GOUT, 17, 0, 3) },
  { pnode(GPIO, 17, 0, DATAIN, 3, 1), rnode(GOUT, 17, 0, 17) },
  { pnode(GPIO, 17, 0, DATAIN, 3, 2), rnode(GOUT, 17, 0, 8) },
  { pnode(GPIO, 17, 0, DATAIN, 3, 3), rnode(GOUT, 17, 0, 18) },
  { pnode(GPIO, 17, 0, DATAOUT, 3, 0), rnode(GIN, 17, 0, 2) },
  { pnode(GPIO, 17, 0, DATAOUT, 3, 1), rnode(GIN, 17, 0, 3) },
  { pnode(GPIO, 17, 0, DATAOUT, 3, 2), rnode(GIN, 17, 0, 4) },
  { pnode(GPIO, 17, 0, DATAOUT, 3, 3), rnode(GIN, 17, 0, 5) },
  { pnode(GPIO, 17, 0, DATAOUT, 3, 4), rnode(GIN, 17, 0, 6) },
  { pnode(GPIO, 17, 0, OEIN, 3, 0), rnode(GOUT, 17, 0, 2) },
  { pnode(GPIO, 17, 0, OEIN, 3, 1), rnode(GOUT, 17, 0, 19) },
  { pnode(GPIO, 17, 0, BSLIPMAX, 3, -1), rnode(GIN, 17, 0, 1) },
  { pnode(GPIO, 17, 0, CEIN, 3, -1), rnode(GOUT, 17, 0, 5) },
  { pnode(GPIO, 17, 0, CEOUT, 3, -1), rnode(GOUT, 17, 0, 4) },
  { pnode(GPIO, 17, 0, ACLR, 3, -1), rnode(GOUT, 17, 0, 12) },
  { pnode(GPIO, 17, 0, SCLR, 3, -1), rnode(GOUT, 17, 0, 1) },
  { pnode(GPIO, 17, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 17, 0, 4) },
  { pnode(GPIO, 17, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 17, 0, 6) },
  { pnode(GPIO, 17, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 17, 0, 0) },
  { pnode(GPIO, 17, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 17, 0, 2) },
  { pnode(GPIO, 17, 61, DATAOUT, 0, 0), rnode(GIN, 17, 61, 18) },
  { pnode(GPIO, 17, 61, DATAOUT, 0, 1), rnode(GIN, 17, 61, 17) },
  { pnode(GPIO, 17, 61, DATAOUT, 0, 2), rnode(GIN, 17, 61, 16) },
  { pnode(GPIO, 17, 61, DATAOUT, 0, 3), rnode(GIN, 17, 61, 15) },
  { pnode(GPIO, 17, 61, DATAOUT, 0, 4), rnode(GIN, 17, 61, 14) },
  { pnode(GPIO, 17, 61, OEIN, 0, 0), rnode(GOUT, 17, 61, 38) },
  { pnode(GPIO, 17, 61, OEIN, 0, 1), rnode(GOUT, 17, 61, 30) },
  { pnode(GPIO, 17, 61, BSLIPMAX, 0, -1), rnode(GIN, 17, 61, 19) },
  { pnode(GPIO, 17, 61, CEIN, 0, -1), rnode(GOUT, 17, 61, 27) },
  { pnode(GPIO, 17, 61, CEOUT, 0, -1), rnode(GOUT, 17, 61, 45) },
  { pnode(GPIO, 17, 61, SCLR, 0, -1), rnode(GOUT, 17, 61, 31) },
  { pnode(GPIO, 17, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 17, 61, 10) },
  { pnode(GPIO, 17, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 17, 61, 8) },
  { pnode(GPIO, 17, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 17, 61, 14) },
  { pnode(GPIO, 17, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 17, 61, 12) },
  { pnode(GPIO, 17, 61, DATAOUT, 1, 0), rnode(GIN, 17, 61, 24) },
  { pnode(GPIO, 17, 61, DATAOUT, 1, 1), rnode(GIN, 17, 61, 23) },
  { pnode(GPIO, 17, 61, DATAOUT, 1, 2), rnode(GIN, 17, 61, 22) },
  { pnode(GPIO, 17, 61, DATAOUT, 1, 3), rnode(GIN, 17, 61, 21) },
  { pnode(GPIO, 17, 61, DATAOUT, 1, 4), rnode(GIN, 17, 61, 20) },
  { pnode(GPIO, 17, 61, OEIN, 1, 0), rnode(GOUT, 17, 61, 47) },
  { pnode(GPIO, 17, 61, OEIN, 1, 1), rnode(GOUT, 17, 61, 39) },
  { pnode(GPIO, 17, 61, BSLIPMAX, 1, -1), rnode(GIN, 17, 61, 25) },
  { pnode(GPIO, 17, 61, CEIN, 1, -1), rnode(GOUT, 17, 61, 51) },
  { pnode(GPIO, 17, 61, CEOUT, 1, -1), rnode(GOUT, 17, 61, 50) },
  { pnode(GPIO, 17, 61, SCLR, 1, -1), rnode(GOUT, 17, 61, 46) },
  { pnode(GPIO, 17, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 17, 61, 11) },
  { pnode(GPIO, 17, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 17, 61, 9) },
  { pnode(GPIO, 17, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 17, 61, 15) },
  { pnode(GPIO, 17, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 17, 61, 13) },
  { pnode(GPIO, 17, 61, DATAOUT, 2, 0), rnode(GIN, 17, 61, 8) },
  { pnode(GPIO, 17, 61, DATAOUT, 2, 1), rnode(GIN, 17, 61, 9) },
  { pnode(GPIO, 17, 61, DATAOUT, 2, 2), rnode(GIN, 17, 61, 10) },
  { pnode(GPIO, 17, 61, DATAOUT, 2, 3), rnode(GIN, 17, 61, 11) },
  { pnode(GPIO, 17, 61, DATAOUT, 2, 4), rnode(GIN, 17, 61, 12) },
  { pnode(GPIO, 17, 61, OEIN, 2, 0), rnode(GOUT, 17, 61, 16) },
  { pnode(GPIO, 17, 61, OEIN, 2, 1), rnode(GOUT, 17, 61, 24) },
  { pnode(GPIO, 17, 61, BSLIPMAX, 2, -1), rnode(GIN, 17, 61, 7) },
  { pnode(GPIO, 17, 61, CEIN, 2, -1), rnode(GOUT, 17, 61, 20) },
  { pnode(GPIO, 17, 61, CEOUT, 2, -1), rnode(GOUT, 17, 61, 13) },
  { pnode(GPIO, 17, 61, SCLR, 2, -1), rnode(GOUT, 17, 61, 25) },
  { pnode(GPIO, 17, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 17, 61, 5) },
  { pnode(GPIO, 17, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 17, 61, 7) },
  { pnode(GPIO, 17, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 17, 61, 1) },
  { pnode(GPIO, 17, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 17, 61, 3) },
  { pnode(GPIO, 17, 61, DATAIN, 3, 0), rnode(GOUT, 17, 61, 3) },
  { pnode(GPIO, 17, 61, DATAIN, 3, 1), rnode(GOUT, 17, 61, 17) },
  { pnode(GPIO, 17, 61, DATAIN, 3, 2), rnode(GOUT, 17, 61, 8) },
  { pnode(GPIO, 17, 61, DATAIN, 3, 3), rnode(GOUT, 17, 61, 18) },
  { pnode(GPIO, 17, 61, DATAOUT, 3, 0), rnode(GIN, 17, 61, 2) },
  { pnode(GPIO, 17, 61, DATAOUT, 3, 1), rnode(GIN, 17, 61, 3) },
  { pnode(GPIO, 17, 61, DATAOUT, 3, 2), rnode(GIN, 17, 61, 4) },
  { pnode(GPIO, 17, 61, DATAOUT, 3, 3), rnode(GIN, 17, 61, 5) },
  { pnode(GPIO, 17, 61, DATAOUT, 3, 4), rnode(GIN, 17, 61, 6) },
  { pnode(GPIO, 17, 61, OEIN, 3, 0), rnode(GOUT, 17, 61, 2) },
  { pnode(GPIO, 17, 61, OEIN, 3, 1), rnode(GOUT, 17, 61, 19) },
  { pnode(GPIO, 17, 61, BSLIPMAX, 3, -1), rnode(GIN, 17, 61, 1) },
  { pnode(GPIO, 17, 61, CEIN, 3, -1), rnode(GOUT, 17, 61, 5) },
  { pnode(GPIO, 17, 61, CEOUT, 3, -1), rnode(GOUT, 17, 61, 4) },
  { pnode(GPIO, 17, 61, ACLR, 3, -1), rnode(GOUT, 17, 61, 12) },
  { pnode(GPIO, 17, 61, SCLR, 3, -1), rnode(GOUT, 17, 61, 1) },
  { pnode(GPIO, 17, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 17, 61, 4) },
  { pnode(GPIO, 17, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 17, 61, 6) },
  { pnode(GPIO, 17, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 17, 61, 0) },
  { pnode(GPIO, 17, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 17, 61, 2) },
  { pnode(GPIO, 18, 0, DATAOUT, 0, 0), rnode(GIN, 18, 0, 18) },
  { pnode(GPIO, 18, 0, DATAOUT, 0, 1), rnode(GIN, 18, 0, 17) },
  { pnode(GPIO, 18, 0, DATAOUT, 0, 2), rnode(GIN, 18, 0, 16) },
  { pnode(GPIO, 18, 0, DATAOUT, 0, 3), rnode(GIN, 18, 0, 15) },
  { pnode(GPIO, 18, 0, DATAOUT, 0, 4), rnode(GIN, 18, 0, 14) },
  { pnode(GPIO, 18, 0, OEIN, 0, 0), rnode(GOUT, 18, 0, 38) },
  { pnode(GPIO, 18, 0, OEIN, 0, 1), rnode(GOUT, 18, 0, 30) },
  { pnode(GPIO, 18, 0, BSLIPMAX, 0, -1), rnode(GIN, 18, 0, 19) },
  { pnode(GPIO, 18, 0, CEIN, 0, -1), rnode(GOUT, 18, 0, 27) },
  { pnode(GPIO, 18, 0, CEOUT, 0, -1), rnode(GOUT, 18, 0, 45) },
  { pnode(GPIO, 18, 0, ACLR, 0, -1), rnode(GOUT, 18, 0, 28) },
  { pnode(GPIO, 18, 0, SCLR, 0, -1), rnode(GOUT, 18, 0, 31) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 18, 0, 10) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 18, 0, 8) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 18, 0, 14) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 18, 0, 12) },
  { pnode(GPIO, 18, 0, DATAOUT, 1, 0), rnode(GIN, 18, 0, 24) },
  { pnode(GPIO, 18, 0, DATAOUT, 1, 1), rnode(GIN, 18, 0, 23) },
  { pnode(GPIO, 18, 0, DATAOUT, 1, 2), rnode(GIN, 18, 0, 22) },
  { pnode(GPIO, 18, 0, DATAOUT, 1, 3), rnode(GIN, 18, 0, 21) },
  { pnode(GPIO, 18, 0, DATAOUT, 1, 4), rnode(GIN, 18, 0, 20) },
  { pnode(GPIO, 18, 0, OEIN, 1, 0), rnode(GOUT, 18, 0, 47) },
  { pnode(GPIO, 18, 0, OEIN, 1, 1), rnode(GOUT, 18, 0, 39) },
  { pnode(GPIO, 18, 0, BSLIPMAX, 1, -1), rnode(GIN, 18, 0, 25) },
  { pnode(GPIO, 18, 0, CEIN, 1, -1), rnode(GOUT, 18, 0, 51) },
  { pnode(GPIO, 18, 0, CEOUT, 1, -1), rnode(GOUT, 18, 0, 50) },
  { pnode(GPIO, 18, 0, ACLR, 1, -1), rnode(GOUT, 18, 0, 42) },
  { pnode(GPIO, 18, 0, SCLR, 1, -1), rnode(GOUT, 18, 0, 46) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 18, 0, 11) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 18, 0, 9) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 18, 0, 15) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 18, 0, 13) },
  { pnode(GPIO, 18, 0, DATAOUT, 2, 0), rnode(GIN, 18, 0, 8) },
  { pnode(GPIO, 18, 0, DATAOUT, 2, 1), rnode(GIN, 18, 0, 9) },
  { pnode(GPIO, 18, 0, DATAOUT, 2, 2), rnode(GIN, 18, 0, 10) },
  { pnode(GPIO, 18, 0, DATAOUT, 2, 3), rnode(GIN, 18, 0, 11) },
  { pnode(GPIO, 18, 0, DATAOUT, 2, 4), rnode(GIN, 18, 0, 12) },
  { pnode(GPIO, 18, 0, OEIN, 2, 0), rnode(GOUT, 18, 0, 16) },
  { pnode(GPIO, 18, 0, OEIN, 2, 1), rnode(GOUT, 18, 0, 24) },
  { pnode(GPIO, 18, 0, BSLIPMAX, 2, -1), rnode(GIN, 18, 0, 7) },
  { pnode(GPIO, 18, 0, CEIN, 2, -1), rnode(GOUT, 18, 0, 20) },
  { pnode(GPIO, 18, 0, CEOUT, 2, -1), rnode(GOUT, 18, 0, 13) },
  { pnode(GPIO, 18, 0, SCLR, 2, -1), rnode(GOUT, 18, 0, 25) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 18, 0, 5) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 18, 0, 7) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 18, 0, 1) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 18, 0, 3) },
  { pnode(GPIO, 18, 0, DATAOUT, 3, 0), rnode(GIN, 18, 0, 2) },
  { pnode(GPIO, 18, 0, DATAOUT, 3, 1), rnode(GIN, 18, 0, 3) },
  { pnode(GPIO, 18, 0, DATAOUT, 3, 2), rnode(GIN, 18, 0, 4) },
  { pnode(GPIO, 18, 0, DATAOUT, 3, 3), rnode(GIN, 18, 0, 5) },
  { pnode(GPIO, 18, 0, DATAOUT, 3, 4), rnode(GIN, 18, 0, 6) },
  { pnode(GPIO, 18, 0, OEIN, 3, 0), rnode(GOUT, 18, 0, 2) },
  { pnode(GPIO, 18, 0, OEIN, 3, 1), rnode(GOUT, 18, 0, 19) },
  { pnode(GPIO, 18, 0, BSLIPMAX, 3, -1), rnode(GIN, 18, 0, 1) },
  { pnode(GPIO, 18, 0, CEIN, 3, -1), rnode(GOUT, 18, 0, 5) },
  { pnode(GPIO, 18, 0, CEOUT, 3, -1), rnode(GOUT, 18, 0, 4) },
  { pnode(GPIO, 18, 0, SCLR, 3, -1), rnode(GOUT, 18, 0, 1) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 18, 0, 4) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 18, 0, 6) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 18, 0, 0) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 18, 0, 2) },
  { pnode(GPIO, 18, 61, DATAOUT, 0, 0), rnode(GIN, 18, 61, 18) },
  { pnode(GPIO, 18, 61, DATAOUT, 0, 1), rnode(GIN, 18, 61, 17) },
  { pnode(GPIO, 18, 61, DATAOUT, 0, 2), rnode(GIN, 18, 61, 16) },
  { pnode(GPIO, 18, 61, DATAOUT, 0, 3), rnode(GIN, 18, 61, 15) },
  { pnode(GPIO, 18, 61, DATAOUT, 0, 4), rnode(GIN, 18, 61, 14) },
  { pnode(GPIO, 18, 61, OEIN, 0, 0), rnode(GOUT, 18, 61, 38) },
  { pnode(GPIO, 18, 61, OEIN, 0, 1), rnode(GOUT, 18, 61, 30) },
  { pnode(GPIO, 18, 61, BSLIPMAX, 0, -1), rnode(GIN, 18, 61, 19) },
  { pnode(GPIO, 18, 61, CEIN, 0, -1), rnode(GOUT, 18, 61, 27) },
  { pnode(GPIO, 18, 61, CEOUT, 0, -1), rnode(GOUT, 18, 61, 45) },
  { pnode(GPIO, 18, 61, ACLR, 0, -1), rnode(GOUT, 18, 61, 28) },
  { pnode(GPIO, 18, 61, SCLR, 0, -1), rnode(GOUT, 18, 61, 31) },
  { pnode(GPIO, 18, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 18, 61, 10) },
  { pnode(GPIO, 18, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 18, 61, 8) },
  { pnode(GPIO, 18, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 18, 61, 14) },
  { pnode(GPIO, 18, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 18, 61, 12) },
  { pnode(GPIO, 18, 61, DATAOUT, 1, 0), rnode(GIN, 18, 61, 24) },
  { pnode(GPIO, 18, 61, DATAOUT, 1, 1), rnode(GIN, 18, 61, 23) },
  { pnode(GPIO, 18, 61, DATAOUT, 1, 2), rnode(GIN, 18, 61, 22) },
  { pnode(GPIO, 18, 61, DATAOUT, 1, 3), rnode(GIN, 18, 61, 21) },
  { pnode(GPIO, 18, 61, DATAOUT, 1, 4), rnode(GIN, 18, 61, 20) },
  { pnode(GPIO, 18, 61, OEIN, 1, 0), rnode(GOUT, 18, 61, 47) },
  { pnode(GPIO, 18, 61, OEIN, 1, 1), rnode(GOUT, 18, 61, 39) },
  { pnode(GPIO, 18, 61, BSLIPMAX, 1, -1), rnode(GIN, 18, 61, 25) },
  { pnode(GPIO, 18, 61, CEIN, 1, -1), rnode(GOUT, 18, 61, 51) },
  { pnode(GPIO, 18, 61, CEOUT, 1, -1), rnode(GOUT, 18, 61, 50) },
  { pnode(GPIO, 18, 61, ACLR, 1, -1), rnode(GOUT, 18, 61, 42) },
  { pnode(GPIO, 18, 61, SCLR, 1, -1), rnode(GOUT, 18, 61, 46) },
  { pnode(GPIO, 18, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 18, 61, 11) },
  { pnode(GPIO, 18, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 18, 61, 9) },
  { pnode(GPIO, 18, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 18, 61, 15) },
  { pnode(GPIO, 18, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 18, 61, 13) },
  { pnode(GPIO, 18, 61, DATAOUT, 2, 0), rnode(GIN, 18, 61, 8) },
  { pnode(GPIO, 18, 61, DATAOUT, 2, 1), rnode(GIN, 18, 61, 9) },
  { pnode(GPIO, 18, 61, DATAOUT, 2, 2), rnode(GIN, 18, 61, 10) },
  { pnode(GPIO, 18, 61, DATAOUT, 2, 3), rnode(GIN, 18, 61, 11) },
  { pnode(GPIO, 18, 61, DATAOUT, 2, 4), rnode(GIN, 18, 61, 12) },
  { pnode(GPIO, 18, 61, OEIN, 2, 0), rnode(GOUT, 18, 61, 16) },
  { pnode(GPIO, 18, 61, OEIN, 2, 1), rnode(GOUT, 18, 61, 24) },
  { pnode(GPIO, 18, 61, BSLIPMAX, 2, -1), rnode(GIN, 18, 61, 7) },
  { pnode(GPIO, 18, 61, CEIN, 2, -1), rnode(GOUT, 18, 61, 20) },
  { pnode(GPIO, 18, 61, CEOUT, 2, -1), rnode(GOUT, 18, 61, 13) },
  { pnode(GPIO, 18, 61, SCLR, 2, -1), rnode(GOUT, 18, 61, 25) },
  { pnode(GPIO, 18, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 18, 61, 5) },
  { pnode(GPIO, 18, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 18, 61, 7) },
  { pnode(GPIO, 18, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 18, 61, 1) },
  { pnode(GPIO, 18, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 18, 61, 3) },
  { pnode(GPIO, 18, 61, DATAOUT, 3, 0), rnode(GIN, 18, 61, 2) },
  { pnode(GPIO, 18, 61, DATAOUT, 3, 1), rnode(GIN, 18, 61, 3) },
  { pnode(GPIO, 18, 61, DATAOUT, 3, 2), rnode(GIN, 18, 61, 4) },
  { pnode(GPIO, 18, 61, DATAOUT, 3, 3), rnode(GIN, 18, 61, 5) },
  { pnode(GPIO, 18, 61, DATAOUT, 3, 4), rnode(GIN, 18, 61, 6) },
  { pnode(GPIO, 18, 61, OEIN, 3, 0), rnode(GOUT, 18, 61, 2) },
  { pnode(GPIO, 18, 61, OEIN, 3, 1), rnode(GOUT, 18, 61, 19) },
  { pnode(GPIO, 18, 61, BSLIPMAX, 3, -1), rnode(GIN, 18, 61, 1) },
  { pnode(GPIO, 18, 61, CEIN, 3, -1), rnode(GOUT, 18, 61, 5) },
  { pnode(GPIO, 18, 61, CEOUT, 3, -1), rnode(GOUT, 18, 61, 4) },
  { pnode(GPIO, 18, 61, SCLR, 3, -1), rnode(GOUT, 18, 61, 1) },
  { pnode(GPIO, 18, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 18, 61, 4) },
  { pnode(GPIO, 18, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 18, 61, 6) },
  { pnode(GPIO, 18, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 18, 61, 0) },
  { pnode(GPIO, 18, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 18, 61, 2) },
  { pnode(GPIO, 19, 0, DATAOUT, 0, 0), rnode(GIN, 19, 0, 18) },
  { pnode(GPIO, 19, 0, DATAOUT, 0, 1), rnode(GIN, 19, 0, 17) },
  { pnode(GPIO, 19, 0, DATAOUT, 0, 2), rnode(GIN, 19, 0, 16) },
  { pnode(GPIO, 19, 0, DATAOUT, 0, 3), rnode(GIN, 19, 0, 15) },
  { pnode(GPIO, 19, 0, DATAOUT, 0, 4), rnode(GIN, 19, 0, 14) },
  { pnode(GPIO, 19, 0, OEIN, 0, 0), rnode(GOUT, 19, 0, 38) },
  { pnode(GPIO, 19, 0, OEIN, 0, 1), rnode(GOUT, 19, 0, 30) },
  { pnode(GPIO, 19, 0, BSLIPMAX, 0, -1), rnode(GIN, 19, 0, 19) },
  { pnode(GPIO, 19, 0, CEIN, 0, -1), rnode(GOUT, 19, 0, 27) },
  { pnode(GPIO, 19, 0, CEOUT, 0, -1), rnode(GOUT, 19, 0, 45) },
  { pnode(GPIO, 19, 0, SCLR, 0, -1), rnode(GOUT, 19, 0, 31) },
  { pnode(GPIO, 19, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 19, 0, 10) },
  { pnode(GPIO, 19, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 19, 0, 8) },
  { pnode(GPIO, 19, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 19, 0, 14) },
  { pnode(GPIO, 19, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 19, 0, 12) },
  { pnode(GPIO, 19, 0, DATAOUT, 1, 0), rnode(GIN, 19, 0, 24) },
  { pnode(GPIO, 19, 0, DATAOUT, 1, 1), rnode(GIN, 19, 0, 23) },
  { pnode(GPIO, 19, 0, DATAOUT, 1, 2), rnode(GIN, 19, 0, 22) },
  { pnode(GPIO, 19, 0, DATAOUT, 1, 3), rnode(GIN, 19, 0, 21) },
  { pnode(GPIO, 19, 0, DATAOUT, 1, 4), rnode(GIN, 19, 0, 20) },
  { pnode(GPIO, 19, 0, OEIN, 1, 0), rnode(GOUT, 19, 0, 47) },
  { pnode(GPIO, 19, 0, OEIN, 1, 1), rnode(GOUT, 19, 0, 39) },
  { pnode(GPIO, 19, 0, BSLIPMAX, 1, -1), rnode(GIN, 19, 0, 25) },
  { pnode(GPIO, 19, 0, CEIN, 1, -1), rnode(GOUT, 19, 0, 51) },
  { pnode(GPIO, 19, 0, CEOUT, 1, -1), rnode(GOUT, 19, 0, 50) },
  { pnode(GPIO, 19, 0, SCLR, 1, -1), rnode(GOUT, 19, 0, 46) },
  { pnode(GPIO, 19, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 19, 0, 11) },
  { pnode(GPIO, 19, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 19, 0, 9) },
  { pnode(GPIO, 19, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 19, 0, 15) },
  { pnode(GPIO, 19, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 19, 0, 13) },
  { pnode(GPIO, 19, 0, DATAOUT, 2, 0), rnode(GIN, 19, 0, 8) },
  { pnode(GPIO, 19, 0, DATAOUT, 2, 1), rnode(GIN, 19, 0, 9) },
  { pnode(GPIO, 19, 0, DATAOUT, 2, 2), rnode(GIN, 19, 0, 10) },
  { pnode(GPIO, 19, 0, DATAOUT, 2, 3), rnode(GIN, 19, 0, 11) },
  { pnode(GPIO, 19, 0, DATAOUT, 2, 4), rnode(GIN, 19, 0, 12) },
  { pnode(GPIO, 19, 0, OEIN, 2, 0), rnode(GOUT, 19, 0, 16) },
  { pnode(GPIO, 19, 0, OEIN, 2, 1), rnode(GOUT, 19, 0, 24) },
  { pnode(GPIO, 19, 0, BSLIPMAX, 2, -1), rnode(GIN, 19, 0, 7) },
  { pnode(GPIO, 19, 0, CEIN, 2, -1), rnode(GOUT, 19, 0, 20) },
  { pnode(GPIO, 19, 0, CEOUT, 2, -1), rnode(GOUT, 19, 0, 13) },
  { pnode(GPIO, 19, 0, SCLR, 2, -1), rnode(GOUT, 19, 0, 25) },
  { pnode(GPIO, 19, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 19, 0, 5) },
  { pnode(GPIO, 19, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 19, 0, 7) },
  { pnode(GPIO, 19, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 19, 0, 1) },
  { pnode(GPIO, 19, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 19, 0, 3) },
  { pnode(GPIO, 19, 0, DATAOUT, 3, 0), rnode(GIN, 19, 0, 2) },
  { pnode(GPIO, 19, 0, DATAOUT, 3, 1), rnode(GIN, 19, 0, 3) },
  { pnode(GPIO, 19, 0, DATAOUT, 3, 2), rnode(GIN, 19, 0, 4) },
  { pnode(GPIO, 19, 0, DATAOUT, 3, 3), rnode(GIN, 19, 0, 5) },
  { pnode(GPIO, 19, 0, DATAOUT, 3, 4), rnode(GIN, 19, 0, 6) },
  { pnode(GPIO, 19, 0, OEIN, 3, 0), rnode(GOUT, 19, 0, 2) },
  { pnode(GPIO, 19, 0, OEIN, 3, 1), rnode(GOUT, 19, 0, 19) },
  { pnode(GPIO, 19, 0, BSLIPMAX, 3, -1), rnode(GIN, 19, 0, 1) },
  { pnode(GPIO, 19, 0, CEIN, 3, -1), rnode(GOUT, 19, 0, 5) },
  { pnode(GPIO, 19, 0, CEOUT, 3, -1), rnode(GOUT, 19, 0, 4) },
  { pnode(GPIO, 19, 0, SCLR, 3, -1), rnode(GOUT, 19, 0, 1) },
  { pnode(GPIO, 19, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 19, 0, 4) },
  { pnode(GPIO, 19, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 19, 0, 6) },
  { pnode(GPIO, 19, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 19, 0, 0) },
  { pnode(GPIO, 19, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 19, 0, 2) },
  { pnode(GPIO, 19, 61, DATAOUT, 0, 0), rnode(GIN, 19, 61, 18) },
  { pnode(GPIO, 19, 61, DATAOUT, 0, 1), rnode(GIN, 19, 61, 17) },
  { pnode(GPIO, 19, 61, DATAOUT, 0, 2), rnode(GIN, 19, 61, 16) },
  { pnode(GPIO, 19, 61, DATAOUT, 0, 3), rnode(GIN, 19, 61, 15) },
  { pnode(GPIO, 19, 61, DATAOUT, 0, 4), rnode(GIN, 19, 61, 14) },
  { pnode(GPIO, 19, 61, OEIN, 0, 0), rnode(GOUT, 19, 61, 38) },
  { pnode(GPIO, 19, 61, OEIN, 0, 1), rnode(GOUT, 19, 61, 30) },
  { pnode(GPIO, 19, 61, BSLIPMAX, 0, -1), rnode(GIN, 19, 61, 19) },
  { pnode(GPIO, 19, 61, CEIN, 0, -1), rnode(GOUT, 19, 61, 27) },
  { pnode(GPIO, 19, 61, CEOUT, 0, -1), rnode(GOUT, 19, 61, 45) },
  { pnode(GPIO, 19, 61, SCLR, 0, -1), rnode(GOUT, 19, 61, 31) },
  { pnode(GPIO, 19, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 19, 61, 10) },
  { pnode(GPIO, 19, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 19, 61, 8) },
  { pnode(GPIO, 19, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 19, 61, 14) },
  { pnode(GPIO, 19, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 19, 61, 12) },
  { pnode(GPIO, 19, 61, DATAOUT, 1, 0), rnode(GIN, 19, 61, 24) },
  { pnode(GPIO, 19, 61, DATAOUT, 1, 1), rnode(GIN, 19, 61, 23) },
  { pnode(GPIO, 19, 61, DATAOUT, 1, 2), rnode(GIN, 19, 61, 22) },
  { pnode(GPIO, 19, 61, DATAOUT, 1, 3), rnode(GIN, 19, 61, 21) },
  { pnode(GPIO, 19, 61, DATAOUT, 1, 4), rnode(GIN, 19, 61, 20) },
  { pnode(GPIO, 19, 61, OEIN, 1, 0), rnode(GOUT, 19, 61, 47) },
  { pnode(GPIO, 19, 61, OEIN, 1, 1), rnode(GOUT, 19, 61, 39) },
  { pnode(GPIO, 19, 61, BSLIPMAX, 1, -1), rnode(GIN, 19, 61, 25) },
  { pnode(GPIO, 19, 61, CEIN, 1, -1), rnode(GOUT, 19, 61, 51) },
  { pnode(GPIO, 19, 61, CEOUT, 1, -1), rnode(GOUT, 19, 61, 50) },
  { pnode(GPIO, 19, 61, SCLR, 1, -1), rnode(GOUT, 19, 61, 46) },
  { pnode(GPIO, 19, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 19, 61, 11) },
  { pnode(GPIO, 19, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 19, 61, 9) },
  { pnode(GPIO, 19, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 19, 61, 15) },
  { pnode(GPIO, 19, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 19, 61, 13) },
  { pnode(GPIO, 19, 61, DATAOUT, 2, 0), rnode(GIN, 19, 61, 8) },
  { pnode(GPIO, 19, 61, DATAOUT, 2, 1), rnode(GIN, 19, 61, 9) },
  { pnode(GPIO, 19, 61, DATAOUT, 2, 2), rnode(GIN, 19, 61, 10) },
  { pnode(GPIO, 19, 61, DATAOUT, 2, 3), rnode(GIN, 19, 61, 11) },
  { pnode(GPIO, 19, 61, DATAOUT, 2, 4), rnode(GIN, 19, 61, 12) },
  { pnode(GPIO, 19, 61, OEIN, 2, 0), rnode(GOUT, 19, 61, 16) },
  { pnode(GPIO, 19, 61, OEIN, 2, 1), rnode(GOUT, 19, 61, 24) },
  { pnode(GPIO, 19, 61, BSLIPMAX, 2, -1), rnode(GIN, 19, 61, 7) },
  { pnode(GPIO, 19, 61, CEIN, 2, -1), rnode(GOUT, 19, 61, 20) },
  { pnode(GPIO, 19, 61, CEOUT, 2, -1), rnode(GOUT, 19, 61, 13) },
  { pnode(GPIO, 19, 61, SCLR, 2, -1), rnode(GOUT, 19, 61, 25) },
  { pnode(GPIO, 19, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 19, 61, 5) },
  { pnode(GPIO, 19, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 19, 61, 7) },
  { pnode(GPIO, 19, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 19, 61, 1) },
  { pnode(GPIO, 19, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 19, 61, 3) },
  { pnode(GPIO, 19, 61, DATAOUT, 3, 0), rnode(GIN, 19, 61, 2) },
  { pnode(GPIO, 19, 61, DATAOUT, 3, 1), rnode(GIN, 19, 61, 3) },
  { pnode(GPIO, 19, 61, DATAOUT, 3, 2), rnode(GIN, 19, 61, 4) },
  { pnode(GPIO, 19, 61, DATAOUT, 3, 3), rnode(GIN, 19, 61, 5) },
  { pnode(GPIO, 19, 61, DATAOUT, 3, 4), rnode(GIN, 19, 61, 6) },
  { pnode(GPIO, 19, 61, OEIN, 3, 0), rnode(GOUT, 19, 61, 2) },
  { pnode(GPIO, 19, 61, OEIN, 3, 1), rnode(GOUT, 19, 61, 19) },
  { pnode(GPIO, 19, 61, BSLIPMAX, 3, -1), rnode(GIN, 19, 61, 1) },
  { pnode(GPIO, 19, 61, CEIN, 3, -1), rnode(GOUT, 19, 61, 5) },
  { pnode(GPIO, 19, 61, CEOUT, 3, -1), rnode(GOUT, 19, 61, 4) },
  { pnode(GPIO, 19, 61, SCLR, 3, -1), rnode(GOUT, 19, 61, 1) },
  { pnode(GPIO, 19, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 19, 61, 4) },
  { pnode(GPIO, 19, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 19, 61, 6) },
  { pnode(GPIO, 19, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 19, 61, 0) },
  { pnode(GPIO, 19, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 19, 61, 2) },
  { pnode(GPIO, 21, 0, DATAIN, 0, 0), rnode(GOUT, 21, 0, 44) },
  { pnode(GPIO, 21, 0, DATAIN, 0, 1), rnode(GOUT, 21, 0, 34) },
  { pnode(GPIO, 21, 0, DATAIN, 0, 2), rnode(GOUT, 21, 0, 43) },
  { pnode(GPIO, 21, 0, DATAIN, 0, 3), rnode(GOUT, 21, 0, 29) },
  { pnode(GPIO, 21, 0, DATAOUT, 0, 0), rnode(GIN, 21, 0, 18) },
  { pnode(GPIO, 21, 0, DATAOUT, 0, 1), rnode(GIN, 21, 0, 17) },
  { pnode(GPIO, 21, 0, DATAOUT, 0, 2), rnode(GIN, 21, 0, 16) },
  { pnode(GPIO, 21, 0, DATAOUT, 0, 3), rnode(GIN, 21, 0, 15) },
  { pnode(GPIO, 21, 0, DATAOUT, 0, 4), rnode(GIN, 21, 0, 14) },
  { pnode(GPIO, 21, 0, OEIN, 0, 0), rnode(GOUT, 21, 0, 38) },
  { pnode(GPIO, 21, 0, OEIN, 0, 1), rnode(GOUT, 21, 0, 30) },
  { pnode(GPIO, 21, 0, BSLIPMAX, 0, -1), rnode(GIN, 21, 0, 19) },
  { pnode(GPIO, 21, 0, CEIN, 0, -1), rnode(GOUT, 21, 0, 27) },
  { pnode(GPIO, 21, 0, CEOUT, 0, -1), rnode(GOUT, 21, 0, 45) },
  { pnode(GPIO, 21, 0, ACLR, 0, -1), rnode(GOUT, 21, 0, 28) },
  { pnode(GPIO, 21, 0, SCLR, 0, -1), rnode(GOUT, 21, 0, 31) },
  { pnode(GPIO, 21, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 21, 0, 10) },
  { pnode(GPIO, 21, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 21, 0, 8) },
  { pnode(GPIO, 21, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 21, 0, 14) },
  { pnode(GPIO, 21, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 21, 0, 12) },
  { pnode(GPIO, 21, 0, DATAIN, 1, 0), rnode(GOUT, 21, 0, 49) },
  { pnode(GPIO, 21, 0, DATAIN, 1, 1), rnode(GOUT, 21, 0, 41) },
  { pnode(GPIO, 21, 0, DATAIN, 1, 2), rnode(GOUT, 21, 0, 48) },
  { pnode(GPIO, 21, 0, DATAIN, 1, 3), rnode(GOUT, 21, 0, 40) },
  { pnode(GPIO, 21, 0, DATAOUT, 1, 0), rnode(GIN, 21, 0, 24) },
  { pnode(GPIO, 21, 0, DATAOUT, 1, 1), rnode(GIN, 21, 0, 23) },
  { pnode(GPIO, 21, 0, DATAOUT, 1, 2), rnode(GIN, 21, 0, 22) },
  { pnode(GPIO, 21, 0, DATAOUT, 1, 3), rnode(GIN, 21, 0, 21) },
  { pnode(GPIO, 21, 0, DATAOUT, 1, 4), rnode(GIN, 21, 0, 20) },
  { pnode(GPIO, 21, 0, OEIN, 1, 0), rnode(GOUT, 21, 0, 47) },
  { pnode(GPIO, 21, 0, OEIN, 1, 1), rnode(GOUT, 21, 0, 39) },
  { pnode(GPIO, 21, 0, BSLIPMAX, 1, -1), rnode(GIN, 21, 0, 25) },
  { pnode(GPIO, 21, 0, CEIN, 1, -1), rnode(GOUT, 21, 0, 51) },
  { pnode(GPIO, 21, 0, CEOUT, 1, -1), rnode(GOUT, 21, 0, 50) },
  { pnode(GPIO, 21, 0, ACLR, 1, -1), rnode(GOUT, 21, 0, 42) },
  { pnode(GPIO, 21, 0, SCLR, 1, -1), rnode(GOUT, 21, 0, 46) },
  { pnode(GPIO, 21, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 21, 0, 11) },
  { pnode(GPIO, 21, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 21, 0, 9) },
  { pnode(GPIO, 21, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 21, 0, 15) },
  { pnode(GPIO, 21, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 21, 0, 13) },
  { pnode(GPIO, 21, 0, DATAOUT, 2, 0), rnode(GIN, 21, 0, 8) },
  { pnode(GPIO, 21, 0, DATAOUT, 2, 1), rnode(GIN, 21, 0, 9) },
  { pnode(GPIO, 21, 0, DATAOUT, 2, 2), rnode(GIN, 21, 0, 10) },
  { pnode(GPIO, 21, 0, DATAOUT, 2, 3), rnode(GIN, 21, 0, 11) },
  { pnode(GPIO, 21, 0, DATAOUT, 2, 4), rnode(GIN, 21, 0, 12) },
  { pnode(GPIO, 21, 0, OEIN, 2, 0), rnode(GOUT, 21, 0, 16) },
  { pnode(GPIO, 21, 0, OEIN, 2, 1), rnode(GOUT, 21, 0, 24) },
  { pnode(GPIO, 21, 0, BSLIPMAX, 2, -1), rnode(GIN, 21, 0, 7) },
  { pnode(GPIO, 21, 0, CEIN, 2, -1), rnode(GOUT, 21, 0, 20) },
  { pnode(GPIO, 21, 0, CEOUT, 2, -1), rnode(GOUT, 21, 0, 13) },
  { pnode(GPIO, 21, 0, SCLR, 2, -1), rnode(GOUT, 21, 0, 25) },
  { pnode(GPIO, 21, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 21, 0, 5) },
  { pnode(GPIO, 21, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 21, 0, 7) },
  { pnode(GPIO, 21, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 21, 0, 1) },
  { pnode(GPIO, 21, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 21, 0, 3) },
  { pnode(GPIO, 21, 0, DATAOUT, 3, 0), rnode(GIN, 21, 0, 2) },
  { pnode(GPIO, 21, 0, DATAOUT, 3, 1), rnode(GIN, 21, 0, 3) },
  { pnode(GPIO, 21, 0, DATAOUT, 3, 2), rnode(GIN, 21, 0, 4) },
  { pnode(GPIO, 21, 0, DATAOUT, 3, 3), rnode(GIN, 21, 0, 5) },
  { pnode(GPIO, 21, 0, DATAOUT, 3, 4), rnode(GIN, 21, 0, 6) },
  { pnode(GPIO, 21, 0, OEIN, 3, 0), rnode(GOUT, 21, 0, 2) },
  { pnode(GPIO, 21, 0, OEIN, 3, 1), rnode(GOUT, 21, 0, 19) },
  { pnode(GPIO, 21, 0, BSLIPMAX, 3, -1), rnode(GIN, 21, 0, 1) },
  { pnode(GPIO, 21, 0, CEIN, 3, -1), rnode(GOUT, 21, 0, 5) },
  { pnode(GPIO, 21, 0, CEOUT, 3, -1), rnode(GOUT, 21, 0, 4) },
  { pnode(GPIO, 21, 0, SCLR, 3, -1), rnode(GOUT, 21, 0, 1) },
  { pnode(GPIO, 21, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 21, 0, 4) },
  { pnode(GPIO, 21, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 21, 0, 6) },
  { pnode(GPIO, 21, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 21, 0, 0) },
  { pnode(GPIO, 21, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 21, 0, 2) },
  { pnode(GPIO, 21, 61, DATAIN, 0, 0), rnode(GOUT, 21, 61, 44) },
  { pnode(GPIO, 21, 61, DATAIN, 0, 1), rnode(GOUT, 21, 61, 34) },
  { pnode(GPIO, 21, 61, DATAIN, 0, 2), rnode(GOUT, 21, 61, 43) },
  { pnode(GPIO, 21, 61, DATAIN, 0, 3), rnode(GOUT, 21, 61, 29) },
  { pnode(GPIO, 21, 61, DATAOUT, 0, 0), rnode(GIN, 21, 61, 18) },
  { pnode(GPIO, 21, 61, DATAOUT, 0, 1), rnode(GIN, 21, 61, 17) },
  { pnode(GPIO, 21, 61, DATAOUT, 0, 2), rnode(GIN, 21, 61, 16) },
  { pnode(GPIO, 21, 61, DATAOUT, 0, 3), rnode(GIN, 21, 61, 15) },
  { pnode(GPIO, 21, 61, DATAOUT, 0, 4), rnode(GIN, 21, 61, 14) },
  { pnode(GPIO, 21, 61, OEIN, 0, 0), rnode(GOUT, 21, 61, 38) },
  { pnode(GPIO, 21, 61, OEIN, 0, 1), rnode(GOUT, 21, 61, 30) },
  { pnode(GPIO, 21, 61, BSLIPMAX, 0, -1), rnode(GIN, 21, 61, 19) },
  { pnode(GPIO, 21, 61, CEIN, 0, -1), rnode(GOUT, 21, 61, 27) },
  { pnode(GPIO, 21, 61, CEOUT, 0, -1), rnode(GOUT, 21, 61, 45) },
  { pnode(GPIO, 21, 61, ACLR, 0, -1), rnode(GOUT, 21, 61, 28) },
  { pnode(GPIO, 21, 61, SCLR, 0, -1), rnode(GOUT, 21, 61, 31) },
  { pnode(GPIO, 21, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 21, 61, 10) },
  { pnode(GPIO, 21, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 21, 61, 8) },
  { pnode(GPIO, 21, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 21, 61, 14) },
  { pnode(GPIO, 21, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 21, 61, 12) },
  { pnode(GPIO, 21, 61, DATAIN, 1, 0), rnode(GOUT, 21, 61, 49) },
  { pnode(GPIO, 21, 61, DATAIN, 1, 1), rnode(GOUT, 21, 61, 41) },
  { pnode(GPIO, 21, 61, DATAIN, 1, 2), rnode(GOUT, 21, 61, 48) },
  { pnode(GPIO, 21, 61, DATAIN, 1, 3), rnode(GOUT, 21, 61, 40) },
  { pnode(GPIO, 21, 61, DATAOUT, 1, 0), rnode(GIN, 21, 61, 24) },
  { pnode(GPIO, 21, 61, DATAOUT, 1, 1), rnode(GIN, 21, 61, 23) },
  { pnode(GPIO, 21, 61, DATAOUT, 1, 2), rnode(GIN, 21, 61, 22) },
  { pnode(GPIO, 21, 61, DATAOUT, 1, 3), rnode(GIN, 21, 61, 21) },
  { pnode(GPIO, 21, 61, DATAOUT, 1, 4), rnode(GIN, 21, 61, 20) },
  { pnode(GPIO, 21, 61, OEIN, 1, 0), rnode(GOUT, 21, 61, 47) },
  { pnode(GPIO, 21, 61, OEIN, 1, 1), rnode(GOUT, 21, 61, 39) },
  { pnode(GPIO, 21, 61, BSLIPMAX, 1, -1), rnode(GIN, 21, 61, 25) },
  { pnode(GPIO, 21, 61, CEIN, 1, -1), rnode(GOUT, 21, 61, 51) },
  { pnode(GPIO, 21, 61, CEOUT, 1, -1), rnode(GOUT, 21, 61, 50) },
  { pnode(GPIO, 21, 61, ACLR, 1, -1), rnode(GOUT, 21, 61, 42) },
  { pnode(GPIO, 21, 61, SCLR, 1, -1), rnode(GOUT, 21, 61, 46) },
  { pnode(GPIO, 21, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 21, 61, 11) },
  { pnode(GPIO, 21, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 21, 61, 9) },
  { pnode(GPIO, 21, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 21, 61, 15) },
  { pnode(GPIO, 21, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 21, 61, 13) },
  { pnode(GPIO, 21, 61, DATAOUT, 2, 0), rnode(GIN, 21, 61, 8) },
  { pnode(GPIO, 21, 61, DATAOUT, 2, 1), rnode(GIN, 21, 61, 9) },
  { pnode(GPIO, 21, 61, DATAOUT, 2, 2), rnode(GIN, 21, 61, 10) },
  { pnode(GPIO, 21, 61, DATAOUT, 2, 3), rnode(GIN, 21, 61, 11) },
  { pnode(GPIO, 21, 61, DATAOUT, 2, 4), rnode(GIN, 21, 61, 12) },
  { pnode(GPIO, 21, 61, OEIN, 2, 0), rnode(GOUT, 21, 61, 16) },
  { pnode(GPIO, 21, 61, OEIN, 2, 1), rnode(GOUT, 21, 61, 24) },
  { pnode(GPIO, 21, 61, BSLIPMAX, 2, -1), rnode(GIN, 21, 61, 7) },
  { pnode(GPIO, 21, 61, CEIN, 2, -1), rnode(GOUT, 21, 61, 20) },
  { pnode(GPIO, 21, 61, CEOUT, 2, -1), rnode(GOUT, 21, 61, 13) },
  { pnode(GPIO, 21, 61, SCLR, 2, -1), rnode(GOUT, 21, 61, 25) },
  { pnode(GPIO, 21, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 21, 61, 5) },
  { pnode(GPIO, 21, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 21, 61, 7) },
  { pnode(GPIO, 21, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 21, 61, 1) },
  { pnode(GPIO, 21, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 21, 61, 3) },
  { pnode(GPIO, 21, 61, DATAOUT, 3, 0), rnode(GIN, 21, 61, 2) },
  { pnode(GPIO, 21, 61, DATAOUT, 3, 1), rnode(GIN, 21, 61, 3) },
  { pnode(GPIO, 21, 61, DATAOUT, 3, 2), rnode(GIN, 21, 61, 4) },
  { pnode(GPIO, 21, 61, DATAOUT, 3, 3), rnode(GIN, 21, 61, 5) },
  { pnode(GPIO, 21, 61, DATAOUT, 3, 4), rnode(GIN, 21, 61, 6) },
  { pnode(GPIO, 21, 61, OEIN, 3, 0), rnode(GOUT, 21, 61, 2) },
  { pnode(GPIO, 21, 61, OEIN, 3, 1), rnode(GOUT, 21, 61, 19) },
  { pnode(GPIO, 21, 61, BSLIPMAX, 3, -1), rnode(GIN, 21, 61, 1) },
  { pnode(GPIO, 21, 61, CEIN, 3, -1), rnode(GOUT, 21, 61, 5) },
  { pnode(GPIO, 21, 61, CEOUT, 3, -1), rnode(GOUT, 21, 61, 4) },
  { pnode(GPIO, 21, 61, SCLR, 3, -1), rnode(GOUT, 21, 61, 1) },
  { pnode(GPIO, 21, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 21, 61, 4) },
  { pnode(GPIO, 21, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 21, 61, 6) },
  { pnode(GPIO, 21, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 21, 61, 0) },
  { pnode(GPIO, 21, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 21, 61, 2) },
  { pnode(GPIO, 32, 0, DATAOUT, 0, 4), rnode(GIN, 32, 0, 14) },
  { pnode(GPIO, 32, 0, BSLIPMAX, 0, -1), rnode(GIN, 32, 0, 19) },
  { pnode(GPIO, 32, 0, CEIN, 0, -1), rnode(GOUT, 32, 0, 27) },
  { pnode(GPIO, 32, 0, CEOUT, 0, -1), rnode(GOUT, 32, 0, 45) },
  { pnode(GPIO, 32, 0, ACLR, 0, -1), rnode(GOUT, 32, 0, 28) },
  { pnode(GPIO, 32, 0, SCLR, 0, -1), rnode(GOUT, 32, 0, 31) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 32, 0, 10) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 32, 0, 8) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 32, 0, 14) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 32, 0, 12) },
  { pnode(GPIO, 32, 0, DATAOUT, 1, 4), rnode(GIN, 32, 0, 20) },
  { pnode(GPIO, 32, 0, BSLIPMAX, 1, -1), rnode(GIN, 32, 0, 25) },
  { pnode(GPIO, 32, 0, CEIN, 1, -1), rnode(GOUT, 32, 0, 51) },
  { pnode(GPIO, 32, 0, CEOUT, 1, -1), rnode(GOUT, 32, 0, 50) },
  { pnode(GPIO, 32, 0, ACLR, 1, -1), rnode(GOUT, 32, 0, 42) },
  { pnode(GPIO, 32, 0, SCLR, 1, -1), rnode(GOUT, 32, 0, 46) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 32, 0, 11) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 32, 0, 9) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 32, 0, 15) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 32, 0, 13) },
  { pnode(GPIO, 32, 0, DATAOUT, 2, 4), rnode(GIN, 32, 0, 12) },
  { pnode(GPIO, 32, 0, BSLIPMAX, 2, -1), rnode(GIN, 32, 0, 7) },
  { pnode(GPIO, 32, 0, CEIN, 2, -1), rnode(GOUT, 32, 0, 20) },
  { pnode(GPIO, 32, 0, CEOUT, 2, -1), rnode(GOUT, 32, 0, 13) },
  { pnode(GPIO, 32, 0, ACLR, 2, -1), rnode(GOUT, 32, 0, 21) },
  { pnode(GPIO, 32, 0, SCLR, 2, -1), rnode(GOUT, 32, 0, 25) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 32, 0, 5) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 32, 0, 7) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 32, 0, 1) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 32, 0, 3) },
  { pnode(GPIO, 32, 0, DATAIN, 3, 0), rnode(GOUT, 32, 0, 3) },
  { pnode(GPIO, 32, 0, DATAIN, 3, 1), rnode(GOUT, 32, 0, 17) },
  { pnode(GPIO, 32, 0, DATAIN, 3, 2), rnode(GOUT, 32, 0, 8) },
  { pnode(GPIO, 32, 0, DATAIN, 3, 3), rnode(GOUT, 32, 0, 18) },
  { pnode(GPIO, 32, 0, DATAOUT, 3, 0), rnode(GIN, 32, 0, 2) },
  { pnode(GPIO, 32, 0, DATAOUT, 3, 1), rnode(GIN, 32, 0, 3) },
  { pnode(GPIO, 32, 0, DATAOUT, 3, 2), rnode(GIN, 32, 0, 4) },
  { pnode(GPIO, 32, 0, DATAOUT, 3, 3), rnode(GIN, 32, 0, 5) },
  { pnode(GPIO, 32, 0, DATAOUT, 3, 4), rnode(GIN, 32, 0, 6) },
  { pnode(GPIO, 32, 0, OEIN, 3, 0), rnode(GOUT, 32, 0, 2) },
  { pnode(GPIO, 32, 0, OEIN, 3, 1), rnode(GOUT, 32, 0, 19) },
  { pnode(GPIO, 32, 0, BSLIPMAX, 3, -1), rnode(GIN, 32, 0, 1) },
  { pnode(GPIO, 32, 0, CEIN, 3, -1), rnode(GOUT, 32, 0, 5) },
  { pnode(GPIO, 32, 0, CEOUT, 3, -1), rnode(GOUT, 32, 0, 4) },
  { pnode(GPIO, 32, 0, ACLR, 3, -1), rnode(GOUT, 32, 0, 12) },
  { pnode(GPIO, 32, 0, SCLR, 3, -1), rnode(GOUT, 32, 0, 1) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 32, 0, 4) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 32, 0, 6) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 32, 0, 0) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 32, 0, 2) },
  { pnode(GPIO, 32, 61, DATAOUT, 0, 4), rnode(GIN, 32, 61, 14) },
  { pnode(GPIO, 32, 61, BSLIPMAX, 0, -1), rnode(GIN, 32, 61, 19) },
  { pnode(GPIO, 32, 61, CEIN, 0, -1), rnode(GOUT, 32, 61, 27) },
  { pnode(GPIO, 32, 61, CEOUT, 0, -1), rnode(GOUT, 32, 61, 45) },
  { pnode(GPIO, 32, 61, ACLR, 0, -1), rnode(GOUT, 32, 61, 28) },
  { pnode(GPIO, 32, 61, SCLR, 0, -1), rnode(GOUT, 32, 61, 31) },
  { pnode(GPIO, 32, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 32, 61, 10) },
  { pnode(GPIO, 32, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 32, 61, 8) },
  { pnode(GPIO, 32, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 32, 61, 14) },
  { pnode(GPIO, 32, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 32, 61, 12) },
  { pnode(GPIO, 32, 61, DATAOUT, 1, 4), rnode(GIN, 32, 61, 20) },
  { pnode(GPIO, 32, 61, BSLIPMAX, 1, -1), rnode(GIN, 32, 61, 25) },
  { pnode(GPIO, 32, 61, CEIN, 1, -1), rnode(GOUT, 32, 61, 51) },
  { pnode(GPIO, 32, 61, CEOUT, 1, -1), rnode(GOUT, 32, 61, 50) },
  { pnode(GPIO, 32, 61, ACLR, 1, -1), rnode(GOUT, 32, 61, 42) },
  { pnode(GPIO, 32, 61, SCLR, 1, -1), rnode(GOUT, 32, 61, 46) },
  { pnode(GPIO, 32, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 32, 61, 11) },
  { pnode(GPIO, 32, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 32, 61, 9) },
  { pnode(GPIO, 32, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 32, 61, 15) },
  { pnode(GPIO, 32, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 32, 61, 13) },
  { pnode(GPIO, 32, 61, DATAOUT, 2, 4), rnode(GIN, 32, 61, 12) },
  { pnode(GPIO, 32, 61, BSLIPMAX, 2, -1), rnode(GIN, 32, 61, 7) },
  { pnode(GPIO, 32, 61, CEIN, 2, -1), rnode(GOUT, 32, 61, 20) },
  { pnode(GPIO, 32, 61, CEOUT, 2, -1), rnode(GOUT, 32, 61, 13) },
  { pnode(GPIO, 32, 61, ACLR, 2, -1), rnode(GOUT, 32, 61, 21) },
  { pnode(GPIO, 32, 61, SCLR, 2, -1), rnode(GOUT, 32, 61, 25) },
  { pnode(GPIO, 32, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 32, 61, 5) },
  { pnode(GPIO, 32, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 32, 61, 7) },
  { pnode(GPIO, 32, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 32, 61, 1) },
  { pnode(GPIO, 32, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 32, 61, 3) },
  { pnode(GPIO, 32, 61, DATAIN, 3, 0), rnode(GOUT, 32, 61, 3) },
  { pnode(GPIO, 32, 61, DATAIN, 3, 1), rnode(GOUT, 32, 61, 17) },
  { pnode(GPIO, 32, 61, DATAIN, 3, 2), rnode(GOUT, 32, 61, 8) },
  { pnode(GPIO, 32, 61, DATAIN, 3, 3), rnode(GOUT, 32, 61, 18) },
  { pnode(GPIO, 32, 61, DATAOUT, 3, 0), rnode(GIN, 32, 61, 2) },
  { pnode(GPIO, 32, 61, DATAOUT, 3, 1), rnode(GIN, 32, 61, 3) },
  { pnode(GPIO, 32, 61, DATAOUT, 3, 2), rnode(GIN, 32, 61, 4) },
  { pnode(GPIO, 32, 61, DATAOUT, 3, 3), rnode(GIN, 32, 61, 5) },
  { pnode(GPIO, 32, 61, DATAOUT, 3, 4), rnode(GIN, 32, 61, 6) },
  { pnode(GPIO, 32, 61, OEIN, 3, 0), rnode(GOUT, 32, 61, 2) },
  { pnode(GPIO, 32, 61, OEIN, 3, 1), rnode(GOUT, 32, 61, 19) },
  { pnode(GPIO, 32, 61, BSLIPMAX, 3, -1), rnode(GIN, 32, 61, 1) },
  { pnode(GPIO, 32, 61, CEIN, 3, -1), rnode(GOUT, 32, 61, 5) },
  { pnode(GPIO, 32, 61, CEOUT, 3, -1), rnode(GOUT, 32, 61, 4) },
  { pnode(GPIO, 32, 61, ACLR, 3, -1), rnode(GOUT, 32, 61, 12) },
  { pnode(GPIO, 32, 61, SCLR, 3, -1), rnode(GOUT, 32, 61, 1) },
  { pnode(GPIO, 32, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 32, 61, 4) },
  { pnode(GPIO, 32, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 32, 61, 6) },
  { pnode(GPIO, 32, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 32, 61, 0) },
  { pnode(GPIO, 32, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 32, 61, 2) },
  { pnode(GPIO, 34, 0, DATAOUT, 0, 0), rnode(GIN, 34, 0, 18) },
  { pnode(GPIO, 34, 0, DATAOUT, 0, 1), rnode(GIN, 34, 0, 17) },
  { pnode(GPIO, 34, 0, DATAOUT, 0, 2), rnode(GIN, 34, 0, 16) },
  { pnode(GPIO, 34, 0, DATAOUT, 0, 3), rnode(GIN, 34, 0, 15) },
  { pnode(GPIO, 34, 0, DATAOUT, 0, 4), rnode(GIN, 34, 0, 14) },
  { pnode(GPIO, 34, 0, BSLIPMAX, 0, -1), rnode(GIN, 34, 0, 19) },
  { pnode(GPIO, 34, 0, CEIN, 0, -1), rnode(GOUT, 34, 0, 27) },
  { pnode(GPIO, 34, 0, CEOUT, 0, -1), rnode(GOUT, 34, 0, 45) },
  { pnode(GPIO, 34, 0, ACLR, 0, -1), rnode(GOUT, 34, 0, 28) },
  { pnode(GPIO, 34, 0, SCLR, 0, -1), rnode(GOUT, 34, 0, 31) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 34, 0, 10) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 34, 0, 8) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 34, 0, 14) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 34, 0, 12) },
  { pnode(GPIO, 34, 0, DATAOUT, 1, 0), rnode(GIN, 34, 0, 24) },
  { pnode(GPIO, 34, 0, DATAOUT, 1, 1), rnode(GIN, 34, 0, 23) },
  { pnode(GPIO, 34, 0, DATAOUT, 1, 2), rnode(GIN, 34, 0, 22) },
  { pnode(GPIO, 34, 0, DATAOUT, 1, 3), rnode(GIN, 34, 0, 21) },
  { pnode(GPIO, 34, 0, DATAOUT, 1, 4), rnode(GIN, 34, 0, 20) },
  { pnode(GPIO, 34, 0, BSLIPMAX, 1, -1), rnode(GIN, 34, 0, 25) },
  { pnode(GPIO, 34, 0, CEIN, 1, -1), rnode(GOUT, 34, 0, 51) },
  { pnode(GPIO, 34, 0, CEOUT, 1, -1), rnode(GOUT, 34, 0, 50) },
  { pnode(GPIO, 34, 0, ACLR, 1, -1), rnode(GOUT, 34, 0, 42) },
  { pnode(GPIO, 34, 0, SCLR, 1, -1), rnode(GOUT, 34, 0, 46) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 34, 0, 11) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 34, 0, 9) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 34, 0, 15) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 34, 0, 13) },
  { pnode(GPIO, 34, 0, DATAOUT, 2, 0), rnode(GIN, 34, 0, 8) },
  { pnode(GPIO, 34, 0, DATAOUT, 2, 1), rnode(GIN, 34, 0, 9) },
  { pnode(GPIO, 34, 0, DATAOUT, 2, 2), rnode(GIN, 34, 0, 10) },
  { pnode(GPIO, 34, 0, DATAOUT, 2, 3), rnode(GIN, 34, 0, 11) },
  { pnode(GPIO, 34, 0, DATAOUT, 2, 4), rnode(GIN, 34, 0, 12) },
  { pnode(GPIO, 34, 0, OEIN, 2, 0), rnode(GOUT, 34, 0, 16) },
  { pnode(GPIO, 34, 0, OEIN, 2, 1), rnode(GOUT, 34, 0, 24) },
  { pnode(GPIO, 34, 0, BSLIPMAX, 2, -1), rnode(GIN, 34, 0, 7) },
  { pnode(GPIO, 34, 0, CEIN, 2, -1), rnode(GOUT, 34, 0, 20) },
  { pnode(GPIO, 34, 0, CEOUT, 2, -1), rnode(GOUT, 34, 0, 13) },
  { pnode(GPIO, 34, 0, SCLR, 2, -1), rnode(GOUT, 34, 0, 25) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 34, 0, 5) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 34, 0, 7) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 34, 0, 1) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 34, 0, 3) },
  { pnode(GPIO, 34, 0, DATAOUT, 3, 4), rnode(GIN, 34, 0, 6) },
  { pnode(GPIO, 34, 0, BSLIPMAX, 3, -1), rnode(GIN, 34, 0, 1) },
  { pnode(GPIO, 34, 0, CEIN, 3, -1), rnode(GOUT, 34, 0, 5) },
  { pnode(GPIO, 34, 0, CEOUT, 3, -1), rnode(GOUT, 34, 0, 4) },
  { pnode(GPIO, 34, 0, ACLR, 3, -1), rnode(GOUT, 34, 0, 12) },
  { pnode(GPIO, 34, 0, SCLR, 3, -1), rnode(GOUT, 34, 0, 1) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 34, 0, 4) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 34, 0, 6) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 34, 0, 0) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 34, 0, 2) },
  { pnode(GPIO, 34, 61, DATAOUT, 0, 0), rnode(GIN, 34, 61, 18) },
  { pnode(GPIO, 34, 61, DATAOUT, 0, 1), rnode(GIN, 34, 61, 17) },
  { pnode(GPIO, 34, 61, DATAOUT, 0, 2), rnode(GIN, 34, 61, 16) },
  { pnode(GPIO, 34, 61, DATAOUT, 0, 3), rnode(GIN, 34, 61, 15) },
  { pnode(GPIO, 34, 61, DATAOUT, 0, 4), rnode(GIN, 34, 61, 14) },
  { pnode(GPIO, 34, 61, BSLIPMAX, 0, -1), rnode(GIN, 34, 61, 19) },
  { pnode(GPIO, 34, 61, CEIN, 0, -1), rnode(GOUT, 34, 61, 27) },
  { pnode(GPIO, 34, 61, CEOUT, 0, -1), rnode(GOUT, 34, 61, 45) },
  { pnode(GPIO, 34, 61, ACLR, 0, -1), rnode(GOUT, 34, 61, 28) },
  { pnode(GPIO, 34, 61, SCLR, 0, -1), rnode(GOUT, 34, 61, 31) },
  { pnode(GPIO, 34, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 34, 61, 10) },
  { pnode(GPIO, 34, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 34, 61, 8) },
  { pnode(GPIO, 34, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 34, 61, 14) },
  { pnode(GPIO, 34, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 34, 61, 12) },
  { pnode(GPIO, 34, 61, DATAOUT, 1, 0), rnode(GIN, 34, 61, 24) },
  { pnode(GPIO, 34, 61, DATAOUT, 1, 1), rnode(GIN, 34, 61, 23) },
  { pnode(GPIO, 34, 61, DATAOUT, 1, 2), rnode(GIN, 34, 61, 22) },
  { pnode(GPIO, 34, 61, DATAOUT, 1, 3), rnode(GIN, 34, 61, 21) },
  { pnode(GPIO, 34, 61, DATAOUT, 1, 4), rnode(GIN, 34, 61, 20) },
  { pnode(GPIO, 34, 61, BSLIPMAX, 1, -1), rnode(GIN, 34, 61, 25) },
  { pnode(GPIO, 34, 61, CEIN, 1, -1), rnode(GOUT, 34, 61, 51) },
  { pnode(GPIO, 34, 61, CEOUT, 1, -1), rnode(GOUT, 34, 61, 50) },
  { pnode(GPIO, 34, 61, ACLR, 1, -1), rnode(GOUT, 34, 61, 42) },
  { pnode(GPIO, 34, 61, SCLR, 1, -1), rnode(GOUT, 34, 61, 46) },
  { pnode(GPIO, 34, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 34, 61, 11) },
  { pnode(GPIO, 34, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 34, 61, 9) },
  { pnode(GPIO, 34, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 34, 61, 15) },
  { pnode(GPIO, 34, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 34, 61, 13) },
  { pnode(GPIO, 34, 61, DATAOUT, 2, 0), rnode(GIN, 34, 61, 8) },
  { pnode(GPIO, 34, 61, DATAOUT, 2, 1), rnode(GIN, 34, 61, 9) },
  { pnode(GPIO, 34, 61, DATAOUT, 2, 2), rnode(GIN, 34, 61, 10) },
  { pnode(GPIO, 34, 61, DATAOUT, 2, 3), rnode(GIN, 34, 61, 11) },
  { pnode(GPIO, 34, 61, DATAOUT, 2, 4), rnode(GIN, 34, 61, 12) },
  { pnode(GPIO, 34, 61, OEIN, 2, 0), rnode(GOUT, 34, 61, 16) },
  { pnode(GPIO, 34, 61, OEIN, 2, 1), rnode(GOUT, 34, 61, 24) },
  { pnode(GPIO, 34, 61, BSLIPMAX, 2, -1), rnode(GIN, 34, 61, 7) },
  { pnode(GPIO, 34, 61, CEIN, 2, -1), rnode(GOUT, 34, 61, 20) },
  { pnode(GPIO, 34, 61, CEOUT, 2, -1), rnode(GOUT, 34, 61, 13) },
  { pnode(GPIO, 34, 61, SCLR, 2, -1), rnode(GOUT, 34, 61, 25) },
  { pnode(GPIO, 34, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 34, 61, 5) },
  { pnode(GPIO, 34, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 34, 61, 7) },
  { pnode(GPIO, 34, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 34, 61, 1) },
  { pnode(GPIO, 34, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 34, 61, 3) },
  { pnode(GPIO, 34, 61, DATAOUT, 3, 4), rnode(GIN, 34, 61, 6) },
  { pnode(GPIO, 34, 61, BSLIPMAX, 3, -1), rnode(GIN, 34, 61, 1) },
  { pnode(GPIO, 34, 61, CEIN, 3, -1), rnode(GOUT, 34, 61, 5) },
  { pnode(GPIO, 34, 61, CEOUT, 3, -1), rnode(GOUT, 34, 61, 4) },
  { pnode(GPIO, 34, 61, ACLR, 3, -1), rnode(GOUT, 34, 61, 12) },
  { pnode(GPIO, 34, 61, SCLR, 3, -1), rnode(GOUT, 34, 61, 1) },
  { pnode(GPIO, 34, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 34, 61, 4) },
  { pnode(GPIO, 34, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 34, 61, 6) },
  { pnode(GPIO, 34, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 34, 61, 0) },
  { pnode(GPIO, 34, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 34, 61, 2) },
  { pnode(GPIO, 36, 0, DATAOUT, 0, 4), rnode(GIN, 36, 0, 14) },
  { pnode(GPIO, 36, 0, BSLIPMAX, 0, -1), rnode(GIN, 36, 0, 19) },
  { pnode(GPIO, 36, 0, CEIN, 0, -1), rnode(GOUT, 36, 0, 27) },
  { pnode(GPIO, 36, 0, CEOUT, 0, -1), rnode(GOUT, 36, 0, 45) },
  { pnode(GPIO, 36, 0, ACLR, 0, -1), rnode(GOUT, 36, 0, 28) },
  { pnode(GPIO, 36, 0, SCLR, 0, -1), rnode(GOUT, 36, 0, 31) },
  { pnode(GPIO, 36, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 36, 0, 10) },
  { pnode(GPIO, 36, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 36, 0, 8) },
  { pnode(GPIO, 36, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 36, 0, 14) },
  { pnode(GPIO, 36, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 36, 0, 12) },
  { pnode(GPIO, 36, 0, DATAOUT, 1, 4), rnode(GIN, 36, 0, 20) },
  { pnode(GPIO, 36, 0, BSLIPMAX, 1, -1), rnode(GIN, 36, 0, 25) },
  { pnode(GPIO, 36, 0, CEIN, 1, -1), rnode(GOUT, 36, 0, 51) },
  { pnode(GPIO, 36, 0, CEOUT, 1, -1), rnode(GOUT, 36, 0, 50) },
  { pnode(GPIO, 36, 0, ACLR, 1, -1), rnode(GOUT, 36, 0, 42) },
  { pnode(GPIO, 36, 0, SCLR, 1, -1), rnode(GOUT, 36, 0, 46) },
  { pnode(GPIO, 36, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 36, 0, 11) },
  { pnode(GPIO, 36, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 36, 0, 9) },
  { pnode(GPIO, 36, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 36, 0, 15) },
  { pnode(GPIO, 36, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 36, 0, 13) },
  { pnode(GPIO, 36, 0, DATAOUT, 2, 4), rnode(GIN, 36, 0, 12) },
  { pnode(GPIO, 36, 0, BSLIPMAX, 2, -1), rnode(GIN, 36, 0, 7) },
  { pnode(GPIO, 36, 0, CEIN, 2, -1), rnode(GOUT, 36, 0, 20) },
  { pnode(GPIO, 36, 0, CEOUT, 2, -1), rnode(GOUT, 36, 0, 13) },
  { pnode(GPIO, 36, 0, ACLR, 2, -1), rnode(GOUT, 36, 0, 21) },
  { pnode(GPIO, 36, 0, SCLR, 2, -1), rnode(GOUT, 36, 0, 25) },
  { pnode(GPIO, 36, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 36, 0, 5) },
  { pnode(GPIO, 36, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 36, 0, 7) },
  { pnode(GPIO, 36, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 36, 0, 1) },
  { pnode(GPIO, 36, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 36, 0, 3) },
  { pnode(GPIO, 36, 0, DATAOUT, 3, 0), rnode(GIN, 36, 0, 2) },
  { pnode(GPIO, 36, 0, DATAOUT, 3, 1), rnode(GIN, 36, 0, 3) },
  { pnode(GPIO, 36, 0, DATAOUT, 3, 2), rnode(GIN, 36, 0, 4) },
  { pnode(GPIO, 36, 0, DATAOUT, 3, 3), rnode(GIN, 36, 0, 5) },
  { pnode(GPIO, 36, 0, DATAOUT, 3, 4), rnode(GIN, 36, 0, 6) },
  { pnode(GPIO, 36, 0, OEIN, 3, 0), rnode(GOUT, 36, 0, 2) },
  { pnode(GPIO, 36, 0, OEIN, 3, 1), rnode(GOUT, 36, 0, 19) },
  { pnode(GPIO, 36, 0, BSLIPMAX, 3, -1), rnode(GIN, 36, 0, 1) },
  { pnode(GPIO, 36, 0, CEIN, 3, -1), rnode(GOUT, 36, 0, 5) },
  { pnode(GPIO, 36, 0, CEOUT, 3, -1), rnode(GOUT, 36, 0, 4) },
  { pnode(GPIO, 36, 0, SCLR, 3, -1), rnode(GOUT, 36, 0, 1) },
  { pnode(GPIO, 36, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 36, 0, 4) },
  { pnode(GPIO, 36, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 36, 0, 6) },
  { pnode(GPIO, 36, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 36, 0, 0) },
  { pnode(GPIO, 36, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 36, 0, 2) },
  { pnode(GPIO, 36, 61, DATAOUT, 0, 4), rnode(GIN, 36, 61, 14) },
  { pnode(GPIO, 36, 61, BSLIPMAX, 0, -1), rnode(GIN, 36, 61, 19) },
  { pnode(GPIO, 36, 61, CEIN, 0, -1), rnode(GOUT, 36, 61, 27) },
  { pnode(GPIO, 36, 61, CEOUT, 0, -1), rnode(GOUT, 36, 61, 45) },
  { pnode(GPIO, 36, 61, ACLR, 0, -1), rnode(GOUT, 36, 61, 28) },
  { pnode(GPIO, 36, 61, SCLR, 0, -1), rnode(GOUT, 36, 61, 31) },
  { pnode(GPIO, 36, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 36, 61, 10) },
  { pnode(GPIO, 36, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 36, 61, 8) },
  { pnode(GPIO, 36, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 36, 61, 14) },
  { pnode(GPIO, 36, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 36, 61, 12) },
  { pnode(GPIO, 36, 61, DATAOUT, 1, 4), rnode(GIN, 36, 61, 20) },
  { pnode(GPIO, 36, 61, BSLIPMAX, 1, -1), rnode(GIN, 36, 61, 25) },
  { pnode(GPIO, 36, 61, CEIN, 1, -1), rnode(GOUT, 36, 61, 51) },
  { pnode(GPIO, 36, 61, CEOUT, 1, -1), rnode(GOUT, 36, 61, 50) },
  { pnode(GPIO, 36, 61, ACLR, 1, -1), rnode(GOUT, 36, 61, 42) },
  { pnode(GPIO, 36, 61, SCLR, 1, -1), rnode(GOUT, 36, 61, 46) },
  { pnode(GPIO, 36, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 36, 61, 11) },
  { pnode(GPIO, 36, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 36, 61, 9) },
  { pnode(GPIO, 36, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 36, 61, 15) },
  { pnode(GPIO, 36, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 36, 61, 13) },
  { pnode(GPIO, 36, 61, DATAOUT, 2, 4), rnode(GIN, 36, 61, 12) },
  { pnode(GPIO, 36, 61, BSLIPMAX, 2, -1), rnode(GIN, 36, 61, 7) },
  { pnode(GPIO, 36, 61, CEIN, 2, -1), rnode(GOUT, 36, 61, 20) },
  { pnode(GPIO, 36, 61, CEOUT, 2, -1), rnode(GOUT, 36, 61, 13) },
  { pnode(GPIO, 36, 61, ACLR, 2, -1), rnode(GOUT, 36, 61, 21) },
  { pnode(GPIO, 36, 61, SCLR, 2, -1), rnode(GOUT, 36, 61, 25) },
  { pnode(GPIO, 36, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 36, 61, 5) },
  { pnode(GPIO, 36, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 36, 61, 7) },
  { pnode(GPIO, 36, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 36, 61, 1) },
  { pnode(GPIO, 36, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 36, 61, 3) },
  { pnode(GPIO, 36, 61, DATAOUT, 3, 0), rnode(GIN, 36, 61, 2) },
  { pnode(GPIO, 36, 61, DATAOUT, 3, 1), rnode(GIN, 36, 61, 3) },
  { pnode(GPIO, 36, 61, DATAOUT, 3, 2), rnode(GIN, 36, 61, 4) },
  { pnode(GPIO, 36, 61, DATAOUT, 3, 3), rnode(GIN, 36, 61, 5) },
  { pnode(GPIO, 36, 61, DATAOUT, 3, 4), rnode(GIN, 36, 61, 6) },
  { pnode(GPIO, 36, 61, OEIN, 3, 0), rnode(GOUT, 36, 61, 2) },
  { pnode(GPIO, 36, 61, OEIN, 3, 1), rnode(GOUT, 36, 61, 19) },
  { pnode(GPIO, 36, 61, BSLIPMAX, 3, -1), rnode(GIN, 36, 61, 1) },
  { pnode(GPIO, 36, 61, CEIN, 3, -1), rnode(GOUT, 36, 61, 5) },
  { pnode(GPIO, 36, 61, CEOUT, 3, -1), rnode(GOUT, 36, 61, 4) },
  { pnode(GPIO, 36, 61, SCLR, 3, -1), rnode(GOUT, 36, 61, 1) },
  { pnode(GPIO, 36, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 36, 61, 4) },
  { pnode(GPIO, 36, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 36, 61, 6) },
  { pnode(GPIO, 36, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 36, 61, 0) },
  { pnode(GPIO, 36, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 36, 61, 2) },
  { pnode(GPIO, 38, 0, DATAIN, 0, 0), rnode(GOUT, 38, 0, 44) },
  { pnode(GPIO, 38, 0, DATAIN, 0, 1), rnode(GOUT, 38, 0, 34) },
  { pnode(GPIO, 38, 0, DATAIN, 0, 2), rnode(GOUT, 38, 0, 43) },
  { pnode(GPIO, 38, 0, DATAIN, 0, 3), rnode(GOUT, 38, 0, 29) },
  { pnode(GPIO, 38, 0, DATAOUT, 0, 0), rnode(GIN, 38, 0, 18) },
  { pnode(GPIO, 38, 0, DATAOUT, 0, 1), rnode(GIN, 38, 0, 17) },
  { pnode(GPIO, 38, 0, DATAOUT, 0, 2), rnode(GIN, 38, 0, 16) },
  { pnode(GPIO, 38, 0, DATAOUT, 0, 3), rnode(GIN, 38, 0, 15) },
  { pnode(GPIO, 38, 0, DATAOUT, 0, 4), rnode(GIN, 38, 0, 14) },
  { pnode(GPIO, 38, 0, OEIN, 0, 0), rnode(GOUT, 38, 0, 38) },
  { pnode(GPIO, 38, 0, OEIN, 0, 1), rnode(GOUT, 38, 0, 30) },
  { pnode(GPIO, 38, 0, BSLIPMAX, 0, -1), rnode(GIN, 38, 0, 19) },
  { pnode(GPIO, 38, 0, CEIN, 0, -1), rnode(GOUT, 38, 0, 27) },
  { pnode(GPIO, 38, 0, CEOUT, 0, -1), rnode(GOUT, 38, 0, 45) },
  { pnode(GPIO, 38, 0, ACLR, 0, -1), rnode(GOUT, 38, 0, 28) },
  { pnode(GPIO, 38, 0, SCLR, 0, -1), rnode(GOUT, 38, 0, 31) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 38, 0, 10) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 38, 0, 8) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 38, 0, 14) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 38, 0, 12) },
  { pnode(GPIO, 38, 0, DATAIN, 1, 0), rnode(GOUT, 38, 0, 49) },
  { pnode(GPIO, 38, 0, DATAIN, 1, 1), rnode(GOUT, 38, 0, 41) },
  { pnode(GPIO, 38, 0, DATAIN, 1, 2), rnode(GOUT, 38, 0, 48) },
  { pnode(GPIO, 38, 0, DATAIN, 1, 3), rnode(GOUT, 38, 0, 40) },
  { pnode(GPIO, 38, 0, DATAOUT, 1, 0), rnode(GIN, 38, 0, 24) },
  { pnode(GPIO, 38, 0, DATAOUT, 1, 1), rnode(GIN, 38, 0, 23) },
  { pnode(GPIO, 38, 0, DATAOUT, 1, 2), rnode(GIN, 38, 0, 22) },
  { pnode(GPIO, 38, 0, DATAOUT, 1, 3), rnode(GIN, 38, 0, 21) },
  { pnode(GPIO, 38, 0, DATAOUT, 1, 4), rnode(GIN, 38, 0, 20) },
  { pnode(GPIO, 38, 0, OEIN, 1, 0), rnode(GOUT, 38, 0, 47) },
  { pnode(GPIO, 38, 0, OEIN, 1, 1), rnode(GOUT, 38, 0, 39) },
  { pnode(GPIO, 38, 0, BSLIPMAX, 1, -1), rnode(GIN, 38, 0, 25) },
  { pnode(GPIO, 38, 0, CEIN, 1, -1), rnode(GOUT, 38, 0, 51) },
  { pnode(GPIO, 38, 0, CEOUT, 1, -1), rnode(GOUT, 38, 0, 50) },
  { pnode(GPIO, 38, 0, ACLR, 1, -1), rnode(GOUT, 38, 0, 42) },
  { pnode(GPIO, 38, 0, SCLR, 1, -1), rnode(GOUT, 38, 0, 46) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 38, 0, 11) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 38, 0, 9) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 38, 0, 15) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 38, 0, 13) },
  { pnode(GPIO, 38, 0, DATAOUT, 2, 0), rnode(GIN, 38, 0, 8) },
  { pnode(GPIO, 38, 0, DATAOUT, 2, 1), rnode(GIN, 38, 0, 9) },
  { pnode(GPIO, 38, 0, DATAOUT, 2, 2), rnode(GIN, 38, 0, 10) },
  { pnode(GPIO, 38, 0, DATAOUT, 2, 3), rnode(GIN, 38, 0, 11) },
  { pnode(GPIO, 38, 0, DATAOUT, 2, 4), rnode(GIN, 38, 0, 12) },
  { pnode(GPIO, 38, 0, OEIN, 2, 0), rnode(GOUT, 38, 0, 16) },
  { pnode(GPIO, 38, 0, OEIN, 2, 1), rnode(GOUT, 38, 0, 24) },
  { pnode(GPIO, 38, 0, BSLIPMAX, 2, -1), rnode(GIN, 38, 0, 7) },
  { pnode(GPIO, 38, 0, CEIN, 2, -1), rnode(GOUT, 38, 0, 20) },
  { pnode(GPIO, 38, 0, CEOUT, 2, -1), rnode(GOUT, 38, 0, 13) },
  { pnode(GPIO, 38, 0, ACLR, 2, -1), rnode(GOUT, 38, 0, 21) },
  { pnode(GPIO, 38, 0, SCLR, 2, -1), rnode(GOUT, 38, 0, 25) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 38, 0, 5) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 38, 0, 7) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 38, 0, 1) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 38, 0, 3) },
  { pnode(GPIO, 38, 0, DATAOUT, 3, 4), rnode(GIN, 38, 0, 6) },
  { pnode(GPIO, 38, 0, BSLIPMAX, 3, -1), rnode(GIN, 38, 0, 1) },
  { pnode(GPIO, 38, 0, CEIN, 3, -1), rnode(GOUT, 38, 0, 5) },
  { pnode(GPIO, 38, 0, CEOUT, 3, -1), rnode(GOUT, 38, 0, 4) },
  { pnode(GPIO, 38, 0, ACLR, 3, -1), rnode(GOUT, 38, 0, 12) },
  { pnode(GPIO, 38, 0, SCLR, 3, -1), rnode(GOUT, 38, 0, 1) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 38, 0, 4) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 38, 0, 6) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 38, 0, 0) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 38, 0, 2) },
  { pnode(GPIO, 38, 61, DATAIN, 0, 0), rnode(GOUT, 38, 61, 44) },
  { pnode(GPIO, 38, 61, DATAIN, 0, 1), rnode(GOUT, 38, 61, 34) },
  { pnode(GPIO, 38, 61, DATAIN, 0, 2), rnode(GOUT, 38, 61, 43) },
  { pnode(GPIO, 38, 61, DATAIN, 0, 3), rnode(GOUT, 38, 61, 29) },
  { pnode(GPIO, 38, 61, DATAOUT, 0, 0), rnode(GIN, 38, 61, 18) },
  { pnode(GPIO, 38, 61, DATAOUT, 0, 1), rnode(GIN, 38, 61, 17) },
  { pnode(GPIO, 38, 61, DATAOUT, 0, 2), rnode(GIN, 38, 61, 16) },
  { pnode(GPIO, 38, 61, DATAOUT, 0, 3), rnode(GIN, 38, 61, 15) },
  { pnode(GPIO, 38, 61, DATAOUT, 0, 4), rnode(GIN, 38, 61, 14) },
  { pnode(GPIO, 38, 61, OEIN, 0, 0), rnode(GOUT, 38, 61, 38) },
  { pnode(GPIO, 38, 61, OEIN, 0, 1), rnode(GOUT, 38, 61, 30) },
  { pnode(GPIO, 38, 61, BSLIPMAX, 0, -1), rnode(GIN, 38, 61, 19) },
  { pnode(GPIO, 38, 61, CEIN, 0, -1), rnode(GOUT, 38, 61, 27) },
  { pnode(GPIO, 38, 61, CEOUT, 0, -1), rnode(GOUT, 38, 61, 45) },
  { pnode(GPIO, 38, 61, ACLR, 0, -1), rnode(GOUT, 38, 61, 28) },
  { pnode(GPIO, 38, 61, SCLR, 0, -1), rnode(GOUT, 38, 61, 31) },
  { pnode(GPIO, 38, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 38, 61, 10) },
  { pnode(GPIO, 38, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 38, 61, 8) },
  { pnode(GPIO, 38, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 38, 61, 14) },
  { pnode(GPIO, 38, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 38, 61, 12) },
  { pnode(GPIO, 38, 61, DATAIN, 1, 0), rnode(GOUT, 38, 61, 49) },
  { pnode(GPIO, 38, 61, DATAIN, 1, 1), rnode(GOUT, 38, 61, 41) },
  { pnode(GPIO, 38, 61, DATAIN, 1, 2), rnode(GOUT, 38, 61, 48) },
  { pnode(GPIO, 38, 61, DATAIN, 1, 3), rnode(GOUT, 38, 61, 40) },
  { pnode(GPIO, 38, 61, DATAOUT, 1, 0), rnode(GIN, 38, 61, 24) },
  { pnode(GPIO, 38, 61, DATAOUT, 1, 1), rnode(GIN, 38, 61, 23) },
  { pnode(GPIO, 38, 61, DATAOUT, 1, 2), rnode(GIN, 38, 61, 22) },
  { pnode(GPIO, 38, 61, DATAOUT, 1, 3), rnode(GIN, 38, 61, 21) },
  { pnode(GPIO, 38, 61, DATAOUT, 1, 4), rnode(GIN, 38, 61, 20) },
  { pnode(GPIO, 38, 61, OEIN, 1, 0), rnode(GOUT, 38, 61, 47) },
  { pnode(GPIO, 38, 61, OEIN, 1, 1), rnode(GOUT, 38, 61, 39) },
  { pnode(GPIO, 38, 61, BSLIPMAX, 1, -1), rnode(GIN, 38, 61, 25) },
  { pnode(GPIO, 38, 61, CEIN, 1, -1), rnode(GOUT, 38, 61, 51) },
  { pnode(GPIO, 38, 61, CEOUT, 1, -1), rnode(GOUT, 38, 61, 50) },
  { pnode(GPIO, 38, 61, ACLR, 1, -1), rnode(GOUT, 38, 61, 42) },
  { pnode(GPIO, 38, 61, SCLR, 1, -1), rnode(GOUT, 38, 61, 46) },
  { pnode(GPIO, 38, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 38, 61, 11) },
  { pnode(GPIO, 38, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 38, 61, 9) },
  { pnode(GPIO, 38, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 38, 61, 15) },
  { pnode(GPIO, 38, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 38, 61, 13) },
  { pnode(GPIO, 38, 61, DATAOUT, 2, 0), rnode(GIN, 38, 61, 8) },
  { pnode(GPIO, 38, 61, DATAOUT, 2, 1), rnode(GIN, 38, 61, 9) },
  { pnode(GPIO, 38, 61, DATAOUT, 2, 2), rnode(GIN, 38, 61, 10) },
  { pnode(GPIO, 38, 61, DATAOUT, 2, 3), rnode(GIN, 38, 61, 11) },
  { pnode(GPIO, 38, 61, DATAOUT, 2, 4), rnode(GIN, 38, 61, 12) },
  { pnode(GPIO, 38, 61, OEIN, 2, 0), rnode(GOUT, 38, 61, 16) },
  { pnode(GPIO, 38, 61, OEIN, 2, 1), rnode(GOUT, 38, 61, 24) },
  { pnode(GPIO, 38, 61, BSLIPMAX, 2, -1), rnode(GIN, 38, 61, 7) },
  { pnode(GPIO, 38, 61, CEIN, 2, -1), rnode(GOUT, 38, 61, 20) },
  { pnode(GPIO, 38, 61, CEOUT, 2, -1), rnode(GOUT, 38, 61, 13) },
  { pnode(GPIO, 38, 61, ACLR, 2, -1), rnode(GOUT, 38, 61, 21) },
  { pnode(GPIO, 38, 61, SCLR, 2, -1), rnode(GOUT, 38, 61, 25) },
  { pnode(GPIO, 38, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 38, 61, 5) },
  { pnode(GPIO, 38, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 38, 61, 7) },
  { pnode(GPIO, 38, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 38, 61, 1) },
  { pnode(GPIO, 38, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 38, 61, 3) },
  { pnode(GPIO, 38, 61, DATAOUT, 3, 4), rnode(GIN, 38, 61, 6) },
  { pnode(GPIO, 38, 61, BSLIPMAX, 3, -1), rnode(GIN, 38, 61, 1) },
  { pnode(GPIO, 38, 61, CEIN, 3, -1), rnode(GOUT, 38, 61, 5) },
  { pnode(GPIO, 38, 61, CEOUT, 3, -1), rnode(GOUT, 38, 61, 4) },
  { pnode(GPIO, 38, 61, ACLR, 3, -1), rnode(GOUT, 38, 61, 12) },
  { pnode(GPIO, 38, 61, SCLR, 3, -1), rnode(GOUT, 38, 61, 1) },
  { pnode(GPIO, 38, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 38, 61, 4) },
  { pnode(GPIO, 38, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 38, 61, 6) },
  { pnode(GPIO, 38, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 38, 61, 0) },
  { pnode(GPIO, 38, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 38, 61, 2) },
  { pnode(GPIO, 40, 0, DATAOUT, 0, 4), rnode(GIN, 40, 0, 14) },
  { pnode(GPIO, 40, 0, BSLIPMAX, 0, -1), rnode(GIN, 40, 0, 19) },
  { pnode(GPIO, 40, 0, CEIN, 0, -1), rnode(GOUT, 40, 0, 27) },
  { pnode(GPIO, 40, 0, CEOUT, 0, -1), rnode(GOUT, 40, 0, 45) },
  { pnode(GPIO, 40, 0, ACLR, 0, -1), rnode(GOUT, 40, 0, 28) },
  { pnode(GPIO, 40, 0, SCLR, 0, -1), rnode(GOUT, 40, 0, 31) },
  { pnode(GPIO, 40, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 40, 0, 10) },
  { pnode(GPIO, 40, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 40, 0, 8) },
  { pnode(GPIO, 40, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 40, 0, 14) },
  { pnode(GPIO, 40, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 40, 0, 12) },
  { pnode(GPIO, 40, 0, DATAOUT, 1, 4), rnode(GIN, 40, 0, 20) },
  { pnode(GPIO, 40, 0, BSLIPMAX, 1, -1), rnode(GIN, 40, 0, 25) },
  { pnode(GPIO, 40, 0, CEIN, 1, -1), rnode(GOUT, 40, 0, 51) },
  { pnode(GPIO, 40, 0, CEOUT, 1, -1), rnode(GOUT, 40, 0, 50) },
  { pnode(GPIO, 40, 0, ACLR, 1, -1), rnode(GOUT, 40, 0, 42) },
  { pnode(GPIO, 40, 0, SCLR, 1, -1), rnode(GOUT, 40, 0, 46) },
  { pnode(GPIO, 40, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 40, 0, 11) },
  { pnode(GPIO, 40, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 40, 0, 9) },
  { pnode(GPIO, 40, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 40, 0, 15) },
  { pnode(GPIO, 40, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 40, 0, 13) },
  { pnode(GPIO, 40, 0, DATAOUT, 2, 4), rnode(GIN, 40, 0, 12) },
  { pnode(GPIO, 40, 0, BSLIPMAX, 2, -1), rnode(GIN, 40, 0, 7) },
  { pnode(GPIO, 40, 0, CEIN, 2, -1), rnode(GOUT, 40, 0, 20) },
  { pnode(GPIO, 40, 0, CEOUT, 2, -1), rnode(GOUT, 40, 0, 13) },
  { pnode(GPIO, 40, 0, ACLR, 2, -1), rnode(GOUT, 40, 0, 21) },
  { pnode(GPIO, 40, 0, SCLR, 2, -1), rnode(GOUT, 40, 0, 25) },
  { pnode(GPIO, 40, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 40, 0, 5) },
  { pnode(GPIO, 40, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 40, 0, 7) },
  { pnode(GPIO, 40, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 40, 0, 1) },
  { pnode(GPIO, 40, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 40, 0, 3) },
  { pnode(GPIO, 40, 0, DATAIN, 3, 0), rnode(GOUT, 40, 0, 3) },
  { pnode(GPIO, 40, 0, DATAIN, 3, 1), rnode(GOUT, 40, 0, 17) },
  { pnode(GPIO, 40, 0, DATAIN, 3, 2), rnode(GOUT, 40, 0, 8) },
  { pnode(GPIO, 40, 0, DATAIN, 3, 3), rnode(GOUT, 40, 0, 18) },
  { pnode(GPIO, 40, 0, DATAOUT, 3, 0), rnode(GIN, 40, 0, 2) },
  { pnode(GPIO, 40, 0, DATAOUT, 3, 1), rnode(GIN, 40, 0, 3) },
  { pnode(GPIO, 40, 0, DATAOUT, 3, 2), rnode(GIN, 40, 0, 4) },
  { pnode(GPIO, 40, 0, DATAOUT, 3, 3), rnode(GIN, 40, 0, 5) },
  { pnode(GPIO, 40, 0, DATAOUT, 3, 4), rnode(GIN, 40, 0, 6) },
  { pnode(GPIO, 40, 0, OEIN, 3, 0), rnode(GOUT, 40, 0, 2) },
  { pnode(GPIO, 40, 0, OEIN, 3, 1), rnode(GOUT, 40, 0, 19) },
  { pnode(GPIO, 40, 0, BSLIPMAX, 3, -1), rnode(GIN, 40, 0, 1) },
  { pnode(GPIO, 40, 0, CEIN, 3, -1), rnode(GOUT, 40, 0, 5) },
  { pnode(GPIO, 40, 0, CEOUT, 3, -1), rnode(GOUT, 40, 0, 4) },
  { pnode(GPIO, 40, 0, ACLR, 3, -1), rnode(GOUT, 40, 0, 12) },
  { pnode(GPIO, 40, 0, SCLR, 3, -1), rnode(GOUT, 40, 0, 1) },
  { pnode(GPIO, 40, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 40, 0, 4) },
  { pnode(GPIO, 40, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 40, 0, 6) },
  { pnode(GPIO, 40, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 40, 0, 0) },
  { pnode(GPIO, 40, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 40, 0, 2) },
  { pnode(GPIO, 40, 61, DATAOUT, 0, 4), rnode(GIN, 40, 61, 14) },
  { pnode(GPIO, 40, 61, BSLIPMAX, 0, -1), rnode(GIN, 40, 61, 19) },
  { pnode(GPIO, 40, 61, CEIN, 0, -1), rnode(GOUT, 40, 61, 27) },
  { pnode(GPIO, 40, 61, CEOUT, 0, -1), rnode(GOUT, 40, 61, 45) },
  { pnode(GPIO, 40, 61, ACLR, 0, -1), rnode(GOUT, 40, 61, 28) },
  { pnode(GPIO, 40, 61, SCLR, 0, -1), rnode(GOUT, 40, 61, 31) },
  { pnode(GPIO, 40, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 40, 61, 10) },
  { pnode(GPIO, 40, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 40, 61, 8) },
  { pnode(GPIO, 40, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 40, 61, 14) },
  { pnode(GPIO, 40, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 40, 61, 12) },
  { pnode(GPIO, 40, 61, DATAOUT, 1, 4), rnode(GIN, 40, 61, 20) },
  { pnode(GPIO, 40, 61, BSLIPMAX, 1, -1), rnode(GIN, 40, 61, 25) },
  { pnode(GPIO, 40, 61, CEIN, 1, -1), rnode(GOUT, 40, 61, 51) },
  { pnode(GPIO, 40, 61, CEOUT, 1, -1), rnode(GOUT, 40, 61, 50) },
  { pnode(GPIO, 40, 61, ACLR, 1, -1), rnode(GOUT, 40, 61, 42) },
  { pnode(GPIO, 40, 61, SCLR, 1, -1), rnode(GOUT, 40, 61, 46) },
  { pnode(GPIO, 40, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 40, 61, 11) },
  { pnode(GPIO, 40, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 40, 61, 9) },
  { pnode(GPIO, 40, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 40, 61, 15) },
  { pnode(GPIO, 40, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 40, 61, 13) },
  { pnode(GPIO, 40, 61, DATAOUT, 2, 4), rnode(GIN, 40, 61, 12) },
  { pnode(GPIO, 40, 61, BSLIPMAX, 2, -1), rnode(GIN, 40, 61, 7) },
  { pnode(GPIO, 40, 61, CEIN, 2, -1), rnode(GOUT, 40, 61, 20) },
  { pnode(GPIO, 40, 61, CEOUT, 2, -1), rnode(GOUT, 40, 61, 13) },
  { pnode(GPIO, 40, 61, ACLR, 2, -1), rnode(GOUT, 40, 61, 21) },
  { pnode(GPIO, 40, 61, SCLR, 2, -1), rnode(GOUT, 40, 61, 25) },
  { pnode(GPIO, 40, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 40, 61, 5) },
  { pnode(GPIO, 40, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 40, 61, 7) },
  { pnode(GPIO, 40, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 40, 61, 1) },
  { pnode(GPIO, 40, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 40, 61, 3) },
  { pnode(GPIO, 40, 61, DATAIN, 3, 0), rnode(GOUT, 40, 61, 3) },
  { pnode(GPIO, 40, 61, DATAIN, 3, 1), rnode(GOUT, 40, 61, 17) },
  { pnode(GPIO, 40, 61, DATAIN, 3, 2), rnode(GOUT, 40, 61, 8) },
  { pnode(GPIO, 40, 61, DATAIN, 3, 3), rnode(GOUT, 40, 61, 18) },
  { pnode(GPIO, 40, 61, DATAOUT, 3, 0), rnode(GIN, 40, 61, 2) },
  { pnode(GPIO, 40, 61, DATAOUT, 3, 1), rnode(GIN, 40, 61, 3) },
  { pnode(GPIO, 40, 61, DATAOUT, 3, 2), rnode(GIN, 40, 61, 4) },
  { pnode(GPIO, 40, 61, DATAOUT, 3, 3), rnode(GIN, 40, 61, 5) },
  { pnode(GPIO, 40, 61, DATAOUT, 3, 4), rnode(GIN, 40, 61, 6) },
  { pnode(GPIO, 40, 61, OEIN, 3, 0), rnode(GOUT, 40, 61, 2) },
  { pnode(GPIO, 40, 61, OEIN, 3, 1), rnode(GOUT, 40, 61, 19) },
  { pnode(GPIO, 40, 61, BSLIPMAX, 3, -1), rnode(GIN, 40, 61, 1) },
  { pnode(GPIO, 40, 61, CEIN, 3, -1), rnode(GOUT, 40, 61, 5) },
  { pnode(GPIO, 40, 61, CEOUT, 3, -1), rnode(GOUT, 40, 61, 4) },
  { pnode(GPIO, 40, 61, ACLR, 3, -1), rnode(GOUT, 40, 61, 12) },
  { pnode(GPIO, 40, 61, SCLR, 3, -1), rnode(GOUT, 40, 61, 1) },
  { pnode(GPIO, 40, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 40, 61, 4) },
  { pnode(GPIO, 40, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 40, 61, 6) },
  { pnode(GPIO, 40, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 40, 61, 0) },
  { pnode(GPIO, 40, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 40, 61, 2) },
  { pnode(GPIO, 42, 0, DATAOUT, 0, 0), rnode(GIN, 42, 0, 18) },
  { pnode(GPIO, 42, 0, DATAOUT, 0, 1), rnode(GIN, 42, 0, 17) },
  { pnode(GPIO, 42, 0, DATAOUT, 0, 2), rnode(GIN, 42, 0, 16) },
  { pnode(GPIO, 42, 0, DATAOUT, 0, 3), rnode(GIN, 42, 0, 15) },
  { pnode(GPIO, 42, 0, DATAOUT, 0, 4), rnode(GIN, 42, 0, 14) },
  { pnode(GPIO, 42, 0, BSLIPMAX, 0, -1), rnode(GIN, 42, 0, 19) },
  { pnode(GPIO, 42, 0, CEIN, 0, -1), rnode(GOUT, 42, 0, 27) },
  { pnode(GPIO, 42, 0, CEOUT, 0, -1), rnode(GOUT, 42, 0, 45) },
  { pnode(GPIO, 42, 0, ACLR, 0, -1), rnode(GOUT, 42, 0, 28) },
  { pnode(GPIO, 42, 0, SCLR, 0, -1), rnode(GOUT, 42, 0, 31) },
  { pnode(GPIO, 42, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 42, 0, 10) },
  { pnode(GPIO, 42, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 42, 0, 8) },
  { pnode(GPIO, 42, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 42, 0, 14) },
  { pnode(GPIO, 42, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 42, 0, 12) },
  { pnode(GPIO, 42, 0, DATAOUT, 1, 0), rnode(GIN, 42, 0, 24) },
  { pnode(GPIO, 42, 0, DATAOUT, 1, 1), rnode(GIN, 42, 0, 23) },
  { pnode(GPIO, 42, 0, DATAOUT, 1, 2), rnode(GIN, 42, 0, 22) },
  { pnode(GPIO, 42, 0, DATAOUT, 1, 3), rnode(GIN, 42, 0, 21) },
  { pnode(GPIO, 42, 0, DATAOUT, 1, 4), rnode(GIN, 42, 0, 20) },
  { pnode(GPIO, 42, 0, BSLIPMAX, 1, -1), rnode(GIN, 42, 0, 25) },
  { pnode(GPIO, 42, 0, CEIN, 1, -1), rnode(GOUT, 42, 0, 51) },
  { pnode(GPIO, 42, 0, CEOUT, 1, -1), rnode(GOUT, 42, 0, 50) },
  { pnode(GPIO, 42, 0, ACLR, 1, -1), rnode(GOUT, 42, 0, 42) },
  { pnode(GPIO, 42, 0, SCLR, 1, -1), rnode(GOUT, 42, 0, 46) },
  { pnode(GPIO, 42, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 42, 0, 11) },
  { pnode(GPIO, 42, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 42, 0, 9) },
  { pnode(GPIO, 42, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 42, 0, 15) },
  { pnode(GPIO, 42, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 42, 0, 13) },
  { pnode(GPIO, 42, 0, DATAOUT, 2, 0), rnode(GIN, 42, 0, 8) },
  { pnode(GPIO, 42, 0, DATAOUT, 2, 1), rnode(GIN, 42, 0, 9) },
  { pnode(GPIO, 42, 0, DATAOUT, 2, 2), rnode(GIN, 42, 0, 10) },
  { pnode(GPIO, 42, 0, DATAOUT, 2, 3), rnode(GIN, 42, 0, 11) },
  { pnode(GPIO, 42, 0, DATAOUT, 2, 4), rnode(GIN, 42, 0, 12) },
  { pnode(GPIO, 42, 0, OEIN, 2, 0), rnode(GOUT, 42, 0, 16) },
  { pnode(GPIO, 42, 0, OEIN, 2, 1), rnode(GOUT, 42, 0, 24) },
  { pnode(GPIO, 42, 0, BSLIPMAX, 2, -1), rnode(GIN, 42, 0, 7) },
  { pnode(GPIO, 42, 0, CEIN, 2, -1), rnode(GOUT, 42, 0, 20) },
  { pnode(GPIO, 42, 0, CEOUT, 2, -1), rnode(GOUT, 42, 0, 13) },
  { pnode(GPIO, 42, 0, SCLR, 2, -1), rnode(GOUT, 42, 0, 25) },
  { pnode(GPIO, 42, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 42, 0, 5) },
  { pnode(GPIO, 42, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 42, 0, 7) },
  { pnode(GPIO, 42, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 42, 0, 1) },
  { pnode(GPIO, 42, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 42, 0, 3) },
  { pnode(GPIO, 42, 0, DATAOUT, 3, 4), rnode(GIN, 42, 0, 6) },
  { pnode(GPIO, 42, 0, BSLIPMAX, 3, -1), rnode(GIN, 42, 0, 1) },
  { pnode(GPIO, 42, 0, CEIN, 3, -1), rnode(GOUT, 42, 0, 5) },
  { pnode(GPIO, 42, 0, CEOUT, 3, -1), rnode(GOUT, 42, 0, 4) },
  { pnode(GPIO, 42, 0, ACLR, 3, -1), rnode(GOUT, 42, 0, 12) },
  { pnode(GPIO, 42, 0, SCLR, 3, -1), rnode(GOUT, 42, 0, 1) },
  { pnode(GPIO, 42, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 42, 0, 4) },
  { pnode(GPIO, 42, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 42, 0, 6) },
  { pnode(GPIO, 42, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 42, 0, 0) },
  { pnode(GPIO, 42, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 42, 0, 2) },
  { pnode(GPIO, 42, 61, DATAOUT, 0, 0), rnode(GIN, 42, 61, 18) },
  { pnode(GPIO, 42, 61, DATAOUT, 0, 1), rnode(GIN, 42, 61, 17) },
  { pnode(GPIO, 42, 61, DATAOUT, 0, 2), rnode(GIN, 42, 61, 16) },
  { pnode(GPIO, 42, 61, DATAOUT, 0, 3), rnode(GIN, 42, 61, 15) },
  { pnode(GPIO, 42, 61, DATAOUT, 0, 4), rnode(GIN, 42, 61, 14) },
  { pnode(GPIO, 42, 61, BSLIPMAX, 0, -1), rnode(GIN, 42, 61, 19) },
  { pnode(GPIO, 42, 61, CEIN, 0, -1), rnode(GOUT, 42, 61, 27) },
  { pnode(GPIO, 42, 61, CEOUT, 0, -1), rnode(GOUT, 42, 61, 45) },
  { pnode(GPIO, 42, 61, ACLR, 0, -1), rnode(GOUT, 42, 61, 28) },
  { pnode(GPIO, 42, 61, SCLR, 0, -1), rnode(GOUT, 42, 61, 31) },
  { pnode(GPIO, 42, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 42, 61, 10) },
  { pnode(GPIO, 42, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 42, 61, 8) },
  { pnode(GPIO, 42, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 42, 61, 14) },
  { pnode(GPIO, 42, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 42, 61, 12) },
  { pnode(GPIO, 42, 61, DATAOUT, 1, 0), rnode(GIN, 42, 61, 24) },
  { pnode(GPIO, 42, 61, DATAOUT, 1, 1), rnode(GIN, 42, 61, 23) },
  { pnode(GPIO, 42, 61, DATAOUT, 1, 2), rnode(GIN, 42, 61, 22) },
  { pnode(GPIO, 42, 61, DATAOUT, 1, 3), rnode(GIN, 42, 61, 21) },
  { pnode(GPIO, 42, 61, DATAOUT, 1, 4), rnode(GIN, 42, 61, 20) },
  { pnode(GPIO, 42, 61, BSLIPMAX, 1, -1), rnode(GIN, 42, 61, 25) },
  { pnode(GPIO, 42, 61, CEIN, 1, -1), rnode(GOUT, 42, 61, 51) },
  { pnode(GPIO, 42, 61, CEOUT, 1, -1), rnode(GOUT, 42, 61, 50) },
  { pnode(GPIO, 42, 61, ACLR, 1, -1), rnode(GOUT, 42, 61, 42) },
  { pnode(GPIO, 42, 61, SCLR, 1, -1), rnode(GOUT, 42, 61, 46) },
  { pnode(GPIO, 42, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 42, 61, 11) },
  { pnode(GPIO, 42, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 42, 61, 9) },
  { pnode(GPIO, 42, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 42, 61, 15) },
  { pnode(GPIO, 42, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 42, 61, 13) },
  { pnode(GPIO, 42, 61, DATAOUT, 2, 0), rnode(GIN, 42, 61, 8) },
  { pnode(GPIO, 42, 61, DATAOUT, 2, 1), rnode(GIN, 42, 61, 9) },
  { pnode(GPIO, 42, 61, DATAOUT, 2, 2), rnode(GIN, 42, 61, 10) },
  { pnode(GPIO, 42, 61, DATAOUT, 2, 3), rnode(GIN, 42, 61, 11) },
  { pnode(GPIO, 42, 61, DATAOUT, 2, 4), rnode(GIN, 42, 61, 12) },
  { pnode(GPIO, 42, 61, OEIN, 2, 0), rnode(GOUT, 42, 61, 16) },
  { pnode(GPIO, 42, 61, OEIN, 2, 1), rnode(GOUT, 42, 61, 24) },
  { pnode(GPIO, 42, 61, BSLIPMAX, 2, -1), rnode(GIN, 42, 61, 7) },
  { pnode(GPIO, 42, 61, CEIN, 2, -1), rnode(GOUT, 42, 61, 20) },
  { pnode(GPIO, 42, 61, CEOUT, 2, -1), rnode(GOUT, 42, 61, 13) },
  { pnode(GPIO, 42, 61, SCLR, 2, -1), rnode(GOUT, 42, 61, 25) },
  { pnode(GPIO, 42, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 42, 61, 5) },
  { pnode(GPIO, 42, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 42, 61, 7) },
  { pnode(GPIO, 42, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 42, 61, 1) },
  { pnode(GPIO, 42, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 42, 61, 3) },
  { pnode(GPIO, 42, 61, DATAOUT, 3, 4), rnode(GIN, 42, 61, 6) },
  { pnode(GPIO, 42, 61, BSLIPMAX, 3, -1), rnode(GIN, 42, 61, 1) },
  { pnode(GPIO, 42, 61, CEIN, 3, -1), rnode(GOUT, 42, 61, 5) },
  { pnode(GPIO, 42, 61, CEOUT, 3, -1), rnode(GOUT, 42, 61, 4) },
  { pnode(GPIO, 42, 61, ACLR, 3, -1), rnode(GOUT, 42, 61, 12) },
  { pnode(GPIO, 42, 61, SCLR, 3, -1), rnode(GOUT, 42, 61, 1) },
  { pnode(GPIO, 42, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 42, 61, 4) },
  { pnode(GPIO, 42, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 42, 61, 6) },
  { pnode(GPIO, 42, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 42, 61, 0) },
  { pnode(GPIO, 42, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 42, 61, 2) },
  { pnode(GPIO, 44, 0, DATAOUT, 0, 4), rnode(GIN, 44, 0, 14) },
  { pnode(GPIO, 44, 0, BSLIPMAX, 0, -1), rnode(GIN, 44, 0, 19) },
  { pnode(GPIO, 44, 0, CEIN, 0, -1), rnode(GOUT, 44, 0, 27) },
  { pnode(GPIO, 44, 0, CEOUT, 0, -1), rnode(GOUT, 44, 0, 45) },
  { pnode(GPIO, 44, 0, ACLR, 0, -1), rnode(GOUT, 44, 0, 28) },
  { pnode(GPIO, 44, 0, SCLR, 0, -1), rnode(GOUT, 44, 0, 31) },
  { pnode(GPIO, 44, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 44, 0, 10) },
  { pnode(GPIO, 44, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 44, 0, 8) },
  { pnode(GPIO, 44, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 44, 0, 14) },
  { pnode(GPIO, 44, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 44, 0, 12) },
  { pnode(GPIO, 44, 0, DATAOUT, 1, 4), rnode(GIN, 44, 0, 20) },
  { pnode(GPIO, 44, 0, BSLIPMAX, 1, -1), rnode(GIN, 44, 0, 25) },
  { pnode(GPIO, 44, 0, CEIN, 1, -1), rnode(GOUT, 44, 0, 51) },
  { pnode(GPIO, 44, 0, CEOUT, 1, -1), rnode(GOUT, 44, 0, 50) },
  { pnode(GPIO, 44, 0, ACLR, 1, -1), rnode(GOUT, 44, 0, 42) },
  { pnode(GPIO, 44, 0, SCLR, 1, -1), rnode(GOUT, 44, 0, 46) },
  { pnode(GPIO, 44, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 44, 0, 11) },
  { pnode(GPIO, 44, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 44, 0, 9) },
  { pnode(GPIO, 44, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 44, 0, 15) },
  { pnode(GPIO, 44, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 44, 0, 13) },
  { pnode(GPIO, 44, 0, DATAOUT, 2, 4), rnode(GIN, 44, 0, 12) },
  { pnode(GPIO, 44, 0, BSLIPMAX, 2, -1), rnode(GIN, 44, 0, 7) },
  { pnode(GPIO, 44, 0, CEIN, 2, -1), rnode(GOUT, 44, 0, 20) },
  { pnode(GPIO, 44, 0, CEOUT, 2, -1), rnode(GOUT, 44, 0, 13) },
  { pnode(GPIO, 44, 0, ACLR, 2, -1), rnode(GOUT, 44, 0, 21) },
  { pnode(GPIO, 44, 0, SCLR, 2, -1), rnode(GOUT, 44, 0, 25) },
  { pnode(GPIO, 44, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 44, 0, 5) },
  { pnode(GPIO, 44, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 44, 0, 7) },
  { pnode(GPIO, 44, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 44, 0, 1) },
  { pnode(GPIO, 44, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 44, 0, 3) },
  { pnode(GPIO, 44, 0, DATAOUT, 3, 0), rnode(GIN, 44, 0, 2) },
  { pnode(GPIO, 44, 0, DATAOUT, 3, 1), rnode(GIN, 44, 0, 3) },
  { pnode(GPIO, 44, 0, DATAOUT, 3, 2), rnode(GIN, 44, 0, 4) },
  { pnode(GPIO, 44, 0, DATAOUT, 3, 3), rnode(GIN, 44, 0, 5) },
  { pnode(GPIO, 44, 0, DATAOUT, 3, 4), rnode(GIN, 44, 0, 6) },
  { pnode(GPIO, 44, 0, OEIN, 3, 0), rnode(GOUT, 44, 0, 2) },
  { pnode(GPIO, 44, 0, OEIN, 3, 1), rnode(GOUT, 44, 0, 19) },
  { pnode(GPIO, 44, 0, BSLIPMAX, 3, -1), rnode(GIN, 44, 0, 1) },
  { pnode(GPIO, 44, 0, CEIN, 3, -1), rnode(GOUT, 44, 0, 5) },
  { pnode(GPIO, 44, 0, CEOUT, 3, -1), rnode(GOUT, 44, 0, 4) },
  { pnode(GPIO, 44, 0, SCLR, 3, -1), rnode(GOUT, 44, 0, 1) },
  { pnode(GPIO, 44, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 44, 0, 4) },
  { pnode(GPIO, 44, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 44, 0, 6) },
  { pnode(GPIO, 44, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 44, 0, 0) },
  { pnode(GPIO, 44, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 44, 0, 2) },
  { pnode(GPIO, 44, 61, DATAOUT, 0, 4), rnode(GIN, 44, 61, 14) },
  { pnode(GPIO, 44, 61, BSLIPMAX, 0, -1), rnode(GIN, 44, 61, 19) },
  { pnode(GPIO, 44, 61, CEIN, 0, -1), rnode(GOUT, 44, 61, 27) },
  { pnode(GPIO, 44, 61, CEOUT, 0, -1), rnode(GOUT, 44, 61, 45) },
  { pnode(GPIO, 44, 61, ACLR, 0, -1), rnode(GOUT, 44, 61, 28) },
  { pnode(GPIO, 44, 61, SCLR, 0, -1), rnode(GOUT, 44, 61, 31) },
  { pnode(GPIO, 44, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 44, 61, 10) },
  { pnode(GPIO, 44, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 44, 61, 8) },
  { pnode(GPIO, 44, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 44, 61, 14) },
  { pnode(GPIO, 44, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 44, 61, 12) },
  { pnode(GPIO, 44, 61, DATAOUT, 1, 4), rnode(GIN, 44, 61, 20) },
  { pnode(GPIO, 44, 61, BSLIPMAX, 1, -1), rnode(GIN, 44, 61, 25) },
  { pnode(GPIO, 44, 61, CEIN, 1, -1), rnode(GOUT, 44, 61, 51) },
  { pnode(GPIO, 44, 61, CEOUT, 1, -1), rnode(GOUT, 44, 61, 50) },
  { pnode(GPIO, 44, 61, ACLR, 1, -1), rnode(GOUT, 44, 61, 42) },
  { pnode(GPIO, 44, 61, SCLR, 1, -1), rnode(GOUT, 44, 61, 46) },
  { pnode(GPIO, 44, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 44, 61, 11) },
  { pnode(GPIO, 44, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 44, 61, 9) },
  { pnode(GPIO, 44, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 44, 61, 15) },
  { pnode(GPIO, 44, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 44, 61, 13) },
  { pnode(GPIO, 44, 61, DATAOUT, 2, 4), rnode(GIN, 44, 61, 12) },
  { pnode(GPIO, 44, 61, BSLIPMAX, 2, -1), rnode(GIN, 44, 61, 7) },
  { pnode(GPIO, 44, 61, CEIN, 2, -1), rnode(GOUT, 44, 61, 20) },
  { pnode(GPIO, 44, 61, CEOUT, 2, -1), rnode(GOUT, 44, 61, 13) },
  { pnode(GPIO, 44, 61, ACLR, 2, -1), rnode(GOUT, 44, 61, 21) },
  { pnode(GPIO, 44, 61, SCLR, 2, -1), rnode(GOUT, 44, 61, 25) },
  { pnode(GPIO, 44, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 44, 61, 5) },
  { pnode(GPIO, 44, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 44, 61, 7) },
  { pnode(GPIO, 44, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 44, 61, 1) },
  { pnode(GPIO, 44, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 44, 61, 3) },
  { pnode(GPIO, 44, 61, DATAOUT, 3, 0), rnode(GIN, 44, 61, 2) },
  { pnode(GPIO, 44, 61, DATAOUT, 3, 1), rnode(GIN, 44, 61, 3) },
  { pnode(GPIO, 44, 61, DATAOUT, 3, 2), rnode(GIN, 44, 61, 4) },
  { pnode(GPIO, 44, 61, DATAOUT, 3, 3), rnode(GIN, 44, 61, 5) },
  { pnode(GPIO, 44, 61, DATAOUT, 3, 4), rnode(GIN, 44, 61, 6) },
  { pnode(GPIO, 44, 61, OEIN, 3, 0), rnode(GOUT, 44, 61, 2) },
  { pnode(GPIO, 44, 61, OEIN, 3, 1), rnode(GOUT, 44, 61, 19) },
  { pnode(GPIO, 44, 61, BSLIPMAX, 3, -1), rnode(GIN, 44, 61, 1) },
  { pnode(GPIO, 44, 61, CEIN, 3, -1), rnode(GOUT, 44, 61, 5) },
  { pnode(GPIO, 44, 61, CEOUT, 3, -1), rnode(GOUT, 44, 61, 4) },
  { pnode(GPIO, 44, 61, SCLR, 3, -1), rnode(GOUT, 44, 61, 1) },
  { pnode(GPIO, 44, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 44, 61, 4) },
  { pnode(GPIO, 44, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 44, 61, 6) },
  { pnode(GPIO, 44, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 44, 61, 0) },
  { pnode(GPIO, 44, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 44, 61, 2) },
  { pnode(GPIO, 46, 0, DATAIN, 0, 0), rnode(GOUT, 46, 0, 44) },
  { pnode(GPIO, 46, 0, DATAIN, 0, 1), rnode(GOUT, 46, 0, 34) },
  { pnode(GPIO, 46, 0, DATAIN, 0, 2), rnode(GOUT, 46, 0, 43) },
  { pnode(GPIO, 46, 0, DATAIN, 0, 3), rnode(GOUT, 46, 0, 29) },
  { pnode(GPIO, 46, 0, DATAOUT, 0, 0), rnode(GIN, 46, 0, 18) },
  { pnode(GPIO, 46, 0, DATAOUT, 0, 1), rnode(GIN, 46, 0, 17) },
  { pnode(GPIO, 46, 0, DATAOUT, 0, 2), rnode(GIN, 46, 0, 16) },
  { pnode(GPIO, 46, 0, DATAOUT, 0, 3), rnode(GIN, 46, 0, 15) },
  { pnode(GPIO, 46, 0, DATAOUT, 0, 4), rnode(GIN, 46, 0, 14) },
  { pnode(GPIO, 46, 0, OEIN, 0, 0), rnode(GOUT, 46, 0, 38) },
  { pnode(GPIO, 46, 0, OEIN, 0, 1), rnode(GOUT, 46, 0, 30) },
  { pnode(GPIO, 46, 0, BSLIPMAX, 0, -1), rnode(GIN, 46, 0, 19) },
  { pnode(GPIO, 46, 0, CEIN, 0, -1), rnode(GOUT, 46, 0, 27) },
  { pnode(GPIO, 46, 0, CEOUT, 0, -1), rnode(GOUT, 46, 0, 45) },
  { pnode(GPIO, 46, 0, ACLR, 0, -1), rnode(GOUT, 46, 0, 28) },
  { pnode(GPIO, 46, 0, SCLR, 0, -1), rnode(GOUT, 46, 0, 31) },
  { pnode(GPIO, 46, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 46, 0, 10) },
  { pnode(GPIO, 46, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 46, 0, 8) },
  { pnode(GPIO, 46, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 46, 0, 14) },
  { pnode(GPIO, 46, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 46, 0, 12) },
  { pnode(GPIO, 46, 0, DATAIN, 1, 0), rnode(GOUT, 46, 0, 49) },
  { pnode(GPIO, 46, 0, DATAIN, 1, 1), rnode(GOUT, 46, 0, 41) },
  { pnode(GPIO, 46, 0, DATAIN, 1, 2), rnode(GOUT, 46, 0, 48) },
  { pnode(GPIO, 46, 0, DATAIN, 1, 3), rnode(GOUT, 46, 0, 40) },
  { pnode(GPIO, 46, 0, DATAOUT, 1, 0), rnode(GIN, 46, 0, 24) },
  { pnode(GPIO, 46, 0, DATAOUT, 1, 1), rnode(GIN, 46, 0, 23) },
  { pnode(GPIO, 46, 0, DATAOUT, 1, 2), rnode(GIN, 46, 0, 22) },
  { pnode(GPIO, 46, 0, DATAOUT, 1, 3), rnode(GIN, 46, 0, 21) },
  { pnode(GPIO, 46, 0, DATAOUT, 1, 4), rnode(GIN, 46, 0, 20) },
  { pnode(GPIO, 46, 0, OEIN, 1, 0), rnode(GOUT, 46, 0, 47) },
  { pnode(GPIO, 46, 0, OEIN, 1, 1), rnode(GOUT, 46, 0, 39) },
  { pnode(GPIO, 46, 0, BSLIPMAX, 1, -1), rnode(GIN, 46, 0, 25) },
  { pnode(GPIO, 46, 0, CEIN, 1, -1), rnode(GOUT, 46, 0, 51) },
  { pnode(GPIO, 46, 0, CEOUT, 1, -1), rnode(GOUT, 46, 0, 50) },
  { pnode(GPIO, 46, 0, ACLR, 1, -1), rnode(GOUT, 46, 0, 42) },
  { pnode(GPIO, 46, 0, SCLR, 1, -1), rnode(GOUT, 46, 0, 46) },
  { pnode(GPIO, 46, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 46, 0, 11) },
  { pnode(GPIO, 46, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 46, 0, 9) },
  { pnode(GPIO, 46, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 46, 0, 15) },
  { pnode(GPIO, 46, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 46, 0, 13) },
  { pnode(GPIO, 46, 0, DATAOUT, 2, 0), rnode(GIN, 46, 0, 8) },
  { pnode(GPIO, 46, 0, DATAOUT, 2, 1), rnode(GIN, 46, 0, 9) },
  { pnode(GPIO, 46, 0, DATAOUT, 2, 2), rnode(GIN, 46, 0, 10) },
  { pnode(GPIO, 46, 0, DATAOUT, 2, 3), rnode(GIN, 46, 0, 11) },
  { pnode(GPIO, 46, 0, DATAOUT, 2, 4), rnode(GIN, 46, 0, 12) },
  { pnode(GPIO, 46, 0, OEIN, 2, 0), rnode(GOUT, 46, 0, 16) },
  { pnode(GPIO, 46, 0, OEIN, 2, 1), rnode(GOUT, 46, 0, 24) },
  { pnode(GPIO, 46, 0, BSLIPMAX, 2, -1), rnode(GIN, 46, 0, 7) },
  { pnode(GPIO, 46, 0, CEIN, 2, -1), rnode(GOUT, 46, 0, 20) },
  { pnode(GPIO, 46, 0, CEOUT, 2, -1), rnode(GOUT, 46, 0, 13) },
  { pnode(GPIO, 46, 0, ACLR, 2, -1), rnode(GOUT, 46, 0, 21) },
  { pnode(GPIO, 46, 0, SCLR, 2, -1), rnode(GOUT, 46, 0, 25) },
  { pnode(GPIO, 46, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 46, 0, 5) },
  { pnode(GPIO, 46, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 46, 0, 7) },
  { pnode(GPIO, 46, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 46, 0, 1) },
  { pnode(GPIO, 46, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 46, 0, 3) },
  { pnode(GPIO, 46, 0, DATAOUT, 3, 4), rnode(GIN, 46, 0, 6) },
  { pnode(GPIO, 46, 0, BSLIPMAX, 3, -1), rnode(GIN, 46, 0, 1) },
  { pnode(GPIO, 46, 0, CEIN, 3, -1), rnode(GOUT, 46, 0, 5) },
  { pnode(GPIO, 46, 0, CEOUT, 3, -1), rnode(GOUT, 46, 0, 4) },
  { pnode(GPIO, 46, 0, ACLR, 3, -1), rnode(GOUT, 46, 0, 12) },
  { pnode(GPIO, 46, 0, SCLR, 3, -1), rnode(GOUT, 46, 0, 1) },
  { pnode(GPIO, 46, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 46, 0, 4) },
  { pnode(GPIO, 46, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 46, 0, 6) },
  { pnode(GPIO, 46, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 46, 0, 0) },
  { pnode(GPIO, 46, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 46, 0, 2) },
  { pnode(GPIO, 46, 61, DATAIN, 0, 0), rnode(GOUT, 46, 61, 44) },
  { pnode(GPIO, 46, 61, DATAIN, 0, 1), rnode(GOUT, 46, 61, 34) },
  { pnode(GPIO, 46, 61, DATAIN, 0, 2), rnode(GOUT, 46, 61, 43) },
  { pnode(GPIO, 46, 61, DATAIN, 0, 3), rnode(GOUT, 46, 61, 29) },
  { pnode(GPIO, 46, 61, DATAOUT, 0, 0), rnode(GIN, 46, 61, 18) },
  { pnode(GPIO, 46, 61, DATAOUT, 0, 1), rnode(GIN, 46, 61, 17) },
  { pnode(GPIO, 46, 61, DATAOUT, 0, 2), rnode(GIN, 46, 61, 16) },
  { pnode(GPIO, 46, 61, DATAOUT, 0, 3), rnode(GIN, 46, 61, 15) },
  { pnode(GPIO, 46, 61, DATAOUT, 0, 4), rnode(GIN, 46, 61, 14) },
  { pnode(GPIO, 46, 61, OEIN, 0, 0), rnode(GOUT, 46, 61, 38) },
  { pnode(GPIO, 46, 61, OEIN, 0, 1), rnode(GOUT, 46, 61, 30) },
  { pnode(GPIO, 46, 61, BSLIPMAX, 0, -1), rnode(GIN, 46, 61, 19) },
  { pnode(GPIO, 46, 61, CEIN, 0, -1), rnode(GOUT, 46, 61, 27) },
  { pnode(GPIO, 46, 61, CEOUT, 0, -1), rnode(GOUT, 46, 61, 45) },
  { pnode(GPIO, 46, 61, ACLR, 0, -1), rnode(GOUT, 46, 61, 28) },
  { pnode(GPIO, 46, 61, SCLR, 0, -1), rnode(GOUT, 46, 61, 31) },
  { pnode(GPIO, 46, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 46, 61, 10) },
  { pnode(GPIO, 46, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 46, 61, 8) },
  { pnode(GPIO, 46, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 46, 61, 14) },
  { pnode(GPIO, 46, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 46, 61, 12) },
  { pnode(GPIO, 46, 61, DATAIN, 1, 0), rnode(GOUT, 46, 61, 49) },
  { pnode(GPIO, 46, 61, DATAIN, 1, 1), rnode(GOUT, 46, 61, 41) },
  { pnode(GPIO, 46, 61, DATAIN, 1, 2), rnode(GOUT, 46, 61, 48) },
  { pnode(GPIO, 46, 61, DATAIN, 1, 3), rnode(GOUT, 46, 61, 40) },
  { pnode(GPIO, 46, 61, DATAOUT, 1, 0), rnode(GIN, 46, 61, 24) },
  { pnode(GPIO, 46, 61, DATAOUT, 1, 1), rnode(GIN, 46, 61, 23) },
  { pnode(GPIO, 46, 61, DATAOUT, 1, 2), rnode(GIN, 46, 61, 22) },
  { pnode(GPIO, 46, 61, DATAOUT, 1, 3), rnode(GIN, 46, 61, 21) },
  { pnode(GPIO, 46, 61, DATAOUT, 1, 4), rnode(GIN, 46, 61, 20) },
  { pnode(GPIO, 46, 61, OEIN, 1, 0), rnode(GOUT, 46, 61, 47) },
  { pnode(GPIO, 46, 61, OEIN, 1, 1), rnode(GOUT, 46, 61, 39) },
  { pnode(GPIO, 46, 61, BSLIPMAX, 1, -1), rnode(GIN, 46, 61, 25) },
  { pnode(GPIO, 46, 61, CEIN, 1, -1), rnode(GOUT, 46, 61, 51) },
  { pnode(GPIO, 46, 61, CEOUT, 1, -1), rnode(GOUT, 46, 61, 50) },
  { pnode(GPIO, 46, 61, ACLR, 1, -1), rnode(GOUT, 46, 61, 42) },
  { pnode(GPIO, 46, 61, SCLR, 1, -1), rnode(GOUT, 46, 61, 46) },
  { pnode(GPIO, 46, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 46, 61, 11) },
  { pnode(GPIO, 46, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 46, 61, 9) },
  { pnode(GPIO, 46, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 46, 61, 15) },
  { pnode(GPIO, 46, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 46, 61, 13) },
  { pnode(GPIO, 46, 61, DATAOUT, 2, 0), rnode(GIN, 46, 61, 8) },
  { pnode(GPIO, 46, 61, DATAOUT, 2, 1), rnode(GIN, 46, 61, 9) },
  { pnode(GPIO, 46, 61, DATAOUT, 2, 2), rnode(GIN, 46, 61, 10) },
  { pnode(GPIO, 46, 61, DATAOUT, 2, 3), rnode(GIN, 46, 61, 11) },
  { pnode(GPIO, 46, 61, DATAOUT, 2, 4), rnode(GIN, 46, 61, 12) },
  { pnode(GPIO, 46, 61, OEIN, 2, 0), rnode(GOUT, 46, 61, 16) },
  { pnode(GPIO, 46, 61, OEIN, 2, 1), rnode(GOUT, 46, 61, 24) },
  { pnode(GPIO, 46, 61, BSLIPMAX, 2, -1), rnode(GIN, 46, 61, 7) },
  { pnode(GPIO, 46, 61, CEIN, 2, -1), rnode(GOUT, 46, 61, 20) },
  { pnode(GPIO, 46, 61, CEOUT, 2, -1), rnode(GOUT, 46, 61, 13) },
  { pnode(GPIO, 46, 61, ACLR, 2, -1), rnode(GOUT, 46, 61, 21) },
  { pnode(GPIO, 46, 61, SCLR, 2, -1), rnode(GOUT, 46, 61, 25) },
  { pnode(GPIO, 46, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 46, 61, 5) },
  { pnode(GPIO, 46, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 46, 61, 7) },
  { pnode(GPIO, 46, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 46, 61, 1) },
  { pnode(GPIO, 46, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 46, 61, 3) },
  { pnode(GPIO, 46, 61, DATAOUT, 3, 4), rnode(GIN, 46, 61, 6) },
  { pnode(GPIO, 46, 61, BSLIPMAX, 3, -1), rnode(GIN, 46, 61, 1) },
  { pnode(GPIO, 46, 61, CEIN, 3, -1), rnode(GOUT, 46, 61, 5) },
  { pnode(GPIO, 46, 61, CEOUT, 3, -1), rnode(GOUT, 46, 61, 4) },
  { pnode(GPIO, 46, 61, ACLR, 3, -1), rnode(GOUT, 46, 61, 12) },
  { pnode(GPIO, 46, 61, SCLR, 3, -1), rnode(GOUT, 46, 61, 1) },
  { pnode(GPIO, 46, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 46, 61, 4) },
  { pnode(GPIO, 46, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 46, 61, 6) },
  { pnode(GPIO, 46, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 46, 61, 0) },
  { pnode(GPIO, 46, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 46, 61, 2) },
  { pnode(GPIO, 48, 0, DATAOUT, 0, 4), rnode(GIN, 48, 0, 14) },
  { pnode(GPIO, 48, 0, BSLIPMAX, 0, -1), rnode(GIN, 48, 0, 19) },
  { pnode(GPIO, 48, 0, CEIN, 0, -1), rnode(GOUT, 48, 0, 27) },
  { pnode(GPIO, 48, 0, CEOUT, 0, -1), rnode(GOUT, 48, 0, 45) },
  { pnode(GPIO, 48, 0, ACLR, 0, -1), rnode(GOUT, 48, 0, 28) },
  { pnode(GPIO, 48, 0, SCLR, 0, -1), rnode(GOUT, 48, 0, 31) },
  { pnode(GPIO, 48, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 48, 0, 10) },
  { pnode(GPIO, 48, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 48, 0, 8) },
  { pnode(GPIO, 48, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 48, 0, 14) },
  { pnode(GPIO, 48, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 48, 0, 12) },
  { pnode(GPIO, 48, 0, DATAOUT, 1, 4), rnode(GIN, 48, 0, 20) },
  { pnode(GPIO, 48, 0, BSLIPMAX, 1, -1), rnode(GIN, 48, 0, 25) },
  { pnode(GPIO, 48, 0, CEIN, 1, -1), rnode(GOUT, 48, 0, 51) },
  { pnode(GPIO, 48, 0, CEOUT, 1, -1), rnode(GOUT, 48, 0, 50) },
  { pnode(GPIO, 48, 0, ACLR, 1, -1), rnode(GOUT, 48, 0, 42) },
  { pnode(GPIO, 48, 0, SCLR, 1, -1), rnode(GOUT, 48, 0, 46) },
  { pnode(GPIO, 48, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 48, 0, 11) },
  { pnode(GPIO, 48, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 48, 0, 9) },
  { pnode(GPIO, 48, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 48, 0, 15) },
  { pnode(GPIO, 48, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 48, 0, 13) },
  { pnode(GPIO, 48, 0, DATAOUT, 2, 4), rnode(GIN, 48, 0, 12) },
  { pnode(GPIO, 48, 0, BSLIPMAX, 2, -1), rnode(GIN, 48, 0, 7) },
  { pnode(GPIO, 48, 0, CEIN, 2, -1), rnode(GOUT, 48, 0, 20) },
  { pnode(GPIO, 48, 0, CEOUT, 2, -1), rnode(GOUT, 48, 0, 13) },
  { pnode(GPIO, 48, 0, ACLR, 2, -1), rnode(GOUT, 48, 0, 21) },
  { pnode(GPIO, 48, 0, SCLR, 2, -1), rnode(GOUT, 48, 0, 25) },
  { pnode(GPIO, 48, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 48, 0, 5) },
  { pnode(GPIO, 48, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 48, 0, 7) },
  { pnode(GPIO, 48, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 48, 0, 1) },
  { pnode(GPIO, 48, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 48, 0, 3) },
  { pnode(GPIO, 48, 0, DATAIN, 3, 0), rnode(GOUT, 48, 0, 3) },
  { pnode(GPIO, 48, 0, DATAIN, 3, 1), rnode(GOUT, 48, 0, 17) },
  { pnode(GPIO, 48, 0, DATAIN, 3, 2), rnode(GOUT, 48, 0, 8) },
  { pnode(GPIO, 48, 0, DATAIN, 3, 3), rnode(GOUT, 48, 0, 18) },
  { pnode(GPIO, 48, 0, DATAOUT, 3, 0), rnode(GIN, 48, 0, 2) },
  { pnode(GPIO, 48, 0, DATAOUT, 3, 1), rnode(GIN, 48, 0, 3) },
  { pnode(GPIO, 48, 0, DATAOUT, 3, 2), rnode(GIN, 48, 0, 4) },
  { pnode(GPIO, 48, 0, DATAOUT, 3, 3), rnode(GIN, 48, 0, 5) },
  { pnode(GPIO, 48, 0, DATAOUT, 3, 4), rnode(GIN, 48, 0, 6) },
  { pnode(GPIO, 48, 0, OEIN, 3, 0), rnode(GOUT, 48, 0, 2) },
  { pnode(GPIO, 48, 0, OEIN, 3, 1), rnode(GOUT, 48, 0, 19) },
  { pnode(GPIO, 48, 0, BSLIPMAX, 3, -1), rnode(GIN, 48, 0, 1) },
  { pnode(GPIO, 48, 0, CEIN, 3, -1), rnode(GOUT, 48, 0, 5) },
  { pnode(GPIO, 48, 0, CEOUT, 3, -1), rnode(GOUT, 48, 0, 4) },
  { pnode(GPIO, 48, 0, ACLR, 3, -1), rnode(GOUT, 48, 0, 12) },
  { pnode(GPIO, 48, 0, SCLR, 3, -1), rnode(GOUT, 48, 0, 1) },
  { pnode(GPIO, 48, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 48, 0, 4) },
  { pnode(GPIO, 48, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 48, 0, 6) },
  { pnode(GPIO, 48, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 48, 0, 0) },
  { pnode(GPIO, 48, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 48, 0, 2) },
  { pnode(GPIO, 48, 61, DATAOUT, 0, 4), rnode(GIN, 48, 61, 14) },
  { pnode(GPIO, 48, 61, BSLIPMAX, 0, -1), rnode(GIN, 48, 61, 19) },
  { pnode(GPIO, 48, 61, CEIN, 0, -1), rnode(GOUT, 48, 61, 27) },
  { pnode(GPIO, 48, 61, CEOUT, 0, -1), rnode(GOUT, 48, 61, 45) },
  { pnode(GPIO, 48, 61, ACLR, 0, -1), rnode(GOUT, 48, 61, 28) },
  { pnode(GPIO, 48, 61, SCLR, 0, -1), rnode(GOUT, 48, 61, 31) },
  { pnode(GPIO, 48, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 48, 61, 10) },
  { pnode(GPIO, 48, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 48, 61, 8) },
  { pnode(GPIO, 48, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 48, 61, 14) },
  { pnode(GPIO, 48, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 48, 61, 12) },
  { pnode(GPIO, 48, 61, DATAOUT, 1, 4), rnode(GIN, 48, 61, 20) },
  { pnode(GPIO, 48, 61, BSLIPMAX, 1, -1), rnode(GIN, 48, 61, 25) },
  { pnode(GPIO, 48, 61, CEIN, 1, -1), rnode(GOUT, 48, 61, 51) },
  { pnode(GPIO, 48, 61, CEOUT, 1, -1), rnode(GOUT, 48, 61, 50) },
  { pnode(GPIO, 48, 61, ACLR, 1, -1), rnode(GOUT, 48, 61, 42) },
  { pnode(GPIO, 48, 61, SCLR, 1, -1), rnode(GOUT, 48, 61, 46) },
  { pnode(GPIO, 48, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 48, 61, 11) },
  { pnode(GPIO, 48, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 48, 61, 9) },
  { pnode(GPIO, 48, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 48, 61, 15) },
  { pnode(GPIO, 48, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 48, 61, 13) },
  { pnode(GPIO, 48, 61, DATAOUT, 2, 4), rnode(GIN, 48, 61, 12) },
  { pnode(GPIO, 48, 61, BSLIPMAX, 2, -1), rnode(GIN, 48, 61, 7) },
  { pnode(GPIO, 48, 61, CEIN, 2, -1), rnode(GOUT, 48, 61, 20) },
  { pnode(GPIO, 48, 61, CEOUT, 2, -1), rnode(GOUT, 48, 61, 13) },
  { pnode(GPIO, 48, 61, ACLR, 2, -1), rnode(GOUT, 48, 61, 21) },
  { pnode(GPIO, 48, 61, SCLR, 2, -1), rnode(GOUT, 48, 61, 25) },
  { pnode(GPIO, 48, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 48, 61, 5) },
  { pnode(GPIO, 48, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 48, 61, 7) },
  { pnode(GPIO, 48, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 48, 61, 1) },
  { pnode(GPIO, 48, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 48, 61, 3) },
  { pnode(GPIO, 48, 61, DATAIN, 3, 0), rnode(GOUT, 48, 61, 3) },
  { pnode(GPIO, 48, 61, DATAIN, 3, 1), rnode(GOUT, 48, 61, 17) },
  { pnode(GPIO, 48, 61, DATAIN, 3, 2), rnode(GOUT, 48, 61, 8) },
  { pnode(GPIO, 48, 61, DATAIN, 3, 3), rnode(GOUT, 48, 61, 18) },
  { pnode(GPIO, 48, 61, DATAOUT, 3, 0), rnode(GIN, 48, 61, 2) },
  { pnode(GPIO, 48, 61, DATAOUT, 3, 1), rnode(GIN, 48, 61, 3) },
  { pnode(GPIO, 48, 61, DATAOUT, 3, 2), rnode(GIN, 48, 61, 4) },
  { pnode(GPIO, 48, 61, DATAOUT, 3, 3), rnode(GIN, 48, 61, 5) },
  { pnode(GPIO, 48, 61, DATAOUT, 3, 4), rnode(GIN, 48, 61, 6) },
  { pnode(GPIO, 48, 61, OEIN, 3, 0), rnode(GOUT, 48, 61, 2) },
  { pnode(GPIO, 48, 61, OEIN, 3, 1), rnode(GOUT, 48, 61, 19) },
  { pnode(GPIO, 48, 61, BSLIPMAX, 3, -1), rnode(GIN, 48, 61, 1) },
  { pnode(GPIO, 48, 61, CEIN, 3, -1), rnode(GOUT, 48, 61, 5) },
  { pnode(GPIO, 48, 61, CEOUT, 3, -1), rnode(GOUT, 48, 61, 4) },
  { pnode(GPIO, 48, 61, ACLR, 3, -1), rnode(GOUT, 48, 61, 12) },
  { pnode(GPIO, 48, 61, SCLR, 3, -1), rnode(GOUT, 48, 61, 1) },
  { pnode(GPIO, 48, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 48, 61, 4) },
  { pnode(GPIO, 48, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 48, 61, 6) },
  { pnode(GPIO, 48, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 48, 61, 0) },
  { pnode(GPIO, 48, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 48, 61, 2) },
  { pnode(GPIO, 50, 0, DATAOUT, 0, 0), rnode(GIN, 50, 0, 18) },
  { pnode(GPIO, 50, 0, DATAOUT, 0, 1), rnode(GIN, 50, 0, 17) },
  { pnode(GPIO, 50, 0, DATAOUT, 0, 2), rnode(GIN, 50, 0, 16) },
  { pnode(GPIO, 50, 0, DATAOUT, 0, 3), rnode(GIN, 50, 0, 15) },
  { pnode(GPIO, 50, 0, DATAOUT, 0, 4), rnode(GIN, 50, 0, 14) },
  { pnode(GPIO, 50, 0, BSLIPMAX, 0, -1), rnode(GIN, 50, 0, 19) },
  { pnode(GPIO, 50, 0, CEIN, 0, -1), rnode(GOUT, 50, 0, 27) },
  { pnode(GPIO, 50, 0, CEOUT, 0, -1), rnode(GOUT, 50, 0, 45) },
  { pnode(GPIO, 50, 0, ACLR, 0, -1), rnode(GOUT, 50, 0, 28) },
  { pnode(GPIO, 50, 0, SCLR, 0, -1), rnode(GOUT, 50, 0, 31) },
  { pnode(GPIO, 50, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 50, 0, 10) },
  { pnode(GPIO, 50, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 50, 0, 8) },
  { pnode(GPIO, 50, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 50, 0, 14) },
  { pnode(GPIO, 50, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 50, 0, 12) },
  { pnode(GPIO, 50, 0, DATAOUT, 1, 0), rnode(GIN, 50, 0, 24) },
  { pnode(GPIO, 50, 0, DATAOUT, 1, 1), rnode(GIN, 50, 0, 23) },
  { pnode(GPIO, 50, 0, DATAOUT, 1, 2), rnode(GIN, 50, 0, 22) },
  { pnode(GPIO, 50, 0, DATAOUT, 1, 3), rnode(GIN, 50, 0, 21) },
  { pnode(GPIO, 50, 0, DATAOUT, 1, 4), rnode(GIN, 50, 0, 20) },
  { pnode(GPIO, 50, 0, BSLIPMAX, 1, -1), rnode(GIN, 50, 0, 25) },
  { pnode(GPIO, 50, 0, CEIN, 1, -1), rnode(GOUT, 50, 0, 51) },
  { pnode(GPIO, 50, 0, CEOUT, 1, -1), rnode(GOUT, 50, 0, 50) },
  { pnode(GPIO, 50, 0, ACLR, 1, -1), rnode(GOUT, 50, 0, 42) },
  { pnode(GPIO, 50, 0, SCLR, 1, -1), rnode(GOUT, 50, 0, 46) },
  { pnode(GPIO, 50, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 50, 0, 11) },
  { pnode(GPIO, 50, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 50, 0, 9) },
  { pnode(GPIO, 50, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 50, 0, 15) },
  { pnode(GPIO, 50, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 50, 0, 13) },
  { pnode(GPIO, 50, 0, DATAOUT, 2, 0), rnode(GIN, 50, 0, 8) },
  { pnode(GPIO, 50, 0, DATAOUT, 2, 1), rnode(GIN, 50, 0, 9) },
  { pnode(GPIO, 50, 0, DATAOUT, 2, 2), rnode(GIN, 50, 0, 10) },
  { pnode(GPIO, 50, 0, DATAOUT, 2, 3), rnode(GIN, 50, 0, 11) },
  { pnode(GPIO, 50, 0, DATAOUT, 2, 4), rnode(GIN, 50, 0, 12) },
  { pnode(GPIO, 50, 0, OEIN, 2, 0), rnode(GOUT, 50, 0, 16) },
  { pnode(GPIO, 50, 0, OEIN, 2, 1), rnode(GOUT, 50, 0, 24) },
  { pnode(GPIO, 50, 0, BSLIPMAX, 2, -1), rnode(GIN, 50, 0, 7) },
  { pnode(GPIO, 50, 0, CEIN, 2, -1), rnode(GOUT, 50, 0, 20) },
  { pnode(GPIO, 50, 0, CEOUT, 2, -1), rnode(GOUT, 50, 0, 13) },
  { pnode(GPIO, 50, 0, SCLR, 2, -1), rnode(GOUT, 50, 0, 25) },
  { pnode(GPIO, 50, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 50, 0, 5) },
  { pnode(GPIO, 50, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 50, 0, 7) },
  { pnode(GPIO, 50, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 50, 0, 1) },
  { pnode(GPIO, 50, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 50, 0, 3) },
  { pnode(GPIO, 50, 0, DATAOUT, 3, 4), rnode(GIN, 50, 0, 6) },
  { pnode(GPIO, 50, 0, BSLIPMAX, 3, -1), rnode(GIN, 50, 0, 1) },
  { pnode(GPIO, 50, 0, CEIN, 3, -1), rnode(GOUT, 50, 0, 5) },
  { pnode(GPIO, 50, 0, CEOUT, 3, -1), rnode(GOUT, 50, 0, 4) },
  { pnode(GPIO, 50, 0, ACLR, 3, -1), rnode(GOUT, 50, 0, 12) },
  { pnode(GPIO, 50, 0, SCLR, 3, -1), rnode(GOUT, 50, 0, 1) },
  { pnode(GPIO, 50, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 50, 0, 4) },
  { pnode(GPIO, 50, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 50, 0, 6) },
  { pnode(GPIO, 50, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 50, 0, 0) },
  { pnode(GPIO, 50, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 50, 0, 2) },
  { pnode(GPIO, 50, 61, DATAOUT, 0, 0), rnode(GIN, 50, 61, 18) },
  { pnode(GPIO, 50, 61, DATAOUT, 0, 1), rnode(GIN, 50, 61, 17) },
  { pnode(GPIO, 50, 61, DATAOUT, 0, 2), rnode(GIN, 50, 61, 16) },
  { pnode(GPIO, 50, 61, DATAOUT, 0, 3), rnode(GIN, 50, 61, 15) },
  { pnode(GPIO, 50, 61, DATAOUT, 0, 4), rnode(GIN, 50, 61, 14) },
  { pnode(GPIO, 50, 61, BSLIPMAX, 0, -1), rnode(GIN, 50, 61, 19) },
  { pnode(GPIO, 50, 61, CEIN, 0, -1), rnode(GOUT, 50, 61, 27) },
  { pnode(GPIO, 50, 61, CEOUT, 0, -1), rnode(GOUT, 50, 61, 45) },
  { pnode(GPIO, 50, 61, ACLR, 0, -1), rnode(GOUT, 50, 61, 28) },
  { pnode(GPIO, 50, 61, SCLR, 0, -1), rnode(GOUT, 50, 61, 31) },
  { pnode(GPIO, 50, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 50, 61, 10) },
  { pnode(GPIO, 50, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 50, 61, 8) },
  { pnode(GPIO, 50, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 50, 61, 14) },
  { pnode(GPIO, 50, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 50, 61, 12) },
  { pnode(GPIO, 50, 61, DATAOUT, 1, 0), rnode(GIN, 50, 61, 24) },
  { pnode(GPIO, 50, 61, DATAOUT, 1, 1), rnode(GIN, 50, 61, 23) },
  { pnode(GPIO, 50, 61, DATAOUT, 1, 2), rnode(GIN, 50, 61, 22) },
  { pnode(GPIO, 50, 61, DATAOUT, 1, 3), rnode(GIN, 50, 61, 21) },
  { pnode(GPIO, 50, 61, DATAOUT, 1, 4), rnode(GIN, 50, 61, 20) },
  { pnode(GPIO, 50, 61, BSLIPMAX, 1, -1), rnode(GIN, 50, 61, 25) },
  { pnode(GPIO, 50, 61, CEIN, 1, -1), rnode(GOUT, 50, 61, 51) },
  { pnode(GPIO, 50, 61, CEOUT, 1, -1), rnode(GOUT, 50, 61, 50) },
  { pnode(GPIO, 50, 61, ACLR, 1, -1), rnode(GOUT, 50, 61, 42) },
  { pnode(GPIO, 50, 61, SCLR, 1, -1), rnode(GOUT, 50, 61, 46) },
  { pnode(GPIO, 50, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 50, 61, 11) },
  { pnode(GPIO, 50, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 50, 61, 9) },
  { pnode(GPIO, 50, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 50, 61, 15) },
  { pnode(GPIO, 50, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 50, 61, 13) },
  { pnode(GPIO, 50, 61, DATAOUT, 2, 0), rnode(GIN, 50, 61, 8) },
  { pnode(GPIO, 50, 61, DATAOUT, 2, 1), rnode(GIN, 50, 61, 9) },
  { pnode(GPIO, 50, 61, DATAOUT, 2, 2), rnode(GIN, 50, 61, 10) },
  { pnode(GPIO, 50, 61, DATAOUT, 2, 3), rnode(GIN, 50, 61, 11) },
  { pnode(GPIO, 50, 61, DATAOUT, 2, 4), rnode(GIN, 50, 61, 12) },
  { pnode(GPIO, 50, 61, OEIN, 2, 0), rnode(GOUT, 50, 61, 16) },
  { pnode(GPIO, 50, 61, OEIN, 2, 1), rnode(GOUT, 50, 61, 24) },
  { pnode(GPIO, 50, 61, BSLIPMAX, 2, -1), rnode(GIN, 50, 61, 7) },
  { pnode(GPIO, 50, 61, CEIN, 2, -1), rnode(GOUT, 50, 61, 20) },
  { pnode(GPIO, 50, 61, CEOUT, 2, -1), rnode(GOUT, 50, 61, 13) },
  { pnode(GPIO, 50, 61, SCLR, 2, -1), rnode(GOUT, 50, 61, 25) },
  { pnode(GPIO, 50, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 50, 61, 5) },
  { pnode(GPIO, 50, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 50, 61, 7) },
  { pnode(GPIO, 50, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 50, 61, 1) },
  { pnode(GPIO, 50, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 50, 61, 3) },
  { pnode(GPIO, 50, 61, DATAOUT, 3, 4), rnode(GIN, 50, 61, 6) },
  { pnode(GPIO, 50, 61, BSLIPMAX, 3, -1), rnode(GIN, 50, 61, 1) },
  { pnode(GPIO, 50, 61, CEIN, 3, -1), rnode(GOUT, 50, 61, 5) },
  { pnode(GPIO, 50, 61, CEOUT, 3, -1), rnode(GOUT, 50, 61, 4) },
  { pnode(GPIO, 50, 61, ACLR, 3, -1), rnode(GOUT, 50, 61, 12) },
  { pnode(GPIO, 50, 61, SCLR, 3, -1), rnode(GOUT, 50, 61, 1) },
  { pnode(GPIO, 50, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 50, 61, 4) },
  { pnode(GPIO, 50, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 50, 61, 6) },
  { pnode(GPIO, 50, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 50, 61, 0) },
  { pnode(GPIO, 50, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 50, 61, 2) },
  { pnode(GPIO, 51, 0, DATAOUT, 0, 4), rnode(GIN, 51, 0, 14) },
  { pnode(GPIO, 51, 0, BSLIPMAX, 0, -1), rnode(GIN, 51, 0, 19) },
  { pnode(GPIO, 51, 0, CEIN, 0, -1), rnode(GOUT, 51, 0, 27) },
  { pnode(GPIO, 51, 0, CEOUT, 0, -1), rnode(GOUT, 51, 0, 45) },
  { pnode(GPIO, 51, 0, ACLR, 0, -1), rnode(GOUT, 51, 0, 28) },
  { pnode(GPIO, 51, 0, SCLR, 0, -1), rnode(GOUT, 51, 0, 31) },
  { pnode(GPIO, 51, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 51, 0, 10) },
  { pnode(GPIO, 51, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 51, 0, 8) },
  { pnode(GPIO, 51, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 51, 0, 14) },
  { pnode(GPIO, 51, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 51, 0, 12) },
  { pnode(GPIO, 51, 0, DATAOUT, 1, 4), rnode(GIN, 51, 0, 20) },
  { pnode(GPIO, 51, 0, BSLIPMAX, 1, -1), rnode(GIN, 51, 0, 25) },
  { pnode(GPIO, 51, 0, CEIN, 1, -1), rnode(GOUT, 51, 0, 51) },
  { pnode(GPIO, 51, 0, CEOUT, 1, -1), rnode(GOUT, 51, 0, 50) },
  { pnode(GPIO, 51, 0, ACLR, 1, -1), rnode(GOUT, 51, 0, 42) },
  { pnode(GPIO, 51, 0, SCLR, 1, -1), rnode(GOUT, 51, 0, 46) },
  { pnode(GPIO, 51, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 51, 0, 11) },
  { pnode(GPIO, 51, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 51, 0, 9) },
  { pnode(GPIO, 51, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 51, 0, 15) },
  { pnode(GPIO, 51, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 51, 0, 13) },
  { pnode(GPIO, 51, 0, DATAOUT, 2, 4), rnode(GIN, 51, 0, 12) },
  { pnode(GPIO, 51, 0, BSLIPMAX, 2, -1), rnode(GIN, 51, 0, 7) },
  { pnode(GPIO, 51, 0, CEIN, 2, -1), rnode(GOUT, 51, 0, 20) },
  { pnode(GPIO, 51, 0, CEOUT, 2, -1), rnode(GOUT, 51, 0, 13) },
  { pnode(GPIO, 51, 0, ACLR, 2, -1), rnode(GOUT, 51, 0, 21) },
  { pnode(GPIO, 51, 0, SCLR, 2, -1), rnode(GOUT, 51, 0, 25) },
  { pnode(GPIO, 51, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 51, 0, 5) },
  { pnode(GPIO, 51, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 51, 0, 7) },
  { pnode(GPIO, 51, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 51, 0, 1) },
  { pnode(GPIO, 51, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 51, 0, 3) },
  { pnode(GPIO, 51, 0, DATAIN, 3, 0), rnode(GOUT, 51, 0, 3) },
  { pnode(GPIO, 51, 0, DATAIN, 3, 1), rnode(GOUT, 51, 0, 17) },
  { pnode(GPIO, 51, 0, DATAIN, 3, 2), rnode(GOUT, 51, 0, 8) },
  { pnode(GPIO, 51, 0, DATAIN, 3, 3), rnode(GOUT, 51, 0, 18) },
  { pnode(GPIO, 51, 0, DATAOUT, 3, 0), rnode(GIN, 51, 0, 2) },
  { pnode(GPIO, 51, 0, DATAOUT, 3, 1), rnode(GIN, 51, 0, 3) },
  { pnode(GPIO, 51, 0, DATAOUT, 3, 2), rnode(GIN, 51, 0, 4) },
  { pnode(GPIO, 51, 0, DATAOUT, 3, 3), rnode(GIN, 51, 0, 5) },
  { pnode(GPIO, 51, 0, DATAOUT, 3, 4), rnode(GIN, 51, 0, 6) },
  { pnode(GPIO, 51, 0, OEIN, 3, 0), rnode(GOUT, 51, 0, 2) },
  { pnode(GPIO, 51, 0, OEIN, 3, 1), rnode(GOUT, 51, 0, 19) },
  { pnode(GPIO, 51, 0, BSLIPMAX, 3, -1), rnode(GIN, 51, 0, 1) },
  { pnode(GPIO, 51, 0, CEIN, 3, -1), rnode(GOUT, 51, 0, 5) },
  { pnode(GPIO, 51, 0, CEOUT, 3, -1), rnode(GOUT, 51, 0, 4) },
  { pnode(GPIO, 51, 0, ACLR, 3, -1), rnode(GOUT, 51, 0, 12) },
  { pnode(GPIO, 51, 0, SCLR, 3, -1), rnode(GOUT, 51, 0, 1) },
  { pnode(GPIO, 51, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 51, 0, 4) },
  { pnode(GPIO, 51, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 51, 0, 6) },
  { pnode(GPIO, 51, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 51, 0, 0) },
  { pnode(GPIO, 51, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 51, 0, 2) },
  { pnode(GPIO, 51, 61, DATAOUT, 0, 4), rnode(GIN, 51, 61, 14) },
  { pnode(GPIO, 51, 61, BSLIPMAX, 0, -1), rnode(GIN, 51, 61, 19) },
  { pnode(GPIO, 51, 61, CEIN, 0, -1), rnode(GOUT, 51, 61, 27) },
  { pnode(GPIO, 51, 61, CEOUT, 0, -1), rnode(GOUT, 51, 61, 45) },
  { pnode(GPIO, 51, 61, ACLR, 0, -1), rnode(GOUT, 51, 61, 28) },
  { pnode(GPIO, 51, 61, SCLR, 0, -1), rnode(GOUT, 51, 61, 31) },
  { pnode(GPIO, 51, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 51, 61, 10) },
  { pnode(GPIO, 51, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 51, 61, 8) },
  { pnode(GPIO, 51, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 51, 61, 14) },
  { pnode(GPIO, 51, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 51, 61, 12) },
  { pnode(GPIO, 51, 61, DATAOUT, 1, 4), rnode(GIN, 51, 61, 20) },
  { pnode(GPIO, 51, 61, BSLIPMAX, 1, -1), rnode(GIN, 51, 61, 25) },
  { pnode(GPIO, 51, 61, CEIN, 1, -1), rnode(GOUT, 51, 61, 51) },
  { pnode(GPIO, 51, 61, CEOUT, 1, -1), rnode(GOUT, 51, 61, 50) },
  { pnode(GPIO, 51, 61, ACLR, 1, -1), rnode(GOUT, 51, 61, 42) },
  { pnode(GPIO, 51, 61, SCLR, 1, -1), rnode(GOUT, 51, 61, 46) },
  { pnode(GPIO, 51, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 51, 61, 11) },
  { pnode(GPIO, 51, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 51, 61, 9) },
  { pnode(GPIO, 51, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 51, 61, 15) },
  { pnode(GPIO, 51, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 51, 61, 13) },
  { pnode(GPIO, 51, 61, DATAOUT, 2, 4), rnode(GIN, 51, 61, 12) },
  { pnode(GPIO, 51, 61, BSLIPMAX, 2, -1), rnode(GIN, 51, 61, 7) },
  { pnode(GPIO, 51, 61, CEIN, 2, -1), rnode(GOUT, 51, 61, 20) },
  { pnode(GPIO, 51, 61, CEOUT, 2, -1), rnode(GOUT, 51, 61, 13) },
  { pnode(GPIO, 51, 61, ACLR, 2, -1), rnode(GOUT, 51, 61, 21) },
  { pnode(GPIO, 51, 61, SCLR, 2, -1), rnode(GOUT, 51, 61, 25) },
  { pnode(GPIO, 51, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 51, 61, 5) },
  { pnode(GPIO, 51, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 51, 61, 7) },
  { pnode(GPIO, 51, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 51, 61, 1) },
  { pnode(GPIO, 51, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 51, 61, 3) },
  { pnode(GPIO, 51, 61, DATAIN, 3, 0), rnode(GOUT, 51, 61, 3) },
  { pnode(GPIO, 51, 61, DATAIN, 3, 1), rnode(GOUT, 51, 61, 17) },
  { pnode(GPIO, 51, 61, DATAIN, 3, 2), rnode(GOUT, 51, 61, 8) },
  { pnode(GPIO, 51, 61, DATAIN, 3, 3), rnode(GOUT, 51, 61, 18) },
  { pnode(GPIO, 51, 61, DATAOUT, 3, 0), rnode(GIN, 51, 61, 2) },
  { pnode(GPIO, 51, 61, DATAOUT, 3, 1), rnode(GIN, 51, 61, 3) },
  { pnode(GPIO, 51, 61, DATAOUT, 3, 2), rnode(GIN, 51, 61, 4) },
  { pnode(GPIO, 51, 61, DATAOUT, 3, 3), rnode(GIN, 51, 61, 5) },
  { pnode(GPIO, 51, 61, DATAOUT, 3, 4), rnode(GIN, 51, 61, 6) },
  { pnode(GPIO, 51, 61, OEIN, 3, 0), rnode(GOUT, 51, 61, 2) },
  { pnode(GPIO, 51, 61, OEIN, 3, 1), rnode(GOUT, 51, 61, 19) },
  { pnode(GPIO, 51, 61, BSLIPMAX, 3, -1), rnode(GIN, 51, 61, 1) },
  { pnode(GPIO, 51, 61, CEIN, 3, -1), rnode(GOUT, 51, 61, 5) },
  { pnode(GPIO, 51, 61, CEOUT, 3, -1), rnode(GOUT, 51, 61, 4) },
  { pnode(GPIO, 51, 61, ACLR, 3, -1), rnode(GOUT, 51, 61, 12) },
  { pnode(GPIO, 51, 61, SCLR, 3, -1), rnode(GOUT, 51, 61, 1) },
  { pnode(GPIO, 51, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 51, 61, 4) },
  { pnode(GPIO, 51, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 51, 61, 6) },
  { pnode(GPIO, 51, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 51, 61, 0) },
  { pnode(GPIO, 51, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 51, 61, 2) },
  { pnode(GPIO, 53, 0, DATAIN, 0, 0), rnode(GOUT, 53, 0, 44) },
  { pnode(GPIO, 53, 0, DATAIN, 0, 1), rnode(GOUT, 53, 0, 34) },
  { pnode(GPIO, 53, 0, DATAIN, 0, 2), rnode(GOUT, 53, 0, 43) },
  { pnode(GPIO, 53, 0, DATAIN, 0, 3), rnode(GOUT, 53, 0, 29) },
  { pnode(GPIO, 53, 0, DATAOUT, 0, 0), rnode(GIN, 53, 0, 18) },
  { pnode(GPIO, 53, 0, DATAOUT, 0, 1), rnode(GIN, 53, 0, 17) },
  { pnode(GPIO, 53, 0, DATAOUT, 0, 2), rnode(GIN, 53, 0, 16) },
  { pnode(GPIO, 53, 0, DATAOUT, 0, 3), rnode(GIN, 53, 0, 15) },
  { pnode(GPIO, 53, 0, DATAOUT, 0, 4), rnode(GIN, 53, 0, 14) },
  { pnode(GPIO, 53, 0, OEIN, 0, 0), rnode(GOUT, 53, 0, 38) },
  { pnode(GPIO, 53, 0, OEIN, 0, 1), rnode(GOUT, 53, 0, 30) },
  { pnode(GPIO, 53, 0, BSLIPMAX, 0, -1), rnode(GIN, 53, 0, 19) },
  { pnode(GPIO, 53, 0, CEIN, 0, -1), rnode(GOUT, 53, 0, 27) },
  { pnode(GPIO, 53, 0, CEOUT, 0, -1), rnode(GOUT, 53, 0, 45) },
  { pnode(GPIO, 53, 0, ACLR, 0, -1), rnode(GOUT, 53, 0, 28) },
  { pnode(GPIO, 53, 0, SCLR, 0, -1), rnode(GOUT, 53, 0, 31) },
  { pnode(GPIO, 53, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 53, 0, 10) },
  { pnode(GPIO, 53, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 53, 0, 8) },
  { pnode(GPIO, 53, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 53, 0, 14) },
  { pnode(GPIO, 53, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 53, 0, 12) },
  { pnode(GPIO, 53, 0, DATAIN, 1, 0), rnode(GOUT, 53, 0, 49) },
  { pnode(GPIO, 53, 0, DATAIN, 1, 1), rnode(GOUT, 53, 0, 41) },
  { pnode(GPIO, 53, 0, DATAIN, 1, 2), rnode(GOUT, 53, 0, 48) },
  { pnode(GPIO, 53, 0, DATAIN, 1, 3), rnode(GOUT, 53, 0, 40) },
  { pnode(GPIO, 53, 0, DATAOUT, 1, 0), rnode(GIN, 53, 0, 24) },
  { pnode(GPIO, 53, 0, DATAOUT, 1, 1), rnode(GIN, 53, 0, 23) },
  { pnode(GPIO, 53, 0, DATAOUT, 1, 2), rnode(GIN, 53, 0, 22) },
  { pnode(GPIO, 53, 0, DATAOUT, 1, 3), rnode(GIN, 53, 0, 21) },
  { pnode(GPIO, 53, 0, DATAOUT, 1, 4), rnode(GIN, 53, 0, 20) },
  { pnode(GPIO, 53, 0, OEIN, 1, 0), rnode(GOUT, 53, 0, 47) },
  { pnode(GPIO, 53, 0, OEIN, 1, 1), rnode(GOUT, 53, 0, 39) },
  { pnode(GPIO, 53, 0, BSLIPMAX, 1, -1), rnode(GIN, 53, 0, 25) },
  { pnode(GPIO, 53, 0, CEIN, 1, -1), rnode(GOUT, 53, 0, 51) },
  { pnode(GPIO, 53, 0, CEOUT, 1, -1), rnode(GOUT, 53, 0, 50) },
  { pnode(GPIO, 53, 0, ACLR, 1, -1), rnode(GOUT, 53, 0, 42) },
  { pnode(GPIO, 53, 0, SCLR, 1, -1), rnode(GOUT, 53, 0, 46) },
  { pnode(GPIO, 53, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 53, 0, 11) },
  { pnode(GPIO, 53, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 53, 0, 9) },
  { pnode(GPIO, 53, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 53, 0, 15) },
  { pnode(GPIO, 53, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 53, 0, 13) },
  { pnode(GPIO, 53, 0, DATAOUT, 2, 0), rnode(GIN, 53, 0, 8) },
  { pnode(GPIO, 53, 0, DATAOUT, 2, 1), rnode(GIN, 53, 0, 9) },
  { pnode(GPIO, 53, 0, DATAOUT, 2, 2), rnode(GIN, 53, 0, 10) },
  { pnode(GPIO, 53, 0, DATAOUT, 2, 3), rnode(GIN, 53, 0, 11) },
  { pnode(GPIO, 53, 0, DATAOUT, 2, 4), rnode(GIN, 53, 0, 12) },
  { pnode(GPIO, 53, 0, OEIN, 2, 0), rnode(GOUT, 53, 0, 16) },
  { pnode(GPIO, 53, 0, OEIN, 2, 1), rnode(GOUT, 53, 0, 24) },
  { pnode(GPIO, 53, 0, BSLIPMAX, 2, -1), rnode(GIN, 53, 0, 7) },
  { pnode(GPIO, 53, 0, CEIN, 2, -1), rnode(GOUT, 53, 0, 20) },
  { pnode(GPIO, 53, 0, CEOUT, 2, -1), rnode(GOUT, 53, 0, 13) },
  { pnode(GPIO, 53, 0, ACLR, 2, -1), rnode(GOUT, 53, 0, 21) },
  { pnode(GPIO, 53, 0, SCLR, 2, -1), rnode(GOUT, 53, 0, 25) },
  { pnode(GPIO, 53, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 53, 0, 5) },
  { pnode(GPIO, 53, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 53, 0, 7) },
  { pnode(GPIO, 53, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 53, 0, 1) },
  { pnode(GPIO, 53, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 53, 0, 3) },
  { pnode(GPIO, 53, 0, DATAOUT, 3, 4), rnode(GIN, 53, 0, 6) },
  { pnode(GPIO, 53, 0, BSLIPMAX, 3, -1), rnode(GIN, 53, 0, 1) },
  { pnode(GPIO, 53, 0, CEIN, 3, -1), rnode(GOUT, 53, 0, 5) },
  { pnode(GPIO, 53, 0, CEOUT, 3, -1), rnode(GOUT, 53, 0, 4) },
  { pnode(GPIO, 53, 0, ACLR, 3, -1), rnode(GOUT, 53, 0, 12) },
  { pnode(GPIO, 53, 0, SCLR, 3, -1), rnode(GOUT, 53, 0, 1) },
  { pnode(GPIO, 53, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 53, 0, 4) },
  { pnode(GPIO, 53, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 53, 0, 6) },
  { pnode(GPIO, 53, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 53, 0, 0) },
  { pnode(GPIO, 53, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 53, 0, 2) },
  { pnode(GPIO, 53, 61, DATAIN, 0, 0), rnode(GOUT, 53, 61, 44) },
  { pnode(GPIO, 53, 61, DATAIN, 0, 1), rnode(GOUT, 53, 61, 34) },
  { pnode(GPIO, 53, 61, DATAIN, 0, 2), rnode(GOUT, 53, 61, 43) },
  { pnode(GPIO, 53, 61, DATAIN, 0, 3), rnode(GOUT, 53, 61, 29) },
  { pnode(GPIO, 53, 61, DATAOUT, 0, 0), rnode(GIN, 53, 61, 18) },
  { pnode(GPIO, 53, 61, DATAOUT, 0, 1), rnode(GIN, 53, 61, 17) },
  { pnode(GPIO, 53, 61, DATAOUT, 0, 2), rnode(GIN, 53, 61, 16) },
  { pnode(GPIO, 53, 61, DATAOUT, 0, 3), rnode(GIN, 53, 61, 15) },
  { pnode(GPIO, 53, 61, DATAOUT, 0, 4), rnode(GIN, 53, 61, 14) },
  { pnode(GPIO, 53, 61, OEIN, 0, 0), rnode(GOUT, 53, 61, 38) },
  { pnode(GPIO, 53, 61, OEIN, 0, 1), rnode(GOUT, 53, 61, 30) },
  { pnode(GPIO, 53, 61, BSLIPMAX, 0, -1), rnode(GIN, 53, 61, 19) },
  { pnode(GPIO, 53, 61, CEIN, 0, -1), rnode(GOUT, 53, 61, 27) },
  { pnode(GPIO, 53, 61, CEOUT, 0, -1), rnode(GOUT, 53, 61, 45) },
  { pnode(GPIO, 53, 61, ACLR, 0, -1), rnode(GOUT, 53, 61, 28) },
  { pnode(GPIO, 53, 61, SCLR, 0, -1), rnode(GOUT, 53, 61, 31) },
  { pnode(GPIO, 53, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 53, 61, 10) },
  { pnode(GPIO, 53, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 53, 61, 8) },
  { pnode(GPIO, 53, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 53, 61, 14) },
  { pnode(GPIO, 53, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 53, 61, 12) },
  { pnode(GPIO, 53, 61, DATAIN, 1, 0), rnode(GOUT, 53, 61, 49) },
  { pnode(GPIO, 53, 61, DATAIN, 1, 1), rnode(GOUT, 53, 61, 41) },
  { pnode(GPIO, 53, 61, DATAIN, 1, 2), rnode(GOUT, 53, 61, 48) },
  { pnode(GPIO, 53, 61, DATAIN, 1, 3), rnode(GOUT, 53, 61, 40) },
  { pnode(GPIO, 53, 61, DATAOUT, 1, 0), rnode(GIN, 53, 61, 24) },
  { pnode(GPIO, 53, 61, DATAOUT, 1, 1), rnode(GIN, 53, 61, 23) },
  { pnode(GPIO, 53, 61, DATAOUT, 1, 2), rnode(GIN, 53, 61, 22) },
  { pnode(GPIO, 53, 61, DATAOUT, 1, 3), rnode(GIN, 53, 61, 21) },
  { pnode(GPIO, 53, 61, DATAOUT, 1, 4), rnode(GIN, 53, 61, 20) },
  { pnode(GPIO, 53, 61, OEIN, 1, 0), rnode(GOUT, 53, 61, 47) },
  { pnode(GPIO, 53, 61, OEIN, 1, 1), rnode(GOUT, 53, 61, 39) },
  { pnode(GPIO, 53, 61, BSLIPMAX, 1, -1), rnode(GIN, 53, 61, 25) },
  { pnode(GPIO, 53, 61, CEIN, 1, -1), rnode(GOUT, 53, 61, 51) },
  { pnode(GPIO, 53, 61, CEOUT, 1, -1), rnode(GOUT, 53, 61, 50) },
  { pnode(GPIO, 53, 61, ACLR, 1, -1), rnode(GOUT, 53, 61, 42) },
  { pnode(GPIO, 53, 61, SCLR, 1, -1), rnode(GOUT, 53, 61, 46) },
  { pnode(GPIO, 53, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 53, 61, 11) },
  { pnode(GPIO, 53, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 53, 61, 9) },
  { pnode(GPIO, 53, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 53, 61, 15) },
  { pnode(GPIO, 53, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 53, 61, 13) },
  { pnode(GPIO, 53, 61, DATAOUT, 2, 0), rnode(GIN, 53, 61, 8) },
  { pnode(GPIO, 53, 61, DATAOUT, 2, 1), rnode(GIN, 53, 61, 9) },
  { pnode(GPIO, 53, 61, DATAOUT, 2, 2), rnode(GIN, 53, 61, 10) },
  { pnode(GPIO, 53, 61, DATAOUT, 2, 3), rnode(GIN, 53, 61, 11) },
  { pnode(GPIO, 53, 61, DATAOUT, 2, 4), rnode(GIN, 53, 61, 12) },
  { pnode(GPIO, 53, 61, OEIN, 2, 0), rnode(GOUT, 53, 61, 16) },
  { pnode(GPIO, 53, 61, OEIN, 2, 1), rnode(GOUT, 53, 61, 24) },
  { pnode(GPIO, 53, 61, BSLIPMAX, 2, -1), rnode(GIN, 53, 61, 7) },
  { pnode(GPIO, 53, 61, CEIN, 2, -1), rnode(GOUT, 53, 61, 20) },
  { pnode(GPIO, 53, 61, CEOUT, 2, -1), rnode(GOUT, 53, 61, 13) },
  { pnode(GPIO, 53, 61, ACLR, 2, -1), rnode(GOUT, 53, 61, 21) },
  { pnode(GPIO, 53, 61, SCLR, 2, -1), rnode(GOUT, 53, 61, 25) },
  { pnode(GPIO, 53, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 53, 61, 5) },
  { pnode(GPIO, 53, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 53, 61, 7) },
  { pnode(GPIO, 53, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 53, 61, 1) },
  { pnode(GPIO, 53, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 53, 61, 3) },
  { pnode(GPIO, 53, 61, DATAOUT, 3, 4), rnode(GIN, 53, 61, 6) },
  { pnode(GPIO, 53, 61, BSLIPMAX, 3, -1), rnode(GIN, 53, 61, 1) },
  { pnode(GPIO, 53, 61, CEIN, 3, -1), rnode(GOUT, 53, 61, 5) },
  { pnode(GPIO, 53, 61, CEOUT, 3, -1), rnode(GOUT, 53, 61, 4) },
  { pnode(GPIO, 53, 61, ACLR, 3, -1), rnode(GOUT, 53, 61, 12) },
  { pnode(GPIO, 53, 61, SCLR, 3, -1), rnode(GOUT, 53, 61, 1) },
  { pnode(GPIO, 53, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 53, 61, 4) },
  { pnode(GPIO, 53, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 53, 61, 6) },
  { pnode(GPIO, 53, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 53, 61, 0) },
  { pnode(GPIO, 53, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 53, 61, 2) },
  { pnode(GPIO, 55, 0, DATAOUT, 0, 4), rnode(GIN, 55, 0, 14) },
  { pnode(GPIO, 55, 0, BSLIPMAX, 0, -1), rnode(GIN, 55, 0, 19) },
  { pnode(GPIO, 55, 0, CEIN, 0, -1), rnode(GOUT, 55, 0, 27) },
  { pnode(GPIO, 55, 0, CEOUT, 0, -1), rnode(GOUT, 55, 0, 45) },
  { pnode(GPIO, 55, 0, ACLR, 0, -1), rnode(GOUT, 55, 0, 28) },
  { pnode(GPIO, 55, 0, SCLR, 0, -1), rnode(GOUT, 55, 0, 31) },
  { pnode(GPIO, 55, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 55, 0, 10) },
  { pnode(GPIO, 55, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 55, 0, 8) },
  { pnode(GPIO, 55, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 55, 0, 14) },
  { pnode(GPIO, 55, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 55, 0, 12) },
  { pnode(GPIO, 55, 0, DATAOUT, 1, 4), rnode(GIN, 55, 0, 20) },
  { pnode(GPIO, 55, 0, BSLIPMAX, 1, -1), rnode(GIN, 55, 0, 25) },
  { pnode(GPIO, 55, 0, CEIN, 1, -1), rnode(GOUT, 55, 0, 51) },
  { pnode(GPIO, 55, 0, CEOUT, 1, -1), rnode(GOUT, 55, 0, 50) },
  { pnode(GPIO, 55, 0, ACLR, 1, -1), rnode(GOUT, 55, 0, 42) },
  { pnode(GPIO, 55, 0, SCLR, 1, -1), rnode(GOUT, 55, 0, 46) },
  { pnode(GPIO, 55, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 55, 0, 11) },
  { pnode(GPIO, 55, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 55, 0, 9) },
  { pnode(GPIO, 55, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 55, 0, 15) },
  { pnode(GPIO, 55, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 55, 0, 13) },
  { pnode(GPIO, 55, 0, DATAOUT, 2, 4), rnode(GIN, 55, 0, 12) },
  { pnode(GPIO, 55, 0, BSLIPMAX, 2, -1), rnode(GIN, 55, 0, 7) },
  { pnode(GPIO, 55, 0, CEIN, 2, -1), rnode(GOUT, 55, 0, 20) },
  { pnode(GPIO, 55, 0, CEOUT, 2, -1), rnode(GOUT, 55, 0, 13) },
  { pnode(GPIO, 55, 0, ACLR, 2, -1), rnode(GOUT, 55, 0, 21) },
  { pnode(GPIO, 55, 0, SCLR, 2, -1), rnode(GOUT, 55, 0, 25) },
  { pnode(GPIO, 55, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 55, 0, 5) },
  { pnode(GPIO, 55, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 55, 0, 7) },
  { pnode(GPIO, 55, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 55, 0, 1) },
  { pnode(GPIO, 55, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 55, 0, 3) },
  { pnode(GPIO, 55, 0, DATAIN, 3, 0), rnode(GOUT, 55, 0, 3) },
  { pnode(GPIO, 55, 0, DATAIN, 3, 1), rnode(GOUT, 55, 0, 17) },
  { pnode(GPIO, 55, 0, DATAIN, 3, 2), rnode(GOUT, 55, 0, 8) },
  { pnode(GPIO, 55, 0, DATAIN, 3, 3), rnode(GOUT, 55, 0, 18) },
  { pnode(GPIO, 55, 0, DATAOUT, 3, 0), rnode(GIN, 55, 0, 2) },
  { pnode(GPIO, 55, 0, DATAOUT, 3, 1), rnode(GIN, 55, 0, 3) },
  { pnode(GPIO, 55, 0, DATAOUT, 3, 2), rnode(GIN, 55, 0, 4) },
  { pnode(GPIO, 55, 0, DATAOUT, 3, 3), rnode(GIN, 55, 0, 5) },
  { pnode(GPIO, 55, 0, DATAOUT, 3, 4), rnode(GIN, 55, 0, 6) },
  { pnode(GPIO, 55, 0, OEIN, 3, 0), rnode(GOUT, 55, 0, 2) },
  { pnode(GPIO, 55, 0, OEIN, 3, 1), rnode(GOUT, 55, 0, 19) },
  { pnode(GPIO, 55, 0, BSLIPMAX, 3, -1), rnode(GIN, 55, 0, 1) },
  { pnode(GPIO, 55, 0, CEIN, 3, -1), rnode(GOUT, 55, 0, 5) },
  { pnode(GPIO, 55, 0, CEOUT, 3, -1), rnode(GOUT, 55, 0, 4) },
  { pnode(GPIO, 55, 0, ACLR, 3, -1), rnode(GOUT, 55, 0, 12) },
  { pnode(GPIO, 55, 0, SCLR, 3, -1), rnode(GOUT, 55, 0, 1) },
  { pnode(GPIO, 55, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 55, 0, 4) },
  { pnode(GPIO, 55, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 55, 0, 6) },
  { pnode(GPIO, 55, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 55, 0, 0) },
  { pnode(GPIO, 55, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 55, 0, 2) },
  { pnode(GPIO, 55, 61, DATAOUT, 0, 4), rnode(GIN, 55, 61, 14) },
  { pnode(GPIO, 55, 61, BSLIPMAX, 0, -1), rnode(GIN, 55, 61, 19) },
  { pnode(GPIO, 55, 61, CEIN, 0, -1), rnode(GOUT, 55, 61, 27) },
  { pnode(GPIO, 55, 61, CEOUT, 0, -1), rnode(GOUT, 55, 61, 45) },
  { pnode(GPIO, 55, 61, ACLR, 0, -1), rnode(GOUT, 55, 61, 28) },
  { pnode(GPIO, 55, 61, SCLR, 0, -1), rnode(GOUT, 55, 61, 31) },
  { pnode(GPIO, 55, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 55, 61, 10) },
  { pnode(GPIO, 55, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 55, 61, 8) },
  { pnode(GPIO, 55, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 55, 61, 14) },
  { pnode(GPIO, 55, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 55, 61, 12) },
  { pnode(GPIO, 55, 61, DATAOUT, 1, 4), rnode(GIN, 55, 61, 20) },
  { pnode(GPIO, 55, 61, BSLIPMAX, 1, -1), rnode(GIN, 55, 61, 25) },
  { pnode(GPIO, 55, 61, CEIN, 1, -1), rnode(GOUT, 55, 61, 51) },
  { pnode(GPIO, 55, 61, CEOUT, 1, -1), rnode(GOUT, 55, 61, 50) },
  { pnode(GPIO, 55, 61, ACLR, 1, -1), rnode(GOUT, 55, 61, 42) },
  { pnode(GPIO, 55, 61, SCLR, 1, -1), rnode(GOUT, 55, 61, 46) },
  { pnode(GPIO, 55, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 55, 61, 11) },
  { pnode(GPIO, 55, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 55, 61, 9) },
  { pnode(GPIO, 55, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 55, 61, 15) },
  { pnode(GPIO, 55, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 55, 61, 13) },
  { pnode(GPIO, 55, 61, DATAOUT, 2, 4), rnode(GIN, 55, 61, 12) },
  { pnode(GPIO, 55, 61, BSLIPMAX, 2, -1), rnode(GIN, 55, 61, 7) },
  { pnode(GPIO, 55, 61, CEIN, 2, -1), rnode(GOUT, 55, 61, 20) },
  { pnode(GPIO, 55, 61, CEOUT, 2, -1), rnode(GOUT, 55, 61, 13) },
  { pnode(GPIO, 55, 61, ACLR, 2, -1), rnode(GOUT, 55, 61, 21) },
  { pnode(GPIO, 55, 61, SCLR, 2, -1), rnode(GOUT, 55, 61, 25) },
  { pnode(GPIO, 55, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 55, 61, 5) },
  { pnode(GPIO, 55, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 55, 61, 7) },
  { pnode(GPIO, 55, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 55, 61, 1) },
  { pnode(GPIO, 55, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 55, 61, 3) },
  { pnode(GPIO, 55, 61, DATAIN, 3, 0), rnode(GOUT, 55, 61, 3) },
  { pnode(GPIO, 55, 61, DATAIN, 3, 1), rnode(GOUT, 55, 61, 17) },
  { pnode(GPIO, 55, 61, DATAIN, 3, 2), rnode(GOUT, 55, 61, 8) },
  { pnode(GPIO, 55, 61, DATAIN, 3, 3), rnode(GOUT, 55, 61, 18) },
  { pnode(GPIO, 55, 61, DATAOUT, 3, 0), rnode(GIN, 55, 61, 2) },
  { pnode(GPIO, 55, 61, DATAOUT, 3, 1), rnode(GIN, 55, 61, 3) },
  { pnode(GPIO, 55, 61, DATAOUT, 3, 2), rnode(GIN, 55, 61, 4) },
  { pnode(GPIO, 55, 61, DATAOUT, 3, 3), rnode(GIN, 55, 61, 5) },
  { pnode(GPIO, 55, 61, DATAOUT, 3, 4), rnode(GIN, 55, 61, 6) },
  { pnode(GPIO, 55, 61, OEIN, 3, 0), rnode(GOUT, 55, 61, 2) },
  { pnode(GPIO, 55, 61, OEIN, 3, 1), rnode(GOUT, 55, 61, 19) },
  { pnode(GPIO, 55, 61, BSLIPMAX, 3, -1), rnode(GIN, 55, 61, 1) },
  { pnode(GPIO, 55, 61, CEIN, 3, -1), rnode(GOUT, 55, 61, 5) },
  { pnode(GPIO, 55, 61, CEOUT, 3, -1), rnode(GOUT, 55, 61, 4) },
  { pnode(GPIO, 55, 61, ACLR, 3, -1), rnode(GOUT, 55, 61, 12) },
  { pnode(GPIO, 55, 61, SCLR, 3, -1), rnode(GOUT, 55, 61, 1) },
  { pnode(GPIO, 55, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 55, 61, 4) },
  { pnode(GPIO, 55, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 55, 61, 6) },
  { pnode(GPIO, 55, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 55, 61, 0) },
  { pnode(GPIO, 55, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 55, 61, 2) },
  { pnode(GPIO, 57, 0, DATAOUT, 0, 0), rnode(GIN, 57, 0, 18) },
  { pnode(GPIO, 57, 0, DATAOUT, 0, 1), rnode(GIN, 57, 0, 17) },
  { pnode(GPIO, 57, 0, DATAOUT, 0, 2), rnode(GIN, 57, 0, 16) },
  { pnode(GPIO, 57, 0, DATAOUT, 0, 3), rnode(GIN, 57, 0, 15) },
  { pnode(GPIO, 57, 0, DATAOUT, 0, 4), rnode(GIN, 57, 0, 14) },
  { pnode(GPIO, 57, 0, BSLIPMAX, 0, -1), rnode(GIN, 57, 0, 19) },
  { pnode(GPIO, 57, 0, CEIN, 0, -1), rnode(GOUT, 57, 0, 27) },
  { pnode(GPIO, 57, 0, CEOUT, 0, -1), rnode(GOUT, 57, 0, 45) },
  { pnode(GPIO, 57, 0, ACLR, 0, -1), rnode(GOUT, 57, 0, 28) },
  { pnode(GPIO, 57, 0, SCLR, 0, -1), rnode(GOUT, 57, 0, 31) },
  { pnode(GPIO, 57, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 57, 0, 10) },
  { pnode(GPIO, 57, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 57, 0, 8) },
  { pnode(GPIO, 57, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 57, 0, 14) },
  { pnode(GPIO, 57, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 57, 0, 12) },
  { pnode(GPIO, 57, 0, DATAOUT, 1, 0), rnode(GIN, 57, 0, 24) },
  { pnode(GPIO, 57, 0, DATAOUT, 1, 1), rnode(GIN, 57, 0, 23) },
  { pnode(GPIO, 57, 0, DATAOUT, 1, 2), rnode(GIN, 57, 0, 22) },
  { pnode(GPIO, 57, 0, DATAOUT, 1, 3), rnode(GIN, 57, 0, 21) },
  { pnode(GPIO, 57, 0, DATAOUT, 1, 4), rnode(GIN, 57, 0, 20) },
  { pnode(GPIO, 57, 0, BSLIPMAX, 1, -1), rnode(GIN, 57, 0, 25) },
  { pnode(GPIO, 57, 0, CEIN, 1, -1), rnode(GOUT, 57, 0, 51) },
  { pnode(GPIO, 57, 0, CEOUT, 1, -1), rnode(GOUT, 57, 0, 50) },
  { pnode(GPIO, 57, 0, ACLR, 1, -1), rnode(GOUT, 57, 0, 42) },
  { pnode(GPIO, 57, 0, SCLR, 1, -1), rnode(GOUT, 57, 0, 46) },
  { pnode(GPIO, 57, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 57, 0, 11) },
  { pnode(GPIO, 57, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 57, 0, 9) },
  { pnode(GPIO, 57, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 57, 0, 15) },
  { pnode(GPIO, 57, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 57, 0, 13) },
  { pnode(GPIO, 57, 0, DATAIN, 2, 0), rnode(GOUT, 57, 0, 14) },
  { pnode(GPIO, 57, 0, DATAIN, 2, 1), rnode(GOUT, 57, 0, 22) },
  { pnode(GPIO, 57, 0, DATAIN, 2, 2), rnode(GOUT, 57, 0, 15) },
  { pnode(GPIO, 57, 0, DATAIN, 2, 3), rnode(GOUT, 57, 0, 23) },
  { pnode(GPIO, 57, 0, DATAOUT, 2, 0), rnode(GIN, 57, 0, 8) },
  { pnode(GPIO, 57, 0, DATAOUT, 2, 1), rnode(GIN, 57, 0, 9) },
  { pnode(GPIO, 57, 0, DATAOUT, 2, 2), rnode(GIN, 57, 0, 10) },
  { pnode(GPIO, 57, 0, DATAOUT, 2, 3), rnode(GIN, 57, 0, 11) },
  { pnode(GPIO, 57, 0, DATAOUT, 2, 4), rnode(GIN, 57, 0, 12) },
  { pnode(GPIO, 57, 0, OEIN, 2, 0), rnode(GOUT, 57, 0, 16) },
  { pnode(GPIO, 57, 0, OEIN, 2, 1), rnode(GOUT, 57, 0, 24) },
  { pnode(GPIO, 57, 0, BSLIPMAX, 2, -1), rnode(GIN, 57, 0, 7) },
  { pnode(GPIO, 57, 0, CEIN, 2, -1), rnode(GOUT, 57, 0, 20) },
  { pnode(GPIO, 57, 0, CEOUT, 2, -1), rnode(GOUT, 57, 0, 13) },
  { pnode(GPIO, 57, 0, ACLR, 2, -1), rnode(GOUT, 57, 0, 21) },
  { pnode(GPIO, 57, 0, SCLR, 2, -1), rnode(GOUT, 57, 0, 25) },
  { pnode(GPIO, 57, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 57, 0, 5) },
  { pnode(GPIO, 57, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 57, 0, 7) },
  { pnode(GPIO, 57, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 57, 0, 1) },
  { pnode(GPIO, 57, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 57, 0, 3) },
  { pnode(GPIO, 57, 0, DATAOUT, 3, 4), rnode(GIN, 57, 0, 6) },
  { pnode(GPIO, 57, 0, BSLIPMAX, 3, -1), rnode(GIN, 57, 0, 1) },
  { pnode(GPIO, 57, 0, CEIN, 3, -1), rnode(GOUT, 57, 0, 5) },
  { pnode(GPIO, 57, 0, CEOUT, 3, -1), rnode(GOUT, 57, 0, 4) },
  { pnode(GPIO, 57, 0, ACLR, 3, -1), rnode(GOUT, 57, 0, 12) },
  { pnode(GPIO, 57, 0, SCLR, 3, -1), rnode(GOUT, 57, 0, 1) },
  { pnode(GPIO, 57, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 57, 0, 4) },
  { pnode(GPIO, 57, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 57, 0, 6) },
  { pnode(GPIO, 57, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 57, 0, 0) },
  { pnode(GPIO, 57, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 57, 0, 2) },
  { pnode(GPIO, 57, 61, DATAOUT, 0, 0), rnode(GIN, 57, 61, 18) },
  { pnode(GPIO, 57, 61, DATAOUT, 0, 1), rnode(GIN, 57, 61, 17) },
  { pnode(GPIO, 57, 61, DATAOUT, 0, 2), rnode(GIN, 57, 61, 16) },
  { pnode(GPIO, 57, 61, DATAOUT, 0, 3), rnode(GIN, 57, 61, 15) },
  { pnode(GPIO, 57, 61, DATAOUT, 0, 4), rnode(GIN, 57, 61, 14) },
  { pnode(GPIO, 57, 61, BSLIPMAX, 0, -1), rnode(GIN, 57, 61, 19) },
  { pnode(GPIO, 57, 61, CEIN, 0, -1), rnode(GOUT, 57, 61, 27) },
  { pnode(GPIO, 57, 61, CEOUT, 0, -1), rnode(GOUT, 57, 61, 45) },
  { pnode(GPIO, 57, 61, ACLR, 0, -1), rnode(GOUT, 57, 61, 28) },
  { pnode(GPIO, 57, 61, SCLR, 0, -1), rnode(GOUT, 57, 61, 31) },
  { pnode(GPIO, 57, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 57, 61, 10) },
  { pnode(GPIO, 57, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 57, 61, 8) },
  { pnode(GPIO, 57, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 57, 61, 14) },
  { pnode(GPIO, 57, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 57, 61, 12) },
  { pnode(GPIO, 57, 61, DATAOUT, 1, 0), rnode(GIN, 57, 61, 24) },
  { pnode(GPIO, 57, 61, DATAOUT, 1, 1), rnode(GIN, 57, 61, 23) },
  { pnode(GPIO, 57, 61, DATAOUT, 1, 2), rnode(GIN, 57, 61, 22) },
  { pnode(GPIO, 57, 61, DATAOUT, 1, 3), rnode(GIN, 57, 61, 21) },
  { pnode(GPIO, 57, 61, DATAOUT, 1, 4), rnode(GIN, 57, 61, 20) },
  { pnode(GPIO, 57, 61, BSLIPMAX, 1, -1), rnode(GIN, 57, 61, 25) },
  { pnode(GPIO, 57, 61, CEIN, 1, -1), rnode(GOUT, 57, 61, 51) },
  { pnode(GPIO, 57, 61, CEOUT, 1, -1), rnode(GOUT, 57, 61, 50) },
  { pnode(GPIO, 57, 61, ACLR, 1, -1), rnode(GOUT, 57, 61, 42) },
  { pnode(GPIO, 57, 61, SCLR, 1, -1), rnode(GOUT, 57, 61, 46) },
  { pnode(GPIO, 57, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 57, 61, 11) },
  { pnode(GPIO, 57, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 57, 61, 9) },
  { pnode(GPIO, 57, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 57, 61, 15) },
  { pnode(GPIO, 57, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 57, 61, 13) },
  { pnode(GPIO, 57, 61, DATAIN, 2, 0), rnode(GOUT, 57, 61, 14) },
  { pnode(GPIO, 57, 61, DATAIN, 2, 1), rnode(GOUT, 57, 61, 22) },
  { pnode(GPIO, 57, 61, DATAIN, 2, 2), rnode(GOUT, 57, 61, 15) },
  { pnode(GPIO, 57, 61, DATAIN, 2, 3), rnode(GOUT, 57, 61, 23) },
  { pnode(GPIO, 57, 61, DATAOUT, 2, 0), rnode(GIN, 57, 61, 8) },
  { pnode(GPIO, 57, 61, DATAOUT, 2, 1), rnode(GIN, 57, 61, 9) },
  { pnode(GPIO, 57, 61, DATAOUT, 2, 2), rnode(GIN, 57, 61, 10) },
  { pnode(GPIO, 57, 61, DATAOUT, 2, 3), rnode(GIN, 57, 61, 11) },
  { pnode(GPIO, 57, 61, DATAOUT, 2, 4), rnode(GIN, 57, 61, 12) },
  { pnode(GPIO, 57, 61, OEIN, 2, 0), rnode(GOUT, 57, 61, 16) },
  { pnode(GPIO, 57, 61, OEIN, 2, 1), rnode(GOUT, 57, 61, 24) },
  { pnode(GPIO, 57, 61, BSLIPMAX, 2, -1), rnode(GIN, 57, 61, 7) },
  { pnode(GPIO, 57, 61, CEIN, 2, -1), rnode(GOUT, 57, 61, 20) },
  { pnode(GPIO, 57, 61, CEOUT, 2, -1), rnode(GOUT, 57, 61, 13) },
  { pnode(GPIO, 57, 61, ACLR, 2, -1), rnode(GOUT, 57, 61, 21) },
  { pnode(GPIO, 57, 61, SCLR, 2, -1), rnode(GOUT, 57, 61, 25) },
  { pnode(GPIO, 57, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 57, 61, 5) },
  { pnode(GPIO, 57, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 57, 61, 7) },
  { pnode(GPIO, 57, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 57, 61, 1) },
  { pnode(GPIO, 57, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 57, 61, 3) },
  { pnode(GPIO, 57, 61, DATAOUT, 3, 4), rnode(GIN, 57, 61, 6) },
  { pnode(GPIO, 57, 61, BSLIPMAX, 3, -1), rnode(GIN, 57, 61, 1) },
  { pnode(GPIO, 57, 61, CEIN, 3, -1), rnode(GOUT, 57, 61, 5) },
  { pnode(GPIO, 57, 61, CEOUT, 3, -1), rnode(GOUT, 57, 61, 4) },
  { pnode(GPIO, 57, 61, ACLR, 3, -1), rnode(GOUT, 57, 61, 12) },
  { pnode(GPIO, 57, 61, SCLR, 3, -1), rnode(GOUT, 57, 61, 1) },
  { pnode(GPIO, 57, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 57, 61, 4) },
  { pnode(GPIO, 57, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 57, 61, 6) },
  { pnode(GPIO, 57, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 57, 61, 0) },
  { pnode(GPIO, 57, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 57, 61, 2) },
  { pnode(GPIO, 59, 0, DATAOUT, 0, 4), rnode(GIN, 59, 0, 14) },
  { pnode(GPIO, 59, 0, BSLIPMAX, 0, -1), rnode(GIN, 59, 0, 19) },
  { pnode(GPIO, 59, 0, CEIN, 0, -1), rnode(GOUT, 59, 0, 27) },
  { pnode(GPIO, 59, 0, CEOUT, 0, -1), rnode(GOUT, 59, 0, 45) },
  { pnode(GPIO, 59, 0, ACLR, 0, -1), rnode(GOUT, 59, 0, 28) },
  { pnode(GPIO, 59, 0, SCLR, 0, -1), rnode(GOUT, 59, 0, 31) },
  { pnode(GPIO, 59, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 59, 0, 10) },
  { pnode(GPIO, 59, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 59, 0, 8) },
  { pnode(GPIO, 59, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 59, 0, 14) },
  { pnode(GPIO, 59, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 59, 0, 12) },
  { pnode(GPIO, 59, 0, DATAOUT, 1, 4), rnode(GIN, 59, 0, 20) },
  { pnode(GPIO, 59, 0, BSLIPMAX, 1, -1), rnode(GIN, 59, 0, 25) },
  { pnode(GPIO, 59, 0, CEIN, 1, -1), rnode(GOUT, 59, 0, 51) },
  { pnode(GPIO, 59, 0, CEOUT, 1, -1), rnode(GOUT, 59, 0, 50) },
  { pnode(GPIO, 59, 0, ACLR, 1, -1), rnode(GOUT, 59, 0, 42) },
  { pnode(GPIO, 59, 0, SCLR, 1, -1), rnode(GOUT, 59, 0, 46) },
  { pnode(GPIO, 59, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 59, 0, 11) },
  { pnode(GPIO, 59, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 59, 0, 9) },
  { pnode(GPIO, 59, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 59, 0, 15) },
  { pnode(GPIO, 59, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 59, 0, 13) },
  { pnode(GPIO, 59, 0, DATAOUT, 2, 4), rnode(GIN, 59, 0, 12) },
  { pnode(GPIO, 59, 0, BSLIPMAX, 2, -1), rnode(GIN, 59, 0, 7) },
  { pnode(GPIO, 59, 0, CEIN, 2, -1), rnode(GOUT, 59, 0, 20) },
  { pnode(GPIO, 59, 0, CEOUT, 2, -1), rnode(GOUT, 59, 0, 13) },
  { pnode(GPIO, 59, 0, ACLR, 2, -1), rnode(GOUT, 59, 0, 21) },
  { pnode(GPIO, 59, 0, SCLR, 2, -1), rnode(GOUT, 59, 0, 25) },
  { pnode(GPIO, 59, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 59, 0, 5) },
  { pnode(GPIO, 59, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 59, 0, 7) },
  { pnode(GPIO, 59, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 59, 0, 1) },
  { pnode(GPIO, 59, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 59, 0, 3) },
  { pnode(GPIO, 59, 0, DATAIN, 3, 0), rnode(GOUT, 59, 0, 3) },
  { pnode(GPIO, 59, 0, DATAIN, 3, 1), rnode(GOUT, 59, 0, 17) },
  { pnode(GPIO, 59, 0, DATAIN, 3, 2), rnode(GOUT, 59, 0, 8) },
  { pnode(GPIO, 59, 0, DATAIN, 3, 3), rnode(GOUT, 59, 0, 18) },
  { pnode(GPIO, 59, 0, DATAOUT, 3, 0), rnode(GIN, 59, 0, 2) },
  { pnode(GPIO, 59, 0, DATAOUT, 3, 1), rnode(GIN, 59, 0, 3) },
  { pnode(GPIO, 59, 0, DATAOUT, 3, 2), rnode(GIN, 59, 0, 4) },
  { pnode(GPIO, 59, 0, DATAOUT, 3, 3), rnode(GIN, 59, 0, 5) },
  { pnode(GPIO, 59, 0, DATAOUT, 3, 4), rnode(GIN, 59, 0, 6) },
  { pnode(GPIO, 59, 0, OEIN, 3, 0), rnode(GOUT, 59, 0, 2) },
  { pnode(GPIO, 59, 0, OEIN, 3, 1), rnode(GOUT, 59, 0, 19) },
  { pnode(GPIO, 59, 0, BSLIPMAX, 3, -1), rnode(GIN, 59, 0, 1) },
  { pnode(GPIO, 59, 0, CEIN, 3, -1), rnode(GOUT, 59, 0, 5) },
  { pnode(GPIO, 59, 0, CEOUT, 3, -1), rnode(GOUT, 59, 0, 4) },
  { pnode(GPIO, 59, 0, ACLR, 3, -1), rnode(GOUT, 59, 0, 12) },
  { pnode(GPIO, 59, 0, SCLR, 3, -1), rnode(GOUT, 59, 0, 1) },
  { pnode(GPIO, 59, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 59, 0, 4) },
  { pnode(GPIO, 59, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 59, 0, 6) },
  { pnode(GPIO, 59, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 59, 0, 0) },
  { pnode(GPIO, 59, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 59, 0, 2) },
  { pnode(GPIO, 59, 61, DATAOUT, 0, 4), rnode(GIN, 59, 61, 14) },
  { pnode(GPIO, 59, 61, BSLIPMAX, 0, -1), rnode(GIN, 59, 61, 19) },
  { pnode(GPIO, 59, 61, CEIN, 0, -1), rnode(GOUT, 59, 61, 27) },
  { pnode(GPIO, 59, 61, CEOUT, 0, -1), rnode(GOUT, 59, 61, 45) },
  { pnode(GPIO, 59, 61, ACLR, 0, -1), rnode(GOUT, 59, 61, 28) },
  { pnode(GPIO, 59, 61, SCLR, 0, -1), rnode(GOUT, 59, 61, 31) },
  { pnode(GPIO, 59, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 59, 61, 10) },
  { pnode(GPIO, 59, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 59, 61, 8) },
  { pnode(GPIO, 59, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 59, 61, 14) },
  { pnode(GPIO, 59, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 59, 61, 12) },
  { pnode(GPIO, 59, 61, DATAOUT, 1, 4), rnode(GIN, 59, 61, 20) },
  { pnode(GPIO, 59, 61, BSLIPMAX, 1, -1), rnode(GIN, 59, 61, 25) },
  { pnode(GPIO, 59, 61, CEIN, 1, -1), rnode(GOUT, 59, 61, 51) },
  { pnode(GPIO, 59, 61, CEOUT, 1, -1), rnode(GOUT, 59, 61, 50) },
  { pnode(GPIO, 59, 61, ACLR, 1, -1), rnode(GOUT, 59, 61, 42) },
  { pnode(GPIO, 59, 61, SCLR, 1, -1), rnode(GOUT, 59, 61, 46) },
  { pnode(GPIO, 59, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 59, 61, 11) },
  { pnode(GPIO, 59, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 59, 61, 9) },
  { pnode(GPIO, 59, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 59, 61, 15) },
  { pnode(GPIO, 59, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 59, 61, 13) },
  { pnode(GPIO, 59, 61, DATAOUT, 2, 4), rnode(GIN, 59, 61, 12) },
  { pnode(GPIO, 59, 61, BSLIPMAX, 2, -1), rnode(GIN, 59, 61, 7) },
  { pnode(GPIO, 59, 61, CEIN, 2, -1), rnode(GOUT, 59, 61, 20) },
  { pnode(GPIO, 59, 61, CEOUT, 2, -1), rnode(GOUT, 59, 61, 13) },
  { pnode(GPIO, 59, 61, ACLR, 2, -1), rnode(GOUT, 59, 61, 21) },
  { pnode(GPIO, 59, 61, SCLR, 2, -1), rnode(GOUT, 59, 61, 25) },
  { pnode(GPIO, 59, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 59, 61, 5) },
  { pnode(GPIO, 59, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 59, 61, 7) },
  { pnode(GPIO, 59, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 59, 61, 1) },
  { pnode(GPIO, 59, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 59, 61, 3) },
  { pnode(GPIO, 59, 61, DATAIN, 3, 0), rnode(GOUT, 59, 61, 3) },
  { pnode(GPIO, 59, 61, DATAIN, 3, 1), rnode(GOUT, 59, 61, 17) },
  { pnode(GPIO, 59, 61, DATAIN, 3, 2), rnode(GOUT, 59, 61, 8) },
  { pnode(GPIO, 59, 61, DATAIN, 3, 3), rnode(GOUT, 59, 61, 18) },
  { pnode(GPIO, 59, 61, DATAOUT, 3, 0), rnode(GIN, 59, 61, 2) },
  { pnode(GPIO, 59, 61, DATAOUT, 3, 1), rnode(GIN, 59, 61, 3) },
  { pnode(GPIO, 59, 61, DATAOUT, 3, 2), rnode(GIN, 59, 61, 4) },
  { pnode(GPIO, 59, 61, DATAOUT, 3, 3), rnode(GIN, 59, 61, 5) },
  { pnode(GPIO, 59, 61, DATAOUT, 3, 4), rnode(GIN, 59, 61, 6) },
  { pnode(GPIO, 59, 61, OEIN, 3, 0), rnode(GOUT, 59, 61, 2) },
  { pnode(GPIO, 59, 61, OEIN, 3, 1), rnode(GOUT, 59, 61, 19) },
  { pnode(GPIO, 59, 61, BSLIPMAX, 3, -1), rnode(GIN, 59, 61, 1) },
  { pnode(GPIO, 59, 61, CEIN, 3, -1), rnode(GOUT, 59, 61, 5) },
  { pnode(GPIO, 59, 61, CEOUT, 3, -1), rnode(GOUT, 59, 61, 4) },
  { pnode(GPIO, 59, 61, ACLR, 3, -1), rnode(GOUT, 59, 61, 12) },
  { pnode(GPIO, 59, 61, SCLR, 3, -1), rnode(GOUT, 59, 61, 1) },
  { pnode(GPIO, 59, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 59, 61, 4) },
  { pnode(GPIO, 59, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 59, 61, 6) },
  { pnode(GPIO, 59, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 59, 61, 0) },
  { pnode(GPIO, 59, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 59, 61, 2) },
  { pnode(GPIO, 61, 0, DATAIN, 0, 0), rnode(GOUT, 61, 0, 44) },
  { pnode(GPIO, 61, 0, DATAIN, 0, 1), rnode(GOUT, 61, 0, 34) },
  { pnode(GPIO, 61, 0, DATAIN, 0, 2), rnode(GOUT, 61, 0, 43) },
  { pnode(GPIO, 61, 0, DATAIN, 0, 3), rnode(GOUT, 61, 0, 29) },
  { pnode(GPIO, 61, 0, DATAOUT, 0, 0), rnode(GIN, 61, 0, 18) },
  { pnode(GPIO, 61, 0, DATAOUT, 0, 1), rnode(GIN, 61, 0, 17) },
  { pnode(GPIO, 61, 0, DATAOUT, 0, 2), rnode(GIN, 61, 0, 16) },
  { pnode(GPIO, 61, 0, DATAOUT, 0, 3), rnode(GIN, 61, 0, 15) },
  { pnode(GPIO, 61, 0, DATAOUT, 0, 4), rnode(GIN, 61, 0, 14) },
  { pnode(GPIO, 61, 0, OEIN, 0, 0), rnode(GOUT, 61, 0, 38) },
  { pnode(GPIO, 61, 0, OEIN, 0, 1), rnode(GOUT, 61, 0, 30) },
  { pnode(GPIO, 61, 0, BSLIPMAX, 0, -1), rnode(GIN, 61, 0, 19) },
  { pnode(GPIO, 61, 0, CEIN, 0, -1), rnode(GOUT, 61, 0, 27) },
  { pnode(GPIO, 61, 0, CEOUT, 0, -1), rnode(GOUT, 61, 0, 45) },
  { pnode(GPIO, 61, 0, ACLR, 0, -1), rnode(GOUT, 61, 0, 28) },
  { pnode(GPIO, 61, 0, SCLR, 0, -1), rnode(GOUT, 61, 0, 31) },
  { pnode(GPIO, 61, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 61, 0, 10) },
  { pnode(GPIO, 61, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 61, 0, 8) },
  { pnode(GPIO, 61, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 61, 0, 14) },
  { pnode(GPIO, 61, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 61, 0, 12) },
  { pnode(GPIO, 61, 0, DATAIN, 1, 0), rnode(GOUT, 61, 0, 49) },
  { pnode(GPIO, 61, 0, DATAIN, 1, 1), rnode(GOUT, 61, 0, 41) },
  { pnode(GPIO, 61, 0, DATAIN, 1, 2), rnode(GOUT, 61, 0, 48) },
  { pnode(GPIO, 61, 0, DATAIN, 1, 3), rnode(GOUT, 61, 0, 40) },
  { pnode(GPIO, 61, 0, DATAOUT, 1, 0), rnode(GIN, 61, 0, 24) },
  { pnode(GPIO, 61, 0, DATAOUT, 1, 1), rnode(GIN, 61, 0, 23) },
  { pnode(GPIO, 61, 0, DATAOUT, 1, 2), rnode(GIN, 61, 0, 22) },
  { pnode(GPIO, 61, 0, DATAOUT, 1, 3), rnode(GIN, 61, 0, 21) },
  { pnode(GPIO, 61, 0, DATAOUT, 1, 4), rnode(GIN, 61, 0, 20) },
  { pnode(GPIO, 61, 0, OEIN, 1, 0), rnode(GOUT, 61, 0, 47) },
  { pnode(GPIO, 61, 0, OEIN, 1, 1), rnode(GOUT, 61, 0, 39) },
  { pnode(GPIO, 61, 0, BSLIPMAX, 1, -1), rnode(GIN, 61, 0, 25) },
  { pnode(GPIO, 61, 0, CEIN, 1, -1), rnode(GOUT, 61, 0, 51) },
  { pnode(GPIO, 61, 0, CEOUT, 1, -1), rnode(GOUT, 61, 0, 50) },
  { pnode(GPIO, 61, 0, ACLR, 1, -1), rnode(GOUT, 61, 0, 42) },
  { pnode(GPIO, 61, 0, SCLR, 1, -1), rnode(GOUT, 61, 0, 46) },
  { pnode(GPIO, 61, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 61, 0, 11) },
  { pnode(GPIO, 61, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 61, 0, 9) },
  { pnode(GPIO, 61, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 61, 0, 15) },
  { pnode(GPIO, 61, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 61, 0, 13) },
  { pnode(GPIO, 61, 0, DATAOUT, 2, 0), rnode(GIN, 61, 0, 8) },
  { pnode(GPIO, 61, 0, DATAOUT, 2, 1), rnode(GIN, 61, 0, 9) },
  { pnode(GPIO, 61, 0, DATAOUT, 2, 2), rnode(GIN, 61, 0, 10) },
  { pnode(GPIO, 61, 0, DATAOUT, 2, 3), rnode(GIN, 61, 0, 11) },
  { pnode(GPIO, 61, 0, DATAOUT, 2, 4), rnode(GIN, 61, 0, 12) },
  { pnode(GPIO, 61, 0, OEIN, 2, 0), rnode(GOUT, 61, 0, 16) },
  { pnode(GPIO, 61, 0, OEIN, 2, 1), rnode(GOUT, 61, 0, 24) },
  { pnode(GPIO, 61, 0, BSLIPMAX, 2, -1), rnode(GIN, 61, 0, 7) },
  { pnode(GPIO, 61, 0, CEIN, 2, -1), rnode(GOUT, 61, 0, 20) },
  { pnode(GPIO, 61, 0, CEOUT, 2, -1), rnode(GOUT, 61, 0, 13) },
  { pnode(GPIO, 61, 0, ACLR, 2, -1), rnode(GOUT, 61, 0, 21) },
  { pnode(GPIO, 61, 0, SCLR, 2, -1), rnode(GOUT, 61, 0, 25) },
  { pnode(GPIO, 61, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 61, 0, 5) },
  { pnode(GPIO, 61, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 61, 0, 7) },
  { pnode(GPIO, 61, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 61, 0, 1) },
  { pnode(GPIO, 61, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 61, 0, 3) },
  { pnode(GPIO, 61, 0, DATAOUT, 3, 4), rnode(GIN, 61, 0, 6) },
  { pnode(GPIO, 61, 0, BSLIPMAX, 3, -1), rnode(GIN, 61, 0, 1) },
  { pnode(GPIO, 61, 0, CEIN, 3, -1), rnode(GOUT, 61, 0, 5) },
  { pnode(GPIO, 61, 0, CEOUT, 3, -1), rnode(GOUT, 61, 0, 4) },
  { pnode(GPIO, 61, 0, ACLR, 3, -1), rnode(GOUT, 61, 0, 12) },
  { pnode(GPIO, 61, 0, SCLR, 3, -1), rnode(GOUT, 61, 0, 1) },
  { pnode(GPIO, 61, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 61, 0, 4) },
  { pnode(GPIO, 61, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 61, 0, 6) },
  { pnode(GPIO, 61, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 61, 0, 0) },
  { pnode(GPIO, 61, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 61, 0, 2) },
  { pnode(GPIO, 61, 61, DATAIN, 0, 0), rnode(GOUT, 61, 61, 44) },
  { pnode(GPIO, 61, 61, DATAIN, 0, 1), rnode(GOUT, 61, 61, 34) },
  { pnode(GPIO, 61, 61, DATAIN, 0, 2), rnode(GOUT, 61, 61, 43) },
  { pnode(GPIO, 61, 61, DATAIN, 0, 3), rnode(GOUT, 61, 61, 29) },
  { pnode(GPIO, 61, 61, DATAOUT, 0, 0), rnode(GIN, 61, 61, 18) },
  { pnode(GPIO, 61, 61, DATAOUT, 0, 1), rnode(GIN, 61, 61, 17) },
  { pnode(GPIO, 61, 61, DATAOUT, 0, 2), rnode(GIN, 61, 61, 16) },
  { pnode(GPIO, 61, 61, DATAOUT, 0, 3), rnode(GIN, 61, 61, 15) },
  { pnode(GPIO, 61, 61, DATAOUT, 0, 4), rnode(GIN, 61, 61, 14) },
  { pnode(GPIO, 61, 61, OEIN, 0, 0), rnode(GOUT, 61, 61, 38) },
  { pnode(GPIO, 61, 61, OEIN, 0, 1), rnode(GOUT, 61, 61, 30) },
  { pnode(GPIO, 61, 61, BSLIPMAX, 0, -1), rnode(GIN, 61, 61, 19) },
  { pnode(GPIO, 61, 61, CEIN, 0, -1), rnode(GOUT, 61, 61, 27) },
  { pnode(GPIO, 61, 61, CEOUT, 0, -1), rnode(GOUT, 61, 61, 45) },
  { pnode(GPIO, 61, 61, ACLR, 0, -1), rnode(GOUT, 61, 61, 28) },
  { pnode(GPIO, 61, 61, SCLR, 0, -1), rnode(GOUT, 61, 61, 31) },
  { pnode(GPIO, 61, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 61, 61, 10) },
  { pnode(GPIO, 61, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 61, 61, 8) },
  { pnode(GPIO, 61, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 61, 61, 14) },
  { pnode(GPIO, 61, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 61, 61, 12) },
  { pnode(GPIO, 61, 61, DATAIN, 1, 0), rnode(GOUT, 61, 61, 49) },
  { pnode(GPIO, 61, 61, DATAIN, 1, 1), rnode(GOUT, 61, 61, 41) },
  { pnode(GPIO, 61, 61, DATAIN, 1, 2), rnode(GOUT, 61, 61, 48) },
  { pnode(GPIO, 61, 61, DATAIN, 1, 3), rnode(GOUT, 61, 61, 40) },
  { pnode(GPIO, 61, 61, DATAOUT, 1, 0), rnode(GIN, 61, 61, 24) },
  { pnode(GPIO, 61, 61, DATAOUT, 1, 1), rnode(GIN, 61, 61, 23) },
  { pnode(GPIO, 61, 61, DATAOUT, 1, 2), rnode(GIN, 61, 61, 22) },
  { pnode(GPIO, 61, 61, DATAOUT, 1, 3), rnode(GIN, 61, 61, 21) },
  { pnode(GPIO, 61, 61, DATAOUT, 1, 4), rnode(GIN, 61, 61, 20) },
  { pnode(GPIO, 61, 61, OEIN, 1, 0), rnode(GOUT, 61, 61, 47) },
  { pnode(GPIO, 61, 61, OEIN, 1, 1), rnode(GOUT, 61, 61, 39) },
  { pnode(GPIO, 61, 61, BSLIPMAX, 1, -1), rnode(GIN, 61, 61, 25) },
  { pnode(GPIO, 61, 61, CEIN, 1, -1), rnode(GOUT, 61, 61, 51) },
  { pnode(GPIO, 61, 61, CEOUT, 1, -1), rnode(GOUT, 61, 61, 50) },
  { pnode(GPIO, 61, 61, ACLR, 1, -1), rnode(GOUT, 61, 61, 42) },
  { pnode(GPIO, 61, 61, SCLR, 1, -1), rnode(GOUT, 61, 61, 46) },
  { pnode(GPIO, 61, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 61, 61, 11) },
  { pnode(GPIO, 61, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 61, 61, 9) },
  { pnode(GPIO, 61, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 61, 61, 15) },
  { pnode(GPIO, 61, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 61, 61, 13) },
  { pnode(GPIO, 61, 61, DATAOUT, 2, 0), rnode(GIN, 61, 61, 8) },
  { pnode(GPIO, 61, 61, DATAOUT, 2, 1), rnode(GIN, 61, 61, 9) },
  { pnode(GPIO, 61, 61, DATAOUT, 2, 2), rnode(GIN, 61, 61, 10) },
  { pnode(GPIO, 61, 61, DATAOUT, 2, 3), rnode(GIN, 61, 61, 11) },
  { pnode(GPIO, 61, 61, DATAOUT, 2, 4), rnode(GIN, 61, 61, 12) },
  { pnode(GPIO, 61, 61, OEIN, 2, 0), rnode(GOUT, 61, 61, 16) },
  { pnode(GPIO, 61, 61, OEIN, 2, 1), rnode(GOUT, 61, 61, 24) },
  { pnode(GPIO, 61, 61, BSLIPMAX, 2, -1), rnode(GIN, 61, 61, 7) },
  { pnode(GPIO, 61, 61, CEIN, 2, -1), rnode(GOUT, 61, 61, 20) },
  { pnode(GPIO, 61, 61, CEOUT, 2, -1), rnode(GOUT, 61, 61, 13) },
  { pnode(GPIO, 61, 61, ACLR, 2, -1), rnode(GOUT, 61, 61, 21) },
  { pnode(GPIO, 61, 61, SCLR, 2, -1), rnode(GOUT, 61, 61, 25) },
  { pnode(GPIO, 61, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 61, 61, 5) },
  { pnode(GPIO, 61, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 61, 61, 7) },
  { pnode(GPIO, 61, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 61, 61, 1) },
  { pnode(GPIO, 61, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 61, 61, 3) },
  { pnode(GPIO, 61, 61, DATAOUT, 3, 4), rnode(GIN, 61, 61, 6) },
  { pnode(GPIO, 61, 61, BSLIPMAX, 3, -1), rnode(GIN, 61, 61, 1) },
  { pnode(GPIO, 61, 61, CEIN, 3, -1), rnode(GOUT, 61, 61, 5) },
  { pnode(GPIO, 61, 61, CEOUT, 3, -1), rnode(GOUT, 61, 61, 4) },
  { pnode(GPIO, 61, 61, ACLR, 3, -1), rnode(GOUT, 61, 61, 12) },
  { pnode(GPIO, 61, 61, SCLR, 3, -1), rnode(GOUT, 61, 61, 1) },
  { pnode(GPIO, 61, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 61, 61, 4) },
  { pnode(GPIO, 61, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 61, 61, 6) },
  { pnode(GPIO, 61, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 61, 61, 0) },
  { pnode(GPIO, 61, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 61, 61, 2) },
  { pnode(GPIO, 62, 0, DATAOUT, 0, 4), rnode(GIN, 62, 0, 14) },
  { pnode(GPIO, 62, 0, BSLIPMAX, 0, -1), rnode(GIN, 62, 0, 19) },
  { pnode(GPIO, 62, 0, CEIN, 0, -1), rnode(GOUT, 62, 0, 27) },
  { pnode(GPIO, 62, 0, CEOUT, 0, -1), rnode(GOUT, 62, 0, 45) },
  { pnode(GPIO, 62, 0, ACLR, 0, -1), rnode(GOUT, 62, 0, 28) },
  { pnode(GPIO, 62, 0, SCLR, 0, -1), rnode(GOUT, 62, 0, 31) },
  { pnode(GPIO, 62, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 62, 0, 10) },
  { pnode(GPIO, 62, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 62, 0, 8) },
  { pnode(GPIO, 62, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 62, 0, 14) },
  { pnode(GPIO, 62, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 62, 0, 12) },
  { pnode(GPIO, 62, 0, DATAOUT, 1, 4), rnode(GIN, 62, 0, 20) },
  { pnode(GPIO, 62, 0, BSLIPMAX, 1, -1), rnode(GIN, 62, 0, 25) },
  { pnode(GPIO, 62, 0, CEIN, 1, -1), rnode(GOUT, 62, 0, 51) },
  { pnode(GPIO, 62, 0, CEOUT, 1, -1), rnode(GOUT, 62, 0, 50) },
  { pnode(GPIO, 62, 0, ACLR, 1, -1), rnode(GOUT, 62, 0, 42) },
  { pnode(GPIO, 62, 0, SCLR, 1, -1), rnode(GOUT, 62, 0, 46) },
  { pnode(GPIO, 62, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 62, 0, 11) },
  { pnode(GPIO, 62, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 62, 0, 9) },
  { pnode(GPIO, 62, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 62, 0, 15) },
  { pnode(GPIO, 62, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 62, 0, 13) },
  { pnode(GPIO, 62, 0, DATAOUT, 2, 4), rnode(GIN, 62, 0, 12) },
  { pnode(GPIO, 62, 0, BSLIPMAX, 2, -1), rnode(GIN, 62, 0, 7) },
  { pnode(GPIO, 62, 0, CEIN, 2, -1), rnode(GOUT, 62, 0, 20) },
  { pnode(GPIO, 62, 0, CEOUT, 2, -1), rnode(GOUT, 62, 0, 13) },
  { pnode(GPIO, 62, 0, ACLR, 2, -1), rnode(GOUT, 62, 0, 21) },
  { pnode(GPIO, 62, 0, SCLR, 2, -1), rnode(GOUT, 62, 0, 25) },
  { pnode(GPIO, 62, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 62, 0, 5) },
  { pnode(GPIO, 62, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 62, 0, 7) },
  { pnode(GPIO, 62, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 62, 0, 1) },
  { pnode(GPIO, 62, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 62, 0, 3) },
  { pnode(GPIO, 62, 0, DATAIN, 3, 0), rnode(GOUT, 62, 0, 3) },
  { pnode(GPIO, 62, 0, DATAIN, 3, 1), rnode(GOUT, 62, 0, 17) },
  { pnode(GPIO, 62, 0, DATAIN, 3, 2), rnode(GOUT, 62, 0, 8) },
  { pnode(GPIO, 62, 0, DATAIN, 3, 3), rnode(GOUT, 62, 0, 18) },
  { pnode(GPIO, 62, 0, DATAOUT, 3, 0), rnode(GIN, 62, 0, 2) },
  { pnode(GPIO, 62, 0, DATAOUT, 3, 1), rnode(GIN, 62, 0, 3) },
  { pnode(GPIO, 62, 0, DATAOUT, 3, 2), rnode(GIN, 62, 0, 4) },
  { pnode(GPIO, 62, 0, DATAOUT, 3, 3), rnode(GIN, 62, 0, 5) },
  { pnode(GPIO, 62, 0, DATAOUT, 3, 4), rnode(GIN, 62, 0, 6) },
  { pnode(GPIO, 62, 0, OEIN, 3, 0), rnode(GOUT, 62, 0, 2) },
  { pnode(GPIO, 62, 0, OEIN, 3, 1), rnode(GOUT, 62, 0, 19) },
  { pnode(GPIO, 62, 0, BSLIPMAX, 3, -1), rnode(GIN, 62, 0, 1) },
  { pnode(GPIO, 62, 0, CEIN, 3, -1), rnode(GOUT, 62, 0, 5) },
  { pnode(GPIO, 62, 0, CEOUT, 3, -1), rnode(GOUT, 62, 0, 4) },
  { pnode(GPIO, 62, 0, ACLR, 3, -1), rnode(GOUT, 62, 0, 12) },
  { pnode(GPIO, 62, 0, SCLR, 3, -1), rnode(GOUT, 62, 0, 1) },
  { pnode(GPIO, 62, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 62, 0, 4) },
  { pnode(GPIO, 62, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 62, 0, 6) },
  { pnode(GPIO, 62, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 62, 0, 0) },
  { pnode(GPIO, 62, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 62, 0, 2) },
  { pnode(GPIO, 62, 61, DATAOUT, 0, 4), rnode(GIN, 62, 61, 14) },
  { pnode(GPIO, 62, 61, BSLIPMAX, 0, -1), rnode(GIN, 62, 61, 19) },
  { pnode(GPIO, 62, 61, CEIN, 0, -1), rnode(GOUT, 62, 61, 27) },
  { pnode(GPIO, 62, 61, CEOUT, 0, -1), rnode(GOUT, 62, 61, 45) },
  { pnode(GPIO, 62, 61, ACLR, 0, -1), rnode(GOUT, 62, 61, 28) },
  { pnode(GPIO, 62, 61, SCLR, 0, -1), rnode(GOUT, 62, 61, 31) },
  { pnode(GPIO, 62, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 62, 61, 10) },
  { pnode(GPIO, 62, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 62, 61, 8) },
  { pnode(GPIO, 62, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 62, 61, 14) },
  { pnode(GPIO, 62, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 62, 61, 12) },
  { pnode(GPIO, 62, 61, DATAOUT, 1, 4), rnode(GIN, 62, 61, 20) },
  { pnode(GPIO, 62, 61, BSLIPMAX, 1, -1), rnode(GIN, 62, 61, 25) },
  { pnode(GPIO, 62, 61, CEIN, 1, -1), rnode(GOUT, 62, 61, 51) },
  { pnode(GPIO, 62, 61, CEOUT, 1, -1), rnode(GOUT, 62, 61, 50) },
  { pnode(GPIO, 62, 61, ACLR, 1, -1), rnode(GOUT, 62, 61, 42) },
  { pnode(GPIO, 62, 61, SCLR, 1, -1), rnode(GOUT, 62, 61, 46) },
  { pnode(GPIO, 62, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 62, 61, 11) },
  { pnode(GPIO, 62, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 62, 61, 9) },
  { pnode(GPIO, 62, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 62, 61, 15) },
  { pnode(GPIO, 62, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 62, 61, 13) },
  { pnode(GPIO, 62, 61, DATAOUT, 2, 4), rnode(GIN, 62, 61, 12) },
  { pnode(GPIO, 62, 61, BSLIPMAX, 2, -1), rnode(GIN, 62, 61, 7) },
  { pnode(GPIO, 62, 61, CEIN, 2, -1), rnode(GOUT, 62, 61, 20) },
  { pnode(GPIO, 62, 61, CEOUT, 2, -1), rnode(GOUT, 62, 61, 13) },
  { pnode(GPIO, 62, 61, ACLR, 2, -1), rnode(GOUT, 62, 61, 21) },
  { pnode(GPIO, 62, 61, SCLR, 2, -1), rnode(GOUT, 62, 61, 25) },
  { pnode(GPIO, 62, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 62, 61, 5) },
  { pnode(GPIO, 62, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 62, 61, 7) },
  { pnode(GPIO, 62, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 62, 61, 1) },
  { pnode(GPIO, 62, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 62, 61, 3) },
  { pnode(GPIO, 62, 61, DATAIN, 3, 0), rnode(GOUT, 62, 61, 3) },
  { pnode(GPIO, 62, 61, DATAIN, 3, 1), rnode(GOUT, 62, 61, 17) },
  { pnode(GPIO, 62, 61, DATAIN, 3, 2), rnode(GOUT, 62, 61, 8) },
  { pnode(GPIO, 62, 61, DATAIN, 3, 3), rnode(GOUT, 62, 61, 18) },
  { pnode(GPIO, 62, 61, DATAOUT, 3, 0), rnode(GIN, 62, 61, 2) },
  { pnode(GPIO, 62, 61, DATAOUT, 3, 1), rnode(GIN, 62, 61, 3) },
  { pnode(GPIO, 62, 61, DATAOUT, 3, 2), rnode(GIN, 62, 61, 4) },
  { pnode(GPIO, 62, 61, DATAOUT, 3, 3), rnode(GIN, 62, 61, 5) },
  { pnode(GPIO, 62, 61, DATAOUT, 3, 4), rnode(GIN, 62, 61, 6) },
  { pnode(GPIO, 62, 61, OEIN, 3, 0), rnode(GOUT, 62, 61, 2) },
  { pnode(GPIO, 62, 61, OEIN, 3, 1), rnode(GOUT, 62, 61, 19) },
  { pnode(GPIO, 62, 61, BSLIPMAX, 3, -1), rnode(GIN, 62, 61, 1) },
  { pnode(GPIO, 62, 61, CEIN, 3, -1), rnode(GOUT, 62, 61, 5) },
  { pnode(GPIO, 62, 61, CEOUT, 3, -1), rnode(GOUT, 62, 61, 4) },
  { pnode(GPIO, 62, 61, ACLR, 3, -1), rnode(GOUT, 62, 61, 12) },
  { pnode(GPIO, 62, 61, SCLR, 3, -1), rnode(GOUT, 62, 61, 1) },
  { pnode(GPIO, 62, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 62, 61, 4) },
  { pnode(GPIO, 62, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 62, 61, 6) },
  { pnode(GPIO, 62, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 62, 61, 0) },
  { pnode(GPIO, 62, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 62, 61, 2) },
  { pnode(GPIO, 64, 0, DATAOUT, 0, 0), rnode(GIN, 64, 0, 18) },
  { pnode(GPIO, 64, 0, DATAOUT, 0, 1), rnode(GIN, 64, 0, 17) },
  { pnode(GPIO, 64, 0, DATAOUT, 0, 2), rnode(GIN, 64, 0, 16) },
  { pnode(GPIO, 64, 0, DATAOUT, 0, 3), rnode(GIN, 64, 0, 15) },
  { pnode(GPIO, 64, 0, DATAOUT, 0, 4), rnode(GIN, 64, 0, 14) },
  { pnode(GPIO, 64, 0, BSLIPMAX, 0, -1), rnode(GIN, 64, 0, 19) },
  { pnode(GPIO, 64, 0, CEIN, 0, -1), rnode(GOUT, 64, 0, 27) },
  { pnode(GPIO, 64, 0, CEOUT, 0, -1), rnode(GOUT, 64, 0, 45) },
  { pnode(GPIO, 64, 0, ACLR, 0, -1), rnode(GOUT, 64, 0, 28) },
  { pnode(GPIO, 64, 0, SCLR, 0, -1), rnode(GOUT, 64, 0, 31) },
  { pnode(GPIO, 64, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 64, 0, 10) },
  { pnode(GPIO, 64, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 64, 0, 8) },
  { pnode(GPIO, 64, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 64, 0, 14) },
  { pnode(GPIO, 64, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 64, 0, 12) },
  { pnode(GPIO, 64, 0, DATAOUT, 1, 0), rnode(GIN, 64, 0, 24) },
  { pnode(GPIO, 64, 0, DATAOUT, 1, 1), rnode(GIN, 64, 0, 23) },
  { pnode(GPIO, 64, 0, DATAOUT, 1, 2), rnode(GIN, 64, 0, 22) },
  { pnode(GPIO, 64, 0, DATAOUT, 1, 3), rnode(GIN, 64, 0, 21) },
  { pnode(GPIO, 64, 0, DATAOUT, 1, 4), rnode(GIN, 64, 0, 20) },
  { pnode(GPIO, 64, 0, BSLIPMAX, 1, -1), rnode(GIN, 64, 0, 25) },
  { pnode(GPIO, 64, 0, CEIN, 1, -1), rnode(GOUT, 64, 0, 51) },
  { pnode(GPIO, 64, 0, CEOUT, 1, -1), rnode(GOUT, 64, 0, 50) },
  { pnode(GPIO, 64, 0, ACLR, 1, -1), rnode(GOUT, 64, 0, 42) },
  { pnode(GPIO, 64, 0, SCLR, 1, -1), rnode(GOUT, 64, 0, 46) },
  { pnode(GPIO, 64, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 64, 0, 11) },
  { pnode(GPIO, 64, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 64, 0, 9) },
  { pnode(GPIO, 64, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 64, 0, 15) },
  { pnode(GPIO, 64, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 64, 0, 13) },
  { pnode(GPIO, 64, 0, DATAIN, 2, 0), rnode(GOUT, 64, 0, 14) },
  { pnode(GPIO, 64, 0, DATAIN, 2, 1), rnode(GOUT, 64, 0, 22) },
  { pnode(GPIO, 64, 0, DATAIN, 2, 2), rnode(GOUT, 64, 0, 15) },
  { pnode(GPIO, 64, 0, DATAIN, 2, 3), rnode(GOUT, 64, 0, 23) },
  { pnode(GPIO, 64, 0, DATAOUT, 2, 0), rnode(GIN, 64, 0, 8) },
  { pnode(GPIO, 64, 0, DATAOUT, 2, 1), rnode(GIN, 64, 0, 9) },
  { pnode(GPIO, 64, 0, DATAOUT, 2, 2), rnode(GIN, 64, 0, 10) },
  { pnode(GPIO, 64, 0, DATAOUT, 2, 3), rnode(GIN, 64, 0, 11) },
  { pnode(GPIO, 64, 0, DATAOUT, 2, 4), rnode(GIN, 64, 0, 12) },
  { pnode(GPIO, 64, 0, OEIN, 2, 0), rnode(GOUT, 64, 0, 16) },
  { pnode(GPIO, 64, 0, OEIN, 2, 1), rnode(GOUT, 64, 0, 24) },
  { pnode(GPIO, 64, 0, BSLIPMAX, 2, -1), rnode(GIN, 64, 0, 7) },
  { pnode(GPIO, 64, 0, CEIN, 2, -1), rnode(GOUT, 64, 0, 20) },
  { pnode(GPIO, 64, 0, CEOUT, 2, -1), rnode(GOUT, 64, 0, 13) },
  { pnode(GPIO, 64, 0, ACLR, 2, -1), rnode(GOUT, 64, 0, 21) },
  { pnode(GPIO, 64, 0, SCLR, 2, -1), rnode(GOUT, 64, 0, 25) },
  { pnode(GPIO, 64, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 64, 0, 5) },
  { pnode(GPIO, 64, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 64, 0, 7) },
  { pnode(GPIO, 64, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 64, 0, 1) },
  { pnode(GPIO, 64, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 64, 0, 3) },
  { pnode(GPIO, 64, 0, DATAOUT, 3, 4), rnode(GIN, 64, 0, 6) },
  { pnode(GPIO, 64, 0, BSLIPMAX, 3, -1), rnode(GIN, 64, 0, 1) },
  { pnode(GPIO, 64, 0, CEIN, 3, -1), rnode(GOUT, 64, 0, 5) },
  { pnode(GPIO, 64, 0, CEOUT, 3, -1), rnode(GOUT, 64, 0, 4) },
  { pnode(GPIO, 64, 0, ACLR, 3, -1), rnode(GOUT, 64, 0, 12) },
  { pnode(GPIO, 64, 0, SCLR, 3, -1), rnode(GOUT, 64, 0, 1) },
  { pnode(GPIO, 64, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 64, 0, 4) },
  { pnode(GPIO, 64, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 64, 0, 6) },
  { pnode(GPIO, 64, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 64, 0, 0) },
  { pnode(GPIO, 64, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 64, 0, 2) },
  { pnode(GPIO, 64, 61, DATAOUT, 0, 0), rnode(GIN, 64, 61, 18) },
  { pnode(GPIO, 64, 61, DATAOUT, 0, 1), rnode(GIN, 64, 61, 17) },
  { pnode(GPIO, 64, 61, DATAOUT, 0, 2), rnode(GIN, 64, 61, 16) },
  { pnode(GPIO, 64, 61, DATAOUT, 0, 3), rnode(GIN, 64, 61, 15) },
  { pnode(GPIO, 64, 61, DATAOUT, 0, 4), rnode(GIN, 64, 61, 14) },
  { pnode(GPIO, 64, 61, BSLIPMAX, 0, -1), rnode(GIN, 64, 61, 19) },
  { pnode(GPIO, 64, 61, CEIN, 0, -1), rnode(GOUT, 64, 61, 27) },
  { pnode(GPIO, 64, 61, CEOUT, 0, -1), rnode(GOUT, 64, 61, 45) },
  { pnode(GPIO, 64, 61, ACLR, 0, -1), rnode(GOUT, 64, 61, 28) },
  { pnode(GPIO, 64, 61, SCLR, 0, -1), rnode(GOUT, 64, 61, 31) },
  { pnode(GPIO, 64, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 64, 61, 10) },
  { pnode(GPIO, 64, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 64, 61, 8) },
  { pnode(GPIO, 64, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 64, 61, 14) },
  { pnode(GPIO, 64, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 64, 61, 12) },
  { pnode(GPIO, 64, 61, DATAOUT, 1, 0), rnode(GIN, 64, 61, 24) },
  { pnode(GPIO, 64, 61, DATAOUT, 1, 1), rnode(GIN, 64, 61, 23) },
  { pnode(GPIO, 64, 61, DATAOUT, 1, 2), rnode(GIN, 64, 61, 22) },
  { pnode(GPIO, 64, 61, DATAOUT, 1, 3), rnode(GIN, 64, 61, 21) },
  { pnode(GPIO, 64, 61, DATAOUT, 1, 4), rnode(GIN, 64, 61, 20) },
  { pnode(GPIO, 64, 61, BSLIPMAX, 1, -1), rnode(GIN, 64, 61, 25) },
  { pnode(GPIO, 64, 61, CEIN, 1, -1), rnode(GOUT, 64, 61, 51) },
  { pnode(GPIO, 64, 61, CEOUT, 1, -1), rnode(GOUT, 64, 61, 50) },
  { pnode(GPIO, 64, 61, ACLR, 1, -1), rnode(GOUT, 64, 61, 42) },
  { pnode(GPIO, 64, 61, SCLR, 1, -1), rnode(GOUT, 64, 61, 46) },
  { pnode(GPIO, 64, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 64, 61, 11) },
  { pnode(GPIO, 64, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 64, 61, 9) },
  { pnode(GPIO, 64, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 64, 61, 15) },
  { pnode(GPIO, 64, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 64, 61, 13) },
  { pnode(GPIO, 64, 61, DATAIN, 2, 0), rnode(GOUT, 64, 61, 14) },
  { pnode(GPIO, 64, 61, DATAIN, 2, 1), rnode(GOUT, 64, 61, 22) },
  { pnode(GPIO, 64, 61, DATAIN, 2, 2), rnode(GOUT, 64, 61, 15) },
  { pnode(GPIO, 64, 61, DATAIN, 2, 3), rnode(GOUT, 64, 61, 23) },
  { pnode(GPIO, 64, 61, DATAOUT, 2, 0), rnode(GIN, 64, 61, 8) },
  { pnode(GPIO, 64, 61, DATAOUT, 2, 1), rnode(GIN, 64, 61, 9) },
  { pnode(GPIO, 64, 61, DATAOUT, 2, 2), rnode(GIN, 64, 61, 10) },
  { pnode(GPIO, 64, 61, DATAOUT, 2, 3), rnode(GIN, 64, 61, 11) },
  { pnode(GPIO, 64, 61, DATAOUT, 2, 4), rnode(GIN, 64, 61, 12) },
  { pnode(GPIO, 64, 61, OEIN, 2, 0), rnode(GOUT, 64, 61, 16) },
  { pnode(GPIO, 64, 61, OEIN, 2, 1), rnode(GOUT, 64, 61, 24) },
  { pnode(GPIO, 64, 61, BSLIPMAX, 2, -1), rnode(GIN, 64, 61, 7) },
  { pnode(GPIO, 64, 61, CEIN, 2, -1), rnode(GOUT, 64, 61, 20) },
  { pnode(GPIO, 64, 61, CEOUT, 2, -1), rnode(GOUT, 64, 61, 13) },
  { pnode(GPIO, 64, 61, ACLR, 2, -1), rnode(GOUT, 64, 61, 21) },
  { pnode(GPIO, 64, 61, SCLR, 2, -1), rnode(GOUT, 64, 61, 25) },
  { pnode(GPIO, 64, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 64, 61, 5) },
  { pnode(GPIO, 64, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 64, 61, 7) },
  { pnode(GPIO, 64, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 64, 61, 1) },
  { pnode(GPIO, 64, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 64, 61, 3) },
  { pnode(GPIO, 64, 61, DATAOUT, 3, 4), rnode(GIN, 64, 61, 6) },
  { pnode(GPIO, 64, 61, BSLIPMAX, 3, -1), rnode(GIN, 64, 61, 1) },
  { pnode(GPIO, 64, 61, CEIN, 3, -1), rnode(GOUT, 64, 61, 5) },
  { pnode(GPIO, 64, 61, CEOUT, 3, -1), rnode(GOUT, 64, 61, 4) },
  { pnode(GPIO, 64, 61, ACLR, 3, -1), rnode(GOUT, 64, 61, 12) },
  { pnode(GPIO, 64, 61, SCLR, 3, -1), rnode(GOUT, 64, 61, 1) },
  { pnode(GPIO, 64, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 64, 61, 4) },
  { pnode(GPIO, 64, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 64, 61, 6) },
  { pnode(GPIO, 64, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 64, 61, 0) },
  { pnode(GPIO, 64, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 64, 61, 2) },
  { pnode(GPIO, 65, 0, DATAOUT, 0, 4), rnode(GIN, 65, 0, 14) },
  { pnode(GPIO, 65, 0, BSLIPMAX, 0, -1), rnode(GIN, 65, 0, 19) },
  { pnode(GPIO, 65, 0, CEIN, 0, -1), rnode(GOUT, 65, 0, 27) },
  { pnode(GPIO, 65, 0, CEOUT, 0, -1), rnode(GOUT, 65, 0, 45) },
  { pnode(GPIO, 65, 0, ACLR, 0, -1), rnode(GOUT, 65, 0, 28) },
  { pnode(GPIO, 65, 0, SCLR, 0, -1), rnode(GOUT, 65, 0, 31) },
  { pnode(GPIO, 65, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 65, 0, 10) },
  { pnode(GPIO, 65, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 65, 0, 8) },
  { pnode(GPIO, 65, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 65, 0, 14) },
  { pnode(GPIO, 65, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 65, 0, 12) },
  { pnode(GPIO, 65, 0, DATAOUT, 1, 4), rnode(GIN, 65, 0, 20) },
  { pnode(GPIO, 65, 0, BSLIPMAX, 1, -1), rnode(GIN, 65, 0, 25) },
  { pnode(GPIO, 65, 0, CEIN, 1, -1), rnode(GOUT, 65, 0, 51) },
  { pnode(GPIO, 65, 0, CEOUT, 1, -1), rnode(GOUT, 65, 0, 50) },
  { pnode(GPIO, 65, 0, ACLR, 1, -1), rnode(GOUT, 65, 0, 42) },
  { pnode(GPIO, 65, 0, SCLR, 1, -1), rnode(GOUT, 65, 0, 46) },
  { pnode(GPIO, 65, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 65, 0, 11) },
  { pnode(GPIO, 65, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 65, 0, 9) },
  { pnode(GPIO, 65, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 65, 0, 15) },
  { pnode(GPIO, 65, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 65, 0, 13) },
  { pnode(GPIO, 65, 0, DATAOUT, 2, 4), rnode(GIN, 65, 0, 12) },
  { pnode(GPIO, 65, 0, BSLIPMAX, 2, -1), rnode(GIN, 65, 0, 7) },
  { pnode(GPIO, 65, 0, CEIN, 2, -1), rnode(GOUT, 65, 0, 20) },
  { pnode(GPIO, 65, 0, CEOUT, 2, -1), rnode(GOUT, 65, 0, 13) },
  { pnode(GPIO, 65, 0, ACLR, 2, -1), rnode(GOUT, 65, 0, 21) },
  { pnode(GPIO, 65, 0, SCLR, 2, -1), rnode(GOUT, 65, 0, 25) },
  { pnode(GPIO, 65, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 65, 0, 5) },
  { pnode(GPIO, 65, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 65, 0, 7) },
  { pnode(GPIO, 65, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 65, 0, 1) },
  { pnode(GPIO, 65, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 65, 0, 3) },
  { pnode(GPIO, 65, 0, DATAIN, 3, 0), rnode(GOUT, 65, 0, 3) },
  { pnode(GPIO, 65, 0, DATAIN, 3, 1), rnode(GOUT, 65, 0, 17) },
  { pnode(GPIO, 65, 0, DATAIN, 3, 2), rnode(GOUT, 65, 0, 8) },
  { pnode(GPIO, 65, 0, DATAIN, 3, 3), rnode(GOUT, 65, 0, 18) },
  { pnode(GPIO, 65, 0, DATAOUT, 3, 0), rnode(GIN, 65, 0, 2) },
  { pnode(GPIO, 65, 0, DATAOUT, 3, 1), rnode(GIN, 65, 0, 3) },
  { pnode(GPIO, 65, 0, DATAOUT, 3, 2), rnode(GIN, 65, 0, 4) },
  { pnode(GPIO, 65, 0, DATAOUT, 3, 3), rnode(GIN, 65, 0, 5) },
  { pnode(GPIO, 65, 0, DATAOUT, 3, 4), rnode(GIN, 65, 0, 6) },
  { pnode(GPIO, 65, 0, OEIN, 3, 0), rnode(GOUT, 65, 0, 2) },
  { pnode(GPIO, 65, 0, OEIN, 3, 1), rnode(GOUT, 65, 0, 19) },
  { pnode(GPIO, 65, 0, BSLIPMAX, 3, -1), rnode(GIN, 65, 0, 1) },
  { pnode(GPIO, 65, 0, CEIN, 3, -1), rnode(GOUT, 65, 0, 5) },
  { pnode(GPIO, 65, 0, CEOUT, 3, -1), rnode(GOUT, 65, 0, 4) },
  { pnode(GPIO, 65, 0, ACLR, 3, -1), rnode(GOUT, 65, 0, 12) },
  { pnode(GPIO, 65, 0, SCLR, 3, -1), rnode(GOUT, 65, 0, 1) },
  { pnode(GPIO, 65, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 65, 0, 4) },
  { pnode(GPIO, 65, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 65, 0, 6) },
  { pnode(GPIO, 65, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 65, 0, 0) },
  { pnode(GPIO, 65, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 65, 0, 2) },
  { pnode(GPIO, 65, 61, DATAOUT, 0, 4), rnode(GIN, 65, 61, 14) },
  { pnode(GPIO, 65, 61, BSLIPMAX, 0, -1), rnode(GIN, 65, 61, 19) },
  { pnode(GPIO, 65, 61, CEIN, 0, -1), rnode(GOUT, 65, 61, 27) },
  { pnode(GPIO, 65, 61, CEOUT, 0, -1), rnode(GOUT, 65, 61, 45) },
  { pnode(GPIO, 65, 61, ACLR, 0, -1), rnode(GOUT, 65, 61, 28) },
  { pnode(GPIO, 65, 61, SCLR, 0, -1), rnode(GOUT, 65, 61, 31) },
  { pnode(GPIO, 65, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 65, 61, 10) },
  { pnode(GPIO, 65, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 65, 61, 8) },
  { pnode(GPIO, 65, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 65, 61, 14) },
  { pnode(GPIO, 65, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 65, 61, 12) },
  { pnode(GPIO, 65, 61, DATAOUT, 1, 4), rnode(GIN, 65, 61, 20) },
  { pnode(GPIO, 65, 61, BSLIPMAX, 1, -1), rnode(GIN, 65, 61, 25) },
  { pnode(GPIO, 65, 61, CEIN, 1, -1), rnode(GOUT, 65, 61, 51) },
  { pnode(GPIO, 65, 61, CEOUT, 1, -1), rnode(GOUT, 65, 61, 50) },
  { pnode(GPIO, 65, 61, ACLR, 1, -1), rnode(GOUT, 65, 61, 42) },
  { pnode(GPIO, 65, 61, SCLR, 1, -1), rnode(GOUT, 65, 61, 46) },
  { pnode(GPIO, 65, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 65, 61, 11) },
  { pnode(GPIO, 65, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 65, 61, 9) },
  { pnode(GPIO, 65, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 65, 61, 15) },
  { pnode(GPIO, 65, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 65, 61, 13) },
  { pnode(GPIO, 65, 61, DATAOUT, 2, 4), rnode(GIN, 65, 61, 12) },
  { pnode(GPIO, 65, 61, BSLIPMAX, 2, -1), rnode(GIN, 65, 61, 7) },
  { pnode(GPIO, 65, 61, CEIN, 2, -1), rnode(GOUT, 65, 61, 20) },
  { pnode(GPIO, 65, 61, CEOUT, 2, -1), rnode(GOUT, 65, 61, 13) },
  { pnode(GPIO, 65, 61, ACLR, 2, -1), rnode(GOUT, 65, 61, 21) },
  { pnode(GPIO, 65, 61, SCLR, 2, -1), rnode(GOUT, 65, 61, 25) },
  { pnode(GPIO, 65, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 65, 61, 5) },
  { pnode(GPIO, 65, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 65, 61, 7) },
  { pnode(GPIO, 65, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 65, 61, 1) },
  { pnode(GPIO, 65, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 65, 61, 3) },
  { pnode(GPIO, 65, 61, DATAIN, 3, 0), rnode(GOUT, 65, 61, 3) },
  { pnode(GPIO, 65, 61, DATAIN, 3, 1), rnode(GOUT, 65, 61, 17) },
  { pnode(GPIO, 65, 61, DATAIN, 3, 2), rnode(GOUT, 65, 61, 8) },
  { pnode(GPIO, 65, 61, DATAIN, 3, 3), rnode(GOUT, 65, 61, 18) },
  { pnode(GPIO, 65, 61, DATAOUT, 3, 0), rnode(GIN, 65, 61, 2) },
  { pnode(GPIO, 65, 61, DATAOUT, 3, 1), rnode(GIN, 65, 61, 3) },
  { pnode(GPIO, 65, 61, DATAOUT, 3, 2), rnode(GIN, 65, 61, 4) },
  { pnode(GPIO, 65, 61, DATAOUT, 3, 3), rnode(GIN, 65, 61, 5) },
  { pnode(GPIO, 65, 61, DATAOUT, 3, 4), rnode(GIN, 65, 61, 6) },
  { pnode(GPIO, 65, 61, OEIN, 3, 0), rnode(GOUT, 65, 61, 2) },
  { pnode(GPIO, 65, 61, OEIN, 3, 1), rnode(GOUT, 65, 61, 19) },
  { pnode(GPIO, 65, 61, BSLIPMAX, 3, -1), rnode(GIN, 65, 61, 1) },
  { pnode(GPIO, 65, 61, CEIN, 3, -1), rnode(GOUT, 65, 61, 5) },
  { pnode(GPIO, 65, 61, CEOUT, 3, -1), rnode(GOUT, 65, 61, 4) },
  { pnode(GPIO, 65, 61, ACLR, 3, -1), rnode(GOUT, 65, 61, 12) },
  { pnode(GPIO, 65, 61, SCLR, 3, -1), rnode(GOUT, 65, 61, 1) },
  { pnode(GPIO, 65, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 65, 61, 4) },
  { pnode(GPIO, 65, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 65, 61, 6) },
  { pnode(GPIO, 65, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 65, 61, 0) },
  { pnode(GPIO, 65, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 65, 61, 2) },
  { pnode(GPIO, 66, 0, DATAIN, 0, 0), rnode(GOUT, 66, 0, 44) },
  { pnode(GPIO, 66, 0, DATAIN, 0, 1), rnode(GOUT, 66, 0, 34) },
  { pnode(GPIO, 66, 0, DATAIN, 0, 2), rnode(GOUT, 66, 0, 43) },
  { pnode(GPIO, 66, 0, DATAIN, 0, 3), rnode(GOUT, 66, 0, 29) },
  { pnode(GPIO, 66, 0, DATAOUT, 0, 0), rnode(GIN, 66, 0, 18) },
  { pnode(GPIO, 66, 0, DATAOUT, 0, 1), rnode(GIN, 66, 0, 17) },
  { pnode(GPIO, 66, 0, DATAOUT, 0, 2), rnode(GIN, 66, 0, 16) },
  { pnode(GPIO, 66, 0, DATAOUT, 0, 3), rnode(GIN, 66, 0, 15) },
  { pnode(GPIO, 66, 0, DATAOUT, 0, 4), rnode(GIN, 66, 0, 14) },
  { pnode(GPIO, 66, 0, OEIN, 0, 0), rnode(GOUT, 66, 0, 38) },
  { pnode(GPIO, 66, 0, OEIN, 0, 1), rnode(GOUT, 66, 0, 30) },
  { pnode(GPIO, 66, 0, BSLIPMAX, 0, -1), rnode(GIN, 66, 0, 19) },
  { pnode(GPIO, 66, 0, CEIN, 0, -1), rnode(GOUT, 66, 0, 27) },
  { pnode(GPIO, 66, 0, CEOUT, 0, -1), rnode(GOUT, 66, 0, 45) },
  { pnode(GPIO, 66, 0, ACLR, 0, -1), rnode(GOUT, 66, 0, 28) },
  { pnode(GPIO, 66, 0, SCLR, 0, -1), rnode(GOUT, 66, 0, 31) },
  { pnode(GPIO, 66, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 66, 0, 10) },
  { pnode(GPIO, 66, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 66, 0, 8) },
  { pnode(GPIO, 66, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 66, 0, 14) },
  { pnode(GPIO, 66, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 66, 0, 12) },
  { pnode(GPIO, 66, 0, DATAIN, 1, 0), rnode(GOUT, 66, 0, 49) },
  { pnode(GPIO, 66, 0, DATAIN, 1, 1), rnode(GOUT, 66, 0, 41) },
  { pnode(GPIO, 66, 0, DATAIN, 1, 2), rnode(GOUT, 66, 0, 48) },
  { pnode(GPIO, 66, 0, DATAIN, 1, 3), rnode(GOUT, 66, 0, 40) },
  { pnode(GPIO, 66, 0, DATAOUT, 1, 0), rnode(GIN, 66, 0, 24) },
  { pnode(GPIO, 66, 0, DATAOUT, 1, 1), rnode(GIN, 66, 0, 23) },
  { pnode(GPIO, 66, 0, DATAOUT, 1, 2), rnode(GIN, 66, 0, 22) },
  { pnode(GPIO, 66, 0, DATAOUT, 1, 3), rnode(GIN, 66, 0, 21) },
  { pnode(GPIO, 66, 0, DATAOUT, 1, 4), rnode(GIN, 66, 0, 20) },
  { pnode(GPIO, 66, 0, OEIN, 1, 0), rnode(GOUT, 66, 0, 47) },
  { pnode(GPIO, 66, 0, OEIN, 1, 1), rnode(GOUT, 66, 0, 39) },
  { pnode(GPIO, 66, 0, BSLIPMAX, 1, -1), rnode(GIN, 66, 0, 25) },
  { pnode(GPIO, 66, 0, CEIN, 1, -1), rnode(GOUT, 66, 0, 51) },
  { pnode(GPIO, 66, 0, CEOUT, 1, -1), rnode(GOUT, 66, 0, 50) },
  { pnode(GPIO, 66, 0, ACLR, 1, -1), rnode(GOUT, 66, 0, 42) },
  { pnode(GPIO, 66, 0, SCLR, 1, -1), rnode(GOUT, 66, 0, 46) },
  { pnode(GPIO, 66, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 66, 0, 11) },
  { pnode(GPIO, 66, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 66, 0, 9) },
  { pnode(GPIO, 66, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 66, 0, 15) },
  { pnode(GPIO, 66, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 66, 0, 13) },
  { pnode(GPIO, 66, 0, DATAOUT, 2, 0), rnode(GIN, 66, 0, 8) },
  { pnode(GPIO, 66, 0, DATAOUT, 2, 1), rnode(GIN, 66, 0, 9) },
  { pnode(GPIO, 66, 0, DATAOUT, 2, 2), rnode(GIN, 66, 0, 10) },
  { pnode(GPIO, 66, 0, DATAOUT, 2, 3), rnode(GIN, 66, 0, 11) },
  { pnode(GPIO, 66, 0, DATAOUT, 2, 4), rnode(GIN, 66, 0, 12) },
  { pnode(GPIO, 66, 0, OEIN, 2, 0), rnode(GOUT, 66, 0, 16) },
  { pnode(GPIO, 66, 0, OEIN, 2, 1), rnode(GOUT, 66, 0, 24) },
  { pnode(GPIO, 66, 0, BSLIPMAX, 2, -1), rnode(GIN, 66, 0, 7) },
  { pnode(GPIO, 66, 0, CEIN, 2, -1), rnode(GOUT, 66, 0, 20) },
  { pnode(GPIO, 66, 0, CEOUT, 2, -1), rnode(GOUT, 66, 0, 13) },
  { pnode(GPIO, 66, 0, ACLR, 2, -1), rnode(GOUT, 66, 0, 21) },
  { pnode(GPIO, 66, 0, SCLR, 2, -1), rnode(GOUT, 66, 0, 25) },
  { pnode(GPIO, 66, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 66, 0, 5) },
  { pnode(GPIO, 66, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 66, 0, 7) },
  { pnode(GPIO, 66, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 66, 0, 1) },
  { pnode(GPIO, 66, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 66, 0, 3) },
  { pnode(GPIO, 66, 0, DATAOUT, 3, 4), rnode(GIN, 66, 0, 6) },
  { pnode(GPIO, 66, 0, BSLIPMAX, 3, -1), rnode(GIN, 66, 0, 1) },
  { pnode(GPIO, 66, 0, CEIN, 3, -1), rnode(GOUT, 66, 0, 5) },
  { pnode(GPIO, 66, 0, CEOUT, 3, -1), rnode(GOUT, 66, 0, 4) },
  { pnode(GPIO, 66, 0, ACLR, 3, -1), rnode(GOUT, 66, 0, 12) },
  { pnode(GPIO, 66, 0, SCLR, 3, -1), rnode(GOUT, 66, 0, 1) },
  { pnode(GPIO, 66, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 66, 0, 4) },
  { pnode(GPIO, 66, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 66, 0, 6) },
  { pnode(GPIO, 66, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 66, 0, 0) },
  { pnode(GPIO, 66, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 66, 0, 2) },
  { pnode(GPIO, 66, 61, DATAIN, 0, 0), rnode(GOUT, 66, 61, 44) },
  { pnode(GPIO, 66, 61, DATAIN, 0, 1), rnode(GOUT, 66, 61, 34) },
  { pnode(GPIO, 66, 61, DATAIN, 0, 2), rnode(GOUT, 66, 61, 43) },
  { pnode(GPIO, 66, 61, DATAIN, 0, 3), rnode(GOUT, 66, 61, 29) },
  { pnode(GPIO, 66, 61, DATAOUT, 0, 0), rnode(GIN, 66, 61, 18) },
  { pnode(GPIO, 66, 61, DATAOUT, 0, 1), rnode(GIN, 66, 61, 17) },
  { pnode(GPIO, 66, 61, DATAOUT, 0, 2), rnode(GIN, 66, 61, 16) },
  { pnode(GPIO, 66, 61, DATAOUT, 0, 3), rnode(GIN, 66, 61, 15) },
  { pnode(GPIO, 66, 61, DATAOUT, 0, 4), rnode(GIN, 66, 61, 14) },
  { pnode(GPIO, 66, 61, OEIN, 0, 0), rnode(GOUT, 66, 61, 38) },
  { pnode(GPIO, 66, 61, OEIN, 0, 1), rnode(GOUT, 66, 61, 30) },
  { pnode(GPIO, 66, 61, BSLIPMAX, 0, -1), rnode(GIN, 66, 61, 19) },
  { pnode(GPIO, 66, 61, CEIN, 0, -1), rnode(GOUT, 66, 61, 27) },
  { pnode(GPIO, 66, 61, CEOUT, 0, -1), rnode(GOUT, 66, 61, 45) },
  { pnode(GPIO, 66, 61, ACLR, 0, -1), rnode(GOUT, 66, 61, 28) },
  { pnode(GPIO, 66, 61, SCLR, 0, -1), rnode(GOUT, 66, 61, 31) },
  { pnode(GPIO, 66, 61, CLKIN_IN, 0, 0), rnode(DCMUX, 66, 61, 10) },
  { pnode(GPIO, 66, 61, CLKIN_IN, 0, 1), rnode(DCMUX, 66, 61, 8) },
  { pnode(GPIO, 66, 61, CLKIN_OUT, 0, 0), rnode(DCMUX, 66, 61, 14) },
  { pnode(GPIO, 66, 61, CLKIN_OUT, 0, 1), rnode(DCMUX, 66, 61, 12) },
  { pnode(GPIO, 66, 61, DATAIN, 1, 0), rnode(GOUT, 66, 61, 49) },
  { pnode(GPIO, 66, 61, DATAIN, 1, 1), rnode(GOUT, 66, 61, 41) },
  { pnode(GPIO, 66, 61, DATAIN, 1, 2), rnode(GOUT, 66, 61, 48) },
  { pnode(GPIO, 66, 61, DATAIN, 1, 3), rnode(GOUT, 66, 61, 40) },
  { pnode(GPIO, 66, 61, DATAOUT, 1, 0), rnode(GIN, 66, 61, 24) },
  { pnode(GPIO, 66, 61, DATAOUT, 1, 1), rnode(GIN, 66, 61, 23) },
  { pnode(GPIO, 66, 61, DATAOUT, 1, 2), rnode(GIN, 66, 61, 22) },
  { pnode(GPIO, 66, 61, DATAOUT, 1, 3), rnode(GIN, 66, 61, 21) },
  { pnode(GPIO, 66, 61, DATAOUT, 1, 4), rnode(GIN, 66, 61, 20) },
  { pnode(GPIO, 66, 61, OEIN, 1, 0), rnode(GOUT, 66, 61, 47) },
  { pnode(GPIO, 66, 61, OEIN, 1, 1), rnode(GOUT, 66, 61, 39) },
  { pnode(GPIO, 66, 61, BSLIPMAX, 1, -1), rnode(GIN, 66, 61, 25) },
  { pnode(GPIO, 66, 61, CEIN, 1, -1), rnode(GOUT, 66, 61, 51) },
  { pnode(GPIO, 66, 61, CEOUT, 1, -1), rnode(GOUT, 66, 61, 50) },
  { pnode(GPIO, 66, 61, ACLR, 1, -1), rnode(GOUT, 66, 61, 42) },
  { pnode(GPIO, 66, 61, SCLR, 1, -1), rnode(GOUT, 66, 61, 46) },
  { pnode(GPIO, 66, 61, CLKIN_IN, 1, 0), rnode(DCMUX, 66, 61, 11) },
  { pnode(GPIO, 66, 61, CLKIN_IN, 1, 1), rnode(DCMUX, 66, 61, 9) },
  { pnode(GPIO, 66, 61, CLKIN_OUT, 1, 0), rnode(DCMUX, 66, 61, 15) },
  { pnode(GPIO, 66, 61, CLKIN_OUT, 1, 1), rnode(DCMUX, 66, 61, 13) },
  { pnode(GPIO, 66, 61, DATAOUT, 2, 0), rnode(GIN, 66, 61, 8) },
  { pnode(GPIO, 66, 61, DATAOUT, 2, 1), rnode(GIN, 66, 61, 9) },
  { pnode(GPIO, 66, 61, DATAOUT, 2, 2), rnode(GIN, 66, 61, 10) },
  { pnode(GPIO, 66, 61, DATAOUT, 2, 3), rnode(GIN, 66, 61, 11) },
  { pnode(GPIO, 66, 61, DATAOUT, 2, 4), rnode(GIN, 66, 61, 12) },
  { pnode(GPIO, 66, 61, OEIN, 2, 0), rnode(GOUT, 66, 61, 16) },
  { pnode(GPIO, 66, 61, OEIN, 2, 1), rnode(GOUT, 66, 61, 24) },
  { pnode(GPIO, 66, 61, BSLIPMAX, 2, -1), rnode(GIN, 66, 61, 7) },
  { pnode(GPIO, 66, 61, CEIN, 2, -1), rnode(GOUT, 66, 61, 20) },
  { pnode(GPIO, 66, 61, CEOUT, 2, -1), rnode(GOUT, 66, 61, 13) },
  { pnode(GPIO, 66, 61, ACLR, 2, -1), rnode(GOUT, 66, 61, 21) },
  { pnode(GPIO, 66, 61, SCLR, 2, -1), rnode(GOUT, 66, 61, 25) },
  { pnode(GPIO, 66, 61, CLKIN_IN, 2, 0), rnode(DCMUX, 66, 61, 5) },
  { pnode(GPIO, 66, 61, CLKIN_IN, 2, 1), rnode(DCMUX, 66, 61, 7) },
  { pnode(GPIO, 66, 61, CLKIN_OUT, 2, 0), rnode(DCMUX, 66, 61, 1) },
  { pnode(GPIO, 66, 61, CLKIN_OUT, 2, 1), rnode(DCMUX, 66, 61, 3) },
  { pnode(GPIO, 66, 61, DATAOUT, 3, 4), rnode(GIN, 66, 61, 6) },
  { pnode(GPIO, 66, 61, BSLIPMAX, 3, -1), rnode(GIN, 66, 61, 1) },
  { pnode(GPIO, 66, 61, CEIN, 3, -1), rnode(GOUT, 66, 61, 5) },
  { pnode(GPIO, 66, 61, CEOUT, 3, -1), rnode(GOUT, 66, 61, 4) },
  { pnode(GPIO, 66, 61, ACLR, 3, -1), rnode(GOUT, 66, 61, 12) },
  { pnode(GPIO, 66, 61, SCLR, 3, -1), rnode(GOUT, 66, 61, 1) },
  { pnode(GPIO, 66, 61, CLKIN_IN, 3, 0), rnode(DCMUX, 66, 61, 4) },
  { pnode(GPIO, 66, 61, CLKIN_IN, 3, 1), rnode(DCMUX, 66, 61, 6) },
  { pnode(GPIO, 66, 61, CLKIN_OUT, 3, 0), rnode(DCMUX, 66, 61, 0) },
  { pnode(GPIO, 66, 61, CLKIN_OUT, 3, 1), rnode(DCMUX, 66, 61, 2) },
  { pnode(GPIO, 68, 10, DATAIN, 0, 0), rnode(GOUT, 68, 10, 49) },
  { pnode(GPIO, 68, 10, DATAIN, 0, 1), rnode(GOUT, 68, 10, 50) },
  { pnode(GPIO, 68, 10, DATAIN, 0, 2), rnode(GOUT, 68, 10, 51) },
  { pnode(GPIO, 68, 10, DATAIN, 0, 3), rnode(GOUT, 68, 10, 52) },
  { pnode(GPIO, 68, 10, DATAOUT, 0, 0), rnode(GIN, 68, 10, 48) },
  { pnode(GPIO, 68, 10, DATAOUT, 0, 1), rnode(GIN, 68, 10, 49) },
  { pnode(GPIO, 68, 10, DATAOUT, 0, 2), rnode(GIN, 68, 10, 50) },
  { pnode(GPIO, 68, 10, DATAOUT, 0, 3), rnode(GIN, 68, 10, 51) },
  { pnode(GPIO, 68, 10, DATAOUT, 0, 4), rnode(GIN, 68, 10, 52) },
  { pnode(GPIO, 68, 10, OEIN, 0, 0), rnode(GOUT, 68, 10, 53) },
  { pnode(GPIO, 68, 10, OEIN, 0, 1), rnode(GOUT, 68, 10, 54) },
  { pnode(GPIO, 68, 10, BSLIPMAX, 0, -1), rnode(GIN, 68, 10, 47) },
  { pnode(GPIO, 68, 10, CEIN, 0, -1), rnode(GOUT, 68, 10, 46) },
  { pnode(GPIO, 68, 10, CEOUT, 0, -1), rnode(GOUT, 68, 10, 47) },
  { pnode(GPIO, 68, 10, ACLR, 0, -1), rnode(GOUT, 68, 10, 48) },
  { pnode(GPIO, 68, 10, SCLR, 0, -1), rnode(GOUT, 68, 10, 55) },
  { pnode(GPIO, 68, 10, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 10, 14) },
  { pnode(GPIO, 68, 10, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 10, 15) },
  { pnode(GPIO, 68, 10, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 10, 12) },
  { pnode(GPIO, 68, 10, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 10, 13) },
  { pnode(GPIO, 68, 10, DATAIN, 1, 0), rnode(GOUT, 68, 10, 39) },
  { pnode(GPIO, 68, 10, DATAIN, 1, 1), rnode(GOUT, 68, 10, 40) },
  { pnode(GPIO, 68, 10, DATAIN, 1, 2), rnode(GOUT, 68, 10, 41) },
  { pnode(GPIO, 68, 10, DATAIN, 1, 3), rnode(GOUT, 68, 10, 42) },
  { pnode(GPIO, 68, 10, DATAOUT, 1, 0), rnode(GIN, 68, 10, 42) },
  { pnode(GPIO, 68, 10, DATAOUT, 1, 1), rnode(GIN, 68, 10, 43) },
  { pnode(GPIO, 68, 10, DATAOUT, 1, 2), rnode(GIN, 68, 10, 44) },
  { pnode(GPIO, 68, 10, DATAOUT, 1, 3), rnode(GIN, 68, 10, 45) },
  { pnode(GPIO, 68, 10, DATAOUT, 1, 4), rnode(GIN, 68, 10, 46) },
  { pnode(GPIO, 68, 10, OEIN, 1, 0), rnode(GOUT, 68, 10, 43) },
  { pnode(GPIO, 68, 10, OEIN, 1, 1), rnode(GOUT, 68, 10, 44) },
  { pnode(GPIO, 68, 10, BSLIPMAX, 1, -1), rnode(GIN, 68, 10, 41) },
  { pnode(GPIO, 68, 10, CEIN, 1, -1), rnode(GOUT, 68, 10, 36) },
  { pnode(GPIO, 68, 10, CEOUT, 1, -1), rnode(GOUT, 68, 10, 37) },
  { pnode(GPIO, 68, 10, ACLR, 1, -1), rnode(GOUT, 68, 10, 38) },
  { pnode(GPIO, 68, 10, SCLR, 1, -1), rnode(GOUT, 68, 10, 45) },
  { pnode(GPIO, 68, 10, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 10, 10) },
  { pnode(GPIO, 68, 10, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 10, 11) },
  { pnode(GPIO, 68, 10, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 10, 8) },
  { pnode(GPIO, 68, 10, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 10, 9) },
  { pnode(GPIO, 68, 10, DATAIN, 2, 0), rnode(GOUT, 68, 10, 29) },
  { pnode(GPIO, 68, 10, DATAIN, 2, 1), rnode(GOUT, 68, 10, 30) },
  { pnode(GPIO, 68, 10, DATAIN, 2, 2), rnode(GOUT, 68, 10, 32) },
  { pnode(GPIO, 68, 10, DATAIN, 2, 3), rnode(GOUT, 68, 10, 33) },
  { pnode(GPIO, 68, 10, DATAOUT, 2, 0), rnode(GIN, 68, 10, 36) },
  { pnode(GPIO, 68, 10, DATAOUT, 2, 1), rnode(GIN, 68, 10, 37) },
  { pnode(GPIO, 68, 10, DATAOUT, 2, 2), rnode(GIN, 68, 10, 40) },
  { pnode(GPIO, 68, 10, DATAOUT, 2, 3), rnode(GIN, 68, 10, 38) },
  { pnode(GPIO, 68, 10, DATAOUT, 2, 4), rnode(GIN, 68, 10, 39) },
  { pnode(GPIO, 68, 10, OEIN, 2, 0), rnode(GOUT, 68, 10, 34) },
  { pnode(GPIO, 68, 10, OEIN, 2, 1), rnode(GOUT, 68, 10, 35) },
  { pnode(GPIO, 68, 10, BSLIPMAX, 2, -1), rnode(GIN, 68, 10, 35) },
  { pnode(GPIO, 68, 10, CEIN, 2, -1), rnode(GOUT, 68, 10, 26) },
  { pnode(GPIO, 68, 10, CEOUT, 2, -1), rnode(GOUT, 68, 10, 27) },
  { pnode(GPIO, 68, 10, ACLR, 2, -1), rnode(GOUT, 68, 10, 28) },
  { pnode(GPIO, 68, 10, SCLR, 2, -1), rnode(GOUT, 68, 10, 31) },
  { pnode(GPIO, 68, 10, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 10, 6) },
  { pnode(GPIO, 68, 10, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 10, 7) },
  { pnode(GPIO, 68, 10, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 10, 4) },
  { pnode(GPIO, 68, 10, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 10, 5) },
  { pnode(GPIO, 68, 10, DATAIN, 3, 0), rnode(GOUT, 68, 10, 19) },
  { pnode(GPIO, 68, 10, DATAIN, 3, 1), rnode(GOUT, 68, 10, 20) },
  { pnode(GPIO, 68, 10, DATAIN, 3, 2), rnode(GOUT, 68, 10, 21) },
  { pnode(GPIO, 68, 10, DATAIN, 3, 3), rnode(GOUT, 68, 10, 22) },
  { pnode(GPIO, 68, 10, DATAOUT, 3, 0), rnode(GIN, 68, 10, 30) },
  { pnode(GPIO, 68, 10, DATAOUT, 3, 1), rnode(GIN, 68, 10, 31) },
  { pnode(GPIO, 68, 10, DATAOUT, 3, 2), rnode(GIN, 68, 10, 32) },
  { pnode(GPIO, 68, 10, DATAOUT, 3, 3), rnode(GIN, 68, 10, 33) },
  { pnode(GPIO, 68, 10, DATAOUT, 3, 4), rnode(GIN, 68, 10, 34) },
  { pnode(GPIO, 68, 10, OEIN, 3, 0), rnode(GOUT, 68, 10, 23) },
  { pnode(GPIO, 68, 10, OEIN, 3, 1), rnode(GOUT, 68, 10, 24) },
  { pnode(GPIO, 68, 10, BSLIPMAX, 3, -1), rnode(GIN, 68, 10, 29) },
  { pnode(GPIO, 68, 10, CEIN, 3, -1), rnode(GOUT, 68, 10, 16) },
  { pnode(GPIO, 68, 10, CEOUT, 3, -1), rnode(GOUT, 68, 10, 17) },
  { pnode(GPIO, 68, 10, ACLR, 3, -1), rnode(GOUT, 68, 10, 18) },
  { pnode(GPIO, 68, 10, SCLR, 3, -1), rnode(GOUT, 68, 10, 25) },
  { pnode(GPIO, 68, 10, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 10, 2) },
  { pnode(GPIO, 68, 10, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 10, 3) },
  { pnode(GPIO, 68, 10, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 10, 0) },
  { pnode(GPIO, 68, 10, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 10, 1) },
  { pnode(GPIO, 68, 11, DATAIN, 0, 0), rnode(GOUT, 68, 11, 49) },
  { pnode(GPIO, 68, 11, DATAIN, 0, 1), rnode(GOUT, 68, 11, 50) },
  { pnode(GPIO, 68, 11, DATAIN, 0, 2), rnode(GOUT, 68, 11, 51) },
  { pnode(GPIO, 68, 11, DATAIN, 0, 3), rnode(GOUT, 68, 11, 52) },
  { pnode(GPIO, 68, 11, DATAOUT, 0, 0), rnode(GIN, 68, 11, 48) },
  { pnode(GPIO, 68, 11, DATAOUT, 0, 1), rnode(GIN, 68, 11, 49) },
  { pnode(GPIO, 68, 11, DATAOUT, 0, 2), rnode(GIN, 68, 11, 50) },
  { pnode(GPIO, 68, 11, DATAOUT, 0, 3), rnode(GIN, 68, 11, 51) },
  { pnode(GPIO, 68, 11, DATAOUT, 0, 4), rnode(GIN, 68, 11, 52) },
  { pnode(GPIO, 68, 11, OEIN, 0, 0), rnode(GOUT, 68, 11, 53) },
  { pnode(GPIO, 68, 11, OEIN, 0, 1), rnode(GOUT, 68, 11, 54) },
  { pnode(GPIO, 68, 11, BSLIPMAX, 0, -1), rnode(GIN, 68, 11, 47) },
  { pnode(GPIO, 68, 11, CEIN, 0, -1), rnode(GOUT, 68, 11, 46) },
  { pnode(GPIO, 68, 11, CEOUT, 0, -1), rnode(GOUT, 68, 11, 47) },
  { pnode(GPIO, 68, 11, ACLR, 0, -1), rnode(GOUT, 68, 11, 48) },
  { pnode(GPIO, 68, 11, SCLR, 0, -1), rnode(GOUT, 68, 11, 55) },
  { pnode(GPIO, 68, 11, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 11, 14) },
  { pnode(GPIO, 68, 11, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 11, 15) },
  { pnode(GPIO, 68, 11, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 11, 12) },
  { pnode(GPIO, 68, 11, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 11, 13) },
  { pnode(GPIO, 68, 11, DATAIN, 1, 0), rnode(GOUT, 68, 11, 39) },
  { pnode(GPIO, 68, 11, DATAIN, 1, 1), rnode(GOUT, 68, 11, 40) },
  { pnode(GPIO, 68, 11, DATAIN, 1, 2), rnode(GOUT, 68, 11, 41) },
  { pnode(GPIO, 68, 11, DATAIN, 1, 3), rnode(GOUT, 68, 11, 42) },
  { pnode(GPIO, 68, 11, DATAOUT, 1, 0), rnode(GIN, 68, 11, 42) },
  { pnode(GPIO, 68, 11, DATAOUT, 1, 1), rnode(GIN, 68, 11, 43) },
  { pnode(GPIO, 68, 11, DATAOUT, 1, 2), rnode(GIN, 68, 11, 44) },
  { pnode(GPIO, 68, 11, DATAOUT, 1, 3), rnode(GIN, 68, 11, 45) },
  { pnode(GPIO, 68, 11, DATAOUT, 1, 4), rnode(GIN, 68, 11, 46) },
  { pnode(GPIO, 68, 11, OEIN, 1, 0), rnode(GOUT, 68, 11, 43) },
  { pnode(GPIO, 68, 11, OEIN, 1, 1), rnode(GOUT, 68, 11, 44) },
  { pnode(GPIO, 68, 11, BSLIPMAX, 1, -1), rnode(GIN, 68, 11, 41) },
  { pnode(GPIO, 68, 11, CEIN, 1, -1), rnode(GOUT, 68, 11, 36) },
  { pnode(GPIO, 68, 11, CEOUT, 1, -1), rnode(GOUT, 68, 11, 37) },
  { pnode(GPIO, 68, 11, ACLR, 1, -1), rnode(GOUT, 68, 11, 38) },
  { pnode(GPIO, 68, 11, SCLR, 1, -1), rnode(GOUT, 68, 11, 45) },
  { pnode(GPIO, 68, 11, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 11, 10) },
  { pnode(GPIO, 68, 11, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 11, 11) },
  { pnode(GPIO, 68, 11, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 11, 8) },
  { pnode(GPIO, 68, 11, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 11, 9) },
  { pnode(GPIO, 68, 11, DATAIN, 2, 0), rnode(GOUT, 68, 11, 29) },
  { pnode(GPIO, 68, 11, DATAIN, 2, 1), rnode(GOUT, 68, 11, 30) },
  { pnode(GPIO, 68, 11, DATAIN, 2, 2), rnode(GOUT, 68, 11, 31) },
  { pnode(GPIO, 68, 11, DATAIN, 2, 3), rnode(GOUT, 68, 11, 32) },
  { pnode(GPIO, 68, 11, DATAOUT, 2, 0), rnode(GIN, 68, 11, 36) },
  { pnode(GPIO, 68, 11, DATAOUT, 2, 1), rnode(GIN, 68, 11, 37) },
  { pnode(GPIO, 68, 11, DATAOUT, 2, 2), rnode(GIN, 68, 11, 40) },
  { pnode(GPIO, 68, 11, DATAOUT, 2, 3), rnode(GIN, 68, 11, 38) },
  { pnode(GPIO, 68, 11, DATAOUT, 2, 4), rnode(GIN, 68, 11, 39) },
  { pnode(GPIO, 68, 11, OEIN, 2, 0), rnode(GOUT, 68, 11, 33) },
  { pnode(GPIO, 68, 11, OEIN, 2, 1), rnode(GOUT, 68, 11, 34) },
  { pnode(GPIO, 68, 11, BSLIPMAX, 2, -1), rnode(GIN, 68, 11, 35) },
  { pnode(GPIO, 68, 11, CEIN, 2, -1), rnode(GOUT, 68, 11, 26) },
  { pnode(GPIO, 68, 11, CEOUT, 2, -1), rnode(GOUT, 68, 11, 27) },
  { pnode(GPIO, 68, 11, ACLR, 2, -1), rnode(GOUT, 68, 11, 28) },
  { pnode(GPIO, 68, 11, SCLR, 2, -1), rnode(GOUT, 68, 11, 35) },
  { pnode(GPIO, 68, 11, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 11, 6) },
  { pnode(GPIO, 68, 11, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 11, 7) },
  { pnode(GPIO, 68, 11, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 11, 4) },
  { pnode(GPIO, 68, 11, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 11, 5) },
  { pnode(GPIO, 68, 11, DATAIN, 3, 0), rnode(GOUT, 68, 11, 19) },
  { pnode(GPIO, 68, 11, DATAIN, 3, 1), rnode(GOUT, 68, 11, 20) },
  { pnode(GPIO, 68, 11, DATAIN, 3, 2), rnode(GOUT, 68, 11, 21) },
  { pnode(GPIO, 68, 11, DATAIN, 3, 3), rnode(GOUT, 68, 11, 22) },
  { pnode(GPIO, 68, 11, DATAOUT, 3, 0), rnode(GIN, 68, 11, 30) },
  { pnode(GPIO, 68, 11, DATAOUT, 3, 1), rnode(GIN, 68, 11, 31) },
  { pnode(GPIO, 68, 11, DATAOUT, 3, 2), rnode(GIN, 68, 11, 32) },
  { pnode(GPIO, 68, 11, DATAOUT, 3, 3), rnode(GIN, 68, 11, 33) },
  { pnode(GPIO, 68, 11, DATAOUT, 3, 4), rnode(GIN, 68, 11, 34) },
  { pnode(GPIO, 68, 11, OEIN, 3, 0), rnode(GOUT, 68, 11, 23) },
  { pnode(GPIO, 68, 11, OEIN, 3, 1), rnode(GOUT, 68, 11, 24) },
  { pnode(GPIO, 68, 11, BSLIPMAX, 3, -1), rnode(GIN, 68, 11, 29) },
  { pnode(GPIO, 68, 11, CEIN, 3, -1), rnode(GOUT, 68, 11, 16) },
  { pnode(GPIO, 68, 11, CEOUT, 3, -1), rnode(GOUT, 68, 11, 17) },
  { pnode(GPIO, 68, 11, ACLR, 3, -1), rnode(GOUT, 68, 11, 18) },
  { pnode(GPIO, 68, 11, SCLR, 3, -1), rnode(GOUT, 68, 11, 25) },
  { pnode(GPIO, 68, 11, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 11, 2) },
  { pnode(GPIO, 68, 11, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 11, 3) },
  { pnode(GPIO, 68, 11, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 11, 0) },
  { pnode(GPIO, 68, 11, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 11, 1) },
  { pnode(GPIO, 68, 12, DATAIN, 0, 0), rnode(GOUT, 68, 12, 49) },
  { pnode(GPIO, 68, 12, DATAIN, 0, 1), rnode(GOUT, 68, 12, 50) },
  { pnode(GPIO, 68, 12, DATAIN, 0, 2), rnode(GOUT, 68, 12, 51) },
  { pnode(GPIO, 68, 12, DATAIN, 0, 3), rnode(GOUT, 68, 12, 52) },
  { pnode(GPIO, 68, 12, DATAOUT, 0, 0), rnode(GIN, 68, 12, 48) },
  { pnode(GPIO, 68, 12, DATAOUT, 0, 1), rnode(GIN, 68, 12, 49) },
  { pnode(GPIO, 68, 12, DATAOUT, 0, 2), rnode(GIN, 68, 12, 50) },
  { pnode(GPIO, 68, 12, DATAOUT, 0, 3), rnode(GIN, 68, 12, 51) },
  { pnode(GPIO, 68, 12, DATAOUT, 0, 4), rnode(GIN, 68, 12, 52) },
  { pnode(GPIO, 68, 12, OEIN, 0, 0), rnode(GOUT, 68, 12, 53) },
  { pnode(GPIO, 68, 12, OEIN, 0, 1), rnode(GOUT, 68, 12, 54) },
  { pnode(GPIO, 68, 12, BSLIPMAX, 0, -1), rnode(GIN, 68, 12, 47) },
  { pnode(GPIO, 68, 12, CEIN, 0, -1), rnode(GOUT, 68, 12, 46) },
  { pnode(GPIO, 68, 12, CEOUT, 0, -1), rnode(GOUT, 68, 12, 47) },
  { pnode(GPIO, 68, 12, ACLR, 0, -1), rnode(GOUT, 68, 12, 48) },
  { pnode(GPIO, 68, 12, SCLR, 0, -1), rnode(GOUT, 68, 12, 55) },
  { pnode(GPIO, 68, 12, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 12, 14) },
  { pnode(GPIO, 68, 12, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 12, 15) },
  { pnode(GPIO, 68, 12, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 12, 12) },
  { pnode(GPIO, 68, 12, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 12, 13) },
  { pnode(GPIO, 68, 12, DATAIN, 1, 0), rnode(GOUT, 68, 12, 39) },
  { pnode(GPIO, 68, 12, DATAIN, 1, 1), rnode(GOUT, 68, 12, 40) },
  { pnode(GPIO, 68, 12, DATAIN, 1, 2), rnode(GOUT, 68, 12, 41) },
  { pnode(GPIO, 68, 12, DATAIN, 1, 3), rnode(GOUT, 68, 12, 42) },
  { pnode(GPIO, 68, 12, DATAOUT, 1, 0), rnode(GIN, 68, 12, 42) },
  { pnode(GPIO, 68, 12, DATAOUT, 1, 1), rnode(GIN, 68, 12, 43) },
  { pnode(GPIO, 68, 12, DATAOUT, 1, 2), rnode(GIN, 68, 12, 44) },
  { pnode(GPIO, 68, 12, DATAOUT, 1, 3), rnode(GIN, 68, 12, 45) },
  { pnode(GPIO, 68, 12, DATAOUT, 1, 4), rnode(GIN, 68, 12, 46) },
  { pnode(GPIO, 68, 12, OEIN, 1, 0), rnode(GOUT, 68, 12, 43) },
  { pnode(GPIO, 68, 12, OEIN, 1, 1), rnode(GOUT, 68, 12, 44) },
  { pnode(GPIO, 68, 12, BSLIPMAX, 1, -1), rnode(GIN, 68, 12, 41) },
  { pnode(GPIO, 68, 12, CEIN, 1, -1), rnode(GOUT, 68, 12, 36) },
  { pnode(GPIO, 68, 12, CEOUT, 1, -1), rnode(GOUT, 68, 12, 37) },
  { pnode(GPIO, 68, 12, ACLR, 1, -1), rnode(GOUT, 68, 12, 38) },
  { pnode(GPIO, 68, 12, SCLR, 1, -1), rnode(GOUT, 68, 12, 45) },
  { pnode(GPIO, 68, 12, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 12, 10) },
  { pnode(GPIO, 68, 12, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 12, 11) },
  { pnode(GPIO, 68, 12, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 12, 8) },
  { pnode(GPIO, 68, 12, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 12, 9) },
  { pnode(GPIO, 68, 12, DATAIN, 2, 0), rnode(GOUT, 68, 12, 29) },
  { pnode(GPIO, 68, 12, DATAIN, 2, 1), rnode(GOUT, 68, 12, 30) },
  { pnode(GPIO, 68, 12, DATAIN, 2, 2), rnode(GOUT, 68, 12, 31) },
  { pnode(GPIO, 68, 12, DATAIN, 2, 3), rnode(GOUT, 68, 12, 32) },
  { pnode(GPIO, 68, 12, DATAOUT, 2, 0), rnode(GIN, 68, 12, 36) },
  { pnode(GPIO, 68, 12, DATAOUT, 2, 1), rnode(GIN, 68, 12, 37) },
  { pnode(GPIO, 68, 12, DATAOUT, 2, 2), rnode(GIN, 68, 12, 40) },
  { pnode(GPIO, 68, 12, DATAOUT, 2, 3), rnode(GIN, 68, 12, 38) },
  { pnode(GPIO, 68, 12, DATAOUT, 2, 4), rnode(GIN, 68, 12, 39) },
  { pnode(GPIO, 68, 12, OEIN, 2, 0), rnode(GOUT, 68, 12, 33) },
  { pnode(GPIO, 68, 12, OEIN, 2, 1), rnode(GOUT, 68, 12, 34) },
  { pnode(GPIO, 68, 12, BSLIPMAX, 2, -1), rnode(GIN, 68, 12, 35) },
  { pnode(GPIO, 68, 12, CEIN, 2, -1), rnode(GOUT, 68, 12, 26) },
  { pnode(GPIO, 68, 12, CEOUT, 2, -1), rnode(GOUT, 68, 12, 27) },
  { pnode(GPIO, 68, 12, ACLR, 2, -1), rnode(GOUT, 68, 12, 28) },
  { pnode(GPIO, 68, 12, SCLR, 2, -1), rnode(GOUT, 68, 12, 35) },
  { pnode(GPIO, 68, 12, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 12, 6) },
  { pnode(GPIO, 68, 12, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 12, 7) },
  { pnode(GPIO, 68, 12, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 12, 4) },
  { pnode(GPIO, 68, 12, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 12, 5) },
  { pnode(GPIO, 68, 12, DATAIN, 3, 0), rnode(GOUT, 68, 12, 19) },
  { pnode(GPIO, 68, 12, DATAIN, 3, 1), rnode(GOUT, 68, 12, 20) },
  { pnode(GPIO, 68, 12, DATAIN, 3, 2), rnode(GOUT, 68, 12, 21) },
  { pnode(GPIO, 68, 12, DATAIN, 3, 3), rnode(GOUT, 68, 12, 22) },
  { pnode(GPIO, 68, 12, DATAOUT, 3, 0), rnode(GIN, 68, 12, 30) },
  { pnode(GPIO, 68, 12, DATAOUT, 3, 1), rnode(GIN, 68, 12, 31) },
  { pnode(GPIO, 68, 12, DATAOUT, 3, 2), rnode(GIN, 68, 12, 32) },
  { pnode(GPIO, 68, 12, DATAOUT, 3, 3), rnode(GIN, 68, 12, 33) },
  { pnode(GPIO, 68, 12, DATAOUT, 3, 4), rnode(GIN, 68, 12, 34) },
  { pnode(GPIO, 68, 12, OEIN, 3, 0), rnode(GOUT, 68, 12, 23) },
  { pnode(GPIO, 68, 12, OEIN, 3, 1), rnode(GOUT, 68, 12, 24) },
  { pnode(GPIO, 68, 12, BSLIPMAX, 3, -1), rnode(GIN, 68, 12, 29) },
  { pnode(GPIO, 68, 12, CEIN, 3, -1), rnode(GOUT, 68, 12, 16) },
  { pnode(GPIO, 68, 12, CEOUT, 3, -1), rnode(GOUT, 68, 12, 17) },
  { pnode(GPIO, 68, 12, ACLR, 3, -1), rnode(GOUT, 68, 12, 18) },
  { pnode(GPIO, 68, 12, SCLR, 3, -1), rnode(GOUT, 68, 12, 25) },
  { pnode(GPIO, 68, 12, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 12, 2) },
  { pnode(GPIO, 68, 12, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 12, 3) },
  { pnode(GPIO, 68, 12, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 12, 0) },
  { pnode(GPIO, 68, 12, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 12, 1) },
  { pnode(GPIO, 68, 13, DATAIN, 0, 0), rnode(GOUT, 68, 13, 49) },
  { pnode(GPIO, 68, 13, DATAIN, 0, 1), rnode(GOUT, 68, 13, 50) },
  { pnode(GPIO, 68, 13, DATAIN, 0, 2), rnode(GOUT, 68, 13, 51) },
  { pnode(GPIO, 68, 13, DATAIN, 0, 3), rnode(GOUT, 68, 13, 52) },
  { pnode(GPIO, 68, 13, DATAOUT, 0, 0), rnode(GIN, 68, 13, 48) },
  { pnode(GPIO, 68, 13, DATAOUT, 0, 1), rnode(GIN, 68, 13, 49) },
  { pnode(GPIO, 68, 13, DATAOUT, 0, 2), rnode(GIN, 68, 13, 50) },
  { pnode(GPIO, 68, 13, DATAOUT, 0, 3), rnode(GIN, 68, 13, 51) },
  { pnode(GPIO, 68, 13, DATAOUT, 0, 4), rnode(GIN, 68, 13, 52) },
  { pnode(GPIO, 68, 13, OEIN, 0, 0), rnode(GOUT, 68, 13, 53) },
  { pnode(GPIO, 68, 13, OEIN, 0, 1), rnode(GOUT, 68, 13, 55) },
  { pnode(GPIO, 68, 13, BSLIPMAX, 0, -1), rnode(GIN, 68, 13, 47) },
  { pnode(GPIO, 68, 13, CEIN, 0, -1), rnode(GOUT, 68, 13, 46) },
  { pnode(GPIO, 68, 13, CEOUT, 0, -1), rnode(GOUT, 68, 13, 47) },
  { pnode(GPIO, 68, 13, ACLR, 0, -1), rnode(GOUT, 68, 13, 48) },
  { pnode(GPIO, 68, 13, SCLR, 0, -1), rnode(GOUT, 68, 13, 54) },
  { pnode(GPIO, 68, 13, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 13, 14) },
  { pnode(GPIO, 68, 13, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 13, 15) },
  { pnode(GPIO, 68, 13, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 13, 12) },
  { pnode(GPIO, 68, 13, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 13, 13) },
  { pnode(GPIO, 68, 13, DATAIN, 1, 0), rnode(GOUT, 68, 13, 39) },
  { pnode(GPIO, 68, 13, DATAIN, 1, 1), rnode(GOUT, 68, 13, 40) },
  { pnode(GPIO, 68, 13, DATAIN, 1, 2), rnode(GOUT, 68, 13, 41) },
  { pnode(GPIO, 68, 13, DATAIN, 1, 3), rnode(GOUT, 68, 13, 42) },
  { pnode(GPIO, 68, 13, DATAOUT, 1, 0), rnode(GIN, 68, 13, 42) },
  { pnode(GPIO, 68, 13, DATAOUT, 1, 1), rnode(GIN, 68, 13, 43) },
  { pnode(GPIO, 68, 13, DATAOUT, 1, 2), rnode(GIN, 68, 13, 44) },
  { pnode(GPIO, 68, 13, DATAOUT, 1, 3), rnode(GIN, 68, 13, 45) },
  { pnode(GPIO, 68, 13, DATAOUT, 1, 4), rnode(GIN, 68, 13, 46) },
  { pnode(GPIO, 68, 13, OEIN, 1, 0), rnode(GOUT, 68, 13, 43) },
  { pnode(GPIO, 68, 13, OEIN, 1, 1), rnode(GOUT, 68, 13, 44) },
  { pnode(GPIO, 68, 13, BSLIPMAX, 1, -1), rnode(GIN, 68, 13, 41) },
  { pnode(GPIO, 68, 13, CEIN, 1, -1), rnode(GOUT, 68, 13, 36) },
  { pnode(GPIO, 68, 13, CEOUT, 1, -1), rnode(GOUT, 68, 13, 37) },
  { pnode(GPIO, 68, 13, ACLR, 1, -1), rnode(GOUT, 68, 13, 38) },
  { pnode(GPIO, 68, 13, SCLR, 1, -1), rnode(GOUT, 68, 13, 45) },
  { pnode(GPIO, 68, 13, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 13, 10) },
  { pnode(GPIO, 68, 13, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 13, 11) },
  { pnode(GPIO, 68, 13, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 13, 8) },
  { pnode(GPIO, 68, 13, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 13, 9) },
  { pnode(GPIO, 68, 13, DATAIN, 2, 0), rnode(GOUT, 68, 13, 29) },
  { pnode(GPIO, 68, 13, DATAIN, 2, 1), rnode(GOUT, 68, 13, 30) },
  { pnode(GPIO, 68, 13, DATAIN, 2, 2), rnode(GOUT, 68, 13, 31) },
  { pnode(GPIO, 68, 13, DATAIN, 2, 3), rnode(GOUT, 68, 13, 32) },
  { pnode(GPIO, 68, 13, DATAOUT, 2, 0), rnode(GIN, 68, 13, 36) },
  { pnode(GPIO, 68, 13, DATAOUT, 2, 1), rnode(GIN, 68, 13, 37) },
  { pnode(GPIO, 68, 13, DATAOUT, 2, 2), rnode(GIN, 68, 13, 40) },
  { pnode(GPIO, 68, 13, DATAOUT, 2, 3), rnode(GIN, 68, 13, 38) },
  { pnode(GPIO, 68, 13, DATAOUT, 2, 4), rnode(GIN, 68, 13, 39) },
  { pnode(GPIO, 68, 13, OEIN, 2, 0), rnode(GOUT, 68, 13, 33) },
  { pnode(GPIO, 68, 13, OEIN, 2, 1), rnode(GOUT, 68, 13, 34) },
  { pnode(GPIO, 68, 13, BSLIPMAX, 2, -1), rnode(GIN, 68, 13, 35) },
  { pnode(GPIO, 68, 13, CEIN, 2, -1), rnode(GOUT, 68, 13, 26) },
  { pnode(GPIO, 68, 13, CEOUT, 2, -1), rnode(GOUT, 68, 13, 27) },
  { pnode(GPIO, 68, 13, ACLR, 2, -1), rnode(GOUT, 68, 13, 28) },
  { pnode(GPIO, 68, 13, SCLR, 2, -1), rnode(GOUT, 68, 13, 35) },
  { pnode(GPIO, 68, 13, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 13, 6) },
  { pnode(GPIO, 68, 13, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 13, 7) },
  { pnode(GPIO, 68, 13, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 13, 4) },
  { pnode(GPIO, 68, 13, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 13, 5) },
  { pnode(GPIO, 68, 13, DATAIN, 3, 0), rnode(GOUT, 68, 13, 19) },
  { pnode(GPIO, 68, 13, DATAIN, 3, 1), rnode(GOUT, 68, 13, 20) },
  { pnode(GPIO, 68, 13, DATAIN, 3, 2), rnode(GOUT, 68, 13, 21) },
  { pnode(GPIO, 68, 13, DATAIN, 3, 3), rnode(GOUT, 68, 13, 22) },
  { pnode(GPIO, 68, 13, DATAOUT, 3, 0), rnode(GIN, 68, 13, 30) },
  { pnode(GPIO, 68, 13, DATAOUT, 3, 1), rnode(GIN, 68, 13, 31) },
  { pnode(GPIO, 68, 13, DATAOUT, 3, 2), rnode(GIN, 68, 13, 32) },
  { pnode(GPIO, 68, 13, DATAOUT, 3, 3), rnode(GIN, 68, 13, 33) },
  { pnode(GPIO, 68, 13, DATAOUT, 3, 4), rnode(GIN, 68, 13, 34) },
  { pnode(GPIO, 68, 13, OEIN, 3, 0), rnode(GOUT, 68, 13, 23) },
  { pnode(GPIO, 68, 13, OEIN, 3, 1), rnode(GOUT, 68, 13, 24) },
  { pnode(GPIO, 68, 13, BSLIPMAX, 3, -1), rnode(GIN, 68, 13, 29) },
  { pnode(GPIO, 68, 13, CEIN, 3, -1), rnode(GOUT, 68, 13, 16) },
  { pnode(GPIO, 68, 13, CEOUT, 3, -1), rnode(GOUT, 68, 13, 17) },
  { pnode(GPIO, 68, 13, ACLR, 3, -1), rnode(GOUT, 68, 13, 18) },
  { pnode(GPIO, 68, 13, SCLR, 3, -1), rnode(GOUT, 68, 13, 25) },
  { pnode(GPIO, 68, 13, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 13, 2) },
  { pnode(GPIO, 68, 13, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 13, 3) },
  { pnode(GPIO, 68, 13, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 13, 0) },
  { pnode(GPIO, 68, 13, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 13, 1) },
  { pnode(GPIO, 68, 14, DATAIN, 0, 0), rnode(GOUT, 68, 14, 49) },
  { pnode(GPIO, 68, 14, DATAIN, 0, 1), rnode(GOUT, 68, 14, 50) },
  { pnode(GPIO, 68, 14, DATAIN, 0, 2), rnode(GOUT, 68, 14, 51) },
  { pnode(GPIO, 68, 14, DATAIN, 0, 3), rnode(GOUT, 68, 14, 52) },
  { pnode(GPIO, 68, 14, DATAOUT, 0, 0), rnode(GIN, 68, 14, 48) },
  { pnode(GPIO, 68, 14, DATAOUT, 0, 1), rnode(GIN, 68, 14, 49) },
  { pnode(GPIO, 68, 14, DATAOUT, 0, 2), rnode(GIN, 68, 14, 50) },
  { pnode(GPIO, 68, 14, DATAOUT, 0, 3), rnode(GIN, 68, 14, 51) },
  { pnode(GPIO, 68, 14, DATAOUT, 0, 4), rnode(GIN, 68, 14, 52) },
  { pnode(GPIO, 68, 14, OEIN, 0, 0), rnode(GOUT, 68, 14, 53) },
  { pnode(GPIO, 68, 14, OEIN, 0, 1), rnode(GOUT, 68, 14, 54) },
  { pnode(GPIO, 68, 14, BSLIPMAX, 0, -1), rnode(GIN, 68, 14, 47) },
  { pnode(GPIO, 68, 14, CEIN, 0, -1), rnode(GOUT, 68, 14, 46) },
  { pnode(GPIO, 68, 14, CEOUT, 0, -1), rnode(GOUT, 68, 14, 47) },
  { pnode(GPIO, 68, 14, ACLR, 0, -1), rnode(GOUT, 68, 14, 48) },
  { pnode(GPIO, 68, 14, SCLR, 0, -1), rnode(GOUT, 68, 14, 55) },
  { pnode(GPIO, 68, 14, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 14, 14) },
  { pnode(GPIO, 68, 14, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 14, 15) },
  { pnode(GPIO, 68, 14, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 14, 12) },
  { pnode(GPIO, 68, 14, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 14, 13) },
  { pnode(GPIO, 68, 14, DATAIN, 1, 0), rnode(GOUT, 68, 14, 39) },
  { pnode(GPIO, 68, 14, DATAIN, 1, 1), rnode(GOUT, 68, 14, 40) },
  { pnode(GPIO, 68, 14, DATAIN, 1, 2), rnode(GOUT, 68, 14, 41) },
  { pnode(GPIO, 68, 14, DATAIN, 1, 3), rnode(GOUT, 68, 14, 42) },
  { pnode(GPIO, 68, 14, DATAOUT, 1, 0), rnode(GIN, 68, 14, 42) },
  { pnode(GPIO, 68, 14, DATAOUT, 1, 1), rnode(GIN, 68, 14, 43) },
  { pnode(GPIO, 68, 14, DATAOUT, 1, 2), rnode(GIN, 68, 14, 44) },
  { pnode(GPIO, 68, 14, DATAOUT, 1, 3), rnode(GIN, 68, 14, 45) },
  { pnode(GPIO, 68, 14, DATAOUT, 1, 4), rnode(GIN, 68, 14, 46) },
  { pnode(GPIO, 68, 14, OEIN, 1, 0), rnode(GOUT, 68, 14, 43) },
  { pnode(GPIO, 68, 14, OEIN, 1, 1), rnode(GOUT, 68, 14, 44) },
  { pnode(GPIO, 68, 14, BSLIPMAX, 1, -1), rnode(GIN, 68, 14, 41) },
  { pnode(GPIO, 68, 14, CEIN, 1, -1), rnode(GOUT, 68, 14, 36) },
  { pnode(GPIO, 68, 14, CEOUT, 1, -1), rnode(GOUT, 68, 14, 37) },
  { pnode(GPIO, 68, 14, ACLR, 1, -1), rnode(GOUT, 68, 14, 38) },
  { pnode(GPIO, 68, 14, SCLR, 1, -1), rnode(GOUT, 68, 14, 45) },
  { pnode(GPIO, 68, 14, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 14, 10) },
  { pnode(GPIO, 68, 14, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 14, 11) },
  { pnode(GPIO, 68, 14, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 14, 8) },
  { pnode(GPIO, 68, 14, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 14, 9) },
  { pnode(GPIO, 68, 14, DATAIN, 2, 0), rnode(GOUT, 68, 14, 29) },
  { pnode(GPIO, 68, 14, DATAIN, 2, 1), rnode(GOUT, 68, 14, 30) },
  { pnode(GPIO, 68, 14, DATAIN, 2, 2), rnode(GOUT, 68, 14, 32) },
  { pnode(GPIO, 68, 14, DATAIN, 2, 3), rnode(GOUT, 68, 14, 33) },
  { pnode(GPIO, 68, 14, DATAOUT, 2, 0), rnode(GIN, 68, 14, 36) },
  { pnode(GPIO, 68, 14, DATAOUT, 2, 1), rnode(GIN, 68, 14, 37) },
  { pnode(GPIO, 68, 14, DATAOUT, 2, 2), rnode(GIN, 68, 14, 40) },
  { pnode(GPIO, 68, 14, DATAOUT, 2, 3), rnode(GIN, 68, 14, 38) },
  { pnode(GPIO, 68, 14, DATAOUT, 2, 4), rnode(GIN, 68, 14, 39) },
  { pnode(GPIO, 68, 14, OEIN, 2, 0), rnode(GOUT, 68, 14, 34) },
  { pnode(GPIO, 68, 14, OEIN, 2, 1), rnode(GOUT, 68, 14, 35) },
  { pnode(GPIO, 68, 14, BSLIPMAX, 2, -1), rnode(GIN, 68, 14, 35) },
  { pnode(GPIO, 68, 14, CEIN, 2, -1), rnode(GOUT, 68, 14, 26) },
  { pnode(GPIO, 68, 14, CEOUT, 2, -1), rnode(GOUT, 68, 14, 27) },
  { pnode(GPIO, 68, 14, ACLR, 2, -1), rnode(GOUT, 68, 14, 28) },
  { pnode(GPIO, 68, 14, SCLR, 2, -1), rnode(GOUT, 68, 14, 31) },
  { pnode(GPIO, 68, 14, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 14, 6) },
  { pnode(GPIO, 68, 14, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 14, 7) },
  { pnode(GPIO, 68, 14, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 14, 4) },
  { pnode(GPIO, 68, 14, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 14, 5) },
  { pnode(GPIO, 68, 14, DATAIN, 3, 0), rnode(GOUT, 68, 14, 19) },
  { pnode(GPIO, 68, 14, DATAIN, 3, 1), rnode(GOUT, 68, 14, 20) },
  { pnode(GPIO, 68, 14, DATAIN, 3, 2), rnode(GOUT, 68, 14, 21) },
  { pnode(GPIO, 68, 14, DATAIN, 3, 3), rnode(GOUT, 68, 14, 22) },
  { pnode(GPIO, 68, 14, DATAOUT, 3, 0), rnode(GIN, 68, 14, 30) },
  { pnode(GPIO, 68, 14, DATAOUT, 3, 1), rnode(GIN, 68, 14, 31) },
  { pnode(GPIO, 68, 14, DATAOUT, 3, 2), rnode(GIN, 68, 14, 32) },
  { pnode(GPIO, 68, 14, DATAOUT, 3, 3), rnode(GIN, 68, 14, 33) },
  { pnode(GPIO, 68, 14, DATAOUT, 3, 4), rnode(GIN, 68, 14, 34) },
  { pnode(GPIO, 68, 14, OEIN, 3, 0), rnode(GOUT, 68, 14, 23) },
  { pnode(GPIO, 68, 14, OEIN, 3, 1), rnode(GOUT, 68, 14, 24) },
  { pnode(GPIO, 68, 14, BSLIPMAX, 3, -1), rnode(GIN, 68, 14, 29) },
  { pnode(GPIO, 68, 14, CEIN, 3, -1), rnode(GOUT, 68, 14, 16) },
  { pnode(GPIO, 68, 14, CEOUT, 3, -1), rnode(GOUT, 68, 14, 17) },
  { pnode(GPIO, 68, 14, ACLR, 3, -1), rnode(GOUT, 68, 14, 18) },
  { pnode(GPIO, 68, 14, SCLR, 3, -1), rnode(GOUT, 68, 14, 25) },
  { pnode(GPIO, 68, 14, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 14, 2) },
  { pnode(GPIO, 68, 14, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 14, 3) },
  { pnode(GPIO, 68, 14, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 14, 0) },
  { pnode(GPIO, 68, 14, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 14, 1) },
  { pnode(GPIO, 68, 16, DATAIN, 0, 0), rnode(GOUT, 68, 16, 49) },
  { pnode(GPIO, 68, 16, DATAIN, 0, 1), rnode(GOUT, 68, 16, 50) },
  { pnode(GPIO, 68, 16, DATAIN, 0, 2), rnode(GOUT, 68, 16, 51) },
  { pnode(GPIO, 68, 16, DATAIN, 0, 3), rnode(GOUT, 68, 16, 52) },
  { pnode(GPIO, 68, 16, DATAOUT, 0, 0), rnode(GIN, 68, 16, 48) },
  { pnode(GPIO, 68, 16, DATAOUT, 0, 1), rnode(GIN, 68, 16, 49) },
  { pnode(GPIO, 68, 16, DATAOUT, 0, 2), rnode(GIN, 68, 16, 50) },
  { pnode(GPIO, 68, 16, DATAOUT, 0, 3), rnode(GIN, 68, 16, 51) },
  { pnode(GPIO, 68, 16, DATAOUT, 0, 4), rnode(GIN, 68, 16, 52) },
  { pnode(GPIO, 68, 16, OEIN, 0, 0), rnode(GOUT, 68, 16, 53) },
  { pnode(GPIO, 68, 16, OEIN, 0, 1), rnode(GOUT, 68, 16, 54) },
  { pnode(GPIO, 68, 16, BSLIPMAX, 0, -1), rnode(GIN, 68, 16, 47) },
  { pnode(GPIO, 68, 16, CEIN, 0, -1), rnode(GOUT, 68, 16, 46) },
  { pnode(GPIO, 68, 16, CEOUT, 0, -1), rnode(GOUT, 68, 16, 47) },
  { pnode(GPIO, 68, 16, ACLR, 0, -1), rnode(GOUT, 68, 16, 48) },
  { pnode(GPIO, 68, 16, SCLR, 0, -1), rnode(GOUT, 68, 16, 55) },
  { pnode(GPIO, 68, 16, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 16, 14) },
  { pnode(GPIO, 68, 16, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 16, 15) },
  { pnode(GPIO, 68, 16, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 16, 12) },
  { pnode(GPIO, 68, 16, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 16, 13) },
  { pnode(GPIO, 68, 16, DATAIN, 1, 0), rnode(GOUT, 68, 16, 39) },
  { pnode(GPIO, 68, 16, DATAIN, 1, 1), rnode(GOUT, 68, 16, 40) },
  { pnode(GPIO, 68, 16, DATAIN, 1, 2), rnode(GOUT, 68, 16, 41) },
  { pnode(GPIO, 68, 16, DATAIN, 1, 3), rnode(GOUT, 68, 16, 42) },
  { pnode(GPIO, 68, 16, DATAOUT, 1, 0), rnode(GIN, 68, 16, 42) },
  { pnode(GPIO, 68, 16, DATAOUT, 1, 1), rnode(GIN, 68, 16, 43) },
  { pnode(GPIO, 68, 16, DATAOUT, 1, 2), rnode(GIN, 68, 16, 44) },
  { pnode(GPIO, 68, 16, DATAOUT, 1, 3), rnode(GIN, 68, 16, 45) },
  { pnode(GPIO, 68, 16, DATAOUT, 1, 4), rnode(GIN, 68, 16, 46) },
  { pnode(GPIO, 68, 16, OEIN, 1, 0), rnode(GOUT, 68, 16, 43) },
  { pnode(GPIO, 68, 16, OEIN, 1, 1), rnode(GOUT, 68, 16, 44) },
  { pnode(GPIO, 68, 16, BSLIPMAX, 1, -1), rnode(GIN, 68, 16, 41) },
  { pnode(GPIO, 68, 16, CEIN, 1, -1), rnode(GOUT, 68, 16, 36) },
  { pnode(GPIO, 68, 16, CEOUT, 1, -1), rnode(GOUT, 68, 16, 37) },
  { pnode(GPIO, 68, 16, ACLR, 1, -1), rnode(GOUT, 68, 16, 38) },
  { pnode(GPIO, 68, 16, SCLR, 1, -1), rnode(GOUT, 68, 16, 45) },
  { pnode(GPIO, 68, 16, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 16, 10) },
  { pnode(GPIO, 68, 16, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 16, 11) },
  { pnode(GPIO, 68, 16, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 16, 8) },
  { pnode(GPIO, 68, 16, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 16, 9) },
  { pnode(GPIO, 68, 16, DATAIN, 2, 0), rnode(GOUT, 68, 16, 29) },
  { pnode(GPIO, 68, 16, DATAIN, 2, 1), rnode(GOUT, 68, 16, 30) },
  { pnode(GPIO, 68, 16, DATAIN, 2, 2), rnode(GOUT, 68, 16, 31) },
  { pnode(GPIO, 68, 16, DATAIN, 2, 3), rnode(GOUT, 68, 16, 32) },
  { pnode(GPIO, 68, 16, DATAOUT, 2, 0), rnode(GIN, 68, 16, 36) },
  { pnode(GPIO, 68, 16, DATAOUT, 2, 1), rnode(GIN, 68, 16, 37) },
  { pnode(GPIO, 68, 16, DATAOUT, 2, 2), rnode(GIN, 68, 16, 40) },
  { pnode(GPIO, 68, 16, DATAOUT, 2, 3), rnode(GIN, 68, 16, 38) },
  { pnode(GPIO, 68, 16, DATAOUT, 2, 4), rnode(GIN, 68, 16, 39) },
  { pnode(GPIO, 68, 16, OEIN, 2, 0), rnode(GOUT, 68, 16, 33) },
  { pnode(GPIO, 68, 16, OEIN, 2, 1), rnode(GOUT, 68, 16, 34) },
  { pnode(GPIO, 68, 16, BSLIPMAX, 2, -1), rnode(GIN, 68, 16, 35) },
  { pnode(GPIO, 68, 16, CEIN, 2, -1), rnode(GOUT, 68, 16, 26) },
  { pnode(GPIO, 68, 16, CEOUT, 2, -1), rnode(GOUT, 68, 16, 27) },
  { pnode(GPIO, 68, 16, ACLR, 2, -1), rnode(GOUT, 68, 16, 28) },
  { pnode(GPIO, 68, 16, SCLR, 2, -1), rnode(GOUT, 68, 16, 35) },
  { pnode(GPIO, 68, 16, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 16, 6) },
  { pnode(GPIO, 68, 16, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 16, 7) },
  { pnode(GPIO, 68, 16, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 16, 4) },
  { pnode(GPIO, 68, 16, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 16, 5) },
  { pnode(GPIO, 68, 16, DATAIN, 3, 0), rnode(GOUT, 68, 16, 19) },
  { pnode(GPIO, 68, 16, DATAIN, 3, 1), rnode(GOUT, 68, 16, 20) },
  { pnode(GPIO, 68, 16, DATAIN, 3, 2), rnode(GOUT, 68, 16, 21) },
  { pnode(GPIO, 68, 16, DATAIN, 3, 3), rnode(GOUT, 68, 16, 22) },
  { pnode(GPIO, 68, 16, DATAOUT, 3, 0), rnode(GIN, 68, 16, 30) },
  { pnode(GPIO, 68, 16, DATAOUT, 3, 1), rnode(GIN, 68, 16, 31) },
  { pnode(GPIO, 68, 16, DATAOUT, 3, 2), rnode(GIN, 68, 16, 32) },
  { pnode(GPIO, 68, 16, DATAOUT, 3, 3), rnode(GIN, 68, 16, 33) },
  { pnode(GPIO, 68, 16, DATAOUT, 3, 4), rnode(GIN, 68, 16, 34) },
  { pnode(GPIO, 68, 16, OEIN, 3, 0), rnode(GOUT, 68, 16, 23) },
  { pnode(GPIO, 68, 16, OEIN, 3, 1), rnode(GOUT, 68, 16, 24) },
  { pnode(GPIO, 68, 16, BSLIPMAX, 3, -1), rnode(GIN, 68, 16, 29) },
  { pnode(GPIO, 68, 16, CEIN, 3, -1), rnode(GOUT, 68, 16, 16) },
  { pnode(GPIO, 68, 16, CEOUT, 3, -1), rnode(GOUT, 68, 16, 17) },
  { pnode(GPIO, 68, 16, ACLR, 3, -1), rnode(GOUT, 68, 16, 18) },
  { pnode(GPIO, 68, 16, SCLR, 3, -1), rnode(GOUT, 68, 16, 25) },
  { pnode(GPIO, 68, 16, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 16, 2) },
  { pnode(GPIO, 68, 16, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 16, 3) },
  { pnode(GPIO, 68, 16, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 16, 0) },
  { pnode(GPIO, 68, 16, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 16, 1) },
  { pnode(GPIO, 68, 17, DATAIN, 0, 0), rnode(GOUT, 68, 17, 49) },
  { pnode(GPIO, 68, 17, DATAIN, 0, 1), rnode(GOUT, 68, 17, 50) },
  { pnode(GPIO, 68, 17, DATAIN, 0, 2), rnode(GOUT, 68, 17, 51) },
  { pnode(GPIO, 68, 17, DATAIN, 0, 3), rnode(GOUT, 68, 17, 52) },
  { pnode(GPIO, 68, 17, DATAOUT, 0, 0), rnode(GIN, 68, 17, 48) },
  { pnode(GPIO, 68, 17, DATAOUT, 0, 1), rnode(GIN, 68, 17, 49) },
  { pnode(GPIO, 68, 17, DATAOUT, 0, 2), rnode(GIN, 68, 17, 50) },
  { pnode(GPIO, 68, 17, DATAOUT, 0, 3), rnode(GIN, 68, 17, 51) },
  { pnode(GPIO, 68, 17, DATAOUT, 0, 4), rnode(GIN, 68, 17, 52) },
  { pnode(GPIO, 68, 17, OEIN, 0, 0), rnode(GOUT, 68, 17, 53) },
  { pnode(GPIO, 68, 17, OEIN, 0, 1), rnode(GOUT, 68, 17, 54) },
  { pnode(GPIO, 68, 17, BSLIPMAX, 0, -1), rnode(GIN, 68, 17, 47) },
  { pnode(GPIO, 68, 17, CEIN, 0, -1), rnode(GOUT, 68, 17, 46) },
  { pnode(GPIO, 68, 17, CEOUT, 0, -1), rnode(GOUT, 68, 17, 47) },
  { pnode(GPIO, 68, 17, ACLR, 0, -1), rnode(GOUT, 68, 17, 48) },
  { pnode(GPIO, 68, 17, SCLR, 0, -1), rnode(GOUT, 68, 17, 55) },
  { pnode(GPIO, 68, 17, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 17, 14) },
  { pnode(GPIO, 68, 17, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 17, 15) },
  { pnode(GPIO, 68, 17, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 17, 12) },
  { pnode(GPIO, 68, 17, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 17, 13) },
  { pnode(GPIO, 68, 17, DATAIN, 1, 0), rnode(GOUT, 68, 17, 39) },
  { pnode(GPIO, 68, 17, DATAIN, 1, 1), rnode(GOUT, 68, 17, 40) },
  { pnode(GPIO, 68, 17, DATAIN, 1, 2), rnode(GOUT, 68, 17, 41) },
  { pnode(GPIO, 68, 17, DATAIN, 1, 3), rnode(GOUT, 68, 17, 42) },
  { pnode(GPIO, 68, 17, DATAOUT, 1, 0), rnode(GIN, 68, 17, 42) },
  { pnode(GPIO, 68, 17, DATAOUT, 1, 1), rnode(GIN, 68, 17, 43) },
  { pnode(GPIO, 68, 17, DATAOUT, 1, 2), rnode(GIN, 68, 17, 44) },
  { pnode(GPIO, 68, 17, DATAOUT, 1, 3), rnode(GIN, 68, 17, 45) },
  { pnode(GPIO, 68, 17, DATAOUT, 1, 4), rnode(GIN, 68, 17, 46) },
  { pnode(GPIO, 68, 17, OEIN, 1, 0), rnode(GOUT, 68, 17, 43) },
  { pnode(GPIO, 68, 17, OEIN, 1, 1), rnode(GOUT, 68, 17, 44) },
  { pnode(GPIO, 68, 17, BSLIPMAX, 1, -1), rnode(GIN, 68, 17, 41) },
  { pnode(GPIO, 68, 17, CEIN, 1, -1), rnode(GOUT, 68, 17, 36) },
  { pnode(GPIO, 68, 17, CEOUT, 1, -1), rnode(GOUT, 68, 17, 37) },
  { pnode(GPIO, 68, 17, ACLR, 1, -1), rnode(GOUT, 68, 17, 38) },
  { pnode(GPIO, 68, 17, SCLR, 1, -1), rnode(GOUT, 68, 17, 45) },
  { pnode(GPIO, 68, 17, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 17, 10) },
  { pnode(GPIO, 68, 17, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 17, 11) },
  { pnode(GPIO, 68, 17, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 17, 8) },
  { pnode(GPIO, 68, 17, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 17, 9) },
  { pnode(GPIO, 68, 17, DATAIN, 2, 0), rnode(GOUT, 68, 17, 29) },
  { pnode(GPIO, 68, 17, DATAIN, 2, 1), rnode(GOUT, 68, 17, 30) },
  { pnode(GPIO, 68, 17, DATAIN, 2, 2), rnode(GOUT, 68, 17, 31) },
  { pnode(GPIO, 68, 17, DATAIN, 2, 3), rnode(GOUT, 68, 17, 32) },
  { pnode(GPIO, 68, 17, DATAOUT, 2, 0), rnode(GIN, 68, 17, 36) },
  { pnode(GPIO, 68, 17, DATAOUT, 2, 1), rnode(GIN, 68, 17, 37) },
  { pnode(GPIO, 68, 17, DATAOUT, 2, 2), rnode(GIN, 68, 17, 40) },
  { pnode(GPIO, 68, 17, DATAOUT, 2, 3), rnode(GIN, 68, 17, 38) },
  { pnode(GPIO, 68, 17, DATAOUT, 2, 4), rnode(GIN, 68, 17, 39) },
  { pnode(GPIO, 68, 17, OEIN, 2, 0), rnode(GOUT, 68, 17, 33) },
  { pnode(GPIO, 68, 17, OEIN, 2, 1), rnode(GOUT, 68, 17, 34) },
  { pnode(GPIO, 68, 17, BSLIPMAX, 2, -1), rnode(GIN, 68, 17, 35) },
  { pnode(GPIO, 68, 17, CEIN, 2, -1), rnode(GOUT, 68, 17, 26) },
  { pnode(GPIO, 68, 17, CEOUT, 2, -1), rnode(GOUT, 68, 17, 27) },
  { pnode(GPIO, 68, 17, ACLR, 2, -1), rnode(GOUT, 68, 17, 28) },
  { pnode(GPIO, 68, 17, SCLR, 2, -1), rnode(GOUT, 68, 17, 35) },
  { pnode(GPIO, 68, 17, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 17, 6) },
  { pnode(GPIO, 68, 17, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 17, 7) },
  { pnode(GPIO, 68, 17, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 17, 4) },
  { pnode(GPIO, 68, 17, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 17, 5) },
  { pnode(GPIO, 68, 17, DATAIN, 3, 0), rnode(GOUT, 68, 17, 19) },
  { pnode(GPIO, 68, 17, DATAIN, 3, 1), rnode(GOUT, 68, 17, 20) },
  { pnode(GPIO, 68, 17, DATAIN, 3, 2), rnode(GOUT, 68, 17, 21) },
  { pnode(GPIO, 68, 17, DATAIN, 3, 3), rnode(GOUT, 68, 17, 22) },
  { pnode(GPIO, 68, 17, DATAOUT, 3, 0), rnode(GIN, 68, 17, 30) },
  { pnode(GPIO, 68, 17, DATAOUT, 3, 1), rnode(GIN, 68, 17, 31) },
  { pnode(GPIO, 68, 17, DATAOUT, 3, 2), rnode(GIN, 68, 17, 32) },
  { pnode(GPIO, 68, 17, DATAOUT, 3, 3), rnode(GIN, 68, 17, 33) },
  { pnode(GPIO, 68, 17, DATAOUT, 3, 4), rnode(GIN, 68, 17, 34) },
  { pnode(GPIO, 68, 17, OEIN, 3, 0), rnode(GOUT, 68, 17, 23) },
  { pnode(GPIO, 68, 17, OEIN, 3, 1), rnode(GOUT, 68, 17, 24) },
  { pnode(GPIO, 68, 17, BSLIPMAX, 3, -1), rnode(GIN, 68, 17, 29) },
  { pnode(GPIO, 68, 17, CEIN, 3, -1), rnode(GOUT, 68, 17, 16) },
  { pnode(GPIO, 68, 17, CEOUT, 3, -1), rnode(GOUT, 68, 17, 17) },
  { pnode(GPIO, 68, 17, ACLR, 3, -1), rnode(GOUT, 68, 17, 18) },
  { pnode(GPIO, 68, 17, SCLR, 3, -1), rnode(GOUT, 68, 17, 25) },
  { pnode(GPIO, 68, 17, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 17, 2) },
  { pnode(GPIO, 68, 17, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 17, 3) },
  { pnode(GPIO, 68, 17, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 17, 0) },
  { pnode(GPIO, 68, 17, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 17, 1) },
  { pnode(GPIO, 68, 19, DATAIN, 0, 0), rnode(GOUT, 68, 19, 49) },
  { pnode(GPIO, 68, 19, DATAIN, 0, 1), rnode(GOUT, 68, 19, 50) },
  { pnode(GPIO, 68, 19, DATAIN, 0, 2), rnode(GOUT, 68, 19, 51) },
  { pnode(GPIO, 68, 19, DATAIN, 0, 3), rnode(GOUT, 68, 19, 52) },
  { pnode(GPIO, 68, 19, DATAOUT, 0, 0), rnode(GIN, 68, 19, 48) },
  { pnode(GPIO, 68, 19, DATAOUT, 0, 1), rnode(GIN, 68, 19, 49) },
  { pnode(GPIO, 68, 19, DATAOUT, 0, 2), rnode(GIN, 68, 19, 50) },
  { pnode(GPIO, 68, 19, DATAOUT, 0, 3), rnode(GIN, 68, 19, 51) },
  { pnode(GPIO, 68, 19, DATAOUT, 0, 4), rnode(GIN, 68, 19, 52) },
  { pnode(GPIO, 68, 19, OEIN, 0, 0), rnode(GOUT, 68, 19, 53) },
  { pnode(GPIO, 68, 19, OEIN, 0, 1), rnode(GOUT, 68, 19, 55) },
  { pnode(GPIO, 68, 19, BSLIPMAX, 0, -1), rnode(GIN, 68, 19, 47) },
  { pnode(GPIO, 68, 19, CEIN, 0, -1), rnode(GOUT, 68, 19, 46) },
  { pnode(GPIO, 68, 19, CEOUT, 0, -1), rnode(GOUT, 68, 19, 47) },
  { pnode(GPIO, 68, 19, ACLR, 0, -1), rnode(GOUT, 68, 19, 48) },
  { pnode(GPIO, 68, 19, SCLR, 0, -1), rnode(GOUT, 68, 19, 54) },
  { pnode(GPIO, 68, 19, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 19, 14) },
  { pnode(GPIO, 68, 19, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 19, 15) },
  { pnode(GPIO, 68, 19, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 19, 12) },
  { pnode(GPIO, 68, 19, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 19, 13) },
  { pnode(GPIO, 68, 19, DATAIN, 1, 0), rnode(GOUT, 68, 19, 39) },
  { pnode(GPIO, 68, 19, DATAIN, 1, 1), rnode(GOUT, 68, 19, 40) },
  { pnode(GPIO, 68, 19, DATAIN, 1, 2), rnode(GOUT, 68, 19, 41) },
  { pnode(GPIO, 68, 19, DATAIN, 1, 3), rnode(GOUT, 68, 19, 42) },
  { pnode(GPIO, 68, 19, DATAOUT, 1, 0), rnode(GIN, 68, 19, 42) },
  { pnode(GPIO, 68, 19, DATAOUT, 1, 1), rnode(GIN, 68, 19, 43) },
  { pnode(GPIO, 68, 19, DATAOUT, 1, 2), rnode(GIN, 68, 19, 44) },
  { pnode(GPIO, 68, 19, DATAOUT, 1, 3), rnode(GIN, 68, 19, 45) },
  { pnode(GPIO, 68, 19, DATAOUT, 1, 4), rnode(GIN, 68, 19, 46) },
  { pnode(GPIO, 68, 19, OEIN, 1, 0), rnode(GOUT, 68, 19, 43) },
  { pnode(GPIO, 68, 19, OEIN, 1, 1), rnode(GOUT, 68, 19, 44) },
  { pnode(GPIO, 68, 19, BSLIPMAX, 1, -1), rnode(GIN, 68, 19, 41) },
  { pnode(GPIO, 68, 19, CEIN, 1, -1), rnode(GOUT, 68, 19, 36) },
  { pnode(GPIO, 68, 19, CEOUT, 1, -1), rnode(GOUT, 68, 19, 37) },
  { pnode(GPIO, 68, 19, ACLR, 1, -1), rnode(GOUT, 68, 19, 38) },
  { pnode(GPIO, 68, 19, SCLR, 1, -1), rnode(GOUT, 68, 19, 45) },
  { pnode(GPIO, 68, 19, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 19, 10) },
  { pnode(GPIO, 68, 19, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 19, 11) },
  { pnode(GPIO, 68, 19, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 19, 8) },
  { pnode(GPIO, 68, 19, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 19, 9) },
  { pnode(GPIO, 68, 19, DATAIN, 2, 0), rnode(GOUT, 68, 19, 29) },
  { pnode(GPIO, 68, 19, DATAIN, 2, 1), rnode(GOUT, 68, 19, 30) },
  { pnode(GPIO, 68, 19, DATAIN, 2, 2), rnode(GOUT, 68, 19, 31) },
  { pnode(GPIO, 68, 19, DATAIN, 2, 3), rnode(GOUT, 68, 19, 32) },
  { pnode(GPIO, 68, 19, DATAOUT, 2, 0), rnode(GIN, 68, 19, 36) },
  { pnode(GPIO, 68, 19, DATAOUT, 2, 1), rnode(GIN, 68, 19, 37) },
  { pnode(GPIO, 68, 19, DATAOUT, 2, 2), rnode(GIN, 68, 19, 40) },
  { pnode(GPIO, 68, 19, DATAOUT, 2, 3), rnode(GIN, 68, 19, 38) },
  { pnode(GPIO, 68, 19, DATAOUT, 2, 4), rnode(GIN, 68, 19, 39) },
  { pnode(GPIO, 68, 19, OEIN, 2, 0), rnode(GOUT, 68, 19, 33) },
  { pnode(GPIO, 68, 19, OEIN, 2, 1), rnode(GOUT, 68, 19, 34) },
  { pnode(GPIO, 68, 19, BSLIPMAX, 2, -1), rnode(GIN, 68, 19, 35) },
  { pnode(GPIO, 68, 19, CEIN, 2, -1), rnode(GOUT, 68, 19, 26) },
  { pnode(GPIO, 68, 19, CEOUT, 2, -1), rnode(GOUT, 68, 19, 27) },
  { pnode(GPIO, 68, 19, ACLR, 2, -1), rnode(GOUT, 68, 19, 28) },
  { pnode(GPIO, 68, 19, SCLR, 2, -1), rnode(GOUT, 68, 19, 35) },
  { pnode(GPIO, 68, 19, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 19, 6) },
  { pnode(GPIO, 68, 19, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 19, 7) },
  { pnode(GPIO, 68, 19, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 19, 4) },
  { pnode(GPIO, 68, 19, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 19, 5) },
  { pnode(GPIO, 68, 19, DATAIN, 3, 0), rnode(GOUT, 68, 19, 19) },
  { pnode(GPIO, 68, 19, DATAIN, 3, 1), rnode(GOUT, 68, 19, 20) },
  { pnode(GPIO, 68, 19, DATAIN, 3, 2), rnode(GOUT, 68, 19, 21) },
  { pnode(GPIO, 68, 19, DATAIN, 3, 3), rnode(GOUT, 68, 19, 22) },
  { pnode(GPIO, 68, 19, DATAOUT, 3, 0), rnode(GIN, 68, 19, 30) },
  { pnode(GPIO, 68, 19, DATAOUT, 3, 1), rnode(GIN, 68, 19, 31) },
  { pnode(GPIO, 68, 19, DATAOUT, 3, 2), rnode(GIN, 68, 19, 32) },
  { pnode(GPIO, 68, 19, DATAOUT, 3, 3), rnode(GIN, 68, 19, 33) },
  { pnode(GPIO, 68, 19, DATAOUT, 3, 4), rnode(GIN, 68, 19, 34) },
  { pnode(GPIO, 68, 19, OEIN, 3, 0), rnode(GOUT, 68, 19, 23) },
  { pnode(GPIO, 68, 19, OEIN, 3, 1), rnode(GOUT, 68, 19, 24) },
  { pnode(GPIO, 68, 19, BSLIPMAX, 3, -1), rnode(GIN, 68, 19, 29) },
  { pnode(GPIO, 68, 19, CEIN, 3, -1), rnode(GOUT, 68, 19, 16) },
  { pnode(GPIO, 68, 19, CEOUT, 3, -1), rnode(GOUT, 68, 19, 17) },
  { pnode(GPIO, 68, 19, ACLR, 3, -1), rnode(GOUT, 68, 19, 18) },
  { pnode(GPIO, 68, 19, SCLR, 3, -1), rnode(GOUT, 68, 19, 25) },
  { pnode(GPIO, 68, 19, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 19, 2) },
  { pnode(GPIO, 68, 19, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 19, 3) },
  { pnode(GPIO, 68, 19, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 19, 0) },
  { pnode(GPIO, 68, 19, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 19, 1) },
  { pnode(GPIO, 68, 22, DATAIN, 0, 0), rnode(GOUT, 68, 22, 49) },
  { pnode(GPIO, 68, 22, DATAIN, 0, 1), rnode(GOUT, 68, 22, 50) },
  { pnode(GPIO, 68, 22, DATAIN, 0, 2), rnode(GOUT, 68, 22, 51) },
  { pnode(GPIO, 68, 22, DATAIN, 0, 3), rnode(GOUT, 68, 22, 52) },
  { pnode(GPIO, 68, 22, DATAOUT, 0, 0), rnode(GIN, 68, 22, 48) },
  { pnode(GPIO, 68, 22, DATAOUT, 0, 1), rnode(GIN, 68, 22, 49) },
  { pnode(GPIO, 68, 22, DATAOUT, 0, 2), rnode(GIN, 68, 22, 50) },
  { pnode(GPIO, 68, 22, DATAOUT, 0, 3), rnode(GIN, 68, 22, 51) },
  { pnode(GPIO, 68, 22, DATAOUT, 0, 4), rnode(GIN, 68, 22, 52) },
  { pnode(GPIO, 68, 22, OEIN, 0, 0), rnode(GOUT, 68, 22, 53) },
  { pnode(GPIO, 68, 22, OEIN, 0, 1), rnode(GOUT, 68, 22, 54) },
  { pnode(GPIO, 68, 22, BSLIPMAX, 0, -1), rnode(GIN, 68, 22, 47) },
  { pnode(GPIO, 68, 22, CEIN, 0, -1), rnode(GOUT, 68, 22, 46) },
  { pnode(GPIO, 68, 22, CEOUT, 0, -1), rnode(GOUT, 68, 22, 47) },
  { pnode(GPIO, 68, 22, ACLR, 0, -1), rnode(GOUT, 68, 22, 48) },
  { pnode(GPIO, 68, 22, SCLR, 0, -1), rnode(GOUT, 68, 22, 55) },
  { pnode(GPIO, 68, 22, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 22, 14) },
  { pnode(GPIO, 68, 22, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 22, 15) },
  { pnode(GPIO, 68, 22, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 22, 12) },
  { pnode(GPIO, 68, 22, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 22, 13) },
  { pnode(GPIO, 68, 22, DATAIN, 1, 0), rnode(GOUT, 68, 22, 39) },
  { pnode(GPIO, 68, 22, DATAIN, 1, 1), rnode(GOUT, 68, 22, 40) },
  { pnode(GPIO, 68, 22, DATAIN, 1, 2), rnode(GOUT, 68, 22, 41) },
  { pnode(GPIO, 68, 22, DATAIN, 1, 3), rnode(GOUT, 68, 22, 42) },
  { pnode(GPIO, 68, 22, DATAOUT, 1, 0), rnode(GIN, 68, 22, 42) },
  { pnode(GPIO, 68, 22, DATAOUT, 1, 1), rnode(GIN, 68, 22, 43) },
  { pnode(GPIO, 68, 22, DATAOUT, 1, 2), rnode(GIN, 68, 22, 44) },
  { pnode(GPIO, 68, 22, DATAOUT, 1, 3), rnode(GIN, 68, 22, 45) },
  { pnode(GPIO, 68, 22, DATAOUT, 1, 4), rnode(GIN, 68, 22, 46) },
  { pnode(GPIO, 68, 22, OEIN, 1, 0), rnode(GOUT, 68, 22, 43) },
  { pnode(GPIO, 68, 22, OEIN, 1, 1), rnode(GOUT, 68, 22, 44) },
  { pnode(GPIO, 68, 22, BSLIPMAX, 1, -1), rnode(GIN, 68, 22, 41) },
  { pnode(GPIO, 68, 22, CEIN, 1, -1), rnode(GOUT, 68, 22, 36) },
  { pnode(GPIO, 68, 22, CEOUT, 1, -1), rnode(GOUT, 68, 22, 37) },
  { pnode(GPIO, 68, 22, ACLR, 1, -1), rnode(GOUT, 68, 22, 38) },
  { pnode(GPIO, 68, 22, SCLR, 1, -1), rnode(GOUT, 68, 22, 45) },
  { pnode(GPIO, 68, 22, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 22, 10) },
  { pnode(GPIO, 68, 22, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 22, 11) },
  { pnode(GPIO, 68, 22, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 22, 8) },
  { pnode(GPIO, 68, 22, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 22, 9) },
  { pnode(GPIO, 68, 22, DATAIN, 2, 0), rnode(GOUT, 68, 22, 29) },
  { pnode(GPIO, 68, 22, DATAIN, 2, 1), rnode(GOUT, 68, 22, 30) },
  { pnode(GPIO, 68, 22, DATAIN, 2, 2), rnode(GOUT, 68, 22, 32) },
  { pnode(GPIO, 68, 22, DATAIN, 2, 3), rnode(GOUT, 68, 22, 33) },
  { pnode(GPIO, 68, 22, DATAOUT, 2, 0), rnode(GIN, 68, 22, 36) },
  { pnode(GPIO, 68, 22, DATAOUT, 2, 1), rnode(GIN, 68, 22, 37) },
  { pnode(GPIO, 68, 22, DATAOUT, 2, 2), rnode(GIN, 68, 22, 40) },
  { pnode(GPIO, 68, 22, DATAOUT, 2, 3), rnode(GIN, 68, 22, 38) },
  { pnode(GPIO, 68, 22, DATAOUT, 2, 4), rnode(GIN, 68, 22, 39) },
  { pnode(GPIO, 68, 22, OEIN, 2, 0), rnode(GOUT, 68, 22, 34) },
  { pnode(GPIO, 68, 22, OEIN, 2, 1), rnode(GOUT, 68, 22, 35) },
  { pnode(GPIO, 68, 22, BSLIPMAX, 2, -1), rnode(GIN, 68, 22, 35) },
  { pnode(GPIO, 68, 22, CEIN, 2, -1), rnode(GOUT, 68, 22, 26) },
  { pnode(GPIO, 68, 22, CEOUT, 2, -1), rnode(GOUT, 68, 22, 27) },
  { pnode(GPIO, 68, 22, ACLR, 2, -1), rnode(GOUT, 68, 22, 28) },
  { pnode(GPIO, 68, 22, SCLR, 2, -1), rnode(GOUT, 68, 22, 31) },
  { pnode(GPIO, 68, 22, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 22, 6) },
  { pnode(GPIO, 68, 22, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 22, 7) },
  { pnode(GPIO, 68, 22, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 22, 4) },
  { pnode(GPIO, 68, 22, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 22, 5) },
  { pnode(GPIO, 68, 22, DATAIN, 3, 0), rnode(GOUT, 68, 22, 19) },
  { pnode(GPIO, 68, 22, DATAIN, 3, 1), rnode(GOUT, 68, 22, 20) },
  { pnode(GPIO, 68, 22, DATAIN, 3, 2), rnode(GOUT, 68, 22, 21) },
  { pnode(GPIO, 68, 22, DATAIN, 3, 3), rnode(GOUT, 68, 22, 22) },
  { pnode(GPIO, 68, 22, DATAOUT, 3, 0), rnode(GIN, 68, 22, 30) },
  { pnode(GPIO, 68, 22, DATAOUT, 3, 1), rnode(GIN, 68, 22, 31) },
  { pnode(GPIO, 68, 22, DATAOUT, 3, 2), rnode(GIN, 68, 22, 32) },
  { pnode(GPIO, 68, 22, DATAOUT, 3, 3), rnode(GIN, 68, 22, 33) },
  { pnode(GPIO, 68, 22, DATAOUT, 3, 4), rnode(GIN, 68, 22, 34) },
  { pnode(GPIO, 68, 22, OEIN, 3, 0), rnode(GOUT, 68, 22, 23) },
  { pnode(GPIO, 68, 22, OEIN, 3, 1), rnode(GOUT, 68, 22, 24) },
  { pnode(GPIO, 68, 22, BSLIPMAX, 3, -1), rnode(GIN, 68, 22, 29) },
  { pnode(GPIO, 68, 22, CEIN, 3, -1), rnode(GOUT, 68, 22, 16) },
  { pnode(GPIO, 68, 22, CEOUT, 3, -1), rnode(GOUT, 68, 22, 17) },
  { pnode(GPIO, 68, 22, ACLR, 3, -1), rnode(GOUT, 68, 22, 18) },
  { pnode(GPIO, 68, 22, SCLR, 3, -1), rnode(GOUT, 68, 22, 25) },
  { pnode(GPIO, 68, 22, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 22, 2) },
  { pnode(GPIO, 68, 22, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 22, 3) },
  { pnode(GPIO, 68, 22, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 22, 0) },
  { pnode(GPIO, 68, 22, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 22, 1) },
  { pnode(GPIO, 68, 24, DATAIN, 0, 0), rnode(GOUT, 68, 24, 49) },
  { pnode(GPIO, 68, 24, DATAIN, 0, 1), rnode(GOUT, 68, 24, 50) },
  { pnode(GPIO, 68, 24, DATAIN, 0, 2), rnode(GOUT, 68, 24, 51) },
  { pnode(GPIO, 68, 24, DATAIN, 0, 3), rnode(GOUT, 68, 24, 52) },
  { pnode(GPIO, 68, 24, DATAOUT, 0, 0), rnode(GIN, 68, 24, 48) },
  { pnode(GPIO, 68, 24, DATAOUT, 0, 1), rnode(GIN, 68, 24, 49) },
  { pnode(GPIO, 68, 24, DATAOUT, 0, 2), rnode(GIN, 68, 24, 50) },
  { pnode(GPIO, 68, 24, DATAOUT, 0, 3), rnode(GIN, 68, 24, 51) },
  { pnode(GPIO, 68, 24, DATAOUT, 0, 4), rnode(GIN, 68, 24, 52) },
  { pnode(GPIO, 68, 24, OEIN, 0, 0), rnode(GOUT, 68, 24, 53) },
  { pnode(GPIO, 68, 24, OEIN, 0, 1), rnode(GOUT, 68, 24, 54) },
  { pnode(GPIO, 68, 24, BSLIPMAX, 0, -1), rnode(GIN, 68, 24, 47) },
  { pnode(GPIO, 68, 24, CEIN, 0, -1), rnode(GOUT, 68, 24, 46) },
  { pnode(GPIO, 68, 24, CEOUT, 0, -1), rnode(GOUT, 68, 24, 47) },
  { pnode(GPIO, 68, 24, ACLR, 0, -1), rnode(GOUT, 68, 24, 48) },
  { pnode(GPIO, 68, 24, SCLR, 0, -1), rnode(GOUT, 68, 24, 55) },
  { pnode(GPIO, 68, 24, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 24, 14) },
  { pnode(GPIO, 68, 24, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 24, 15) },
  { pnode(GPIO, 68, 24, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 24, 12) },
  { pnode(GPIO, 68, 24, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 24, 13) },
  { pnode(GPIO, 68, 24, DATAIN, 1, 0), rnode(GOUT, 68, 24, 39) },
  { pnode(GPIO, 68, 24, DATAIN, 1, 1), rnode(GOUT, 68, 24, 40) },
  { pnode(GPIO, 68, 24, DATAIN, 1, 2), rnode(GOUT, 68, 24, 41) },
  { pnode(GPIO, 68, 24, DATAIN, 1, 3), rnode(GOUT, 68, 24, 42) },
  { pnode(GPIO, 68, 24, DATAOUT, 1, 0), rnode(GIN, 68, 24, 42) },
  { pnode(GPIO, 68, 24, DATAOUT, 1, 1), rnode(GIN, 68, 24, 43) },
  { pnode(GPIO, 68, 24, DATAOUT, 1, 2), rnode(GIN, 68, 24, 44) },
  { pnode(GPIO, 68, 24, DATAOUT, 1, 3), rnode(GIN, 68, 24, 45) },
  { pnode(GPIO, 68, 24, DATAOUT, 1, 4), rnode(GIN, 68, 24, 46) },
  { pnode(GPIO, 68, 24, OEIN, 1, 0), rnode(GOUT, 68, 24, 43) },
  { pnode(GPIO, 68, 24, OEIN, 1, 1), rnode(GOUT, 68, 24, 44) },
  { pnode(GPIO, 68, 24, BSLIPMAX, 1, -1), rnode(GIN, 68, 24, 41) },
  { pnode(GPIO, 68, 24, CEIN, 1, -1), rnode(GOUT, 68, 24, 36) },
  { pnode(GPIO, 68, 24, CEOUT, 1, -1), rnode(GOUT, 68, 24, 37) },
  { pnode(GPIO, 68, 24, ACLR, 1, -1), rnode(GOUT, 68, 24, 38) },
  { pnode(GPIO, 68, 24, SCLR, 1, -1), rnode(GOUT, 68, 24, 45) },
  { pnode(GPIO, 68, 24, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 24, 10) },
  { pnode(GPIO, 68, 24, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 24, 11) },
  { pnode(GPIO, 68, 24, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 24, 8) },
  { pnode(GPIO, 68, 24, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 24, 9) },
  { pnode(GPIO, 68, 24, DATAIN, 2, 0), rnode(GOUT, 68, 24, 29) },
  { pnode(GPIO, 68, 24, DATAIN, 2, 1), rnode(GOUT, 68, 24, 30) },
  { pnode(GPIO, 68, 24, DATAIN, 2, 2), rnode(GOUT, 68, 24, 31) },
  { pnode(GPIO, 68, 24, DATAIN, 2, 3), rnode(GOUT, 68, 24, 32) },
  { pnode(GPIO, 68, 24, DATAOUT, 2, 0), rnode(GIN, 68, 24, 36) },
  { pnode(GPIO, 68, 24, DATAOUT, 2, 1), rnode(GIN, 68, 24, 37) },
  { pnode(GPIO, 68, 24, DATAOUT, 2, 2), rnode(GIN, 68, 24, 40) },
  { pnode(GPIO, 68, 24, DATAOUT, 2, 3), rnode(GIN, 68, 24, 38) },
  { pnode(GPIO, 68, 24, DATAOUT, 2, 4), rnode(GIN, 68, 24, 39) },
  { pnode(GPIO, 68, 24, OEIN, 2, 0), rnode(GOUT, 68, 24, 33) },
  { pnode(GPIO, 68, 24, OEIN, 2, 1), rnode(GOUT, 68, 24, 34) },
  { pnode(GPIO, 68, 24, BSLIPMAX, 2, -1), rnode(GIN, 68, 24, 35) },
  { pnode(GPIO, 68, 24, CEIN, 2, -1), rnode(GOUT, 68, 24, 26) },
  { pnode(GPIO, 68, 24, CEOUT, 2, -1), rnode(GOUT, 68, 24, 27) },
  { pnode(GPIO, 68, 24, ACLR, 2, -1), rnode(GOUT, 68, 24, 28) },
  { pnode(GPIO, 68, 24, SCLR, 2, -1), rnode(GOUT, 68, 24, 35) },
  { pnode(GPIO, 68, 24, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 24, 6) },
  { pnode(GPIO, 68, 24, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 24, 7) },
  { pnode(GPIO, 68, 24, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 24, 4) },
  { pnode(GPIO, 68, 24, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 24, 5) },
  { pnode(GPIO, 68, 24, DATAIN, 3, 0), rnode(GOUT, 68, 24, 19) },
  { pnode(GPIO, 68, 24, DATAIN, 3, 1), rnode(GOUT, 68, 24, 20) },
  { pnode(GPIO, 68, 24, DATAIN, 3, 2), rnode(GOUT, 68, 24, 21) },
  { pnode(GPIO, 68, 24, DATAIN, 3, 3), rnode(GOUT, 68, 24, 22) },
  { pnode(GPIO, 68, 24, DATAOUT, 3, 0), rnode(GIN, 68, 24, 30) },
  { pnode(GPIO, 68, 24, DATAOUT, 3, 1), rnode(GIN, 68, 24, 31) },
  { pnode(GPIO, 68, 24, DATAOUT, 3, 2), rnode(GIN, 68, 24, 32) },
  { pnode(GPIO, 68, 24, DATAOUT, 3, 3), rnode(GIN, 68, 24, 33) },
  { pnode(GPIO, 68, 24, DATAOUT, 3, 4), rnode(GIN, 68, 24, 34) },
  { pnode(GPIO, 68, 24, OEIN, 3, 0), rnode(GOUT, 68, 24, 23) },
  { pnode(GPIO, 68, 24, OEIN, 3, 1), rnode(GOUT, 68, 24, 24) },
  { pnode(GPIO, 68, 24, BSLIPMAX, 3, -1), rnode(GIN, 68, 24, 29) },
  { pnode(GPIO, 68, 24, CEIN, 3, -1), rnode(GOUT, 68, 24, 16) },
  { pnode(GPIO, 68, 24, CEOUT, 3, -1), rnode(GOUT, 68, 24, 17) },
  { pnode(GPIO, 68, 24, ACLR, 3, -1), rnode(GOUT, 68, 24, 18) },
  { pnode(GPIO, 68, 24, SCLR, 3, -1), rnode(GOUT, 68, 24, 25) },
  { pnode(GPIO, 68, 24, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 24, 2) },
  { pnode(GPIO, 68, 24, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 24, 3) },
  { pnode(GPIO, 68, 24, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 24, 0) },
  { pnode(GPIO, 68, 24, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 24, 1) },
  { pnode(GPIO, 68, 26, DATAIN, 0, 0), rnode(GOUT, 68, 26, 49) },
  { pnode(GPIO, 68, 26, DATAIN, 0, 1), rnode(GOUT, 68, 26, 50) },
  { pnode(GPIO, 68, 26, DATAIN, 0, 2), rnode(GOUT, 68, 26, 51) },
  { pnode(GPIO, 68, 26, DATAIN, 0, 3), rnode(GOUT, 68, 26, 52) },
  { pnode(GPIO, 68, 26, DATAOUT, 0, 0), rnode(GIN, 68, 26, 48) },
  { pnode(GPIO, 68, 26, DATAOUT, 0, 1), rnode(GIN, 68, 26, 49) },
  { pnode(GPIO, 68, 26, DATAOUT, 0, 2), rnode(GIN, 68, 26, 50) },
  { pnode(GPIO, 68, 26, DATAOUT, 0, 3), rnode(GIN, 68, 26, 51) },
  { pnode(GPIO, 68, 26, DATAOUT, 0, 4), rnode(GIN, 68, 26, 52) },
  { pnode(GPIO, 68, 26, OEIN, 0, 0), rnode(GOUT, 68, 26, 53) },
  { pnode(GPIO, 68, 26, OEIN, 0, 1), rnode(GOUT, 68, 26, 54) },
  { pnode(GPIO, 68, 26, BSLIPMAX, 0, -1), rnode(GIN, 68, 26, 47) },
  { pnode(GPIO, 68, 26, CEIN, 0, -1), rnode(GOUT, 68, 26, 46) },
  { pnode(GPIO, 68, 26, CEOUT, 0, -1), rnode(GOUT, 68, 26, 47) },
  { pnode(GPIO, 68, 26, ACLR, 0, -1), rnode(GOUT, 68, 26, 48) },
  { pnode(GPIO, 68, 26, SCLR, 0, -1), rnode(GOUT, 68, 26, 55) },
  { pnode(GPIO, 68, 26, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 26, 14) },
  { pnode(GPIO, 68, 26, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 26, 15) },
  { pnode(GPIO, 68, 26, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 26, 12) },
  { pnode(GPIO, 68, 26, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 26, 13) },
  { pnode(GPIO, 68, 26, DATAIN, 1, 0), rnode(GOUT, 68, 26, 39) },
  { pnode(GPIO, 68, 26, DATAIN, 1, 1), rnode(GOUT, 68, 26, 40) },
  { pnode(GPIO, 68, 26, DATAIN, 1, 2), rnode(GOUT, 68, 26, 41) },
  { pnode(GPIO, 68, 26, DATAIN, 1, 3), rnode(GOUT, 68, 26, 42) },
  { pnode(GPIO, 68, 26, DATAOUT, 1, 0), rnode(GIN, 68, 26, 42) },
  { pnode(GPIO, 68, 26, DATAOUT, 1, 1), rnode(GIN, 68, 26, 43) },
  { pnode(GPIO, 68, 26, DATAOUT, 1, 2), rnode(GIN, 68, 26, 44) },
  { pnode(GPIO, 68, 26, DATAOUT, 1, 3), rnode(GIN, 68, 26, 45) },
  { pnode(GPIO, 68, 26, DATAOUT, 1, 4), rnode(GIN, 68, 26, 46) },
  { pnode(GPIO, 68, 26, OEIN, 1, 0), rnode(GOUT, 68, 26, 43) },
  { pnode(GPIO, 68, 26, OEIN, 1, 1), rnode(GOUT, 68, 26, 44) },
  { pnode(GPIO, 68, 26, BSLIPMAX, 1, -1), rnode(GIN, 68, 26, 41) },
  { pnode(GPIO, 68, 26, CEIN, 1, -1), rnode(GOUT, 68, 26, 36) },
  { pnode(GPIO, 68, 26, CEOUT, 1, -1), rnode(GOUT, 68, 26, 37) },
  { pnode(GPIO, 68, 26, ACLR, 1, -1), rnode(GOUT, 68, 26, 38) },
  { pnode(GPIO, 68, 26, SCLR, 1, -1), rnode(GOUT, 68, 26, 45) },
  { pnode(GPIO, 68, 26, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 26, 10) },
  { pnode(GPIO, 68, 26, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 26, 11) },
  { pnode(GPIO, 68, 26, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 26, 8) },
  { pnode(GPIO, 68, 26, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 26, 9) },
  { pnode(GPIO, 68, 26, DATAIN, 2, 0), rnode(GOUT, 68, 26, 29) },
  { pnode(GPIO, 68, 26, DATAIN, 2, 1), rnode(GOUT, 68, 26, 30) },
  { pnode(GPIO, 68, 26, DATAIN, 2, 2), rnode(GOUT, 68, 26, 31) },
  { pnode(GPIO, 68, 26, DATAIN, 2, 3), rnode(GOUT, 68, 26, 32) },
  { pnode(GPIO, 68, 26, DATAOUT, 2, 0), rnode(GIN, 68, 26, 36) },
  { pnode(GPIO, 68, 26, DATAOUT, 2, 1), rnode(GIN, 68, 26, 37) },
  { pnode(GPIO, 68, 26, DATAOUT, 2, 2), rnode(GIN, 68, 26, 40) },
  { pnode(GPIO, 68, 26, DATAOUT, 2, 3), rnode(GIN, 68, 26, 38) },
  { pnode(GPIO, 68, 26, DATAOUT, 2, 4), rnode(GIN, 68, 26, 39) },
  { pnode(GPIO, 68, 26, OEIN, 2, 0), rnode(GOUT, 68, 26, 33) },
  { pnode(GPIO, 68, 26, OEIN, 2, 1), rnode(GOUT, 68, 26, 34) },
  { pnode(GPIO, 68, 26, BSLIPMAX, 2, -1), rnode(GIN, 68, 26, 35) },
  { pnode(GPIO, 68, 26, CEIN, 2, -1), rnode(GOUT, 68, 26, 26) },
  { pnode(GPIO, 68, 26, CEOUT, 2, -1), rnode(GOUT, 68, 26, 27) },
  { pnode(GPIO, 68, 26, ACLR, 2, -1), rnode(GOUT, 68, 26, 28) },
  { pnode(GPIO, 68, 26, SCLR, 2, -1), rnode(GOUT, 68, 26, 35) },
  { pnode(GPIO, 68, 26, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 26, 6) },
  { pnode(GPIO, 68, 26, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 26, 7) },
  { pnode(GPIO, 68, 26, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 26, 4) },
  { pnode(GPIO, 68, 26, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 26, 5) },
  { pnode(GPIO, 68, 26, DATAIN, 3, 0), rnode(GOUT, 68, 26, 19) },
  { pnode(GPIO, 68, 26, DATAIN, 3, 1), rnode(GOUT, 68, 26, 20) },
  { pnode(GPIO, 68, 26, DATAIN, 3, 2), rnode(GOUT, 68, 26, 21) },
  { pnode(GPIO, 68, 26, DATAIN, 3, 3), rnode(GOUT, 68, 26, 22) },
  { pnode(GPIO, 68, 26, DATAOUT, 3, 0), rnode(GIN, 68, 26, 30) },
  { pnode(GPIO, 68, 26, DATAOUT, 3, 1), rnode(GIN, 68, 26, 31) },
  { pnode(GPIO, 68, 26, DATAOUT, 3, 2), rnode(GIN, 68, 26, 32) },
  { pnode(GPIO, 68, 26, DATAOUT, 3, 3), rnode(GIN, 68, 26, 33) },
  { pnode(GPIO, 68, 26, DATAOUT, 3, 4), rnode(GIN, 68, 26, 34) },
  { pnode(GPIO, 68, 26, OEIN, 3, 0), rnode(GOUT, 68, 26, 23) },
  { pnode(GPIO, 68, 26, OEIN, 3, 1), rnode(GOUT, 68, 26, 24) },
  { pnode(GPIO, 68, 26, BSLIPMAX, 3, -1), rnode(GIN, 68, 26, 29) },
  { pnode(GPIO, 68, 26, CEIN, 3, -1), rnode(GOUT, 68, 26, 16) },
  { pnode(GPIO, 68, 26, CEOUT, 3, -1), rnode(GOUT, 68, 26, 17) },
  { pnode(GPIO, 68, 26, ACLR, 3, -1), rnode(GOUT, 68, 26, 18) },
  { pnode(GPIO, 68, 26, SCLR, 3, -1), rnode(GOUT, 68, 26, 25) },
  { pnode(GPIO, 68, 26, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 26, 2) },
  { pnode(GPIO, 68, 26, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 26, 3) },
  { pnode(GPIO, 68, 26, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 26, 0) },
  { pnode(GPIO, 68, 26, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 26, 1) },
  { pnode(GPIO, 68, 27, DATAIN, 0, 0), rnode(GOUT, 68, 27, 49) },
  { pnode(GPIO, 68, 27, DATAIN, 0, 1), rnode(GOUT, 68, 27, 50) },
  { pnode(GPIO, 68, 27, DATAIN, 0, 2), rnode(GOUT, 68, 27, 51) },
  { pnode(GPIO, 68, 27, DATAIN, 0, 3), rnode(GOUT, 68, 27, 52) },
  { pnode(GPIO, 68, 27, DATAOUT, 0, 0), rnode(GIN, 68, 27, 48) },
  { pnode(GPIO, 68, 27, DATAOUT, 0, 1), rnode(GIN, 68, 27, 49) },
  { pnode(GPIO, 68, 27, DATAOUT, 0, 2), rnode(GIN, 68, 27, 50) },
  { pnode(GPIO, 68, 27, DATAOUT, 0, 3), rnode(GIN, 68, 27, 51) },
  { pnode(GPIO, 68, 27, DATAOUT, 0, 4), rnode(GIN, 68, 27, 52) },
  { pnode(GPIO, 68, 27, OEIN, 0, 0), rnode(GOUT, 68, 27, 53) },
  { pnode(GPIO, 68, 27, OEIN, 0, 1), rnode(GOUT, 68, 27, 55) },
  { pnode(GPIO, 68, 27, BSLIPMAX, 0, -1), rnode(GIN, 68, 27, 47) },
  { pnode(GPIO, 68, 27, CEIN, 0, -1), rnode(GOUT, 68, 27, 46) },
  { pnode(GPIO, 68, 27, CEOUT, 0, -1), rnode(GOUT, 68, 27, 47) },
  { pnode(GPIO, 68, 27, ACLR, 0, -1), rnode(GOUT, 68, 27, 48) },
  { pnode(GPIO, 68, 27, SCLR, 0, -1), rnode(GOUT, 68, 27, 54) },
  { pnode(GPIO, 68, 27, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 27, 14) },
  { pnode(GPIO, 68, 27, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 27, 15) },
  { pnode(GPIO, 68, 27, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 27, 12) },
  { pnode(GPIO, 68, 27, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 27, 13) },
  { pnode(GPIO, 68, 27, DATAIN, 1, 0), rnode(GOUT, 68, 27, 39) },
  { pnode(GPIO, 68, 27, DATAIN, 1, 1), rnode(GOUT, 68, 27, 40) },
  { pnode(GPIO, 68, 27, DATAIN, 1, 2), rnode(GOUT, 68, 27, 41) },
  { pnode(GPIO, 68, 27, DATAIN, 1, 3), rnode(GOUT, 68, 27, 42) },
  { pnode(GPIO, 68, 27, DATAOUT, 1, 0), rnode(GIN, 68, 27, 42) },
  { pnode(GPIO, 68, 27, DATAOUT, 1, 1), rnode(GIN, 68, 27, 43) },
  { pnode(GPIO, 68, 27, DATAOUT, 1, 2), rnode(GIN, 68, 27, 44) },
  { pnode(GPIO, 68, 27, DATAOUT, 1, 3), rnode(GIN, 68, 27, 45) },
  { pnode(GPIO, 68, 27, DATAOUT, 1, 4), rnode(GIN, 68, 27, 46) },
  { pnode(GPIO, 68, 27, OEIN, 1, 0), rnode(GOUT, 68, 27, 43) },
  { pnode(GPIO, 68, 27, OEIN, 1, 1), rnode(GOUT, 68, 27, 44) },
  { pnode(GPIO, 68, 27, BSLIPMAX, 1, -1), rnode(GIN, 68, 27, 41) },
  { pnode(GPIO, 68, 27, CEIN, 1, -1), rnode(GOUT, 68, 27, 36) },
  { pnode(GPIO, 68, 27, CEOUT, 1, -1), rnode(GOUT, 68, 27, 37) },
  { pnode(GPIO, 68, 27, ACLR, 1, -1), rnode(GOUT, 68, 27, 38) },
  { pnode(GPIO, 68, 27, SCLR, 1, -1), rnode(GOUT, 68, 27, 45) },
  { pnode(GPIO, 68, 27, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 27, 10) },
  { pnode(GPIO, 68, 27, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 27, 11) },
  { pnode(GPIO, 68, 27, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 27, 8) },
  { pnode(GPIO, 68, 27, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 27, 9) },
  { pnode(GPIO, 68, 27, DATAIN, 2, 0), rnode(GOUT, 68, 27, 29) },
  { pnode(GPIO, 68, 27, DATAIN, 2, 1), rnode(GOUT, 68, 27, 30) },
  { pnode(GPIO, 68, 27, DATAIN, 2, 2), rnode(GOUT, 68, 27, 31) },
  { pnode(GPIO, 68, 27, DATAIN, 2, 3), rnode(GOUT, 68, 27, 32) },
  { pnode(GPIO, 68, 27, DATAOUT, 2, 0), rnode(GIN, 68, 27, 36) },
  { pnode(GPIO, 68, 27, DATAOUT, 2, 1), rnode(GIN, 68, 27, 37) },
  { pnode(GPIO, 68, 27, DATAOUT, 2, 2), rnode(GIN, 68, 27, 40) },
  { pnode(GPIO, 68, 27, DATAOUT, 2, 3), rnode(GIN, 68, 27, 38) },
  { pnode(GPIO, 68, 27, DATAOUT, 2, 4), rnode(GIN, 68, 27, 39) },
  { pnode(GPIO, 68, 27, OEIN, 2, 0), rnode(GOUT, 68, 27, 33) },
  { pnode(GPIO, 68, 27, OEIN, 2, 1), rnode(GOUT, 68, 27, 34) },
  { pnode(GPIO, 68, 27, BSLIPMAX, 2, -1), rnode(GIN, 68, 27, 35) },
  { pnode(GPIO, 68, 27, CEIN, 2, -1), rnode(GOUT, 68, 27, 26) },
  { pnode(GPIO, 68, 27, CEOUT, 2, -1), rnode(GOUT, 68, 27, 27) },
  { pnode(GPIO, 68, 27, ACLR, 2, -1), rnode(GOUT, 68, 27, 28) },
  { pnode(GPIO, 68, 27, SCLR, 2, -1), rnode(GOUT, 68, 27, 35) },
  { pnode(GPIO, 68, 27, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 27, 6) },
  { pnode(GPIO, 68, 27, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 27, 7) },
  { pnode(GPIO, 68, 27, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 27, 4) },
  { pnode(GPIO, 68, 27, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 27, 5) },
  { pnode(GPIO, 68, 27, DATAIN, 3, 0), rnode(GOUT, 68, 27, 19) },
  { pnode(GPIO, 68, 27, DATAIN, 3, 1), rnode(GOUT, 68, 27, 20) },
  { pnode(GPIO, 68, 27, DATAIN, 3, 2), rnode(GOUT, 68, 27, 21) },
  { pnode(GPIO, 68, 27, DATAIN, 3, 3), rnode(GOUT, 68, 27, 22) },
  { pnode(GPIO, 68, 27, DATAOUT, 3, 0), rnode(GIN, 68, 27, 30) },
  { pnode(GPIO, 68, 27, DATAOUT, 3, 1), rnode(GIN, 68, 27, 31) },
  { pnode(GPIO, 68, 27, DATAOUT, 3, 2), rnode(GIN, 68, 27, 32) },
  { pnode(GPIO, 68, 27, DATAOUT, 3, 3), rnode(GIN, 68, 27, 33) },
  { pnode(GPIO, 68, 27, DATAOUT, 3, 4), rnode(GIN, 68, 27, 34) },
  { pnode(GPIO, 68, 27, OEIN, 3, 0), rnode(GOUT, 68, 27, 23) },
  { pnode(GPIO, 68, 27, OEIN, 3, 1), rnode(GOUT, 68, 27, 24) },
  { pnode(GPIO, 68, 27, BSLIPMAX, 3, -1), rnode(GIN, 68, 27, 29) },
  { pnode(GPIO, 68, 27, CEIN, 3, -1), rnode(GOUT, 68, 27, 16) },
  { pnode(GPIO, 68, 27, CEOUT, 3, -1), rnode(GOUT, 68, 27, 17) },
  { pnode(GPIO, 68, 27, ACLR, 3, -1), rnode(GOUT, 68, 27, 18) },
  { pnode(GPIO, 68, 27, SCLR, 3, -1), rnode(GOUT, 68, 27, 25) },
  { pnode(GPIO, 68, 27, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 27, 2) },
  { pnode(GPIO, 68, 27, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 27, 3) },
  { pnode(GPIO, 68, 27, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 27, 0) },
  { pnode(GPIO, 68, 27, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 27, 1) },
  { pnode(GPIO, 68, 32, DATAIN, 0, 0), rnode(GOUT, 68, 32, 49) },
  { pnode(GPIO, 68, 32, DATAIN, 0, 1), rnode(GOUT, 68, 32, 50) },
  { pnode(GPIO, 68, 32, DATAIN, 0, 2), rnode(GOUT, 68, 32, 51) },
  { pnode(GPIO, 68, 32, DATAIN, 0, 3), rnode(GOUT, 68, 32, 52) },
  { pnode(GPIO, 68, 32, DATAOUT, 0, 0), rnode(GIN, 68, 32, 48) },
  { pnode(GPIO, 68, 32, DATAOUT, 0, 1), rnode(GIN, 68, 32, 49) },
  { pnode(GPIO, 68, 32, DATAOUT, 0, 2), rnode(GIN, 68, 32, 50) },
  { pnode(GPIO, 68, 32, DATAOUT, 0, 3), rnode(GIN, 68, 32, 51) },
  { pnode(GPIO, 68, 32, DATAOUT, 0, 4), rnode(GIN, 68, 32, 52) },
  { pnode(GPIO, 68, 32, OEIN, 0, 0), rnode(GOUT, 68, 32, 53) },
  { pnode(GPIO, 68, 32, OEIN, 0, 1), rnode(GOUT, 68, 32, 54) },
  { pnode(GPIO, 68, 32, BSLIPMAX, 0, -1), rnode(GIN, 68, 32, 47) },
  { pnode(GPIO, 68, 32, CEIN, 0, -1), rnode(GOUT, 68, 32, 46) },
  { pnode(GPIO, 68, 32, CEOUT, 0, -1), rnode(GOUT, 68, 32, 47) },
  { pnode(GPIO, 68, 32, ACLR, 0, -1), rnode(GOUT, 68, 32, 48) },
  { pnode(GPIO, 68, 32, SCLR, 0, -1), rnode(GOUT, 68, 32, 55) },
  { pnode(GPIO, 68, 32, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 32, 14) },
  { pnode(GPIO, 68, 32, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 32, 15) },
  { pnode(GPIO, 68, 32, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 32, 12) },
  { pnode(GPIO, 68, 32, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 32, 13) },
  { pnode(GPIO, 68, 32, DATAIN, 1, 0), rnode(GOUT, 68, 32, 39) },
  { pnode(GPIO, 68, 32, DATAIN, 1, 1), rnode(GOUT, 68, 32, 40) },
  { pnode(GPIO, 68, 32, DATAIN, 1, 2), rnode(GOUT, 68, 32, 41) },
  { pnode(GPIO, 68, 32, DATAIN, 1, 3), rnode(GOUT, 68, 32, 42) },
  { pnode(GPIO, 68, 32, DATAOUT, 1, 0), rnode(GIN, 68, 32, 42) },
  { pnode(GPIO, 68, 32, DATAOUT, 1, 1), rnode(GIN, 68, 32, 43) },
  { pnode(GPIO, 68, 32, DATAOUT, 1, 2), rnode(GIN, 68, 32, 44) },
  { pnode(GPIO, 68, 32, DATAOUT, 1, 3), rnode(GIN, 68, 32, 45) },
  { pnode(GPIO, 68, 32, DATAOUT, 1, 4), rnode(GIN, 68, 32, 46) },
  { pnode(GPIO, 68, 32, OEIN, 1, 0), rnode(GOUT, 68, 32, 43) },
  { pnode(GPIO, 68, 32, OEIN, 1, 1), rnode(GOUT, 68, 32, 44) },
  { pnode(GPIO, 68, 32, BSLIPMAX, 1, -1), rnode(GIN, 68, 32, 41) },
  { pnode(GPIO, 68, 32, CEIN, 1, -1), rnode(GOUT, 68, 32, 36) },
  { pnode(GPIO, 68, 32, CEOUT, 1, -1), rnode(GOUT, 68, 32, 37) },
  { pnode(GPIO, 68, 32, ACLR, 1, -1), rnode(GOUT, 68, 32, 38) },
  { pnode(GPIO, 68, 32, SCLR, 1, -1), rnode(GOUT, 68, 32, 45) },
  { pnode(GPIO, 68, 32, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 32, 10) },
  { pnode(GPIO, 68, 32, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 32, 11) },
  { pnode(GPIO, 68, 32, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 32, 8) },
  { pnode(GPIO, 68, 32, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 32, 9) },
  { pnode(GPIO, 68, 32, DATAIN, 2, 0), rnode(GOUT, 68, 32, 29) },
  { pnode(GPIO, 68, 32, DATAIN, 2, 1), rnode(GOUT, 68, 32, 30) },
  { pnode(GPIO, 68, 32, DATAIN, 2, 2), rnode(GOUT, 68, 32, 32) },
  { pnode(GPIO, 68, 32, DATAIN, 2, 3), rnode(GOUT, 68, 32, 33) },
  { pnode(GPIO, 68, 32, DATAOUT, 2, 0), rnode(GIN, 68, 32, 36) },
  { pnode(GPIO, 68, 32, DATAOUT, 2, 1), rnode(GIN, 68, 32, 37) },
  { pnode(GPIO, 68, 32, DATAOUT, 2, 2), rnode(GIN, 68, 32, 40) },
  { pnode(GPIO, 68, 32, DATAOUT, 2, 3), rnode(GIN, 68, 32, 38) },
  { pnode(GPIO, 68, 32, DATAOUT, 2, 4), rnode(GIN, 68, 32, 39) },
  { pnode(GPIO, 68, 32, OEIN, 2, 0), rnode(GOUT, 68, 32, 34) },
  { pnode(GPIO, 68, 32, OEIN, 2, 1), rnode(GOUT, 68, 32, 35) },
  { pnode(GPIO, 68, 32, BSLIPMAX, 2, -1), rnode(GIN, 68, 32, 35) },
  { pnode(GPIO, 68, 32, CEIN, 2, -1), rnode(GOUT, 68, 32, 26) },
  { pnode(GPIO, 68, 32, CEOUT, 2, -1), rnode(GOUT, 68, 32, 27) },
  { pnode(GPIO, 68, 32, ACLR, 2, -1), rnode(GOUT, 68, 32, 28) },
  { pnode(GPIO, 68, 32, SCLR, 2, -1), rnode(GOUT, 68, 32, 31) },
  { pnode(GPIO, 68, 32, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 32, 6) },
  { pnode(GPIO, 68, 32, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 32, 7) },
  { pnode(GPIO, 68, 32, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 32, 4) },
  { pnode(GPIO, 68, 32, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 32, 5) },
  { pnode(GPIO, 68, 32, DATAIN, 3, 0), rnode(GOUT, 68, 32, 19) },
  { pnode(GPIO, 68, 32, DATAIN, 3, 1), rnode(GOUT, 68, 32, 20) },
  { pnode(GPIO, 68, 32, DATAIN, 3, 2), rnode(GOUT, 68, 32, 21) },
  { pnode(GPIO, 68, 32, DATAIN, 3, 3), rnode(GOUT, 68, 32, 22) },
  { pnode(GPIO, 68, 32, DATAOUT, 3, 0), rnode(GIN, 68, 32, 30) },
  { pnode(GPIO, 68, 32, DATAOUT, 3, 1), rnode(GIN, 68, 32, 31) },
  { pnode(GPIO, 68, 32, DATAOUT, 3, 2), rnode(GIN, 68, 32, 32) },
  { pnode(GPIO, 68, 32, DATAOUT, 3, 3), rnode(GIN, 68, 32, 33) },
  { pnode(GPIO, 68, 32, DATAOUT, 3, 4), rnode(GIN, 68, 32, 34) },
  { pnode(GPIO, 68, 32, OEIN, 3, 0), rnode(GOUT, 68, 32, 23) },
  { pnode(GPIO, 68, 32, OEIN, 3, 1), rnode(GOUT, 68, 32, 24) },
  { pnode(GPIO, 68, 32, BSLIPMAX, 3, -1), rnode(GIN, 68, 32, 29) },
  { pnode(GPIO, 68, 32, CEIN, 3, -1), rnode(GOUT, 68, 32, 16) },
  { pnode(GPIO, 68, 32, CEOUT, 3, -1), rnode(GOUT, 68, 32, 17) },
  { pnode(GPIO, 68, 32, ACLR, 3, -1), rnode(GOUT, 68, 32, 18) },
  { pnode(GPIO, 68, 32, SCLR, 3, -1), rnode(GOUT, 68, 32, 25) },
  { pnode(GPIO, 68, 32, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 32, 2) },
  { pnode(GPIO, 68, 32, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 32, 3) },
  { pnode(GPIO, 68, 32, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 32, 0) },
  { pnode(GPIO, 68, 32, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 32, 1) },
  { pnode(GPIO, 68, 33, DATAIN, 0, 0), rnode(GOUT, 68, 33, 49) },
  { pnode(GPIO, 68, 33, DATAIN, 0, 1), rnode(GOUT, 68, 33, 50) },
  { pnode(GPIO, 68, 33, DATAIN, 0, 2), rnode(GOUT, 68, 33, 51) },
  { pnode(GPIO, 68, 33, DATAIN, 0, 3), rnode(GOUT, 68, 33, 52) },
  { pnode(GPIO, 68, 33, DATAOUT, 0, 0), rnode(GIN, 68, 33, 48) },
  { pnode(GPIO, 68, 33, DATAOUT, 0, 1), rnode(GIN, 68, 33, 49) },
  { pnode(GPIO, 68, 33, DATAOUT, 0, 2), rnode(GIN, 68, 33, 50) },
  { pnode(GPIO, 68, 33, DATAOUT, 0, 3), rnode(GIN, 68, 33, 51) },
  { pnode(GPIO, 68, 33, DATAOUT, 0, 4), rnode(GIN, 68, 33, 52) },
  { pnode(GPIO, 68, 33, OEIN, 0, 0), rnode(GOUT, 68, 33, 53) },
  { pnode(GPIO, 68, 33, OEIN, 0, 1), rnode(GOUT, 68, 33, 54) },
  { pnode(GPIO, 68, 33, BSLIPMAX, 0, -1), rnode(GIN, 68, 33, 47) },
  { pnode(GPIO, 68, 33, CEIN, 0, -1), rnode(GOUT, 68, 33, 46) },
  { pnode(GPIO, 68, 33, CEOUT, 0, -1), rnode(GOUT, 68, 33, 47) },
  { pnode(GPIO, 68, 33, ACLR, 0, -1), rnode(GOUT, 68, 33, 48) },
  { pnode(GPIO, 68, 33, SCLR, 0, -1), rnode(GOUT, 68, 33, 55) },
  { pnode(GPIO, 68, 33, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 33, 14) },
  { pnode(GPIO, 68, 33, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 33, 15) },
  { pnode(GPIO, 68, 33, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 33, 12) },
  { pnode(GPIO, 68, 33, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 33, 13) },
  { pnode(GPIO, 68, 33, DATAIN, 1, 0), rnode(GOUT, 68, 33, 39) },
  { pnode(GPIO, 68, 33, DATAIN, 1, 1), rnode(GOUT, 68, 33, 40) },
  { pnode(GPIO, 68, 33, DATAIN, 1, 2), rnode(GOUT, 68, 33, 41) },
  { pnode(GPIO, 68, 33, DATAIN, 1, 3), rnode(GOUT, 68, 33, 42) },
  { pnode(GPIO, 68, 33, DATAOUT, 1, 0), rnode(GIN, 68, 33, 42) },
  { pnode(GPIO, 68, 33, DATAOUT, 1, 1), rnode(GIN, 68, 33, 43) },
  { pnode(GPIO, 68, 33, DATAOUT, 1, 2), rnode(GIN, 68, 33, 44) },
  { pnode(GPIO, 68, 33, DATAOUT, 1, 3), rnode(GIN, 68, 33, 45) },
  { pnode(GPIO, 68, 33, DATAOUT, 1, 4), rnode(GIN, 68, 33, 46) },
  { pnode(GPIO, 68, 33, OEIN, 1, 0), rnode(GOUT, 68, 33, 43) },
  { pnode(GPIO, 68, 33, OEIN, 1, 1), rnode(GOUT, 68, 33, 44) },
  { pnode(GPIO, 68, 33, BSLIPMAX, 1, -1), rnode(GIN, 68, 33, 41) },
  { pnode(GPIO, 68, 33, CEIN, 1, -1), rnode(GOUT, 68, 33, 36) },
  { pnode(GPIO, 68, 33, CEOUT, 1, -1), rnode(GOUT, 68, 33, 37) },
  { pnode(GPIO, 68, 33, ACLR, 1, -1), rnode(GOUT, 68, 33, 38) },
  { pnode(GPIO, 68, 33, SCLR, 1, -1), rnode(GOUT, 68, 33, 45) },
  { pnode(GPIO, 68, 33, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 33, 10) },
  { pnode(GPIO, 68, 33, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 33, 11) },
  { pnode(GPIO, 68, 33, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 33, 8) },
  { pnode(GPIO, 68, 33, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 33, 9) },
  { pnode(GPIO, 68, 33, DATAIN, 2, 0), rnode(GOUT, 68, 33, 29) },
  { pnode(GPIO, 68, 33, DATAIN, 2, 1), rnode(GOUT, 68, 33, 30) },
  { pnode(GPIO, 68, 33, DATAIN, 2, 2), rnode(GOUT, 68, 33, 31) },
  { pnode(GPIO, 68, 33, DATAIN, 2, 3), rnode(GOUT, 68, 33, 32) },
  { pnode(GPIO, 68, 33, DATAOUT, 2, 0), rnode(GIN, 68, 33, 36) },
  { pnode(GPIO, 68, 33, DATAOUT, 2, 1), rnode(GIN, 68, 33, 37) },
  { pnode(GPIO, 68, 33, DATAOUT, 2, 2), rnode(GIN, 68, 33, 40) },
  { pnode(GPIO, 68, 33, DATAOUT, 2, 3), rnode(GIN, 68, 33, 38) },
  { pnode(GPIO, 68, 33, DATAOUT, 2, 4), rnode(GIN, 68, 33, 39) },
  { pnode(GPIO, 68, 33, OEIN, 2, 0), rnode(GOUT, 68, 33, 33) },
  { pnode(GPIO, 68, 33, OEIN, 2, 1), rnode(GOUT, 68, 33, 34) },
  { pnode(GPIO, 68, 33, BSLIPMAX, 2, -1), rnode(GIN, 68, 33, 35) },
  { pnode(GPIO, 68, 33, CEIN, 2, -1), rnode(GOUT, 68, 33, 26) },
  { pnode(GPIO, 68, 33, CEOUT, 2, -1), rnode(GOUT, 68, 33, 27) },
  { pnode(GPIO, 68, 33, ACLR, 2, -1), rnode(GOUT, 68, 33, 28) },
  { pnode(GPIO, 68, 33, SCLR, 2, -1), rnode(GOUT, 68, 33, 35) },
  { pnode(GPIO, 68, 33, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 33, 6) },
  { pnode(GPIO, 68, 33, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 33, 7) },
  { pnode(GPIO, 68, 33, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 33, 4) },
  { pnode(GPIO, 68, 33, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 33, 5) },
  { pnode(GPIO, 68, 33, DATAIN, 3, 0), rnode(GOUT, 68, 33, 19) },
  { pnode(GPIO, 68, 33, DATAIN, 3, 1), rnode(GOUT, 68, 33, 20) },
  { pnode(GPIO, 68, 33, DATAIN, 3, 2), rnode(GOUT, 68, 33, 21) },
  { pnode(GPIO, 68, 33, DATAIN, 3, 3), rnode(GOUT, 68, 33, 22) },
  { pnode(GPIO, 68, 33, DATAOUT, 3, 0), rnode(GIN, 68, 33, 30) },
  { pnode(GPIO, 68, 33, DATAOUT, 3, 1), rnode(GIN, 68, 33, 31) },
  { pnode(GPIO, 68, 33, DATAOUT, 3, 2), rnode(GIN, 68, 33, 32) },
  { pnode(GPIO, 68, 33, DATAOUT, 3, 3), rnode(GIN, 68, 33, 33) },
  { pnode(GPIO, 68, 33, DATAOUT, 3, 4), rnode(GIN, 68, 33, 34) },
  { pnode(GPIO, 68, 33, OEIN, 3, 0), rnode(GOUT, 68, 33, 23) },
  { pnode(GPIO, 68, 33, OEIN, 3, 1), rnode(GOUT, 68, 33, 24) },
  { pnode(GPIO, 68, 33, BSLIPMAX, 3, -1), rnode(GIN, 68, 33, 29) },
  { pnode(GPIO, 68, 33, CEIN, 3, -1), rnode(GOUT, 68, 33, 16) },
  { pnode(GPIO, 68, 33, CEOUT, 3, -1), rnode(GOUT, 68, 33, 17) },
  { pnode(GPIO, 68, 33, ACLR, 3, -1), rnode(GOUT, 68, 33, 18) },
  { pnode(GPIO, 68, 33, SCLR, 3, -1), rnode(GOUT, 68, 33, 25) },
  { pnode(GPIO, 68, 33, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 33, 2) },
  { pnode(GPIO, 68, 33, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 33, 3) },
  { pnode(GPIO, 68, 33, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 33, 0) },
  { pnode(GPIO, 68, 33, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 33, 1) },
  { pnode(GPIO, 68, 35, DATAIN, 0, 0), rnode(GOUT, 68, 35, 49) },
  { pnode(GPIO, 68, 35, DATAIN, 0, 1), rnode(GOUT, 68, 35, 50) },
  { pnode(GPIO, 68, 35, DATAIN, 0, 2), rnode(GOUT, 68, 35, 51) },
  { pnode(GPIO, 68, 35, DATAIN, 0, 3), rnode(GOUT, 68, 35, 52) },
  { pnode(GPIO, 68, 35, DATAOUT, 0, 0), rnode(GIN, 68, 35, 48) },
  { pnode(GPIO, 68, 35, DATAOUT, 0, 1), rnode(GIN, 68, 35, 49) },
  { pnode(GPIO, 68, 35, DATAOUT, 0, 2), rnode(GIN, 68, 35, 50) },
  { pnode(GPIO, 68, 35, DATAOUT, 0, 3), rnode(GIN, 68, 35, 51) },
  { pnode(GPIO, 68, 35, DATAOUT, 0, 4), rnode(GIN, 68, 35, 52) },
  { pnode(GPIO, 68, 35, OEIN, 0, 0), rnode(GOUT, 68, 35, 53) },
  { pnode(GPIO, 68, 35, OEIN, 0, 1), rnode(GOUT, 68, 35, 54) },
  { pnode(GPIO, 68, 35, BSLIPMAX, 0, -1), rnode(GIN, 68, 35, 47) },
  { pnode(GPIO, 68, 35, CEIN, 0, -1), rnode(GOUT, 68, 35, 46) },
  { pnode(GPIO, 68, 35, CEOUT, 0, -1), rnode(GOUT, 68, 35, 47) },
  { pnode(GPIO, 68, 35, ACLR, 0, -1), rnode(GOUT, 68, 35, 48) },
  { pnode(GPIO, 68, 35, SCLR, 0, -1), rnode(GOUT, 68, 35, 55) },
  { pnode(GPIO, 68, 35, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 35, 14) },
  { pnode(GPIO, 68, 35, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 35, 15) },
  { pnode(GPIO, 68, 35, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 35, 12) },
  { pnode(GPIO, 68, 35, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 35, 13) },
  { pnode(GPIO, 68, 35, DATAIN, 1, 0), rnode(GOUT, 68, 35, 39) },
  { pnode(GPIO, 68, 35, DATAIN, 1, 1), rnode(GOUT, 68, 35, 40) },
  { pnode(GPIO, 68, 35, DATAIN, 1, 2), rnode(GOUT, 68, 35, 41) },
  { pnode(GPIO, 68, 35, DATAIN, 1, 3), rnode(GOUT, 68, 35, 42) },
  { pnode(GPIO, 68, 35, DATAOUT, 1, 0), rnode(GIN, 68, 35, 42) },
  { pnode(GPIO, 68, 35, DATAOUT, 1, 1), rnode(GIN, 68, 35, 43) },
  { pnode(GPIO, 68, 35, DATAOUT, 1, 2), rnode(GIN, 68, 35, 44) },
  { pnode(GPIO, 68, 35, DATAOUT, 1, 3), rnode(GIN, 68, 35, 45) },
  { pnode(GPIO, 68, 35, DATAOUT, 1, 4), rnode(GIN, 68, 35, 46) },
  { pnode(GPIO, 68, 35, OEIN, 1, 0), rnode(GOUT, 68, 35, 43) },
  { pnode(GPIO, 68, 35, OEIN, 1, 1), rnode(GOUT, 68, 35, 44) },
  { pnode(GPIO, 68, 35, BSLIPMAX, 1, -1), rnode(GIN, 68, 35, 41) },
  { pnode(GPIO, 68, 35, CEIN, 1, -1), rnode(GOUT, 68, 35, 36) },
  { pnode(GPIO, 68, 35, CEOUT, 1, -1), rnode(GOUT, 68, 35, 37) },
  { pnode(GPIO, 68, 35, ACLR, 1, -1), rnode(GOUT, 68, 35, 38) },
  { pnode(GPIO, 68, 35, SCLR, 1, -1), rnode(GOUT, 68, 35, 45) },
  { pnode(GPIO, 68, 35, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 35, 10) },
  { pnode(GPIO, 68, 35, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 35, 11) },
  { pnode(GPIO, 68, 35, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 35, 8) },
  { pnode(GPIO, 68, 35, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 35, 9) },
  { pnode(GPIO, 68, 35, DATAIN, 2, 0), rnode(GOUT, 68, 35, 29) },
  { pnode(GPIO, 68, 35, DATAIN, 2, 1), rnode(GOUT, 68, 35, 30) },
  { pnode(GPIO, 68, 35, DATAIN, 2, 2), rnode(GOUT, 68, 35, 31) },
  { pnode(GPIO, 68, 35, DATAIN, 2, 3), rnode(GOUT, 68, 35, 32) },
  { pnode(GPIO, 68, 35, DATAOUT, 2, 0), rnode(GIN, 68, 35, 36) },
  { pnode(GPIO, 68, 35, DATAOUT, 2, 1), rnode(GIN, 68, 35, 37) },
  { pnode(GPIO, 68, 35, DATAOUT, 2, 2), rnode(GIN, 68, 35, 40) },
  { pnode(GPIO, 68, 35, DATAOUT, 2, 3), rnode(GIN, 68, 35, 38) },
  { pnode(GPIO, 68, 35, DATAOUT, 2, 4), rnode(GIN, 68, 35, 39) },
  { pnode(GPIO, 68, 35, OEIN, 2, 0), rnode(GOUT, 68, 35, 33) },
  { pnode(GPIO, 68, 35, OEIN, 2, 1), rnode(GOUT, 68, 35, 34) },
  { pnode(GPIO, 68, 35, BSLIPMAX, 2, -1), rnode(GIN, 68, 35, 35) },
  { pnode(GPIO, 68, 35, CEIN, 2, -1), rnode(GOUT, 68, 35, 26) },
  { pnode(GPIO, 68, 35, CEOUT, 2, -1), rnode(GOUT, 68, 35, 27) },
  { pnode(GPIO, 68, 35, ACLR, 2, -1), rnode(GOUT, 68, 35, 28) },
  { pnode(GPIO, 68, 35, SCLR, 2, -1), rnode(GOUT, 68, 35, 35) },
  { pnode(GPIO, 68, 35, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 35, 6) },
  { pnode(GPIO, 68, 35, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 35, 7) },
  { pnode(GPIO, 68, 35, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 35, 4) },
  { pnode(GPIO, 68, 35, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 35, 5) },
  { pnode(GPIO, 68, 35, DATAIN, 3, 0), rnode(GOUT, 68, 35, 19) },
  { pnode(GPIO, 68, 35, DATAIN, 3, 1), rnode(GOUT, 68, 35, 20) },
  { pnode(GPIO, 68, 35, DATAIN, 3, 2), rnode(GOUT, 68, 35, 21) },
  { pnode(GPIO, 68, 35, DATAIN, 3, 3), rnode(GOUT, 68, 35, 22) },
  { pnode(GPIO, 68, 35, DATAOUT, 3, 0), rnode(GIN, 68, 35, 30) },
  { pnode(GPIO, 68, 35, DATAOUT, 3, 1), rnode(GIN, 68, 35, 31) },
  { pnode(GPIO, 68, 35, DATAOUT, 3, 2), rnode(GIN, 68, 35, 32) },
  { pnode(GPIO, 68, 35, DATAOUT, 3, 3), rnode(GIN, 68, 35, 33) },
  { pnode(GPIO, 68, 35, DATAOUT, 3, 4), rnode(GIN, 68, 35, 34) },
  { pnode(GPIO, 68, 35, OEIN, 3, 0), rnode(GOUT, 68, 35, 23) },
  { pnode(GPIO, 68, 35, OEIN, 3, 1), rnode(GOUT, 68, 35, 24) },
  { pnode(GPIO, 68, 35, BSLIPMAX, 3, -1), rnode(GIN, 68, 35, 29) },
  { pnode(GPIO, 68, 35, CEIN, 3, -1), rnode(GOUT, 68, 35, 16) },
  { pnode(GPIO, 68, 35, CEOUT, 3, -1), rnode(GOUT, 68, 35, 17) },
  { pnode(GPIO, 68, 35, ACLR, 3, -1), rnode(GOUT, 68, 35, 18) },
  { pnode(GPIO, 68, 35, SCLR, 3, -1), rnode(GOUT, 68, 35, 25) },
  { pnode(GPIO, 68, 35, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 35, 2) },
  { pnode(GPIO, 68, 35, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 35, 3) },
  { pnode(GPIO, 68, 35, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 35, 0) },
  { pnode(GPIO, 68, 35, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 35, 1) },
  { pnode(GPIO, 68, 37, DATAIN, 0, 0), rnode(GOUT, 68, 37, 49) },
  { pnode(GPIO, 68, 37, DATAIN, 0, 1), rnode(GOUT, 68, 37, 50) },
  { pnode(GPIO, 68, 37, DATAIN, 0, 2), rnode(GOUT, 68, 37, 51) },
  { pnode(GPIO, 68, 37, DATAIN, 0, 3), rnode(GOUT, 68, 37, 52) },
  { pnode(GPIO, 68, 37, DATAOUT, 0, 0), rnode(GIN, 68, 37, 48) },
  { pnode(GPIO, 68, 37, DATAOUT, 0, 1), rnode(GIN, 68, 37, 49) },
  { pnode(GPIO, 68, 37, DATAOUT, 0, 2), rnode(GIN, 68, 37, 50) },
  { pnode(GPIO, 68, 37, DATAOUT, 0, 3), rnode(GIN, 68, 37, 51) },
  { pnode(GPIO, 68, 37, DATAOUT, 0, 4), rnode(GIN, 68, 37, 52) },
  { pnode(GPIO, 68, 37, OEIN, 0, 0), rnode(GOUT, 68, 37, 53) },
  { pnode(GPIO, 68, 37, OEIN, 0, 1), rnode(GOUT, 68, 37, 55) },
  { pnode(GPIO, 68, 37, BSLIPMAX, 0, -1), rnode(GIN, 68, 37, 47) },
  { pnode(GPIO, 68, 37, CEIN, 0, -1), rnode(GOUT, 68, 37, 46) },
  { pnode(GPIO, 68, 37, CEOUT, 0, -1), rnode(GOUT, 68, 37, 47) },
  { pnode(GPIO, 68, 37, ACLR, 0, -1), rnode(GOUT, 68, 37, 48) },
  { pnode(GPIO, 68, 37, SCLR, 0, -1), rnode(GOUT, 68, 37, 54) },
  { pnode(GPIO, 68, 37, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 37, 14) },
  { pnode(GPIO, 68, 37, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 37, 15) },
  { pnode(GPIO, 68, 37, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 37, 12) },
  { pnode(GPIO, 68, 37, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 37, 13) },
  { pnode(GPIO, 68, 37, DATAIN, 1, 0), rnode(GOUT, 68, 37, 39) },
  { pnode(GPIO, 68, 37, DATAIN, 1, 1), rnode(GOUT, 68, 37, 40) },
  { pnode(GPIO, 68, 37, DATAIN, 1, 2), rnode(GOUT, 68, 37, 41) },
  { pnode(GPIO, 68, 37, DATAIN, 1, 3), rnode(GOUT, 68, 37, 42) },
  { pnode(GPIO, 68, 37, DATAOUT, 1, 0), rnode(GIN, 68, 37, 42) },
  { pnode(GPIO, 68, 37, DATAOUT, 1, 1), rnode(GIN, 68, 37, 43) },
  { pnode(GPIO, 68, 37, DATAOUT, 1, 2), rnode(GIN, 68, 37, 44) },
  { pnode(GPIO, 68, 37, DATAOUT, 1, 3), rnode(GIN, 68, 37, 45) },
  { pnode(GPIO, 68, 37, DATAOUT, 1, 4), rnode(GIN, 68, 37, 46) },
  { pnode(GPIO, 68, 37, OEIN, 1, 0), rnode(GOUT, 68, 37, 43) },
  { pnode(GPIO, 68, 37, OEIN, 1, 1), rnode(GOUT, 68, 37, 44) },
  { pnode(GPIO, 68, 37, BSLIPMAX, 1, -1), rnode(GIN, 68, 37, 41) },
  { pnode(GPIO, 68, 37, CEIN, 1, -1), rnode(GOUT, 68, 37, 36) },
  { pnode(GPIO, 68, 37, CEOUT, 1, -1), rnode(GOUT, 68, 37, 37) },
  { pnode(GPIO, 68, 37, ACLR, 1, -1), rnode(GOUT, 68, 37, 38) },
  { pnode(GPIO, 68, 37, SCLR, 1, -1), rnode(GOUT, 68, 37, 45) },
  { pnode(GPIO, 68, 37, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 37, 10) },
  { pnode(GPIO, 68, 37, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 37, 11) },
  { pnode(GPIO, 68, 37, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 37, 8) },
  { pnode(GPIO, 68, 37, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 37, 9) },
  { pnode(GPIO, 68, 37, DATAIN, 2, 0), rnode(GOUT, 68, 37, 29) },
  { pnode(GPIO, 68, 37, DATAIN, 2, 1), rnode(GOUT, 68, 37, 30) },
  { pnode(GPIO, 68, 37, DATAIN, 2, 2), rnode(GOUT, 68, 37, 31) },
  { pnode(GPIO, 68, 37, DATAIN, 2, 3), rnode(GOUT, 68, 37, 32) },
  { pnode(GPIO, 68, 37, DATAOUT, 2, 0), rnode(GIN, 68, 37, 36) },
  { pnode(GPIO, 68, 37, DATAOUT, 2, 1), rnode(GIN, 68, 37, 37) },
  { pnode(GPIO, 68, 37, DATAOUT, 2, 2), rnode(GIN, 68, 37, 40) },
  { pnode(GPIO, 68, 37, DATAOUT, 2, 3), rnode(GIN, 68, 37, 38) },
  { pnode(GPIO, 68, 37, DATAOUT, 2, 4), rnode(GIN, 68, 37, 39) },
  { pnode(GPIO, 68, 37, OEIN, 2, 0), rnode(GOUT, 68, 37, 33) },
  { pnode(GPIO, 68, 37, OEIN, 2, 1), rnode(GOUT, 68, 37, 34) },
  { pnode(GPIO, 68, 37, BSLIPMAX, 2, -1), rnode(GIN, 68, 37, 35) },
  { pnode(GPIO, 68, 37, CEIN, 2, -1), rnode(GOUT, 68, 37, 26) },
  { pnode(GPIO, 68, 37, CEOUT, 2, -1), rnode(GOUT, 68, 37, 27) },
  { pnode(GPIO, 68, 37, ACLR, 2, -1), rnode(GOUT, 68, 37, 28) },
  { pnode(GPIO, 68, 37, SCLR, 2, -1), rnode(GOUT, 68, 37, 35) },
  { pnode(GPIO, 68, 37, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 37, 6) },
  { pnode(GPIO, 68, 37, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 37, 7) },
  { pnode(GPIO, 68, 37, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 37, 4) },
  { pnode(GPIO, 68, 37, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 37, 5) },
  { pnode(GPIO, 68, 37, DATAIN, 3, 0), rnode(GOUT, 68, 37, 19) },
  { pnode(GPIO, 68, 37, DATAIN, 3, 1), rnode(GOUT, 68, 37, 20) },
  { pnode(GPIO, 68, 37, DATAIN, 3, 2), rnode(GOUT, 68, 37, 21) },
  { pnode(GPIO, 68, 37, DATAIN, 3, 3), rnode(GOUT, 68, 37, 22) },
  { pnode(GPIO, 68, 37, DATAOUT, 3, 0), rnode(GIN, 68, 37, 30) },
  { pnode(GPIO, 68, 37, DATAOUT, 3, 1), rnode(GIN, 68, 37, 31) },
  { pnode(GPIO, 68, 37, DATAOUT, 3, 2), rnode(GIN, 68, 37, 32) },
  { pnode(GPIO, 68, 37, DATAOUT, 3, 3), rnode(GIN, 68, 37, 33) },
  { pnode(GPIO, 68, 37, DATAOUT, 3, 4), rnode(GIN, 68, 37, 34) },
  { pnode(GPIO, 68, 37, OEIN, 3, 0), rnode(GOUT, 68, 37, 23) },
  { pnode(GPIO, 68, 37, OEIN, 3, 1), rnode(GOUT, 68, 37, 24) },
  { pnode(GPIO, 68, 37, BSLIPMAX, 3, -1), rnode(GIN, 68, 37, 29) },
  { pnode(GPIO, 68, 37, CEIN, 3, -1), rnode(GOUT, 68, 37, 16) },
  { pnode(GPIO, 68, 37, CEOUT, 3, -1), rnode(GOUT, 68, 37, 17) },
  { pnode(GPIO, 68, 37, ACLR, 3, -1), rnode(GOUT, 68, 37, 18) },
  { pnode(GPIO, 68, 37, SCLR, 3, -1), rnode(GOUT, 68, 37, 25) },
  { pnode(GPIO, 68, 37, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 37, 2) },
  { pnode(GPIO, 68, 37, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 37, 3) },
  { pnode(GPIO, 68, 37, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 37, 0) },
  { pnode(GPIO, 68, 37, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 37, 1) },
  { pnode(GPIO, 68, 40, DATAIN, 0, 0), rnode(GOUT, 68, 40, 49) },
  { pnode(GPIO, 68, 40, DATAIN, 0, 1), rnode(GOUT, 68, 40, 50) },
  { pnode(GPIO, 68, 40, DATAIN, 0, 2), rnode(GOUT, 68, 40, 51) },
  { pnode(GPIO, 68, 40, DATAIN, 0, 3), rnode(GOUT, 68, 40, 52) },
  { pnode(GPIO, 68, 40, DATAOUT, 0, 0), rnode(GIN, 68, 40, 48) },
  { pnode(GPIO, 68, 40, DATAOUT, 0, 1), rnode(GIN, 68, 40, 49) },
  { pnode(GPIO, 68, 40, DATAOUT, 0, 2), rnode(GIN, 68, 40, 50) },
  { pnode(GPIO, 68, 40, DATAOUT, 0, 3), rnode(GIN, 68, 40, 51) },
  { pnode(GPIO, 68, 40, DATAOUT, 0, 4), rnode(GIN, 68, 40, 52) },
  { pnode(GPIO, 68, 40, OEIN, 0, 0), rnode(GOUT, 68, 40, 53) },
  { pnode(GPIO, 68, 40, OEIN, 0, 1), rnode(GOUT, 68, 40, 54) },
  { pnode(GPIO, 68, 40, BSLIPMAX, 0, -1), rnode(GIN, 68, 40, 47) },
  { pnode(GPIO, 68, 40, CEIN, 0, -1), rnode(GOUT, 68, 40, 46) },
  { pnode(GPIO, 68, 40, CEOUT, 0, -1), rnode(GOUT, 68, 40, 47) },
  { pnode(GPIO, 68, 40, ACLR, 0, -1), rnode(GOUT, 68, 40, 48) },
  { pnode(GPIO, 68, 40, SCLR, 0, -1), rnode(GOUT, 68, 40, 55) },
  { pnode(GPIO, 68, 40, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 40, 14) },
  { pnode(GPIO, 68, 40, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 40, 15) },
  { pnode(GPIO, 68, 40, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 40, 12) },
  { pnode(GPIO, 68, 40, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 40, 13) },
  { pnode(GPIO, 68, 40, DATAIN, 1, 0), rnode(GOUT, 68, 40, 39) },
  { pnode(GPIO, 68, 40, DATAIN, 1, 1), rnode(GOUT, 68, 40, 40) },
  { pnode(GPIO, 68, 40, DATAIN, 1, 2), rnode(GOUT, 68, 40, 41) },
  { pnode(GPIO, 68, 40, DATAIN, 1, 3), rnode(GOUT, 68, 40, 42) },
  { pnode(GPIO, 68, 40, DATAOUT, 1, 0), rnode(GIN, 68, 40, 42) },
  { pnode(GPIO, 68, 40, DATAOUT, 1, 1), rnode(GIN, 68, 40, 43) },
  { pnode(GPIO, 68, 40, DATAOUT, 1, 2), rnode(GIN, 68, 40, 44) },
  { pnode(GPIO, 68, 40, DATAOUT, 1, 3), rnode(GIN, 68, 40, 45) },
  { pnode(GPIO, 68, 40, DATAOUT, 1, 4), rnode(GIN, 68, 40, 46) },
  { pnode(GPIO, 68, 40, OEIN, 1, 0), rnode(GOUT, 68, 40, 43) },
  { pnode(GPIO, 68, 40, OEIN, 1, 1), rnode(GOUT, 68, 40, 44) },
  { pnode(GPIO, 68, 40, BSLIPMAX, 1, -1), rnode(GIN, 68, 40, 41) },
  { pnode(GPIO, 68, 40, CEIN, 1, -1), rnode(GOUT, 68, 40, 36) },
  { pnode(GPIO, 68, 40, CEOUT, 1, -1), rnode(GOUT, 68, 40, 37) },
  { pnode(GPIO, 68, 40, ACLR, 1, -1), rnode(GOUT, 68, 40, 38) },
  { pnode(GPIO, 68, 40, SCLR, 1, -1), rnode(GOUT, 68, 40, 45) },
  { pnode(GPIO, 68, 40, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 40, 10) },
  { pnode(GPIO, 68, 40, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 40, 11) },
  { pnode(GPIO, 68, 40, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 40, 8) },
  { pnode(GPIO, 68, 40, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 40, 9) },
  { pnode(GPIO, 68, 40, DATAIN, 2, 0), rnode(GOUT, 68, 40, 29) },
  { pnode(GPIO, 68, 40, DATAIN, 2, 1), rnode(GOUT, 68, 40, 30) },
  { pnode(GPIO, 68, 40, DATAIN, 2, 2), rnode(GOUT, 68, 40, 32) },
  { pnode(GPIO, 68, 40, DATAIN, 2, 3), rnode(GOUT, 68, 40, 33) },
  { pnode(GPIO, 68, 40, DATAOUT, 2, 0), rnode(GIN, 68, 40, 36) },
  { pnode(GPIO, 68, 40, DATAOUT, 2, 1), rnode(GIN, 68, 40, 37) },
  { pnode(GPIO, 68, 40, DATAOUT, 2, 2), rnode(GIN, 68, 40, 40) },
  { pnode(GPIO, 68, 40, DATAOUT, 2, 3), rnode(GIN, 68, 40, 38) },
  { pnode(GPIO, 68, 40, DATAOUT, 2, 4), rnode(GIN, 68, 40, 39) },
  { pnode(GPIO, 68, 40, OEIN, 2, 0), rnode(GOUT, 68, 40, 34) },
  { pnode(GPIO, 68, 40, OEIN, 2, 1), rnode(GOUT, 68, 40, 35) },
  { pnode(GPIO, 68, 40, BSLIPMAX, 2, -1), rnode(GIN, 68, 40, 35) },
  { pnode(GPIO, 68, 40, CEIN, 2, -1), rnode(GOUT, 68, 40, 26) },
  { pnode(GPIO, 68, 40, CEOUT, 2, -1), rnode(GOUT, 68, 40, 27) },
  { pnode(GPIO, 68, 40, ACLR, 2, -1), rnode(GOUT, 68, 40, 28) },
  { pnode(GPIO, 68, 40, SCLR, 2, -1), rnode(GOUT, 68, 40, 31) },
  { pnode(GPIO, 68, 40, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 40, 6) },
  { pnode(GPIO, 68, 40, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 40, 7) },
  { pnode(GPIO, 68, 40, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 40, 4) },
  { pnode(GPIO, 68, 40, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 40, 5) },
  { pnode(GPIO, 68, 40, DATAIN, 3, 0), rnode(GOUT, 68, 40, 19) },
  { pnode(GPIO, 68, 40, DATAIN, 3, 1), rnode(GOUT, 68, 40, 20) },
  { pnode(GPIO, 68, 40, DATAIN, 3, 2), rnode(GOUT, 68, 40, 21) },
  { pnode(GPIO, 68, 40, DATAIN, 3, 3), rnode(GOUT, 68, 40, 22) },
  { pnode(GPIO, 68, 40, DATAOUT, 3, 0), rnode(GIN, 68, 40, 30) },
  { pnode(GPIO, 68, 40, DATAOUT, 3, 1), rnode(GIN, 68, 40, 31) },
  { pnode(GPIO, 68, 40, DATAOUT, 3, 2), rnode(GIN, 68, 40, 32) },
  { pnode(GPIO, 68, 40, DATAOUT, 3, 3), rnode(GIN, 68, 40, 33) },
  { pnode(GPIO, 68, 40, DATAOUT, 3, 4), rnode(GIN, 68, 40, 34) },
  { pnode(GPIO, 68, 40, OEIN, 3, 0), rnode(GOUT, 68, 40, 23) },
  { pnode(GPIO, 68, 40, OEIN, 3, 1), rnode(GOUT, 68, 40, 24) },
  { pnode(GPIO, 68, 40, BSLIPMAX, 3, -1), rnode(GIN, 68, 40, 29) },
  { pnode(GPIO, 68, 40, CEIN, 3, -1), rnode(GOUT, 68, 40, 16) },
  { pnode(GPIO, 68, 40, CEOUT, 3, -1), rnode(GOUT, 68, 40, 17) },
  { pnode(GPIO, 68, 40, ACLR, 3, -1), rnode(GOUT, 68, 40, 18) },
  { pnode(GPIO, 68, 40, SCLR, 3, -1), rnode(GOUT, 68, 40, 25) },
  { pnode(GPIO, 68, 40, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 40, 2) },
  { pnode(GPIO, 68, 40, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 40, 3) },
  { pnode(GPIO, 68, 40, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 40, 0) },
  { pnode(GPIO, 68, 40, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 40, 1) },
  { pnode(GPIO, 68, 41, DATAIN, 0, 0), rnode(GOUT, 68, 41, 49) },
  { pnode(GPIO, 68, 41, DATAIN, 0, 1), rnode(GOUT, 68, 41, 50) },
  { pnode(GPIO, 68, 41, DATAIN, 0, 2), rnode(GOUT, 68, 41, 51) },
  { pnode(GPIO, 68, 41, DATAIN, 0, 3), rnode(GOUT, 68, 41, 52) },
  { pnode(GPIO, 68, 41, DATAOUT, 0, 0), rnode(GIN, 68, 41, 48) },
  { pnode(GPIO, 68, 41, DATAOUT, 0, 1), rnode(GIN, 68, 41, 49) },
  { pnode(GPIO, 68, 41, DATAOUT, 0, 2), rnode(GIN, 68, 41, 50) },
  { pnode(GPIO, 68, 41, DATAOUT, 0, 3), rnode(GIN, 68, 41, 51) },
  { pnode(GPIO, 68, 41, DATAOUT, 0, 4), rnode(GIN, 68, 41, 52) },
  { pnode(GPIO, 68, 41, OEIN, 0, 0), rnode(GOUT, 68, 41, 53) },
  { pnode(GPIO, 68, 41, OEIN, 0, 1), rnode(GOUT, 68, 41, 54) },
  { pnode(GPIO, 68, 41, BSLIPMAX, 0, -1), rnode(GIN, 68, 41, 47) },
  { pnode(GPIO, 68, 41, CEIN, 0, -1), rnode(GOUT, 68, 41, 46) },
  { pnode(GPIO, 68, 41, CEOUT, 0, -1), rnode(GOUT, 68, 41, 47) },
  { pnode(GPIO, 68, 41, ACLR, 0, -1), rnode(GOUT, 68, 41, 48) },
  { pnode(GPIO, 68, 41, SCLR, 0, -1), rnode(GOUT, 68, 41, 55) },
  { pnode(GPIO, 68, 41, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 41, 14) },
  { pnode(GPIO, 68, 41, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 41, 15) },
  { pnode(GPIO, 68, 41, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 41, 12) },
  { pnode(GPIO, 68, 41, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 41, 13) },
  { pnode(GPIO, 68, 41, DATAIN, 1, 0), rnode(GOUT, 68, 41, 39) },
  { pnode(GPIO, 68, 41, DATAIN, 1, 1), rnode(GOUT, 68, 41, 40) },
  { pnode(GPIO, 68, 41, DATAIN, 1, 2), rnode(GOUT, 68, 41, 41) },
  { pnode(GPIO, 68, 41, DATAIN, 1, 3), rnode(GOUT, 68, 41, 42) },
  { pnode(GPIO, 68, 41, DATAOUT, 1, 0), rnode(GIN, 68, 41, 42) },
  { pnode(GPIO, 68, 41, DATAOUT, 1, 1), rnode(GIN, 68, 41, 43) },
  { pnode(GPIO, 68, 41, DATAOUT, 1, 2), rnode(GIN, 68, 41, 44) },
  { pnode(GPIO, 68, 41, DATAOUT, 1, 3), rnode(GIN, 68, 41, 45) },
  { pnode(GPIO, 68, 41, DATAOUT, 1, 4), rnode(GIN, 68, 41, 46) },
  { pnode(GPIO, 68, 41, OEIN, 1, 0), rnode(GOUT, 68, 41, 43) },
  { pnode(GPIO, 68, 41, OEIN, 1, 1), rnode(GOUT, 68, 41, 44) },
  { pnode(GPIO, 68, 41, BSLIPMAX, 1, -1), rnode(GIN, 68, 41, 41) },
  { pnode(GPIO, 68, 41, CEIN, 1, -1), rnode(GOUT, 68, 41, 36) },
  { pnode(GPIO, 68, 41, CEOUT, 1, -1), rnode(GOUT, 68, 41, 37) },
  { pnode(GPIO, 68, 41, ACLR, 1, -1), rnode(GOUT, 68, 41, 38) },
  { pnode(GPIO, 68, 41, SCLR, 1, -1), rnode(GOUT, 68, 41, 45) },
  { pnode(GPIO, 68, 41, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 41, 10) },
  { pnode(GPIO, 68, 41, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 41, 11) },
  { pnode(GPIO, 68, 41, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 41, 8) },
  { pnode(GPIO, 68, 41, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 41, 9) },
  { pnode(GPIO, 68, 41, DATAIN, 2, 0), rnode(GOUT, 68, 41, 29) },
  { pnode(GPIO, 68, 41, DATAIN, 2, 1), rnode(GOUT, 68, 41, 30) },
  { pnode(GPIO, 68, 41, DATAIN, 2, 2), rnode(GOUT, 68, 41, 31) },
  { pnode(GPIO, 68, 41, DATAIN, 2, 3), rnode(GOUT, 68, 41, 32) },
  { pnode(GPIO, 68, 41, DATAOUT, 2, 0), rnode(GIN, 68, 41, 36) },
  { pnode(GPIO, 68, 41, DATAOUT, 2, 1), rnode(GIN, 68, 41, 37) },
  { pnode(GPIO, 68, 41, DATAOUT, 2, 2), rnode(GIN, 68, 41, 40) },
  { pnode(GPIO, 68, 41, DATAOUT, 2, 3), rnode(GIN, 68, 41, 38) },
  { pnode(GPIO, 68, 41, DATAOUT, 2, 4), rnode(GIN, 68, 41, 39) },
  { pnode(GPIO, 68, 41, OEIN, 2, 0), rnode(GOUT, 68, 41, 33) },
  { pnode(GPIO, 68, 41, OEIN, 2, 1), rnode(GOUT, 68, 41, 34) },
  { pnode(GPIO, 68, 41, BSLIPMAX, 2, -1), rnode(GIN, 68, 41, 35) },
  { pnode(GPIO, 68, 41, CEIN, 2, -1), rnode(GOUT, 68, 41, 26) },
  { pnode(GPIO, 68, 41, CEOUT, 2, -1), rnode(GOUT, 68, 41, 27) },
  { pnode(GPIO, 68, 41, ACLR, 2, -1), rnode(GOUT, 68, 41, 28) },
  { pnode(GPIO, 68, 41, SCLR, 2, -1), rnode(GOUT, 68, 41, 35) },
  { pnode(GPIO, 68, 41, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 41, 6) },
  { pnode(GPIO, 68, 41, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 41, 7) },
  { pnode(GPIO, 68, 41, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 41, 4) },
  { pnode(GPIO, 68, 41, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 41, 5) },
  { pnode(GPIO, 68, 41, DATAIN, 3, 0), rnode(GOUT, 68, 41, 19) },
  { pnode(GPIO, 68, 41, DATAIN, 3, 1), rnode(GOUT, 68, 41, 20) },
  { pnode(GPIO, 68, 41, DATAIN, 3, 2), rnode(GOUT, 68, 41, 21) },
  { pnode(GPIO, 68, 41, DATAIN, 3, 3), rnode(GOUT, 68, 41, 22) },
  { pnode(GPIO, 68, 41, DATAOUT, 3, 0), rnode(GIN, 68, 41, 30) },
  { pnode(GPIO, 68, 41, DATAOUT, 3, 1), rnode(GIN, 68, 41, 31) },
  { pnode(GPIO, 68, 41, DATAOUT, 3, 2), rnode(GIN, 68, 41, 32) },
  { pnode(GPIO, 68, 41, DATAOUT, 3, 3), rnode(GIN, 68, 41, 33) },
  { pnode(GPIO, 68, 41, DATAOUT, 3, 4), rnode(GIN, 68, 41, 34) },
  { pnode(GPIO, 68, 41, OEIN, 3, 0), rnode(GOUT, 68, 41, 23) },
  { pnode(GPIO, 68, 41, OEIN, 3, 1), rnode(GOUT, 68, 41, 24) },
  { pnode(GPIO, 68, 41, BSLIPMAX, 3, -1), rnode(GIN, 68, 41, 29) },
  { pnode(GPIO, 68, 41, CEIN, 3, -1), rnode(GOUT, 68, 41, 16) },
  { pnode(GPIO, 68, 41, CEOUT, 3, -1), rnode(GOUT, 68, 41, 17) },
  { pnode(GPIO, 68, 41, ACLR, 3, -1), rnode(GOUT, 68, 41, 18) },
  { pnode(GPIO, 68, 41, SCLR, 3, -1), rnode(GOUT, 68, 41, 25) },
  { pnode(GPIO, 68, 41, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 41, 2) },
  { pnode(GPIO, 68, 41, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 41, 3) },
  { pnode(GPIO, 68, 41, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 41, 0) },
  { pnode(GPIO, 68, 41, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 41, 1) },
  { pnode(GPIO, 68, 43, DATAIN, 0, 0), rnode(GOUT, 68, 43, 49) },
  { pnode(GPIO, 68, 43, DATAIN, 0, 1), rnode(GOUT, 68, 43, 50) },
  { pnode(GPIO, 68, 43, DATAIN, 0, 2), rnode(GOUT, 68, 43, 51) },
  { pnode(GPIO, 68, 43, DATAIN, 0, 3), rnode(GOUT, 68, 43, 52) },
  { pnode(GPIO, 68, 43, DATAOUT, 0, 0), rnode(GIN, 68, 43, 48) },
  { pnode(GPIO, 68, 43, DATAOUT, 0, 1), rnode(GIN, 68, 43, 49) },
  { pnode(GPIO, 68, 43, DATAOUT, 0, 2), rnode(GIN, 68, 43, 50) },
  { pnode(GPIO, 68, 43, DATAOUT, 0, 3), rnode(GIN, 68, 43, 51) },
  { pnode(GPIO, 68, 43, DATAOUT, 0, 4), rnode(GIN, 68, 43, 52) },
  { pnode(GPIO, 68, 43, OEIN, 0, 0), rnode(GOUT, 68, 43, 53) },
  { pnode(GPIO, 68, 43, OEIN, 0, 1), rnode(GOUT, 68, 43, 54) },
  { pnode(GPIO, 68, 43, BSLIPMAX, 0, -1), rnode(GIN, 68, 43, 47) },
  { pnode(GPIO, 68, 43, CEIN, 0, -1), rnode(GOUT, 68, 43, 46) },
  { pnode(GPIO, 68, 43, CEOUT, 0, -1), rnode(GOUT, 68, 43, 47) },
  { pnode(GPIO, 68, 43, ACLR, 0, -1), rnode(GOUT, 68, 43, 48) },
  { pnode(GPIO, 68, 43, SCLR, 0, -1), rnode(GOUT, 68, 43, 55) },
  { pnode(GPIO, 68, 43, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 43, 14) },
  { pnode(GPIO, 68, 43, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 43, 15) },
  { pnode(GPIO, 68, 43, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 43, 12) },
  { pnode(GPIO, 68, 43, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 43, 13) },
  { pnode(GPIO, 68, 43, DATAIN, 1, 0), rnode(GOUT, 68, 43, 39) },
  { pnode(GPIO, 68, 43, DATAIN, 1, 1), rnode(GOUT, 68, 43, 40) },
  { pnode(GPIO, 68, 43, DATAIN, 1, 2), rnode(GOUT, 68, 43, 41) },
  { pnode(GPIO, 68, 43, DATAIN, 1, 3), rnode(GOUT, 68, 43, 42) },
  { pnode(GPIO, 68, 43, DATAOUT, 1, 0), rnode(GIN, 68, 43, 42) },
  { pnode(GPIO, 68, 43, DATAOUT, 1, 1), rnode(GIN, 68, 43, 43) },
  { pnode(GPIO, 68, 43, DATAOUT, 1, 2), rnode(GIN, 68, 43, 44) },
  { pnode(GPIO, 68, 43, DATAOUT, 1, 3), rnode(GIN, 68, 43, 45) },
  { pnode(GPIO, 68, 43, DATAOUT, 1, 4), rnode(GIN, 68, 43, 46) },
  { pnode(GPIO, 68, 43, OEIN, 1, 0), rnode(GOUT, 68, 43, 43) },
  { pnode(GPIO, 68, 43, OEIN, 1, 1), rnode(GOUT, 68, 43, 44) },
  { pnode(GPIO, 68, 43, BSLIPMAX, 1, -1), rnode(GIN, 68, 43, 41) },
  { pnode(GPIO, 68, 43, CEIN, 1, -1), rnode(GOUT, 68, 43, 36) },
  { pnode(GPIO, 68, 43, CEOUT, 1, -1), rnode(GOUT, 68, 43, 37) },
  { pnode(GPIO, 68, 43, ACLR, 1, -1), rnode(GOUT, 68, 43, 38) },
  { pnode(GPIO, 68, 43, SCLR, 1, -1), rnode(GOUT, 68, 43, 45) },
  { pnode(GPIO, 68, 43, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 43, 10) },
  { pnode(GPIO, 68, 43, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 43, 11) },
  { pnode(GPIO, 68, 43, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 43, 8) },
  { pnode(GPIO, 68, 43, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 43, 9) },
  { pnode(GPIO, 68, 43, DATAIN, 2, 0), rnode(GOUT, 68, 43, 29) },
  { pnode(GPIO, 68, 43, DATAIN, 2, 1), rnode(GOUT, 68, 43, 30) },
  { pnode(GPIO, 68, 43, DATAIN, 2, 2), rnode(GOUT, 68, 43, 31) },
  { pnode(GPIO, 68, 43, DATAIN, 2, 3), rnode(GOUT, 68, 43, 32) },
  { pnode(GPIO, 68, 43, DATAOUT, 2, 0), rnode(GIN, 68, 43, 36) },
  { pnode(GPIO, 68, 43, DATAOUT, 2, 1), rnode(GIN, 68, 43, 37) },
  { pnode(GPIO, 68, 43, DATAOUT, 2, 2), rnode(GIN, 68, 43, 40) },
  { pnode(GPIO, 68, 43, DATAOUT, 2, 3), rnode(GIN, 68, 43, 38) },
  { pnode(GPIO, 68, 43, DATAOUT, 2, 4), rnode(GIN, 68, 43, 39) },
  { pnode(GPIO, 68, 43, OEIN, 2, 0), rnode(GOUT, 68, 43, 33) },
  { pnode(GPIO, 68, 43, OEIN, 2, 1), rnode(GOUT, 68, 43, 34) },
  { pnode(GPIO, 68, 43, BSLIPMAX, 2, -1), rnode(GIN, 68, 43, 35) },
  { pnode(GPIO, 68, 43, CEIN, 2, -1), rnode(GOUT, 68, 43, 26) },
  { pnode(GPIO, 68, 43, CEOUT, 2, -1), rnode(GOUT, 68, 43, 27) },
  { pnode(GPIO, 68, 43, ACLR, 2, -1), rnode(GOUT, 68, 43, 28) },
  { pnode(GPIO, 68, 43, SCLR, 2, -1), rnode(GOUT, 68, 43, 35) },
  { pnode(GPIO, 68, 43, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 43, 6) },
  { pnode(GPIO, 68, 43, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 43, 7) },
  { pnode(GPIO, 68, 43, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 43, 4) },
  { pnode(GPIO, 68, 43, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 43, 5) },
  { pnode(GPIO, 68, 43, DATAIN, 3, 0), rnode(GOUT, 68, 43, 19) },
  { pnode(GPIO, 68, 43, DATAIN, 3, 1), rnode(GOUT, 68, 43, 20) },
  { pnode(GPIO, 68, 43, DATAIN, 3, 2), rnode(GOUT, 68, 43, 21) },
  { pnode(GPIO, 68, 43, DATAIN, 3, 3), rnode(GOUT, 68, 43, 22) },
  { pnode(GPIO, 68, 43, DATAOUT, 3, 0), rnode(GIN, 68, 43, 30) },
  { pnode(GPIO, 68, 43, DATAOUT, 3, 1), rnode(GIN, 68, 43, 31) },
  { pnode(GPIO, 68, 43, DATAOUT, 3, 2), rnode(GIN, 68, 43, 32) },
  { pnode(GPIO, 68, 43, DATAOUT, 3, 3), rnode(GIN, 68, 43, 33) },
  { pnode(GPIO, 68, 43, DATAOUT, 3, 4), rnode(GIN, 68, 43, 34) },
  { pnode(GPIO, 68, 43, OEIN, 3, 0), rnode(GOUT, 68, 43, 23) },
  { pnode(GPIO, 68, 43, OEIN, 3, 1), rnode(GOUT, 68, 43, 24) },
  { pnode(GPIO, 68, 43, BSLIPMAX, 3, -1), rnode(GIN, 68, 43, 29) },
  { pnode(GPIO, 68, 43, CEIN, 3, -1), rnode(GOUT, 68, 43, 16) },
  { pnode(GPIO, 68, 43, CEOUT, 3, -1), rnode(GOUT, 68, 43, 17) },
  { pnode(GPIO, 68, 43, ACLR, 3, -1), rnode(GOUT, 68, 43, 18) },
  { pnode(GPIO, 68, 43, SCLR, 3, -1), rnode(GOUT, 68, 43, 25) },
  { pnode(GPIO, 68, 43, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 43, 2) },
  { pnode(GPIO, 68, 43, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 43, 3) },
  { pnode(GPIO, 68, 43, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 43, 0) },
  { pnode(GPIO, 68, 43, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 43, 1) },
  { pnode(GPIO, 68, 45, DATAIN, 0, 0), rnode(GOUT, 68, 45, 49) },
  { pnode(GPIO, 68, 45, DATAIN, 0, 1), rnode(GOUT, 68, 45, 50) },
  { pnode(GPIO, 68, 45, DATAIN, 0, 2), rnode(GOUT, 68, 45, 51) },
  { pnode(GPIO, 68, 45, DATAIN, 0, 3), rnode(GOUT, 68, 45, 52) },
  { pnode(GPIO, 68, 45, DATAOUT, 0, 0), rnode(GIN, 68, 45, 48) },
  { pnode(GPIO, 68, 45, DATAOUT, 0, 1), rnode(GIN, 68, 45, 49) },
  { pnode(GPIO, 68, 45, DATAOUT, 0, 2), rnode(GIN, 68, 45, 50) },
  { pnode(GPIO, 68, 45, DATAOUT, 0, 3), rnode(GIN, 68, 45, 51) },
  { pnode(GPIO, 68, 45, DATAOUT, 0, 4), rnode(GIN, 68, 45, 52) },
  { pnode(GPIO, 68, 45, OEIN, 0, 0), rnode(GOUT, 68, 45, 53) },
  { pnode(GPIO, 68, 45, OEIN, 0, 1), rnode(GOUT, 68, 45, 55) },
  { pnode(GPIO, 68, 45, BSLIPMAX, 0, -1), rnode(GIN, 68, 45, 47) },
  { pnode(GPIO, 68, 45, CEIN, 0, -1), rnode(GOUT, 68, 45, 46) },
  { pnode(GPIO, 68, 45, CEOUT, 0, -1), rnode(GOUT, 68, 45, 47) },
  { pnode(GPIO, 68, 45, ACLR, 0, -1), rnode(GOUT, 68, 45, 48) },
  { pnode(GPIO, 68, 45, SCLR, 0, -1), rnode(GOUT, 68, 45, 54) },
  { pnode(GPIO, 68, 45, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 45, 14) },
  { pnode(GPIO, 68, 45, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 45, 15) },
  { pnode(GPIO, 68, 45, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 45, 12) },
  { pnode(GPIO, 68, 45, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 45, 13) },
  { pnode(GPIO, 68, 45, DATAIN, 1, 0), rnode(GOUT, 68, 45, 39) },
  { pnode(GPIO, 68, 45, DATAIN, 1, 1), rnode(GOUT, 68, 45, 40) },
  { pnode(GPIO, 68, 45, DATAIN, 1, 2), rnode(GOUT, 68, 45, 41) },
  { pnode(GPIO, 68, 45, DATAIN, 1, 3), rnode(GOUT, 68, 45, 42) },
  { pnode(GPIO, 68, 45, DATAOUT, 1, 0), rnode(GIN, 68, 45, 42) },
  { pnode(GPIO, 68, 45, DATAOUT, 1, 1), rnode(GIN, 68, 45, 43) },
  { pnode(GPIO, 68, 45, DATAOUT, 1, 2), rnode(GIN, 68, 45, 44) },
  { pnode(GPIO, 68, 45, DATAOUT, 1, 3), rnode(GIN, 68, 45, 45) },
  { pnode(GPIO, 68, 45, DATAOUT, 1, 4), rnode(GIN, 68, 45, 46) },
  { pnode(GPIO, 68, 45, OEIN, 1, 0), rnode(GOUT, 68, 45, 43) },
  { pnode(GPIO, 68, 45, OEIN, 1, 1), rnode(GOUT, 68, 45, 44) },
  { pnode(GPIO, 68, 45, BSLIPMAX, 1, -1), rnode(GIN, 68, 45, 41) },
  { pnode(GPIO, 68, 45, CEIN, 1, -1), rnode(GOUT, 68, 45, 36) },
  { pnode(GPIO, 68, 45, CEOUT, 1, -1), rnode(GOUT, 68, 45, 37) },
  { pnode(GPIO, 68, 45, ACLR, 1, -1), rnode(GOUT, 68, 45, 38) },
  { pnode(GPIO, 68, 45, SCLR, 1, -1), rnode(GOUT, 68, 45, 45) },
  { pnode(GPIO, 68, 45, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 45, 10) },
  { pnode(GPIO, 68, 45, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 45, 11) },
  { pnode(GPIO, 68, 45, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 45, 8) },
  { pnode(GPIO, 68, 45, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 45, 9) },
  { pnode(GPIO, 68, 45, DATAIN, 2, 0), rnode(GOUT, 68, 45, 29) },
  { pnode(GPIO, 68, 45, DATAIN, 2, 1), rnode(GOUT, 68, 45, 30) },
  { pnode(GPIO, 68, 45, DATAIN, 2, 2), rnode(GOUT, 68, 45, 31) },
  { pnode(GPIO, 68, 45, DATAIN, 2, 3), rnode(GOUT, 68, 45, 32) },
  { pnode(GPIO, 68, 45, DATAOUT, 2, 0), rnode(GIN, 68, 45, 36) },
  { pnode(GPIO, 68, 45, DATAOUT, 2, 1), rnode(GIN, 68, 45, 37) },
  { pnode(GPIO, 68, 45, DATAOUT, 2, 2), rnode(GIN, 68, 45, 40) },
  { pnode(GPIO, 68, 45, DATAOUT, 2, 3), rnode(GIN, 68, 45, 38) },
  { pnode(GPIO, 68, 45, DATAOUT, 2, 4), rnode(GIN, 68, 45, 39) },
  { pnode(GPIO, 68, 45, OEIN, 2, 0), rnode(GOUT, 68, 45, 33) },
  { pnode(GPIO, 68, 45, OEIN, 2, 1), rnode(GOUT, 68, 45, 34) },
  { pnode(GPIO, 68, 45, BSLIPMAX, 2, -1), rnode(GIN, 68, 45, 35) },
  { pnode(GPIO, 68, 45, CEIN, 2, -1), rnode(GOUT, 68, 45, 26) },
  { pnode(GPIO, 68, 45, CEOUT, 2, -1), rnode(GOUT, 68, 45, 27) },
  { pnode(GPIO, 68, 45, ACLR, 2, -1), rnode(GOUT, 68, 45, 28) },
  { pnode(GPIO, 68, 45, SCLR, 2, -1), rnode(GOUT, 68, 45, 35) },
  { pnode(GPIO, 68, 45, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 45, 6) },
  { pnode(GPIO, 68, 45, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 45, 7) },
  { pnode(GPIO, 68, 45, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 45, 4) },
  { pnode(GPIO, 68, 45, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 45, 5) },
  { pnode(GPIO, 68, 45, DATAIN, 3, 0), rnode(GOUT, 68, 45, 19) },
  { pnode(GPIO, 68, 45, DATAIN, 3, 1), rnode(GOUT, 68, 45, 20) },
  { pnode(GPIO, 68, 45, DATAIN, 3, 2), rnode(GOUT, 68, 45, 21) },
  { pnode(GPIO, 68, 45, DATAIN, 3, 3), rnode(GOUT, 68, 45, 22) },
  { pnode(GPIO, 68, 45, DATAOUT, 3, 0), rnode(GIN, 68, 45, 30) },
  { pnode(GPIO, 68, 45, DATAOUT, 3, 1), rnode(GIN, 68, 45, 31) },
  { pnode(GPIO, 68, 45, DATAOUT, 3, 2), rnode(GIN, 68, 45, 32) },
  { pnode(GPIO, 68, 45, DATAOUT, 3, 3), rnode(GIN, 68, 45, 33) },
  { pnode(GPIO, 68, 45, DATAOUT, 3, 4), rnode(GIN, 68, 45, 34) },
  { pnode(GPIO, 68, 45, OEIN, 3, 0), rnode(GOUT, 68, 45, 23) },
  { pnode(GPIO, 68, 45, OEIN, 3, 1), rnode(GOUT, 68, 45, 24) },
  { pnode(GPIO, 68, 45, BSLIPMAX, 3, -1), rnode(GIN, 68, 45, 29) },
  { pnode(GPIO, 68, 45, CEIN, 3, -1), rnode(GOUT, 68, 45, 16) },
  { pnode(GPIO, 68, 45, CEOUT, 3, -1), rnode(GOUT, 68, 45, 17) },
  { pnode(GPIO, 68, 45, ACLR, 3, -1), rnode(GOUT, 68, 45, 18) },
  { pnode(GPIO, 68, 45, SCLR, 3, -1), rnode(GOUT, 68, 45, 25) },
  { pnode(GPIO, 68, 45, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 45, 2) },
  { pnode(GPIO, 68, 45, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 45, 3) },
  { pnode(GPIO, 68, 45, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 45, 0) },
  { pnode(GPIO, 68, 45, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 45, 1) },
  { pnode(GPIO, 68, 47, DATAIN, 0, 0), rnode(GOUT, 68, 47, 49) },
  { pnode(GPIO, 68, 47, DATAIN, 0, 1), rnode(GOUT, 68, 47, 50) },
  { pnode(GPIO, 68, 47, DATAIN, 0, 2), rnode(GOUT, 68, 47, 51) },
  { pnode(GPIO, 68, 47, DATAIN, 0, 3), rnode(GOUT, 68, 47, 52) },
  { pnode(GPIO, 68, 47, DATAOUT, 0, 0), rnode(GIN, 68, 47, 48) },
  { pnode(GPIO, 68, 47, DATAOUT, 0, 1), rnode(GIN, 68, 47, 49) },
  { pnode(GPIO, 68, 47, DATAOUT, 0, 2), rnode(GIN, 68, 47, 50) },
  { pnode(GPIO, 68, 47, DATAOUT, 0, 3), rnode(GIN, 68, 47, 51) },
  { pnode(GPIO, 68, 47, DATAOUT, 0, 4), rnode(GIN, 68, 47, 52) },
  { pnode(GPIO, 68, 47, OEIN, 0, 0), rnode(GOUT, 68, 47, 53) },
  { pnode(GPIO, 68, 47, OEIN, 0, 1), rnode(GOUT, 68, 47, 54) },
  { pnode(GPIO, 68, 47, BSLIPMAX, 0, -1), rnode(GIN, 68, 47, 47) },
  { pnode(GPIO, 68, 47, CEIN, 0, -1), rnode(GOUT, 68, 47, 46) },
  { pnode(GPIO, 68, 47, CEOUT, 0, -1), rnode(GOUT, 68, 47, 47) },
  { pnode(GPIO, 68, 47, ACLR, 0, -1), rnode(GOUT, 68, 47, 48) },
  { pnode(GPIO, 68, 47, SCLR, 0, -1), rnode(GOUT, 68, 47, 55) },
  { pnode(GPIO, 68, 47, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 47, 14) },
  { pnode(GPIO, 68, 47, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 47, 15) },
  { pnode(GPIO, 68, 47, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 47, 12) },
  { pnode(GPIO, 68, 47, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 47, 13) },
  { pnode(GPIO, 68, 47, DATAIN, 1, 0), rnode(GOUT, 68, 47, 39) },
  { pnode(GPIO, 68, 47, DATAIN, 1, 1), rnode(GOUT, 68, 47, 40) },
  { pnode(GPIO, 68, 47, DATAIN, 1, 2), rnode(GOUT, 68, 47, 41) },
  { pnode(GPIO, 68, 47, DATAIN, 1, 3), rnode(GOUT, 68, 47, 42) },
  { pnode(GPIO, 68, 47, DATAOUT, 1, 0), rnode(GIN, 68, 47, 42) },
  { pnode(GPIO, 68, 47, DATAOUT, 1, 1), rnode(GIN, 68, 47, 43) },
  { pnode(GPIO, 68, 47, DATAOUT, 1, 2), rnode(GIN, 68, 47, 44) },
  { pnode(GPIO, 68, 47, DATAOUT, 1, 3), rnode(GIN, 68, 47, 45) },
  { pnode(GPIO, 68, 47, DATAOUT, 1, 4), rnode(GIN, 68, 47, 46) },
  { pnode(GPIO, 68, 47, OEIN, 1, 0), rnode(GOUT, 68, 47, 43) },
  { pnode(GPIO, 68, 47, OEIN, 1, 1), rnode(GOUT, 68, 47, 44) },
  { pnode(GPIO, 68, 47, BSLIPMAX, 1, -1), rnode(GIN, 68, 47, 41) },
  { pnode(GPIO, 68, 47, CEIN, 1, -1), rnode(GOUT, 68, 47, 36) },
  { pnode(GPIO, 68, 47, CEOUT, 1, -1), rnode(GOUT, 68, 47, 37) },
  { pnode(GPIO, 68, 47, ACLR, 1, -1), rnode(GOUT, 68, 47, 38) },
  { pnode(GPIO, 68, 47, SCLR, 1, -1), rnode(GOUT, 68, 47, 45) },
  { pnode(GPIO, 68, 47, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 47, 10) },
  { pnode(GPIO, 68, 47, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 47, 11) },
  { pnode(GPIO, 68, 47, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 47, 8) },
  { pnode(GPIO, 68, 47, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 47, 9) },
  { pnode(GPIO, 68, 47, DATAIN, 2, 0), rnode(GOUT, 68, 47, 29) },
  { pnode(GPIO, 68, 47, DATAIN, 2, 1), rnode(GOUT, 68, 47, 30) },
  { pnode(GPIO, 68, 47, DATAIN, 2, 2), rnode(GOUT, 68, 47, 32) },
  { pnode(GPIO, 68, 47, DATAIN, 2, 3), rnode(GOUT, 68, 47, 33) },
  { pnode(GPIO, 68, 47, DATAOUT, 2, 0), rnode(GIN, 68, 47, 36) },
  { pnode(GPIO, 68, 47, DATAOUT, 2, 1), rnode(GIN, 68, 47, 37) },
  { pnode(GPIO, 68, 47, DATAOUT, 2, 2), rnode(GIN, 68, 47, 40) },
  { pnode(GPIO, 68, 47, DATAOUT, 2, 3), rnode(GIN, 68, 47, 38) },
  { pnode(GPIO, 68, 47, DATAOUT, 2, 4), rnode(GIN, 68, 47, 39) },
  { pnode(GPIO, 68, 47, OEIN, 2, 0), rnode(GOUT, 68, 47, 34) },
  { pnode(GPIO, 68, 47, OEIN, 2, 1), rnode(GOUT, 68, 47, 35) },
  { pnode(GPIO, 68, 47, BSLIPMAX, 2, -1), rnode(GIN, 68, 47, 35) },
  { pnode(GPIO, 68, 47, CEIN, 2, -1), rnode(GOUT, 68, 47, 26) },
  { pnode(GPIO, 68, 47, CEOUT, 2, -1), rnode(GOUT, 68, 47, 27) },
  { pnode(GPIO, 68, 47, ACLR, 2, -1), rnode(GOUT, 68, 47, 28) },
  { pnode(GPIO, 68, 47, SCLR, 2, -1), rnode(GOUT, 68, 47, 31) },
  { pnode(GPIO, 68, 47, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 47, 6) },
  { pnode(GPIO, 68, 47, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 47, 7) },
  { pnode(GPIO, 68, 47, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 47, 4) },
  { pnode(GPIO, 68, 47, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 47, 5) },
  { pnode(GPIO, 68, 47, DATAIN, 3, 0), rnode(GOUT, 68, 47, 19) },
  { pnode(GPIO, 68, 47, DATAIN, 3, 1), rnode(GOUT, 68, 47, 20) },
  { pnode(GPIO, 68, 47, DATAIN, 3, 2), rnode(GOUT, 68, 47, 21) },
  { pnode(GPIO, 68, 47, DATAIN, 3, 3), rnode(GOUT, 68, 47, 22) },
  { pnode(GPIO, 68, 47, DATAOUT, 3, 0), rnode(GIN, 68, 47, 30) },
  { pnode(GPIO, 68, 47, DATAOUT, 3, 1), rnode(GIN, 68, 47, 31) },
  { pnode(GPIO, 68, 47, DATAOUT, 3, 2), rnode(GIN, 68, 47, 32) },
  { pnode(GPIO, 68, 47, DATAOUT, 3, 3), rnode(GIN, 68, 47, 33) },
  { pnode(GPIO, 68, 47, DATAOUT, 3, 4), rnode(GIN, 68, 47, 34) },
  { pnode(GPIO, 68, 47, OEIN, 3, 0), rnode(GOUT, 68, 47, 23) },
  { pnode(GPIO, 68, 47, OEIN, 3, 1), rnode(GOUT, 68, 47, 24) },
  { pnode(GPIO, 68, 47, BSLIPMAX, 3, -1), rnode(GIN, 68, 47, 29) },
  { pnode(GPIO, 68, 47, CEIN, 3, -1), rnode(GOUT, 68, 47, 16) },
  { pnode(GPIO, 68, 47, CEOUT, 3, -1), rnode(GOUT, 68, 47, 17) },
  { pnode(GPIO, 68, 47, ACLR, 3, -1), rnode(GOUT, 68, 47, 18) },
  { pnode(GPIO, 68, 47, SCLR, 3, -1), rnode(GOUT, 68, 47, 25) },
  { pnode(GPIO, 68, 47, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 47, 2) },
  { pnode(GPIO, 68, 47, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 47, 3) },
  { pnode(GPIO, 68, 47, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 47, 0) },
  { pnode(GPIO, 68, 47, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 47, 1) },
  { pnode(GPIO, 68, 49, DATAIN, 0, 0), rnode(GOUT, 68, 49, 49) },
  { pnode(GPIO, 68, 49, DATAIN, 0, 1), rnode(GOUT, 68, 49, 50) },
  { pnode(GPIO, 68, 49, DATAIN, 0, 2), rnode(GOUT, 68, 49, 51) },
  { pnode(GPIO, 68, 49, DATAIN, 0, 3), rnode(GOUT, 68, 49, 52) },
  { pnode(GPIO, 68, 49, DATAOUT, 0, 0), rnode(GIN, 68, 49, 48) },
  { pnode(GPIO, 68, 49, DATAOUT, 0, 1), rnode(GIN, 68, 49, 49) },
  { pnode(GPIO, 68, 49, DATAOUT, 0, 2), rnode(GIN, 68, 49, 50) },
  { pnode(GPIO, 68, 49, DATAOUT, 0, 3), rnode(GIN, 68, 49, 51) },
  { pnode(GPIO, 68, 49, DATAOUT, 0, 4), rnode(GIN, 68, 49, 52) },
  { pnode(GPIO, 68, 49, OEIN, 0, 0), rnode(GOUT, 68, 49, 53) },
  { pnode(GPIO, 68, 49, OEIN, 0, 1), rnode(GOUT, 68, 49, 54) },
  { pnode(GPIO, 68, 49, BSLIPMAX, 0, -1), rnode(GIN, 68, 49, 47) },
  { pnode(GPIO, 68, 49, CEIN, 0, -1), rnode(GOUT, 68, 49, 46) },
  { pnode(GPIO, 68, 49, CEOUT, 0, -1), rnode(GOUT, 68, 49, 47) },
  { pnode(GPIO, 68, 49, ACLR, 0, -1), rnode(GOUT, 68, 49, 48) },
  { pnode(GPIO, 68, 49, SCLR, 0, -1), rnode(GOUT, 68, 49, 55) },
  { pnode(GPIO, 68, 49, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 49, 14) },
  { pnode(GPIO, 68, 49, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 49, 15) },
  { pnode(GPIO, 68, 49, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 49, 12) },
  { pnode(GPIO, 68, 49, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 49, 13) },
  { pnode(GPIO, 68, 49, DATAIN, 1, 0), rnode(GOUT, 68, 49, 39) },
  { pnode(GPIO, 68, 49, DATAIN, 1, 1), rnode(GOUT, 68, 49, 40) },
  { pnode(GPIO, 68, 49, DATAIN, 1, 2), rnode(GOUT, 68, 49, 41) },
  { pnode(GPIO, 68, 49, DATAIN, 1, 3), rnode(GOUT, 68, 49, 42) },
  { pnode(GPIO, 68, 49, DATAOUT, 1, 0), rnode(GIN, 68, 49, 42) },
  { pnode(GPIO, 68, 49, DATAOUT, 1, 1), rnode(GIN, 68, 49, 43) },
  { pnode(GPIO, 68, 49, DATAOUT, 1, 2), rnode(GIN, 68, 49, 44) },
  { pnode(GPIO, 68, 49, DATAOUT, 1, 3), rnode(GIN, 68, 49, 45) },
  { pnode(GPIO, 68, 49, DATAOUT, 1, 4), rnode(GIN, 68, 49, 46) },
  { pnode(GPIO, 68, 49, OEIN, 1, 0), rnode(GOUT, 68, 49, 43) },
  { pnode(GPIO, 68, 49, OEIN, 1, 1), rnode(GOUT, 68, 49, 44) },
  { pnode(GPIO, 68, 49, BSLIPMAX, 1, -1), rnode(GIN, 68, 49, 41) },
  { pnode(GPIO, 68, 49, CEIN, 1, -1), rnode(GOUT, 68, 49, 36) },
  { pnode(GPIO, 68, 49, CEOUT, 1, -1), rnode(GOUT, 68, 49, 37) },
  { pnode(GPIO, 68, 49, ACLR, 1, -1), rnode(GOUT, 68, 49, 38) },
  { pnode(GPIO, 68, 49, SCLR, 1, -1), rnode(GOUT, 68, 49, 45) },
  { pnode(GPIO, 68, 49, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 49, 10) },
  { pnode(GPIO, 68, 49, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 49, 11) },
  { pnode(GPIO, 68, 49, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 49, 8) },
  { pnode(GPIO, 68, 49, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 49, 9) },
  { pnode(GPIO, 68, 49, DATAIN, 2, 0), rnode(GOUT, 68, 49, 29) },
  { pnode(GPIO, 68, 49, DATAIN, 2, 1), rnode(GOUT, 68, 49, 30) },
  { pnode(GPIO, 68, 49, DATAIN, 2, 2), rnode(GOUT, 68, 49, 31) },
  { pnode(GPIO, 68, 49, DATAIN, 2, 3), rnode(GOUT, 68, 49, 32) },
  { pnode(GPIO, 68, 49, DATAOUT, 2, 0), rnode(GIN, 68, 49, 36) },
  { pnode(GPIO, 68, 49, DATAOUT, 2, 1), rnode(GIN, 68, 49, 37) },
  { pnode(GPIO, 68, 49, DATAOUT, 2, 2), rnode(GIN, 68, 49, 40) },
  { pnode(GPIO, 68, 49, DATAOUT, 2, 3), rnode(GIN, 68, 49, 38) },
  { pnode(GPIO, 68, 49, DATAOUT, 2, 4), rnode(GIN, 68, 49, 39) },
  { pnode(GPIO, 68, 49, OEIN, 2, 0), rnode(GOUT, 68, 49, 33) },
  { pnode(GPIO, 68, 49, OEIN, 2, 1), rnode(GOUT, 68, 49, 34) },
  { pnode(GPIO, 68, 49, BSLIPMAX, 2, -1), rnode(GIN, 68, 49, 35) },
  { pnode(GPIO, 68, 49, CEIN, 2, -1), rnode(GOUT, 68, 49, 26) },
  { pnode(GPIO, 68, 49, CEOUT, 2, -1), rnode(GOUT, 68, 49, 27) },
  { pnode(GPIO, 68, 49, ACLR, 2, -1), rnode(GOUT, 68, 49, 28) },
  { pnode(GPIO, 68, 49, SCLR, 2, -1), rnode(GOUT, 68, 49, 35) },
  { pnode(GPIO, 68, 49, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 49, 6) },
  { pnode(GPIO, 68, 49, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 49, 7) },
  { pnode(GPIO, 68, 49, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 49, 4) },
  { pnode(GPIO, 68, 49, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 49, 5) },
  { pnode(GPIO, 68, 49, DATAIN, 3, 0), rnode(GOUT, 68, 49, 19) },
  { pnode(GPIO, 68, 49, DATAIN, 3, 1), rnode(GOUT, 68, 49, 20) },
  { pnode(GPIO, 68, 49, DATAIN, 3, 2), rnode(GOUT, 68, 49, 21) },
  { pnode(GPIO, 68, 49, DATAIN, 3, 3), rnode(GOUT, 68, 49, 22) },
  { pnode(GPIO, 68, 49, DATAOUT, 3, 0), rnode(GIN, 68, 49, 30) },
  { pnode(GPIO, 68, 49, DATAOUT, 3, 1), rnode(GIN, 68, 49, 31) },
  { pnode(GPIO, 68, 49, DATAOUT, 3, 2), rnode(GIN, 68, 49, 32) },
  { pnode(GPIO, 68, 49, DATAOUT, 3, 3), rnode(GIN, 68, 49, 33) },
  { pnode(GPIO, 68, 49, DATAOUT, 3, 4), rnode(GIN, 68, 49, 34) },
  { pnode(GPIO, 68, 49, OEIN, 3, 0), rnode(GOUT, 68, 49, 23) },
  { pnode(GPIO, 68, 49, OEIN, 3, 1), rnode(GOUT, 68, 49, 24) },
  { pnode(GPIO, 68, 49, BSLIPMAX, 3, -1), rnode(GIN, 68, 49, 29) },
  { pnode(GPIO, 68, 49, CEIN, 3, -1), rnode(GOUT, 68, 49, 16) },
  { pnode(GPIO, 68, 49, CEOUT, 3, -1), rnode(GOUT, 68, 49, 17) },
  { pnode(GPIO, 68, 49, ACLR, 3, -1), rnode(GOUT, 68, 49, 18) },
  { pnode(GPIO, 68, 49, SCLR, 3, -1), rnode(GOUT, 68, 49, 25) },
  { pnode(GPIO, 68, 49, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 49, 2) },
  { pnode(GPIO, 68, 49, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 49, 3) },
  { pnode(GPIO, 68, 49, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 49, 0) },
  { pnode(GPIO, 68, 49, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 49, 1) },
  { pnode(GPIO, 68, 51, DATAIN, 0, 0), rnode(GOUT, 68, 51, 49) },
  { pnode(GPIO, 68, 51, DATAIN, 0, 1), rnode(GOUT, 68, 51, 50) },
  { pnode(GPIO, 68, 51, DATAIN, 0, 2), rnode(GOUT, 68, 51, 51) },
  { pnode(GPIO, 68, 51, DATAIN, 0, 3), rnode(GOUT, 68, 51, 52) },
  { pnode(GPIO, 68, 51, DATAOUT, 0, 0), rnode(GIN, 68, 51, 48) },
  { pnode(GPIO, 68, 51, DATAOUT, 0, 1), rnode(GIN, 68, 51, 49) },
  { pnode(GPIO, 68, 51, DATAOUT, 0, 2), rnode(GIN, 68, 51, 50) },
  { pnode(GPIO, 68, 51, DATAOUT, 0, 3), rnode(GIN, 68, 51, 51) },
  { pnode(GPIO, 68, 51, DATAOUT, 0, 4), rnode(GIN, 68, 51, 52) },
  { pnode(GPIO, 68, 51, OEIN, 0, 0), rnode(GOUT, 68, 51, 53) },
  { pnode(GPIO, 68, 51, OEIN, 0, 1), rnode(GOUT, 68, 51, 54) },
  { pnode(GPIO, 68, 51, BSLIPMAX, 0, -1), rnode(GIN, 68, 51, 47) },
  { pnode(GPIO, 68, 51, CEIN, 0, -1), rnode(GOUT, 68, 51, 46) },
  { pnode(GPIO, 68, 51, CEOUT, 0, -1), rnode(GOUT, 68, 51, 47) },
  { pnode(GPIO, 68, 51, ACLR, 0, -1), rnode(GOUT, 68, 51, 48) },
  { pnode(GPIO, 68, 51, SCLR, 0, -1), rnode(GOUT, 68, 51, 55) },
  { pnode(GPIO, 68, 51, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 51, 14) },
  { pnode(GPIO, 68, 51, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 51, 15) },
  { pnode(GPIO, 68, 51, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 51, 12) },
  { pnode(GPIO, 68, 51, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 51, 13) },
  { pnode(GPIO, 68, 51, DATAIN, 1, 0), rnode(GOUT, 68, 51, 39) },
  { pnode(GPIO, 68, 51, DATAIN, 1, 1), rnode(GOUT, 68, 51, 40) },
  { pnode(GPIO, 68, 51, DATAIN, 1, 2), rnode(GOUT, 68, 51, 41) },
  { pnode(GPIO, 68, 51, DATAIN, 1, 3), rnode(GOUT, 68, 51, 42) },
  { pnode(GPIO, 68, 51, DATAOUT, 1, 0), rnode(GIN, 68, 51, 42) },
  { pnode(GPIO, 68, 51, DATAOUT, 1, 1), rnode(GIN, 68, 51, 43) },
  { pnode(GPIO, 68, 51, DATAOUT, 1, 2), rnode(GIN, 68, 51, 44) },
  { pnode(GPIO, 68, 51, DATAOUT, 1, 3), rnode(GIN, 68, 51, 45) },
  { pnode(GPIO, 68, 51, DATAOUT, 1, 4), rnode(GIN, 68, 51, 46) },
  { pnode(GPIO, 68, 51, OEIN, 1, 0), rnode(GOUT, 68, 51, 43) },
  { pnode(GPIO, 68, 51, OEIN, 1, 1), rnode(GOUT, 68, 51, 44) },
  { pnode(GPIO, 68, 51, BSLIPMAX, 1, -1), rnode(GIN, 68, 51, 41) },
  { pnode(GPIO, 68, 51, CEIN, 1, -1), rnode(GOUT, 68, 51, 36) },
  { pnode(GPIO, 68, 51, CEOUT, 1, -1), rnode(GOUT, 68, 51, 37) },
  { pnode(GPIO, 68, 51, ACLR, 1, -1), rnode(GOUT, 68, 51, 38) },
  { pnode(GPIO, 68, 51, SCLR, 1, -1), rnode(GOUT, 68, 51, 45) },
  { pnode(GPIO, 68, 51, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 51, 10) },
  { pnode(GPIO, 68, 51, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 51, 11) },
  { pnode(GPIO, 68, 51, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 51, 8) },
  { pnode(GPIO, 68, 51, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 51, 9) },
  { pnode(GPIO, 68, 51, DATAIN, 2, 0), rnode(GOUT, 68, 51, 29) },
  { pnode(GPIO, 68, 51, DATAIN, 2, 1), rnode(GOUT, 68, 51, 30) },
  { pnode(GPIO, 68, 51, DATAIN, 2, 2), rnode(GOUT, 68, 51, 31) },
  { pnode(GPIO, 68, 51, DATAIN, 2, 3), rnode(GOUT, 68, 51, 32) },
  { pnode(GPIO, 68, 51, DATAOUT, 2, 0), rnode(GIN, 68, 51, 36) },
  { pnode(GPIO, 68, 51, DATAOUT, 2, 1), rnode(GIN, 68, 51, 37) },
  { pnode(GPIO, 68, 51, DATAOUT, 2, 2), rnode(GIN, 68, 51, 40) },
  { pnode(GPIO, 68, 51, DATAOUT, 2, 3), rnode(GIN, 68, 51, 38) },
  { pnode(GPIO, 68, 51, DATAOUT, 2, 4), rnode(GIN, 68, 51, 39) },
  { pnode(GPIO, 68, 51, OEIN, 2, 0), rnode(GOUT, 68, 51, 33) },
  { pnode(GPIO, 68, 51, OEIN, 2, 1), rnode(GOUT, 68, 51, 34) },
  { pnode(GPIO, 68, 51, BSLIPMAX, 2, -1), rnode(GIN, 68, 51, 35) },
  { pnode(GPIO, 68, 51, CEIN, 2, -1), rnode(GOUT, 68, 51, 26) },
  { pnode(GPIO, 68, 51, CEOUT, 2, -1), rnode(GOUT, 68, 51, 27) },
  { pnode(GPIO, 68, 51, ACLR, 2, -1), rnode(GOUT, 68, 51, 28) },
  { pnode(GPIO, 68, 51, SCLR, 2, -1), rnode(GOUT, 68, 51, 35) },
  { pnode(GPIO, 68, 51, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 51, 6) },
  { pnode(GPIO, 68, 51, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 51, 7) },
  { pnode(GPIO, 68, 51, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 51, 4) },
  { pnode(GPIO, 68, 51, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 51, 5) },
  { pnode(GPIO, 68, 51, DATAIN, 3, 0), rnode(GOUT, 68, 51, 19) },
  { pnode(GPIO, 68, 51, DATAIN, 3, 1), rnode(GOUT, 68, 51, 20) },
  { pnode(GPIO, 68, 51, DATAIN, 3, 2), rnode(GOUT, 68, 51, 21) },
  { pnode(GPIO, 68, 51, DATAIN, 3, 3), rnode(GOUT, 68, 51, 22) },
  { pnode(GPIO, 68, 51, DATAOUT, 3, 0), rnode(GIN, 68, 51, 30) },
  { pnode(GPIO, 68, 51, DATAOUT, 3, 1), rnode(GIN, 68, 51, 31) },
  { pnode(GPIO, 68, 51, DATAOUT, 3, 2), rnode(GIN, 68, 51, 32) },
  { pnode(GPIO, 68, 51, DATAOUT, 3, 3), rnode(GIN, 68, 51, 33) },
  { pnode(GPIO, 68, 51, DATAOUT, 3, 4), rnode(GIN, 68, 51, 34) },
  { pnode(GPIO, 68, 51, OEIN, 3, 0), rnode(GOUT, 68, 51, 23) },
  { pnode(GPIO, 68, 51, OEIN, 3, 1), rnode(GOUT, 68, 51, 24) },
  { pnode(GPIO, 68, 51, BSLIPMAX, 3, -1), rnode(GIN, 68, 51, 29) },
  { pnode(GPIO, 68, 51, CEIN, 3, -1), rnode(GOUT, 68, 51, 16) },
  { pnode(GPIO, 68, 51, CEOUT, 3, -1), rnode(GOUT, 68, 51, 17) },
  { pnode(GPIO, 68, 51, ACLR, 3, -1), rnode(GOUT, 68, 51, 18) },
  { pnode(GPIO, 68, 51, SCLR, 3, -1), rnode(GOUT, 68, 51, 25) },
  { pnode(GPIO, 68, 51, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 51, 2) },
  { pnode(GPIO, 68, 51, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 51, 3) },
  { pnode(GPIO, 68, 51, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 51, 0) },
  { pnode(GPIO, 68, 51, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 51, 1) },
  { pnode(GPIO, 68, 52, DATAIN, 0, 0), rnode(GOUT, 68, 52, 49) },
  { pnode(GPIO, 68, 52, DATAIN, 0, 1), rnode(GOUT, 68, 52, 50) },
  { pnode(GPIO, 68, 52, DATAIN, 0, 2), rnode(GOUT, 68, 52, 51) },
  { pnode(GPIO, 68, 52, DATAIN, 0, 3), rnode(GOUT, 68, 52, 52) },
  { pnode(GPIO, 68, 52, DATAOUT, 0, 0), rnode(GIN, 68, 52, 48) },
  { pnode(GPIO, 68, 52, DATAOUT, 0, 1), rnode(GIN, 68, 52, 49) },
  { pnode(GPIO, 68, 52, DATAOUT, 0, 2), rnode(GIN, 68, 52, 50) },
  { pnode(GPIO, 68, 52, DATAOUT, 0, 3), rnode(GIN, 68, 52, 51) },
  { pnode(GPIO, 68, 52, DATAOUT, 0, 4), rnode(GIN, 68, 52, 52) },
  { pnode(GPIO, 68, 52, OEIN, 0, 0), rnode(GOUT, 68, 52, 53) },
  { pnode(GPIO, 68, 52, OEIN, 0, 1), rnode(GOUT, 68, 52, 55) },
  { pnode(GPIO, 68, 52, BSLIPMAX, 0, -1), rnode(GIN, 68, 52, 47) },
  { pnode(GPIO, 68, 52, CEIN, 0, -1), rnode(GOUT, 68, 52, 46) },
  { pnode(GPIO, 68, 52, CEOUT, 0, -1), rnode(GOUT, 68, 52, 47) },
  { pnode(GPIO, 68, 52, ACLR, 0, -1), rnode(GOUT, 68, 52, 48) },
  { pnode(GPIO, 68, 52, SCLR, 0, -1), rnode(GOUT, 68, 52, 54) },
  { pnode(GPIO, 68, 52, CLKIN_IN, 0, 0), rnode(DCMUX, 68, 52, 14) },
  { pnode(GPIO, 68, 52, CLKIN_IN, 0, 1), rnode(DCMUX, 68, 52, 15) },
  { pnode(GPIO, 68, 52, CLKIN_OUT, 0, 0), rnode(DCMUX, 68, 52, 12) },
  { pnode(GPIO, 68, 52, CLKIN_OUT, 0, 1), rnode(DCMUX, 68, 52, 13) },
  { pnode(GPIO, 68, 52, DATAIN, 1, 0), rnode(GOUT, 68, 52, 39) },
  { pnode(GPIO, 68, 52, DATAIN, 1, 1), rnode(GOUT, 68, 52, 40) },
  { pnode(GPIO, 68, 52, DATAIN, 1, 2), rnode(GOUT, 68, 52, 41) },
  { pnode(GPIO, 68, 52, DATAIN, 1, 3), rnode(GOUT, 68, 52, 42) },
  { pnode(GPIO, 68, 52, DATAOUT, 1, 0), rnode(GIN, 68, 52, 42) },
  { pnode(GPIO, 68, 52, DATAOUT, 1, 1), rnode(GIN, 68, 52, 43) },
  { pnode(GPIO, 68, 52, DATAOUT, 1, 2), rnode(GIN, 68, 52, 44) },
  { pnode(GPIO, 68, 52, DATAOUT, 1, 3), rnode(GIN, 68, 52, 45) },
  { pnode(GPIO, 68, 52, DATAOUT, 1, 4), rnode(GIN, 68, 52, 46) },
  { pnode(GPIO, 68, 52, OEIN, 1, 0), rnode(GOUT, 68, 52, 43) },
  { pnode(GPIO, 68, 52, OEIN, 1, 1), rnode(GOUT, 68, 52, 44) },
  { pnode(GPIO, 68, 52, BSLIPMAX, 1, -1), rnode(GIN, 68, 52, 41) },
  { pnode(GPIO, 68, 52, CEIN, 1, -1), rnode(GOUT, 68, 52, 36) },
  { pnode(GPIO, 68, 52, CEOUT, 1, -1), rnode(GOUT, 68, 52, 37) },
  { pnode(GPIO, 68, 52, ACLR, 1, -1), rnode(GOUT, 68, 52, 38) },
  { pnode(GPIO, 68, 52, SCLR, 1, -1), rnode(GOUT, 68, 52, 45) },
  { pnode(GPIO, 68, 52, CLKIN_IN, 1, 0), rnode(DCMUX, 68, 52, 10) },
  { pnode(GPIO, 68, 52, CLKIN_IN, 1, 1), rnode(DCMUX, 68, 52, 11) },
  { pnode(GPIO, 68, 52, CLKIN_OUT, 1, 0), rnode(DCMUX, 68, 52, 8) },
  { pnode(GPIO, 68, 52, CLKIN_OUT, 1, 1), rnode(DCMUX, 68, 52, 9) },
  { pnode(GPIO, 68, 52, DATAIN, 2, 0), rnode(GOUT, 68, 52, 29) },
  { pnode(GPIO, 68, 52, DATAIN, 2, 1), rnode(GOUT, 68, 52, 30) },
  { pnode(GPIO, 68, 52, DATAIN, 2, 2), rnode(GOUT, 68, 52, 31) },
  { pnode(GPIO, 68, 52, DATAIN, 2, 3), rnode(GOUT, 68, 52, 32) },
  { pnode(GPIO, 68, 52, DATAOUT, 2, 0), rnode(GIN, 68, 52, 36) },
  { pnode(GPIO, 68, 52, DATAOUT, 2, 1), rnode(GIN, 68, 52, 37) },
  { pnode(GPIO, 68, 52, DATAOUT, 2, 2), rnode(GIN, 68, 52, 40) },
  { pnode(GPIO, 68, 52, DATAOUT, 2, 3), rnode(GIN, 68, 52, 38) },
  { pnode(GPIO, 68, 52, DATAOUT, 2, 4), rnode(GIN, 68, 52, 39) },
  { pnode(GPIO, 68, 52, OEIN, 2, 0), rnode(GOUT, 68, 52, 33) },
  { pnode(GPIO, 68, 52, OEIN, 2, 1), rnode(GOUT, 68, 52, 34) },
  { pnode(GPIO, 68, 52, BSLIPMAX, 2, -1), rnode(GIN, 68, 52, 35) },
  { pnode(GPIO, 68, 52, CEIN, 2, -1), rnode(GOUT, 68, 52, 26) },
  { pnode(GPIO, 68, 52, CEOUT, 2, -1), rnode(GOUT, 68, 52, 27) },
  { pnode(GPIO, 68, 52, ACLR, 2, -1), rnode(GOUT, 68, 52, 28) },
  { pnode(GPIO, 68, 52, SCLR, 2, -1), rnode(GOUT, 68, 52, 35) },
  { pnode(GPIO, 68, 52, CLKIN_IN, 2, 0), rnode(DCMUX, 68, 52, 6) },
  { pnode(GPIO, 68, 52, CLKIN_IN, 2, 1), rnode(DCMUX, 68, 52, 7) },
  { pnode(GPIO, 68, 52, CLKIN_OUT, 2, 0), rnode(DCMUX, 68, 52, 4) },
  { pnode(GPIO, 68, 52, CLKIN_OUT, 2, 1), rnode(DCMUX, 68, 52, 5) },
  { pnode(GPIO, 68, 52, DATAIN, 3, 0), rnode(GOUT, 68, 52, 19) },
  { pnode(GPIO, 68, 52, DATAIN, 3, 1), rnode(GOUT, 68, 52, 20) },
  { pnode(GPIO, 68, 52, DATAIN, 3, 2), rnode(GOUT, 68, 52, 21) },
  { pnode(GPIO, 68, 52, DATAIN, 3, 3), rnode(GOUT, 68, 52, 22) },
  { pnode(GPIO, 68, 52, DATAOUT, 3, 0), rnode(GIN, 68, 52, 30) },
  { pnode(GPIO, 68, 52, DATAOUT, 3, 1), rnode(GIN, 68, 52, 31) },
  { pnode(GPIO, 68, 52, DATAOUT, 3, 2), rnode(GIN, 68, 52, 32) },
  { pnode(GPIO, 68, 52, DATAOUT, 3, 3), rnode(GIN, 68, 52, 33) },
  { pnode(GPIO, 68, 52, DATAOUT, 3, 4), rnode(GIN, 68, 52, 34) },
  { pnode(GPIO, 68, 52, OEIN, 3, 0), rnode(GOUT, 68, 52, 23) },
  { pnode(GPIO, 68, 52, OEIN, 3, 1), rnode(GOUT, 68, 52, 24) },
  { pnode(GPIO, 68, 52, BSLIPMAX, 3, -1), rnode(GIN, 68, 52, 29) },
  { pnode(GPIO, 68, 52, CEIN, 3, -1), rnode(GOUT, 68, 52, 16) },
  { pnode(GPIO, 68, 52, CEOUT, 3, -1), rnode(GOUT, 68, 52, 17) },
  { pnode(GPIO, 68, 52, ACLR, 3, -1), rnode(GOUT, 68, 52, 18) },
  { pnode(GPIO, 68, 52, SCLR, 3, -1), rnode(GOUT, 68, 52, 25) },
  { pnode(GPIO, 68, 52, CLKIN_IN, 3, 0), rnode(DCMUX, 68, 52, 2) },
  { pnode(GPIO, 68, 52, CLKIN_IN, 3, 1), rnode(DCMUX, 68, 52, 3) },
  { pnode(GPIO, 68, 52, CLKIN_OUT, 3, 0), rnode(DCMUX, 68, 52, 0) },
  { pnode(GPIO, 68, 52, CLKIN_OUT, 3, 1), rnode(DCMUX, 68, 52, 1) },
  { pnode(HMC, 22, 61, AFISEQBUSY, -1, 0), rnode(GOUT, 60, 61, 48) },
  { pnode(HMC, 22, 61, AFISEQBUSY, -1, 1), rnode(GOUT, 60, 61, 47) },
  { pnode(HMC, 22, 61, AVLADDRESS, -1, 0), rnode(GOUT, 58, 61, 41) },
  { pnode(HMC, 22, 61, AVLADDRESS, -1, 1), rnode(GOUT, 58, 61, 45) },
  { pnode(HMC, 22, 61, AVLADDRESS, -1, 2), rnode(GOUT, 58, 61, 40) },
  { pnode(HMC, 22, 61, AVLADDRESS, -1, 3), rnode(GOUT, 58, 61, 44) },
  { pnode(HMC, 22, 61, AVLADDRESS, -1, 4), rnode(GOUT, 58, 61, 39) },
  { pnode(HMC, 22, 61, AVLADDRESS, -1, 5), rnode(GOUT, 58, 61, 43) },
  { pnode(HMC, 22, 61, AVLADDRESS, -1, 6), rnode(GOUT, 58, 61, 38) },
  { pnode(HMC, 22, 61, AVLADDRESS, -1, 7), rnode(GOUT, 58, 61, 27) },
  { pnode(HMC, 22, 61, AVLADDRESS, -1, 8), rnode(GOUT, 58, 61, 28) },
  { pnode(HMC, 22, 61, AVLADDRESS, -1, 9), rnode(GOUT, 58, 61, 34) },
  { pnode(HMC, 22, 61, AVLADDRESS, -1, 10), rnode(GOUT, 58, 61, 29) },
  { pnode(HMC, 22, 61, AVLADDRESS, -1, 11), rnode(GOUT, 58, 61, 32) },
  { pnode(HMC, 22, 61, AVLADDRESS, -1, 12), rnode(GOUT, 58, 61, 37) },
  { pnode(HMC, 22, 61, AVLADDRESS, -1, 13), rnode(GOUT, 58, 61, 35) },
  { pnode(HMC, 22, 61, AVLADDRESS, -1, 14), rnode(GOUT, 58, 61, 36) },
  { pnode(HMC, 22, 61, AVLADDRESS, -1, 15), rnode(GOUT, 58, 61, 26) },
  { pnode(HMC, 22, 61, AVLREAD, -1, -1), rnode(GOUT, 59, 61, 9) },
  { pnode(HMC, 22, 61, AVLRESETN, -1, -1), rnode(GOUT, 59, 61, 0) },
  { pnode(HMC, 22, 61, AVLWRITE, -1, -1), rnode(GOUT, 58, 61, 46) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 0), rnode(GOUT, 56, 61, 36) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 1), rnode(GOUT, 56, 61, 26) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 2), rnode(GOUT, 57, 61, 0) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 3), rnode(GOUT, 57, 61, 10) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 4), rnode(GOUT, 57, 61, 9) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 5), rnode(GOUT, 57, 61, 11) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 6), rnode(GOUT, 57, 61, 6) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 7), rnode(GOUT, 57, 61, 33) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 8), rnode(GOUT, 57, 61, 32) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 9), rnode(GOUT, 57, 61, 37) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 10), rnode(GOUT, 57, 61, 35) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 11), rnode(GOUT, 57, 61, 36) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 12), rnode(GOUT, 57, 61, 26) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 13), rnode(GOUT, 58, 61, 0) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 14), rnode(GOUT, 58, 61, 10) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 15), rnode(GOUT, 58, 61, 6) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 16), rnode(GOUT, 58, 61, 4) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 17), rnode(GOUT, 58, 61, 3) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 18), rnode(GOUT, 58, 61, 12) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 19), rnode(GOUT, 58, 61, 17) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 20), rnode(GOUT, 58, 61, 19) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 21), rnode(GOUT, 58, 61, 20) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 22), rnode(GOUT, 58, 61, 16) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 23), rnode(GOUT, 58, 61, 21) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 24), rnode(GOUT, 58, 61, 22) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 25), rnode(GOUT, 58, 61, 24) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 26), rnode(GOUT, 58, 61, 25) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 27), rnode(GOUT, 58, 61, 50) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 28), rnode(GOUT, 58, 61, 49) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 29), rnode(GOUT, 58, 61, 48) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 30), rnode(GOUT, 58, 61, 47) },
  { pnode(HMC, 22, 61, AVLWRITEDATA, -1, 31), rnode(GOUT, 58, 61, 42) },
  { pnode(HMC, 22, 61, BONDINGIN, 0, 0), rnode(GOUT, 28, 61, 16) },
  { pnode(HMC, 22, 61, BONDINGIN, 0, 1), rnode(GOUT, 34, 61, 6) },
  { pnode(HMC, 22, 61, BONDINGIN, 0, 2), rnode(GOUT, 33, 61, 26) },
  { pnode(HMC, 22, 61, BONDINGIN, 0, 3), rnode(GOUT, 40, 61, 33) },
  { pnode(HMC, 22, 61, BONDINGIN, 1, 0), rnode(GOUT, 23, 61, 44) },
  { pnode(HMC, 22, 61, BONDINGIN, 1, 1), rnode(GOUT, 24, 61, 33) },
  { pnode(HMC, 22, 61, BONDINGIN, 1, 2), rnode(GOUT, 28, 61, 14) },
  { pnode(HMC, 22, 61, BONDINGIN, 1, 3), rnode(GOUT, 29, 61, 21) },
  { pnode(HMC, 22, 61, BONDINGIN, 1, 4), rnode(GOUT, 30, 61, 21) },
  { pnode(HMC, 22, 61, BONDINGIN, 1, 5), rnode(GOUT, 33, 61, 10) },
  { pnode(HMC, 22, 61, BONDINGIN, 2, 0), rnode(GOUT, 23, 61, 39) },
  { pnode(HMC, 22, 61, BONDINGIN, 2, 1), rnode(GOUT, 24, 61, 32) },
  { pnode(HMC, 22, 61, BONDINGIN, 2, 2), rnode(GOUT, 28, 61, 19) },
  { pnode(HMC, 22, 61, BONDINGIN, 2, 3), rnode(GOUT, 29, 61, 22) },
  { pnode(HMC, 22, 61, BONDINGIN, 2, 4), rnode(GOUT, 30, 61, 16) },
  { pnode(HMC, 22, 61, BONDINGIN, 2, 5), rnode(GOUT, 33, 61, 9) },
  { pnode(HMC, 22, 61, GLOBALRESETN, -1, -1), rnode(GOUT, 59, 61, 37) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 0), rnode(GOUT, 22, 61, 34) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 1), rnode(GOUT, 22, 61, 29) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 2), rnode(GOUT, 22, 61, 30) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 3), rnode(GOUT, 22, 61, 31) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 4), rnode(GOUT, 22, 61, 33) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 5), rnode(GOUT, 22, 61, 32) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 6), rnode(GOUT, 22, 61, 37) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 7), rnode(GOUT, 22, 61, 35) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 8), rnode(GOUT, 22, 61, 36) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 9), rnode(GOUT, 22, 61, 26) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 10), rnode(GOUT, 23, 61, 0) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 11), rnode(GOUT, 23, 61, 10) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 12), rnode(GOUT, 23, 61, 9) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 13), rnode(GOUT, 23, 61, 11) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 14), rnode(GOUT, 23, 61, 6) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 15), rnode(GOUT, 23, 61, 7) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 16), rnode(GOUT, 23, 61, 5) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 17), rnode(GOUT, 23, 61, 4) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 18), rnode(GOUT, 23, 61, 3) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 19), rnode(GOUT, 23, 61, 8) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 20), rnode(GOUT, 23, 61, 2) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 21), rnode(GOUT, 23, 61, 1) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 22), rnode(GOUT, 23, 61, 12) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 23), rnode(GOUT, 23, 61, 17) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 24), rnode(GOUT, 23, 61, 13) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 25), rnode(GOUT, 23, 61, 18) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 26), rnode(GOUT, 23, 61, 14) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 27), rnode(GOUT, 23, 61, 19) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 28), rnode(GOUT, 23, 61, 15) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 29), rnode(GOUT, 23, 61, 20) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 30), rnode(GOUT, 23, 61, 16) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 31), rnode(GOUT, 23, 61, 21) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 32), rnode(GOUT, 23, 61, 22) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 33), rnode(GOUT, 23, 61, 23) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 34), rnode(GOUT, 23, 61, 24) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 35), rnode(GOUT, 23, 61, 25) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 36), rnode(GOUT, 23, 61, 50) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 37), rnode(GOUT, 23, 61, 49) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 38), rnode(GOUT, 23, 61, 48) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 39), rnode(GOUT, 23, 61, 47) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 40), rnode(GOUT, 23, 61, 42) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 0, 41), rnode(GOUT, 23, 61, 46) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 0), rnode(GOUT, 23, 61, 36) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 1), rnode(GOUT, 23, 61, 26) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 2), rnode(GOUT, 24, 61, 0) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 3), rnode(GOUT, 24, 61, 10) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 4), rnode(GOUT, 24, 61, 9) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 5), rnode(GOUT, 24, 61, 11) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 6), rnode(GOUT, 24, 61, 6) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 7), rnode(GOUT, 24, 61, 7) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 8), rnode(GOUT, 24, 61, 5) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 9), rnode(GOUT, 24, 61, 4) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 10), rnode(GOUT, 24, 61, 3) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 11), rnode(GOUT, 24, 61, 8) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 12), rnode(GOUT, 24, 61, 2) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 13), rnode(GOUT, 24, 61, 1) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 14), rnode(GOUT, 24, 61, 12) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 15), rnode(GOUT, 24, 61, 17) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 16), rnode(GOUT, 24, 61, 13) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 17), rnode(GOUT, 24, 61, 18) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 18), rnode(GOUT, 24, 61, 14) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 19), rnode(GOUT, 24, 61, 19) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 20), rnode(GOUT, 24, 61, 15) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 21), rnode(GOUT, 24, 61, 20) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 22), rnode(GOUT, 24, 61, 16) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 23), rnode(GOUT, 24, 61, 21) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 24), rnode(GOUT, 24, 61, 22) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 25), rnode(GOUT, 24, 61, 23) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 26), rnode(GOUT, 24, 61, 24) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 27), rnode(GOUT, 24, 61, 25) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 28), rnode(GOUT, 24, 61, 50) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 29), rnode(GOUT, 24, 61, 49) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 30), rnode(GOUT, 24, 61, 48) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 31), rnode(GOUT, 24, 61, 47) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 32), rnode(GOUT, 24, 61, 42) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 33), rnode(GOUT, 24, 61, 41) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 34), rnode(GOUT, 24, 61, 45) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 35), rnode(GOUT, 24, 61, 40) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 36), rnode(GOUT, 24, 61, 44) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 37), rnode(GOUT, 24, 61, 39) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 38), rnode(GOUT, 24, 61, 27) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 39), rnode(GOUT, 24, 61, 28) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 40), rnode(GOUT, 24, 61, 34) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 1, 41), rnode(GOUT, 24, 61, 29) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 0), rnode(GOUT, 24, 61, 35) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 1), rnode(GOUT, 24, 61, 36) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 2), rnode(GOUT, 24, 61, 37) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 3), rnode(GOUT, 24, 61, 26) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 4), rnode(GOUT, 25, 61, 0) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 5), rnode(GOUT, 25, 61, 10) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 6), rnode(GOUT, 25, 61, 9) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 7), rnode(GOUT, 25, 61, 11) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 8), rnode(GOUT, 25, 61, 6) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 9), rnode(GOUT, 25, 61, 7) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 10), rnode(GOUT, 25, 61, 5) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 11), rnode(GOUT, 25, 61, 4) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 12), rnode(GOUT, 25, 61, 3) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 13), rnode(GOUT, 25, 61, 8) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 14), rnode(GOUT, 25, 61, 2) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 15), rnode(GOUT, 25, 61, 1) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 16), rnode(GOUT, 25, 61, 12) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 17), rnode(GOUT, 25, 61, 17) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 18), rnode(GOUT, 25, 61, 13) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 19), rnode(GOUT, 25, 61, 18) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 20), rnode(GOUT, 25, 61, 14) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 21), rnode(GOUT, 25, 61, 19) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 22), rnode(GOUT, 25, 61, 15) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 23), rnode(GOUT, 25, 61, 20) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 24), rnode(GOUT, 25, 61, 16) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 25), rnode(GOUT, 25, 61, 21) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 26), rnode(GOUT, 25, 61, 22) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 27), rnode(GOUT, 25, 61, 23) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 28), rnode(GOUT, 25, 61, 24) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 29), rnode(GOUT, 25, 61, 25) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 30), rnode(GOUT, 25, 61, 50) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 31), rnode(GOUT, 25, 61, 49) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 32), rnode(GOUT, 25, 61, 48) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 33), rnode(GOUT, 25, 61, 47) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 34), rnode(GOUT, 25, 61, 46) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 35), rnode(GOUT, 25, 61, 41) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 36), rnode(GOUT, 25, 61, 45) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 37), rnode(GOUT, 25, 61, 40) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 38), rnode(GOUT, 25, 61, 44) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 39), rnode(GOUT, 25, 61, 39) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 40), rnode(GOUT, 25, 61, 43) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 2, 41), rnode(GOUT, 28, 61, 17) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 0), rnode(GOUT, 28, 61, 21) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 1), rnode(GOUT, 28, 61, 22) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 2), rnode(GOUT, 28, 61, 23) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 3), rnode(GOUT, 28, 61, 24) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 4), rnode(GOUT, 28, 61, 25) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 5), rnode(GOUT, 28, 61, 50) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 6), rnode(GOUT, 28, 61, 49) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 7), rnode(GOUT, 28, 61, 48) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 8), rnode(GOUT, 28, 61, 47) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 9), rnode(GOUT, 28, 61, 42) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 10), rnode(GOUT, 28, 61, 46) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 11), rnode(GOUT, 28, 61, 41) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 12), rnode(GOUT, 28, 61, 45) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 13), rnode(GOUT, 28, 61, 40) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 14), rnode(GOUT, 28, 61, 44) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 15), rnode(GOUT, 28, 61, 39) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 16), rnode(GOUT, 28, 61, 43) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 17), rnode(GOUT, 28, 61, 38) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 18), rnode(GOUT, 28, 61, 27) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 19), rnode(GOUT, 28, 61, 28) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 20), rnode(GOUT, 28, 61, 34) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 21), rnode(GOUT, 28, 61, 29) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 22), rnode(GOUT, 28, 61, 30) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 23), rnode(GOUT, 28, 61, 31) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 24), rnode(GOUT, 28, 61, 33) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 25), rnode(GOUT, 28, 61, 32) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 26), rnode(GOUT, 28, 61, 37) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 27), rnode(GOUT, 28, 61, 35) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 28), rnode(GOUT, 28, 61, 36) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 29), rnode(GOUT, 28, 61, 26) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 30), rnode(GOUT, 29, 61, 0) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 31), rnode(GOUT, 29, 61, 10) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 32), rnode(GOUT, 29, 61, 9) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 33), rnode(GOUT, 29, 61, 6) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 34), rnode(GOUT, 29, 61, 1) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 35), rnode(GOUT, 29, 61, 12) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 36), rnode(GOUT, 29, 61, 17) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 37), rnode(GOUT, 29, 61, 13) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 38), rnode(GOUT, 29, 61, 18) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 39), rnode(GOUT, 29, 61, 14) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 40), rnode(GOUT, 29, 61, 19) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 3, 41), rnode(GOUT, 29, 61, 15) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 0), rnode(GOUT, 29, 61, 23) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 1), rnode(GOUT, 29, 61, 24) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 2), rnode(GOUT, 29, 61, 25) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 3), rnode(GOUT, 29, 61, 50) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 4), rnode(GOUT, 29, 61, 49) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 5), rnode(GOUT, 29, 61, 48) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 6), rnode(GOUT, 29, 61, 47) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 7), rnode(GOUT, 29, 61, 42) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 8), rnode(GOUT, 29, 61, 46) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 9), rnode(GOUT, 29, 61, 41) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 10), rnode(GOUT, 29, 61, 45) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 11), rnode(GOUT, 29, 61, 40) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 12), rnode(GOUT, 29, 61, 44) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 13), rnode(GOUT, 29, 61, 39) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 14), rnode(GOUT, 29, 61, 43) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 15), rnode(GOUT, 29, 61, 38) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 16), rnode(GOUT, 29, 61, 27) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 17), rnode(GOUT, 29, 61, 28) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 18), rnode(GOUT, 29, 61, 34) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 19), rnode(GOUT, 29, 61, 29) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 20), rnode(GOUT, 29, 61, 30) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 21), rnode(GOUT, 29, 61, 31) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 22), rnode(GOUT, 29, 61, 33) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 23), rnode(GOUT, 29, 61, 32) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 24), rnode(GOUT, 29, 61, 37) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 25), rnode(GOUT, 29, 61, 35) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 26), rnode(GOUT, 29, 61, 36) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 27), rnode(GOUT, 29, 61, 26) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 28), rnode(GOUT, 30, 61, 0) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 29), rnode(GOUT, 30, 61, 10) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 30), rnode(GOUT, 30, 61, 11) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 31), rnode(GOUT, 30, 61, 6) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 32), rnode(GOUT, 30, 61, 7) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 33), rnode(GOUT, 30, 61, 5) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 34), rnode(GOUT, 30, 61, 2) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 35), rnode(GOUT, 30, 61, 1) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 36), rnode(GOUT, 30, 61, 12) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 37), rnode(GOUT, 30, 61, 17) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 38), rnode(GOUT, 30, 61, 13) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 39), rnode(GOUT, 30, 61, 18) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 40), rnode(GOUT, 30, 61, 14) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 4, 41), rnode(GOUT, 30, 61, 19) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 0), rnode(GOUT, 30, 61, 22) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 1), rnode(GOUT, 30, 61, 23) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 2), rnode(GOUT, 30, 61, 24) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 3), rnode(GOUT, 30, 61, 25) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 4), rnode(GOUT, 30, 61, 50) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 5), rnode(GOUT, 30, 61, 49) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 6), rnode(GOUT, 30, 61, 48) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 7), rnode(GOUT, 30, 61, 47) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 8), rnode(GOUT, 30, 61, 42) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 9), rnode(GOUT, 30, 61, 46) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 10), rnode(GOUT, 30, 61, 41) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 11), rnode(GOUT, 30, 61, 45) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 12), rnode(GOUT, 30, 61, 40) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 13), rnode(GOUT, 30, 61, 44) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 14), rnode(GOUT, 30, 61, 39) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 15), rnode(GOUT, 30, 61, 43) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 16), rnode(GOUT, 30, 61, 38) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 17), rnode(GOUT, 30, 61, 27) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 18), rnode(GOUT, 30, 61, 28) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 19), rnode(GOUT, 30, 61, 34) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 20), rnode(GOUT, 30, 61, 29) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 21), rnode(GOUT, 30, 61, 30) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 22), rnode(GOUT, 30, 61, 31) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 23), rnode(GOUT, 30, 61, 33) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 24), rnode(GOUT, 30, 61, 32) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 25), rnode(GOUT, 30, 61, 37) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 26), rnode(GOUT, 30, 61, 35) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 27), rnode(GOUT, 30, 61, 36) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 28), rnode(GOUT, 30, 61, 26) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 29), rnode(GOUT, 31, 61, 0) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 30), rnode(GOUT, 31, 61, 9) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 31), rnode(GOUT, 32, 61, 0) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 32), rnode(GOUT, 32, 61, 10) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 33), rnode(GOUT, 32, 61, 9) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 34), rnode(GOUT, 32, 61, 11) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 35), rnode(GOUT, 32, 61, 6) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 36), rnode(GOUT, 32, 61, 7) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 37), rnode(GOUT, 32, 61, 33) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 38), rnode(GOUT, 32, 61, 32) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 39), rnode(GOUT, 32, 61, 37) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 40), rnode(GOUT, 32, 61, 35) },
  { pnode(HMC, 22, 61, IAVSTCMDDATA, 5, 41), rnode(GOUT, 32, 61, 36) },
  { pnode(HMC, 22, 61, IAVSTCMDRESETN, 0, -1), rnode(GOUT, 23, 61, 45) },
  { pnode(HMC, 22, 61, IAVSTCMDRESETN, 1, -1), rnode(GOUT, 24, 61, 30) },
  { pnode(HMC, 22, 61, IAVSTCMDRESETN, 2, -1), rnode(GOUT, 28, 61, 13) },
  { pnode(HMC, 22, 61, IAVSTCMDRESETN, 3, -1), rnode(GOUT, 29, 61, 20) },
  { pnode(HMC, 22, 61, IAVSTCMDRESETN, 4, -1), rnode(GOUT, 30, 61, 15) },
  { pnode(HMC, 22, 61, IAVSTCMDRESETN, 5, -1), rnode(GOUT, 32, 61, 26) },
  { pnode(HMC, 22, 61, IAVSTRDCLK, 0, -1), rnode(DCMUX, 28, 61, 10) },
  { pnode(HMC, 22, 61, IAVSTRDCLK, 1, -1), rnode(DCMUX, 33, 61, 8) },
  { pnode(HMC, 22, 61, IAVSTRDCLK, 2, -1), rnode(DCMUX, 33, 61, 10) },
  { pnode(HMC, 22, 61, IAVSTRDCLK, 3, -1), rnode(DCMUX, 39, 61, 8) },
  { pnode(HMC, 22, 61, IAVSTRDREADY, 0, -1), rnode(GOUT, 28, 61, 15) },
  { pnode(HMC, 22, 61, IAVSTRDREADY, 1, -1), rnode(GOUT, 34, 61, 0) },
  { pnode(HMC, 22, 61, IAVSTRDREADY, 2, -1), rnode(GOUT, 40, 61, 32) },
  { pnode(HMC, 22, 61, IAVSTRDREADY, 3, -1), rnode(GOUT, 48, 61, 33) },
  { pnode(HMC, 22, 61, IAVSTRDRESETN, 0, -1), rnode(GOUT, 28, 61, 20) },
  { pnode(HMC, 22, 61, IAVSTRDRESETN, 1, -1), rnode(GOUT, 34, 61, 10) },
  { pnode(HMC, 22, 61, IAVSTRDRESETN, 2, -1), rnode(GOUT, 40, 61, 37) },
  { pnode(HMC, 22, 61, IAVSTRDRESETN, 3, -1), rnode(GOUT, 48, 61, 32) },
  { pnode(HMC, 22, 61, IAVSTWRACKREADY, 0, -1), rnode(GOUT, 23, 61, 40) },
  { pnode(HMC, 22, 61, IAVSTWRACKREADY, 1, -1), rnode(GOUT, 24, 61, 31) },
  { pnode(HMC, 22, 61, IAVSTWRACKREADY, 2, -1), rnode(GOUT, 28, 61, 18) },
  { pnode(HMC, 22, 61, IAVSTWRACKREADY, 3, -1), rnode(GOUT, 29, 61, 16) },
  { pnode(HMC, 22, 61, IAVSTWRACKREADY, 4, -1), rnode(GOUT, 30, 61, 20) },
  { pnode(HMC, 22, 61, IAVSTWRACKREADY, 5, -1), rnode(GOUT, 33, 61, 0) },
  { pnode(HMC, 22, 61, IAVSTWRCLK, -1, 0), rnode(DCMUX, 41, 61, 0) },
  { pnode(HMC, 22, 61, IAVSTWRCLK, -1, 1), rnode(DCMUX, 49, 61, 2) },
  { pnode(HMC, 22, 61, IAVSTWRCLK, -1, 2), rnode(DCMUX, 43, 61, 8) },
  { pnode(HMC, 22, 61, IAVSTWRCLK, -1, 3), rnode(DCMUX, 49, 61, 0) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 0), rnode(GOUT, 33, 61, 11) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 1), rnode(GOUT, 33, 61, 6) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 2), rnode(GOUT, 33, 61, 7) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 3), rnode(GOUT, 33, 61, 5) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 4), rnode(GOUT, 33, 61, 4) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 5), rnode(GOUT, 33, 61, 3) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 6), rnode(GOUT, 33, 61, 8) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 7), rnode(GOUT, 33, 61, 2) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 8), rnode(GOUT, 33, 61, 1) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 9), rnode(GOUT, 33, 61, 12) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 10), rnode(GOUT, 33, 61, 17) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 11), rnode(GOUT, 33, 61, 13) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 12), rnode(GOUT, 33, 61, 18) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 13), rnode(GOUT, 33, 61, 14) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 14), rnode(GOUT, 33, 61, 19) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 15), rnode(GOUT, 33, 61, 15) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 16), rnode(GOUT, 33, 61, 20) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 17), rnode(GOUT, 33, 61, 16) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 18), rnode(GOUT, 33, 61, 21) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 19), rnode(GOUT, 33, 61, 22) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 20), rnode(GOUT, 33, 61, 23) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 21), rnode(GOUT, 33, 61, 24) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 22), rnode(GOUT, 33, 61, 25) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 23), rnode(GOUT, 33, 61, 50) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 24), rnode(GOUT, 33, 61, 49) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 25), rnode(GOUT, 33, 61, 48) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 26), rnode(GOUT, 33, 61, 47) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 27), rnode(GOUT, 33, 61, 42) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 28), rnode(GOUT, 33, 61, 46) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 29), rnode(GOUT, 33, 61, 41) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 30), rnode(GOUT, 33, 61, 45) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 31), rnode(GOUT, 33, 61, 40) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 32), rnode(GOUT, 33, 61, 44) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 33), rnode(GOUT, 33, 61, 39) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 34), rnode(GOUT, 33, 61, 43) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 35), rnode(GOUT, 33, 61, 27) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 36), rnode(GOUT, 33, 61, 28) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 37), rnode(GOUT, 33, 61, 34) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 38), rnode(GOUT, 33, 61, 29) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 39), rnode(GOUT, 33, 61, 30) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 40), rnode(GOUT, 33, 61, 31) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 41), rnode(GOUT, 33, 61, 33) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 42), rnode(GOUT, 33, 61, 37) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 43), rnode(GOUT, 33, 61, 35) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 44), rnode(GOUT, 33, 61, 36) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 45), rnode(GOUT, 34, 61, 32) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 46), rnode(GOUT, 34, 61, 37) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 47), rnode(GOUT, 35, 61, 0) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 48), rnode(GOUT, 35, 61, 10) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 49), rnode(GOUT, 35, 61, 7) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 50), rnode(GOUT, 35, 61, 4) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 51), rnode(GOUT, 35, 61, 3) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 52), rnode(GOUT, 35, 61, 8) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 53), rnode(GOUT, 35, 61, 2) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 54), rnode(GOUT, 35, 61, 12) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 55), rnode(GOUT, 35, 61, 17) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 56), rnode(GOUT, 35, 61, 13) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 57), rnode(GOUT, 35, 61, 18) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 58), rnode(GOUT, 35, 61, 14) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 59), rnode(GOUT, 35, 61, 19) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 60), rnode(GOUT, 35, 61, 15) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 61), rnode(GOUT, 35, 61, 20) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 62), rnode(GOUT, 35, 61, 16) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 63), rnode(GOUT, 35, 61, 21) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 64), rnode(GOUT, 35, 61, 22) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 65), rnode(GOUT, 35, 61, 23) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 66), rnode(GOUT, 35, 61, 24) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 67), rnode(GOUT, 35, 61, 25) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 68), rnode(GOUT, 35, 61, 50) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 69), rnode(GOUT, 35, 61, 49) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 70), rnode(GOUT, 35, 61, 48) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 71), rnode(GOUT, 35, 61, 47) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 72), rnode(GOUT, 35, 61, 42) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 73), rnode(GOUT, 35, 61, 40) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 74), rnode(GOUT, 35, 61, 39) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 75), rnode(GOUT, 35, 61, 43) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 76), rnode(GOUT, 35, 61, 38) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 77), rnode(GOUT, 35, 61, 30) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 78), rnode(GOUT, 35, 61, 31) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 79), rnode(GOUT, 35, 61, 33) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 80), rnode(GOUT, 35, 61, 32) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 81), rnode(GOUT, 35, 61, 37) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 82), rnode(GOUT, 35, 61, 35) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 83), rnode(GOUT, 35, 61, 36) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 84), rnode(GOUT, 35, 61, 26) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 85), rnode(GOUT, 36, 61, 0) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 86), rnode(GOUT, 36, 61, 10) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 87), rnode(GOUT, 36, 61, 9) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 88), rnode(GOUT, 36, 61, 6) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 0, 89), rnode(GOUT, 36, 61, 7) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 0), rnode(GOUT, 36, 61, 33) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 1), rnode(GOUT, 36, 61, 32) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 2), rnode(GOUT, 36, 61, 37) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 3), rnode(GOUT, 36, 61, 26) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 4), rnode(GOUT, 37, 61, 0) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 5), rnode(GOUT, 37, 61, 10) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 6), rnode(GOUT, 37, 61, 9) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 7), rnode(GOUT, 37, 61, 11) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 8), rnode(GOUT, 37, 61, 6) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 9), rnode(GOUT, 37, 61, 7) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 10), rnode(GOUT, 37, 61, 5) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 11), rnode(GOUT, 37, 61, 4) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 12), rnode(GOUT, 37, 61, 3) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 13), rnode(GOUT, 37, 61, 8) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 14), rnode(GOUT, 37, 61, 2) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 15), rnode(GOUT, 37, 61, 1) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 16), rnode(GOUT, 37, 61, 12) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 17), rnode(GOUT, 37, 61, 17) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 18), rnode(GOUT, 37, 61, 13) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 19), rnode(GOUT, 37, 61, 18) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 20), rnode(GOUT, 37, 61, 24) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 21), rnode(GOUT, 37, 61, 25) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 22), rnode(GOUT, 37, 61, 44) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 23), rnode(GOUT, 37, 61, 39) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 24), rnode(GOUT, 37, 61, 27) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 25), rnode(GOUT, 37, 61, 29) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 26), rnode(GOUT, 37, 61, 30) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 27), rnode(GOUT, 37, 61, 31) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 28), rnode(GOUT, 37, 61, 33) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 29), rnode(GOUT, 37, 61, 32) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 30), rnode(GOUT, 37, 61, 37) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 31), rnode(GOUT, 37, 61, 35) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 32), rnode(GOUT, 37, 61, 36) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 33), rnode(GOUT, 37, 61, 26) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 34), rnode(GOUT, 38, 61, 0) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 35), rnode(GOUT, 38, 61, 10) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 36), rnode(GOUT, 38, 61, 9) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 37), rnode(GOUT, 39, 61, 36) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 38), rnode(GOUT, 39, 61, 26) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 39), rnode(GOUT, 40, 61, 0) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 40), rnode(GOUT, 40, 61, 10) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 41), rnode(GOUT, 40, 61, 9) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 42), rnode(GOUT, 40, 61, 11) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 43), rnode(GOUT, 40, 61, 6) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 44), rnode(GOUT, 40, 61, 7) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 45), rnode(GOUT, 40, 61, 36) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 46), rnode(GOUT, 40, 61, 26) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 47), rnode(GOUT, 41, 61, 0) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 48), rnode(GOUT, 41, 61, 10) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 49), rnode(GOUT, 41, 61, 9) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 50), rnode(GOUT, 41, 61, 11) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 51), rnode(GOUT, 41, 61, 6) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 52), rnode(GOUT, 41, 61, 7) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 53), rnode(GOUT, 41, 61, 5) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 54), rnode(GOUT, 41, 61, 4) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 55), rnode(GOUT, 41, 61, 3) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 56), rnode(GOUT, 41, 61, 8) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 57), rnode(GOUT, 41, 61, 2) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 58), rnode(GOUT, 41, 61, 1) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 59), rnode(GOUT, 41, 61, 12) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 60), rnode(GOUT, 41, 61, 19) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 61), rnode(GOUT, 41, 61, 15) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 62), rnode(GOUT, 41, 61, 20) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 63), rnode(GOUT, 41, 61, 16) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 64), rnode(GOUT, 41, 61, 21) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 65), rnode(GOUT, 41, 61, 22) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 66), rnode(GOUT, 41, 61, 23) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 67), rnode(GOUT, 41, 61, 24) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 68), rnode(GOUT, 41, 61, 25) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 69), rnode(GOUT, 41, 61, 50) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 70), rnode(GOUT, 41, 61, 49) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 71), rnode(GOUT, 41, 61, 48) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 72), rnode(GOUT, 41, 61, 47) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 73), rnode(GOUT, 41, 61, 42) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 74), rnode(GOUT, 41, 61, 46) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 75), rnode(GOUT, 41, 61, 41) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 76), rnode(GOUT, 41, 61, 27) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 77), rnode(GOUT, 41, 61, 28) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 78), rnode(GOUT, 41, 61, 34) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 79), rnode(GOUT, 41, 61, 29) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 80), rnode(GOUT, 41, 61, 30) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 81), rnode(GOUT, 41, 61, 31) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 82), rnode(GOUT, 41, 61, 33) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 83), rnode(GOUT, 41, 61, 37) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 84), rnode(GOUT, 41, 61, 35) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 85), rnode(GOUT, 41, 61, 36) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 86), rnode(GOUT, 41, 61, 26) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 87), rnode(GOUT, 42, 61, 0) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 88), rnode(GOUT, 42, 61, 10) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 1, 89), rnode(GOUT, 42, 61, 9) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 0), rnode(GOUT, 42, 61, 11) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 1), rnode(GOUT, 42, 61, 33) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 2), rnode(GOUT, 42, 61, 35) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 3), rnode(GOUT, 42, 61, 36) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 4), rnode(GOUT, 43, 61, 9) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 5), rnode(GOUT, 43, 61, 11) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 6), rnode(GOUT, 43, 61, 4) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 7), rnode(GOUT, 43, 61, 8) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 8), rnode(GOUT, 43, 61, 2) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 9), rnode(GOUT, 43, 61, 1) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 10), rnode(GOUT, 43, 61, 12) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 11), rnode(GOUT, 43, 61, 13) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 12), rnode(GOUT, 43, 61, 18) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 13), rnode(GOUT, 43, 61, 14) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 14), rnode(GOUT, 43, 61, 19) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 15), rnode(GOUT, 43, 61, 15) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 16), rnode(GOUT, 43, 61, 20) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 17), rnode(GOUT, 43, 61, 16) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 18), rnode(GOUT, 43, 61, 21) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 19), rnode(GOUT, 43, 61, 22) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 20), rnode(GOUT, 43, 61, 23) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 21), rnode(GOUT, 43, 61, 24) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 22), rnode(GOUT, 43, 61, 25) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 23), rnode(GOUT, 43, 61, 50) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 24), rnode(GOUT, 43, 61, 49) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 25), rnode(GOUT, 43, 61, 48) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 26), rnode(GOUT, 43, 61, 47) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 27), rnode(GOUT, 43, 61, 42) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 28), rnode(GOUT, 43, 61, 46) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 29), rnode(GOUT, 43, 61, 41) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 30), rnode(GOUT, 43, 61, 39) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 31), rnode(GOUT, 43, 61, 43) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 32), rnode(GOUT, 43, 61, 38) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 33), rnode(GOUT, 43, 61, 30) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 34), rnode(GOUT, 43, 61, 31) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 35), rnode(GOUT, 43, 61, 33) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 36), rnode(GOUT, 43, 61, 32) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 37), rnode(GOUT, 43, 61, 37) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 38), rnode(GOUT, 43, 61, 35) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 39), rnode(GOUT, 43, 61, 36) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 40), rnode(GOUT, 43, 61, 26) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 41), rnode(GOUT, 44, 61, 0) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 42), rnode(GOUT, 44, 61, 10) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 43), rnode(GOUT, 44, 61, 9) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 44), rnode(GOUT, 44, 61, 6) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 45), rnode(GOUT, 44, 61, 33) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 46), rnode(GOUT, 44, 61, 32) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 47), rnode(GOUT, 44, 61, 36) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 48), rnode(GOUT, 44, 61, 26) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 49), rnode(GOUT, 45, 61, 0) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 50), rnode(GOUT, 45, 61, 10) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 51), rnode(GOUT, 45, 61, 9) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 52), rnode(GOUT, 45, 61, 11) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 53), rnode(GOUT, 45, 61, 6) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 54), rnode(GOUT, 45, 61, 7) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 55), rnode(GOUT, 45, 61, 5) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 56), rnode(GOUT, 45, 61, 4) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 57), rnode(GOUT, 45, 61, 3) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 58), rnode(GOUT, 45, 61, 8) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 59), rnode(GOUT, 45, 61, 2) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 60), rnode(GOUT, 45, 61, 1) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 61), rnode(GOUT, 45, 61, 12) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 62), rnode(GOUT, 45, 61, 17) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 63), rnode(GOUT, 45, 61, 13) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 64), rnode(GOUT, 45, 61, 18) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 65), rnode(GOUT, 45, 61, 14) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 66), rnode(GOUT, 45, 61, 15) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 67), rnode(GOUT, 45, 61, 20) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 68), rnode(GOUT, 45, 61, 22) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 69), rnode(GOUT, 45, 61, 25) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 70), rnode(GOUT, 45, 61, 50) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 71), rnode(GOUT, 45, 61, 49) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 72), rnode(GOUT, 45, 61, 48) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 73), rnode(GOUT, 45, 61, 47) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 74), rnode(GOUT, 45, 61, 42) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 75), rnode(GOUT, 45, 61, 46) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 76), rnode(GOUT, 45, 61, 45) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 77), rnode(GOUT, 45, 61, 40) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 78), rnode(GOUT, 45, 61, 44) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 79), rnode(GOUT, 45, 61, 39) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 80), rnode(GOUT, 47, 61, 0) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 81), rnode(GOUT, 47, 61, 10) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 82), rnode(GOUT, 47, 61, 9) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 83), rnode(GOUT, 47, 61, 11) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 84), rnode(GOUT, 47, 61, 6) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 85), rnode(GOUT, 47, 61, 7) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 86), rnode(GOUT, 47, 61, 5) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 87), rnode(GOUT, 47, 61, 4) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 88), rnode(GOUT, 47, 61, 3) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 2, 89), rnode(GOUT, 47, 61, 8) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 0), rnode(GOUT, 47, 61, 2) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 1), rnode(GOUT, 47, 61, 1) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 2), rnode(GOUT, 47, 61, 12) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 3), rnode(GOUT, 47, 61, 17) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 4), rnode(GOUT, 47, 61, 13) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 5), rnode(GOUT, 47, 61, 18) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 6), rnode(GOUT, 47, 61, 14) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 7), rnode(GOUT, 47, 61, 19) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 8), rnode(GOUT, 47, 61, 15) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 9), rnode(GOUT, 47, 61, 20) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 10), rnode(GOUT, 47, 61, 16) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 11), rnode(GOUT, 47, 61, 21) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 12), rnode(GOUT, 47, 61, 22) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 13), rnode(GOUT, 47, 61, 23) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 14), rnode(GOUT, 47, 61, 24) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 15), rnode(GOUT, 47, 61, 25) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 16), rnode(GOUT, 47, 61, 50) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 17), rnode(GOUT, 47, 61, 49) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 18), rnode(GOUT, 47, 61, 48) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 19), rnode(GOUT, 47, 61, 47) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 20), rnode(GOUT, 47, 61, 42) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 21), rnode(GOUT, 47, 61, 46) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 22), rnode(GOUT, 47, 61, 41) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 23), rnode(GOUT, 47, 61, 45) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 24), rnode(GOUT, 47, 61, 40) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 25), rnode(GOUT, 47, 61, 44) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 26), rnode(GOUT, 47, 61, 39) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 27), rnode(GOUT, 47, 61, 43) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 28), rnode(GOUT, 47, 61, 38) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 29), rnode(GOUT, 47, 61, 27) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 30), rnode(GOUT, 47, 61, 28) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 31), rnode(GOUT, 47, 61, 34) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 32), rnode(GOUT, 47, 61, 29) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 33), rnode(GOUT, 47, 61, 30) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 34), rnode(GOUT, 47, 61, 31) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 35), rnode(GOUT, 47, 61, 33) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 36), rnode(GOUT, 47, 61, 32) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 37), rnode(GOUT, 47, 61, 37) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 38), rnode(GOUT, 47, 61, 35) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 39), rnode(GOUT, 47, 61, 36) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 40), rnode(GOUT, 47, 61, 26) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 41), rnode(GOUT, 48, 61, 0) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 42), rnode(GOUT, 48, 61, 10) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 43), rnode(GOUT, 48, 61, 9) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 44), rnode(GOUT, 48, 61, 11) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 45), rnode(GOUT, 48, 61, 35) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 46), rnode(GOUT, 48, 61, 36) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 47), rnode(GOUT, 48, 61, 26) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 48), rnode(GOUT, 49, 61, 0) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 49), rnode(GOUT, 49, 61, 10) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 50), rnode(GOUT, 49, 61, 6) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 51), rnode(GOUT, 49, 61, 4) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 52), rnode(GOUT, 49, 61, 3) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 53), rnode(GOUT, 49, 61, 12) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 54), rnode(GOUT, 49, 61, 17) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 55), rnode(GOUT, 49, 61, 19) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 56), rnode(GOUT, 49, 61, 20) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 57), rnode(GOUT, 49, 61, 16) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 58), rnode(GOUT, 49, 61, 21) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 59), rnode(GOUT, 49, 61, 22) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 60), rnode(GOUT, 49, 61, 24) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 61), rnode(GOUT, 49, 61, 25) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 62), rnode(GOUT, 49, 61, 50) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 63), rnode(GOUT, 49, 61, 49) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 64), rnode(GOUT, 49, 61, 48) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 65), rnode(GOUT, 49, 61, 47) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 66), rnode(GOUT, 49, 61, 42) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 67), rnode(GOUT, 49, 61, 46) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 68), rnode(GOUT, 49, 61, 41) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 69), rnode(GOUT, 49, 61, 45) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 70), rnode(GOUT, 49, 61, 40) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 71), rnode(GOUT, 49, 61, 44) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 72), rnode(GOUT, 49, 61, 39) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 73), rnode(GOUT, 49, 61, 43) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 74), rnode(GOUT, 49, 61, 38) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 75), rnode(GOUT, 49, 61, 27) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 76), rnode(GOUT, 49, 61, 28) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 77), rnode(GOUT, 49, 61, 34) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 78), rnode(GOUT, 49, 61, 29) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 79), rnode(GOUT, 49, 61, 32) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 80), rnode(GOUT, 50, 61, 9) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 81), rnode(GOUT, 50, 61, 11) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 82), rnode(GOUT, 50, 61, 6) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 83), rnode(GOUT, 50, 61, 7) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 84), rnode(GOUT, 50, 61, 33) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 85), rnode(GOUT, 50, 61, 32) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 86), rnode(GOUT, 55, 61, 37) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 87), rnode(GOUT, 55, 61, 35) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 88), rnode(GOUT, 55, 61, 36) },
  { pnode(HMC, 22, 61, IAVSTWRDATA, 3, 89), rnode(GOUT, 55, 61, 26) },
  { pnode(HMC, 22, 61, IAVSTWRRESETN, 0, -1), rnode(GOUT, 40, 61, 35) },
  { pnode(HMC, 22, 61, IAVSTWRRESETN, 1, -1), rnode(GOUT, 48, 61, 37) },
  { pnode(HMC, 22, 61, IAVSTWRRESETN, 2, -1), rnode(GOUT, 44, 61, 7) },
  { pnode(HMC, 22, 61, IAVSTWRRESETN, 3, -1), rnode(GOUT, 48, 61, 6) },
  { pnode(HMC, 22, 61, IOINTADDRACLR, -1, 0), rnode(GOUT, 21, 61, 21) },
  { pnode(HMC, 22, 61, IOINTADDRACLR, -1, 1), rnode(GOUT, 21, 61, 12) },
  { pnode(HMC, 22, 61, IOINTADDRACLR, -1, 2), rnode(GOUT, 19, 61, 21) },
  { pnode(HMC, 22, 61, IOINTADDRACLR, -1, 3), rnode(GOUT, 19, 61, 12) },
  { pnode(HMC, 22, 61, IOINTADDRACLR, -1, 4), rnode(GOUT, 19, 61, 28) },
  { pnode(HMC, 22, 61, IOINTADDRACLR, -1, 5), rnode(GOUT, 19, 61, 42) },
  { pnode(HMC, 22, 61, IOINTADDRACLR, -1, 6), rnode(GOUT, 18, 61, 21) },
  { pnode(HMC, 22, 61, IOINTADDRACLR, -1, 7), rnode(GOUT, 18, 61, 12) },
  { pnode(HMC, 22, 61, IOINTADDRACLR, -1, 8), rnode(GOUT, 14, 61, 28) },
  { pnode(HMC, 22, 61, IOINTADDRACLR, -1, 9), rnode(GOUT, 14, 61, 42) },
  { pnode(HMC, 22, 61, IOINTADDRACLR, -1, 10), rnode(GOUT, 14, 61, 21) },
  { pnode(HMC, 22, 61, IOINTADDRACLR, -1, 11), rnode(GOUT, 14, 61, 12) },
  { pnode(HMC, 22, 61, IOINTADDRACLR, -1, 12), rnode(GOUT, 12, 61, 21) },
  { pnode(HMC, 22, 61, IOINTADDRACLR, -1, 13), rnode(GOUT, 12, 61, 12) },
  { pnode(HMC, 22, 61, IOINTADDRACLR, -1, 14), rnode(GOUT, 10, 61, 28) },
  { pnode(HMC, 22, 61, IOINTADDRACLR, -1, 15), rnode(GOUT, 10, 61, 42) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 0), rnode(GOUT, 21, 61, 14) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 1), rnode(GOUT, 21, 61, 22) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 2), rnode(GOUT, 21, 61, 15) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 3), rnode(GOUT, 21, 61, 23) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 4), rnode(GOUT, 21, 61, 3) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 5), rnode(GOUT, 21, 61, 17) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 6), rnode(GOUT, 21, 61, 8) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 7), rnode(GOUT, 21, 61, 18) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 8), rnode(GOUT, 19, 61, 14) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 9), rnode(GOUT, 19, 61, 22) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 10), rnode(GOUT, 19, 61, 15) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 11), rnode(GOUT, 19, 61, 23) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 12), rnode(GOUT, 19, 61, 3) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 13), rnode(GOUT, 19, 61, 17) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 14), rnode(GOUT, 19, 61, 8) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 15), rnode(GOUT, 19, 61, 18) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 16), rnode(GOUT, 19, 61, 44) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 17), rnode(GOUT, 19, 61, 34) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 18), rnode(GOUT, 19, 61, 43) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 19), rnode(GOUT, 19, 61, 29) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 20), rnode(GOUT, 19, 61, 49) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 21), rnode(GOUT, 19, 61, 41) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 22), rnode(GOUT, 19, 61, 48) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 23), rnode(GOUT, 19, 61, 40) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 24), rnode(GOUT, 18, 61, 14) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 25), rnode(GOUT, 18, 61, 22) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 26), rnode(GOUT, 18, 61, 15) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 27), rnode(GOUT, 18, 61, 23) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 28), rnode(GOUT, 18, 61, 3) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 29), rnode(GOUT, 18, 61, 17) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 30), rnode(GOUT, 18, 61, 8) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 31), rnode(GOUT, 18, 61, 18) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 32), rnode(GOUT, 14, 61, 44) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 33), rnode(GOUT, 14, 61, 34) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 34), rnode(GOUT, 14, 61, 43) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 35), rnode(GOUT, 14, 61, 29) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 36), rnode(GOUT, 14, 61, 49) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 37), rnode(GOUT, 14, 61, 41) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 38), rnode(GOUT, 14, 61, 48) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 39), rnode(GOUT, 14, 61, 40) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 40), rnode(GOUT, 14, 61, 14) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 41), rnode(GOUT, 14, 61, 22) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 42), rnode(GOUT, 14, 61, 15) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 43), rnode(GOUT, 14, 61, 23) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 44), rnode(GOUT, 14, 61, 3) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 45), rnode(GOUT, 14, 61, 17) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 46), rnode(GOUT, 14, 61, 8) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 47), rnode(GOUT, 14, 61, 18) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 48), rnode(GOUT, 12, 61, 14) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 49), rnode(GOUT, 12, 61, 22) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 50), rnode(GOUT, 12, 61, 15) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 51), rnode(GOUT, 12, 61, 23) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 52), rnode(GOUT, 12, 61, 3) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 53), rnode(GOUT, 12, 61, 17) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 54), rnode(GOUT, 12, 61, 8) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 55), rnode(GOUT, 12, 61, 18) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 56), rnode(GOUT, 10, 61, 44) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 57), rnode(GOUT, 10, 61, 34) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 58), rnode(GOUT, 10, 61, 43) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 59), rnode(GOUT, 10, 61, 29) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 60), rnode(GOUT, 10, 61, 49) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 61), rnode(GOUT, 10, 61, 41) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 62), rnode(GOUT, 10, 61, 48) },
  { pnode(HMC, 22, 61, IOINTADDRDOUT, -1, 63), rnode(GOUT, 10, 61, 40) },
  { pnode(HMC, 22, 61, IOINTBAACLR, -1, 0), rnode(GOUT, 17, 61, 21) },
  { pnode(HMC, 22, 61, IOINTBAACLR, -1, 1), rnode(GOUT, 17, 61, 28) },
  { pnode(HMC, 22, 61, IOINTBAACLR, -1, 2), rnode(GOUT, 17, 61, 42) },
  { pnode(HMC, 22, 61, IOINTBADOUT, -1, 0), rnode(GOUT, 17, 61, 14) },
  { pnode(HMC, 22, 61, IOINTBADOUT, -1, 1), rnode(GOUT, 17, 61, 22) },
  { pnode(HMC, 22, 61, IOINTBADOUT, -1, 2), rnode(GOUT, 17, 61, 15) },
  { pnode(HMC, 22, 61, IOINTBADOUT, -1, 3), rnode(GOUT, 17, 61, 23) },
  { pnode(HMC, 22, 61, IOINTBADOUT, -1, 4), rnode(GOUT, 17, 61, 44) },
  { pnode(HMC, 22, 61, IOINTBADOUT, -1, 5), rnode(GOUT, 17, 61, 34) },
  { pnode(HMC, 22, 61, IOINTBADOUT, -1, 6), rnode(GOUT, 17, 61, 43) },
  { pnode(HMC, 22, 61, IOINTBADOUT, -1, 7), rnode(GOUT, 17, 61, 29) },
  { pnode(HMC, 22, 61, IOINTBADOUT, -1, 8), rnode(GOUT, 17, 61, 49) },
  { pnode(HMC, 22, 61, IOINTBADOUT, -1, 9), rnode(GOUT, 17, 61, 41) },
  { pnode(HMC, 22, 61, IOINTBADOUT, -1, 10), rnode(GOUT, 17, 61, 48) },
  { pnode(HMC, 22, 61, IOINTBADOUT, -1, 11), rnode(GOUT, 17, 61, 40) },
  { pnode(HMC, 22, 61, IOINTCASNACLR, -1, -1), rnode(GOUT, 15, 61, 21) },
  { pnode(HMC, 22, 61, IOINTCASNDOUT, -1, 0), rnode(GOUT, 15, 61, 14) },
  { pnode(HMC, 22, 61, IOINTCASNDOUT, -1, 1), rnode(GOUT, 15, 61, 22) },
  { pnode(HMC, 22, 61, IOINTCASNDOUT, -1, 2), rnode(GOUT, 15, 61, 15) },
  { pnode(HMC, 22, 61, IOINTCASNDOUT, -1, 3), rnode(GOUT, 15, 61, 23) },
  { pnode(HMC, 22, 61, IOINTCKDOUT, -1, 0), rnode(GOUT, 18, 61, 44) },
  { pnode(HMC, 22, 61, IOINTCKDOUT, -1, 1), rnode(GOUT, 18, 61, 34) },
  { pnode(HMC, 22, 61, IOINTCKDOUT, -1, 2), rnode(GOUT, 18, 61, 43) },
  { pnode(HMC, 22, 61, IOINTCKDOUT, -1, 3), rnode(GOUT, 18, 61, 29) },
  { pnode(HMC, 22, 61, IOINTCKEACLR, -1, 0), rnode(GOUT, 44, 61, 12) },
  { pnode(HMC, 22, 61, IOINTCKEACLR, -1, 1), rnode(GOUT, 42, 61, 21) },
  { pnode(HMC, 22, 61, IOINTCKEDOUT, -1, 0), rnode(GOUT, 44, 61, 3) },
  { pnode(HMC, 22, 61, IOINTCKEDOUT, -1, 1), rnode(GOUT, 44, 61, 17) },
  { pnode(HMC, 22, 61, IOINTCKEDOUT, -1, 2), rnode(GOUT, 44, 61, 8) },
  { pnode(HMC, 22, 61, IOINTCKEDOUT, -1, 3), rnode(GOUT, 44, 61, 18) },
  { pnode(HMC, 22, 61, IOINTCKEDOUT, -1, 4), rnode(GOUT, 42, 61, 14) },
  { pnode(HMC, 22, 61, IOINTCKEDOUT, -1, 5), rnode(GOUT, 42, 61, 22) },
  { pnode(HMC, 22, 61, IOINTCKEDOUT, -1, 6), rnode(GOUT, 42, 61, 15) },
  { pnode(HMC, 22, 61, IOINTCKEDOUT, -1, 7), rnode(GOUT, 42, 61, 23) },
  { pnode(HMC, 22, 61, IOINTCKNDOUT, -1, 0), rnode(GOUT, 18, 61, 49) },
  { pnode(HMC, 22, 61, IOINTCKNDOUT, -1, 1), rnode(GOUT, 18, 61, 41) },
  { pnode(HMC, 22, 61, IOINTCKNDOUT, -1, 2), rnode(GOUT, 18, 61, 48) },
  { pnode(HMC, 22, 61, IOINTCKNDOUT, -1, 3), rnode(GOUT, 18, 61, 40) },
  { pnode(HMC, 22, 61, IOINTCSNACLR, -1, 0), rnode(GOUT, 12, 61, 28) },
  { pnode(HMC, 22, 61, IOINTCSNACLR, -1, 1), rnode(GOUT, 12, 61, 42) },
  { pnode(HMC, 22, 61, IOINTCSNDOUT, -1, 0), rnode(GOUT, 12, 61, 44) },
  { pnode(HMC, 22, 61, IOINTCSNDOUT, -1, 1), rnode(GOUT, 12, 61, 34) },
  { pnode(HMC, 22, 61, IOINTCSNDOUT, -1, 2), rnode(GOUT, 12, 61, 43) },
  { pnode(HMC, 22, 61, IOINTCSNDOUT, -1, 3), rnode(GOUT, 12, 61, 29) },
  { pnode(HMC, 22, 61, IOINTCSNDOUT, -1, 4), rnode(GOUT, 12, 61, 49) },
  { pnode(HMC, 22, 61, IOINTCSNDOUT, -1, 5), rnode(GOUT, 12, 61, 41) },
  { pnode(HMC, 22, 61, IOINTCSNDOUT, -1, 6), rnode(GOUT, 12, 61, 48) },
  { pnode(HMC, 22, 61, IOINTCSNDOUT, -1, 7), rnode(GOUT, 12, 61, 40) },
  { pnode(HMC, 22, 61, IOINTDMDOUT, -1, 0), rnode(GOUT, 38, 61, 14) },
  { pnode(HMC, 22, 61, IOINTDMDOUT, -1, 1), rnode(GOUT, 38, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDMDOUT, -1, 2), rnode(GOUT, 38, 61, 15) },
  { pnode(HMC, 22, 61, IOINTDMDOUT, -1, 3), rnode(GOUT, 38, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDMDOUT, -1, 4), rnode(GOUT, 46, 61, 14) },
  { pnode(HMC, 22, 61, IOINTDMDOUT, -1, 5), rnode(GOUT, 46, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDMDOUT, -1, 6), rnode(GOUT, 46, 61, 15) },
  { pnode(HMC, 22, 61, IOINTDMDOUT, -1, 7), rnode(GOUT, 46, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDMDOUT, -1, 8), rnode(GOUT, 53, 61, 14) },
  { pnode(HMC, 22, 61, IOINTDMDOUT, -1, 9), rnode(GOUT, 53, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDMDOUT, -1, 10), rnode(GOUT, 53, 61, 15) },
  { pnode(HMC, 22, 61, IOINTDMDOUT, -1, 11), rnode(GOUT, 53, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDMDOUT, -1, 12), rnode(GOUT, 61, 61, 14) },
  { pnode(HMC, 22, 61, IOINTDMDOUT, -1, 13), rnode(GOUT, 61, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDMDOUT, -1, 14), rnode(GOUT, 61, 61, 15) },
  { pnode(HMC, 22, 61, IOINTDMDOUT, -1, 15), rnode(GOUT, 61, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDMDOUT, -1, 16), rnode(GOUT, 66, 61, 14) },
  { pnode(HMC, 22, 61, IOINTDMDOUT, -1, 17), rnode(GOUT, 66, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDMDOUT, -1, 18), rnode(GOUT, 66, 61, 15) },
  { pnode(HMC, 22, 61, IOINTDMDOUT, -1, 19), rnode(GOUT, 66, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 0), rnode(GOUT, 32, 61, 49) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 1), rnode(GOUT, 32, 61, 41) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 2), rnode(GOUT, 32, 61, 48) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 3), rnode(GOUT, 32, 61, 40) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 4), rnode(GOUT, 32, 61, 44) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 5), rnode(GOUT, 32, 61, 34) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 6), rnode(GOUT, 32, 61, 43) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 7), rnode(GOUT, 32, 61, 29) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 8), rnode(GOUT, 32, 61, 14) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 9), rnode(GOUT, 32, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 10), rnode(GOUT, 32, 61, 15) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 11), rnode(GOUT, 32, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 12), rnode(GOUT, 34, 61, 3) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 13), rnode(GOUT, 34, 61, 17) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 14), rnode(GOUT, 34, 61, 8) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 15), rnode(GOUT, 34, 61, 18) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 16), rnode(GOUT, 36, 61, 49) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 17), rnode(GOUT, 36, 61, 41) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 18), rnode(GOUT, 36, 61, 48) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 19), rnode(GOUT, 36, 61, 40) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 20), rnode(GOUT, 36, 61, 44) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 21), rnode(GOUT, 36, 61, 34) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 22), rnode(GOUT, 36, 61, 43) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 23), rnode(GOUT, 36, 61, 29) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 24), rnode(GOUT, 36, 61, 14) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 25), rnode(GOUT, 36, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 26), rnode(GOUT, 36, 61, 15) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 27), rnode(GOUT, 36, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 28), rnode(GOUT, 38, 61, 3) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 29), rnode(GOUT, 38, 61, 17) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 30), rnode(GOUT, 38, 61, 8) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 31), rnode(GOUT, 38, 61, 18) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 36), rnode(GOUT, 40, 61, 49) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 37), rnode(GOUT, 40, 61, 41) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 38), rnode(GOUT, 40, 61, 48) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 39), rnode(GOUT, 40, 61, 40) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 40), rnode(GOUT, 40, 61, 44) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 41), rnode(GOUT, 40, 61, 34) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 42), rnode(GOUT, 40, 61, 43) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 43), rnode(GOUT, 40, 61, 29) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 44), rnode(GOUT, 40, 61, 14) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 45), rnode(GOUT, 40, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 46), rnode(GOUT, 40, 61, 15) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 47), rnode(GOUT, 40, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 48), rnode(GOUT, 42, 61, 3) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 49), rnode(GOUT, 42, 61, 17) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 50), rnode(GOUT, 42, 61, 8) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 51), rnode(GOUT, 42, 61, 18) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 52), rnode(GOUT, 44, 61, 49) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 53), rnode(GOUT, 44, 61, 41) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 54), rnode(GOUT, 44, 61, 48) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 55), rnode(GOUT, 44, 61, 40) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 56), rnode(GOUT, 44, 61, 44) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 57), rnode(GOUT, 44, 61, 34) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 58), rnode(GOUT, 44, 61, 43) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 59), rnode(GOUT, 44, 61, 29) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 60), rnode(GOUT, 44, 61, 14) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 61), rnode(GOUT, 44, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 62), rnode(GOUT, 44, 61, 15) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 63), rnode(GOUT, 44, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 64), rnode(GOUT, 46, 61, 3) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 65), rnode(GOUT, 46, 61, 17) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 66), rnode(GOUT, 46, 61, 8) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 67), rnode(GOUT, 46, 61, 18) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 72), rnode(GOUT, 48, 61, 49) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 73), rnode(GOUT, 48, 61, 41) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 74), rnode(GOUT, 48, 61, 48) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 75), rnode(GOUT, 48, 61, 40) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 76), rnode(GOUT, 48, 61, 44) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 77), rnode(GOUT, 48, 61, 34) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 78), rnode(GOUT, 48, 61, 43) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 79), rnode(GOUT, 48, 61, 29) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 80), rnode(GOUT, 48, 61, 14) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 81), rnode(GOUT, 48, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 82), rnode(GOUT, 48, 61, 15) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 83), rnode(GOUT, 48, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 84), rnode(GOUT, 50, 61, 3) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 85), rnode(GOUT, 50, 61, 17) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 86), rnode(GOUT, 50, 61, 8) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 87), rnode(GOUT, 50, 61, 18) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 88), rnode(GOUT, 51, 61, 49) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 89), rnode(GOUT, 51, 61, 41) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 90), rnode(GOUT, 51, 61, 48) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 91), rnode(GOUT, 51, 61, 40) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 92), rnode(GOUT, 51, 61, 44) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 93), rnode(GOUT, 51, 61, 34) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 94), rnode(GOUT, 51, 61, 43) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 95), rnode(GOUT, 51, 61, 29) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 96), rnode(GOUT, 51, 61, 14) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 97), rnode(GOUT, 51, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 98), rnode(GOUT, 51, 61, 15) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 99), rnode(GOUT, 51, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 100), rnode(GOUT, 53, 61, 3) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 101), rnode(GOUT, 53, 61, 17) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 102), rnode(GOUT, 53, 61, 8) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 103), rnode(GOUT, 53, 61, 18) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 108), rnode(GOUT, 55, 61, 49) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 109), rnode(GOUT, 55, 61, 41) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 110), rnode(GOUT, 55, 61, 48) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 111), rnode(GOUT, 55, 61, 40) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 112), rnode(GOUT, 55, 61, 44) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 113), rnode(GOUT, 55, 61, 34) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 114), rnode(GOUT, 55, 61, 43) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 115), rnode(GOUT, 55, 61, 29) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 116), rnode(GOUT, 55, 61, 14) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 117), rnode(GOUT, 55, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 118), rnode(GOUT, 55, 61, 15) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 119), rnode(GOUT, 55, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 120), rnode(GOUT, 57, 61, 3) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 121), rnode(GOUT, 57, 61, 17) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 122), rnode(GOUT, 57, 61, 8) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 123), rnode(GOUT, 57, 61, 18) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 124), rnode(GOUT, 59, 61, 49) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 125), rnode(GOUT, 59, 61, 41) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 126), rnode(GOUT, 59, 61, 48) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 127), rnode(GOUT, 59, 61, 40) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 128), rnode(GOUT, 59, 61, 44) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 129), rnode(GOUT, 59, 61, 34) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 130), rnode(GOUT, 59, 61, 43) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 131), rnode(GOUT, 59, 61, 29) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 132), rnode(GOUT, 59, 61, 14) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 133), rnode(GOUT, 59, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 134), rnode(GOUT, 59, 61, 15) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 135), rnode(GOUT, 59, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 136), rnode(GOUT, 61, 61, 3) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 137), rnode(GOUT, 61, 61, 17) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 138), rnode(GOUT, 61, 61, 8) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 139), rnode(GOUT, 61, 61, 18) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 144), rnode(GOUT, 62, 61, 49) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 145), rnode(GOUT, 62, 61, 41) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 146), rnode(GOUT, 62, 61, 48) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 147), rnode(GOUT, 62, 61, 40) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 148), rnode(GOUT, 62, 61, 44) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 149), rnode(GOUT, 62, 61, 34) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 150), rnode(GOUT, 62, 61, 43) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 151), rnode(GOUT, 62, 61, 29) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 152), rnode(GOUT, 62, 61, 14) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 153), rnode(GOUT, 62, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 154), rnode(GOUT, 62, 61, 15) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 155), rnode(GOUT, 62, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 156), rnode(GOUT, 64, 61, 3) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 157), rnode(GOUT, 64, 61, 17) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 158), rnode(GOUT, 64, 61, 8) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 159), rnode(GOUT, 64, 61, 18) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 160), rnode(GOUT, 65, 61, 49) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 161), rnode(GOUT, 65, 61, 41) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 162), rnode(GOUT, 65, 61, 48) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 163), rnode(GOUT, 65, 61, 40) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 164), rnode(GOUT, 65, 61, 44) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 165), rnode(GOUT, 65, 61, 34) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 166), rnode(GOUT, 65, 61, 43) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 167), rnode(GOUT, 65, 61, 29) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 168), rnode(GOUT, 65, 61, 14) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 169), rnode(GOUT, 65, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 170), rnode(GOUT, 65, 61, 15) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 171), rnode(GOUT, 65, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 172), rnode(GOUT, 66, 61, 3) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 173), rnode(GOUT, 66, 61, 17) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 174), rnode(GOUT, 66, 61, 8) },
  { pnode(HMC, 22, 61, IOINTDQDOUT, -1, 175), rnode(GOUT, 66, 61, 18) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 0), rnode(GOUT, 32, 61, 47) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 1), rnode(GOUT, 32, 61, 39) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 2), rnode(GOUT, 32, 61, 38) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 3), rnode(GOUT, 32, 61, 30) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 4), rnode(GOUT, 32, 61, 16) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 5), rnode(GOUT, 32, 61, 24) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 6), rnode(GOUT, 34, 61, 2) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 7), rnode(GOUT, 34, 61, 19) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 8), rnode(GOUT, 36, 61, 47) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 9), rnode(GOUT, 36, 61, 39) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 10), rnode(GOUT, 36, 61, 38) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 11), rnode(GOUT, 36, 61, 30) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 12), rnode(GOUT, 36, 61, 16) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 13), rnode(GOUT, 36, 61, 24) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 14), rnode(GOUT, 38, 61, 2) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 15), rnode(GOUT, 38, 61, 19) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 18), rnode(GOUT, 40, 61, 47) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 19), rnode(GOUT, 40, 61, 39) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 20), rnode(GOUT, 40, 61, 38) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 21), rnode(GOUT, 40, 61, 30) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 22), rnode(GOUT, 40, 61, 16) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 23), rnode(GOUT, 40, 61, 24) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 24), rnode(GOUT, 42, 61, 2) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 25), rnode(GOUT, 42, 61, 19) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 26), rnode(GOUT, 44, 61, 47) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 27), rnode(GOUT, 44, 61, 39) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 28), rnode(GOUT, 44, 61, 38) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 29), rnode(GOUT, 44, 61, 30) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 30), rnode(GOUT, 44, 61, 16) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 31), rnode(GOUT, 44, 61, 24) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 32), rnode(GOUT, 46, 61, 2) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 33), rnode(GOUT, 46, 61, 19) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 36), rnode(GOUT, 48, 61, 47) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 37), rnode(GOUT, 48, 61, 39) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 38), rnode(GOUT, 48, 61, 38) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 39), rnode(GOUT, 48, 61, 30) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 40), rnode(GOUT, 48, 61, 16) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 41), rnode(GOUT, 48, 61, 24) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 42), rnode(GOUT, 50, 61, 2) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 43), rnode(GOUT, 50, 61, 19) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 44), rnode(GOUT, 51, 61, 47) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 45), rnode(GOUT, 51, 61, 39) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 46), rnode(GOUT, 51, 61, 38) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 47), rnode(GOUT, 51, 61, 30) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 48), rnode(GOUT, 51, 61, 16) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 49), rnode(GOUT, 51, 61, 24) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 50), rnode(GOUT, 53, 61, 2) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 51), rnode(GOUT, 53, 61, 19) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 54), rnode(GOUT, 55, 61, 47) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 55), rnode(GOUT, 55, 61, 39) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 56), rnode(GOUT, 55, 61, 38) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 57), rnode(GOUT, 55, 61, 30) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 58), rnode(GOUT, 55, 61, 16) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 59), rnode(GOUT, 55, 61, 24) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 60), rnode(GOUT, 57, 61, 2) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 61), rnode(GOUT, 57, 61, 19) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 62), rnode(GOUT, 59, 61, 47) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 63), rnode(GOUT, 59, 61, 39) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 64), rnode(GOUT, 59, 61, 38) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 65), rnode(GOUT, 59, 61, 30) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 66), rnode(GOUT, 59, 61, 16) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 67), rnode(GOUT, 59, 61, 24) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 68), rnode(GOUT, 61, 61, 2) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 69), rnode(GOUT, 61, 61, 19) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 72), rnode(GOUT, 62, 61, 47) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 73), rnode(GOUT, 62, 61, 39) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 74), rnode(GOUT, 62, 61, 38) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 75), rnode(GOUT, 62, 61, 30) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 76), rnode(GOUT, 62, 61, 16) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 77), rnode(GOUT, 62, 61, 24) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 78), rnode(GOUT, 64, 61, 2) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 79), rnode(GOUT, 64, 61, 19) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 80), rnode(GOUT, 65, 61, 47) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 81), rnode(GOUT, 65, 61, 39) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 82), rnode(GOUT, 65, 61, 38) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 83), rnode(GOUT, 65, 61, 30) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 84), rnode(GOUT, 65, 61, 16) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 85), rnode(GOUT, 65, 61, 24) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 86), rnode(GOUT, 66, 61, 2) },
  { pnode(HMC, 22, 61, IOINTDQOE, -1, 87), rnode(GOUT, 66, 61, 19) },
  { pnode(HMC, 22, 61, IOINTDQSBDOUT, -1, 0), rnode(GOUT, 34, 61, 49) },
  { pnode(HMC, 22, 61, IOINTDQSBDOUT, -1, 1), rnode(GOUT, 34, 61, 41) },
  { pnode(HMC, 22, 61, IOINTDQSBDOUT, -1, 2), rnode(GOUT, 34, 61, 48) },
  { pnode(HMC, 22, 61, IOINTDQSBDOUT, -1, 3), rnode(GOUT, 34, 61, 40) },
  { pnode(HMC, 22, 61, IOINTDQSBDOUT, -1, 4), rnode(GOUT, 42, 61, 49) },
  { pnode(HMC, 22, 61, IOINTDQSBDOUT, -1, 5), rnode(GOUT, 42, 61, 41) },
  { pnode(HMC, 22, 61, IOINTDQSBDOUT, -1, 6), rnode(GOUT, 42, 61, 48) },
  { pnode(HMC, 22, 61, IOINTDQSBDOUT, -1, 7), rnode(GOUT, 42, 61, 40) },
  { pnode(HMC, 22, 61, IOINTDQSBDOUT, -1, 8), rnode(GOUT, 50, 61, 49) },
  { pnode(HMC, 22, 61, IOINTDQSBDOUT, -1, 9), rnode(GOUT, 50, 61, 41) },
  { pnode(HMC, 22, 61, IOINTDQSBDOUT, -1, 10), rnode(GOUT, 50, 61, 48) },
  { pnode(HMC, 22, 61, IOINTDQSBDOUT, -1, 11), rnode(GOUT, 50, 61, 40) },
  { pnode(HMC, 22, 61, IOINTDQSBDOUT, -1, 12), rnode(GOUT, 57, 61, 49) },
  { pnode(HMC, 22, 61, IOINTDQSBDOUT, -1, 13), rnode(GOUT, 57, 61, 41) },
  { pnode(HMC, 22, 61, IOINTDQSBDOUT, -1, 14), rnode(GOUT, 57, 61, 48) },
  { pnode(HMC, 22, 61, IOINTDQSBDOUT, -1, 15), rnode(GOUT, 57, 61, 40) },
  { pnode(HMC, 22, 61, IOINTDQSBDOUT, -1, 16), rnode(GOUT, 64, 61, 49) },
  { pnode(HMC, 22, 61, IOINTDQSBDOUT, -1, 17), rnode(GOUT, 64, 61, 41) },
  { pnode(HMC, 22, 61, IOINTDQSBDOUT, -1, 18), rnode(GOUT, 64, 61, 48) },
  { pnode(HMC, 22, 61, IOINTDQSBDOUT, -1, 19), rnode(GOUT, 64, 61, 40) },
  { pnode(HMC, 22, 61, IOINTDQSBOE, -1, 0), rnode(GOUT, 34, 61, 47) },
  { pnode(HMC, 22, 61, IOINTDQSBOE, -1, 1), rnode(GOUT, 34, 61, 39) },
  { pnode(HMC, 22, 61, IOINTDQSBOE, -1, 2), rnode(GOUT, 42, 61, 47) },
  { pnode(HMC, 22, 61, IOINTDQSBOE, -1, 3), rnode(GOUT, 42, 61, 39) },
  { pnode(HMC, 22, 61, IOINTDQSBOE, -1, 4), rnode(GOUT, 50, 61, 47) },
  { pnode(HMC, 22, 61, IOINTDQSBOE, -1, 5), rnode(GOUT, 50, 61, 39) },
  { pnode(HMC, 22, 61, IOINTDQSBOE, -1, 6), rnode(GOUT, 57, 61, 47) },
  { pnode(HMC, 22, 61, IOINTDQSBOE, -1, 7), rnode(GOUT, 57, 61, 39) },
  { pnode(HMC, 22, 61, IOINTDQSBOE, -1, 8), rnode(GOUT, 64, 61, 47) },
  { pnode(HMC, 22, 61, IOINTDQSBOE, -1, 9), rnode(GOUT, 64, 61, 39) },
  { pnode(HMC, 22, 61, IOINTDQSDOUT, -1, 0), rnode(GOUT, 34, 61, 44) },
  { pnode(HMC, 22, 61, IOINTDQSDOUT, -1, 1), rnode(GOUT, 34, 61, 34) },
  { pnode(HMC, 22, 61, IOINTDQSDOUT, -1, 2), rnode(GOUT, 34, 61, 43) },
  { pnode(HMC, 22, 61, IOINTDQSDOUT, -1, 3), rnode(GOUT, 34, 61, 29) },
  { pnode(HMC, 22, 61, IOINTDQSDOUT, -1, 4), rnode(GOUT, 42, 61, 44) },
  { pnode(HMC, 22, 61, IOINTDQSDOUT, -1, 5), rnode(GOUT, 42, 61, 34) },
  { pnode(HMC, 22, 61, IOINTDQSDOUT, -1, 6), rnode(GOUT, 42, 61, 43) },
  { pnode(HMC, 22, 61, IOINTDQSDOUT, -1, 7), rnode(GOUT, 42, 61, 29) },
  { pnode(HMC, 22, 61, IOINTDQSDOUT, -1, 8), rnode(GOUT, 50, 61, 44) },
  { pnode(HMC, 22, 61, IOINTDQSDOUT, -1, 9), rnode(GOUT, 50, 61, 34) },
  { pnode(HMC, 22, 61, IOINTDQSDOUT, -1, 10), rnode(GOUT, 50, 61, 43) },
  { pnode(HMC, 22, 61, IOINTDQSDOUT, -1, 11), rnode(GOUT, 50, 61, 29) },
  { pnode(HMC, 22, 61, IOINTDQSDOUT, -1, 12), rnode(GOUT, 57, 61, 44) },
  { pnode(HMC, 22, 61, IOINTDQSDOUT, -1, 13), rnode(GOUT, 57, 61, 34) },
  { pnode(HMC, 22, 61, IOINTDQSDOUT, -1, 14), rnode(GOUT, 57, 61, 43) },
  { pnode(HMC, 22, 61, IOINTDQSDOUT, -1, 15), rnode(GOUT, 57, 61, 29) },
  { pnode(HMC, 22, 61, IOINTDQSDOUT, -1, 16), rnode(GOUT, 64, 61, 44) },
  { pnode(HMC, 22, 61, IOINTDQSDOUT, -1, 17), rnode(GOUT, 64, 61, 34) },
  { pnode(HMC, 22, 61, IOINTDQSDOUT, -1, 18), rnode(GOUT, 64, 61, 43) },
  { pnode(HMC, 22, 61, IOINTDQSDOUT, -1, 19), rnode(GOUT, 64, 61, 29) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICACLRFIFOCTRL, -1, 0), rnode(GOUT, 35, 61, 45) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICACLRFIFOCTRL, -1, 1), rnode(GOUT, 43, 61, 44) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICACLRFIFOCTRL, -1, 2), rnode(GOUT, 49, 61, 33) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICACLRFIFOCTRL, -1, 3), rnode(GOUT, 58, 61, 33) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICACLRFIFOCTRL, -1, 4), rnode(GOUT, 66, 61, 7) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICACLRPSTAMBLE, -1, 0), rnode(GOUT, 35, 61, 41) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICACLRPSTAMBLE, -1, 1), rnode(GOUT, 43, 61, 40) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICACLRPSTAMBLE, -1, 2), rnode(GOUT, 49, 61, 31) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICACLRPSTAMBLE, -1, 3), rnode(GOUT, 58, 61, 31) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICACLRPSTAMBLE, -1, 4), rnode(GOUT, 66, 61, 6) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICDQSENA, -1, 0), rnode(GOUT, 38, 61, 36) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICDQSENA, -1, 1), rnode(GOUT, 38, 61, 35) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICDQSENA, -1, 2), rnode(GOUT, 45, 61, 33) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICDQSENA, -1, 3), rnode(GOUT, 45, 61, 27) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICDQSENA, -1, 4), rnode(GOUT, 52, 61, 38) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICDQSENA, -1, 5), rnode(GOUT, 52, 61, 43) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICDQSENA, -1, 6), rnode(GOUT, 61, 61, 10) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICDQSENA, -1, 7), rnode(GOUT, 61, 61, 0) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICDQSENA, -1, 8), rnode(GOUT, 67, 61, 50) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICDQSENA, -1, 9), rnode(GOUT, 67, 61, 25) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICFIFORESET, -1, 0), rnode(GOUT, 33, 61, 32) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICFIFORESET, -1, 1), rnode(GOUT, 41, 61, 32) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICFIFORESET, -1, 2), rnode(GOUT, 48, 61, 7) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICFIFORESET, -1, 3), rnode(GOUT, 57, 61, 7) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICFIFORESET, -1, 4), rnode(GOUT, 64, 61, 26) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICINCRDATAEN, -1, 0), rnode(GOUT, 36, 61, 35) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICINCRDATAEN, -1, 1), rnode(GOUT, 36, 61, 36) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICINCRDATAEN, -1, 2), rnode(GOUT, 44, 61, 37) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICINCRDATAEN, -1, 3), rnode(GOUT, 44, 61, 35) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICINCRDATAEN, -1, 4), rnode(GOUT, 51, 61, 32) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICINCRDATAEN, -1, 5), rnode(GOUT, 51, 61, 37) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICINCRDATAEN, -1, 6), rnode(GOUT, 60, 61, 4) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICINCRDATAEN, -1, 7), rnode(GOUT, 60, 61, 3) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICINCRDATAEN, -1, 8), rnode(GOUT, 67, 61, 0) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICINCRDATAEN, -1, 9), rnode(GOUT, 67, 61, 10) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICINCWRPTR, -1, 0), rnode(GOUT, 34, 61, 7) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICINCWRPTR, -1, 1), rnode(GOUT, 34, 61, 33) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICINCWRPTR, -1, 2), rnode(GOUT, 42, 61, 32) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICINCWRPTR, -1, 3), rnode(GOUT, 42, 61, 37) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICINCWRPTR, -1, 4), rnode(GOUT, 49, 61, 7) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICINCWRPTR, -1, 5), rnode(GOUT, 49, 61, 5) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICINCWRPTR, -1, 6), rnode(GOUT, 58, 61, 7) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICINCWRPTR, -1, 7), rnode(GOUT, 58, 61, 5) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICINCWRPTR, -1, 8), rnode(GOUT, 65, 61, 6) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICINCWRPTR, -1, 9), rnode(GOUT, 65, 61, 7) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICOCT, -1, 0), rnode(GOUT, 35, 61, 11) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICOCT, -1, 1), rnode(GOUT, 35, 61, 6) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICOCT, -1, 2), rnode(GOUT, 43, 61, 7) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICOCT, -1, 3), rnode(GOUT, 43, 61, 5) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICOCT, -1, 4), rnode(GOUT, 49, 61, 18) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICOCT, -1, 5), rnode(GOUT, 49, 61, 14) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICOCT, -1, 6), rnode(GOUT, 58, 61, 18) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICOCT, -1, 7), rnode(GOUT, 58, 61, 14) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICOCT, -1, 8), rnode(GOUT, 65, 61, 26) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICOCT, -1, 9), rnode(GOUT, 66, 61, 0) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICREADLATENCY, -1, 0), rnode(GOUT, 37, 61, 40) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICREADLATENCY, -1, 1), rnode(GOUT, 37, 61, 43) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICREADLATENCY, -1, 2), rnode(GOUT, 37, 61, 38) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICREADLATENCY, -1, 3), rnode(GOUT, 37, 61, 28) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICREADLATENCY, -1, 4), rnode(GOUT, 37, 61, 34) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICREADLATENCY, -1, 5), rnode(GOUT, 45, 61, 19) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICREADLATENCY, -1, 6), rnode(GOUT, 45, 61, 16) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICREADLATENCY, -1, 7), rnode(GOUT, 45, 61, 21) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICREADLATENCY, -1, 8), rnode(GOUT, 45, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICREADLATENCY, -1, 9), rnode(GOUT, 45, 61, 24) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICREADLATENCY, -1, 10), rnode(GOUT, 52, 61, 14) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICREADLATENCY, -1, 11), rnode(GOUT, 52, 61, 20) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICREADLATENCY, -1, 12), rnode(GOUT, 52, 61, 16) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICREADLATENCY, -1, 13), rnode(GOUT, 52, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICREADLATENCY, -1, 14), rnode(GOUT, 52, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICREADLATENCY, -1, 15), rnode(GOUT, 60, 61, 49) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICREADLATENCY, -1, 16), rnode(GOUT, 60, 61, 42) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICREADLATENCY, -1, 17), rnode(GOUT, 60, 61, 46) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICREADLATENCY, -1, 18), rnode(GOUT, 60, 61, 45) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICREADLATENCY, -1, 19), rnode(GOUT, 60, 61, 40) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICREADLATENCY, -1, 20), rnode(GOUT, 67, 61, 16) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICREADLATENCY, -1, 21), rnode(GOUT, 67, 61, 21) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICREADLATENCY, -1, 22), rnode(GOUT, 67, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICREADLATENCY, -1, 23), rnode(GOUT, 67, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICREADLATENCY, -1, 24), rnode(GOUT, 67, 61, 24) },
  { pnode(HMC, 22, 61, IOINTDQSOE, -1, 0), rnode(GOUT, 34, 61, 38) },
  { pnode(HMC, 22, 61, IOINTDQSOE, -1, 1), rnode(GOUT, 34, 61, 30) },
  { pnode(HMC, 22, 61, IOINTDQSOE, -1, 2), rnode(GOUT, 42, 61, 38) },
  { pnode(HMC, 22, 61, IOINTDQSOE, -1, 3), rnode(GOUT, 42, 61, 30) },
  { pnode(HMC, 22, 61, IOINTDQSOE, -1, 4), rnode(GOUT, 50, 61, 38) },
  { pnode(HMC, 22, 61, IOINTDQSOE, -1, 5), rnode(GOUT, 50, 61, 30) },
  { pnode(HMC, 22, 61, IOINTDQSOE, -1, 6), rnode(GOUT, 57, 61, 38) },
  { pnode(HMC, 22, 61, IOINTDQSOE, -1, 7), rnode(GOUT, 57, 61, 30) },
  { pnode(HMC, 22, 61, IOINTDQSOE, -1, 8), rnode(GOUT, 64, 61, 38) },
  { pnode(HMC, 22, 61, IOINTDQSOE, -1, 9), rnode(GOUT, 64, 61, 30) },
  { pnode(HMC, 22, 61, IOINTODTACLR, -1, 0), rnode(GOUT, 34, 61, 21) },
  { pnode(HMC, 22, 61, IOINTODTACLR, -1, 1), rnode(GOUT, 36, 61, 12) },
  { pnode(HMC, 22, 61, IOINTODTDOUT, -1, 0), rnode(GOUT, 34, 61, 14) },
  { pnode(HMC, 22, 61, IOINTODTDOUT, -1, 1), rnode(GOUT, 34, 61, 22) },
  { pnode(HMC, 22, 61, IOINTODTDOUT, -1, 2), rnode(GOUT, 34, 61, 15) },
  { pnode(HMC, 22, 61, IOINTODTDOUT, -1, 3), rnode(GOUT, 34, 61, 23) },
  { pnode(HMC, 22, 61, IOINTODTDOUT, -1, 4), rnode(GOUT, 36, 61, 3) },
  { pnode(HMC, 22, 61, IOINTODTDOUT, -1, 5), rnode(GOUT, 36, 61, 17) },
  { pnode(HMC, 22, 61, IOINTODTDOUT, -1, 6), rnode(GOUT, 36, 61, 8) },
  { pnode(HMC, 22, 61, IOINTODTDOUT, -1, 7), rnode(GOUT, 36, 61, 18) },
  { pnode(HMC, 22, 61, IOINTRASNACLR, -1, -1), rnode(GOUT, 15, 61, 12) },
  { pnode(HMC, 22, 61, IOINTRASNDOUT, -1, 0), rnode(GOUT, 15, 61, 3) },
  { pnode(HMC, 22, 61, IOINTRASNDOUT, -1, 1), rnode(GOUT, 15, 61, 17) },
  { pnode(HMC, 22, 61, IOINTRASNDOUT, -1, 2), rnode(GOUT, 15, 61, 8) },
  { pnode(HMC, 22, 61, IOINTRASNDOUT, -1, 3), rnode(GOUT, 15, 61, 18) },
  { pnode(HMC, 22, 61, IOINTRESETNACLR, -1, -1), rnode(GOUT, 50, 61, 21) },
  { pnode(HMC, 22, 61, IOINTRESETNDOUT, -1, 0), rnode(GOUT, 50, 61, 14) },
  { pnode(HMC, 22, 61, IOINTRESETNDOUT, -1, 1), rnode(GOUT, 50, 61, 22) },
  { pnode(HMC, 22, 61, IOINTRESETNDOUT, -1, 2), rnode(GOUT, 50, 61, 15) },
  { pnode(HMC, 22, 61, IOINTRESETNDOUT, -1, 3), rnode(GOUT, 50, 61, 23) },
  { pnode(HMC, 22, 61, IOINTWENACLR, -1, -1), rnode(GOUT, 10, 61, 21) },
  { pnode(HMC, 22, 61, IOINTWENDOUT, -1, 0), rnode(GOUT, 10, 61, 14) },
  { pnode(HMC, 22, 61, IOINTWENDOUT, -1, 1), rnode(GOUT, 10, 61, 22) },
  { pnode(HMC, 22, 61, IOINTWENDOUT, -1, 2), rnode(GOUT, 10, 61, 15) },
  { pnode(HMC, 22, 61, IOINTWENDOUT, -1, 3), rnode(GOUT, 10, 61, 23) },
  { pnode(HMC, 22, 61, LOCALDEEPPOWERDNCHIP, -1, 0), rnode(GOUT, 23, 61, 28) },
  { pnode(HMC, 22, 61, LOCALDEEPPOWERDNCHIP, -1, 1), rnode(GOUT, 23, 61, 34) },
  { pnode(HMC, 22, 61, LOCALDEEPPOWERDNREQ, -1, -1), rnode(GOUT, 23, 61, 29) },
  { pnode(HMC, 22, 61, LOCALREFRESHCHIP, -1, 0), rnode(GOUT, 23, 61, 31) },
  { pnode(HMC, 22, 61, LOCALREFRESHCHIP, -1, 1), rnode(GOUT, 23, 61, 33) },
  { pnode(HMC, 22, 61, LOCALREFRESHREQ, -1, -1), rnode(GOUT, 23, 61, 30) },
  { pnode(HMC, 22, 61, LOCALSELFRFSHCHIP, -1, 0), rnode(GOUT, 23, 61, 32) },
  { pnode(HMC, 22, 61, LOCALSELFRFSHCHIP, -1, 1), rnode(GOUT, 23, 61, 37) },
  { pnode(HMC, 22, 61, LOCALSELFRFSHREQ, -1, -1), rnode(GOUT, 23, 61, 35) },
  { pnode(HMC, 22, 61, MMRADDR, -1, 0), rnode(GOUT, 56, 61, 0) },
  { pnode(HMC, 22, 61, MMRADDR, -1, 1), rnode(GOUT, 56, 61, 10) },
  { pnode(HMC, 22, 61, MMRADDR, -1, 2), rnode(GOUT, 56, 61, 9) },
  { pnode(HMC, 22, 61, MMRADDR, -1, 3), rnode(GOUT, 56, 61, 11) },
  { pnode(HMC, 22, 61, MMRADDR, -1, 4), rnode(GOUT, 56, 61, 6) },
  { pnode(HMC, 22, 61, MMRADDR, -1, 5), rnode(GOUT, 56, 61, 7) },
  { pnode(HMC, 22, 61, MMRADDR, -1, 6), rnode(GOUT, 56, 61, 5) },
  { pnode(HMC, 22, 61, MMRADDR, -1, 7), rnode(GOUT, 56, 61, 2) },
  { pnode(HMC, 22, 61, MMRADDR, -1, 8), rnode(GOUT, 56, 61, 1) },
  { pnode(HMC, 22, 61, MMRADDR, -1, 9), rnode(GOUT, 56, 61, 12) },
  { pnode(HMC, 22, 61, MMRBE, -1, -1), rnode(GOUT, 56, 61, 21) },
  { pnode(HMC, 22, 61, MMRBURSTBEGIN, -1, -1), rnode(GOUT, 56, 61, 22) },
  { pnode(HMC, 22, 61, MMRBURSTCOUNT, -1, 0), rnode(GOUT, 59, 61, 33) },
  { pnode(HMC, 22, 61, MMRBURSTCOUNT, -1, 1), rnode(GOUT, 59, 61, 32) },
  { pnode(HMC, 22, 61, MMRCLK, -1, -1), rnode(DCMUX, 56, 61, 0) },
  { pnode(HMC, 22, 61, MMRREADREQ, -1, -1), rnode(GOUT, 59, 61, 11) },
  { pnode(HMC, 22, 61, MMRRESETN, -1, -1), rnode(GOUT, 59, 61, 6) },
  { pnode(HMC, 22, 61, MMRWDATA, -1, 0), rnode(GOUT, 56, 61, 17) },
  { pnode(HMC, 22, 61, MMRWDATA, -1, 1), rnode(GOUT, 56, 61, 13) },
  { pnode(HMC, 22, 61, MMRWDATA, -1, 2), rnode(GOUT, 56, 61, 18) },
  { pnode(HMC, 22, 61, MMRWDATA, -1, 3), rnode(GOUT, 56, 61, 14) },
  { pnode(HMC, 22, 61, MMRWDATA, -1, 4), rnode(GOUT, 56, 61, 19) },
  { pnode(HMC, 22, 61, MMRWDATA, -1, 5), rnode(GOUT, 56, 61, 15) },
  { pnode(HMC, 22, 61, MMRWDATA, -1, 6), rnode(GOUT, 56, 61, 20) },
  { pnode(HMC, 22, 61, MMRWDATA, -1, 7), rnode(GOUT, 56, 61, 16) },
  { pnode(HMC, 22, 61, MMRWRITEREQ, -1, -1), rnode(GOUT, 56, 61, 23) },
  { pnode(HMC, 22, 61, PLLLOCKED, -1, -1), rnode(GOUT, 59, 61, 7) },
  { pnode(HMC, 22, 61, PORTCLK, 0, -1), rnode(DCMUX, 24, 61, 7) },
  { pnode(HMC, 22, 61, PORTCLK, 1, -1), rnode(DCMUX, 24, 61, 15) },
  { pnode(HMC, 22, 61, PORTCLK, 2, -1), rnode(DCMUX, 25, 61, 9) },
  { pnode(HMC, 22, 61, PORTCLK, 3, -1), rnode(DCMUX, 28, 61, 8) },
  { pnode(HMC, 22, 61, PORTCLK, 4, -1), rnode(DCMUX, 29, 61, 15) },
  { pnode(HMC, 22, 61, PORTCLK, 5, -1), rnode(DCMUX, 30, 61, 0) },
  { pnode(HMC, 22, 61, SCADDR, -1, 0), rnode(GOUT, 59, 61, 36) },
  { pnode(HMC, 22, 61, SCADDR, -1, 1), rnode(GOUT, 59, 61, 26) },
  { pnode(HMC, 22, 61, SCADDR, -1, 2), rnode(GOUT, 60, 61, 0) },
  { pnode(HMC, 22, 61, SCADDR, -1, 3), rnode(GOUT, 60, 61, 9) },
  { pnode(HMC, 22, 61, SCADDR, -1, 4), rnode(GOUT, 60, 61, 11) },
  { pnode(HMC, 22, 61, SCADDR, -1, 5), rnode(GOUT, 60, 61, 6) },
  { pnode(HMC, 22, 61, SCADDR, -1, 6), rnode(GOUT, 60, 61, 7) },
  { pnode(HMC, 22, 61, SCADDR, -1, 7), rnode(GOUT, 60, 61, 5) },
  { pnode(HMC, 22, 61, SCADDR, -1, 8), rnode(GOUT, 60, 61, 8) },
  { pnode(HMC, 22, 61, SCADDR, -1, 9), rnode(GOUT, 60, 61, 2) },
  { pnode(HMC, 22, 61, SCANEN, -1, -1), rnode(GOUT, 60, 61, 50) },
  { pnode(HMC, 22, 61, SCBE, -1, -1), rnode(GOUT, 60, 61, 13) },
  { pnode(HMC, 22, 61, SCBURSTBEGIN, -1, -1), rnode(GOUT, 60, 61, 25) },
  { pnode(HMC, 22, 61, SCBURSTCOUNT, -1, 0), rnode(GOUT, 60, 61, 23) },
  { pnode(HMC, 22, 61, SCBURSTCOUNT, -1, 1), rnode(GOUT, 60, 61, 24) },
  { pnode(HMC, 22, 61, SCCLK, -1, -1), rnode(DCMUX, 60, 61, 0) },
  { pnode(HMC, 22, 61, SCREADREQ, -1, -1), rnode(GOUT, 60, 61, 12) },
  { pnode(HMC, 22, 61, SCRESETN, -1, -1), rnode(GOUT, 60, 61, 17) },
  { pnode(HMC, 22, 61, SCWDATA, -1, 0), rnode(GOUT, 60, 61, 18) },
  { pnode(HMC, 22, 61, SCWDATA, -1, 1), rnode(GOUT, 60, 61, 14) },
  { pnode(HMC, 22, 61, SCWDATA, -1, 2), rnode(GOUT, 60, 61, 19) },
  { pnode(HMC, 22, 61, SCWDATA, -1, 3), rnode(GOUT, 60, 61, 15) },
  { pnode(HMC, 22, 61, SCWDATA, -1, 4), rnode(GOUT, 60, 61, 20) },
  { pnode(HMC, 22, 61, SCWDATA, -1, 5), rnode(GOUT, 60, 61, 16) },
  { pnode(HMC, 22, 61, SCWDATA, -1, 6), rnode(GOUT, 60, 61, 21) },
  { pnode(HMC, 22, 61, SCWDATA, -1, 7), rnode(GOUT, 60, 61, 22) },
  { pnode(HMC, 22, 61, SCWRITEREQ, -1, -1), rnode(GOUT, 60, 61, 1) },
  { pnode(HMC, 22, 61, SOFTRESETN, -1, -1), rnode(GOUT, 59, 61, 35) },
  { pnode(HMC, 22, 61, AFICTLLONGIDLE, -1, 0), rnode(GIN, 58, 61, 14) },
  { pnode(HMC, 22, 61, AFICTLLONGIDLE, -1, 1), rnode(GIN, 58, 61, 13) },
  { pnode(HMC, 22, 61, AFICTLREFRESHDONE, -1, 0), rnode(GIN, 59, 61, 0) },
  { pnode(HMC, 22, 61, AFICTLREFRESHDONE, -1, 1), rnode(GIN, 59, 61, 13) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 0), rnode(GIN, 58, 61, 4) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 1), rnode(GIN, 58, 61, 5) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 2), rnode(GIN, 58, 61, 6) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 3), rnode(GIN, 58, 61, 7) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 4), rnode(GIN, 58, 61, 8) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 5), rnode(GIN, 58, 61, 9) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 6), rnode(GIN, 58, 61, 10) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 7), rnode(GIN, 58, 61, 11) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 8), rnode(GIN, 58, 61, 12) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 9), rnode(GIN, 58, 61, 25) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 10), rnode(GIN, 58, 61, 24) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 11), rnode(GIN, 58, 61, 23) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 12), rnode(GIN, 58, 61, 22) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 13), rnode(GIN, 58, 61, 21) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 14), rnode(GIN, 58, 61, 20) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 15), rnode(GIN, 58, 61, 19) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 16), rnode(GIN, 60, 61, 6) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 17), rnode(GIN, 60, 61, 7) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 18), rnode(GIN, 60, 61, 8) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 19), rnode(GIN, 60, 61, 9) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 20), rnode(GIN, 60, 61, 10) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 21), rnode(GIN, 60, 61, 11) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 22), rnode(GIN, 60, 61, 12) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 23), rnode(GIN, 60, 61, 25) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 24), rnode(GIN, 60, 61, 24) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 25), rnode(GIN, 60, 61, 23) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 26), rnode(GIN, 60, 61, 22) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 27), rnode(GIN, 60, 61, 21) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 28), rnode(GIN, 60, 61, 20) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 29), rnode(GIN, 60, 61, 19) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 30), rnode(GIN, 60, 61, 18) },
  { pnode(HMC, 22, 61, AVLREADDATA, -1, 31), rnode(GIN, 60, 61, 17) },
  { pnode(HMC, 22, 61, AVLWAITREQUEST, -1, -1), rnode(GIN, 60, 61, 0) },
  { pnode(HMC, 22, 61, BONDINGOUT, 0, 0), rnode(GIN, 24, 61, 11) },
  { pnode(HMC, 22, 61, BONDINGOUT, 0, 1), rnode(GIN, 23, 61, 6) },
  { pnode(HMC, 22, 61, BONDINGOUT, 0, 2), rnode(GIN, 41, 61, 10) },
  { pnode(HMC, 22, 61, BONDINGOUT, 0, 3), rnode(GIN, 48, 61, 0) },
  { pnode(HMC, 22, 61, BONDINGOUT, 1, 0), rnode(GIN, 23, 61, 4) },
  { pnode(HMC, 22, 61, BONDINGOUT, 1, 1), rnode(GIN, 23, 61, 9) },
  { pnode(HMC, 22, 61, BONDINGOUT, 1, 2), rnode(GIN, 23, 61, 24) },
  { pnode(HMC, 22, 61, BONDINGOUT, 1, 3), rnode(GIN, 29, 61, 18) },
  { pnode(HMC, 22, 61, BONDINGOUT, 1, 4), rnode(GIN, 29, 61, 13) },
  { pnode(HMC, 22, 61, BONDINGOUT, 1, 5), rnode(GIN, 30, 61, 4) },
  { pnode(HMC, 22, 61, BONDINGOUT, 2, 0), rnode(GIN, 23, 61, 5) },
  { pnode(HMC, 22, 61, BONDINGOUT, 2, 1), rnode(GIN, 23, 61, 10) },
  { pnode(HMC, 22, 61, BONDINGOUT, 2, 2), rnode(GIN, 23, 61, 23) },
  { pnode(HMC, 22, 61, BONDINGOUT, 2, 3), rnode(GIN, 29, 61, 17) },
  { pnode(HMC, 22, 61, BONDINGOUT, 2, 4), rnode(GIN, 30, 61, 0) },
  { pnode(HMC, 22, 61, BONDINGOUT, 2, 5), rnode(GIN, 30, 61, 5) },
  { pnode(HMC, 22, 61, CTLCALREQ, -1, -1), rnode(GIN, 28, 61, 17) },
  { pnode(HMC, 22, 61, IOINTAFICALFAIL, -1, -1), rnode(GIN, 60, 61, 16) },
  { pnode(HMC, 22, 61, IOINTAFICALSUCCESS, -1, -1), rnode(GIN, 60, 61, 15) },
  { pnode(HMC, 22, 61, IOINTAFIRLAT, -1, 0), rnode(GIN, 60, 61, 14) },
  { pnode(HMC, 22, 61, IOINTAFIRLAT, -1, 1), rnode(GIN, 60, 61, 13) },
  { pnode(HMC, 22, 61, IOINTAFIRLAT, -1, 2), rnode(GIN, 61, 61, 0) },
  { pnode(HMC, 22, 61, IOINTAFIRLAT, -1, 3), rnode(GIN, 61, 61, 13) },
  { pnode(HMC, 22, 61, IOINTAFIRLAT, -1, 4), rnode(GIN, 62, 61, 0) },
  { pnode(HMC, 22, 61, IOINTAFIWLAT, -1, 0), rnode(GIN, 58, 61, 18) },
  { pnode(HMC, 22, 61, IOINTAFIWLAT, -1, 1), rnode(GIN, 58, 61, 17) },
  { pnode(HMC, 22, 61, IOINTAFIWLAT, -1, 2), rnode(GIN, 58, 61, 16) },
  { pnode(HMC, 22, 61, IOINTAFIWLAT, -1, 3), rnode(GIN, 58, 61, 15) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 0), rnode(GIN, 32, 61, 24) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 1), rnode(GIN, 32, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 2), rnode(GIN, 32, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 3), rnode(GIN, 32, 61, 21) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 4), rnode(GIN, 32, 61, 18) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 5), rnode(GIN, 32, 61, 17) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 6), rnode(GIN, 32, 61, 16) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 7), rnode(GIN, 32, 61, 15) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 8), rnode(GIN, 32, 61, 8) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 9), rnode(GIN, 32, 61, 9) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 10), rnode(GIN, 32, 61, 10) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 11), rnode(GIN, 32, 61, 11) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 12), rnode(GIN, 34, 61, 2) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 13), rnode(GIN, 34, 61, 3) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 14), rnode(GIN, 34, 61, 4) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 15), rnode(GIN, 34, 61, 5) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 16), rnode(GIN, 36, 61, 24) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 17), rnode(GIN, 36, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 18), rnode(GIN, 36, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 19), rnode(GIN, 36, 61, 21) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 20), rnode(GIN, 36, 61, 18) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 21), rnode(GIN, 36, 61, 17) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 22), rnode(GIN, 36, 61, 16) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 23), rnode(GIN, 36, 61, 15) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 24), rnode(GIN, 36, 61, 8) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 25), rnode(GIN, 36, 61, 9) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 26), rnode(GIN, 36, 61, 10) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 27), rnode(GIN, 36, 61, 11) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 28), rnode(GIN, 38, 61, 2) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 29), rnode(GIN, 38, 61, 3) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 30), rnode(GIN, 38, 61, 4) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 31), rnode(GIN, 38, 61, 5) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 36), rnode(GIN, 40, 61, 24) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 37), rnode(GIN, 40, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 38), rnode(GIN, 40, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 39), rnode(GIN, 40, 61, 21) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 40), rnode(GIN, 40, 61, 18) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 41), rnode(GIN, 40, 61, 17) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 42), rnode(GIN, 40, 61, 16) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 43), rnode(GIN, 40, 61, 15) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 44), rnode(GIN, 40, 61, 8) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 45), rnode(GIN, 40, 61, 9) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 46), rnode(GIN, 40, 61, 10) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 47), rnode(GIN, 40, 61, 11) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 48), rnode(GIN, 42, 61, 2) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 49), rnode(GIN, 42, 61, 3) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 50), rnode(GIN, 42, 61, 4) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 51), rnode(GIN, 42, 61, 5) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 52), rnode(GIN, 44, 61, 24) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 53), rnode(GIN, 44, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 54), rnode(GIN, 44, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 55), rnode(GIN, 44, 61, 21) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 56), rnode(GIN, 44, 61, 18) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 57), rnode(GIN, 44, 61, 17) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 58), rnode(GIN, 44, 61, 16) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 59), rnode(GIN, 44, 61, 15) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 60), rnode(GIN, 44, 61, 8) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 61), rnode(GIN, 44, 61, 9) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 62), rnode(GIN, 44, 61, 10) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 63), rnode(GIN, 44, 61, 11) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 64), rnode(GIN, 46, 61, 2) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 65), rnode(GIN, 46, 61, 3) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 66), rnode(GIN, 46, 61, 4) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 67), rnode(GIN, 46, 61, 5) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 72), rnode(GIN, 48, 61, 24) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 73), rnode(GIN, 48, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 74), rnode(GIN, 48, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 75), rnode(GIN, 48, 61, 21) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 76), rnode(GIN, 48, 61, 18) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 77), rnode(GIN, 48, 61, 17) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 78), rnode(GIN, 48, 61, 16) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 79), rnode(GIN, 48, 61, 15) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 80), rnode(GIN, 48, 61, 8) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 81), rnode(GIN, 48, 61, 9) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 82), rnode(GIN, 48, 61, 10) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 83), rnode(GIN, 48, 61, 11) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 84), rnode(GIN, 50, 61, 2) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 85), rnode(GIN, 50, 61, 3) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 86), rnode(GIN, 50, 61, 4) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 87), rnode(GIN, 50, 61, 5) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 88), rnode(GIN, 51, 61, 24) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 89), rnode(GIN, 51, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 90), rnode(GIN, 51, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 91), rnode(GIN, 51, 61, 21) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 92), rnode(GIN, 51, 61, 18) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 93), rnode(GIN, 51, 61, 17) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 94), rnode(GIN, 51, 61, 16) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 95), rnode(GIN, 51, 61, 15) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 96), rnode(GIN, 51, 61, 8) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 97), rnode(GIN, 51, 61, 9) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 98), rnode(GIN, 51, 61, 10) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 99), rnode(GIN, 51, 61, 11) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 100), rnode(GIN, 53, 61, 2) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 101), rnode(GIN, 53, 61, 3) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 102), rnode(GIN, 53, 61, 4) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 103), rnode(GIN, 53, 61, 5) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 108), rnode(GIN, 55, 61, 24) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 109), rnode(GIN, 55, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 110), rnode(GIN, 55, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 111), rnode(GIN, 55, 61, 21) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 112), rnode(GIN, 55, 61, 18) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 113), rnode(GIN, 55, 61, 17) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 114), rnode(GIN, 55, 61, 16) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 115), rnode(GIN, 55, 61, 15) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 116), rnode(GIN, 55, 61, 8) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 117), rnode(GIN, 55, 61, 9) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 118), rnode(GIN, 55, 61, 10) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 119), rnode(GIN, 55, 61, 11) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 120), rnode(GIN, 57, 61, 2) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 121), rnode(GIN, 57, 61, 3) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 122), rnode(GIN, 57, 61, 4) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 123), rnode(GIN, 57, 61, 5) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 124), rnode(GIN, 59, 61, 24) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 125), rnode(GIN, 59, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 126), rnode(GIN, 59, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 127), rnode(GIN, 59, 61, 21) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 128), rnode(GIN, 59, 61, 18) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 129), rnode(GIN, 59, 61, 17) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 130), rnode(GIN, 59, 61, 16) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 131), rnode(GIN, 59, 61, 15) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 132), rnode(GIN, 59, 61, 8) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 133), rnode(GIN, 59, 61, 9) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 134), rnode(GIN, 59, 61, 10) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 135), rnode(GIN, 59, 61, 11) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 136), rnode(GIN, 61, 61, 2) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 137), rnode(GIN, 61, 61, 3) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 138), rnode(GIN, 61, 61, 4) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 139), rnode(GIN, 61, 61, 5) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 144), rnode(GIN, 62, 61, 24) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 145), rnode(GIN, 62, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 146), rnode(GIN, 62, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 147), rnode(GIN, 62, 61, 21) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 148), rnode(GIN, 62, 61, 18) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 149), rnode(GIN, 62, 61, 17) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 150), rnode(GIN, 62, 61, 16) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 151), rnode(GIN, 62, 61, 15) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 152), rnode(GIN, 62, 61, 8) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 153), rnode(GIN, 62, 61, 9) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 154), rnode(GIN, 62, 61, 10) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 155), rnode(GIN, 62, 61, 11) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 156), rnode(GIN, 64, 61, 2) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 157), rnode(GIN, 64, 61, 3) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 158), rnode(GIN, 64, 61, 4) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 159), rnode(GIN, 64, 61, 5) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 160), rnode(GIN, 65, 61, 24) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 161), rnode(GIN, 65, 61, 23) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 162), rnode(GIN, 65, 61, 22) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 163), rnode(GIN, 65, 61, 21) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 164), rnode(GIN, 65, 61, 18) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 165), rnode(GIN, 65, 61, 17) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 166), rnode(GIN, 65, 61, 16) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 167), rnode(GIN, 65, 61, 15) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 168), rnode(GIN, 65, 61, 8) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 169), rnode(GIN, 65, 61, 9) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 170), rnode(GIN, 65, 61, 10) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 171), rnode(GIN, 65, 61, 11) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 172), rnode(GIN, 66, 61, 2) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 173), rnode(GIN, 66, 61, 3) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 174), rnode(GIN, 66, 61, 4) },
  { pnode(HMC, 22, 61, IOINTDQDIN, -1, 175), rnode(GIN, 66, 61, 5) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICRDATAVALID, -1, 0), rnode(GIN, 36, 61, 13) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICRDATAVALID, -1, 1), rnode(GIN, 45, 61, 0) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICRDATAVALID, -1, 2), rnode(GIN, 52, 61, 4) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICRDATAVALID, -1, 3), rnode(GIN, 60, 61, 4) },
  { pnode(HMC, 22, 61, IOINTDQSLOGICRDATAVALID, -1, 4), rnode(GIN, 67, 61, 1) },
  { pnode(HMC, 22, 61, LOCALDEEPPOWERDNACK, -1, -1), rnode(GIN, 22, 61, 16) },
  { pnode(HMC, 22, 61, LOCALINITDONE, -1, -1), rnode(GIN, 22, 61, 15) },
  { pnode(HMC, 22, 61, LOCALPOWERDOWNACK, -1, -1), rnode(GIN, 22, 61, 14) },
  { pnode(HMC, 22, 61, LOCALREFRESHACK, -1, -1), rnode(GIN, 22, 61, 13) },
  { pnode(HMC, 22, 61, LOCALSELFRFSHACK, -1, -1), rnode(GIN, 23, 61, 0) },
  { pnode(HMC, 22, 61, MMRRDATA, -1, 0), rnode(GIN, 56, 61, 24) },
  { pnode(HMC, 22, 61, MMRRDATA, -1, 1), rnode(GIN, 56, 61, 23) },
  { pnode(HMC, 22, 61, MMRRDATA, -1, 2), rnode(GIN, 56, 61, 22) },
  { pnode(HMC, 22, 61, MMRRDATA, -1, 3), rnode(GIN, 56, 61, 21) },
  { pnode(HMC, 22, 61, MMRRDATA, -1, 4), rnode(GIN, 56, 61, 20) },
  { pnode(HMC, 22, 61, MMRRDATA, -1, 5), rnode(GIN, 56, 61, 19) },
  { pnode(HMC, 22, 61, MMRRDATA, -1, 6), rnode(GIN, 56, 61, 18) },
  { pnode(HMC, 22, 61, MMRRDATA, -1, 7), rnode(GIN, 56, 61, 17) },
  { pnode(HMC, 22, 61, MMRRDATAVALID, -1, -1), rnode(GIN, 56, 61, 25) },
  { pnode(HMC, 22, 61, MMRWAITREQUEST, -1, -1), rnode(GIN, 58, 61, 2) },
  { pnode(HMC, 22, 61, OAMMREADY, -1, 0), rnode(GIN, 23, 61, 1) },
  { pnode(HMC, 22, 61, OAMMREADY, -1, 1), rnode(GIN, 33, 61, 16) },
  { pnode(HMC, 22, 61, OAMMREADY, -1, 2), rnode(GIN, 23, 61, 11) },
  { pnode(HMC, 22, 61, OAMMREADY, -1, 3), rnode(GIN, 29, 61, 21) },
  { pnode(HMC, 22, 61, OAMMREADY, -1, 4), rnode(GIN, 29, 61, 16) },
  { pnode(HMC, 22, 61, OAMMREADY, -1, 5), rnode(GIN, 30, 61, 1) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 0), rnode(GIN, 23, 61, 22) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 1), rnode(GIN, 23, 61, 21) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 2), rnode(GIN, 23, 61, 20) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 3), rnode(GIN, 23, 61, 19) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 4), rnode(GIN, 23, 61, 18) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 5), rnode(GIN, 23, 61, 17) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 6), rnode(GIN, 23, 61, 16) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 7), rnode(GIN, 23, 61, 15) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 8), rnode(GIN, 23, 61, 14) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 9), rnode(GIN, 23, 61, 13) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 10), rnode(GIN, 24, 61, 0) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 11), rnode(GIN, 24, 61, 1) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 12), rnode(GIN, 24, 61, 2) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 13), rnode(GIN, 24, 61, 3) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 14), rnode(GIN, 24, 61, 4) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 15), rnode(GIN, 24, 61, 5) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 16), rnode(GIN, 24, 61, 6) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 17), rnode(GIN, 24, 61, 7) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 18), rnode(GIN, 24, 61, 8) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 19), rnode(GIN, 24, 61, 9) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 20), rnode(GIN, 24, 61, 12) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 21), rnode(GIN, 24, 61, 25) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 22), rnode(GIN, 24, 61, 24) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 23), rnode(GIN, 24, 61, 23) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 24), rnode(GIN, 24, 61, 22) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 25), rnode(GIN, 24, 61, 21) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 26), rnode(GIN, 24, 61, 16) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 27), rnode(GIN, 24, 61, 15) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 28), rnode(GIN, 24, 61, 14) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 29), rnode(GIN, 24, 61, 13) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 30), rnode(GIN, 25, 61, 0) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 31), rnode(GIN, 25, 61, 1) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 32), rnode(GIN, 25, 61, 2) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 33), rnode(GIN, 25, 61, 3) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 34), rnode(GIN, 25, 61, 4) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 35), rnode(GIN, 25, 61, 5) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 36), rnode(GIN, 25, 61, 6) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 37), rnode(GIN, 25, 61, 7) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 38), rnode(GIN, 25, 61, 8) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 39), rnode(GIN, 25, 61, 9) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 40), rnode(GIN, 25, 61, 10) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 41), rnode(GIN, 25, 61, 11) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 42), rnode(GIN, 25, 61, 12) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 43), rnode(GIN, 25, 61, 25) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 44), rnode(GIN, 25, 61, 24) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 45), rnode(GIN, 25, 61, 23) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 46), rnode(GIN, 25, 61, 22) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 47), rnode(GIN, 25, 61, 21) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 48), rnode(GIN, 25, 61, 20) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 49), rnode(GIN, 25, 61, 19) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 50), rnode(GIN, 25, 61, 18) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 51), rnode(GIN, 25, 61, 17) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 52), rnode(GIN, 28, 61, 25) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 53), rnode(GIN, 28, 61, 24) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 54), rnode(GIN, 28, 61, 23) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 55), rnode(GIN, 28, 61, 22) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 56), rnode(GIN, 28, 61, 21) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 57), rnode(GIN, 28, 61, 20) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 58), rnode(GIN, 28, 61, 19) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 59), rnode(GIN, 28, 61, 18) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 60), rnode(GIN, 28, 61, 16) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 61), rnode(GIN, 28, 61, 15) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 62), rnode(GIN, 28, 61, 14) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 63), rnode(GIN, 28, 61, 13) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 64), rnode(GIN, 29, 61, 0) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 65), rnode(GIN, 29, 61, 1) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 66), rnode(GIN, 29, 61, 2) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 67), rnode(GIN, 29, 61, 3) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 68), rnode(GIN, 29, 61, 4) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 69), rnode(GIN, 29, 61, 5) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 70), rnode(GIN, 29, 61, 6) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 71), rnode(GIN, 29, 61, 7) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 72), rnode(GIN, 29, 61, 8) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 73), rnode(GIN, 29, 61, 9) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 74), rnode(GIN, 29, 61, 10) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 75), rnode(GIN, 29, 61, 11) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 76), rnode(GIN, 29, 61, 25) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 77), rnode(GIN, 29, 61, 24) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 78), rnode(GIN, 29, 61, 23) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 0, 79), rnode(GIN, 29, 61, 22) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 0), rnode(GIN, 30, 61, 6) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 1), rnode(GIN, 30, 61, 7) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 2), rnode(GIN, 30, 61, 8) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 3), rnode(GIN, 30, 61, 25) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 4), rnode(GIN, 30, 61, 24) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 5), rnode(GIN, 30, 61, 23) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 6), rnode(GIN, 30, 61, 22) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 7), rnode(GIN, 30, 61, 21) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 8), rnode(GIN, 30, 61, 20) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 9), rnode(GIN, 30, 61, 19) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 10), rnode(GIN, 30, 61, 18) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 11), rnode(GIN, 30, 61, 17) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 12), rnode(GIN, 30, 61, 16) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 13), rnode(GIN, 30, 61, 15) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 14), rnode(GIN, 30, 61, 14) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 15), rnode(GIN, 30, 61, 13) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 16), rnode(GIN, 31, 61, 0) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 17), rnode(GIN, 31, 61, 1) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 18), rnode(GIN, 31, 61, 2) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 19), rnode(GIN, 31, 61, 3) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 20), rnode(GIN, 31, 61, 4) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 21), rnode(GIN, 31, 61, 5) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 22), rnode(GIN, 31, 61, 6) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 23), rnode(GIN, 31, 61, 7) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 24), rnode(GIN, 31, 61, 8) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 25), rnode(GIN, 33, 61, 0) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 26), rnode(GIN, 33, 61, 1) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 27), rnode(GIN, 33, 61, 2) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 28), rnode(GIN, 33, 61, 3) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 29), rnode(GIN, 33, 61, 4) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 30), rnode(GIN, 33, 61, 5) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 31), rnode(GIN, 33, 61, 6) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 32), rnode(GIN, 33, 61, 7) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 33), rnode(GIN, 33, 61, 8) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 34), rnode(GIN, 33, 61, 9) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 35), rnode(GIN, 33, 61, 10) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 36), rnode(GIN, 33, 61, 11) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 37), rnode(GIN, 33, 61, 12) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 38), rnode(GIN, 33, 61, 25) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 39), rnode(GIN, 33, 61, 24) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 40), rnode(GIN, 33, 61, 23) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 41), rnode(GIN, 33, 61, 22) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 42), rnode(GIN, 33, 61, 21) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 43), rnode(GIN, 33, 61, 20) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 44), rnode(GIN, 33, 61, 19) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 45), rnode(GIN, 33, 61, 15) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 46), rnode(GIN, 33, 61, 14) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 47), rnode(GIN, 34, 61, 13) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 48), rnode(GIN, 35, 61, 0) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 49), rnode(GIN, 35, 61, 1) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 50), rnode(GIN, 35, 61, 2) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 51), rnode(GIN, 35, 61, 3) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 52), rnode(GIN, 35, 61, 4) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 53), rnode(GIN, 35, 61, 5) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 54), rnode(GIN, 35, 61, 6) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 55), rnode(GIN, 35, 61, 7) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 56), rnode(GIN, 35, 61, 8) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 57), rnode(GIN, 35, 61, 9) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 58), rnode(GIN, 35, 61, 10) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 59), rnode(GIN, 35, 61, 11) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 60), rnode(GIN, 35, 61, 12) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 61), rnode(GIN, 35, 61, 25) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 62), rnode(GIN, 35, 61, 24) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 63), rnode(GIN, 35, 61, 23) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 64), rnode(GIN, 35, 61, 22) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 65), rnode(GIN, 35, 61, 21) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 66), rnode(GIN, 35, 61, 20) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 67), rnode(GIN, 35, 61, 19) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 68), rnode(GIN, 35, 61, 17) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 69), rnode(GIN, 35, 61, 16) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 70), rnode(GIN, 35, 61, 15) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 71), rnode(GIN, 37, 61, 22) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 72), rnode(GIN, 37, 61, 21) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 73), rnode(GIN, 37, 61, 20) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 74), rnode(GIN, 37, 61, 19) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 75), rnode(GIN, 37, 61, 18) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 76), rnode(GIN, 37, 61, 17) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 77), rnode(GIN, 37, 61, 16) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 78), rnode(GIN, 37, 61, 15) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 1, 79), rnode(GIN, 37, 61, 14) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 0), rnode(GIN, 37, 61, 13) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 1), rnode(GIN, 38, 61, 0) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 2), rnode(GIN, 38, 61, 13) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 3), rnode(GIN, 39, 61, 0) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 4), rnode(GIN, 39, 61, 1) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 5), rnode(GIN, 39, 61, 2) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 6), rnode(GIN, 39, 61, 3) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 7), rnode(GIN, 39, 61, 4) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 8), rnode(GIN, 39, 61, 5) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 9), rnode(GIN, 39, 61, 6) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 10), rnode(GIN, 39, 61, 7) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 11), rnode(GIN, 39, 61, 8) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 12), rnode(GIN, 41, 61, 1) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 13), rnode(GIN, 41, 61, 2) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 14), rnode(GIN, 41, 61, 3) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 15), rnode(GIN, 41, 61, 4) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 16), rnode(GIN, 41, 61, 5) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 17), rnode(GIN, 41, 61, 6) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 18), rnode(GIN, 41, 61, 7) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 19), rnode(GIN, 41, 61, 8) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 20), rnode(GIN, 41, 61, 11) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 21), rnode(GIN, 41, 61, 12) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 22), rnode(GIN, 41, 61, 25) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 23), rnode(GIN, 41, 61, 24) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 24), rnode(GIN, 41, 61, 23) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 25), rnode(GIN, 41, 61, 22) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 26), rnode(GIN, 41, 61, 21) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 27), rnode(GIN, 41, 61, 20) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 28), rnode(GIN, 41, 61, 19) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 29), rnode(GIN, 41, 61, 18) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 30), rnode(GIN, 41, 61, 17) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 31), rnode(GIN, 43, 61, 0) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 32), rnode(GIN, 43, 61, 1) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 33), rnode(GIN, 43, 61, 2) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 34), rnode(GIN, 43, 61, 3) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 35), rnode(GIN, 43, 61, 4) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 36), rnode(GIN, 43, 61, 5) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 37), rnode(GIN, 43, 61, 6) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 38), rnode(GIN, 43, 61, 7) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 39), rnode(GIN, 43, 61, 8) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 40), rnode(GIN, 43, 61, 9) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 41), rnode(GIN, 43, 61, 10) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 42), rnode(GIN, 43, 61, 11) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 43), rnode(GIN, 43, 61, 12) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 44), rnode(GIN, 43, 61, 25) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 45), rnode(GIN, 43, 61, 24) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 46), rnode(GIN, 43, 61, 23) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 47), rnode(GIN, 43, 61, 22) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 48), rnode(GIN, 43, 61, 21) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 49), rnode(GIN, 43, 61, 20) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 50), rnode(GIN, 43, 61, 19) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 51), rnode(GIN, 43, 61, 18) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 52), rnode(GIN, 43, 61, 17) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 53), rnode(GIN, 43, 61, 16) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 54), rnode(GIN, 43, 61, 15) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 55), rnode(GIN, 43, 61, 14) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 56), rnode(GIN, 45, 61, 1) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 57), rnode(GIN, 45, 61, 2) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 58), rnode(GIN, 45, 61, 3) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 59), rnode(GIN, 45, 61, 4) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 60), rnode(GIN, 45, 61, 5) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 61), rnode(GIN, 45, 61, 10) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 62), rnode(GIN, 45, 61, 11) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 63), rnode(GIN, 45, 61, 12) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 64), rnode(GIN, 45, 61, 25) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 65), rnode(GIN, 45, 61, 24) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 66), rnode(GIN, 45, 61, 23) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 67), rnode(GIN, 45, 61, 22) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 68), rnode(GIN, 45, 61, 18) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 69), rnode(GIN, 45, 61, 17) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 70), rnode(GIN, 45, 61, 16) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 71), rnode(GIN, 45, 61, 15) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 72), rnode(GIN, 45, 61, 14) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 73), rnode(GIN, 45, 61, 13) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 74), rnode(GIN, 46, 61, 0) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 75), rnode(GIN, 46, 61, 13) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 76), rnode(GIN, 47, 61, 0) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 77), rnode(GIN, 47, 61, 1) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 78), rnode(GIN, 47, 61, 2) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 2, 79), rnode(GIN, 47, 61, 3) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 0), rnode(GIN, 47, 61, 4) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 1), rnode(GIN, 47, 61, 5) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 2), rnode(GIN, 47, 61, 7) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 3), rnode(GIN, 47, 61, 8) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 4), rnode(GIN, 47, 61, 9) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 5), rnode(GIN, 47, 61, 10) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 6), rnode(GIN, 47, 61, 11) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 7), rnode(GIN, 47, 61, 12) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 8), rnode(GIN, 47, 61, 25) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 9), rnode(GIN, 47, 61, 24) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 10), rnode(GIN, 47, 61, 23) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 11), rnode(GIN, 47, 61, 22) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 12), rnode(GIN, 47, 61, 21) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 13), rnode(GIN, 47, 61, 20) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 14), rnode(GIN, 47, 61, 19) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 15), rnode(GIN, 47, 61, 18) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 16), rnode(GIN, 47, 61, 17) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 17), rnode(GIN, 47, 61, 16) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 18), rnode(GIN, 47, 61, 15) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 19), rnode(GIN, 47, 61, 14) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 20), rnode(GIN, 48, 61, 13) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 21), rnode(GIN, 49, 61, 0) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 22), rnode(GIN, 49, 61, 1) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 23), rnode(GIN, 49, 61, 2) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 24), rnode(GIN, 49, 61, 3) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 25), rnode(GIN, 49, 61, 4) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 26), rnode(GIN, 49, 61, 6) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 27), rnode(GIN, 49, 61, 7) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 28), rnode(GIN, 49, 61, 8) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 29), rnode(GIN, 49, 61, 9) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 30), rnode(GIN, 49, 61, 10) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 31), rnode(GIN, 49, 61, 11) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 32), rnode(GIN, 49, 61, 12) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 33), rnode(GIN, 49, 61, 25) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 34), rnode(GIN, 49, 61, 24) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 35), rnode(GIN, 49, 61, 23) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 36), rnode(GIN, 49, 61, 22) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 37), rnode(GIN, 49, 61, 21) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 38), rnode(GIN, 49, 61, 20) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 39), rnode(GIN, 49, 61, 19) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 40), rnode(GIN, 49, 61, 17) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 41), rnode(GIN, 49, 61, 16) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 42), rnode(GIN, 49, 61, 15) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 43), rnode(GIN, 49, 61, 14) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 44), rnode(GIN, 49, 61, 13) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 45), rnode(GIN, 50, 61, 0) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 46), rnode(GIN, 49, 61, 18) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 47), rnode(GIN, 52, 61, 5) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 48), rnode(GIN, 52, 61, 6) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 49), rnode(GIN, 52, 61, 7) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 50), rnode(GIN, 52, 61, 8) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 51), rnode(GIN, 52, 61, 9) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 52), rnode(GIN, 52, 61, 10) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 53), rnode(GIN, 52, 61, 11) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 54), rnode(GIN, 52, 61, 12) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 55), rnode(GIN, 52, 61, 25) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 56), rnode(GIN, 52, 61, 24) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 57), rnode(GIN, 52, 61, 23) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 58), rnode(GIN, 52, 61, 22) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 59), rnode(GIN, 52, 61, 21) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 60), rnode(GIN, 52, 61, 20) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 61), rnode(GIN, 52, 61, 19) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 62), rnode(GIN, 52, 61, 18) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 63), rnode(GIN, 52, 61, 17) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 64), rnode(GIN, 52, 61, 16) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 65), rnode(GIN, 52, 61, 15) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 66), rnode(GIN, 52, 61, 14) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 67), rnode(GIN, 52, 61, 13) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 68), rnode(GIN, 53, 61, 0) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 69), rnode(GIN, 53, 61, 13) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 70), rnode(GIN, 54, 61, 0) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 71), rnode(GIN, 54, 61, 1) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 72), rnode(GIN, 56, 61, 5) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 73), rnode(GIN, 56, 61, 6) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 74), rnode(GIN, 56, 61, 7) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 75), rnode(GIN, 56, 61, 8) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 76), rnode(GIN, 56, 61, 9) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 77), rnode(GIN, 56, 61, 10) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 78), rnode(GIN, 56, 61, 11) },
  { pnode(HMC, 22, 61, ORDAVSTDATA, 3, 79), rnode(GIN, 56, 61, 12) },
  { pnode(HMC, 22, 61, ORDAVSTVALID, 0, -1), rnode(GIN, 24, 61, 10) },
  { pnode(HMC, 22, 61, ORDAVSTVALID, 1, -1), rnode(GIN, 33, 61, 18) },
  { pnode(HMC, 22, 61, ORDAVSTVALID, 2, -1), rnode(GIN, 41, 61, 9) },
  { pnode(HMC, 22, 61, ORDAVSTVALID, 3, -1), rnode(GIN, 47, 61, 13) },
  { pnode(HMC, 22, 61, OWRACKAVSTDATA, 0, -1), rnode(GIN, 23, 61, 2) },
  { pnode(HMC, 22, 61, OWRACKAVSTDATA, 1, -1), rnode(GIN, 23, 61, 7) },
  { pnode(HMC, 22, 61, OWRACKAVSTDATA, 2, -1), rnode(GIN, 23, 61, 12) },
  { pnode(HMC, 22, 61, OWRACKAVSTDATA, 3, -1), rnode(GIN, 29, 61, 20) },
  { pnode(HMC, 22, 61, OWRACKAVSTDATA, 4, -1), rnode(GIN, 29, 61, 15) },
  { pnode(HMC, 22, 61, OWRACKAVSTDATA, 5, -1), rnode(GIN, 30, 61, 2) },
  { pnode(HMC, 22, 61, OWRACKAVSTVALID, 0, -1), rnode(GIN, 23, 61, 3) },
  { pnode(HMC, 22, 61, OWRACKAVSTVALID, 1, -1), rnode(GIN, 23, 61, 8) },
  { pnode(HMC, 22, 61, OWRACKAVSTVALID, 2, -1), rnode(GIN, 23, 61, 25) },
  { pnode(HMC, 22, 61, OWRACKAVSTVALID, 3, -1), rnode(GIN, 29, 61, 19) },
  { pnode(HMC, 22, 61, OWRACKAVSTVALID, 4, -1), rnode(GIN, 29, 61, 14) },
  { pnode(HMC, 22, 61, OWRACKAVSTVALID, 5, -1), rnode(GIN, 30, 61, 3) },
  { pnode(HMC, 22, 61, PHYRESETN, -1, -1), rnode(GIN, 62, 61, 13) },
  { pnode(HMC, 22, 61, SCRDATA, -1, 0), rnode(GIN, 56, 61, 16) },
  { pnode(HMC, 22, 61, SCRDATA, -1, 1), rnode(GIN, 56, 61, 15) },
  { pnode(HMC, 22, 61, SCRDATA, -1, 2), rnode(GIN, 56, 61, 14) },
  { pnode(HMC, 22, 61, SCRDATA, -1, 3), rnode(GIN, 56, 61, 13) },
  { pnode(HMC, 22, 61, SCRDATA, -1, 4), rnode(GIN, 57, 61, 0) },
  { pnode(HMC, 22, 61, SCRDATA, -1, 5), rnode(GIN, 57, 61, 13) },
  { pnode(HMC, 22, 61, SCRDATA, -1, 6), rnode(GIN, 58, 61, 0) },
  { pnode(HMC, 22, 61, SCRDATA, -1, 7), rnode(GIN, 58, 61, 1) },
  { pnode(HMC, 22, 61, SCRDATAVALID, -1, -1), rnode(GIN, 63, 61, 0) },
  { pnode(HMC, 22, 61, SCWAITREQUEST, -1, -1), rnode(GIN, 63, 61, 1) },
  { pnode(HMC, 23, 0, AFISEQBUSY, -1, 0), rnode(GOUT, 60, 0, 48) },
  { pnode(HMC, 23, 0, AFISEQBUSY, -1, 1), rnode(GOUT, 60, 0, 47) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 0), rnode(GOUT, 58, 0, 41) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 1), rnode(GOUT, 58, 0, 45) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 2), rnode(GOUT, 58, 0, 40) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 3), rnode(GOUT, 58, 0, 44) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 4), rnode(GOUT, 58, 0, 39) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 5), rnode(GOUT, 58, 0, 43) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 6), rnode(GOUT, 58, 0, 38) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 7), rnode(GOUT, 58, 0, 27) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 8), rnode(GOUT, 58, 0, 28) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 9), rnode(GOUT, 58, 0, 34) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 10), rnode(GOUT, 58, 0, 29) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 11), rnode(GOUT, 58, 0, 32) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 12), rnode(GOUT, 58, 0, 37) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 13), rnode(GOUT, 58, 0, 35) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 14), rnode(GOUT, 58, 0, 36) },
  { pnode(HMC, 23, 0, AVLADDRESS, -1, 15), rnode(GOUT, 58, 0, 26) },
  { pnode(HMC, 23, 0, AVLREAD, -1, -1), rnode(GOUT, 59, 0, 9) },
  { pnode(HMC, 23, 0, AVLRESETN, -1, -1), rnode(GOUT, 59, 0, 0) },
  { pnode(HMC, 23, 0, AVLWRITE, -1, -1), rnode(GOUT, 58, 0, 46) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 0), rnode(GOUT, 56, 0, 36) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 1), rnode(GOUT, 56, 0, 26) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 2), rnode(GOUT, 57, 0, 0) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 3), rnode(GOUT, 57, 0, 10) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 4), rnode(GOUT, 57, 0, 9) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 5), rnode(GOUT, 57, 0, 11) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 6), rnode(GOUT, 57, 0, 6) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 7), rnode(GOUT, 57, 0, 33) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 8), rnode(GOUT, 57, 0, 32) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 9), rnode(GOUT, 57, 0, 37) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 10), rnode(GOUT, 57, 0, 35) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 11), rnode(GOUT, 57, 0, 36) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 12), rnode(GOUT, 57, 0, 26) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 13), rnode(GOUT, 58, 0, 0) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 14), rnode(GOUT, 58, 0, 10) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 15), rnode(GOUT, 58, 0, 6) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 16), rnode(GOUT, 58, 0, 4) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 17), rnode(GOUT, 58, 0, 3) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 18), rnode(GOUT, 58, 0, 12) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 19), rnode(GOUT, 58, 0, 17) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 20), rnode(GOUT, 58, 0, 19) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 21), rnode(GOUT, 58, 0, 20) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 22), rnode(GOUT, 58, 0, 16) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 23), rnode(GOUT, 58, 0, 21) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 24), rnode(GOUT, 58, 0, 22) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 25), rnode(GOUT, 58, 0, 24) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 26), rnode(GOUT, 58, 0, 25) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 27), rnode(GOUT, 58, 0, 50) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 28), rnode(GOUT, 58, 0, 49) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 29), rnode(GOUT, 58, 0, 48) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 30), rnode(GOUT, 58, 0, 47) },
  { pnode(HMC, 23, 0, AVLWRITEDATA, -1, 31), rnode(GOUT, 58, 0, 42) },
  { pnode(HMC, 23, 0, BONDINGIN, 0, 0), rnode(GOUT, 28, 0, 16) },
  { pnode(HMC, 23, 0, BONDINGIN, 0, 1), rnode(GOUT, 34, 0, 6) },
  { pnode(HMC, 23, 0, BONDINGIN, 0, 2), rnode(GOUT, 33, 0, 26) },
  { pnode(HMC, 23, 0, BONDINGIN, 0, 3), rnode(GOUT, 40, 0, 33) },
  { pnode(HMC, 23, 0, BONDINGIN, 1, 0), rnode(GOUT, 23, 0, 44) },
  { pnode(HMC, 23, 0, BONDINGIN, 1, 1), rnode(GOUT, 24, 0, 33) },
  { pnode(HMC, 23, 0, BONDINGIN, 1, 2), rnode(GOUT, 28, 0, 14) },
  { pnode(HMC, 23, 0, BONDINGIN, 1, 3), rnode(GOUT, 29, 0, 21) },
  { pnode(HMC, 23, 0, BONDINGIN, 1, 4), rnode(GOUT, 30, 0, 21) },
  { pnode(HMC, 23, 0, BONDINGIN, 1, 5), rnode(GOUT, 33, 0, 10) },
  { pnode(HMC, 23, 0, BONDINGIN, 2, 0), rnode(GOUT, 23, 0, 39) },
  { pnode(HMC, 23, 0, BONDINGIN, 2, 1), rnode(GOUT, 24, 0, 32) },
  { pnode(HMC, 23, 0, BONDINGIN, 2, 2), rnode(GOUT, 28, 0, 19) },
  { pnode(HMC, 23, 0, BONDINGIN, 2, 3), rnode(GOUT, 29, 0, 22) },
  { pnode(HMC, 23, 0, BONDINGIN, 2, 4), rnode(GOUT, 30, 0, 16) },
  { pnode(HMC, 23, 0, BONDINGIN, 2, 5), rnode(GOUT, 33, 0, 9) },
  { pnode(HMC, 23, 0, GLOBALRESETN, -1, -1), rnode(GOUT, 59, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 0), rnode(GOUT, 22, 0, 34) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 1), rnode(GOUT, 22, 0, 29) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 2), rnode(GOUT, 22, 0, 30) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 3), rnode(GOUT, 22, 0, 31) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 4), rnode(GOUT, 22, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 5), rnode(GOUT, 22, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 6), rnode(GOUT, 22, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 7), rnode(GOUT, 22, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 8), rnode(GOUT, 22, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 9), rnode(GOUT, 22, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 10), rnode(GOUT, 23, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 11), rnode(GOUT, 23, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 12), rnode(GOUT, 23, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 13), rnode(GOUT, 23, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 14), rnode(GOUT, 23, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 15), rnode(GOUT, 23, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 16), rnode(GOUT, 23, 0, 5) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 17), rnode(GOUT, 23, 0, 4) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 18), rnode(GOUT, 23, 0, 3) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 19), rnode(GOUT, 23, 0, 8) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 20), rnode(GOUT, 23, 0, 2) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 21), rnode(GOUT, 23, 0, 1) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 22), rnode(GOUT, 23, 0, 12) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 23), rnode(GOUT, 23, 0, 17) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 24), rnode(GOUT, 23, 0, 13) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 25), rnode(GOUT, 23, 0, 18) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 26), rnode(GOUT, 23, 0, 14) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 27), rnode(GOUT, 23, 0, 19) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 28), rnode(GOUT, 23, 0, 15) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 29), rnode(GOUT, 23, 0, 20) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 30), rnode(GOUT, 23, 0, 16) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 31), rnode(GOUT, 23, 0, 21) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 32), rnode(GOUT, 23, 0, 22) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 33), rnode(GOUT, 23, 0, 23) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 34), rnode(GOUT, 23, 0, 24) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 35), rnode(GOUT, 23, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 36), rnode(GOUT, 23, 0, 50) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 37), rnode(GOUT, 23, 0, 49) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 38), rnode(GOUT, 23, 0, 48) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 39), rnode(GOUT, 23, 0, 47) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 40), rnode(GOUT, 23, 0, 42) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 0, 41), rnode(GOUT, 23, 0, 46) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 0), rnode(GOUT, 23, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 1), rnode(GOUT, 23, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 2), rnode(GOUT, 24, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 3), rnode(GOUT, 24, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 4), rnode(GOUT, 24, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 5), rnode(GOUT, 24, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 6), rnode(GOUT, 24, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 7), rnode(GOUT, 24, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 8), rnode(GOUT, 24, 0, 5) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 9), rnode(GOUT, 24, 0, 4) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 10), rnode(GOUT, 24, 0, 3) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 11), rnode(GOUT, 24, 0, 8) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 12), rnode(GOUT, 24, 0, 2) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 13), rnode(GOUT, 24, 0, 1) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 14), rnode(GOUT, 24, 0, 12) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 15), rnode(GOUT, 24, 0, 17) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 16), rnode(GOUT, 24, 0, 13) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 17), rnode(GOUT, 24, 0, 18) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 18), rnode(GOUT, 24, 0, 14) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 19), rnode(GOUT, 24, 0, 19) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 20), rnode(GOUT, 24, 0, 15) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 21), rnode(GOUT, 24, 0, 20) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 22), rnode(GOUT, 24, 0, 16) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 23), rnode(GOUT, 24, 0, 21) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 24), rnode(GOUT, 24, 0, 22) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 25), rnode(GOUT, 24, 0, 23) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 26), rnode(GOUT, 24, 0, 24) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 27), rnode(GOUT, 24, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 28), rnode(GOUT, 24, 0, 50) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 29), rnode(GOUT, 24, 0, 49) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 30), rnode(GOUT, 24, 0, 48) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 31), rnode(GOUT, 24, 0, 47) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 32), rnode(GOUT, 24, 0, 42) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 33), rnode(GOUT, 24, 0, 41) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 34), rnode(GOUT, 24, 0, 45) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 35), rnode(GOUT, 24, 0, 40) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 36), rnode(GOUT, 24, 0, 44) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 37), rnode(GOUT, 24, 0, 39) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 38), rnode(GOUT, 24, 0, 27) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 39), rnode(GOUT, 24, 0, 28) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 40), rnode(GOUT, 24, 0, 34) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 1, 41), rnode(GOUT, 24, 0, 29) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 0), rnode(GOUT, 24, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 1), rnode(GOUT, 24, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 2), rnode(GOUT, 24, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 3), rnode(GOUT, 24, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 4), rnode(GOUT, 25, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 5), rnode(GOUT, 25, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 6), rnode(GOUT, 25, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 7), rnode(GOUT, 25, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 8), rnode(GOUT, 25, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 9), rnode(GOUT, 25, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 10), rnode(GOUT, 25, 0, 5) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 11), rnode(GOUT, 25, 0, 4) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 12), rnode(GOUT, 25, 0, 3) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 13), rnode(GOUT, 25, 0, 8) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 14), rnode(GOUT, 25, 0, 2) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 15), rnode(GOUT, 25, 0, 1) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 16), rnode(GOUT, 25, 0, 12) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 17), rnode(GOUT, 25, 0, 17) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 18), rnode(GOUT, 25, 0, 13) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 19), rnode(GOUT, 25, 0, 18) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 20), rnode(GOUT, 25, 0, 14) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 21), rnode(GOUT, 25, 0, 19) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 22), rnode(GOUT, 25, 0, 15) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 23), rnode(GOUT, 25, 0, 20) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 24), rnode(GOUT, 25, 0, 16) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 25), rnode(GOUT, 25, 0, 21) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 26), rnode(GOUT, 25, 0, 22) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 27), rnode(GOUT, 25, 0, 23) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 28), rnode(GOUT, 25, 0, 24) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 29), rnode(GOUT, 25, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 30), rnode(GOUT, 25, 0, 50) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 31), rnode(GOUT, 25, 0, 49) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 32), rnode(GOUT, 25, 0, 48) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 33), rnode(GOUT, 25, 0, 47) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 34), rnode(GOUT, 25, 0, 46) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 35), rnode(GOUT, 25, 0, 41) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 36), rnode(GOUT, 25, 0, 45) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 37), rnode(GOUT, 25, 0, 40) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 38), rnode(GOUT, 25, 0, 44) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 39), rnode(GOUT, 25, 0, 39) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 40), rnode(GOUT, 25, 0, 43) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 2, 41), rnode(GOUT, 28, 0, 17) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 0), rnode(GOUT, 28, 0, 21) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 1), rnode(GOUT, 28, 0, 22) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 2), rnode(GOUT, 28, 0, 23) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 3), rnode(GOUT, 28, 0, 24) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 4), rnode(GOUT, 28, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 5), rnode(GOUT, 28, 0, 50) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 6), rnode(GOUT, 28, 0, 49) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 7), rnode(GOUT, 28, 0, 48) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 8), rnode(GOUT, 28, 0, 47) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 9), rnode(GOUT, 28, 0, 42) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 10), rnode(GOUT, 28, 0, 46) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 11), rnode(GOUT, 28, 0, 41) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 12), rnode(GOUT, 28, 0, 45) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 13), rnode(GOUT, 28, 0, 40) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 14), rnode(GOUT, 28, 0, 44) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 15), rnode(GOUT, 28, 0, 39) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 16), rnode(GOUT, 28, 0, 43) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 17), rnode(GOUT, 28, 0, 38) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 18), rnode(GOUT, 28, 0, 27) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 19), rnode(GOUT, 28, 0, 28) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 20), rnode(GOUT, 28, 0, 34) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 21), rnode(GOUT, 28, 0, 29) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 22), rnode(GOUT, 28, 0, 30) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 23), rnode(GOUT, 28, 0, 31) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 24), rnode(GOUT, 28, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 25), rnode(GOUT, 28, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 26), rnode(GOUT, 28, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 27), rnode(GOUT, 28, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 28), rnode(GOUT, 28, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 29), rnode(GOUT, 28, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 30), rnode(GOUT, 29, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 31), rnode(GOUT, 29, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 32), rnode(GOUT, 29, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 33), rnode(GOUT, 29, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 34), rnode(GOUT, 29, 0, 1) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 35), rnode(GOUT, 29, 0, 12) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 36), rnode(GOUT, 29, 0, 17) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 37), rnode(GOUT, 29, 0, 13) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 38), rnode(GOUT, 29, 0, 18) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 39), rnode(GOUT, 29, 0, 14) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 40), rnode(GOUT, 29, 0, 19) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 3, 41), rnode(GOUT, 29, 0, 15) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 0), rnode(GOUT, 29, 0, 23) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 1), rnode(GOUT, 29, 0, 24) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 2), rnode(GOUT, 29, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 3), rnode(GOUT, 29, 0, 50) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 4), rnode(GOUT, 29, 0, 49) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 5), rnode(GOUT, 29, 0, 48) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 6), rnode(GOUT, 29, 0, 47) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 7), rnode(GOUT, 29, 0, 42) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 8), rnode(GOUT, 29, 0, 46) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 9), rnode(GOUT, 29, 0, 41) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 10), rnode(GOUT, 29, 0, 45) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 11), rnode(GOUT, 29, 0, 40) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 12), rnode(GOUT, 29, 0, 44) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 13), rnode(GOUT, 29, 0, 39) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 14), rnode(GOUT, 29, 0, 43) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 15), rnode(GOUT, 29, 0, 38) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 16), rnode(GOUT, 29, 0, 27) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 17), rnode(GOUT, 29, 0, 28) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 18), rnode(GOUT, 29, 0, 34) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 19), rnode(GOUT, 29, 0, 29) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 20), rnode(GOUT, 29, 0, 30) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 21), rnode(GOUT, 29, 0, 31) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 22), rnode(GOUT, 29, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 23), rnode(GOUT, 29, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 24), rnode(GOUT, 29, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 25), rnode(GOUT, 29, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 26), rnode(GOUT, 29, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 27), rnode(GOUT, 29, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 28), rnode(GOUT, 30, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 29), rnode(GOUT, 30, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 30), rnode(GOUT, 30, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 31), rnode(GOUT, 30, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 32), rnode(GOUT, 30, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 33), rnode(GOUT, 30, 0, 5) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 34), rnode(GOUT, 30, 0, 2) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 35), rnode(GOUT, 30, 0, 1) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 36), rnode(GOUT, 30, 0, 12) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 37), rnode(GOUT, 30, 0, 17) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 38), rnode(GOUT, 30, 0, 13) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 39), rnode(GOUT, 30, 0, 18) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 40), rnode(GOUT, 30, 0, 14) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 4, 41), rnode(GOUT, 30, 0, 19) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 0), rnode(GOUT, 30, 0, 22) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 1), rnode(GOUT, 30, 0, 23) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 2), rnode(GOUT, 30, 0, 24) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 3), rnode(GOUT, 30, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 4), rnode(GOUT, 30, 0, 50) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 5), rnode(GOUT, 30, 0, 49) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 6), rnode(GOUT, 30, 0, 48) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 7), rnode(GOUT, 30, 0, 47) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 8), rnode(GOUT, 30, 0, 42) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 9), rnode(GOUT, 30, 0, 46) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 10), rnode(GOUT, 30, 0, 41) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 11), rnode(GOUT, 30, 0, 45) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 12), rnode(GOUT, 30, 0, 40) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 13), rnode(GOUT, 30, 0, 44) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 14), rnode(GOUT, 30, 0, 39) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 15), rnode(GOUT, 30, 0, 43) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 16), rnode(GOUT, 30, 0, 38) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 17), rnode(GOUT, 30, 0, 27) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 18), rnode(GOUT, 30, 0, 28) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 19), rnode(GOUT, 30, 0, 34) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 20), rnode(GOUT, 30, 0, 29) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 21), rnode(GOUT, 30, 0, 30) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 22), rnode(GOUT, 30, 0, 31) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 23), rnode(GOUT, 30, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 24), rnode(GOUT, 30, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 25), rnode(GOUT, 30, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 26), rnode(GOUT, 30, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 27), rnode(GOUT, 30, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 28), rnode(GOUT, 30, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 29), rnode(GOUT, 31, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 30), rnode(GOUT, 31, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 31), rnode(GOUT, 32, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 32), rnode(GOUT, 32, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 33), rnode(GOUT, 32, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 34), rnode(GOUT, 32, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 35), rnode(GOUT, 32, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 36), rnode(GOUT, 32, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 37), rnode(GOUT, 32, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 38), rnode(GOUT, 32, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 39), rnode(GOUT, 32, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 40), rnode(GOUT, 32, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTCMDDATA, 5, 41), rnode(GOUT, 32, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTCMDRESETN, 0, -1), rnode(GOUT, 23, 0, 45) },
  { pnode(HMC, 23, 0, IAVSTCMDRESETN, 1, -1), rnode(GOUT, 24, 0, 30) },
  { pnode(HMC, 23, 0, IAVSTCMDRESETN, 2, -1), rnode(GOUT, 28, 0, 13) },
  { pnode(HMC, 23, 0, IAVSTCMDRESETN, 3, -1), rnode(GOUT, 29, 0, 20) },
  { pnode(HMC, 23, 0, IAVSTCMDRESETN, 4, -1), rnode(GOUT, 30, 0, 15) },
  { pnode(HMC, 23, 0, IAVSTCMDRESETN, 5, -1), rnode(GOUT, 32, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTRDCLK, 0, -1), rnode(DCMUX, 28, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTRDCLK, 1, -1), rnode(DCMUX, 33, 0, 8) },
  { pnode(HMC, 23, 0, IAVSTRDCLK, 2, -1), rnode(DCMUX, 33, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTRDCLK, 3, -1), rnode(DCMUX, 39, 0, 8) },
  { pnode(HMC, 23, 0, IAVSTRDREADY, 0, -1), rnode(GOUT, 28, 0, 15) },
  { pnode(HMC, 23, 0, IAVSTRDREADY, 1, -1), rnode(GOUT, 34, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTRDREADY, 2, -1), rnode(GOUT, 40, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTRDREADY, 3, -1), rnode(GOUT, 48, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTRDRESETN, 0, -1), rnode(GOUT, 28, 0, 20) },
  { pnode(HMC, 23, 0, IAVSTRDRESETN, 1, -1), rnode(GOUT, 34, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTRDRESETN, 2, -1), rnode(GOUT, 40, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTRDRESETN, 3, -1), rnode(GOUT, 48, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTWRACKREADY, 0, -1), rnode(GOUT, 23, 0, 40) },
  { pnode(HMC, 23, 0, IAVSTWRACKREADY, 1, -1), rnode(GOUT, 24, 0, 31) },
  { pnode(HMC, 23, 0, IAVSTWRACKREADY, 2, -1), rnode(GOUT, 28, 0, 18) },
  { pnode(HMC, 23, 0, IAVSTWRACKREADY, 3, -1), rnode(GOUT, 29, 0, 16) },
  { pnode(HMC, 23, 0, IAVSTWRACKREADY, 4, -1), rnode(GOUT, 30, 0, 20) },
  { pnode(HMC, 23, 0, IAVSTWRACKREADY, 5, -1), rnode(GOUT, 33, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRCLK, -1, 0), rnode(DCMUX, 41, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRCLK, -1, 1), rnode(DCMUX, 49, 0, 2) },
  { pnode(HMC, 23, 0, IAVSTWRCLK, -1, 2), rnode(DCMUX, 43, 0, 8) },
  { pnode(HMC, 23, 0, IAVSTWRCLK, -1, 3), rnode(DCMUX, 49, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 0), rnode(GOUT, 33, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 1), rnode(GOUT, 33, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 2), rnode(GOUT, 33, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 3), rnode(GOUT, 33, 0, 5) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 4), rnode(GOUT, 33, 0, 4) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 5), rnode(GOUT, 33, 0, 3) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 6), rnode(GOUT, 33, 0, 8) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 7), rnode(GOUT, 33, 0, 2) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 8), rnode(GOUT, 33, 0, 1) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 9), rnode(GOUT, 33, 0, 12) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 10), rnode(GOUT, 33, 0, 17) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 11), rnode(GOUT, 33, 0, 13) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 12), rnode(GOUT, 33, 0, 18) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 13), rnode(GOUT, 33, 0, 14) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 14), rnode(GOUT, 33, 0, 19) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 15), rnode(GOUT, 33, 0, 15) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 16), rnode(GOUT, 33, 0, 20) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 17), rnode(GOUT, 33, 0, 16) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 18), rnode(GOUT, 33, 0, 21) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 19), rnode(GOUT, 33, 0, 22) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 20), rnode(GOUT, 33, 0, 23) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 21), rnode(GOUT, 33, 0, 24) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 22), rnode(GOUT, 33, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 23), rnode(GOUT, 33, 0, 50) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 24), rnode(GOUT, 33, 0, 49) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 25), rnode(GOUT, 33, 0, 48) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 26), rnode(GOUT, 33, 0, 47) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 27), rnode(GOUT, 33, 0, 42) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 28), rnode(GOUT, 33, 0, 46) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 29), rnode(GOUT, 33, 0, 41) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 30), rnode(GOUT, 33, 0, 45) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 31), rnode(GOUT, 33, 0, 40) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 32), rnode(GOUT, 33, 0, 44) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 33), rnode(GOUT, 33, 0, 39) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 34), rnode(GOUT, 33, 0, 43) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 35), rnode(GOUT, 33, 0, 27) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 36), rnode(GOUT, 33, 0, 28) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 37), rnode(GOUT, 33, 0, 34) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 38), rnode(GOUT, 33, 0, 29) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 39), rnode(GOUT, 33, 0, 30) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 40), rnode(GOUT, 33, 0, 31) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 41), rnode(GOUT, 33, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 42), rnode(GOUT, 33, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 43), rnode(GOUT, 33, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 44), rnode(GOUT, 33, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 45), rnode(GOUT, 34, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 46), rnode(GOUT, 34, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 47), rnode(GOUT, 35, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 48), rnode(GOUT, 35, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 49), rnode(GOUT, 35, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 50), rnode(GOUT, 35, 0, 4) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 51), rnode(GOUT, 35, 0, 3) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 52), rnode(GOUT, 35, 0, 8) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 53), rnode(GOUT, 35, 0, 2) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 54), rnode(GOUT, 35, 0, 12) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 55), rnode(GOUT, 35, 0, 17) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 56), rnode(GOUT, 35, 0, 13) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 57), rnode(GOUT, 35, 0, 18) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 58), rnode(GOUT, 35, 0, 14) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 59), rnode(GOUT, 35, 0, 19) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 60), rnode(GOUT, 35, 0, 15) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 61), rnode(GOUT, 35, 0, 20) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 62), rnode(GOUT, 35, 0, 16) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 63), rnode(GOUT, 35, 0, 21) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 64), rnode(GOUT, 35, 0, 22) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 65), rnode(GOUT, 35, 0, 23) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 66), rnode(GOUT, 35, 0, 24) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 67), rnode(GOUT, 35, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 68), rnode(GOUT, 35, 0, 50) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 69), rnode(GOUT, 35, 0, 49) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 70), rnode(GOUT, 35, 0, 48) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 71), rnode(GOUT, 35, 0, 47) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 72), rnode(GOUT, 35, 0, 42) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 73), rnode(GOUT, 35, 0, 40) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 74), rnode(GOUT, 35, 0, 39) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 75), rnode(GOUT, 35, 0, 43) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 76), rnode(GOUT, 35, 0, 38) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 77), rnode(GOUT, 35, 0, 30) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 78), rnode(GOUT, 35, 0, 31) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 79), rnode(GOUT, 35, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 80), rnode(GOUT, 35, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 81), rnode(GOUT, 35, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 82), rnode(GOUT, 35, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 83), rnode(GOUT, 35, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 84), rnode(GOUT, 35, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 85), rnode(GOUT, 36, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 86), rnode(GOUT, 36, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 87), rnode(GOUT, 36, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 88), rnode(GOUT, 36, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 0, 89), rnode(GOUT, 36, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 0), rnode(GOUT, 36, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 1), rnode(GOUT, 36, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 2), rnode(GOUT, 36, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 3), rnode(GOUT, 36, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 4), rnode(GOUT, 37, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 5), rnode(GOUT, 37, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 6), rnode(GOUT, 37, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 7), rnode(GOUT, 37, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 8), rnode(GOUT, 37, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 9), rnode(GOUT, 37, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 10), rnode(GOUT, 37, 0, 5) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 11), rnode(GOUT, 37, 0, 4) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 12), rnode(GOUT, 37, 0, 3) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 13), rnode(GOUT, 37, 0, 8) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 14), rnode(GOUT, 37, 0, 2) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 15), rnode(GOUT, 37, 0, 1) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 16), rnode(GOUT, 37, 0, 12) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 17), rnode(GOUT, 37, 0, 17) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 18), rnode(GOUT, 37, 0, 13) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 19), rnode(GOUT, 37, 0, 18) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 20), rnode(GOUT, 37, 0, 24) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 21), rnode(GOUT, 37, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 22), rnode(GOUT, 37, 0, 44) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 23), rnode(GOUT, 37, 0, 39) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 24), rnode(GOUT, 37, 0, 27) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 25), rnode(GOUT, 37, 0, 29) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 26), rnode(GOUT, 37, 0, 30) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 27), rnode(GOUT, 37, 0, 31) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 28), rnode(GOUT, 37, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 29), rnode(GOUT, 37, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 30), rnode(GOUT, 37, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 31), rnode(GOUT, 37, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 32), rnode(GOUT, 37, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 33), rnode(GOUT, 37, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 34), rnode(GOUT, 38, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 35), rnode(GOUT, 38, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 36), rnode(GOUT, 38, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 37), rnode(GOUT, 39, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 38), rnode(GOUT, 39, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 39), rnode(GOUT, 40, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 40), rnode(GOUT, 40, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 41), rnode(GOUT, 40, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 42), rnode(GOUT, 40, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 43), rnode(GOUT, 40, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 44), rnode(GOUT, 40, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 45), rnode(GOUT, 40, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 46), rnode(GOUT, 40, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 47), rnode(GOUT, 41, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 48), rnode(GOUT, 41, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 49), rnode(GOUT, 41, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 50), rnode(GOUT, 41, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 51), rnode(GOUT, 41, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 52), rnode(GOUT, 41, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 53), rnode(GOUT, 41, 0, 5) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 54), rnode(GOUT, 41, 0, 4) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 55), rnode(GOUT, 41, 0, 3) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 56), rnode(GOUT, 41, 0, 8) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 57), rnode(GOUT, 41, 0, 2) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 58), rnode(GOUT, 41, 0, 1) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 59), rnode(GOUT, 41, 0, 12) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 60), rnode(GOUT, 41, 0, 19) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 61), rnode(GOUT, 41, 0, 15) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 62), rnode(GOUT, 41, 0, 20) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 63), rnode(GOUT, 41, 0, 16) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 64), rnode(GOUT, 41, 0, 21) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 65), rnode(GOUT, 41, 0, 22) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 66), rnode(GOUT, 41, 0, 23) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 67), rnode(GOUT, 41, 0, 24) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 68), rnode(GOUT, 41, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 69), rnode(GOUT, 41, 0, 50) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 70), rnode(GOUT, 41, 0, 49) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 71), rnode(GOUT, 41, 0, 48) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 72), rnode(GOUT, 41, 0, 47) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 73), rnode(GOUT, 41, 0, 42) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 74), rnode(GOUT, 41, 0, 46) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 75), rnode(GOUT, 41, 0, 41) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 76), rnode(GOUT, 41, 0, 27) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 77), rnode(GOUT, 41, 0, 28) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 78), rnode(GOUT, 41, 0, 34) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 79), rnode(GOUT, 41, 0, 29) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 80), rnode(GOUT, 41, 0, 30) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 81), rnode(GOUT, 41, 0, 31) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 82), rnode(GOUT, 41, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 83), rnode(GOUT, 41, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 84), rnode(GOUT, 41, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 85), rnode(GOUT, 41, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 86), rnode(GOUT, 41, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 87), rnode(GOUT, 42, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 88), rnode(GOUT, 42, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 1, 89), rnode(GOUT, 42, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 0), rnode(GOUT, 42, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 1), rnode(GOUT, 42, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 2), rnode(GOUT, 42, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 3), rnode(GOUT, 42, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 4), rnode(GOUT, 43, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 5), rnode(GOUT, 43, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 6), rnode(GOUT, 43, 0, 4) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 7), rnode(GOUT, 43, 0, 8) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 8), rnode(GOUT, 43, 0, 2) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 9), rnode(GOUT, 43, 0, 1) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 10), rnode(GOUT, 43, 0, 12) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 11), rnode(GOUT, 43, 0, 13) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 12), rnode(GOUT, 43, 0, 18) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 13), rnode(GOUT, 43, 0, 14) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 14), rnode(GOUT, 43, 0, 19) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 15), rnode(GOUT, 43, 0, 15) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 16), rnode(GOUT, 43, 0, 20) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 17), rnode(GOUT, 43, 0, 16) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 18), rnode(GOUT, 43, 0, 21) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 19), rnode(GOUT, 43, 0, 22) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 20), rnode(GOUT, 43, 0, 23) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 21), rnode(GOUT, 43, 0, 24) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 22), rnode(GOUT, 43, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 23), rnode(GOUT, 43, 0, 50) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 24), rnode(GOUT, 43, 0, 49) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 25), rnode(GOUT, 43, 0, 48) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 26), rnode(GOUT, 43, 0, 47) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 27), rnode(GOUT, 43, 0, 42) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 28), rnode(GOUT, 43, 0, 46) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 29), rnode(GOUT, 43, 0, 41) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 30), rnode(GOUT, 43, 0, 39) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 31), rnode(GOUT, 43, 0, 43) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 32), rnode(GOUT, 43, 0, 38) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 33), rnode(GOUT, 43, 0, 30) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 34), rnode(GOUT, 43, 0, 31) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 35), rnode(GOUT, 43, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 36), rnode(GOUT, 43, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 37), rnode(GOUT, 43, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 38), rnode(GOUT, 43, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 39), rnode(GOUT, 43, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 40), rnode(GOUT, 43, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 41), rnode(GOUT, 44, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 42), rnode(GOUT, 44, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 43), rnode(GOUT, 44, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 44), rnode(GOUT, 44, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 45), rnode(GOUT, 44, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 46), rnode(GOUT, 44, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 47), rnode(GOUT, 44, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 48), rnode(GOUT, 44, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 49), rnode(GOUT, 45, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 50), rnode(GOUT, 45, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 51), rnode(GOUT, 45, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 52), rnode(GOUT, 45, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 53), rnode(GOUT, 45, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 54), rnode(GOUT, 45, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 55), rnode(GOUT, 45, 0, 5) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 56), rnode(GOUT, 45, 0, 4) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 57), rnode(GOUT, 45, 0, 3) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 58), rnode(GOUT, 45, 0, 8) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 59), rnode(GOUT, 45, 0, 2) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 60), rnode(GOUT, 45, 0, 1) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 61), rnode(GOUT, 45, 0, 12) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 62), rnode(GOUT, 45, 0, 17) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 63), rnode(GOUT, 45, 0, 13) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 64), rnode(GOUT, 45, 0, 18) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 65), rnode(GOUT, 45, 0, 14) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 66), rnode(GOUT, 45, 0, 15) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 67), rnode(GOUT, 45, 0, 20) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 68), rnode(GOUT, 45, 0, 22) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 69), rnode(GOUT, 45, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 70), rnode(GOUT, 45, 0, 50) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 71), rnode(GOUT, 45, 0, 49) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 72), rnode(GOUT, 45, 0, 48) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 73), rnode(GOUT, 45, 0, 47) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 74), rnode(GOUT, 45, 0, 42) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 75), rnode(GOUT, 45, 0, 46) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 76), rnode(GOUT, 45, 0, 45) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 77), rnode(GOUT, 45, 0, 40) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 78), rnode(GOUT, 45, 0, 44) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 79), rnode(GOUT, 45, 0, 39) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 80), rnode(GOUT, 47, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 81), rnode(GOUT, 47, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 82), rnode(GOUT, 47, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 83), rnode(GOUT, 47, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 84), rnode(GOUT, 47, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 85), rnode(GOUT, 47, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 86), rnode(GOUT, 47, 0, 5) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 87), rnode(GOUT, 47, 0, 4) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 88), rnode(GOUT, 47, 0, 3) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 2, 89), rnode(GOUT, 47, 0, 8) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 0), rnode(GOUT, 47, 0, 2) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 1), rnode(GOUT, 47, 0, 1) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 2), rnode(GOUT, 47, 0, 12) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 3), rnode(GOUT, 47, 0, 17) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 4), rnode(GOUT, 47, 0, 13) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 5), rnode(GOUT, 47, 0, 18) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 6), rnode(GOUT, 47, 0, 14) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 7), rnode(GOUT, 47, 0, 19) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 8), rnode(GOUT, 47, 0, 15) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 9), rnode(GOUT, 47, 0, 20) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 10), rnode(GOUT, 47, 0, 16) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 11), rnode(GOUT, 47, 0, 21) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 12), rnode(GOUT, 47, 0, 22) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 13), rnode(GOUT, 47, 0, 23) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 14), rnode(GOUT, 47, 0, 24) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 15), rnode(GOUT, 47, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 16), rnode(GOUT, 47, 0, 50) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 17), rnode(GOUT, 47, 0, 49) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 18), rnode(GOUT, 47, 0, 48) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 19), rnode(GOUT, 47, 0, 47) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 20), rnode(GOUT, 47, 0, 42) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 21), rnode(GOUT, 47, 0, 46) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 22), rnode(GOUT, 47, 0, 41) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 23), rnode(GOUT, 47, 0, 45) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 24), rnode(GOUT, 47, 0, 40) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 25), rnode(GOUT, 47, 0, 44) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 26), rnode(GOUT, 47, 0, 39) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 27), rnode(GOUT, 47, 0, 43) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 28), rnode(GOUT, 47, 0, 38) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 29), rnode(GOUT, 47, 0, 27) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 30), rnode(GOUT, 47, 0, 28) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 31), rnode(GOUT, 47, 0, 34) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 32), rnode(GOUT, 47, 0, 29) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 33), rnode(GOUT, 47, 0, 30) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 34), rnode(GOUT, 47, 0, 31) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 35), rnode(GOUT, 47, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 36), rnode(GOUT, 47, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 37), rnode(GOUT, 47, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 38), rnode(GOUT, 47, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 39), rnode(GOUT, 47, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 40), rnode(GOUT, 47, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 41), rnode(GOUT, 48, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 42), rnode(GOUT, 48, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 43), rnode(GOUT, 48, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 44), rnode(GOUT, 48, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 45), rnode(GOUT, 48, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 46), rnode(GOUT, 48, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 47), rnode(GOUT, 48, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 48), rnode(GOUT, 49, 0, 0) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 49), rnode(GOUT, 49, 0, 10) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 50), rnode(GOUT, 49, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 51), rnode(GOUT, 49, 0, 4) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 52), rnode(GOUT, 49, 0, 3) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 53), rnode(GOUT, 49, 0, 12) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 54), rnode(GOUT, 49, 0, 17) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 55), rnode(GOUT, 49, 0, 19) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 56), rnode(GOUT, 49, 0, 20) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 57), rnode(GOUT, 49, 0, 16) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 58), rnode(GOUT, 49, 0, 21) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 59), rnode(GOUT, 49, 0, 22) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 60), rnode(GOUT, 49, 0, 24) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 61), rnode(GOUT, 49, 0, 25) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 62), rnode(GOUT, 49, 0, 50) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 63), rnode(GOUT, 49, 0, 49) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 64), rnode(GOUT, 49, 0, 48) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 65), rnode(GOUT, 49, 0, 47) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 66), rnode(GOUT, 49, 0, 42) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 67), rnode(GOUT, 49, 0, 46) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 68), rnode(GOUT, 49, 0, 41) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 69), rnode(GOUT, 49, 0, 45) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 70), rnode(GOUT, 49, 0, 40) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 71), rnode(GOUT, 49, 0, 44) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 72), rnode(GOUT, 49, 0, 39) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 73), rnode(GOUT, 49, 0, 43) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 74), rnode(GOUT, 49, 0, 38) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 75), rnode(GOUT, 49, 0, 27) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 76), rnode(GOUT, 49, 0, 28) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 77), rnode(GOUT, 49, 0, 34) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 78), rnode(GOUT, 49, 0, 29) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 79), rnode(GOUT, 49, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 80), rnode(GOUT, 50, 0, 9) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 81), rnode(GOUT, 50, 0, 11) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 82), rnode(GOUT, 50, 0, 6) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 83), rnode(GOUT, 50, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 84), rnode(GOUT, 50, 0, 33) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 85), rnode(GOUT, 50, 0, 32) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 86), rnode(GOUT, 55, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 87), rnode(GOUT, 55, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 88), rnode(GOUT, 55, 0, 36) },
  { pnode(HMC, 23, 0, IAVSTWRDATA, 3, 89), rnode(GOUT, 55, 0, 26) },
  { pnode(HMC, 23, 0, IAVSTWRRESETN, 0, -1), rnode(GOUT, 40, 0, 35) },
  { pnode(HMC, 23, 0, IAVSTWRRESETN, 1, -1), rnode(GOUT, 48, 0, 37) },
  { pnode(HMC, 23, 0, IAVSTWRRESETN, 2, -1), rnode(GOUT, 44, 0, 7) },
  { pnode(HMC, 23, 0, IAVSTWRRESETN, 3, -1), rnode(GOUT, 48, 0, 6) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 0), rnode(GOUT, 21, 0, 21) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 1), rnode(GOUT, 21, 0, 12) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 2), rnode(GOUT, 19, 0, 21) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 3), rnode(GOUT, 19, 0, 12) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 4), rnode(GOUT, 19, 0, 28) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 5), rnode(GOUT, 19, 0, 42) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 6), rnode(GOUT, 18, 0, 21) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 7), rnode(GOUT, 18, 0, 12) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 8), rnode(GOUT, 14, 0, 28) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 9), rnode(GOUT, 14, 0, 42) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 10), rnode(GOUT, 14, 0, 21) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 11), rnode(GOUT, 14, 0, 12) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 12), rnode(GOUT, 12, 0, 21) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 13), rnode(GOUT, 12, 0, 12) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 14), rnode(GOUT, 10, 0, 28) },
  { pnode(HMC, 23, 0, IOINTADDRACLR, -1, 15), rnode(GOUT, 10, 0, 42) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 0), rnode(GOUT, 21, 0, 14) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 1), rnode(GOUT, 21, 0, 22) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 2), rnode(GOUT, 21, 0, 15) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 3), rnode(GOUT, 21, 0, 23) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 4), rnode(GOUT, 21, 0, 3) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 5), rnode(GOUT, 21, 0, 17) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 6), rnode(GOUT, 21, 0, 8) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 7), rnode(GOUT, 21, 0, 18) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 8), rnode(GOUT, 19, 0, 14) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 9), rnode(GOUT, 19, 0, 22) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 10), rnode(GOUT, 19, 0, 15) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 11), rnode(GOUT, 19, 0, 23) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 12), rnode(GOUT, 19, 0, 3) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 13), rnode(GOUT, 19, 0, 17) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 14), rnode(GOUT, 19, 0, 8) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 15), rnode(GOUT, 19, 0, 18) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 16), rnode(GOUT, 19, 0, 44) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 17), rnode(GOUT, 19, 0, 34) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 18), rnode(GOUT, 19, 0, 43) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 19), rnode(GOUT, 19, 0, 29) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 20), rnode(GOUT, 19, 0, 49) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 21), rnode(GOUT, 19, 0, 41) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 22), rnode(GOUT, 19, 0, 48) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 23), rnode(GOUT, 19, 0, 40) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 24), rnode(GOUT, 18, 0, 14) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 25), rnode(GOUT, 18, 0, 22) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 26), rnode(GOUT, 18, 0, 15) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 27), rnode(GOUT, 18, 0, 23) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 28), rnode(GOUT, 18, 0, 3) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 29), rnode(GOUT, 18, 0, 17) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 30), rnode(GOUT, 18, 0, 8) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 31), rnode(GOUT, 18, 0, 18) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 32), rnode(GOUT, 14, 0, 44) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 33), rnode(GOUT, 14, 0, 34) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 34), rnode(GOUT, 14, 0, 43) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 35), rnode(GOUT, 14, 0, 29) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 36), rnode(GOUT, 14, 0, 49) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 37), rnode(GOUT, 14, 0, 41) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 38), rnode(GOUT, 14, 0, 48) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 39), rnode(GOUT, 14, 0, 40) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 40), rnode(GOUT, 14, 0, 14) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 41), rnode(GOUT, 14, 0, 22) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 42), rnode(GOUT, 14, 0, 15) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 43), rnode(GOUT, 14, 0, 23) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 44), rnode(GOUT, 14, 0, 3) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 45), rnode(GOUT, 14, 0, 17) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 46), rnode(GOUT, 14, 0, 8) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 47), rnode(GOUT, 14, 0, 18) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 48), rnode(GOUT, 12, 0, 14) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 49), rnode(GOUT, 12, 0, 22) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 50), rnode(GOUT, 12, 0, 15) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 51), rnode(GOUT, 12, 0, 23) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 52), rnode(GOUT, 12, 0, 3) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 53), rnode(GOUT, 12, 0, 17) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 54), rnode(GOUT, 12, 0, 8) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 55), rnode(GOUT, 12, 0, 18) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 56), rnode(GOUT, 10, 0, 44) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 57), rnode(GOUT, 10, 0, 34) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 58), rnode(GOUT, 10, 0, 43) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 59), rnode(GOUT, 10, 0, 29) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 60), rnode(GOUT, 10, 0, 49) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 61), rnode(GOUT, 10, 0, 41) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 62), rnode(GOUT, 10, 0, 48) },
  { pnode(HMC, 23, 0, IOINTADDRDOUT, -1, 63), rnode(GOUT, 10, 0, 40) },
  { pnode(HMC, 23, 0, IOINTBAACLR, -1, 0), rnode(GOUT, 17, 0, 21) },
  { pnode(HMC, 23, 0, IOINTBAACLR, -1, 1), rnode(GOUT, 17, 0, 28) },
  { pnode(HMC, 23, 0, IOINTBAACLR, -1, 2), rnode(GOUT, 17, 0, 42) },
  { pnode(HMC, 23, 0, IOINTBADOUT, -1, 0), rnode(GOUT, 17, 0, 14) },
  { pnode(HMC, 23, 0, IOINTBADOUT, -1, 1), rnode(GOUT, 17, 0, 22) },
  { pnode(HMC, 23, 0, IOINTBADOUT, -1, 2), rnode(GOUT, 17, 0, 15) },
  { pnode(HMC, 23, 0, IOINTBADOUT, -1, 3), rnode(GOUT, 17, 0, 23) },
  { pnode(HMC, 23, 0, IOINTBADOUT, -1, 4), rnode(GOUT, 17, 0, 44) },
  { pnode(HMC, 23, 0, IOINTBADOUT, -1, 5), rnode(GOUT, 17, 0, 34) },
  { pnode(HMC, 23, 0, IOINTBADOUT, -1, 6), rnode(GOUT, 17, 0, 43) },
  { pnode(HMC, 23, 0, IOINTBADOUT, -1, 7), rnode(GOUT, 17, 0, 29) },
  { pnode(HMC, 23, 0, IOINTBADOUT, -1, 8), rnode(GOUT, 17, 0, 49) },
  { pnode(HMC, 23, 0, IOINTBADOUT, -1, 9), rnode(GOUT, 17, 0, 41) },
  { pnode(HMC, 23, 0, IOINTBADOUT, -1, 10), rnode(GOUT, 17, 0, 48) },
  { pnode(HMC, 23, 0, IOINTBADOUT, -1, 11), rnode(GOUT, 17, 0, 40) },
  { pnode(HMC, 23, 0, IOINTCASNACLR, -1, -1), rnode(GOUT, 15, 0, 21) },
  { pnode(HMC, 23, 0, IOINTCASNDOUT, -1, 0), rnode(GOUT, 15, 0, 14) },
  { pnode(HMC, 23, 0, IOINTCASNDOUT, -1, 1), rnode(GOUT, 15, 0, 22) },
  { pnode(HMC, 23, 0, IOINTCASNDOUT, -1, 2), rnode(GOUT, 15, 0, 15) },
  { pnode(HMC, 23, 0, IOINTCASNDOUT, -1, 3), rnode(GOUT, 15, 0, 23) },
  { pnode(HMC, 23, 0, IOINTCKDOUT, -1, 0), rnode(GOUT, 18, 0, 44) },
  { pnode(HMC, 23, 0, IOINTCKDOUT, -1, 1), rnode(GOUT, 18, 0, 34) },
  { pnode(HMC, 23, 0, IOINTCKDOUT, -1, 2), rnode(GOUT, 18, 0, 43) },
  { pnode(HMC, 23, 0, IOINTCKDOUT, -1, 3), rnode(GOUT, 18, 0, 29) },
  { pnode(HMC, 23, 0, IOINTCKEACLR, -1, 0), rnode(GOUT, 44, 0, 12) },
  { pnode(HMC, 23, 0, IOINTCKEACLR, -1, 1), rnode(GOUT, 42, 0, 21) },
  { pnode(HMC, 23, 0, IOINTCKEDOUT, -1, 0), rnode(GOUT, 44, 0, 3) },
  { pnode(HMC, 23, 0, IOINTCKEDOUT, -1, 1), rnode(GOUT, 44, 0, 17) },
  { pnode(HMC, 23, 0, IOINTCKEDOUT, -1, 2), rnode(GOUT, 44, 0, 8) },
  { pnode(HMC, 23, 0, IOINTCKEDOUT, -1, 3), rnode(GOUT, 44, 0, 18) },
  { pnode(HMC, 23, 0, IOINTCKEDOUT, -1, 4), rnode(GOUT, 42, 0, 14) },
  { pnode(HMC, 23, 0, IOINTCKEDOUT, -1, 5), rnode(GOUT, 42, 0, 22) },
  { pnode(HMC, 23, 0, IOINTCKEDOUT, -1, 6), rnode(GOUT, 42, 0, 15) },
  { pnode(HMC, 23, 0, IOINTCKEDOUT, -1, 7), rnode(GOUT, 42, 0, 23) },
  { pnode(HMC, 23, 0, IOINTCKNDOUT, -1, 0), rnode(GOUT, 18, 0, 49) },
  { pnode(HMC, 23, 0, IOINTCKNDOUT, -1, 1), rnode(GOUT, 18, 0, 41) },
  { pnode(HMC, 23, 0, IOINTCKNDOUT, -1, 2), rnode(GOUT, 18, 0, 48) },
  { pnode(HMC, 23, 0, IOINTCKNDOUT, -1, 3), rnode(GOUT, 18, 0, 40) },
  { pnode(HMC, 23, 0, IOINTCSNACLR, -1, 0), rnode(GOUT, 12, 0, 28) },
  { pnode(HMC, 23, 0, IOINTCSNACLR, -1, 1), rnode(GOUT, 12, 0, 42) },
  { pnode(HMC, 23, 0, IOINTCSNDOUT, -1, 0), rnode(GOUT, 12, 0, 44) },
  { pnode(HMC, 23, 0, IOINTCSNDOUT, -1, 1), rnode(GOUT, 12, 0, 34) },
  { pnode(HMC, 23, 0, IOINTCSNDOUT, -1, 2), rnode(GOUT, 12, 0, 43) },
  { pnode(HMC, 23, 0, IOINTCSNDOUT, -1, 3), rnode(GOUT, 12, 0, 29) },
  { pnode(HMC, 23, 0, IOINTCSNDOUT, -1, 4), rnode(GOUT, 12, 0, 49) },
  { pnode(HMC, 23, 0, IOINTCSNDOUT, -1, 5), rnode(GOUT, 12, 0, 41) },
  { pnode(HMC, 23, 0, IOINTCSNDOUT, -1, 6), rnode(GOUT, 12, 0, 48) },
  { pnode(HMC, 23, 0, IOINTCSNDOUT, -1, 7), rnode(GOUT, 12, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 0), rnode(GOUT, 38, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 1), rnode(GOUT, 38, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 2), rnode(GOUT, 38, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 3), rnode(GOUT, 38, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 4), rnode(GOUT, 46, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 5), rnode(GOUT, 46, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 6), rnode(GOUT, 46, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 7), rnode(GOUT, 46, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 8), rnode(GOUT, 53, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 9), rnode(GOUT, 53, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 10), rnode(GOUT, 53, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 11), rnode(GOUT, 53, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 12), rnode(GOUT, 61, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 13), rnode(GOUT, 61, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 14), rnode(GOUT, 61, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 15), rnode(GOUT, 61, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 16), rnode(GOUT, 66, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 17), rnode(GOUT, 66, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 18), rnode(GOUT, 66, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDMDOUT, -1, 19), rnode(GOUT, 66, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 0), rnode(GOUT, 32, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 1), rnode(GOUT, 32, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 2), rnode(GOUT, 32, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 3), rnode(GOUT, 32, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 4), rnode(GOUT, 32, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 5), rnode(GOUT, 32, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 6), rnode(GOUT, 32, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 7), rnode(GOUT, 32, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 8), rnode(GOUT, 32, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 9), rnode(GOUT, 32, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 10), rnode(GOUT, 32, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 11), rnode(GOUT, 32, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 12), rnode(GOUT, 34, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 13), rnode(GOUT, 34, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 14), rnode(GOUT, 34, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 15), rnode(GOUT, 34, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 16), rnode(GOUT, 36, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 17), rnode(GOUT, 36, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 18), rnode(GOUT, 36, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 19), rnode(GOUT, 36, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 20), rnode(GOUT, 36, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 21), rnode(GOUT, 36, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 22), rnode(GOUT, 36, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 23), rnode(GOUT, 36, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 24), rnode(GOUT, 36, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 25), rnode(GOUT, 36, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 26), rnode(GOUT, 36, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 27), rnode(GOUT, 36, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 28), rnode(GOUT, 38, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 29), rnode(GOUT, 38, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 30), rnode(GOUT, 38, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 31), rnode(GOUT, 38, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 36), rnode(GOUT, 40, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 37), rnode(GOUT, 40, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 38), rnode(GOUT, 40, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 39), rnode(GOUT, 40, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 40), rnode(GOUT, 40, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 41), rnode(GOUT, 40, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 42), rnode(GOUT, 40, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 43), rnode(GOUT, 40, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 44), rnode(GOUT, 40, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 45), rnode(GOUT, 40, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 46), rnode(GOUT, 40, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 47), rnode(GOUT, 40, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 48), rnode(GOUT, 42, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 49), rnode(GOUT, 42, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 50), rnode(GOUT, 42, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 51), rnode(GOUT, 42, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 52), rnode(GOUT, 44, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 53), rnode(GOUT, 44, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 54), rnode(GOUT, 44, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 55), rnode(GOUT, 44, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 56), rnode(GOUT, 44, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 57), rnode(GOUT, 44, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 58), rnode(GOUT, 44, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 59), rnode(GOUT, 44, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 60), rnode(GOUT, 44, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 61), rnode(GOUT, 44, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 62), rnode(GOUT, 44, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 63), rnode(GOUT, 44, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 64), rnode(GOUT, 46, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 65), rnode(GOUT, 46, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 66), rnode(GOUT, 46, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 67), rnode(GOUT, 46, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 72), rnode(GOUT, 48, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 73), rnode(GOUT, 48, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 74), rnode(GOUT, 48, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 75), rnode(GOUT, 48, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 76), rnode(GOUT, 48, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 77), rnode(GOUT, 48, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 78), rnode(GOUT, 48, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 79), rnode(GOUT, 48, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 80), rnode(GOUT, 48, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 81), rnode(GOUT, 48, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 82), rnode(GOUT, 48, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 83), rnode(GOUT, 48, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 84), rnode(GOUT, 50, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 85), rnode(GOUT, 50, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 86), rnode(GOUT, 50, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 87), rnode(GOUT, 50, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 88), rnode(GOUT, 51, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 89), rnode(GOUT, 51, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 90), rnode(GOUT, 51, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 91), rnode(GOUT, 51, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 92), rnode(GOUT, 51, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 93), rnode(GOUT, 51, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 94), rnode(GOUT, 51, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 95), rnode(GOUT, 51, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 96), rnode(GOUT, 51, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 97), rnode(GOUT, 51, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 98), rnode(GOUT, 51, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 99), rnode(GOUT, 51, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 100), rnode(GOUT, 53, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 101), rnode(GOUT, 53, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 102), rnode(GOUT, 53, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 103), rnode(GOUT, 53, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 108), rnode(GOUT, 55, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 109), rnode(GOUT, 55, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 110), rnode(GOUT, 55, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 111), rnode(GOUT, 55, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 112), rnode(GOUT, 55, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 113), rnode(GOUT, 55, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 114), rnode(GOUT, 55, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 115), rnode(GOUT, 55, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 116), rnode(GOUT, 55, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 117), rnode(GOUT, 55, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 118), rnode(GOUT, 55, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 119), rnode(GOUT, 55, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 120), rnode(GOUT, 57, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 121), rnode(GOUT, 57, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 122), rnode(GOUT, 57, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 123), rnode(GOUT, 57, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 124), rnode(GOUT, 59, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 125), rnode(GOUT, 59, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 126), rnode(GOUT, 59, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 127), rnode(GOUT, 59, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 128), rnode(GOUT, 59, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 129), rnode(GOUT, 59, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 130), rnode(GOUT, 59, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 131), rnode(GOUT, 59, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 132), rnode(GOUT, 59, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 133), rnode(GOUT, 59, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 134), rnode(GOUT, 59, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 135), rnode(GOUT, 59, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 136), rnode(GOUT, 61, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 137), rnode(GOUT, 61, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 138), rnode(GOUT, 61, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 139), rnode(GOUT, 61, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 144), rnode(GOUT, 62, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 145), rnode(GOUT, 62, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 146), rnode(GOUT, 62, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 147), rnode(GOUT, 62, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 148), rnode(GOUT, 62, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 149), rnode(GOUT, 62, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 150), rnode(GOUT, 62, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 151), rnode(GOUT, 62, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 152), rnode(GOUT, 62, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 153), rnode(GOUT, 62, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 154), rnode(GOUT, 62, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 155), rnode(GOUT, 62, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 156), rnode(GOUT, 64, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 157), rnode(GOUT, 64, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 158), rnode(GOUT, 64, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 159), rnode(GOUT, 64, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 160), rnode(GOUT, 65, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 161), rnode(GOUT, 65, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 162), rnode(GOUT, 65, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 163), rnode(GOUT, 65, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 164), rnode(GOUT, 65, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 165), rnode(GOUT, 65, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 166), rnode(GOUT, 65, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 167), rnode(GOUT, 65, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 168), rnode(GOUT, 65, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 169), rnode(GOUT, 65, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 170), rnode(GOUT, 65, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 171), rnode(GOUT, 65, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 172), rnode(GOUT, 66, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 173), rnode(GOUT, 66, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 174), rnode(GOUT, 66, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDOUT, -1, 175), rnode(GOUT, 66, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 0), rnode(GOUT, 32, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 1), rnode(GOUT, 32, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 2), rnode(GOUT, 32, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 3), rnode(GOUT, 32, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 4), rnode(GOUT, 32, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 5), rnode(GOUT, 32, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 6), rnode(GOUT, 34, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 7), rnode(GOUT, 34, 0, 19) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 8), rnode(GOUT, 36, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 9), rnode(GOUT, 36, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 10), rnode(GOUT, 36, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 11), rnode(GOUT, 36, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 12), rnode(GOUT, 36, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 13), rnode(GOUT, 36, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 14), rnode(GOUT, 38, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 15), rnode(GOUT, 38, 0, 19) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 18), rnode(GOUT, 40, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 19), rnode(GOUT, 40, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 20), rnode(GOUT, 40, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 21), rnode(GOUT, 40, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 22), rnode(GOUT, 40, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 23), rnode(GOUT, 40, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 24), rnode(GOUT, 42, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 25), rnode(GOUT, 42, 0, 19) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 26), rnode(GOUT, 44, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 27), rnode(GOUT, 44, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 28), rnode(GOUT, 44, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 29), rnode(GOUT, 44, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 30), rnode(GOUT, 44, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 31), rnode(GOUT, 44, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 32), rnode(GOUT, 46, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 33), rnode(GOUT, 46, 0, 19) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 36), rnode(GOUT, 48, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 37), rnode(GOUT, 48, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 38), rnode(GOUT, 48, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 39), rnode(GOUT, 48, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 40), rnode(GOUT, 48, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 41), rnode(GOUT, 48, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 42), rnode(GOUT, 50, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 43), rnode(GOUT, 50, 0, 19) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 44), rnode(GOUT, 51, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 45), rnode(GOUT, 51, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 46), rnode(GOUT, 51, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 47), rnode(GOUT, 51, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 48), rnode(GOUT, 51, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 49), rnode(GOUT, 51, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 50), rnode(GOUT, 53, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 51), rnode(GOUT, 53, 0, 19) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 54), rnode(GOUT, 55, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 55), rnode(GOUT, 55, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 56), rnode(GOUT, 55, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 57), rnode(GOUT, 55, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 58), rnode(GOUT, 55, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 59), rnode(GOUT, 55, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 60), rnode(GOUT, 57, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 61), rnode(GOUT, 57, 0, 19) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 62), rnode(GOUT, 59, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 63), rnode(GOUT, 59, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 64), rnode(GOUT, 59, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 65), rnode(GOUT, 59, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 66), rnode(GOUT, 59, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 67), rnode(GOUT, 59, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 68), rnode(GOUT, 61, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 69), rnode(GOUT, 61, 0, 19) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 72), rnode(GOUT, 62, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 73), rnode(GOUT, 62, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 74), rnode(GOUT, 62, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 75), rnode(GOUT, 62, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 76), rnode(GOUT, 62, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 77), rnode(GOUT, 62, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 78), rnode(GOUT, 64, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 79), rnode(GOUT, 64, 0, 19) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 80), rnode(GOUT, 65, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 81), rnode(GOUT, 65, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 82), rnode(GOUT, 65, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 83), rnode(GOUT, 65, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 84), rnode(GOUT, 65, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 85), rnode(GOUT, 65, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 86), rnode(GOUT, 66, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQOE, -1, 87), rnode(GOUT, 66, 0, 19) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 0), rnode(GOUT, 34, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 1), rnode(GOUT, 34, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 2), rnode(GOUT, 34, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 3), rnode(GOUT, 34, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 4), rnode(GOUT, 42, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 5), rnode(GOUT, 42, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 6), rnode(GOUT, 42, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 7), rnode(GOUT, 42, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 8), rnode(GOUT, 50, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 9), rnode(GOUT, 50, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 10), rnode(GOUT, 50, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 11), rnode(GOUT, 50, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 12), rnode(GOUT, 57, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 13), rnode(GOUT, 57, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 14), rnode(GOUT, 57, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 15), rnode(GOUT, 57, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 16), rnode(GOUT, 64, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 17), rnode(GOUT, 64, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 18), rnode(GOUT, 64, 0, 48) },
  { pnode(HMC, 23, 0, IOINTDQSBDOUT, -1, 19), rnode(GOUT, 64, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQSBOE, -1, 0), rnode(GOUT, 34, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQSBOE, -1, 1), rnode(GOUT, 34, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQSBOE, -1, 2), rnode(GOUT, 42, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQSBOE, -1, 3), rnode(GOUT, 42, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQSBOE, -1, 4), rnode(GOUT, 50, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQSBOE, -1, 5), rnode(GOUT, 50, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQSBOE, -1, 6), rnode(GOUT, 57, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQSBOE, -1, 7), rnode(GOUT, 57, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQSBOE, -1, 8), rnode(GOUT, 64, 0, 47) },
  { pnode(HMC, 23, 0, IOINTDQSBOE, -1, 9), rnode(GOUT, 64, 0, 39) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 0), rnode(GOUT, 34, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 1), rnode(GOUT, 34, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 2), rnode(GOUT, 34, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 3), rnode(GOUT, 34, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 4), rnode(GOUT, 42, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 5), rnode(GOUT, 42, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 6), rnode(GOUT, 42, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 7), rnode(GOUT, 42, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 8), rnode(GOUT, 50, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 9), rnode(GOUT, 50, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 10), rnode(GOUT, 50, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 11), rnode(GOUT, 50, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 12), rnode(GOUT, 57, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 13), rnode(GOUT, 57, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 14), rnode(GOUT, 57, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 15), rnode(GOUT, 57, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 16), rnode(GOUT, 64, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 17), rnode(GOUT, 64, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 18), rnode(GOUT, 64, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQSDOUT, -1, 19), rnode(GOUT, 64, 0, 29) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICACLRFIFOCTRL, -1, 0), rnode(GOUT, 35, 0, 45) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICACLRFIFOCTRL, -1, 1), rnode(GOUT, 43, 0, 44) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICACLRFIFOCTRL, -1, 2), rnode(GOUT, 49, 0, 33) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICACLRFIFOCTRL, -1, 3), rnode(GOUT, 58, 0, 33) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICACLRFIFOCTRL, -1, 4), rnode(GOUT, 66, 0, 7) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICACLRPSTAMBLE, -1, 0), rnode(GOUT, 35, 0, 41) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICACLRPSTAMBLE, -1, 1), rnode(GOUT, 43, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICACLRPSTAMBLE, -1, 2), rnode(GOUT, 49, 0, 31) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICACLRPSTAMBLE, -1, 3), rnode(GOUT, 58, 0, 31) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICACLRPSTAMBLE, -1, 4), rnode(GOUT, 66, 0, 6) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICDQSENA, -1, 0), rnode(GOUT, 38, 0, 36) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICDQSENA, -1, 1), rnode(GOUT, 38, 0, 35) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICDQSENA, -1, 2), rnode(GOUT, 45, 0, 33) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICDQSENA, -1, 3), rnode(GOUT, 45, 0, 27) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICDQSENA, -1, 4), rnode(GOUT, 52, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICDQSENA, -1, 5), rnode(GOUT, 52, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICDQSENA, -1, 6), rnode(GOUT, 61, 0, 10) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICDQSENA, -1, 7), rnode(GOUT, 61, 0, 0) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICDQSENA, -1, 8), rnode(GOUT, 67, 0, 25) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICDQSENA, -1, 9), rnode(GOUT, 67, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICFIFORESET, -1, 0), rnode(GOUT, 33, 0, 32) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICFIFORESET, -1, 1), rnode(GOUT, 41, 0, 32) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICFIFORESET, -1, 2), rnode(GOUT, 48, 0, 7) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICFIFORESET, -1, 3), rnode(GOUT, 57, 0, 7) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICFIFORESET, -1, 4), rnode(GOUT, 64, 0, 26) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCRDATAEN, -1, 0), rnode(GOUT, 36, 0, 35) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCRDATAEN, -1, 1), rnode(GOUT, 36, 0, 36) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCRDATAEN, -1, 2), rnode(GOUT, 44, 0, 37) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCRDATAEN, -1, 3), rnode(GOUT, 44, 0, 35) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCRDATAEN, -1, 4), rnode(GOUT, 51, 0, 32) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCRDATAEN, -1, 5), rnode(GOUT, 51, 0, 37) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCRDATAEN, -1, 6), rnode(GOUT, 60, 0, 4) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCRDATAEN, -1, 7), rnode(GOUT, 60, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCRDATAEN, -1, 8), rnode(GOUT, 67, 0, 0) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCRDATAEN, -1, 9), rnode(GOUT, 67, 0, 10) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCWRPTR, -1, 0), rnode(GOUT, 34, 0, 7) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCWRPTR, -1, 1), rnode(GOUT, 34, 0, 33) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCWRPTR, -1, 2), rnode(GOUT, 42, 0, 32) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCWRPTR, -1, 3), rnode(GOUT, 42, 0, 37) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCWRPTR, -1, 4), rnode(GOUT, 49, 0, 7) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCWRPTR, -1, 5), rnode(GOUT, 49, 0, 5) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCWRPTR, -1, 6), rnode(GOUT, 58, 0, 7) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCWRPTR, -1, 7), rnode(GOUT, 58, 0, 5) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCWRPTR, -1, 8), rnode(GOUT, 65, 0, 6) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICINCWRPTR, -1, 9), rnode(GOUT, 65, 0, 7) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICOCT, -1, 0), rnode(GOUT, 35, 0, 11) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICOCT, -1, 1), rnode(GOUT, 35, 0, 6) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICOCT, -1, 2), rnode(GOUT, 43, 0, 7) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICOCT, -1, 3), rnode(GOUT, 43, 0, 5) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICOCT, -1, 4), rnode(GOUT, 49, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICOCT, -1, 5), rnode(GOUT, 49, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICOCT, -1, 6), rnode(GOUT, 58, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICOCT, -1, 7), rnode(GOUT, 58, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICOCT, -1, 8), rnode(GOUT, 65, 0, 26) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICOCT, -1, 9), rnode(GOUT, 66, 0, 0) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 0), rnode(GOUT, 37, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 1), rnode(GOUT, 37, 0, 43) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 2), rnode(GOUT, 37, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 3), rnode(GOUT, 37, 0, 28) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 4), rnode(GOUT, 37, 0, 34) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 5), rnode(GOUT, 45, 0, 19) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 6), rnode(GOUT, 45, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 7), rnode(GOUT, 45, 0, 21) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 8), rnode(GOUT, 45, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 9), rnode(GOUT, 45, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 10), rnode(GOUT, 52, 0, 14) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 11), rnode(GOUT, 52, 0, 20) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 12), rnode(GOUT, 52, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 13), rnode(GOUT, 52, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 14), rnode(GOUT, 52, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 15), rnode(GOUT, 60, 0, 49) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 16), rnode(GOUT, 60, 0, 42) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 17), rnode(GOUT, 60, 0, 46) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 18), rnode(GOUT, 60, 0, 45) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 19), rnode(GOUT, 60, 0, 40) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 20), rnode(GOUT, 67, 0, 20) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 21), rnode(GOUT, 67, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 22), rnode(GOUT, 67, 0, 21) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 23), rnode(GOUT, 67, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICREADLATENCY, -1, 24), rnode(GOUT, 67, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQSOE, -1, 0), rnode(GOUT, 34, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQSOE, -1, 1), rnode(GOUT, 34, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQSOE, -1, 2), rnode(GOUT, 42, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQSOE, -1, 3), rnode(GOUT, 42, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQSOE, -1, 4), rnode(GOUT, 50, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQSOE, -1, 5), rnode(GOUT, 50, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQSOE, -1, 6), rnode(GOUT, 57, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQSOE, -1, 7), rnode(GOUT, 57, 0, 30) },
  { pnode(HMC, 23, 0, IOINTDQSOE, -1, 8), rnode(GOUT, 64, 0, 38) },
  { pnode(HMC, 23, 0, IOINTDQSOE, -1, 9), rnode(GOUT, 64, 0, 30) },
  { pnode(HMC, 23, 0, IOINTODTACLR, -1, 0), rnode(GOUT, 34, 0, 21) },
  { pnode(HMC, 23, 0, IOINTODTACLR, -1, 1), rnode(GOUT, 36, 0, 12) },
  { pnode(HMC, 23, 0, IOINTODTDOUT, -1, 0), rnode(GOUT, 34, 0, 14) },
  { pnode(HMC, 23, 0, IOINTODTDOUT, -1, 1), rnode(GOUT, 34, 0, 22) },
  { pnode(HMC, 23, 0, IOINTODTDOUT, -1, 2), rnode(GOUT, 34, 0, 15) },
  { pnode(HMC, 23, 0, IOINTODTDOUT, -1, 3), rnode(GOUT, 34, 0, 23) },
  { pnode(HMC, 23, 0, IOINTODTDOUT, -1, 4), rnode(GOUT, 36, 0, 3) },
  { pnode(HMC, 23, 0, IOINTODTDOUT, -1, 5), rnode(GOUT, 36, 0, 17) },
  { pnode(HMC, 23, 0, IOINTODTDOUT, -1, 6), rnode(GOUT, 36, 0, 8) },
  { pnode(HMC, 23, 0, IOINTODTDOUT, -1, 7), rnode(GOUT, 36, 0, 18) },
  { pnode(HMC, 23, 0, IOINTRASNACLR, -1, -1), rnode(GOUT, 15, 0, 12) },
  { pnode(HMC, 23, 0, IOINTRASNDOUT, -1, 0), rnode(GOUT, 15, 0, 3) },
  { pnode(HMC, 23, 0, IOINTRASNDOUT, -1, 1), rnode(GOUT, 15, 0, 17) },
  { pnode(HMC, 23, 0, IOINTRASNDOUT, -1, 2), rnode(GOUT, 15, 0, 8) },
  { pnode(HMC, 23, 0, IOINTRASNDOUT, -1, 3), rnode(GOUT, 15, 0, 18) },
  { pnode(HMC, 23, 0, IOINTRESETNACLR, -1, -1), rnode(GOUT, 50, 0, 21) },
  { pnode(HMC, 23, 0, IOINTRESETNDOUT, -1, 0), rnode(GOUT, 50, 0, 14) },
  { pnode(HMC, 23, 0, IOINTRESETNDOUT, -1, 1), rnode(GOUT, 50, 0, 22) },
  { pnode(HMC, 23, 0, IOINTRESETNDOUT, -1, 2), rnode(GOUT, 50, 0, 15) },
  { pnode(HMC, 23, 0, IOINTRESETNDOUT, -1, 3), rnode(GOUT, 50, 0, 23) },
  { pnode(HMC, 23, 0, IOINTWENACLR, -1, -1), rnode(GOUT, 10, 0, 21) },
  { pnode(HMC, 23, 0, IOINTWENDOUT, -1, 0), rnode(GOUT, 10, 0, 14) },
  { pnode(HMC, 23, 0, IOINTWENDOUT, -1, 1), rnode(GOUT, 10, 0, 22) },
  { pnode(HMC, 23, 0, IOINTWENDOUT, -1, 2), rnode(GOUT, 10, 0, 15) },
  { pnode(HMC, 23, 0, IOINTWENDOUT, -1, 3), rnode(GOUT, 10, 0, 23) },
  { pnode(HMC, 23, 0, LOCALDEEPPOWERDNCHIP, -1, 0), rnode(GOUT, 23, 0, 28) },
  { pnode(HMC, 23, 0, LOCALDEEPPOWERDNCHIP, -1, 1), rnode(GOUT, 23, 0, 34) },
  { pnode(HMC, 23, 0, LOCALDEEPPOWERDNREQ, -1, -1), rnode(GOUT, 23, 0, 29) },
  { pnode(HMC, 23, 0, LOCALREFRESHCHIP, -1, 0), rnode(GOUT, 23, 0, 31) },
  { pnode(HMC, 23, 0, LOCALREFRESHCHIP, -1, 1), rnode(GOUT, 23, 0, 33) },
  { pnode(HMC, 23, 0, LOCALREFRESHREQ, -1, -1), rnode(GOUT, 23, 0, 30) },
  { pnode(HMC, 23, 0, LOCALSELFRFSHCHIP, -1, 0), rnode(GOUT, 23, 0, 32) },
  { pnode(HMC, 23, 0, LOCALSELFRFSHCHIP, -1, 1), rnode(GOUT, 23, 0, 37) },
  { pnode(HMC, 23, 0, LOCALSELFRFSHREQ, -1, -1), rnode(GOUT, 23, 0, 35) },
  { pnode(HMC, 23, 0, MMRADDR, -1, 0), rnode(GOUT, 56, 0, 0) },
  { pnode(HMC, 23, 0, MMRADDR, -1, 1), rnode(GOUT, 56, 0, 10) },
  { pnode(HMC, 23, 0, MMRADDR, -1, 2), rnode(GOUT, 56, 0, 9) },
  { pnode(HMC, 23, 0, MMRADDR, -1, 3), rnode(GOUT, 56, 0, 11) },
  { pnode(HMC, 23, 0, MMRADDR, -1, 4), rnode(GOUT, 56, 0, 6) },
  { pnode(HMC, 23, 0, MMRADDR, -1, 5), rnode(GOUT, 56, 0, 7) },
  { pnode(HMC, 23, 0, MMRADDR, -1, 6), rnode(GOUT, 56, 0, 5) },
  { pnode(HMC, 23, 0, MMRADDR, -1, 7), rnode(GOUT, 56, 0, 2) },
  { pnode(HMC, 23, 0, MMRADDR, -1, 8), rnode(GOUT, 56, 0, 1) },
  { pnode(HMC, 23, 0, MMRADDR, -1, 9), rnode(GOUT, 56, 0, 12) },
  { pnode(HMC, 23, 0, MMRBE, -1, -1), rnode(GOUT, 56, 0, 21) },
  { pnode(HMC, 23, 0, MMRBURSTBEGIN, -1, -1), rnode(GOUT, 56, 0, 22) },
  { pnode(HMC, 23, 0, MMRBURSTCOUNT, -1, 0), rnode(GOUT, 59, 0, 33) },
  { pnode(HMC, 23, 0, MMRBURSTCOUNT, -1, 1), rnode(GOUT, 59, 0, 32) },
  { pnode(HMC, 23, 0, MMRCLK, -1, -1), rnode(DCMUX, 56, 0, 0) },
  { pnode(HMC, 23, 0, MMRREADREQ, -1, -1), rnode(GOUT, 59, 0, 11) },
  { pnode(HMC, 23, 0, MMRRESETN, -1, -1), rnode(GOUT, 59, 0, 6) },
  { pnode(HMC, 23, 0, MMRWDATA, -1, 0), rnode(GOUT, 56, 0, 17) },
  { pnode(HMC, 23, 0, MMRWDATA, -1, 1), rnode(GOUT, 56, 0, 13) },
  { pnode(HMC, 23, 0, MMRWDATA, -1, 2), rnode(GOUT, 56, 0, 18) },
  { pnode(HMC, 23, 0, MMRWDATA, -1, 3), rnode(GOUT, 56, 0, 14) },
  { pnode(HMC, 23, 0, MMRWDATA, -1, 4), rnode(GOUT, 56, 0, 19) },
  { pnode(HMC, 23, 0, MMRWDATA, -1, 5), rnode(GOUT, 56, 0, 15) },
  { pnode(HMC, 23, 0, MMRWDATA, -1, 6), rnode(GOUT, 56, 0, 20) },
  { pnode(HMC, 23, 0, MMRWDATA, -1, 7), rnode(GOUT, 56, 0, 16) },
  { pnode(HMC, 23, 0, MMRWRITEREQ, -1, -1), rnode(GOUT, 56, 0, 23) },
  { pnode(HMC, 23, 0, PLLLOCKED, -1, -1), rnode(GOUT, 59, 0, 7) },
  { pnode(HMC, 23, 0, PORTCLK, 0, -1), rnode(DCMUX, 24, 0, 7) },
  { pnode(HMC, 23, 0, PORTCLK, 1, -1), rnode(DCMUX, 24, 0, 15) },
  { pnode(HMC, 23, 0, PORTCLK, 2, -1), rnode(DCMUX, 25, 0, 9) },
  { pnode(HMC, 23, 0, PORTCLK, 3, -1), rnode(DCMUX, 28, 0, 8) },
  { pnode(HMC, 23, 0, PORTCLK, 4, -1), rnode(DCMUX, 29, 0, 15) },
  { pnode(HMC, 23, 0, PORTCLK, 5, -1), rnode(DCMUX, 30, 0, 0) },
  { pnode(HMC, 23, 0, SCADDR, -1, 0), rnode(GOUT, 59, 0, 36) },
  { pnode(HMC, 23, 0, SCADDR, -1, 1), rnode(GOUT, 59, 0, 26) },
  { pnode(HMC, 23, 0, SCADDR, -1, 2), rnode(GOUT, 60, 0, 0) },
  { pnode(HMC, 23, 0, SCADDR, -1, 3), rnode(GOUT, 60, 0, 9) },
  { pnode(HMC, 23, 0, SCADDR, -1, 4), rnode(GOUT, 60, 0, 11) },
  { pnode(HMC, 23, 0, SCADDR, -1, 5), rnode(GOUT, 60, 0, 6) },
  { pnode(HMC, 23, 0, SCADDR, -1, 6), rnode(GOUT, 60, 0, 7) },
  { pnode(HMC, 23, 0, SCADDR, -1, 7), rnode(GOUT, 60, 0, 5) },
  { pnode(HMC, 23, 0, SCADDR, -1, 8), rnode(GOUT, 60, 0, 8) },
  { pnode(HMC, 23, 0, SCADDR, -1, 9), rnode(GOUT, 60, 0, 2) },
  { pnode(HMC, 23, 0, SCANEN, -1, -1), rnode(GOUT, 60, 0, 50) },
  { pnode(HMC, 23, 0, SCBE, -1, -1), rnode(GOUT, 60, 0, 13) },
  { pnode(HMC, 23, 0, SCBURSTBEGIN, -1, -1), rnode(GOUT, 60, 0, 25) },
  { pnode(HMC, 23, 0, SCBURSTCOUNT, -1, 0), rnode(GOUT, 60, 0, 23) },
  { pnode(HMC, 23, 0, SCBURSTCOUNT, -1, 1), rnode(GOUT, 60, 0, 24) },
  { pnode(HMC, 23, 0, SCCLK, -1, -1), rnode(DCMUX, 60, 0, 0) },
  { pnode(HMC, 23, 0, SCREADREQ, -1, -1), rnode(GOUT, 60, 0, 12) },
  { pnode(HMC, 23, 0, SCRESETN, -1, -1), rnode(GOUT, 60, 0, 17) },
  { pnode(HMC, 23, 0, SCWDATA, -1, 0), rnode(GOUT, 60, 0, 18) },
  { pnode(HMC, 23, 0, SCWDATA, -1, 1), rnode(GOUT, 60, 0, 14) },
  { pnode(HMC, 23, 0, SCWDATA, -1, 2), rnode(GOUT, 60, 0, 19) },
  { pnode(HMC, 23, 0, SCWDATA, -1, 3), rnode(GOUT, 60, 0, 15) },
  { pnode(HMC, 23, 0, SCWDATA, -1, 4), rnode(GOUT, 60, 0, 20) },
  { pnode(HMC, 23, 0, SCWDATA, -1, 5), rnode(GOUT, 60, 0, 16) },
  { pnode(HMC, 23, 0, SCWDATA, -1, 6), rnode(GOUT, 60, 0, 21) },
  { pnode(HMC, 23, 0, SCWDATA, -1, 7), rnode(GOUT, 60, 0, 22) },
  { pnode(HMC, 23, 0, SCWRITEREQ, -1, -1), rnode(GOUT, 60, 0, 1) },
  { pnode(HMC, 23, 0, SOFTRESETN, -1, -1), rnode(GOUT, 59, 0, 35) },
  { pnode(HMC, 23, 0, AFICTLLONGIDLE, -1, 0), rnode(GIN, 58, 0, 14) },
  { pnode(HMC, 23, 0, AFICTLLONGIDLE, -1, 1), rnode(GIN, 58, 0, 13) },
  { pnode(HMC, 23, 0, AFICTLREFRESHDONE, -1, 0), rnode(GIN, 59, 0, 0) },
  { pnode(HMC, 23, 0, AFICTLREFRESHDONE, -1, 1), rnode(GIN, 59, 0, 13) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 0), rnode(GIN, 58, 0, 4) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 1), rnode(GIN, 58, 0, 5) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 2), rnode(GIN, 58, 0, 6) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 3), rnode(GIN, 58, 0, 7) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 4), rnode(GIN, 58, 0, 8) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 5), rnode(GIN, 58, 0, 9) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 6), rnode(GIN, 58, 0, 10) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 7), rnode(GIN, 58, 0, 11) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 8), rnode(GIN, 58, 0, 12) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 9), rnode(GIN, 58, 0, 25) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 10), rnode(GIN, 58, 0, 24) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 11), rnode(GIN, 58, 0, 23) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 12), rnode(GIN, 58, 0, 22) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 13), rnode(GIN, 58, 0, 21) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 14), rnode(GIN, 58, 0, 20) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 15), rnode(GIN, 58, 0, 19) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 16), rnode(GIN, 60, 0, 6) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 17), rnode(GIN, 60, 0, 7) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 18), rnode(GIN, 60, 0, 8) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 19), rnode(GIN, 60, 0, 9) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 20), rnode(GIN, 60, 0, 10) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 21), rnode(GIN, 60, 0, 11) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 22), rnode(GIN, 60, 0, 12) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 23), rnode(GIN, 60, 0, 25) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 24), rnode(GIN, 60, 0, 24) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 25), rnode(GIN, 60, 0, 23) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 26), rnode(GIN, 60, 0, 22) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 27), rnode(GIN, 60, 0, 21) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 28), rnode(GIN, 60, 0, 20) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 29), rnode(GIN, 60, 0, 19) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 30), rnode(GIN, 60, 0, 18) },
  { pnode(HMC, 23, 0, AVLREADDATA, -1, 31), rnode(GIN, 60, 0, 17) },
  { pnode(HMC, 23, 0, AVLWAITREQUEST, -1, -1), rnode(GIN, 60, 0, 0) },
  { pnode(HMC, 23, 0, BONDINGOUT, 0, 0), rnode(GIN, 24, 0, 11) },
  { pnode(HMC, 23, 0, BONDINGOUT, 0, 1), rnode(GIN, 23, 0, 6) },
  { pnode(HMC, 23, 0, BONDINGOUT, 0, 2), rnode(GIN, 41, 0, 10) },
  { pnode(HMC, 23, 0, BONDINGOUT, 0, 3), rnode(GIN, 48, 0, 0) },
  { pnode(HMC, 23, 0, BONDINGOUT, 1, 0), rnode(GIN, 23, 0, 4) },
  { pnode(HMC, 23, 0, BONDINGOUT, 1, 1), rnode(GIN, 23, 0, 9) },
  { pnode(HMC, 23, 0, BONDINGOUT, 1, 2), rnode(GIN, 23, 0, 24) },
  { pnode(HMC, 23, 0, BONDINGOUT, 1, 3), rnode(GIN, 29, 0, 18) },
  { pnode(HMC, 23, 0, BONDINGOUT, 1, 4), rnode(GIN, 29, 0, 13) },
  { pnode(HMC, 23, 0, BONDINGOUT, 1, 5), rnode(GIN, 30, 0, 4) },
  { pnode(HMC, 23, 0, BONDINGOUT, 2, 0), rnode(GIN, 23, 0, 5) },
  { pnode(HMC, 23, 0, BONDINGOUT, 2, 1), rnode(GIN, 23, 0, 10) },
  { pnode(HMC, 23, 0, BONDINGOUT, 2, 2), rnode(GIN, 23, 0, 23) },
  { pnode(HMC, 23, 0, BONDINGOUT, 2, 3), rnode(GIN, 29, 0, 17) },
  { pnode(HMC, 23, 0, BONDINGOUT, 2, 4), rnode(GIN, 30, 0, 0) },
  { pnode(HMC, 23, 0, BONDINGOUT, 2, 5), rnode(GIN, 30, 0, 5) },
  { pnode(HMC, 23, 0, CTLCALREQ, -1, -1), rnode(GIN, 28, 0, 17) },
  { pnode(HMC, 23, 0, IOINTAFICALFAIL, -1, -1), rnode(GIN, 60, 0, 16) },
  { pnode(HMC, 23, 0, IOINTAFICALSUCCESS, -1, -1), rnode(GIN, 60, 0, 15) },
  { pnode(HMC, 23, 0, IOINTAFIRLAT, -1, 0), rnode(GIN, 60, 0, 14) },
  { pnode(HMC, 23, 0, IOINTAFIRLAT, -1, 1), rnode(GIN, 60, 0, 13) },
  { pnode(HMC, 23, 0, IOINTAFIRLAT, -1, 2), rnode(GIN, 61, 0, 0) },
  { pnode(HMC, 23, 0, IOINTAFIRLAT, -1, 3), rnode(GIN, 61, 0, 13) },
  { pnode(HMC, 23, 0, IOINTAFIRLAT, -1, 4), rnode(GIN, 62, 0, 0) },
  { pnode(HMC, 23, 0, IOINTAFIWLAT, -1, 0), rnode(GIN, 58, 0, 18) },
  { pnode(HMC, 23, 0, IOINTAFIWLAT, -1, 1), rnode(GIN, 58, 0, 17) },
  { pnode(HMC, 23, 0, IOINTAFIWLAT, -1, 2), rnode(GIN, 58, 0, 16) },
  { pnode(HMC, 23, 0, IOINTAFIWLAT, -1, 3), rnode(GIN, 58, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 0), rnode(GIN, 32, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 1), rnode(GIN, 32, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 2), rnode(GIN, 32, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 3), rnode(GIN, 32, 0, 21) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 4), rnode(GIN, 32, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 5), rnode(GIN, 32, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 6), rnode(GIN, 32, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 7), rnode(GIN, 32, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 8), rnode(GIN, 32, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 9), rnode(GIN, 32, 0, 9) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 10), rnode(GIN, 32, 0, 10) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 11), rnode(GIN, 32, 0, 11) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 12), rnode(GIN, 34, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 13), rnode(GIN, 34, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 14), rnode(GIN, 34, 0, 4) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 15), rnode(GIN, 34, 0, 5) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 16), rnode(GIN, 36, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 17), rnode(GIN, 36, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 18), rnode(GIN, 36, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 19), rnode(GIN, 36, 0, 21) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 20), rnode(GIN, 36, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 21), rnode(GIN, 36, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 22), rnode(GIN, 36, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 23), rnode(GIN, 36, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 24), rnode(GIN, 36, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 25), rnode(GIN, 36, 0, 9) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 26), rnode(GIN, 36, 0, 10) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 27), rnode(GIN, 36, 0, 11) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 28), rnode(GIN, 38, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 29), rnode(GIN, 38, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 30), rnode(GIN, 38, 0, 4) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 31), rnode(GIN, 38, 0, 5) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 36), rnode(GIN, 40, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 37), rnode(GIN, 40, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 38), rnode(GIN, 40, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 39), rnode(GIN, 40, 0, 21) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 40), rnode(GIN, 40, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 41), rnode(GIN, 40, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 42), rnode(GIN, 40, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 43), rnode(GIN, 40, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 44), rnode(GIN, 40, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 45), rnode(GIN, 40, 0, 9) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 46), rnode(GIN, 40, 0, 10) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 47), rnode(GIN, 40, 0, 11) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 48), rnode(GIN, 42, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 49), rnode(GIN, 42, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 50), rnode(GIN, 42, 0, 4) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 51), rnode(GIN, 42, 0, 5) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 52), rnode(GIN, 44, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 53), rnode(GIN, 44, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 54), rnode(GIN, 44, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 55), rnode(GIN, 44, 0, 21) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 56), rnode(GIN, 44, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 57), rnode(GIN, 44, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 58), rnode(GIN, 44, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 59), rnode(GIN, 44, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 60), rnode(GIN, 44, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 61), rnode(GIN, 44, 0, 9) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 62), rnode(GIN, 44, 0, 10) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 63), rnode(GIN, 44, 0, 11) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 64), rnode(GIN, 46, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 65), rnode(GIN, 46, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 66), rnode(GIN, 46, 0, 4) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 67), rnode(GIN, 46, 0, 5) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 72), rnode(GIN, 48, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 73), rnode(GIN, 48, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 74), rnode(GIN, 48, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 75), rnode(GIN, 48, 0, 21) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 76), rnode(GIN, 48, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 77), rnode(GIN, 48, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 78), rnode(GIN, 48, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 79), rnode(GIN, 48, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 80), rnode(GIN, 48, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 81), rnode(GIN, 48, 0, 9) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 82), rnode(GIN, 48, 0, 10) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 83), rnode(GIN, 48, 0, 11) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 84), rnode(GIN, 50, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 85), rnode(GIN, 50, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 86), rnode(GIN, 50, 0, 4) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 87), rnode(GIN, 50, 0, 5) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 88), rnode(GIN, 51, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 89), rnode(GIN, 51, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 90), rnode(GIN, 51, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 91), rnode(GIN, 51, 0, 21) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 92), rnode(GIN, 51, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 93), rnode(GIN, 51, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 94), rnode(GIN, 51, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 95), rnode(GIN, 51, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 96), rnode(GIN, 51, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 97), rnode(GIN, 51, 0, 9) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 98), rnode(GIN, 51, 0, 10) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 99), rnode(GIN, 51, 0, 11) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 100), rnode(GIN, 53, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 101), rnode(GIN, 53, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 102), rnode(GIN, 53, 0, 4) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 103), rnode(GIN, 53, 0, 5) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 108), rnode(GIN, 55, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 109), rnode(GIN, 55, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 110), rnode(GIN, 55, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 111), rnode(GIN, 55, 0, 21) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 112), rnode(GIN, 55, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 113), rnode(GIN, 55, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 114), rnode(GIN, 55, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 115), rnode(GIN, 55, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 116), rnode(GIN, 55, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 117), rnode(GIN, 55, 0, 9) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 118), rnode(GIN, 55, 0, 10) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 119), rnode(GIN, 55, 0, 11) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 120), rnode(GIN, 57, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 121), rnode(GIN, 57, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 122), rnode(GIN, 57, 0, 4) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 123), rnode(GIN, 57, 0, 5) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 124), rnode(GIN, 59, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 125), rnode(GIN, 59, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 126), rnode(GIN, 59, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 127), rnode(GIN, 59, 0, 21) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 128), rnode(GIN, 59, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 129), rnode(GIN, 59, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 130), rnode(GIN, 59, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 131), rnode(GIN, 59, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 132), rnode(GIN, 59, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 133), rnode(GIN, 59, 0, 9) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 134), rnode(GIN, 59, 0, 10) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 135), rnode(GIN, 59, 0, 11) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 136), rnode(GIN, 61, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 137), rnode(GIN, 61, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 138), rnode(GIN, 61, 0, 4) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 139), rnode(GIN, 61, 0, 5) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 144), rnode(GIN, 62, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 145), rnode(GIN, 62, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 146), rnode(GIN, 62, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 147), rnode(GIN, 62, 0, 21) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 148), rnode(GIN, 62, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 149), rnode(GIN, 62, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 150), rnode(GIN, 62, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 151), rnode(GIN, 62, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 152), rnode(GIN, 62, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 153), rnode(GIN, 62, 0, 9) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 154), rnode(GIN, 62, 0, 10) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 155), rnode(GIN, 62, 0, 11) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 156), rnode(GIN, 64, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 157), rnode(GIN, 64, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 158), rnode(GIN, 64, 0, 4) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 159), rnode(GIN, 64, 0, 5) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 160), rnode(GIN, 65, 0, 24) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 161), rnode(GIN, 65, 0, 23) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 162), rnode(GIN, 65, 0, 22) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 163), rnode(GIN, 65, 0, 21) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 164), rnode(GIN, 65, 0, 18) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 165), rnode(GIN, 65, 0, 17) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 166), rnode(GIN, 65, 0, 16) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 167), rnode(GIN, 65, 0, 15) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 168), rnode(GIN, 65, 0, 8) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 169), rnode(GIN, 65, 0, 9) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 170), rnode(GIN, 65, 0, 10) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 171), rnode(GIN, 65, 0, 11) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 172), rnode(GIN, 66, 0, 2) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 173), rnode(GIN, 66, 0, 3) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 174), rnode(GIN, 66, 0, 4) },
  { pnode(HMC, 23, 0, IOINTDQDIN, -1, 175), rnode(GIN, 66, 0, 5) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICRDATAVALID, -1, 0), rnode(GIN, 36, 0, 13) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICRDATAVALID, -1, 1), rnode(GIN, 45, 0, 0) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICRDATAVALID, -1, 2), rnode(GIN, 52, 0, 4) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICRDATAVALID, -1, 3), rnode(GIN, 60, 0, 4) },
  { pnode(HMC, 23, 0, IOINTDQSLOGICRDATAVALID, -1, 4), rnode(GIN, 67, 0, 1) },
  { pnode(HMC, 23, 0, LOCALDEEPPOWERDNACK, -1, -1), rnode(GIN, 22, 0, 16) },
  { pnode(HMC, 23, 0, LOCALINITDONE, -1, -1), rnode(GIN, 22, 0, 15) },
  { pnode(HMC, 23, 0, LOCALPOWERDOWNACK, -1, -1), rnode(GIN, 22, 0, 14) },
  { pnode(HMC, 23, 0, LOCALREFRESHACK, -1, -1), rnode(GIN, 22, 0, 13) },
  { pnode(HMC, 23, 0, LOCALSELFRFSHACK, -1, -1), rnode(GIN, 23, 0, 0) },
  { pnode(HMC, 23, 0, MMRRDATA, -1, 0), rnode(GIN, 56, 0, 24) },
  { pnode(HMC, 23, 0, MMRRDATA, -1, 1), rnode(GIN, 56, 0, 23) },
  { pnode(HMC, 23, 0, MMRRDATA, -1, 2), rnode(GIN, 56, 0, 22) },
  { pnode(HMC, 23, 0, MMRRDATA, -1, 3), rnode(GIN, 56, 0, 21) },
  { pnode(HMC, 23, 0, MMRRDATA, -1, 4), rnode(GIN, 56, 0, 20) },
  { pnode(HMC, 23, 0, MMRRDATA, -1, 5), rnode(GIN, 56, 0, 19) },
  { pnode(HMC, 23, 0, MMRRDATA, -1, 6), rnode(GIN, 56, 0, 18) },
  { pnode(HMC, 23, 0, MMRRDATA, -1, 7), rnode(GIN, 56, 0, 17) },
  { pnode(HMC, 23, 0, MMRRDATAVALID, -1, -1), rnode(GIN, 56, 0, 25) },
  { pnode(HMC, 23, 0, MMRWAITREQUEST, -1, -1), rnode(GIN, 58, 0, 2) },
  { pnode(HMC, 23, 0, OAMMREADY, -1, 0), rnode(GIN, 23, 0, 1) },
  { pnode(HMC, 23, 0, OAMMREADY, -1, 1), rnode(GIN, 33, 0, 16) },
  { pnode(HMC, 23, 0, OAMMREADY, -1, 2), rnode(GIN, 23, 0, 11) },
  { pnode(HMC, 23, 0, OAMMREADY, -1, 3), rnode(GIN, 29, 0, 21) },
  { pnode(HMC, 23, 0, OAMMREADY, -1, 4), rnode(GIN, 29, 0, 16) },
  { pnode(HMC, 23, 0, OAMMREADY, -1, 5), rnode(GIN, 30, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 0), rnode(GIN, 23, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 1), rnode(GIN, 23, 0, 21) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 2), rnode(GIN, 23, 0, 20) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 3), rnode(GIN, 23, 0, 19) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 4), rnode(GIN, 23, 0, 18) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 5), rnode(GIN, 23, 0, 17) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 6), rnode(GIN, 23, 0, 16) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 7), rnode(GIN, 23, 0, 15) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 8), rnode(GIN, 23, 0, 14) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 9), rnode(GIN, 23, 0, 13) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 10), rnode(GIN, 24, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 11), rnode(GIN, 24, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 12), rnode(GIN, 24, 0, 2) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 13), rnode(GIN, 24, 0, 3) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 14), rnode(GIN, 24, 0, 4) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 15), rnode(GIN, 24, 0, 5) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 16), rnode(GIN, 24, 0, 6) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 17), rnode(GIN, 24, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 18), rnode(GIN, 24, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 19), rnode(GIN, 24, 0, 9) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 20), rnode(GIN, 24, 0, 12) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 21), rnode(GIN, 24, 0, 25) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 22), rnode(GIN, 24, 0, 24) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 23), rnode(GIN, 24, 0, 23) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 24), rnode(GIN, 24, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 25), rnode(GIN, 24, 0, 21) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 26), rnode(GIN, 24, 0, 16) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 27), rnode(GIN, 24, 0, 15) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 28), rnode(GIN, 24, 0, 14) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 29), rnode(GIN, 24, 0, 13) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 30), rnode(GIN, 25, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 31), rnode(GIN, 25, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 32), rnode(GIN, 25, 0, 2) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 33), rnode(GIN, 25, 0, 3) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 34), rnode(GIN, 25, 0, 4) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 35), rnode(GIN, 25, 0, 5) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 36), rnode(GIN, 25, 0, 6) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 37), rnode(GIN, 25, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 38), rnode(GIN, 25, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 39), rnode(GIN, 25, 0, 9) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 40), rnode(GIN, 25, 0, 10) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 41), rnode(GIN, 25, 0, 11) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 42), rnode(GIN, 25, 0, 12) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 43), rnode(GIN, 25, 0, 25) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 44), rnode(GIN, 25, 0, 24) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 45), rnode(GIN, 25, 0, 23) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 46), rnode(GIN, 25, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 47), rnode(GIN, 25, 0, 21) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 48), rnode(GIN, 25, 0, 20) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 49), rnode(GIN, 25, 0, 19) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 50), rnode(GIN, 25, 0, 18) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 51), rnode(GIN, 25, 0, 17) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 52), rnode(GIN, 28, 0, 25) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 53), rnode(GIN, 28, 0, 24) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 54), rnode(GIN, 28, 0, 23) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 55), rnode(GIN, 28, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 56), rnode(GIN, 28, 0, 21) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 57), rnode(GIN, 28, 0, 20) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 58), rnode(GIN, 28, 0, 19) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 59), rnode(GIN, 28, 0, 18) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 60), rnode(GIN, 28, 0, 16) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 61), rnode(GIN, 28, 0, 15) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 62), rnode(GIN, 28, 0, 14) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 63), rnode(GIN, 28, 0, 13) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 64), rnode(GIN, 29, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 65), rnode(GIN, 29, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 66), rnode(GIN, 29, 0, 2) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 67), rnode(GIN, 29, 0, 3) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 68), rnode(GIN, 29, 0, 4) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 69), rnode(GIN, 29, 0, 5) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 70), rnode(GIN, 29, 0, 6) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 71), rnode(GIN, 29, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 72), rnode(GIN, 29, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 73), rnode(GIN, 29, 0, 9) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 74), rnode(GIN, 29, 0, 10) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 75), rnode(GIN, 29, 0, 11) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 76), rnode(GIN, 29, 0, 25) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 77), rnode(GIN, 29, 0, 24) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 78), rnode(GIN, 29, 0, 23) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 0, 79), rnode(GIN, 29, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 0), rnode(GIN, 30, 0, 6) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 1), rnode(GIN, 30, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 2), rnode(GIN, 30, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 3), rnode(GIN, 30, 0, 25) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 4), rnode(GIN, 30, 0, 24) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 5), rnode(GIN, 30, 0, 23) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 6), rnode(GIN, 30, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 7), rnode(GIN, 30, 0, 21) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 8), rnode(GIN, 30, 0, 20) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 9), rnode(GIN, 30, 0, 19) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 10), rnode(GIN, 30, 0, 18) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 11), rnode(GIN, 30, 0, 17) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 12), rnode(GIN, 30, 0, 16) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 13), rnode(GIN, 30, 0, 15) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 14), rnode(GIN, 30, 0, 14) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 15), rnode(GIN, 30, 0, 13) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 16), rnode(GIN, 31, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 17), rnode(GIN, 31, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 18), rnode(GIN, 31, 0, 2) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 19), rnode(GIN, 31, 0, 3) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 20), rnode(GIN, 31, 0, 4) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 21), rnode(GIN, 31, 0, 5) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 22), rnode(GIN, 31, 0, 6) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 23), rnode(GIN, 31, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 24), rnode(GIN, 31, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 25), rnode(GIN, 33, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 26), rnode(GIN, 33, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 27), rnode(GIN, 33, 0, 2) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 28), rnode(GIN, 33, 0, 3) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 29), rnode(GIN, 33, 0, 4) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 30), rnode(GIN, 33, 0, 5) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 31), rnode(GIN, 33, 0, 6) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 32), rnode(GIN, 33, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 33), rnode(GIN, 33, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 34), rnode(GIN, 33, 0, 9) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 35), rnode(GIN, 33, 0, 10) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 36), rnode(GIN, 33, 0, 11) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 37), rnode(GIN, 33, 0, 12) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 38), rnode(GIN, 33, 0, 25) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 39), rnode(GIN, 33, 0, 24) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 40), rnode(GIN, 33, 0, 23) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 41), rnode(GIN, 33, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 42), rnode(GIN, 33, 0, 21) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 43), rnode(GIN, 33, 0, 20) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 44), rnode(GIN, 33, 0, 19) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 45), rnode(GIN, 33, 0, 15) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 46), rnode(GIN, 33, 0, 14) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 47), rnode(GIN, 34, 0, 13) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 48), rnode(GIN, 35, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 49), rnode(GIN, 35, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 50), rnode(GIN, 35, 0, 2) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 51), rnode(GIN, 35, 0, 3) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 52), rnode(GIN, 35, 0, 4) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 53), rnode(GIN, 35, 0, 5) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 54), rnode(GIN, 35, 0, 6) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 55), rnode(GIN, 35, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 56), rnode(GIN, 35, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 57), rnode(GIN, 35, 0, 9) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 58), rnode(GIN, 35, 0, 10) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 59), rnode(GIN, 35, 0, 11) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 60), rnode(GIN, 35, 0, 12) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 61), rnode(GIN, 35, 0, 25) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 62), rnode(GIN, 35, 0, 24) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 63), rnode(GIN, 35, 0, 23) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 64), rnode(GIN, 35, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 65), rnode(GIN, 35, 0, 21) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 66), rnode(GIN, 35, 0, 20) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 67), rnode(GIN, 35, 0, 19) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 68), rnode(GIN, 35, 0, 17) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 69), rnode(GIN, 35, 0, 16) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 70), rnode(GIN, 35, 0, 15) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 71), rnode(GIN, 37, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 72), rnode(GIN, 37, 0, 21) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 73), rnode(GIN, 37, 0, 20) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 74), rnode(GIN, 37, 0, 19) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 75), rnode(GIN, 37, 0, 18) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 76), rnode(GIN, 37, 0, 17) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 77), rnode(GIN, 37, 0, 16) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 78), rnode(GIN, 37, 0, 15) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 1, 79), rnode(GIN, 37, 0, 14) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 0), rnode(GIN, 37, 0, 13) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 1), rnode(GIN, 38, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 2), rnode(GIN, 38, 0, 13) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 3), rnode(GIN, 39, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 4), rnode(GIN, 39, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 5), rnode(GIN, 39, 0, 2) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 6), rnode(GIN, 39, 0, 3) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 7), rnode(GIN, 39, 0, 4) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 8), rnode(GIN, 39, 0, 5) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 9), rnode(GIN, 39, 0, 6) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 10), rnode(GIN, 39, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 11), rnode(GIN, 39, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 12), rnode(GIN, 41, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 13), rnode(GIN, 41, 0, 2) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 14), rnode(GIN, 41, 0, 3) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 15), rnode(GIN, 41, 0, 4) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 16), rnode(GIN, 41, 0, 5) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 17), rnode(GIN, 41, 0, 6) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 18), rnode(GIN, 41, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 19), rnode(GIN, 41, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 20), rnode(GIN, 41, 0, 11) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 21), rnode(GIN, 41, 0, 12) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 22), rnode(GIN, 41, 0, 25) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 23), rnode(GIN, 41, 0, 24) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 24), rnode(GIN, 41, 0, 23) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 25), rnode(GIN, 41, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 26), rnode(GIN, 41, 0, 21) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 27), rnode(GIN, 41, 0, 20) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 28), rnode(GIN, 41, 0, 19) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 29), rnode(GIN, 41, 0, 18) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 30), rnode(GIN, 41, 0, 17) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 31), rnode(GIN, 43, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 32), rnode(GIN, 43, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 33), rnode(GIN, 43, 0, 2) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 34), rnode(GIN, 43, 0, 3) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 35), rnode(GIN, 43, 0, 4) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 36), rnode(GIN, 43, 0, 5) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 37), rnode(GIN, 43, 0, 6) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 38), rnode(GIN, 43, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 39), rnode(GIN, 43, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 40), rnode(GIN, 43, 0, 9) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 41), rnode(GIN, 43, 0, 10) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 42), rnode(GIN, 43, 0, 11) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 43), rnode(GIN, 43, 0, 12) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 44), rnode(GIN, 43, 0, 25) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 45), rnode(GIN, 43, 0, 24) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 46), rnode(GIN, 43, 0, 23) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 47), rnode(GIN, 43, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 48), rnode(GIN, 43, 0, 21) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 49), rnode(GIN, 43, 0, 20) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 50), rnode(GIN, 43, 0, 19) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 51), rnode(GIN, 43, 0, 18) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 52), rnode(GIN, 43, 0, 17) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 53), rnode(GIN, 43, 0, 16) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 54), rnode(GIN, 43, 0, 15) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 55), rnode(GIN, 43, 0, 14) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 56), rnode(GIN, 45, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 57), rnode(GIN, 45, 0, 2) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 58), rnode(GIN, 45, 0, 3) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 59), rnode(GIN, 45, 0, 4) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 60), rnode(GIN, 45, 0, 5) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 61), rnode(GIN, 45, 0, 10) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 62), rnode(GIN, 45, 0, 11) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 63), rnode(GIN, 45, 0, 12) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 64), rnode(GIN, 45, 0, 25) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 65), rnode(GIN, 45, 0, 24) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 66), rnode(GIN, 45, 0, 23) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 67), rnode(GIN, 45, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 68), rnode(GIN, 45, 0, 18) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 69), rnode(GIN, 45, 0, 17) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 70), rnode(GIN, 45, 0, 16) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 71), rnode(GIN, 45, 0, 15) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 72), rnode(GIN, 45, 0, 14) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 73), rnode(GIN, 45, 0, 13) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 74), rnode(GIN, 46, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 75), rnode(GIN, 46, 0, 13) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 76), rnode(GIN, 47, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 77), rnode(GIN, 47, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 78), rnode(GIN, 47, 0, 2) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 2, 79), rnode(GIN, 47, 0, 3) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 0), rnode(GIN, 47, 0, 4) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 1), rnode(GIN, 47, 0, 5) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 2), rnode(GIN, 47, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 3), rnode(GIN, 47, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 4), rnode(GIN, 47, 0, 9) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 5), rnode(GIN, 47, 0, 10) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 6), rnode(GIN, 47, 0, 11) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 7), rnode(GIN, 47, 0, 12) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 8), rnode(GIN, 47, 0, 25) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 9), rnode(GIN, 47, 0, 24) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 10), rnode(GIN, 47, 0, 23) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 11), rnode(GIN, 47, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 12), rnode(GIN, 47, 0, 21) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 13), rnode(GIN, 47, 0, 20) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 14), rnode(GIN, 47, 0, 19) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 15), rnode(GIN, 47, 0, 18) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 16), rnode(GIN, 47, 0, 17) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 17), rnode(GIN, 47, 0, 16) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 18), rnode(GIN, 47, 0, 15) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 19), rnode(GIN, 47, 0, 14) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 20), rnode(GIN, 48, 0, 13) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 21), rnode(GIN, 49, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 22), rnode(GIN, 49, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 23), rnode(GIN, 49, 0, 2) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 24), rnode(GIN, 49, 0, 3) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 25), rnode(GIN, 49, 0, 4) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 26), rnode(GIN, 49, 0, 6) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 27), rnode(GIN, 49, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 28), rnode(GIN, 49, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 29), rnode(GIN, 49, 0, 9) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 30), rnode(GIN, 49, 0, 10) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 31), rnode(GIN, 49, 0, 11) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 32), rnode(GIN, 49, 0, 12) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 33), rnode(GIN, 49, 0, 25) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 34), rnode(GIN, 49, 0, 24) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 35), rnode(GIN, 49, 0, 23) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 36), rnode(GIN, 49, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 37), rnode(GIN, 49, 0, 21) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 38), rnode(GIN, 49, 0, 20) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 39), rnode(GIN, 49, 0, 19) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 40), rnode(GIN, 49, 0, 17) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 41), rnode(GIN, 49, 0, 16) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 42), rnode(GIN, 49, 0, 15) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 43), rnode(GIN, 49, 0, 14) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 44), rnode(GIN, 49, 0, 13) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 45), rnode(GIN, 50, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 46), rnode(GIN, 49, 0, 18) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 47), rnode(GIN, 52, 0, 5) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 48), rnode(GIN, 52, 0, 6) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 49), rnode(GIN, 52, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 50), rnode(GIN, 52, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 51), rnode(GIN, 52, 0, 9) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 52), rnode(GIN, 52, 0, 10) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 53), rnode(GIN, 52, 0, 11) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 54), rnode(GIN, 52, 0, 12) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 55), rnode(GIN, 52, 0, 25) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 56), rnode(GIN, 52, 0, 24) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 57), rnode(GIN, 52, 0, 23) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 58), rnode(GIN, 52, 0, 22) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 59), rnode(GIN, 52, 0, 21) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 60), rnode(GIN, 52, 0, 20) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 61), rnode(GIN, 52, 0, 19) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 62), rnode(GIN, 52, 0, 18) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 63), rnode(GIN, 52, 0, 17) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 64), rnode(GIN, 52, 0, 16) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 65), rnode(GIN, 52, 0, 15) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 66), rnode(GIN, 52, 0, 14) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 67), rnode(GIN, 52, 0, 13) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 68), rnode(GIN, 53, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 69), rnode(GIN, 53, 0, 13) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 70), rnode(GIN, 54, 0, 0) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 71), rnode(GIN, 54, 0, 1) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 72), rnode(GIN, 56, 0, 5) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 73), rnode(GIN, 56, 0, 6) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 74), rnode(GIN, 56, 0, 7) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 75), rnode(GIN, 56, 0, 8) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 76), rnode(GIN, 56, 0, 9) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 77), rnode(GIN, 56, 0, 10) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 78), rnode(GIN, 56, 0, 11) },
  { pnode(HMC, 23, 0, ORDAVSTDATA, 3, 79), rnode(GIN, 56, 0, 12) },
  { pnode(HMC, 23, 0, ORDAVSTVALID, 0, -1), rnode(GIN, 24, 0, 10) },
  { pnode(HMC, 23, 0, ORDAVSTVALID, 1, -1), rnode(GIN, 33, 0, 18) },
  { pnode(HMC, 23, 0, ORDAVSTVALID, 2, -1), rnode(GIN, 41, 0, 9) },
  { pnode(HMC, 23, 0, ORDAVSTVALID, 3, -1), rnode(GIN, 47, 0, 13) },
  { pnode(HMC, 23, 0, OWRACKAVSTDATA, 0, -1), rnode(GIN, 23, 0, 2) },
  { pnode(HMC, 23, 0, OWRACKAVSTDATA, 1, -1), rnode(GIN, 23, 0, 7) },
  { pnode(HMC, 23, 0, OWRACKAVSTDATA, 2, -1), rnode(GIN, 23, 0, 12) },
  { pnode(HMC, 23, 0, OWRACKAVSTDATA, 3, -1), rnode(GIN, 29, 0, 20) },
  { pnode(HMC, 23, 0, OWRACKAVSTDATA, 4, -1), rnode(GIN, 29, 0, 15) },
  { pnode(HMC, 23, 0, OWRACKAVSTDATA, 5, -1), rnode(GIN, 30, 0, 2) },
  { pnode(HMC, 23, 0, OWRACKAVSTVALID, 0, -1), rnode(GIN, 23, 0, 3) },
  { pnode(HMC, 23, 0, OWRACKAVSTVALID, 1, -1), rnode(GIN, 23, 0, 8) },
  { pnode(HMC, 23, 0, OWRACKAVSTVALID, 2, -1), rnode(GIN, 23, 0, 25) },
  { pnode(HMC, 23, 0, OWRACKAVSTVALID, 3, -1), rnode(GIN, 29, 0, 19) },
  { pnode(HMC, 23, 0, OWRACKAVSTVALID, 4, -1), rnode(GIN, 29, 0, 14) },
  { pnode(HMC, 23, 0, OWRACKAVSTVALID, 5, -1), rnode(GIN, 30, 0, 3) },
  { pnode(HMC, 23, 0, PHYRESETN, -1, -1), rnode(GIN, 62, 0, 13) },
  { pnode(HMC, 23, 0, SCRDATA, -1, 0), rnode(GIN, 56, 0, 16) },
  { pnode(HMC, 23, 0, SCRDATA, -1, 1), rnode(GIN, 56, 0, 15) },
  { pnode(HMC, 23, 0, SCRDATA, -1, 2), rnode(GIN, 56, 0, 14) },
  { pnode(HMC, 23, 0, SCRDATA, -1, 3), rnode(GIN, 56, 0, 13) },
  { pnode(HMC, 23, 0, SCRDATA, -1, 4), rnode(GIN, 57, 0, 0) },
  { pnode(HMC, 23, 0, SCRDATA, -1, 5), rnode(GIN, 57, 0, 13) },
  { pnode(HMC, 23, 0, SCRDATA, -1, 6), rnode(GIN, 58, 0, 0) },
  { pnode(HMC, 23, 0, SCRDATA, -1, 7), rnode(GIN, 58, 0, 1) },
  { pnode(HMC, 23, 0, SCRDATAVALID, -1, -1), rnode(GIN, 63, 0, 0) },
  { pnode(HMC, 23, 0, SCWAITREQUEST, -1, -1), rnode(GIN, 63, 0, 1) },
  { pnode(CMUXCR, 0, 2, CLKOUT, 0, -1), rnode(RCLK, 0, 4, 16) },
  { pnode(CMUXCR, 0, 2, CLKOUT, 1, -1), rnode(RCLK, 0, 4, 17) },
  { pnode(CMUXCR, 0, 2, CLKOUT, 2, -1), rnode(RCLK, 0, 4, 18) },
  { pnode(CMUXCR, 0, 2, CLKOUT, 3, -1), rnode(RCLK, 0, 4, 19) },
  { pnode(CMUXCR, 0, 2, CLKOUT, 4, -1), rnode(RCLK, 0, 4, 20) },
  { pnode(CMUXCR, 0, 2, CLKOUT, 5, -1), rnode(RCLK, 0, 4, 21) },
  { pnode(CMUXCR, 0, 2, CLKFBOUT, -1, 0), rnode(RCLKFB, 13, 4, 0) },
  { pnode(CMUXCR, 0, 2, CLKIN, -1, 0), rnode(DCMUX, 1, 0, 0) },
  { pnode(CMUXCR, 0, 2, CLKIN, -1, 1), rnode(DCMUX, 1, 0, 2) },
  { pnode(CMUXCR, 0, 2, CLKIN, -1, 2), rnode(DCMUX, 1, 0, 4) },
  { pnode(CMUXCR, 0, 2, CLKIN, -1, 3), rnode(DCMUX, 1, 0, 6) },
  { pnode(CMUXCR, 0, 2, ENABLE, 0, -1), rnode(GOUT, 1, 0, 0) },
  { pnode(CMUXCR, 0, 2, ENABLE, 1, -1), rnode(GOUT, 1, 0, 10) },
  { pnode(CMUXCR, 0, 2, ENABLE, 2, -1), rnode(GOUT, 1, 0, 9) },
  { pnode(CMUXCR, 0, 2, ENABLE, 3, -1), rnode(GOUT, 1, 0, 11) },
  { pnode(CMUXCR, 0, 2, ENABLE, 4, -1), rnode(GOUT, 1, 0, 6) },
  { pnode(CMUXCR, 0, 2, ENABLE, 5, -1), rnode(GOUT, 1, 0, 7) },
  { pnode(CMUXHG, 0, 8, CLKOUT, 0, -1), rnode(GCLK, 0, 8, 0) },
  { pnode(CMUXHG, 0, 8, CLKOUT, 1, -1), rnode(GCLK, 0, 8, 1) },
  { pnode(CMUXHG, 0, 8, CLKOUT, 2, -1), rnode(GCLK, 0, 8, 2) },
  { pnode(CMUXHG, 0, 8, CLKOUT, 3, -1), rnode(GCLK, 0, 8, 3) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 0, -1), rnode(RCLK, 0, 35, 10) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 1, -1), rnode(RCLK, 0, 35, 11) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 2, -1), rnode(RCLK, 0, 35, 12) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 3, -1), rnode(RCLK, 0, 35, 13) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 4, -1), rnode(RCLK, 0, 35, 14) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 5, -1), rnode(RCLK, 0, 35, 15) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 6, -1), rnode(RCLK, 0, 4, 10) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 7, -1), rnode(RCLK, 0, 4, 11) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 8, -1), rnode(RCLK, 0, 4, 12) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 9, -1), rnode(RCLK, 0, 4, 13) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 10, -1), rnode(RCLK, 0, 4, 14) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 11, -1), rnode(RCLK, 0, 4, 15) },
  { pnode(CMUXHG, 0, 8, CLKFBOUT, -1, 1), rnode(GCLKFB, 13, 34, 1) },
  { pnode(CMUXHR, 0, 8, CLKFBOUT, -1, 0), rnode(RCLKFB, 13, 34, 1) },
  { pnode(CMUXHG, 0, 8, SWITCHCLK, 0, -1), rnode(GIN, 0, 8, 4) },
  { pnode(CMUXHG, 0, 8, SWITCHCLK, 1, -1), rnode(GIN, 0, 8, 5) },
  { pnode(CMUXHG, 0, 8, SWITCHCLK, 2, -1), rnode(GIN, 0, 8, 6) },
  { pnode(CMUXHG, 0, 8, SWITCHCLK, 3, -1), rnode(GIN, 0, 8, 7) },
  { pnode(CMUXHG, 0, 8, SYN_EN, 0, -1), rnode(GIN, 0, 8, 0) },
  { pnode(CMUXHG, 0, 8, SYN_EN, 1, -1), rnode(GIN, 0, 8, 1) },
  { pnode(CMUXHG, 0, 8, SYN_EN, 2, -1), rnode(GIN, 0, 8, 2) },
  { pnode(CMUXHG, 0, 8, SYN_EN, 3, -1), rnode(GIN, 0, 8, 3) },
  { pnode(CMUXHG, 0, 8, CLKIN, -1, 0), rnode(DCMUX, 0, 9, 13) },
  { pnode(CMUXHG, 0, 8, CLKIN, -1, 1), rnode(DCMUX, 0, 9, 6) },
  { pnode(CMUXHG, 0, 8, CLKIN, -1, 2), rnode(DCMUX, 0, 8, 10) },
  { pnode(CMUXHG, 0, 8, CLKIN, -1, 3), rnode(DCMUX, 0, 8, 4) },
  { pnode(CMUXHR, 0, 8, CLKIN, -1, 0), rnode(DCMUX, 0, 9, 5) },
  { pnode(CMUXHR, 0, 8, CLKIN, -1, 1), rnode(DCMUX, 0, 9, 11) },
  { pnode(CMUXHR, 0, 8, CLKIN, -1, 2), rnode(DCMUX, 0, 8, 5) },
  { pnode(CMUXHR, 0, 8, CLKIN, -1, 3), rnode(DCMUX, 0, 8, 11) },
  { pnode(CMUXHR, 0, 8, CLKFBIN, -1, 0), rnode(DCMUX, 0, 9, 4) },
  { pnode(CMUXHR, 0, 8, CLKFBIN, -1, 1), rnode(DCMUX, 0, 60, 5) },
  { pnode(CMUXHG, 0, 8, SWITCHIN, 0, 0), rnode(GOUT, 0, 9, 55) },
  { pnode(CMUXHG, 0, 8, SWITCHIN, 1, 0), rnode(GOUT, 0, 9, 64) },
  { pnode(CMUXHG, 0, 8, SWITCHIN, 2, 0), rnode(GOUT, 0, 9, 29) },
  { pnode(CMUXHG, 0, 8, SWITCHIN, 3, 0), rnode(GOUT, 0, 9, 39) },
  { pnode(CMUXHG, 0, 8, SWITCHIN, 0, 1), rnode(GOUT, 0, 8, 68) },
  { pnode(CMUXHG, 0, 8, SWITCHIN, 1, 1), rnode(GOUT, 0, 8, 29) },
  { pnode(CMUXHG, 0, 8, SWITCHIN, 2, 1), rnode(GOUT, 0, 8, 55) },
  { pnode(CMUXHG, 0, 8, SWITCHIN, 3, 1), rnode(GOUT, 0, 8, 62) },
  { pnode(CMUXHG, 0, 8, BURSTCNT, -1, 0), rnode(GOUT, 0, 9, 13) },
  { pnode(CMUXHG, 0, 8, BURSTCNT, -1, 1), rnode(GOUT, 0, 8, 39) },
  { pnode(CMUXHG, 0, 8, BURSTCNT, -1, 2), rnode(GOUT, 0, 8, 13) },
  { pnode(CMUXHG, 0, 8, ENABLE, 0, -1), rnode(GOUT, 0, 9, 45) },
  { pnode(CMUXHG, 0, 8, ENABLE, 1, -1), rnode(GOUT, 0, 9, 68) },
  { pnode(CMUXHG, 0, 8, ENABLE, 2, -1), rnode(GOUT, 0, 8, 59) },
  { pnode(CMUXHG, 0, 8, ENABLE, 3, -1), rnode(GOUT, 0, 8, 45) },
  { pnode(CMUXHR, 0, 8, ENABLE, 0, -1), rnode(GOUT, 0, 9, 2) },
  { pnode(CMUXHR, 0, 8, ENABLE, 1, -1), rnode(GOUT, 0, 9, 61) },
  { pnode(CMUXHR, 0, 8, ENABLE, 2, -1), rnode(GOUT, 0, 9, 10) },
  { pnode(CMUXHR, 0, 8, ENABLE, 3, -1), rnode(GOUT, 0, 9, 3) },
  { pnode(CMUXHR, 0, 8, ENABLE, 4, -1), rnode(GOUT, 0, 9, 65) },
  { pnode(CMUXHR, 0, 8, ENABLE, 5, -1), rnode(GOUT, 0, 9, 58) },
  { pnode(CMUXHR, 0, 8, ENABLE, 6, -1), rnode(GOUT, 0, 8, 8) },
  { pnode(CMUXHR, 0, 8, ENABLE, 7, -1), rnode(GOUT, 0, 8, 2) },
  { pnode(CMUXHR, 0, 8, ENABLE, 8, -1), rnode(GOUT, 0, 8, 60) },
  { pnode(CMUXHR, 0, 8, ENABLE, 9, -1), rnode(GOUT, 0, 8, 10) },
  { pnode(CMUXHR, 0, 8, ENABLE, 10, -1), rnode(GOUT, 0, 8, 3) },
  { pnode(CMUXHR, 0, 8, ENABLE, 11, -1), rnode(GOUT, 0, 8, 63) },
  { pnode(CMUXP, 0, 55, CLKOUT, -1, 0), rnode(PCLK, 1, 21, 1) },
  { pnode(CMUXP, 0, 55, CLKOUT, -1, 1), rnode(PCLK, 1, 48, 7) },
  { pnode(CMUXP, 0, 55, CLKIN, -1, 0), rnode(DCMUX, 0, 35, 0) },
  { pnode(CMUXP, 0, 56, CLKOUT, -1, 0), rnode(PCLK, 1, 21, 0) },
  { pnode(CMUXP, 0, 56, CLKOUT, -1, 1), rnode(PCLK, 1, 48, 6) },
  { pnode(CMUXP, 0, 56, CLKIN, -1, 0), rnode(DCMUX, 0, 34, 0) },
  { pnode(CMUXP, 0, 57, CLKOUT, -1, 0), rnode(PCLK, 1, 21, 3) },
  { pnode(CMUXP, 0, 57, CLKOUT, -1, 1), rnode(PCLK, 1, 48, 9) },
  { pnode(CMUXP, 0, 57, CLKIN, -1, 0), rnode(DCMUX, 9, 42, 0) },
  { pnode(CMUXP, 0, 58, CLKOUT, -1, 0), rnode(PCLK, 1, 21, 2) },
  { pnode(CMUXP, 0, 58, CLKOUT, -1, 1), rnode(PCLK, 1, 48, 8) },
  { pnode(CMUXP, 0, 58, CLKIN, -1, 0), rnode(DCMUX, 9, 41, 0) },
  { pnode(CMUXP, 0, 59, CLKOUT, -1, 0), rnode(PCLK, 1, 21, 5) },
  { pnode(CMUXP, 0, 59, CLKOUT, -1, 1), rnode(PCLK, 1, 48, 11) },
  { pnode(CMUXP, 0, 59, CLKIN, -1, 0), rnode(DCMUX, 9, 50, 0) },
  { pnode(CMUXP, 0, 60, CLKOUT, -1, 0), rnode(PCLK, 1, 21, 4) },
  { pnode(CMUXP, 0, 60, CLKOUT, -1, 1), rnode(PCLK, 1, 48, 10) },
  { pnode(CMUXP, 0, 60, CLKIN, -1, 0), rnode(DCMUX, 9, 49, 0) },
  { pnode(CMUXCR, 5, 61, CLKOUT, 0, -1), rnode(RCLK, 0, 35, 16) },
  { pnode(CMUXCR, 5, 61, CLKOUT, 1, -1), rnode(RCLK, 0, 35, 17) },
  { pnode(CMUXCR, 5, 61, CLKOUT, 2, -1), rnode(RCLK, 0, 35, 18) },
  { pnode(CMUXCR, 5, 61, CLKOUT, 3, -1), rnode(RCLK, 0, 35, 19) },
  { pnode(CMUXCR, 5, 61, CLKOUT, 4, -1), rnode(RCLK, 0, 35, 20) },
  { pnode(CMUXCR, 5, 61, CLKOUT, 5, -1), rnode(RCLK, 0, 35, 21) },
  { pnode(CMUXCR, 5, 61, CLKFBOUT, -1, 0), rnode(RCLKFB, 13, 34, 0) },
  { pnode(CMUXCR, 5, 61, CLKFBOUT, -1, 1), rnode(RCLKFB, 13, 34, 2) },
  { pnode(CMUXCR, 5, 61, CLKIN, -1, 0), rnode(DCMUX, 1, 61, 0) },
  { pnode(CMUXCR, 5, 61, CLKIN, -1, 1), rnode(DCMUX, 1, 61, 2) },
  { pnode(CMUXCR, 5, 61, CLKIN, -1, 2), rnode(DCMUX, 1, 61, 4) },
  { pnode(CMUXCR, 5, 61, CLKIN, -1, 3), rnode(DCMUX, 1, 61, 6) },
  { pnode(CMUXCR, 5, 61, ENABLE, 0, -1), rnode(GOUT, 1, 61, 0) },
  { pnode(CMUXCR, 5, 61, ENABLE, 1, -1), rnode(GOUT, 1, 61, 10) },
  { pnode(CMUXCR, 5, 61, ENABLE, 2, -1), rnode(GOUT, 1, 61, 9) },
  { pnode(CMUXCR, 5, 61, ENABLE, 3, -1), rnode(GOUT, 1, 61, 11) },
  { pnode(CMUXCR, 5, 61, ENABLE, 4, -1), rnode(GOUT, 1, 61, 6) },
  { pnode(CMUXCR, 5, 61, ENABLE, 5, -1), rnode(GOUT, 1, 61, 7) },
  { pnode(CMUXVG, 28, 0, CLKOUT, 0, -1), rnode(GCLK, 0, 8, 4) },
  { pnode(CMUXVG, 28, 0, CLKOUT, 1, -1), rnode(GCLK, 0, 8, 5) },
  { pnode(CMUXVG, 28, 0, CLKOUT, 2, -1), rnode(GCLK, 0, 8, 6) },
  { pnode(CMUXVG, 28, 0, CLKOUT, 3, -1), rnode(GCLK, 0, 8, 7) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 0, -1), rnode(RCLK, 0, 4, 0) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 1, -1), rnode(RCLK, 0, 4, 1) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 2, -1), rnode(RCLK, 0, 4, 2) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 3, -1), rnode(RCLK, 0, 4, 3) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 4, -1), rnode(RCLK, 0, 4, 4) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 5, -1), rnode(RCLK, 0, 4, 5) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 6, -1), rnode(RCLK, 0, 4, 6) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 7, -1), rnode(RCLK, 0, 4, 7) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 8, -1), rnode(RCLK, 0, 4, 8) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 9, -1), rnode(RCLK, 0, 4, 9) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 10, -1), rnode(RCLK, 27, 4, 0) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 11, -1), rnode(RCLK, 27, 4, 1) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 12, -1), rnode(RCLK, 27, 4, 2) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 13, -1), rnode(RCLK, 27, 4, 3) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 14, -1), rnode(RCLK, 27, 4, 4) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 15, -1), rnode(RCLK, 27, 4, 5) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 16, -1), rnode(RCLK, 27, 4, 6) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 17, -1), rnode(RCLK, 27, 4, 7) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 18, -1), rnode(RCLK, 27, 4, 8) },
  { pnode(CMUXVR, 28, 0, CLKOUT, 19, -1), rnode(RCLK, 27, 4, 9) },
  { pnode(CMUXVG, 28, 0, CLKFBOUT, -1, 1), rnode(GCLKFB, 13, 4, 0) },
  { pnode(CMUXVG, 28, 0, CLKFBOUT, -1, 2), rnode(GCLKFB, 47, 4, 0) },
  { pnode(CMUXVG, 28, 0, SWITCHCLK, 0, -1), rnode(GIN, 25, 0, 16) },
  { pnode(CMUXVG, 28, 0, SWITCHCLK, 1, -1), rnode(GIN, 27, 0, 2) },
  { pnode(CMUXVG, 28, 0, SWITCHCLK, 2, -1), rnode(GIN, 25, 0, 14) },
  { pnode(CMUXVG, 28, 0, SWITCHCLK, 3, -1), rnode(GIN, 27, 0, 0) },
  { pnode(CMUXVG, 28, 0, SYN_EN, 0, -1), rnode(GIN, 25, 0, 15) },
  { pnode(CMUXVG, 28, 0, SYN_EN, 1, -1), rnode(GIN, 27, 0, 3) },
  { pnode(CMUXVG, 28, 0, SYN_EN, 2, -1), rnode(GIN, 25, 0, 13) },
  { pnode(CMUXVG, 28, 0, SYN_EN, 3, -1), rnode(GIN, 27, 0, 1) },
  { pnode(CMUXVG, 28, 0, CLKIN, -1, 0), rnode(DCMUX, 25, 0, 14) },
  { pnode(CMUXVG, 28, 0, CLKIN, -1, 1), rnode(DCMUX, 27, 0, 2) },
  { pnode(CMUXVG, 28, 0, CLKIN, -1, 2), rnode(DCMUX, 25, 0, 12) },
  { pnode(CMUXVG, 28, 0, CLKIN, -1, 3), rnode(DCMUX, 27, 0, 0) },
  { pnode(CMUXVR, 28, 0, CLKIN, -1, 0), rnode(DCMUX, 25, 0, 8) },
  { pnode(CMUXVR, 28, 0, CLKIN, -1, 1), rnode(DCMUX, 27, 0, 6) },
  { pnode(CMUXVR, 28, 0, CLKIN, -1, 2), rnode(DCMUX, 25, 0, 10) },
  { pnode(CMUXVR, 28, 0, CLKIN, -1, 3), rnode(DCMUX, 27, 0, 4) },
  { pnode(CMUXVG, 28, 0, SWITCHIN, 0, 0), rnode(GOUT, 25, 0, 32) },
  { pnode(CMUXVG, 28, 0, SWITCHIN, 1, 0), rnode(GOUT, 25, 0, 37) },
  { pnode(CMUXVG, 28, 0, SWITCHIN, 2, 0), rnode(GOUT, 27, 0, 2) },
  { pnode(CMUXVG, 28, 0, SWITCHIN, 3, 0), rnode(GOUT, 27, 0, 1) },
  { pnode(CMUXVG, 28, 0, SWITCHIN, 0, 1), rnode(GOUT, 25, 0, 35) },
  { pnode(CMUXVG, 28, 0, SWITCHIN, 1, 1), rnode(GOUT, 25, 0, 36) },
  { pnode(CMUXVG, 28, 0, SWITCHIN, 2, 1), rnode(GOUT, 27, 0, 6) },
  { pnode(CMUXVG, 28, 0, SWITCHIN, 3, 1), rnode(GOUT, 27, 0, 7) },
  { pnode(CMUXVG, 28, 0, BURSTCNT, -1, 0), rnode(GOUT, 25, 0, 26) },
  { pnode(CMUXVG, 28, 0, BURSTCNT, -1, 1), rnode(GOUT, 27, 0, 3) },
  { pnode(CMUXVG, 28, 0, BURSTCNT, -1, 2), rnode(GOUT, 27, 0, 8) },
  { pnode(CMUXVG, 28, 0, ENABLE, 0, -1), rnode(GOUT, 27, 0, 9) },
  { pnode(CMUXVG, 28, 0, ENABLE, 1, -1), rnode(GOUT, 27, 0, 4) },
  { pnode(CMUXVG, 28, 0, ENABLE, 2, -1), rnode(GOUT, 27, 0, 11) },
  { pnode(CMUXVG, 28, 0, ENABLE, 3, -1), rnode(GOUT, 27, 0, 5) },
  { pnode(CMUXVR, 28, 0, ENABLE, 0, -1), rnode(GOUT, 27, 0, 10) },
  { pnode(CMUXVR, 28, 0, ENABLE, 1, -1), rnode(GOUT, 27, 0, 0) },
  { pnode(CMUXVR, 28, 0, ENABLE, 2, -1), rnode(GOUT, 25, 0, 33) },
  { pnode(CMUXVR, 28, 0, ENABLE, 3, -1), rnode(GOUT, 25, 0, 31) },
  { pnode(CMUXVR, 28, 0, ENABLE, 4, -1), rnode(GOUT, 25, 0, 30) },
  { pnode(CMUXVR, 28, 0, ENABLE, 5, -1), rnode(GOUT, 25, 0, 29) },
  { pnode(CMUXVR, 28, 0, ENABLE, 6, -1), rnode(GOUT, 25, 0, 34) },
  { pnode(CMUXVR, 28, 0, ENABLE, 7, -1), rnode(GOUT, 25, 0, 28) },
  { pnode(CMUXVR, 28, 0, ENABLE, 8, -1), rnode(GOUT, 25, 0, 27) },
  { pnode(CMUXVR, 28, 0, ENABLE, 9, -1), rnode(GOUT, 25, 0, 38) },
  { pnode(CMUXVR, 28, 0, ENABLE, 10, -1), rnode(GOUT, 27, 0, 12) },
  { pnode(CMUXVR, 28, 0, ENABLE, 11, -1), rnode(GOUT, 27, 0, 17) },
  { pnode(CMUXVR, 28, 0, ENABLE, 12, -1), rnode(GOUT, 27, 0, 13) },
  { pnode(CMUXVR, 28, 0, ENABLE, 13, -1), rnode(GOUT, 27, 0, 18) },
  { pnode(CMUXVR, 28, 0, ENABLE, 14, -1), rnode(GOUT, 27, 0, 14) },
  { pnode(CMUXVR, 28, 0, ENABLE, 15, -1), rnode(GOUT, 27, 0, 19) },
  { pnode(CMUXVR, 28, 0, ENABLE, 16, -1), rnode(GOUT, 27, 0, 15) },
  { pnode(CMUXVR, 28, 0, ENABLE, 17, -1), rnode(GOUT, 27, 0, 20) },
  { pnode(CMUXVR, 28, 0, ENABLE, 18, -1), rnode(GOUT, 27, 0, 16) },
  { pnode(CMUXVR, 28, 0, ENABLE, 19, -1), rnode(GOUT, 27, 0, 21) },
  { pnode(CMUXVG, 28, 61, CLKOUT, 0, -1), rnode(GCLK, 0, 8, 12) },
  { pnode(CMUXVG, 28, 61, CLKOUT, 1, -1), rnode(GCLK, 0, 8, 13) },
  { pnode(CMUXVG, 28, 61, CLKOUT, 2, -1), rnode(GCLK, 0, 8, 14) },
  { pnode(CMUXVG, 28, 61, CLKOUT, 3, -1), rnode(GCLK, 0, 8, 15) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 0, -1), rnode(RCLK, 0, 35, 0) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 1, -1), rnode(RCLK, 0, 35, 1) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 2, -1), rnode(RCLK, 0, 35, 2) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 3, -1), rnode(RCLK, 0, 35, 3) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 4, -1), rnode(RCLK, 0, 35, 4) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 5, -1), rnode(RCLK, 0, 35, 5) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 6, -1), rnode(RCLK, 0, 35, 6) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 7, -1), rnode(RCLK, 0, 35, 7) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 8, -1), rnode(RCLK, 0, 35, 8) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 9, -1), rnode(RCLK, 0, 35, 9) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 10, -1), rnode(RCLK, 27, 35, 0) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 11, -1), rnode(RCLK, 27, 35, 1) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 12, -1), rnode(RCLK, 27, 35, 2) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 13, -1), rnode(RCLK, 27, 35, 3) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 14, -1), rnode(RCLK, 27, 35, 4) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 15, -1), rnode(RCLK, 27, 35, 5) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 16, -1), rnode(RCLK, 27, 35, 6) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 17, -1), rnode(RCLK, 27, 35, 7) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 18, -1), rnode(RCLK, 27, 35, 8) },
  { pnode(CMUXVR, 28, 61, CLKOUT, 19, -1), rnode(RCLK, 27, 35, 9) },
  { pnode(CMUXVG, 28, 61, CLKFBOUT, -1, 0), rnode(GCLKFB, 13, 34, 2) },
  { pnode(CMUXVG, 28, 61, CLKFBOUT, -1, 1), rnode(GCLKFB, 13, 34, 0) },
  { pnode(CMUXVG, 28, 61, CLKFBOUT, -1, 2), rnode(GCLKFB, 47, 34, 0) },
  { pnode(CMUXVG, 28, 61, SWITCHCLK, 0, -1), rnode(GIN, 25, 61, 16) },
  { pnode(CMUXVG, 28, 61, SWITCHCLK, 1, -1), rnode(GIN, 27, 61, 2) },
  { pnode(CMUXVG, 28, 61, SWITCHCLK, 2, -1), rnode(GIN, 25, 61, 14) },
  { pnode(CMUXVG, 28, 61, SWITCHCLK, 3, -1), rnode(GIN, 27, 61, 0) },
  { pnode(CMUXVG, 28, 61, SYN_EN, 0, -1), rnode(GIN, 25, 61, 15) },
  { pnode(CMUXVG, 28, 61, SYN_EN, 1, -1), rnode(GIN, 27, 61, 3) },
  { pnode(CMUXVG, 28, 61, SYN_EN, 2, -1), rnode(GIN, 25, 61, 13) },
  { pnode(CMUXVG, 28, 61, SYN_EN, 3, -1), rnode(GIN, 27, 61, 1) },
  { pnode(CMUXVG, 28, 61, CLKIN, -1, 0), rnode(DCMUX, 25, 61, 14) },
  { pnode(CMUXVG, 28, 61, CLKIN, -1, 1), rnode(DCMUX, 27, 61, 2) },
  { pnode(CMUXVG, 28, 61, CLKIN, -1, 2), rnode(DCMUX, 25, 61, 12) },
  { pnode(CMUXVG, 28, 61, CLKIN, -1, 3), rnode(DCMUX, 27, 61, 0) },
  { pnode(CMUXVR, 28, 61, CLKIN, -1, 0), rnode(DCMUX, 25, 61, 8) },
  { pnode(CMUXVR, 28, 61, CLKIN, -1, 1), rnode(DCMUX, 27, 61, 6) },
  { pnode(CMUXVR, 28, 61, CLKIN, -1, 2), rnode(DCMUX, 25, 61, 10) },
  { pnode(CMUXVR, 28, 61, CLKIN, -1, 3), rnode(DCMUX, 27, 61, 4) },
  { pnode(CMUXVG, 28, 61, SWITCHIN, 0, 0), rnode(GOUT, 25, 61, 32) },
  { pnode(CMUXVG, 28, 61, SWITCHIN, 1, 0), rnode(GOUT, 25, 61, 37) },
  { pnode(CMUXVG, 28, 61, SWITCHIN, 2, 0), rnode(GOUT, 27, 61, 2) },
  { pnode(CMUXVG, 28, 61, SWITCHIN, 3, 0), rnode(GOUT, 27, 61, 1) },
  { pnode(CMUXVG, 28, 61, SWITCHIN, 0, 1), rnode(GOUT, 25, 61, 35) },
  { pnode(CMUXVG, 28, 61, SWITCHIN, 1, 1), rnode(GOUT, 25, 61, 36) },
  { pnode(CMUXVG, 28, 61, SWITCHIN, 2, 1), rnode(GOUT, 27, 61, 6) },
  { pnode(CMUXVG, 28, 61, SWITCHIN, 3, 1), rnode(GOUT, 27, 61, 7) },
  { pnode(CMUXVG, 28, 61, BURSTCNT, -1, 0), rnode(GOUT, 25, 61, 26) },
  { pnode(CMUXVG, 28, 61, BURSTCNT, -1, 1), rnode(GOUT, 27, 61, 3) },
  { pnode(CMUXVG, 28, 61, BURSTCNT, -1, 2), rnode(GOUT, 27, 61, 8) },
  { pnode(CMUXVG, 28, 61, ENABLE, 0, -1), rnode(GOUT, 27, 61, 9) },
  { pnode(CMUXVG, 28, 61, ENABLE, 1, -1), rnode(GOUT, 27, 61, 4) },
  { pnode(CMUXVG, 28, 61, ENABLE, 2, -1), rnode(GOUT, 27, 61, 11) },
  { pnode(CMUXVG, 28, 61, ENABLE, 3, -1), rnode(GOUT, 27, 61, 5) },
  { pnode(CMUXVR, 28, 61, ENABLE, 0, -1), rnode(GOUT, 27, 61, 10) },
  { pnode(CMUXVR, 28, 61, ENABLE, 1, -1), rnode(GOUT, 27, 61, 0) },
  { pnode(CMUXVR, 28, 61, ENABLE, 2, -1), rnode(GOUT, 25, 61, 33) },
  { pnode(CMUXVR, 28, 61, ENABLE, 3, -1), rnode(GOUT, 25, 61, 31) },
  { pnode(CMUXVR, 28, 61, ENABLE, 4, -1), rnode(GOUT, 25, 61, 30) },
  { pnode(CMUXVR, 28, 61, ENABLE, 5, -1), rnode(GOUT, 25, 61, 29) },
  { pnode(CMUXVR, 28, 61, ENABLE, 6, -1), rnode(GOUT, 25, 61, 34) },
  { pnode(CMUXVR, 28, 61, ENABLE, 7, -1), rnode(GOUT, 25, 61, 28) },
  { pnode(CMUXVR, 28, 61, ENABLE, 8, -1), rnode(GOUT, 25, 61, 27) },
  { pnode(CMUXVR, 28, 61, ENABLE, 9, -1), rnode(GOUT, 25, 61, 38) },
  { pnode(CMUXVR, 28, 61, ENABLE, 10, -1), rnode(GOUT, 27, 61, 12) },
  { pnode(CMUXVR, 28, 61, ENABLE, 11, -1), rnode(GOUT, 27, 61, 17) },
  { pnode(CMUXVR, 28, 61, ENABLE, 12, -1), rnode(GOUT, 27, 61, 13) },
  { pnode(CMUXVR, 28, 61, ENABLE, 13, -1), rnode(GOUT, 27, 61, 18) },
  { pnode(CMUXVR, 28, 61, ENABLE, 14, -1), rnode(GOUT, 27, 61, 14) },
  { pnode(CMUXVR, 28, 61, ENABLE, 15, -1), rnode(GOUT, 27, 61, 19) },
  { pnode(CMUXVR, 28, 61, ENABLE, 16, -1), rnode(GOUT, 27, 61, 15) },
  { pnode(CMUXVR, 28, 61, ENABLE, 17, -1), rnode(GOUT, 27, 61, 20) },
  { pnode(CMUXVR, 28, 61, ENABLE, 18, -1), rnode(GOUT, 27, 61, 16) },
  { pnode(CMUXVR, 28, 61, ENABLE, 19, -1), rnode(GOUT, 27, 61, 21) },
  { pnode(CMUXCR, 68, 2, CLKOUT, 0, -1), rnode(RCLK, 27, 4, 16) },
  { pnode(CMUXCR, 68, 2, CLKOUT, 1, -1), rnode(RCLK, 27, 4, 17) },
  { pnode(CMUXCR, 68, 2, CLKOUT, 2, -1), rnode(RCLK, 27, 4, 18) },
  { pnode(CMUXCR, 68, 2, CLKOUT, 3, -1), rnode(RCLK, 27, 4, 19) },
  { pnode(CMUXCR, 68, 2, CLKOUT, 4, -1), rnode(RCLK, 27, 4, 20) },
  { pnode(CMUXCR, 68, 2, CLKOUT, 5, -1), rnode(RCLK, 27, 4, 21) },
  { pnode(CMUXCR, 68, 2, CLKFBOUT, -1, 0), rnode(RCLKFB, 47, 4, 0) },
  { pnode(CMUXCR, 68, 2, CLKIN, -1, 0), rnode(DCMUX, 67, 0, 14) },
  { pnode(CMUXCR, 68, 2, CLKIN, -1, 1), rnode(DCMUX, 67, 0, 12) },
  { pnode(CMUXCR, 68, 2, CLKIN, -1, 2), rnode(DCMUX, 67, 0, 10) },
  { pnode(CMUXCR, 68, 2, CLKIN, -1, 3), rnode(DCMUX, 67, 0, 8) },
  { pnode(CMUXCR, 68, 2, ENABLE, 0, -1), rnode(GOUT, 67, 0, 33) },
  { pnode(CMUXCR, 68, 2, ENABLE, 1, -1), rnode(GOUT, 67, 0, 32) },
  { pnode(CMUXCR, 68, 2, ENABLE, 2, -1), rnode(GOUT, 67, 0, 37) },
  { pnode(CMUXCR, 68, 2, ENABLE, 3, -1), rnode(GOUT, 67, 0, 35) },
  { pnode(CMUXCR, 68, 2, ENABLE, 4, -1), rnode(GOUT, 67, 0, 36) },
  { pnode(CMUXCR, 68, 2, ENABLE, 5, -1), rnode(GOUT, 67, 0, 26) },
  { pnode(CMUXHG, 68, 8, CLKOUT, 0, -1), rnode(GCLK, 0, 8, 8) },
  { pnode(CMUXHG, 68, 8, CLKOUT, 1, -1), rnode(GCLK, 0, 8, 9) },
  { pnode(CMUXHG, 68, 8, CLKOUT, 2, -1), rnode(GCLK, 0, 8, 10) },
  { pnode(CMUXHG, 68, 8, CLKOUT, 3, -1), rnode(GCLK, 0, 8, 11) },
  { pnode(CMUXHR, 68, 8, CLKOUT, 0, -1), rnode(RCLK, 27, 35, 10) },
  { pnode(CMUXHR, 68, 8, CLKOUT, 1, -1), rnode(RCLK, 27, 35, 11) },
  { pnode(CMUXHR, 68, 8, CLKOUT, 2, -1), rnode(RCLK, 27, 35, 12) },
  { pnode(CMUXHR, 68, 8, CLKOUT, 3, -1), rnode(RCLK, 27, 35, 13) },
  { pnode(CMUXHR, 68, 8, CLKOUT, 4, -1), rnode(RCLK, 27, 35, 14) },
  { pnode(CMUXHR, 68, 8, CLKOUT, 5, -1), rnode(RCLK, 27, 35, 15) },
  { pnode(CMUXHR, 68, 8, CLKOUT, 6, -1), rnode(RCLK, 27, 4, 10) },
  { pnode(CMUXHR, 68, 8, CLKOUT, 7, -1), rnode(RCLK, 27, 4, 11) },
  { pnode(CMUXHR, 68, 8, CLKOUT, 8, -1), rnode(RCLK, 27, 4, 12) },
  { pnode(CMUXHR, 68, 8, CLKOUT, 9, -1), rnode(RCLK, 27, 4, 13) },
  { pnode(CMUXHR, 68, 8, CLKOUT, 10, -1), rnode(RCLK, 27, 4, 14) },
  { pnode(CMUXHR, 68, 8, CLKOUT, 11, -1), rnode(RCLK, 27, 4, 15) },
  { pnode(CMUXHG, 68, 8, SWITCHCLK, 0, -1), rnode(GIN, 68, 9, 77) },
  { pnode(CMUXHG, 68, 8, SWITCHCLK, 1, -1), rnode(GIN, 68, 9, 79) },
  { pnode(CMUXHG, 68, 8, SWITCHCLK, 2, -1), rnode(GIN, 68, 8, 1) },
  { pnode(CMUXHG, 68, 8, SWITCHCLK, 3, -1), rnode(GIN, 68, 8, 2) },
  { pnode(CMUXHG, 68, 8, SYN_EN, 0, -1), rnode(GIN, 68, 9, 78) },
  { pnode(CMUXHG, 68, 8, SYN_EN, 1, -1), rnode(GIN, 68, 9, 80) },
  { pnode(CMUXHG, 68, 8, SYN_EN, 2, -1), rnode(GIN, 68, 8, 0) },
  { pnode(CMUXHG, 68, 8, SYN_EN, 3, -1), rnode(GIN, 68, 8, 3) },
  { pnode(CMUXHG, 68, 8, CLKIN, -1, 0), rnode(DCMUX, 68, 9, 12) },
  { pnode(CMUXHG, 68, 8, CLKIN, -1, 1), rnode(DCMUX, 68, 9, 14) },
  { pnode(CMUXHG, 68, 8, CLKIN, -1, 2), rnode(DCMUX, 68, 8, 3) },
  { pnode(CMUXHG, 68, 8, CLKIN, -1, 3), rnode(DCMUX, 68, 8, 1) },
  { pnode(CMUXHR, 68, 8, CLKIN, -1, 0), rnode(DCMUX, 68, 9, 13) },
  { pnode(CMUXHR, 68, 8, CLKIN, -1, 1), rnode(DCMUX, 68, 9, 15) },
  { pnode(CMUXHR, 68, 8, CLKIN, -1, 2), rnode(DCMUX, 68, 8, 0) },
  { pnode(CMUXHR, 68, 8, CLKIN, -1, 3), rnode(DCMUX, 68, 8, 2) },
  { pnode(CMUXHG, 68, 8, SWITCHIN, 0, 0), rnode(GOUT, 68, 9, 66) },
  { pnode(CMUXHG, 68, 8, SWITCHIN, 1, 0), rnode(GOUT, 68, 9, 65) },
  { pnode(CMUXHG, 68, 8, SWITCHIN, 2, 0), rnode(GOUT, 68, 9, 71) },
  { pnode(CMUXHG, 68, 8, SWITCHIN, 3, 0), rnode(GOUT, 68, 9, 70) },
  { pnode(CMUXHG, 68, 8, SWITCHIN, 0, 1), rnode(GOUT, 68, 8, 2) },
  { pnode(CMUXHG, 68, 8, SWITCHIN, 1, 1), rnode(GOUT, 68, 8, 3) },
  { pnode(CMUXHG, 68, 8, SWITCHIN, 2, 1), rnode(GOUT, 68, 8, 7) },
  { pnode(CMUXHG, 68, 8, SWITCHIN, 3, 1), rnode(GOUT, 68, 8, 6) },
  { pnode(CMUXHG, 68, 8, BURSTCNT, -1, 0), rnode(GOUT, 68, 9, 69) },
  { pnode(CMUXHG, 68, 8, BURSTCNT, -1, 1), rnode(GOUT, 68, 8, 0) },
  { pnode(CMUXHG, 68, 8, BURSTCNT, -1, 2), rnode(GOUT, 68, 8, 1) },
  { pnode(CMUXHG, 68, 8, ENABLE, 0, -1), rnode(GOUT, 68, 9, 68) },
  { pnode(CMUXHG, 68, 8, ENABLE, 1, -1), rnode(GOUT, 68, 9, 67) },
  { pnode(CMUXHG, 68, 8, ENABLE, 2, -1), rnode(GOUT, 68, 8, 4) },
  { pnode(CMUXHG, 68, 8, ENABLE, 3, -1), rnode(GOUT, 68, 8, 5) },
  { pnode(CMUXHR, 68, 8, ENABLE, 0, -1), rnode(GOUT, 68, 9, 9) },
  { pnode(CMUXHR, 68, 8, ENABLE, 1, -1), rnode(GOUT, 68, 9, 22) },
  { pnode(CMUXHR, 68, 8, ENABLE, 2, -1), rnode(GOUT, 68, 9, 32) },
  { pnode(CMUXHR, 68, 8, ENABLE, 3, -1), rnode(GOUT, 68, 9, 55) },
  { pnode(CMUXHR, 68, 8, ENABLE, 4, -1), rnode(GOUT, 68, 9, 63) },
  { pnode(CMUXHR, 68, 8, ENABLE, 5, -1), rnode(GOUT, 68, 9, 64) },
  { pnode(CMUXHR, 68, 8, ENABLE, 6, -1), rnode(GOUT, 68, 8, 40) },
  { pnode(CMUXHR, 68, 8, ENABLE, 7, -1), rnode(GOUT, 68, 8, 27) },
  { pnode(CMUXHR, 68, 8, ENABLE, 8, -1), rnode(GOUT, 68, 8, 17) },
  { pnode(CMUXHR, 68, 8, ENABLE, 9, -1), rnode(GOUT, 68, 8, 9) },
  { pnode(CMUXHR, 68, 8, ENABLE, 10, -1), rnode(GOUT, 68, 8, 10) },
  { pnode(CMUXHR, 68, 8, ENABLE, 11, -1), rnode(GOUT, 68, 8, 8) },
  { pnode(CMUXCR, 68, 59, CLKOUT, 0, -1), rnode(RCLK, 27, 35, 16) },
  { pnode(CMUXCR, 68, 59, CLKOUT, 1, -1), rnode(RCLK, 27, 35, 17) },
  { pnode(CMUXCR, 68, 59, CLKOUT, 2, -1), rnode(RCLK, 27, 35, 18) },
  { pnode(CMUXCR, 68, 59, CLKOUT, 3, -1), rnode(RCLK, 27, 35, 19) },
  { pnode(CMUXCR, 68, 59, CLKOUT, 4, -1), rnode(RCLK, 27, 35, 20) },
  { pnode(CMUXCR, 68, 59, CLKOUT, 5, -1), rnode(RCLK, 27, 35, 21) },
  { pnode(CMUXCR, 68, 59, CLKFBOUT, -1, 0), rnode(RCLKFB, 47, 34, 0) },
  { pnode(CMUXCR, 68, 59, CLKIN, -1, 0), rnode(DCMUX, 67, 61, 14) },
  { pnode(CMUXCR, 68, 59, CLKIN, -1, 1), rnode(DCMUX, 67, 61, 12) },
  { pnode(CMUXCR, 68, 59, CLKIN, -1, 2), rnode(DCMUX, 67, 61, 10) },
  { pnode(CMUXCR, 68, 59, CLKIN, -1, 3), rnode(DCMUX, 67, 61, 8) },
  { pnode(CMUXCR, 68, 59, ENABLE, 0, -1), rnode(GOUT, 67, 61, 33) },
  { pnode(CMUXCR, 68, 59, ENABLE, 1, -1), rnode(GOUT, 67, 61, 32) },
  { pnode(CMUXCR, 68, 59, ENABLE, 2, -1), rnode(GOUT, 67, 61, 37) },
  { pnode(CMUXCR, 68, 59, ENABLE, 3, -1), rnode(GOUT, 67, 61, 35) },
  { pnode(CMUXCR, 68, 59, ENABLE, 4, -1), rnode(GOUT, 67, 61, 36) },
  { pnode(CMUXCR, 68, 59, ENABLE, 5, -1), rnode(GOUT, 67, 61, 26) },
  { pnode(FPLL, 0, 0, ATPGMODE, -1, -1), rnode(GOUT, 1, 0, 5) },
  { pnode(FPLL, 0, 0, CLKEN, -1, 0), rnode(GOUT, 1, 0, 3) },
  { pnode(FPLL, 0, 0, CLKEN, -1, 1), rnode(GOUT, 1, 0, 4) },
  { pnode(FPLL, 0, 0, CNT_SEL, -1, 0), rnode(GOUT, 1, 0, 17) },
  { pnode(FPLL, 0, 0, CNT_SEL, -1, 1), rnode(GOUT, 1, 0, 12) },
  { pnode(FPLL, 0, 0, CNT_SEL, -1, 2), rnode(GOUT, 1, 0, 1) },
  { pnode(FPLL, 0, 0, CNT_SEL, -1, 3), rnode(GOUT, 1, 0, 2) },
  { pnode(FPLL, 0, 0, CNT_SEL, -1, 4), rnode(GOUT, 1, 0, 8) },
  { pnode(FPLL, 0, 0, REG_BYTE_EN, -1, 0), rnode(GOUT, 1, 0, 18) },
  { pnode(FPLL, 0, 0, REG_BYTE_EN, -1, 1), rnode(GOUT, 1, 0, 13) },
  { pnode(FPLL, 0, 0, REG_CLK, -1, -1), rnode(GOUT, 1, 0, 14) },
  { pnode(FPLL, 0, 0, REG_MDIO_DIS, -1, -1), rnode(GOUT, 1, 0, 19) },
  { pnode(FPLL, 0, 0, REG_READ, -1, -1), rnode(GOUT, 1, 0, 15) },
  { pnode(FPLL, 0, 0, REG_REG_ADDR, -1, 0), rnode(GOUT, 1, 0, 24) },
  { pnode(FPLL, 0, 0, REG_REG_ADDR, -1, 1), rnode(GOUT, 1, 0, 23) },
  { pnode(FPLL, 0, 0, REG_REG_ADDR, -1, 2), rnode(GOUT, 1, 0, 22) },
  { pnode(FPLL, 0, 0, REG_REG_ADDR, -1, 3), rnode(GOUT, 1, 0, 21) },
  { pnode(FPLL, 0, 0, REG_REG_ADDR, -1, 4), rnode(GOUT, 1, 0, 16) },
  { pnode(FPLL, 0, 0, REG_REG_ADDR, -1, 5), rnode(GOUT, 1, 0, 20) },
  { pnode(FPLL, 0, 0, REG_RST_N, -1, -1), rnode(GOUT, 1, 0, 25) },
  { pnode(FPLL, 0, 0, REG_SER_SHIFT_LOAD, -1, -1), rnode(GOUT, 1, 0, 50) },
  { pnode(FPLL, 0, 0, REG_WRITE, -1, -1), rnode(GOUT, 1, 0, 49) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 0), rnode(GOUT, 1, 0, 30) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 1), rnode(GOUT, 1, 0, 29) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 2), rnode(GOUT, 1, 0, 34) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 3), rnode(GOUT, 1, 0, 28) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 4), rnode(GOUT, 1, 0, 27) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 5), rnode(GOUT, 1, 0, 38) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 6), rnode(GOUT, 1, 0, 43) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 7), rnode(GOUT, 1, 0, 39) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 8), rnode(GOUT, 1, 0, 44) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 9), rnode(GOUT, 1, 0, 40) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 10), rnode(GOUT, 1, 0, 45) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 11), rnode(GOUT, 1, 0, 41) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 12), rnode(GOUT, 1, 0, 46) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 13), rnode(GOUT, 1, 0, 42) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 14), rnode(GOUT, 1, 0, 47) },
  { pnode(FPLL, 0, 0, REG_WRITEDATA, -1, 15), rnode(GOUT, 1, 0, 48) },
  { pnode(FPLL, 0, 0, EXTSWITCH, -1, -1), rnode(GOUT, 1, 0, 31) },
  { pnode(FPLL, 0, 0, FBCLK_IN_R, -1, -1), rnode(DCMUX, 0, 1, 4) },
  { pnode(FPLL, 0, 0, CSR_TEST, -1, -1), rnode(GOUT, 1, 0, 33) },
  { pnode(FPLL, 0, 0, NRESET, -1, -1), rnode(GOUT, 1, 0, 32) },
  { pnode(FPLL, 0, 0, PFDEN, -1, -1), rnode(GOUT, 1, 0, 37) },
  { pnode(FPLL, 0, 0, PHASE_EN, -1, -1), rnode(GOUT, 1, 0, 35) },
  { pnode(FPLL, 0, 0, SCANEN, -1, -1), rnode(GOUT, 1, 0, 36) },
  { pnode(FPLL, 0, 0, UP_DN, -1, -1), rnode(GOUT, 1, 0, 26) },
  { pnode(FPLL, 0, 0, CLK0_BAD, -1, -1), rnode(GIN, 1, 0, 0) },
  { pnode(FPLL, 0, 0, CLK1_BAD, -1, -1), rnode(GIN, 1, 0, 1) },
  { pnode(FPLL, 0, 0, CLKSEL, -1, -1), rnode(GIN, 1, 0, 2) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 0), rnode(GIN, 1, 0, 20) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 1), rnode(GIN, 1, 0, 21) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 2), rnode(GIN, 1, 0, 22) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 3), rnode(GIN, 1, 0, 23) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 4), rnode(GIN, 1, 0, 24) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 5), rnode(GIN, 1, 0, 25) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 6), rnode(GIN, 1, 0, 12) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 7), rnode(GIN, 1, 0, 11) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 8), rnode(GIN, 1, 0, 10) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 9), rnode(GIN, 1, 0, 9) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 10), rnode(GIN, 1, 0, 8) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 11), rnode(GIN, 1, 0, 7) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 12), rnode(GIN, 1, 0, 6) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 13), rnode(GIN, 1, 0, 5) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 14), rnode(GIN, 1, 0, 4) },
  { pnode(FPLL, 0, 0, REG_READDATA, -1, 15), rnode(GIN, 1, 0, 3) },
  { pnode(FPLL, 0, 0, LOCK, -1, -1), rnode(GIN, 1, 0, 19) },
  { pnode(FPLL, 0, 0, PHASE_DONE, -1, -1), rnode(GIN, 1, 0, 18) },
  { pnode(FPLL, 0, 13, ATPGMODE, -1, -1), rnode(GOUT, 9, 27, 17) },
  { pnode(FPLL, 0, 13, CLKEN, -1, 0), rnode(GOUT, 9, 28, 53) },
  { pnode(FPLL, 0, 13, CLKEN, -1, 1), rnode(GOUT, 9, 28, 52) },
  { pnode(FPLL, 0, 13, CNT_SEL, -1, 0), rnode(GOUT, 9, 27, 69) },
  { pnode(FPLL, 0, 13, CNT_SEL, -1, 1), rnode(GOUT, 9, 27, 67) },
  { pnode(FPLL, 0, 13, CNT_SEL, -1, 2), rnode(GOUT, 9, 27, 66) },
  { pnode(FPLL, 0, 13, CNT_SEL, -1, 3), rnode(GOUT, 9, 27, 53) },
  { pnode(FPLL, 0, 13, CNT_SEL, -1, 4), rnode(GOUT, 9, 27, 52) },
  { pnode(FPLL, 0, 13, REG_BYTE_EN, -1, 0), rnode(GOUT, 9, 25, 13) },
  { pnode(FPLL, 0, 13, REG_BYTE_EN, -1, 1), rnode(GOUT, 9, 27, 71) },
  { pnode(FPLL, 0, 13, REG_CLK, -1, -1), rnode(DCMUX, 9, 27, 2) },
  { pnode(FPLL, 0, 13, REG_MDIO_DIS, -1, -1), rnode(GOUT, 9, 25, 17) },
  { pnode(FPLL, 0, 13, REG_READ, -1, -1), rnode(GOUT, 9, 25, 18) },
  { pnode(FPLL, 0, 13, REG_REG_ADDR, -1, 0), rnode(GOUT, 9, 27, 49) },
  { pnode(FPLL, 0, 13, REG_REG_ADDR, -1, 1), rnode(GOUT, 9, 27, 48) },
  { pnode(FPLL, 0, 13, REG_REG_ADDR, -1, 2), rnode(GOUT, 9, 27, 35) },
  { pnode(FPLL, 0, 13, REG_REG_ADDR, -1, 3), rnode(GOUT, 9, 27, 34) },
  { pnode(FPLL, 0, 13, REG_REG_ADDR, -1, 4), rnode(GOUT, 9, 27, 32) },
  { pnode(FPLL, 0, 13, REG_REG_ADDR, -1, 5), rnode(GOUT, 9, 27, 31) },
  { pnode(FPLL, 0, 13, REG_RST_N, -1, -1), rnode(GOUT, 9, 28, 71) },
  { pnode(FPLL, 0, 13, REG_SER_SHIFT_LOAD, -1, -1), rnode(GOUT, 9, 25, 14) },
  { pnode(FPLL, 0, 13, REG_WRITE, -1, -1), rnode(GOUT, 9, 25, 32) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 0), rnode(GOUT, 9, 24, 35) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 1), rnode(GOUT, 9, 24, 34) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 2), rnode(GOUT, 9, 24, 32) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 3), rnode(GOUT, 9, 24, 31) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 4), rnode(GOUT, 9, 24, 18) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 5), rnode(GOUT, 9, 24, 17) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 6), rnode(GOUT, 9, 24, 14) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 7), rnode(GOUT, 9, 24, 13) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 8), rnode(GOUT, 9, 25, 71) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 9), rnode(GOUT, 9, 25, 69) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 10), rnode(GOUT, 9, 25, 67) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 11), rnode(GOUT, 9, 25, 66) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 12), rnode(GOUT, 9, 25, 53) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 13), rnode(GOUT, 9, 25, 52) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 14), rnode(GOUT, 9, 25, 49) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 15), rnode(GOUT, 9, 25, 48) },
  { pnode(FPLL, 0, 13, EXTSWITCH, -1, -1), rnode(GOUT, 9, 20, 14) },
  { pnode(FPLL, 0, 13, CSR_TEST, -1, -1), rnode(GOUT, 9, 27, 14) },
  { pnode(FPLL, 0, 13, NRESET, -1, -1), rnode(GOUT, 9, 28, 48) },
  { pnode(FPLL, 0, 13, PFDEN, -1, -1), rnode(GOUT, 9, 28, 67) },
  { pnode(FPLL, 0, 13, PHASE_EN, -1, -1), rnode(GOUT, 9, 25, 31) },
  { pnode(FPLL, 0, 13, SCANEN, -1, -1), rnode(GOUT, 9, 27, 18) },
  { pnode(FPLL, 0, 13, UP_DN, -1, -1), rnode(GOUT, 9, 20, 13) },
  { pnode(FPLL, 0, 13, CLK0_BAD, -1, -1), rnode(GIN, 9, 20, 19) },
  { pnode(FPLL, 0, 13, CLK1_BAD, -1, -1), rnode(GIN, 9, 20, 18) },
  { pnode(FPLL, 0, 13, CLKSEL, -1, -1), rnode(GIN, 9, 20, 15) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 0), rnode(GIN, 9, 25, 80) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 1), rnode(GIN, 9, 25, 79) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 2), rnode(GIN, 9, 25, 76) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 3), rnode(GIN, 9, 25, 75) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 4), rnode(GIN, 9, 25, 60) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 5), rnode(GIN, 9, 25, 59) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 6), rnode(GIN, 9, 25, 56) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 7), rnode(GIN, 9, 25, 55) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 8), rnode(GIN, 9, 24, 39) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 9), rnode(GIN, 9, 24, 38) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 10), rnode(GIN, 9, 24, 35) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 11), rnode(GIN, 9, 24, 34) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 12), rnode(GIN, 9, 24, 19) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 13), rnode(GIN, 9, 24, 18) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 14), rnode(GIN, 9, 24, 15) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 15), rnode(GIN, 9, 24, 14) },
  { pnode(FPLL, 0, 13, LOCK, -1, -1), rnode(GIN, 9, 28, 60) },
  { pnode(FPLL, 0, 13, PHASE_DONE, -1, -1), rnode(GIN, 9, 25, 38) },
  { pnode(FPLL, 0, 29, ATPGMODE, -1, -1), rnode(GOUT, 0, 32, 67) },
  { pnode(FPLL, 0, 29, CLKEN, -1, 0), rnode(GOUT, 0, 31, 31) },
  { pnode(FPLL, 0, 29, CLKEN, -1, 1), rnode(GOUT, 0, 31, 32) },
  { pnode(FPLL, 0, 29, CNT_SEL, -1, 0), rnode(GOUT, 0, 32, 14) },
  { pnode(FPLL, 0, 29, CNT_SEL, -1, 1), rnode(GOUT, 0, 32, 17) },
  { pnode(FPLL, 0, 29, CNT_SEL, -1, 2), rnode(GOUT, 0, 32, 18) },
  { pnode(FPLL, 0, 29, CNT_SEL, -1, 3), rnode(GOUT, 0, 32, 31) },
  { pnode(FPLL, 0, 29, CNT_SEL, -1, 4), rnode(GOUT, 0, 32, 32) },
  { pnode(FPLL, 0, 29, REG_BYTE_EN, -1, 0), rnode(GOUT, 0, 34, 71) },
  { pnode(FPLL, 0, 29, REG_BYTE_EN, -1, 1), rnode(GOUT, 0, 32, 13) },
  { pnode(FPLL, 0, 29, REG_CLK, -1, -1), rnode(DCMUX, 0, 31, 1) },
  { pnode(FPLL, 0, 29, REG_MDIO_DIS, -1, -1), rnode(GOUT, 0, 34, 67) },
  { pnode(FPLL, 0, 29, REG_READ, -1, -1), rnode(GOUT, 0, 34, 66) },
  { pnode(FPLL, 0, 29, REG_REG_ADDR, -1, 0), rnode(GOUT, 0, 32, 34) },
  { pnode(FPLL, 0, 29, REG_REG_ADDR, -1, 1), rnode(GOUT, 0, 32, 35) },
  { pnode(FPLL, 0, 29, REG_REG_ADDR, -1, 2), rnode(GOUT, 0, 32, 48) },
  { pnode(FPLL, 0, 29, REG_REG_ADDR, -1, 3), rnode(GOUT, 0, 32, 49) },
  { pnode(FPLL, 0, 29, REG_REG_ADDR, -1, 4), rnode(GOUT, 0, 32, 52) },
  { pnode(FPLL, 0, 29, REG_REG_ADDR, -1, 5), rnode(GOUT, 0, 32, 53) },
  { pnode(FPLL, 0, 29, REG_RST_N, -1, -1), rnode(GOUT, 0, 31, 13) },
  { pnode(FPLL, 0, 29, REG_SER_SHIFT_LOAD, -1, -1), rnode(GOUT, 0, 34, 69) },
  { pnode(FPLL, 0, 29, REG_WRITE, -1, -1), rnode(GOUT, 0, 34, 52) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 0), rnode(GOUT, 0, 35, 48) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 1), rnode(GOUT, 0, 35, 49) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 2), rnode(GOUT, 0, 35, 52) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 3), rnode(GOUT, 0, 35, 53) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 4), rnode(GOUT, 0, 35, 66) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 5), rnode(GOUT, 0, 35, 67) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 6), rnode(GOUT, 0, 35, 69) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 7), rnode(GOUT, 0, 35, 71) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 8), rnode(GOUT, 0, 34, 13) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 9), rnode(GOUT, 0, 34, 14) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 10), rnode(GOUT, 0, 34, 17) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 11), rnode(GOUT, 0, 34, 18) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 12), rnode(GOUT, 0, 34, 31) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 13), rnode(GOUT, 0, 34, 32) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 14), rnode(GOUT, 0, 34, 34) },
  { pnode(FPLL, 0, 29, REG_WRITEDATA, -1, 15), rnode(GOUT, 0, 34, 35) },
  { pnode(FPLL, 0, 29, EXTSWITCH, -1, -1), rnode(GOUT, 9, 39, 69) },
  { pnode(FPLL, 0, 29, FBCLK_IN_L, -1, -1), rnode(DCMUX, 0, 60, 6) },
  { pnode(FPLL, 0, 29, CSR_TEST, -1, -1), rnode(GOUT, 0, 32, 69) },
  { pnode(FPLL, 0, 29, NRESET, -1, -1), rnode(GOUT, 0, 31, 35) },
  { pnode(FPLL, 0, 29, PFDEN, -1, -1), rnode(GOUT, 0, 31, 17) },
  { pnode(FPLL, 0, 29, PHASE_EN, -1, -1), rnode(GOUT, 0, 34, 53) },
  { pnode(FPLL, 0, 29, SCANEN, -1, -1), rnode(GOUT, 0, 32, 66) },
  { pnode(FPLL, 0, 29, UP_DN, -1, -1), rnode(GOUT, 9, 39, 71) },
  { pnode(FPLL, 0, 29, CLK0_BAD, -1, -1), rnode(GIN, 9, 39, 75) },
  { pnode(FPLL, 0, 29, CLK1_BAD, -1, -1), rnode(GIN, 9, 39, 76) },
  { pnode(FPLL, 0, 29, CLKSEL, -1, -1), rnode(GIN, 9, 39, 79) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 0), rnode(GIN, 0, 34, 14) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 1), rnode(GIN, 0, 34, 15) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 2), rnode(GIN, 0, 34, 18) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 3), rnode(GIN, 0, 34, 19) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 4), rnode(GIN, 0, 34, 34) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 5), rnode(GIN, 0, 34, 35) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 6), rnode(GIN, 0, 34, 38) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 7), rnode(GIN, 0, 34, 39) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 8), rnode(GIN, 0, 35, 55) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 9), rnode(GIN, 0, 35, 56) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 10), rnode(GIN, 0, 35, 59) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 11), rnode(GIN, 0, 35, 60) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 12), rnode(GIN, 0, 35, 75) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 13), rnode(GIN, 0, 35, 76) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 14), rnode(GIN, 0, 35, 79) },
  { pnode(FPLL, 0, 29, REG_READDATA, -1, 15), rnode(GIN, 0, 35, 80) },
  { pnode(FPLL, 0, 29, LOCK, -1, -1), rnode(GIN, 0, 31, 34) },
  { pnode(FPLL, 0, 29, PHASE_DONE, -1, -1), rnode(GIN, 0, 34, 56) },
  { pnode(FPLL, 0, 53, ATPGMODE, -1, -1), rnode(GOUT, 1, 61, 5) },
  { pnode(FPLL, 0, 53, CLKEN, -1, 0), rnode(GOUT, 1, 61, 3) },
  { pnode(FPLL, 0, 53, CLKEN, -1, 1), rnode(GOUT, 1, 61, 4) },
  { pnode(FPLL, 0, 53, CNT_SEL, -1, 0), rnode(GOUT, 1, 61, 17) },
  { pnode(FPLL, 0, 53, CNT_SEL, -1, 1), rnode(GOUT, 1, 61, 12) },
  { pnode(FPLL, 0, 53, CNT_SEL, -1, 2), rnode(GOUT, 1, 61, 1) },
  { pnode(FPLL, 0, 53, CNT_SEL, -1, 3), rnode(GOUT, 1, 61, 2) },
  { pnode(FPLL, 0, 53, CNT_SEL, -1, 4), rnode(GOUT, 1, 61, 8) },
  { pnode(FPLL, 0, 53, REG_BYTE_EN, -1, 0), rnode(GOUT, 1, 61, 18) },
  { pnode(FPLL, 0, 53, REG_BYTE_EN, -1, 1), rnode(GOUT, 1, 61, 13) },
  { pnode(FPLL, 0, 53, REG_CLK, -1, -1), rnode(GOUT, 1, 61, 14) },
  { pnode(FPLL, 0, 53, REG_MDIO_DIS, -1, -1), rnode(GOUT, 1, 61, 19) },
  { pnode(FPLL, 0, 53, REG_READ, -1, -1), rnode(GOUT, 1, 61, 15) },
  { pnode(FPLL, 0, 53, REG_REG_ADDR, -1, 0), rnode(GOUT, 1, 61, 24) },
  { pnode(FPLL, 0, 53, REG_REG_ADDR, -1, 1), rnode(GOUT, 1, 61, 23) },
  { pnode(FPLL, 0, 53, REG_REG_ADDR, -1, 2), rnode(GOUT, 1, 61, 22) },
  { pnode(FPLL, 0, 53, REG_REG_ADDR, -1, 3), rnode(GOUT, 1, 61, 21) },
  { pnode(FPLL, 0, 53, REG_REG_ADDR, -1, 4), rnode(GOUT, 1, 61, 16) },
  { pnode(FPLL, 0, 53, REG_REG_ADDR, -1, 5), rnode(GOUT, 1, 61, 20) },
  { pnode(FPLL, 0, 53, REG_RST_N, -1, -1), rnode(GOUT, 1, 61, 25) },
  { pnode(FPLL, 0, 53, REG_SER_SHIFT_LOAD, -1, -1), rnode(GOUT, 1, 61, 50) },
  { pnode(FPLL, 0, 53, REG_WRITE, -1, -1), rnode(GOUT, 1, 61, 49) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 0), rnode(GOUT, 1, 61, 30) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 1), rnode(GOUT, 1, 61, 29) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 2), rnode(GOUT, 1, 61, 34) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 3), rnode(GOUT, 1, 61, 28) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 4), rnode(GOUT, 1, 61, 27) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 5), rnode(GOUT, 1, 61, 38) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 6), rnode(GOUT, 1, 61, 43) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 7), rnode(GOUT, 1, 61, 39) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 8), rnode(GOUT, 1, 61, 44) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 9), rnode(GOUT, 1, 61, 40) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 10), rnode(GOUT, 1, 61, 45) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 11), rnode(GOUT, 1, 61, 41) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 12), rnode(GOUT, 1, 61, 46) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 13), rnode(GOUT, 1, 61, 42) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 14), rnode(GOUT, 1, 61, 47) },
  { pnode(FPLL, 0, 53, REG_WRITEDATA, -1, 15), rnode(GOUT, 1, 61, 48) },
  { pnode(FPLL, 0, 53, EXTSWITCH, -1, -1), rnode(GOUT, 1, 61, 31) },
  { pnode(FPLL, 0, 53, FBCLK_IN_R, -1, -1), rnode(DCMUX, 0, 60, 4) },
  { pnode(FPLL, 0, 53, CSR_TEST, -1, -1), rnode(GOUT, 1, 61, 33) },
  { pnode(FPLL, 0, 53, NRESET, -1, -1), rnode(GOUT, 1, 61, 32) },
  { pnode(FPLL, 0, 53, PFDEN, -1, -1), rnode(GOUT, 1, 61, 37) },
  { pnode(FPLL, 0, 53, PHASE_EN, -1, -1), rnode(GOUT, 1, 61, 35) },
  { pnode(FPLL, 0, 53, SCANEN, -1, -1), rnode(GOUT, 1, 61, 36) },
  { pnode(FPLL, 0, 53, UP_DN, -1, -1), rnode(GOUT, 1, 61, 26) },
  { pnode(FPLL, 0, 53, CLK0_BAD, -1, -1), rnode(GIN, 1, 61, 0) },
  { pnode(FPLL, 0, 53, CLK1_BAD, -1, -1), rnode(GIN, 1, 61, 1) },
  { pnode(FPLL, 0, 53, CLKSEL, -1, -1), rnode(GIN, 1, 61, 2) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 0), rnode(GIN, 1, 61, 20) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 1), rnode(GIN, 1, 61, 21) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 2), rnode(GIN, 1, 61, 22) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 3), rnode(GIN, 1, 61, 23) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 4), rnode(GIN, 1, 61, 24) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 5), rnode(GIN, 1, 61, 25) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 6), rnode(GIN, 1, 61, 12) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 7), rnode(GIN, 1, 61, 11) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 8), rnode(GIN, 1, 61, 10) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 9), rnode(GIN, 1, 61, 9) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 10), rnode(GIN, 1, 61, 8) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 11), rnode(GIN, 1, 61, 7) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 12), rnode(GIN, 1, 61, 6) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 13), rnode(GIN, 1, 61, 5) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 14), rnode(GIN, 1, 61, 4) },
  { pnode(FPLL, 0, 53, REG_READDATA, -1, 15), rnode(GIN, 1, 61, 3) },
  { pnode(FPLL, 0, 53, LOCK, -1, -1), rnode(GIN, 1, 61, 19) },
  { pnode(FPLL, 0, 53, PHASE_DONE, -1, -1), rnode(GIN, 1, 61, 18) },
  { pnode(FPLL, 68, 0, ATPGMODE, -1, -1), rnode(GOUT, 68, 1, 30) },
  { pnode(FPLL, 68, 0, CLKEN, -1, 0), rnode(GOUT, 68, 1, 25) },
  { pnode(FPLL, 68, 0, CLKEN, -1, 1), rnode(GOUT, 68, 1, 23) },
  { pnode(FPLL, 68, 0, CNT_SEL, -1, 0), rnode(GOUT, 68, 1, 42) },
  { pnode(FPLL, 68, 0, CNT_SEL, -1, 1), rnode(GOUT, 68, 1, 41) },
  { pnode(FPLL, 68, 0, CNT_SEL, -1, 2), rnode(GOUT, 68, 1, 39) },
  { pnode(FPLL, 68, 0, CNT_SEL, -1, 3), rnode(GOUT, 68, 1, 37) },
  { pnode(FPLL, 68, 0, CNT_SEL, -1, 4), rnode(GOUT, 68, 1, 36) },
  { pnode(FPLL, 68, 0, REG_BYTE_EN, -1, 0), rnode(GOUT, 68, 1, 60) },
  { pnode(FPLL, 68, 0, REG_BYTE_EN, -1, 1), rnode(GOUT, 68, 1, 43) },
  { pnode(FPLL, 68, 0, REG_CLK, -1, -1), rnode(GOUT, 68, 1, 28) },
  { pnode(FPLL, 68, 0, REG_MDIO_DIS, -1, -1), rnode(GOUT, 68, 1, 65) },
  { pnode(FPLL, 68, 0, REG_READ, -1, -1), rnode(GOUT, 68, 1, 64) },
  { pnode(FPLL, 68, 0, REG_REG_ADDR, -1, 0), rnode(GOUT, 68, 1, 40) },
  { pnode(FPLL, 68, 0, REG_REG_ADDR, -1, 1), rnode(GOUT, 68, 1, 38) },
  { pnode(FPLL, 68, 0, REG_REG_ADDR, -1, 2), rnode(GOUT, 68, 1, 35) },
  { pnode(FPLL, 68, 0, REG_REG_ADDR, -1, 3), rnode(GOUT, 68, 1, 33) },
  { pnode(FPLL, 68, 0, REG_REG_ADDR, -1, 4), rnode(GOUT, 68, 1, 34) },
  { pnode(FPLL, 68, 0, REG_REG_ADDR, -1, 5), rnode(GOUT, 68, 1, 32) },
  { pnode(FPLL, 68, 0, REG_RST_N, -1, -1), rnode(GOUT, 68, 1, 27) },
  { pnode(FPLL, 68, 0, REG_SER_SHIFT_LOAD, -1, -1), rnode(GOUT, 68, 1, 62) },
  { pnode(FPLL, 68, 0, REG_WRITE, -1, -1), rnode(GOUT, 68, 1, 67) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 0), rnode(GOUT, 68, 1, 58) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 1), rnode(GOUT, 68, 1, 59) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 2), rnode(GOUT, 68, 1, 56) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 3), rnode(GOUT, 68, 1, 57) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 4), rnode(GOUT, 68, 1, 54) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 5), rnode(GOUT, 68, 1, 55) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 6), rnode(GOUT, 68, 1, 52) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 7), rnode(GOUT, 68, 1, 53) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 8), rnode(GOUT, 68, 1, 50) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 9), rnode(GOUT, 68, 1, 51) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 10), rnode(GOUT, 68, 1, 48) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 11), rnode(GOUT, 68, 1, 49) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 12), rnode(GOUT, 68, 1, 46) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 13), rnode(GOUT, 68, 1, 47) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 14), rnode(GOUT, 68, 1, 44) },
  { pnode(FPLL, 68, 0, REG_WRITEDATA, -1, 15), rnode(GOUT, 68, 1, 45) },
  { pnode(FPLL, 68, 0, EXTSWITCH, -1, -1), rnode(GOUT, 68, 1, 63) },
  { pnode(FPLL, 68, 0, FBCLK_IN_R, -1, -1), rnode(DCMUX, 68, 1, 4) },
  { pnode(FPLL, 68, 0, CSR_TEST, -1, -1), rnode(GOUT, 68, 1, 29) },
  { pnode(FPLL, 68, 0, NRESET, -1, -1), rnode(GOUT, 68, 1, 24) },
  { pnode(FPLL, 68, 0, PFDEN, -1, -1), rnode(GOUT, 68, 1, 26) },
  { pnode(FPLL, 68, 0, PHASE_EN, -1, -1), rnode(GOUT, 68, 1, 66) },
  { pnode(FPLL, 68, 0, SCANEN, -1, -1), rnode(GOUT, 68, 1, 31) },
  { pnode(FPLL, 68, 0, UP_DN, -1, -1), rnode(GOUT, 68, 1, 61) },
  { pnode(FPLL, 68, 0, CLK0_BAD, -1, -1), rnode(GIN, 68, 1, 71) },
  { pnode(FPLL, 68, 0, CLK1_BAD, -1, -1), rnode(GIN, 68, 1, 69) },
  { pnode(FPLL, 68, 0, CLKSEL, -1, -1), rnode(GIN, 68, 1, 70) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 0), rnode(GIN, 68, 1, 59) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 1), rnode(GIN, 68, 1, 60) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 2), rnode(GIN, 68, 1, 57) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 3), rnode(GIN, 68, 1, 58) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 4), rnode(GIN, 68, 1, 55) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 5), rnode(GIN, 68, 1, 56) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 6), rnode(GIN, 68, 1, 53) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 7), rnode(GIN, 68, 1, 54) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 8), rnode(GIN, 68, 1, 67) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 9), rnode(GIN, 68, 1, 68) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 10), rnode(GIN, 68, 1, 65) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 11), rnode(GIN, 68, 1, 66) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 12), rnode(GIN, 68, 1, 63) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 13), rnode(GIN, 68, 1, 64) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 14), rnode(GIN, 68, 1, 61) },
  { pnode(FPLL, 68, 0, REG_READDATA, -1, 15), rnode(GIN, 68, 1, 62) },
  { pnode(FPLL, 68, 0, LOCK, -1, -1), rnode(GIN, 68, 1, 51) },
  { pnode(FPLL, 68, 0, PHASE_DONE, -1, -1), rnode(GIN, 68, 1, 52) },
  { pnode(FPLL, 68, 53, ATPGMODE, -1, -1), rnode(GOUT, 68, 60, 39) },
  { pnode(FPLL, 68, 53, CLKEN, -1, 0), rnode(GOUT, 68, 60, 46) },
  { pnode(FPLL, 68, 53, CLKEN, -1, 1), rnode(GOUT, 68, 60, 45) },
  { pnode(FPLL, 68, 53, CNT_SEL, -1, 0), rnode(GOUT, 68, 60, 28) },
  { pnode(FPLL, 68, 53, CNT_SEL, -1, 1), rnode(GOUT, 68, 60, 29) },
  { pnode(FPLL, 68, 53, CNT_SEL, -1, 2), rnode(GOUT, 68, 60, 30) },
  { pnode(FPLL, 68, 53, CNT_SEL, -1, 3), rnode(GOUT, 68, 60, 31) },
  { pnode(FPLL, 68, 53, CNT_SEL, -1, 4), rnode(GOUT, 68, 60, 32) },
  { pnode(FPLL, 68, 53, REG_BYTE_EN, -1, 0), rnode(GOUT, 68, 60, 25) },
  { pnode(FPLL, 68, 53, REG_BYTE_EN, -1, 1), rnode(GOUT, 68, 60, 27) },
  { pnode(FPLL, 68, 53, REG_CLK, -1, -1), rnode(GOUT, 68, 60, 41) },
  { pnode(FPLL, 68, 53, REG_MDIO_DIS, -1, -1), rnode(GOUT, 68, 60, 23) },
  { pnode(FPLL, 68, 53, REG_READ, -1, -1), rnode(GOUT, 68, 60, 24) },
  { pnode(FPLL, 68, 53, REG_REG_ADDR, -1, 0), rnode(GOUT, 68, 60, 33) },
  { pnode(FPLL, 68, 53, REG_REG_ADDR, -1, 1), rnode(GOUT, 68, 60, 34) },
  { pnode(FPLL, 68, 53, REG_REG_ADDR, -1, 2), rnode(GOUT, 68, 60, 35) },
  { pnode(FPLL, 68, 53, REG_REG_ADDR, -1, 3), rnode(GOUT, 68, 60, 36) },
  { pnode(FPLL, 68, 53, REG_REG_ADDR, -1, 4), rnode(GOUT, 68, 60, 37) },
  { pnode(FPLL, 68, 53, REG_REG_ADDR, -1, 5), rnode(GOUT, 68, 60, 38) },
  { pnode(FPLL, 68, 53, REG_RST_N, -1, -1), rnode(GOUT, 68, 60, 43) },
  { pnode(FPLL, 68, 53, REG_SER_SHIFT_LOAD, -1, -1), rnode(GOUT, 68, 60, 26) },
  { pnode(FPLL, 68, 53, REG_WRITE, -1, -1), rnode(GOUT, 68, 60, 22) },
  { pnode(FPLL, 68, 53, REG_WRITEDATA, -1, 0), rnode(GOUT, 68, 60, 10) },
  { pnode(FPLL, 68, 53, REG_WRITEDATA, -1, 1), rnode(GOUT, 68, 60, 9) },
  { pnode(FPLL, 68, 53, REG_WRITEDATA, -1, 2), rnode(GOUT, 68, 60, 11) },
  { pnode(FPLL, 68, 53, REG_WRITEDATA, -1, 3), rnode(GOUT, 68, 60, 5) },
  { pnode(FPLL, 68, 53, REG_WRITEDATA, -1, 4), rnode(GOUT, 68, 60, 6) },
  { pnode(FPLL, 68, 53, REG_WRITEDATA, -1, 5), rnode(GOUT, 68, 60, 7) },
  { pnode(FPLL, 68, 53, REG_WRITEDATA, -1, 6), rnode(GOUT, 68, 60, 8) },
  { pnode(FPLL, 68, 53, REG_WRITEDATA, -1, 7), rnode(GOUT, 68, 60, 12) },
  { pnode(FPLL, 68, 53, REG_WRITEDATA, -1, 8), rnode(GOUT, 68, 60, 13) },
  { pnode(FPLL, 68, 53, REG_WRITEDATA, -1, 9), rnode(GOUT, 68, 60, 14) },
  { pnode(FPLL, 68, 53, REG_WRITEDATA, -1, 10), rnode(GOUT, 68, 60, 15) },
  { pnode(FPLL, 68, 53, REG_WRITEDATA, -1, 11), rnode(GOUT, 68, 60, 16) },
  { pnode(FPLL, 68, 53, REG_WRITEDATA, -1, 12), rnode(GOUT, 68, 60, 17) },
  { pnode(FPLL, 68, 53, REG_WRITEDATA, -1, 13), rnode(GOUT, 68, 60, 18) },
  { pnode(FPLL, 68, 53, REG_WRITEDATA, -1, 14), rnode(GOUT, 68, 60, 19) },
  { pnode(FPLL, 68, 53, REG_WRITEDATA, -1, 15), rnode(GOUT, 68, 60, 20) },
  { pnode(FPLL, 68, 53, EXTSWITCH, -1, -1), rnode(GOUT, 68, 60, 3) },
  { pnode(FPLL, 68, 53, FBCLK_IN_R, -1, -1), rnode(DCMUX, 68, 60, 4) },
  { pnode(FPLL, 68, 53, CSR_TEST, -1, -1), rnode(GOUT, 68, 60, 42) },
  { pnode(FPLL, 68, 53, NRESET, -1, -1), rnode(GOUT, 68, 60, 47) },
  { pnode(FPLL, 68, 53, PFDEN, -1, -1), rnode(GOUT, 68, 60, 44) },
  { pnode(FPLL, 68, 53, PHASE_EN, -1, -1), rnode(GOUT, 68, 60, 21) },
  { pnode(FPLL, 68, 53, SCANEN, -1, -1), rnode(GOUT, 68, 60, 40) },
  { pnode(FPLL, 68, 53, UP_DN, -1, -1), rnode(GOUT, 68, 60, 4) },
  { pnode(FPLL, 68, 53, CLK0_BAD, -1, -1), rnode(GIN, 68, 60, 8) },
  { pnode(FPLL, 68, 53, CLK1_BAD, -1, -1), rnode(GIN, 68, 60, 10) },
  { pnode(FPLL, 68, 53, CLKSEL, -1, -1), rnode(GIN, 68, 60, 11) },
  { pnode(FPLL, 68, 53, REG_READDATA, -1, 0), rnode(GIN, 68, 60, 12) },
  { pnode(FPLL, 68, 53, REG_READDATA, -1, 1), rnode(GIN, 68, 60, 14) },
  { pnode(FPLL, 68, 53, REG_READDATA, -1, 2), rnode(GIN, 68, 60, 15) },
  { pnode(FPLL, 68, 53, REG_READDATA, -1, 3), rnode(GIN, 68, 60, 16) },
  { pnode(FPLL, 68, 53, REG_READDATA, -1, 4), rnode(GIN, 68, 60, 17) },
  { pnode(FPLL, 68, 53, REG_READDATA, -1, 5), rnode(GIN, 68, 60, 18) },
  { pnode(FPLL, 68, 53, REG_READDATA, -1, 6), rnode(GIN, 68, 60, 19) },
  { pnode(FPLL, 68, 53, REG_READDATA, -1, 7), rnode(GIN, 68, 60, 20) },
  { pnode(FPLL, 68, 53, REG_READDATA, -1, 8), rnode(GIN, 68, 60, 21) },
  { pnode(FPLL, 68, 53, REG_READDATA, -1, 9), rnode(GIN, 68, 60, 22) },
  { pnode(FPLL, 68, 53, REG_READDATA, -1, 10), rnode(GIN, 68, 60, 23) },
  { pnode(FPLL, 68, 53, REG_READDATA, -1, 11), rnode(GIN, 68, 60, 24) },
  { pnode(FPLL, 68, 53, REG_READDATA, -1, 12), rnode(GIN, 68, 60, 25) },
  { pnode(FPLL, 68, 53, REG_READDATA, -1, 13), rnode(GIN, 68, 60, 26) },
  { pnode(FPLL, 68, 53, REG_READDATA, -1, 14), rnode(GIN, 68, 60, 27) },
  { pnode(FPLL, 68, 53, REG_READDATA, -1, 15), rnode(GIN, 68, 60, 28) },
  { pnode(FPLL, 68, 53, LOCK, -1, -1), rnode(GIN, 68, 60, 29) },
  { pnode(FPLL, 68, 53, PHASE_DONE, -1, -1), rnode(GIN, 68, 60, 13) },
  { pnode(CTRL, 0, 3, CAPTNUPDT_RU, -1, -1), rnode(GOUT, 0, 2, 33) },
  { pnode(CTRL, 0, 3, CLOCK_CHIPID, -1, -1), rnode(DCMUX, 0, 2, 0) },
  { pnode(CTRL, 0, 3, CLOCK_CRC, -1, -1), rnode(DCMUX, 0, 2, 4) },
  { pnode(CTRL, 0, 3, CLOCK_OPREG, -1, -1), rnode(DCMUX, 0, 1, 0) },
  { pnode(CTRL, 0, 3, CLOCK_PR, -1, -1), rnode(DCMUX, 0, 2, 6) },
  { pnode(CTRL, 0, 3, CLOCK_RU, -1, -1), rnode(DCMUX, 0, 2, 11) },
  { pnode(CTRL, 0, 3, CLOCK_SPI, -1, -1), rnode(DCMUX, 0, 2, 2) },
  { pnode(CTRL, 0, 3, CONFIG, -1, -1), rnode(GOUT, 0, 2, 37) },
  { pnode(CTRL, 0, 3, CORECTL_JTAG, -1, -1), rnode(GOUT, 0, 2, 8) },
  { pnode(CTRL, 0, 3, CORECTL_PR, -1, -1), rnode(GOUT, 0, 2, 12) },
  { pnode(CTRL, 0, 3, DATA, -1, 0), rnode(GOUT, 0, 2, 14) },
  { pnode(CTRL, 0, 3, DATA, -1, 1), rnode(GOUT, 0, 2, 15) },
  { pnode(CTRL, 0, 3, DATA, -1, 2), rnode(GOUT, 0, 2, 16) },
  { pnode(CTRL, 0, 3, DATA, -1, 3), rnode(GOUT, 0, 2, 17) },
  { pnode(CTRL, 0, 3, DATA, -1, 4), rnode(GOUT, 0, 2, 18) },
  { pnode(CTRL, 0, 3, DATA, -1, 5), rnode(GOUT, 0, 2, 19) },
  { pnode(CTRL, 0, 3, DATA, -1, 6), rnode(GOUT, 0, 2, 20) },
  { pnode(CTRL, 0, 3, DATA, -1, 7), rnode(GOUT, 0, 2, 21) },
  { pnode(CTRL, 0, 3, DATA, -1, 8), rnode(GOUT, 0, 2, 22) },
  { pnode(CTRL, 0, 3, DATA, -1, 9), rnode(GOUT, 0, 2, 23) },
  { pnode(CTRL, 0, 3, DATA, -1, 10), rnode(GOUT, 0, 2, 24) },
  { pnode(CTRL, 0, 3, DATA, -1, 11), rnode(GOUT, 0, 2, 25) },
  { pnode(CTRL, 0, 3, DATA, -1, 12), rnode(GOUT, 0, 2, 26) },
  { pnode(CTRL, 0, 3, DATA, -1, 13), rnode(GOUT, 0, 2, 27) },
  { pnode(CTRL, 0, 3, DATA, -1, 14), rnode(GOUT, 0, 2, 28) },
  { pnode(CTRL, 0, 3, DATA, -1, 15), rnode(GOUT, 0, 2, 29) },
  { pnode(CTRL, 0, 3, DATA0OE, -1, -1), rnode(GOUT, 0, 1, 6) },
  { pnode(CTRL, 0, 3, DATA0OUT, -1, -1), rnode(GOUT, 0, 1, 14) },
  { pnode(CTRL, 0, 3, DATA1OE, -1, -1), rnode(GOUT, 0, 1, 7) },
  { pnode(CTRL, 0, 3, DATA1OUT, -1, -1), rnode(GOUT, 0, 1, 15) },
  { pnode(CTRL, 0, 3, DATA2OE, -1, -1), rnode(GOUT, 0, 1, 8) },
  { pnode(CTRL, 0, 3, DATA2OUT, -1, -1), rnode(GOUT, 0, 1, 16) },
  { pnode(CTRL, 0, 3, DATA3OE, -1, -1), rnode(GOUT, 0, 1, 9) },
  { pnode(CTRL, 0, 3, DATA3OUT, -1, -1), rnode(GOUT, 0, 1, 17) },
  { pnode(CTRL, 0, 3, DFT_IN, -1, 0), rnode(GOUT, 0, 1, 23) },
  { pnode(CTRL, 0, 3, DFT_IN, -1, 1), rnode(GOUT, 0, 1, 24) },
  { pnode(CTRL, 0, 3, DFT_IN, -1, 2), rnode(GOUT, 0, 1, 25) },
  { pnode(CTRL, 0, 3, DFT_IN, -1, 3), rnode(GOUT, 0, 1, 26) },
  { pnode(CTRL, 0, 3, DFT_IN, -1, 4), rnode(GOUT, 0, 1, 27) },
  { pnode(CTRL, 0, 3, DFT_IN, -1, 5), rnode(GOUT, 0, 1, 28) },
  { pnode(CTRL, 0, 3, NTDOPINENA, -1, -1), rnode(GOUT, 0, 1, 34) },
  { pnode(CTRL, 0, 3, OSC_ENA, -1, -1), rnode(GOUT, 0, 2, 10) },
  { pnode(CTRL, 0, 3, OUTPUT_ENABLE, -1, -1), rnode(GOUT, 0, 2, 4) },
  { pnode(CTRL, 0, 3, PRREQUEST, -1, -1), rnode(GOUT, 0, 2, 31) },
  { pnode(CTRL, 0, 3, REGIN, -1, -1), rnode(GOUT, 0, 2, 35) },
  { pnode(CTRL, 0, 3, RSTTIMER, -1, -1), rnode(GOUT, 0, 2, 39) },
  { pnode(CTRL, 0, 3, SCE_IN, -1, -1), rnode(GOUT, 0, 2, 2) },
  { pnode(CTRL, 0, 3, SHIFTNLD_CHIPID, -1, -1), rnode(GOUT, 0, 2, 0) },
  { pnode(CTRL, 0, 3, SHIFTNLD_CRC, -1, -1), rnode(GOUT, 0, 2, 6) },
  { pnode(CTRL, 0, 3, SHIFTNLD_OPREG, -1, -1), rnode(GOUT, 0, 1, 0) },
  { pnode(CTRL, 0, 3, SHIFTNLD_RU, -1, -1), rnode(GOUT, 0, 2, 41) },
  { pnode(CTRL, 0, 3, TCKCORE, -1, -1), rnode(DCMUX, 0, 2, 15) },
  { pnode(CTRL, 0, 3, TDICORE, -1, -1), rnode(GOUT, 0, 2, 43) },
  { pnode(CTRL, 0, 3, TDOUTAP, -1, -1), rnode(GOUT, 0, 2, 45) },
  { pnode(CTRL, 0, 3, TMSCORE, -1, -1), rnode(GOUT, 0, 2, 47) },
  { pnode(CTRL, 0, 3, CLKDRUSER, -1, -1), rnode(GIN, 0, 2, 2) },
  { pnode(CTRL, 0, 3, CLK_OUT, -1, -1), rnode(GIN, 0, 1, 36) },
  { pnode(CTRL, 0, 3, CLK_OUT1, -1, -1), rnode(GIN, 0, 1, 38) },
  { pnode(CTRL, 0, 3, CRCERROR, -1, -1), rnode(GIN, 0, 2, 9) },
  { pnode(CTRL, 0, 3, DATA0IN, -1, -1), rnode(GIN, 0, 2, 4) },
  { pnode(CTRL, 0, 3, DATA1IN, -1, -1), rnode(GIN, 0, 2, 5) },
  { pnode(CTRL, 0, 3, DATA2IN, -1, -1), rnode(GIN, 0, 2, 6) },
  { pnode(CTRL, 0, 3, DATA3IN, -1, -1), rnode(GIN, 0, 2, 7) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 0), rnode(GIN, 0, 1, 6) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 1), rnode(GIN, 0, 1, 7) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 2), rnode(GIN, 0, 1, 8) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 3), rnode(GIN, 0, 1, 9) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 4), rnode(GIN, 0, 1, 10) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 5), rnode(GIN, 0, 1, 11) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 6), rnode(GIN, 0, 1, 12) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 7), rnode(GIN, 0, 1, 13) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 8), rnode(GIN, 0, 1, 14) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 9), rnode(GIN, 0, 1, 15) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 10), rnode(GIN, 0, 1, 16) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 11), rnode(GIN, 0, 1, 17) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 12), rnode(GIN, 0, 1, 18) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 13), rnode(GIN, 0, 1, 19) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 14), rnode(GIN, 0, 1, 20) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 15), rnode(GIN, 0, 1, 21) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 16), rnode(GIN, 0, 1, 22) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 17), rnode(GIN, 0, 1, 23) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 18), rnode(GIN, 0, 1, 24) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 19), rnode(GIN, 0, 1, 25) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 20), rnode(GIN, 0, 1, 26) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 21), rnode(GIN, 0, 1, 27) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 22), rnode(GIN, 0, 1, 28) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 23), rnode(GIN, 0, 1, 29) },
  { pnode(CTRL, 0, 3, DFT_OUT, -1, 24), rnode(GIN, 0, 1, 30) },
  { pnode(CTRL, 0, 3, DONE, -1, -1), rnode(GIN, 0, 2, 17) },
  { pnode(CTRL, 0, 3, END_OF_ED_FULLCHIP, -1, -1), rnode(GIN, 0, 2, 13) },
  { pnode(CTRL, 0, 3, EXTERNALREQUEST, -1, -1), rnode(GIN, 0, 2, 21) },
  { pnode(CTRL, 0, 3, NCE_OUT, -1, -1), rnode(GIN, 0, 2, 15) },
  { pnode(CTRL, 0, 3, OERROR, -1, -1), rnode(GIN, 0, 2, 19) },
  { pnode(CTRL, 0, 3, READY, -1, -1), rnode(GIN, 0, 2, 23) },
  { pnode(CTRL, 0, 3, REG_OUT_CHIPID, -1, -1), rnode(GIN, 0, 2, 0) },
  { pnode(CTRL, 0, 3, REG_OUT_CRC, -1, -1), rnode(GIN, 0, 2, 11) },
  { pnode(CTRL, 0, 3, REG_OUT_OPREG, -1, -1), rnode(GIN, 0, 1, 0) },
  { pnode(CTRL, 0, 3, REG_OUT_RU, -1, -1), rnode(GIN, 0, 2, 27) },
  { pnode(CTRL, 0, 3, RUNIDLEUSER, -1, -1), rnode(GIN, 0, 2, 25) },
  { pnode(CTRL, 0, 3, SHIFTUSER, -1, -1), rnode(GIN, 0, 2, 33) },
  { pnode(CTRL, 0, 3, TCKUTAP, -1, -1), rnode(GIN, 0, 2, 35) },
  { pnode(CTRL, 0, 3, TDIUTAP, -1, -1), rnode(GIN, 0, 2, 37) },
  { pnode(CTRL, 0, 3, TDOCORE, -1, -1), rnode(GIN, 0, 2, 39) },
  { pnode(CTRL, 0, 3, TMSUTAP, -1, -1), rnode(GIN, 0, 2, 41) },
  { pnode(CTRL, 0, 3, UPDATEUSER, -1, -1), rnode(GIN, 0, 2, 43) },
  { pnode(CTRL, 0, 3, USR1USER, -1, -1), rnode(GIN, 0, 2, 45) },
  { pnode(DLL, 0, 59, ASYNC_LOAD, -1, -1), rnode(GOUT, 2, 61, 10) },
  { pnode(DLL, 0, 59, UPNDN_IN, -1, -1), rnode(GOUT, 2, 61, 0) },
  { pnode(DLL, 0, 59, UPNDN_IN_CLK_ENA, -1, -1), rnode(GOUT, 2, 61, 9) },
  { pnode(DLL, 0, 59, CTRL_OUT, -1, 0), rnode(GIN, 3, 61, 1) },
  { pnode(DLL, 0, 59, CTRL_OUT, -1, 1), rnode(GIN, 3, 61, 0) },
  { pnode(DLL, 0, 59, CTRL_OUT, -1, 2), rnode(GIN, 2, 61, 13) },
  { pnode(DLL, 0, 59, CTRL_OUT, -1, 3), rnode(GIN, 2, 61, 0) },
  { pnode(DLL, 0, 59, CTRL_OUT, -1, 4), rnode(GIN, 1, 61, 13) },
  { pnode(DLL, 0, 59, CTRL_OUT, -1, 5), rnode(GIN, 1, 61, 14) },
  { pnode(DLL, 0, 59, CTRL_OUT, -1, 6), rnode(GIN, 1, 61, 15) },
  { pnode(DLL, 0, 59, LOCKED, -1, -1), rnode(GIN, 1, 61, 17) },
  { pnode(DLL, 0, 59, UPNDN_OUT, -1, -1), rnode(GIN, 1, 61, 16) },
  { pnode(DLL, 8, 0, ASYNC_LOAD, -1, -1), rnode(GOUT, 2, 0, 10) },
  { pnode(DLL, 8, 0, UPNDN_IN, -1, -1), rnode(GOUT, 2, 0, 0) },
  { pnode(DLL, 8, 0, UPNDN_IN_CLK_ENA, -1, -1), rnode(GOUT, 2, 0, 9) },
  { pnode(DLL, 8, 0, CTRL_OUT, -1, 0), rnode(GIN, 3, 0, 1) },
  { pnode(DLL, 8, 0, CTRL_OUT, -1, 1), rnode(GIN, 3, 0, 0) },
  { pnode(DLL, 8, 0, CTRL_OUT, -1, 2), rnode(GIN, 2, 0, 13) },
  { pnode(DLL, 8, 0, CTRL_OUT, -1, 3), rnode(GIN, 2, 0, 0) },
  { pnode(DLL, 8, 0, CTRL_OUT, -1, 4), rnode(GIN, 1, 0, 13) },
  { pnode(DLL, 8, 0, CTRL_OUT, -1, 5), rnode(GIN, 1, 0, 14) },
  { pnode(DLL, 8, 0, CTRL_OUT, -1, 6), rnode(GIN, 1, 0, 15) },
  { pnode(DLL, 8, 0, LOCKED, -1, -1), rnode(GIN, 1, 0, 17) },
  { pnode(DLL, 8, 0, UPNDN_OUT, -1, -1), rnode(GIN, 1, 0, 16) },
  { pnode(DLL, 68, 3, ASYNC_LOAD, -1, -1), rnode(GOUT, 68, 1, 69) },
  { pnode(DLL, 68, 3, UPNDN_IN, -1, -1), rnode(GOUT, 68, 1, 68) },
  { pnode(DLL, 68, 3, UPNDN_IN_CLK_ENA, -1, -1), rnode(GOUT, 68, 1, 71) },
  { pnode(DLL, 68, 3, CTRL_OUT, -1, 0), rnode(GIN, 68, 1, 80) },
  { pnode(DLL, 68, 3, CTRL_OUT, -1, 1), rnode(GIN, 68, 1, 79) },
  { pnode(DLL, 68, 3, CTRL_OUT, -1, 2), rnode(GIN, 68, 1, 78) },
  { pnode(DLL, 68, 3, CTRL_OUT, -1, 3), rnode(GIN, 68, 1, 77) },
  { pnode(DLL, 68, 3, CTRL_OUT, -1, 4), rnode(GIN, 68, 1, 76) },
  { pnode(DLL, 68, 3, CTRL_OUT, -1, 5), rnode(GIN, 68, 1, 75) },
  { pnode(DLL, 68, 3, CTRL_OUT, -1, 6), rnode(GIN, 68, 1, 74) },
  { pnode(DLL, 68, 3, LOCKED, -1, -1), rnode(GIN, 68, 1, 72) },
  { pnode(DLL, 68, 3, UPNDN_OUT, -1, -1), rnode(GIN, 68, 1, 73) },
  { pnode(DLL, 68, 58, ASYNC_LOAD, -1, -1), rnode(GOUT, 68, 60, 2) },
  { pnode(DLL, 68, 58, UPNDN_IN, -1, -1), rnode(GOUT, 68, 60, 1) },
  { pnode(DLL, 68, 58, UPNDN_IN_CLK_ENA, -1, -1), rnode(GOUT, 68, 60, 0) },
  { pnode(DLL, 68, 58, CTRL_OUT, -1, 0), rnode(GIN, 68, 60, 1) },
  { pnode(DLL, 68, 58, CTRL_OUT, -1, 1), rnode(GIN, 68, 60, 0) },
  { pnode(DLL, 68, 58, CTRL_OUT, -1, 2), rnode(GIN, 68, 60, 2) },
  { pnode(DLL, 68, 58, CTRL_OUT, -1, 3), rnode(GIN, 68, 60, 3) },
  { pnode(DLL, 68, 58, CTRL_OUT, -1, 4), rnode(GIN, 68, 60, 5) },
  { pnode(DLL, 68, 58, CTRL_OUT, -1, 5), rnode(GIN, 68, 60, 4) },
  { pnode(DLL, 68, 58, CTRL_OUT, -1, 6), rnode(GIN, 68, 60, 6) },
  { pnode(DLL, 68, 58, LOCKED, -1, -1), rnode(GIN, 68, 60, 9) },
  { pnode(DLL, 68, 58, UPNDN_OUT, -1, -1), rnode(GIN, 68, 60, 7) },
  { }
};

const mistral::CycloneV::p2p_info mistral::CycloneV::gt75f_p2p_info[] = {
  { pnode(GPIO, 32, 61, DATAOUT, 1, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 0) },
  { pnode(GPIO, 32, 61, DATAOUT, 1, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 1) },
  { pnode(GPIO, 32, 61, DATAOUT, 1, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 2) },
  { pnode(GPIO, 32, 61, DATAOUT, 1, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 3) },
  { pnode(GPIO, 32, 61, DATAOUT, 0, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 4) },
  { pnode(GPIO, 32, 61, DATAOUT, 0, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 5) },
  { pnode(GPIO, 32, 61, DATAOUT, 0, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 6) },
  { pnode(GPIO, 32, 61, DATAOUT, 0, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 7) },
  { pnode(GPIO, 32, 61, DATAOUT, 2, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 8) },
  { pnode(GPIO, 32, 61, DATAOUT, 2, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 9) },
  { pnode(GPIO, 32, 61, DATAOUT, 2, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 10) },
  { pnode(GPIO, 32, 61, DATAOUT, 2, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 11) },
  { pnode(GPIO, 34, 61, DATAOUT, 3, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 12) },
  { pnode(GPIO, 34, 61, DATAOUT, 3, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 13) },
  { pnode(GPIO, 34, 61, DATAOUT, 3, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 14) },
  { pnode(GPIO, 34, 61, DATAOUT, 3, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 15) },
  { pnode(GPIO, 36, 61, DATAOUT, 1, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 16) },
  { pnode(GPIO, 36, 61, DATAOUT, 1, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 17) },
  { pnode(GPIO, 36, 61, DATAOUT, 1, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 18) },
  { pnode(GPIO, 36, 61, DATAOUT, 1, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 19) },
  { pnode(GPIO, 36, 61, DATAOUT, 0, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 20) },
  { pnode(GPIO, 36, 61, DATAOUT, 0, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 21) },
  { pnode(GPIO, 36, 61, DATAOUT, 0, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 22) },
  { pnode(GPIO, 36, 61, DATAOUT, 0, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 23) },
  { pnode(GPIO, 36, 61, DATAOUT, 2, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 24) },
  { pnode(GPIO, 36, 61, DATAOUT, 2, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 25) },
  { pnode(GPIO, 36, 61, DATAOUT, 2, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 26) },
  { pnode(GPIO, 36, 61, DATAOUT, 2, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 27) },
  { pnode(GPIO, 38, 61, DATAOUT, 3, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 28) },
  { pnode(GPIO, 38, 61, DATAOUT, 3, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 29) },
  { pnode(GPIO, 38, 61, DATAOUT, 3, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 30) },
  { pnode(GPIO, 38, 61, DATAOUT, 3, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 31) },
  { pnode(GPIO, 40, 61, DATAOUT, 1, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 36) },
  { pnode(GPIO, 40, 61, DATAOUT, 1, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 37) },
  { pnode(GPIO, 40, 61, DATAOUT, 1, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 38) },
  { pnode(GPIO, 40, 61, DATAOUT, 1, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 39) },
  { pnode(GPIO, 40, 61, DATAOUT, 0, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 40) },
  { pnode(GPIO, 40, 61, DATAOUT, 0, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 41) },
  { pnode(GPIO, 40, 61, DATAOUT, 0, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 42) },
  { pnode(GPIO, 40, 61, DATAOUT, 0, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 43) },
  { pnode(GPIO, 40, 61, DATAOUT, 2, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 44) },
  { pnode(GPIO, 40, 61, DATAOUT, 2, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 45) },
  { pnode(GPIO, 40, 61, DATAOUT, 2, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 46) },
  { pnode(GPIO, 40, 61, DATAOUT, 2, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 47) },
  { pnode(GPIO, 42, 61, DATAOUT, 3, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 48) },
  { pnode(GPIO, 42, 61, DATAOUT, 3, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 49) },
  { pnode(GPIO, 42, 61, DATAOUT, 3, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 50) },
  { pnode(GPIO, 42, 61, DATAOUT, 3, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 51) },
  { pnode(GPIO, 44, 61, DATAOUT, 1, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 52) },
  { pnode(GPIO, 44, 61, DATAOUT, 1, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 53) },
  { pnode(GPIO, 44, 61, DATAOUT, 1, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 54) },
  { pnode(GPIO, 44, 61, DATAOUT, 1, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 55) },
  { pnode(GPIO, 44, 61, DATAOUT, 0, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 56) },
  { pnode(GPIO, 44, 61, DATAOUT, 0, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 57) },
  { pnode(GPIO, 44, 61, DATAOUT, 0, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 58) },
  { pnode(GPIO, 44, 61, DATAOUT, 0, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 59) },
  { pnode(GPIO, 44, 61, DATAOUT, 2, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 60) },
  { pnode(GPIO, 44, 61, DATAOUT, 2, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 61) },
  { pnode(GPIO, 44, 61, DATAOUT, 2, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 62) },
  { pnode(GPIO, 44, 61, DATAOUT, 2, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 63) },
  { pnode(GPIO, 46, 61, DATAOUT, 3, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 64) },
  { pnode(GPIO, 46, 61, DATAOUT, 3, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 65) },
  { pnode(GPIO, 46, 61, DATAOUT, 3, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 66) },
  { pnode(GPIO, 46, 61, DATAOUT, 3, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 67) },
  { pnode(GPIO, 48, 61, DATAOUT, 1, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 72) },
  { pnode(GPIO, 48, 61, DATAOUT, 1, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 73) },
  { pnode(GPIO, 48, 61, DATAOUT, 1, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 74) },
  { pnode(GPIO, 48, 61, DATAOUT, 1, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 75) },
  { pnode(GPIO, 48, 61, DATAOUT, 0, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 76) },
  { pnode(GPIO, 48, 61, DATAOUT, 0, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 77) },
  { pnode(GPIO, 48, 61, DATAOUT, 0, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 78) },
  { pnode(GPIO, 48, 61, DATAOUT, 0, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 79) },
  { pnode(GPIO, 48, 61, DATAOUT, 2, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 80) },
  { pnode(GPIO, 48, 61, DATAOUT, 2, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 81) },
  { pnode(GPIO, 48, 61, DATAOUT, 2, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 82) },
  { pnode(GPIO, 48, 61, DATAOUT, 2, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 83) },
  { pnode(GPIO, 50, 61, DATAOUT, 3, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 84) },
  { pnode(GPIO, 50, 61, DATAOUT, 3, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 85) },
  { pnode(GPIO, 50, 61, DATAOUT, 3, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 86) },
  { pnode(GPIO, 50, 61, DATAOUT, 3, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 87) },
  { pnode(GPIO, 51, 61, DATAOUT, 1, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 88) },
  { pnode(GPIO, 51, 61, DATAOUT, 1, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 89) },
  { pnode(GPIO, 51, 61, DATAOUT, 1, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 90) },
  { pnode(GPIO, 51, 61, DATAOUT, 1, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 91) },
  { pnode(GPIO, 51, 61, DATAOUT, 0, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 92) },
  { pnode(GPIO, 51, 61, DATAOUT, 0, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 93) },
  { pnode(GPIO, 51, 61, DATAOUT, 0, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 94) },
  { pnode(GPIO, 51, 61, DATAOUT, 0, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 95) },
  { pnode(GPIO, 51, 61, DATAOUT, 2, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 96) },
  { pnode(GPIO, 51, 61, DATAOUT, 2, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 97) },
  { pnode(GPIO, 51, 61, DATAOUT, 2, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 98) },
  { pnode(GPIO, 51, 61, DATAOUT, 2, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 99) },
  { pnode(GPIO, 53, 61, DATAOUT, 3, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 100) },
  { pnode(GPIO, 53, 61, DATAOUT, 3, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 101) },
  { pnode(GPIO, 53, 61, DATAOUT, 3, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 102) },
  { pnode(GPIO, 53, 61, DATAOUT, 3, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 103) },
  { pnode(GPIO, 55, 61, DATAOUT, 1, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 108) },
  { pnode(GPIO, 55, 61, DATAOUT, 1, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 109) },
  { pnode(GPIO, 55, 61, DATAOUT, 1, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 110) },
  { pnode(GPIO, 55, 61, DATAOUT, 1, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 111) },
  { pnode(GPIO, 55, 61, DATAOUT, 0, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 112) },
  { pnode(GPIO, 55, 61, DATAOUT, 0, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 113) },
  { pnode(GPIO, 55, 61, DATAOUT, 0, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 114) },
  { pnode(GPIO, 55, 61, DATAOUT, 0, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 115) },
  { pnode(GPIO, 55, 61, DATAOUT, 2, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 116) },
  { pnode(GPIO, 55, 61, DATAOUT, 2, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 117) },
  { pnode(GPIO, 55, 61, DATAOUT, 2, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 118) },
  { pnode(GPIO, 55, 61, DATAOUT, 2, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 119) },
  { pnode(GPIO, 57, 61, DATAOUT, 3, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 120) },
  { pnode(GPIO, 57, 61, DATAOUT, 3, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 121) },
  { pnode(GPIO, 57, 61, DATAOUT, 3, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 122) },
  { pnode(GPIO, 57, 61, DATAOUT, 3, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 123) },
  { pnode(GPIO, 59, 61, DATAOUT, 1, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 124) },
  { pnode(GPIO, 59, 61, DATAOUT, 1, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 125) },
  { pnode(GPIO, 59, 61, DATAOUT, 1, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 126) },
  { pnode(GPIO, 59, 61, DATAOUT, 1, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 127) },
  { pnode(GPIO, 59, 61, DATAOUT, 0, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 128) },
  { pnode(GPIO, 59, 61, DATAOUT, 0, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 129) },
  { pnode(GPIO, 59, 61, DATAOUT, 0, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 130) },
  { pnode(GPIO, 59, 61, DATAOUT, 0, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 131) },
  { pnode(GPIO, 59, 61, DATAOUT, 2, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 132) },
  { pnode(GPIO, 59, 61, DATAOUT, 2, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 133) },
  { pnode(GPIO, 59, 61, DATAOUT, 2, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 134) },
  { pnode(GPIO, 59, 61, DATAOUT, 2, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 135) },
  { pnode(GPIO, 61, 61, DATAOUT, 3, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 136) },
  { pnode(GPIO, 61, 61, DATAOUT, 3, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 137) },
  { pnode(GPIO, 61, 61, DATAOUT, 3, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 138) },
  { pnode(GPIO, 61, 61, DATAOUT, 3, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 139) },
  { pnode(GPIO, 62, 61, DATAOUT, 1, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 144) },
  { pnode(GPIO, 62, 61, DATAOUT, 1, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 145) },
  { pnode(GPIO, 62, 61, DATAOUT, 1, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 146) },
  { pnode(GPIO, 62, 61, DATAOUT, 1, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 147) },
  { pnode(GPIO, 62, 61, DATAOUT, 0, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 148) },
  { pnode(GPIO, 62, 61, DATAOUT, 0, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 149) },
  { pnode(GPIO, 62, 61, DATAOUT, 0, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 150) },
  { pnode(GPIO, 62, 61, DATAOUT, 0, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 151) },
  { pnode(GPIO, 62, 61, DATAOUT, 2, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 152) },
  { pnode(GPIO, 62, 61, DATAOUT, 2, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 153) },
  { pnode(GPIO, 62, 61, DATAOUT, 2, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 154) },
  { pnode(GPIO, 62, 61, DATAOUT, 2, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 155) },
  { pnode(GPIO, 64, 61, DATAOUT, 3, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 156) },
  { pnode(GPIO, 64, 61, DATAOUT, 3, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 157) },
  { pnode(GPIO, 64, 61, DATAOUT, 3, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 158) },
  { pnode(GPIO, 64, 61, DATAOUT, 3, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 159) },
  { pnode(GPIO, 65, 61, DATAOUT, 1, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 160) },
  { pnode(GPIO, 65, 61, DATAOUT, 1, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 161) },
  { pnode(GPIO, 65, 61, DATAOUT, 1, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 162) },
  { pnode(GPIO, 65, 61, DATAOUT, 1, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 163) },
  { pnode(GPIO, 65, 61, DATAOUT, 0, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 164) },
  { pnode(GPIO, 65, 61, DATAOUT, 0, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 165) },
  { pnode(GPIO, 65, 61, DATAOUT, 0, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 166) },
  { pnode(GPIO, 65, 61, DATAOUT, 0, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 167) },
  { pnode(GPIO, 65, 61, DATAOUT, 2, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 168) },
  { pnode(GPIO, 65, 61, DATAOUT, 2, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 169) },
  { pnode(GPIO, 65, 61, DATAOUT, 2, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 170) },
  { pnode(GPIO, 65, 61, DATAOUT, 2, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 171) },
  { pnode(GPIO, 66, 61, DATAOUT, 3, 0), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 172) },
  { pnode(GPIO, 66, 61, DATAOUT, 3, 1), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 173) },
  { pnode(GPIO, 66, 61, DATAOUT, 3, 2), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 174) },
  { pnode(GPIO, 66, 61, DATAOUT, 3, 3), pnode(HMC, 22, 61, DDIOPHYDQDIN, -1, 175) },
  { pnode(HMC, 22, 61, PHYDDIOADDRACLR, -1, 0), pnode(GPIO, 21, 61, ACLR, 2, -1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRACLR, -1, 1), pnode(GPIO, 21, 61, ACLR, 3, -1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRACLR, -1, 2), pnode(GPIO, 19, 61, ACLR, 2, -1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRACLR, -1, 3), pnode(GPIO, 19, 61, ACLR, 3, -1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRACLR, -1, 4), pnode(GPIO, 19, 61, ACLR, 0, -1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRACLR, -1, 5), pnode(GPIO, 19, 61, ACLR, 1, -1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRACLR, -1, 6), pnode(GPIO, 18, 61, ACLR, 2, -1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRACLR, -1, 7), pnode(GPIO, 18, 61, ACLR, 3, -1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRACLR, -1, 8), pnode(GPIO, 14, 61, ACLR, 0, -1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRACLR, -1, 9), pnode(GPIO, 14, 61, ACLR, 1, -1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRACLR, -1, 10), pnode(GPIO, 14, 61, ACLR, 2, -1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRACLR, -1, 11), pnode(GPIO, 14, 61, ACLR, 3, -1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRACLR, -1, 12), pnode(GPIO, 12, 61, ACLR, 2, -1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRACLR, -1, 13), pnode(GPIO, 12, 61, ACLR, 3, -1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRACLR, -1, 14), pnode(GPIO, 10, 61, ACLR, 0, -1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRACLR, -1, 15), pnode(GPIO, 10, 61, ACLR, 1, -1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 0), pnode(GPIO, 21, 61, DATAIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 1), pnode(GPIO, 21, 61, DATAIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 2), pnode(GPIO, 21, 61, DATAIN, 2, 2) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 3), pnode(GPIO, 21, 61, DATAIN, 2, 3) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 4), pnode(GPIO, 21, 61, DATAIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 5), pnode(GPIO, 21, 61, DATAIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 6), pnode(GPIO, 21, 61, DATAIN, 3, 2) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 7), pnode(GPIO, 21, 61, DATAIN, 3, 3) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 8), pnode(GPIO, 19, 61, DATAIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 9), pnode(GPIO, 19, 61, DATAIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 10), pnode(GPIO, 19, 61, DATAIN, 2, 2) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 11), pnode(GPIO, 19, 61, DATAIN, 2, 3) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 12), pnode(GPIO, 19, 61, DATAIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 13), pnode(GPIO, 19, 61, DATAIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 14), pnode(GPIO, 19, 61, DATAIN, 3, 2) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 15), pnode(GPIO, 19, 61, DATAIN, 3, 3) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 16), pnode(GPIO, 19, 61, DATAIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 17), pnode(GPIO, 19, 61, DATAIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 18), pnode(GPIO, 19, 61, DATAIN, 0, 2) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 19), pnode(GPIO, 19, 61, DATAIN, 0, 3) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 20), pnode(GPIO, 19, 61, DATAIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 21), pnode(GPIO, 19, 61, DATAIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 22), pnode(GPIO, 19, 61, DATAIN, 1, 2) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 23), pnode(GPIO, 19, 61, DATAIN, 1, 3) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 24), pnode(GPIO, 18, 61, DATAIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 25), pnode(GPIO, 18, 61, DATAIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 26), pnode(GPIO, 18, 61, DATAIN, 2, 2) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 27), pnode(GPIO, 18, 61, DATAIN, 2, 3) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 28), pnode(GPIO, 18, 61, DATAIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 29), pnode(GPIO, 18, 61, DATAIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 30), pnode(GPIO, 18, 61, DATAIN, 3, 2) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 31), pnode(GPIO, 18, 61, DATAIN, 3, 3) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 32), pnode(GPIO, 14, 61, DATAIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 33), pnode(GPIO, 14, 61, DATAIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 34), pnode(GPIO, 14, 61, DATAIN, 0, 2) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 35), pnode(GPIO, 14, 61, DATAIN, 0, 3) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 36), pnode(GPIO, 14, 61, DATAIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 37), pnode(GPIO, 14, 61, DATAIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 38), pnode(GPIO, 14, 61, DATAIN, 1, 2) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 39), pnode(GPIO, 14, 61, DATAIN, 1, 3) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 40), pnode(GPIO, 14, 61, DATAIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 41), pnode(GPIO, 14, 61, DATAIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 42), pnode(GPIO, 14, 61, DATAIN, 2, 2) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 43), pnode(GPIO, 14, 61, DATAIN, 2, 3) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 44), pnode(GPIO, 14, 61, DATAIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 45), pnode(GPIO, 14, 61, DATAIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 46), pnode(GPIO, 14, 61, DATAIN, 3, 2) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 47), pnode(GPIO, 14, 61, DATAIN, 3, 3) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 48), pnode(GPIO, 12, 61, DATAIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 49), pnode(GPIO, 12, 61, DATAIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 50), pnode(GPIO, 12, 61, DATAIN, 2, 2) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 51), pnode(GPIO, 12, 61, DATAIN, 2, 3) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 52), pnode(GPIO, 12, 61, DATAIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 53), pnode(GPIO, 12, 61, DATAIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 54), pnode(GPIO, 12, 61, DATAIN, 3, 2) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 55), pnode(GPIO, 12, 61, DATAIN, 3, 3) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 56), pnode(GPIO, 10, 61, DATAIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 57), pnode(GPIO, 10, 61, DATAIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 58), pnode(GPIO, 10, 61, DATAIN, 0, 2) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 59), pnode(GPIO, 10, 61, DATAIN, 0, 3) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 60), pnode(GPIO, 10, 61, DATAIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 61), pnode(GPIO, 10, 61, DATAIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 62), pnode(GPIO, 10, 61, DATAIN, 1, 2) },
  { pnode(HMC, 22, 61, PHYDDIOADDRDOUT, -1, 63), pnode(GPIO, 10, 61, DATAIN, 1, 3) },
  { pnode(HMC, 22, 61, PHYDDIOBAACLR, -1, -1), pnode(GPIO, 17, 61, ACLR, 1, -1) },
  { pnode(HMC, 22, 61, PHYDDIOBADOUT, -1, 0), pnode(GPIO, 17, 61, DATAIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIOBADOUT, -1, 1), pnode(GPIO, 17, 61, DATAIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIOBADOUT, -1, 2), pnode(GPIO, 17, 61, DATAIN, 2, 2) },
  { pnode(HMC, 22, 61, PHYDDIOBADOUT, -1, 3), pnode(GPIO, 17, 61, DATAIN, 2, 3) },
  { pnode(HMC, 22, 61, PHYDDIOCASNACLR, -1, -1), pnode(GPIO, 15, 61, ACLR, 2, -1) },
  { pnode(HMC, 22, 61, PHYDDIOCASNDOUT, -1, 0), pnode(GPIO, 15, 61, DATAIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIOCASNDOUT, -1, 1), pnode(GPIO, 15, 61, DATAIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIOCASNDOUT, -1, 2), pnode(GPIO, 15, 61, DATAIN, 2, 2) },
  { pnode(HMC, 22, 61, PHYDDIOCASNDOUT, -1, 3), pnode(GPIO, 15, 61, DATAIN, 2, 3) },
  { pnode(HMC, 22, 61, PHYDDIOCKDOUT, -1, 0), pnode(GPIO, 18, 61, DATAIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIOCKDOUT, -1, 1), pnode(GPIO, 18, 61, DATAIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIOCKDOUT, -1, 2), pnode(GPIO, 18, 61, DATAIN, 0, 2) },
  { pnode(HMC, 22, 61, PHYDDIOCKDOUT, -1, 3), pnode(GPIO, 18, 61, DATAIN, 0, 3) },
  { pnode(HMC, 22, 61, PHYDDIOCKEACLR, -1, 0), pnode(GPIO, 44, 61, ACLR, 3, -1) },
  { pnode(HMC, 22, 61, PHYDDIOCKEACLR, -1, 1), pnode(GPIO, 42, 61, ACLR, 2, -1) },
  { pnode(HMC, 22, 61, PHYDDIOCKEDOUT, -1, 0), pnode(GPIO, 44, 61, DATAIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIOCKEDOUT, -1, 1), pnode(GPIO, 44, 61, DATAIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIOCKEDOUT, -1, 2), pnode(GPIO, 44, 61, DATAIN, 3, 2) },
  { pnode(HMC, 22, 61, PHYDDIOCKEDOUT, -1, 3), pnode(GPIO, 44, 61, DATAIN, 3, 3) },
  { pnode(HMC, 22, 61, PHYDDIOCKEDOUT, -1, 4), pnode(GPIO, 42, 61, DATAIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIOCKEDOUT, -1, 5), pnode(GPIO, 42, 61, DATAIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIOCKEDOUT, -1, 6), pnode(GPIO, 42, 61, DATAIN, 2, 2) },
  { pnode(HMC, 22, 61, PHYDDIOCKEDOUT, -1, 7), pnode(GPIO, 42, 61, DATAIN, 2, 3) },
  { pnode(HMC, 22, 61, PHYDDIOCKNDOUT, -1, 0), pnode(GPIO, 18, 61, DATAIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIOCKNDOUT, -1, 1), pnode(GPIO, 18, 61, DATAIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIOCKNDOUT, -1, 2), pnode(GPIO, 18, 61, DATAIN, 1, 2) },
  { pnode(HMC, 22, 61, PHYDDIOCKNDOUT, -1, 3), pnode(GPIO, 18, 61, DATAIN, 1, 3) },
  { pnode(HMC, 22, 61, PHYDDIOCSNACLR, -1, 0), pnode(GPIO, 12, 61, ACLR, 0, -1) },
  { pnode(HMC, 22, 61, PHYDDIOCSNACLR, -1, 1), pnode(GPIO, 12, 61, ACLR, 1, -1) },
  { pnode(HMC, 22, 61, PHYDDIOCSNDOUT, -1, 0), pnode(GPIO, 12, 61, DATAIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIOCSNDOUT, -1, 1), pnode(GPIO, 12, 61, DATAIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIOCSNDOUT, -1, 2), pnode(GPIO, 12, 61, DATAIN, 0, 2) },
  { pnode(HMC, 22, 61, PHYDDIOCSNDOUT, -1, 3), pnode(GPIO, 12, 61, DATAIN, 0, 3) },
  { pnode(HMC, 22, 61, PHYDDIOCSNDOUT, -1, 4), pnode(GPIO, 12, 61, DATAIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIOCSNDOUT, -1, 5), pnode(GPIO, 12, 61, DATAIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIOCSNDOUT, -1, 6), pnode(GPIO, 12, 61, DATAIN, 1, 2) },
  { pnode(HMC, 22, 61, PHYDDIOCSNDOUT, -1, 7), pnode(GPIO, 12, 61, DATAIN, 1, 3) },
  { pnode(HMC, 22, 61, PHYDDIODMDOUT, -1, 0), pnode(GPIO, 38, 61, DATAIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIODMDOUT, -1, 1), pnode(GPIO, 38, 61, DATAIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIODMDOUT, -1, 2), pnode(GPIO, 38, 61, DATAIN, 2, 2) },
  { pnode(HMC, 22, 61, PHYDDIODMDOUT, -1, 3), pnode(GPIO, 38, 61, DATAIN, 2, 3) },
  { pnode(HMC, 22, 61, PHYDDIODMDOUT, -1, 4), pnode(GPIO, 46, 61, DATAIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIODMDOUT, -1, 5), pnode(GPIO, 46, 61, DATAIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIODMDOUT, -1, 6), pnode(GPIO, 46, 61, DATAIN, 2, 2) },
  { pnode(HMC, 22, 61, PHYDDIODMDOUT, -1, 7), pnode(GPIO, 46, 61, DATAIN, 2, 3) },
  { pnode(HMC, 22, 61, PHYDDIODMDOUT, -1, 8), pnode(GPIO, 53, 61, DATAIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIODMDOUT, -1, 9), pnode(GPIO, 53, 61, DATAIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIODMDOUT, -1, 10), pnode(GPIO, 53, 61, DATAIN, 2, 2) },
  { pnode(HMC, 22, 61, PHYDDIODMDOUT, -1, 11), pnode(GPIO, 53, 61, DATAIN, 2, 3) },
  { pnode(HMC, 22, 61, PHYDDIODMDOUT, -1, 12), pnode(GPIO, 61, 61, DATAIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIODMDOUT, -1, 13), pnode(GPIO, 61, 61, DATAIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIODMDOUT, -1, 14), pnode(GPIO, 61, 61, DATAIN, 2, 2) },
  { pnode(HMC, 22, 61, PHYDDIODMDOUT, -1, 15), pnode(GPIO, 61, 61, DATAIN, 2, 3) },
  { pnode(HMC, 22, 61, PHYDDIODMDOUT, -1, 16), pnode(GPIO, 66, 61, DATAIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIODMDOUT, -1, 17), pnode(GPIO, 66, 61, DATAIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIODMDOUT, -1, 18), pnode(GPIO, 66, 61, DATAIN, 2, 2) },
  { pnode(HMC, 22, 61, PHYDDIODMDOUT, -1, 19), pnode(GPIO, 66, 61, DATAIN, 2, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 0), pnode(GPIO, 32, 61, DATAIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 1), pnode(GPIO, 32, 61, DATAIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 2), pnode(GPIO, 32, 61, DATAIN, 1, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 3), pnode(GPIO, 32, 61, DATAIN, 1, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 4), pnode(GPIO, 32, 61, DATAIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 5), pnode(GPIO, 32, 61, DATAIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 6), pnode(GPIO, 32, 61, DATAIN, 0, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 7), pnode(GPIO, 32, 61, DATAIN, 0, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 8), pnode(GPIO, 32, 61, DATAIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 9), pnode(GPIO, 32, 61, DATAIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 10), pnode(GPIO, 32, 61, DATAIN, 2, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 11), pnode(GPIO, 32, 61, DATAIN, 2, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 12), pnode(GPIO, 34, 61, DATAIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 13), pnode(GPIO, 34, 61, DATAIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 14), pnode(GPIO, 34, 61, DATAIN, 3, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 15), pnode(GPIO, 34, 61, DATAIN, 3, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 16), pnode(GPIO, 36, 61, DATAIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 17), pnode(GPIO, 36, 61, DATAIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 18), pnode(GPIO, 36, 61, DATAIN, 1, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 19), pnode(GPIO, 36, 61, DATAIN, 1, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 20), pnode(GPIO, 36, 61, DATAIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 21), pnode(GPIO, 36, 61, DATAIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 22), pnode(GPIO, 36, 61, DATAIN, 0, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 23), pnode(GPIO, 36, 61, DATAIN, 0, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 24), pnode(GPIO, 36, 61, DATAIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 25), pnode(GPIO, 36, 61, DATAIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 26), pnode(GPIO, 36, 61, DATAIN, 2, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 27), pnode(GPIO, 36, 61, DATAIN, 2, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 28), pnode(GPIO, 38, 61, DATAIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 29), pnode(GPIO, 38, 61, DATAIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 30), pnode(GPIO, 38, 61, DATAIN, 3, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 31), pnode(GPIO, 38, 61, DATAIN, 3, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 36), pnode(GPIO, 40, 61, DATAIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 37), pnode(GPIO, 40, 61, DATAIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 38), pnode(GPIO, 40, 61, DATAIN, 1, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 39), pnode(GPIO, 40, 61, DATAIN, 1, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 40), pnode(GPIO, 40, 61, DATAIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 41), pnode(GPIO, 40, 61, DATAIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 42), pnode(GPIO, 40, 61, DATAIN, 0, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 43), pnode(GPIO, 40, 61, DATAIN, 0, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 44), pnode(GPIO, 40, 61, DATAIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 45), pnode(GPIO, 40, 61, DATAIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 46), pnode(GPIO, 40, 61, DATAIN, 2, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 47), pnode(GPIO, 40, 61, DATAIN, 2, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 48), pnode(GPIO, 42, 61, DATAIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 49), pnode(GPIO, 42, 61, DATAIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 50), pnode(GPIO, 42, 61, DATAIN, 3, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 51), pnode(GPIO, 42, 61, DATAIN, 3, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 52), pnode(GPIO, 44, 61, DATAIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 53), pnode(GPIO, 44, 61, DATAIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 54), pnode(GPIO, 44, 61, DATAIN, 1, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 55), pnode(GPIO, 44, 61, DATAIN, 1, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 56), pnode(GPIO, 44, 61, DATAIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 57), pnode(GPIO, 44, 61, DATAIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 58), pnode(GPIO, 44, 61, DATAIN, 0, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 59), pnode(GPIO, 44, 61, DATAIN, 0, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 60), pnode(GPIO, 44, 61, DATAIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 61), pnode(GPIO, 44, 61, DATAIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 62), pnode(GPIO, 44, 61, DATAIN, 2, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 63), pnode(GPIO, 44, 61, DATAIN, 2, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 64), pnode(GPIO, 46, 61, DATAIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 65), pnode(GPIO, 46, 61, DATAIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 66), pnode(GPIO, 46, 61, DATAIN, 3, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 67), pnode(GPIO, 46, 61, DATAIN, 3, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 72), pnode(GPIO, 48, 61, DATAIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 73), pnode(GPIO, 48, 61, DATAIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 74), pnode(GPIO, 48, 61, DATAIN, 1, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 75), pnode(GPIO, 48, 61, DATAIN, 1, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 76), pnode(GPIO, 48, 61, DATAIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 77), pnode(GPIO, 48, 61, DATAIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 78), pnode(GPIO, 48, 61, DATAIN, 0, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 79), pnode(GPIO, 48, 61, DATAIN, 0, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 80), pnode(GPIO, 48, 61, DATAIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 81), pnode(GPIO, 48, 61, DATAIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 82), pnode(GPIO, 48, 61, DATAIN, 2, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 83), pnode(GPIO, 48, 61, DATAIN, 2, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 84), pnode(GPIO, 50, 61, DATAIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 85), pnode(GPIO, 50, 61, DATAIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 86), pnode(GPIO, 50, 61, DATAIN, 3, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 87), pnode(GPIO, 50, 61, DATAIN, 3, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 88), pnode(GPIO, 51, 61, DATAIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 89), pnode(GPIO, 51, 61, DATAIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 90), pnode(GPIO, 51, 61, DATAIN, 1, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 91), pnode(GPIO, 51, 61, DATAIN, 1, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 92), pnode(GPIO, 51, 61, DATAIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 93), pnode(GPIO, 51, 61, DATAIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 94), pnode(GPIO, 51, 61, DATAIN, 0, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 95), pnode(GPIO, 51, 61, DATAIN, 0, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 96), pnode(GPIO, 51, 61, DATAIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 97), pnode(GPIO, 51, 61, DATAIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 98), pnode(GPIO, 51, 61, DATAIN, 2, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 99), pnode(GPIO, 51, 61, DATAIN, 2, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 100), pnode(GPIO, 53, 61, DATAIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 101), pnode(GPIO, 53, 61, DATAIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 102), pnode(GPIO, 53, 61, DATAIN, 3, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 103), pnode(GPIO, 53, 61, DATAIN, 3, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 108), pnode(GPIO, 55, 61, DATAIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 109), pnode(GPIO, 55, 61, DATAIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 110), pnode(GPIO, 55, 61, DATAIN, 1, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 111), pnode(GPIO, 55, 61, DATAIN, 1, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 112), pnode(GPIO, 55, 61, DATAIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 113), pnode(GPIO, 55, 61, DATAIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 114), pnode(GPIO, 55, 61, DATAIN, 0, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 115), pnode(GPIO, 55, 61, DATAIN, 0, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 116), pnode(GPIO, 55, 61, DATAIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 117), pnode(GPIO, 55, 61, DATAIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 118), pnode(GPIO, 55, 61, DATAIN, 2, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 119), pnode(GPIO, 55, 61, DATAIN, 2, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 120), pnode(GPIO, 57, 61, DATAIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 121), pnode(GPIO, 57, 61, DATAIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 122), pnode(GPIO, 57, 61, DATAIN, 3, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 123), pnode(GPIO, 57, 61, DATAIN, 3, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 124), pnode(GPIO, 59, 61, DATAIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 125), pnode(GPIO, 59, 61, DATAIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 126), pnode(GPIO, 59, 61, DATAIN, 1, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 127), pnode(GPIO, 59, 61, DATAIN, 1, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 128), pnode(GPIO, 59, 61, DATAIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 129), pnode(GPIO, 59, 61, DATAIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 130), pnode(GPIO, 59, 61, DATAIN, 0, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 131), pnode(GPIO, 59, 61, DATAIN, 0, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 132), pnode(GPIO, 59, 61, DATAIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 133), pnode(GPIO, 59, 61, DATAIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 134), pnode(GPIO, 59, 61, DATAIN, 2, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 135), pnode(GPIO, 59, 61, DATAIN, 2, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 136), pnode(GPIO, 61, 61, DATAIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 137), pnode(GPIO, 61, 61, DATAIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 138), pnode(GPIO, 61, 61, DATAIN, 3, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 139), pnode(GPIO, 61, 61, DATAIN, 3, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 144), pnode(GPIO, 62, 61, DATAIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 145), pnode(GPIO, 62, 61, DATAIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 146), pnode(GPIO, 62, 61, DATAIN, 1, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 147), pnode(GPIO, 62, 61, DATAIN, 1, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 148), pnode(GPIO, 62, 61, DATAIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 149), pnode(GPIO, 62, 61, DATAIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 150), pnode(GPIO, 62, 61, DATAIN, 0, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 151), pnode(GPIO, 62, 61, DATAIN, 0, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 152), pnode(GPIO, 62, 61, DATAIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 153), pnode(GPIO, 62, 61, DATAIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 154), pnode(GPIO, 62, 61, DATAIN, 2, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 155), pnode(GPIO, 62, 61, DATAIN, 2, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 156), pnode(GPIO, 64, 61, DATAIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 157), pnode(GPIO, 64, 61, DATAIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 158), pnode(GPIO, 64, 61, DATAIN, 3, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 159), pnode(GPIO, 64, 61, DATAIN, 3, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 160), pnode(GPIO, 65, 61, DATAIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 161), pnode(GPIO, 65, 61, DATAIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 162), pnode(GPIO, 65, 61, DATAIN, 1, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 163), pnode(GPIO, 65, 61, DATAIN, 1, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 164), pnode(GPIO, 65, 61, DATAIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 165), pnode(GPIO, 65, 61, DATAIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 166), pnode(GPIO, 65, 61, DATAIN, 0, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 167), pnode(GPIO, 65, 61, DATAIN, 0, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 168), pnode(GPIO, 65, 61, DATAIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 169), pnode(GPIO, 65, 61, DATAIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 170), pnode(GPIO, 65, 61, DATAIN, 2, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 171), pnode(GPIO, 65, 61, DATAIN, 2, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 172), pnode(GPIO, 66, 61, DATAIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 173), pnode(GPIO, 66, 61, DATAIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 174), pnode(GPIO, 66, 61, DATAIN, 3, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQDOUT, -1, 175), pnode(GPIO, 66, 61, DATAIN, 3, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 0), pnode(GPIO, 32, 61, OEIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 1), pnode(GPIO, 32, 61, OEIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 2), pnode(GPIO, 32, 61, OEIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 3), pnode(GPIO, 32, 61, OEIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 4), pnode(GPIO, 32, 61, OEIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 5), pnode(GPIO, 32, 61, OEIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 6), pnode(GPIO, 34, 61, OEIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 7), pnode(GPIO, 34, 61, OEIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 8), pnode(GPIO, 36, 61, OEIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 9), pnode(GPIO, 36, 61, OEIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 10), pnode(GPIO, 36, 61, OEIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 11), pnode(GPIO, 36, 61, OEIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 12), pnode(GPIO, 36, 61, OEIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 13), pnode(GPIO, 36, 61, OEIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 14), pnode(GPIO, 38, 61, OEIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 15), pnode(GPIO, 38, 61, OEIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 18), pnode(GPIO, 40, 61, OEIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 19), pnode(GPIO, 40, 61, OEIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 20), pnode(GPIO, 40, 61, OEIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 21), pnode(GPIO, 40, 61, OEIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 22), pnode(GPIO, 40, 61, OEIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 23), pnode(GPIO, 40, 61, OEIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 24), pnode(GPIO, 42, 61, OEIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 25), pnode(GPIO, 42, 61, OEIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 26), pnode(GPIO, 44, 61, OEIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 27), pnode(GPIO, 44, 61, OEIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 28), pnode(GPIO, 44, 61, OEIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 29), pnode(GPIO, 44, 61, OEIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 30), pnode(GPIO, 44, 61, OEIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 31), pnode(GPIO, 44, 61, OEIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 32), pnode(GPIO, 46, 61, OEIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 33), pnode(GPIO, 46, 61, OEIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 36), pnode(GPIO, 48, 61, OEIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 37), pnode(GPIO, 48, 61, OEIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 38), pnode(GPIO, 48, 61, OEIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 39), pnode(GPIO, 48, 61, OEIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 40), pnode(GPIO, 48, 61, OEIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 41), pnode(GPIO, 48, 61, OEIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 42), pnode(GPIO, 50, 61, OEIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 43), pnode(GPIO, 50, 61, OEIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 44), pnode(GPIO, 51, 61, OEIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 45), pnode(GPIO, 51, 61, OEIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 46), pnode(GPIO, 51, 61, OEIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 47), pnode(GPIO, 51, 61, OEIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 48), pnode(GPIO, 51, 61, OEIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 49), pnode(GPIO, 51, 61, OEIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 50), pnode(GPIO, 53, 61, OEIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 51), pnode(GPIO, 53, 61, OEIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 54), pnode(GPIO, 55, 61, OEIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 55), pnode(GPIO, 55, 61, OEIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 56), pnode(GPIO, 55, 61, OEIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 57), pnode(GPIO, 55, 61, OEIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 58), pnode(GPIO, 55, 61, OEIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 59), pnode(GPIO, 55, 61, OEIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 60), pnode(GPIO, 57, 61, OEIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 61), pnode(GPIO, 57, 61, OEIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 62), pnode(GPIO, 59, 61, OEIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 63), pnode(GPIO, 59, 61, OEIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 64), pnode(GPIO, 59, 61, OEIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 65), pnode(GPIO, 59, 61, OEIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 66), pnode(GPIO, 59, 61, OEIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 67), pnode(GPIO, 59, 61, OEIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 68), pnode(GPIO, 61, 61, OEIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 69), pnode(GPIO, 61, 61, OEIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 72), pnode(GPIO, 62, 61, OEIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 73), pnode(GPIO, 62, 61, OEIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 74), pnode(GPIO, 62, 61, OEIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 75), pnode(GPIO, 62, 61, OEIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 76), pnode(GPIO, 62, 61, OEIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 77), pnode(GPIO, 62, 61, OEIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 78), pnode(GPIO, 64, 61, OEIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 79), pnode(GPIO, 64, 61, OEIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 80), pnode(GPIO, 65, 61, OEIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 81), pnode(GPIO, 65, 61, OEIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 82), pnode(GPIO, 65, 61, OEIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 83), pnode(GPIO, 65, 61, OEIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 84), pnode(GPIO, 65, 61, OEIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 85), pnode(GPIO, 65, 61, OEIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 86), pnode(GPIO, 66, 61, OEIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQOE, -1, 87), pnode(GPIO, 66, 61, OEIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQSBDOUT, -1, 0), pnode(GPIO, 34, 61, DATAIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQSBDOUT, -1, 1), pnode(GPIO, 34, 61, DATAIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQSBDOUT, -1, 2), pnode(GPIO, 34, 61, DATAIN, 1, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQSBDOUT, -1, 3), pnode(GPIO, 34, 61, DATAIN, 1, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQSBDOUT, -1, 4), pnode(GPIO, 42, 61, DATAIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQSBDOUT, -1, 5), pnode(GPIO, 42, 61, DATAIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQSBDOUT, -1, 6), pnode(GPIO, 42, 61, DATAIN, 1, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQSBDOUT, -1, 7), pnode(GPIO, 42, 61, DATAIN, 1, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQSBDOUT, -1, 8), pnode(GPIO, 50, 61, DATAIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQSBDOUT, -1, 9), pnode(GPIO, 50, 61, DATAIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQSBDOUT, -1, 10), pnode(GPIO, 50, 61, DATAIN, 1, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQSBDOUT, -1, 11), pnode(GPIO, 50, 61, DATAIN, 1, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQSBDOUT, -1, 12), pnode(GPIO, 57, 61, DATAIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQSBDOUT, -1, 13), pnode(GPIO, 57, 61, DATAIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQSBDOUT, -1, 14), pnode(GPIO, 57, 61, DATAIN, 1, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQSBDOUT, -1, 15), pnode(GPIO, 57, 61, DATAIN, 1, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQSBDOUT, -1, 16), pnode(GPIO, 64, 61, DATAIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQSBDOUT, -1, 17), pnode(GPIO, 64, 61, DATAIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQSBDOUT, -1, 18), pnode(GPIO, 64, 61, DATAIN, 1, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQSBDOUT, -1, 19), pnode(GPIO, 64, 61, DATAIN, 1, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQSBOE, -1, 0), pnode(GPIO, 34, 61, OEIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQSBOE, -1, 1), pnode(GPIO, 34, 61, OEIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQSBOE, -1, 2), pnode(GPIO, 42, 61, OEIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQSBOE, -1, 3), pnode(GPIO, 42, 61, OEIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQSBOE, -1, 4), pnode(GPIO, 50, 61, OEIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQSBOE, -1, 5), pnode(GPIO, 50, 61, OEIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQSBOE, -1, 6), pnode(GPIO, 57, 61, OEIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQSBOE, -1, 7), pnode(GPIO, 57, 61, OEIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQSBOE, -1, 8), pnode(GPIO, 64, 61, OEIN, 1, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQSBOE, -1, 9), pnode(GPIO, 64, 61, OEIN, 1, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQSDOUT, -1, 0), pnode(GPIO, 34, 61, DATAIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQSDOUT, -1, 1), pnode(GPIO, 34, 61, DATAIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQSDOUT, -1, 2), pnode(GPIO, 34, 61, DATAIN, 0, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQSDOUT, -1, 3), pnode(GPIO, 34, 61, DATAIN, 0, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQSDOUT, -1, 4), pnode(GPIO, 42, 61, DATAIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQSDOUT, -1, 5), pnode(GPIO, 42, 61, DATAIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQSDOUT, -1, 6), pnode(GPIO, 42, 61, DATAIN, 0, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQSDOUT, -1, 7), pnode(GPIO, 42, 61, DATAIN, 0, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQSDOUT, -1, 8), pnode(GPIO, 50, 61, DATAIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQSDOUT, -1, 9), pnode(GPIO, 50, 61, DATAIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQSDOUT, -1, 10), pnode(GPIO, 50, 61, DATAIN, 0, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQSDOUT, -1, 11), pnode(GPIO, 50, 61, DATAIN, 0, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQSDOUT, -1, 12), pnode(GPIO, 57, 61, DATAIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQSDOUT, -1, 13), pnode(GPIO, 57, 61, DATAIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQSDOUT, -1, 14), pnode(GPIO, 57, 61, DATAIN, 0, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQSDOUT, -1, 15), pnode(GPIO, 57, 61, DATAIN, 0, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQSDOUT, -1, 16), pnode(GPIO, 64, 61, DATAIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQSDOUT, -1, 17), pnode(GPIO, 64, 61, DATAIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQSDOUT, -1, 18), pnode(GPIO, 64, 61, DATAIN, 0, 2) },
  { pnode(HMC, 22, 61, PHYDDIODQSDOUT, -1, 19), pnode(GPIO, 64, 61, DATAIN, 0, 3) },
  { pnode(HMC, 22, 61, PHYDDIODQSOE, -1, 0), pnode(GPIO, 34, 61, OEIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQSOE, -1, 1), pnode(GPIO, 34, 61, OEIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQSOE, -1, 2), pnode(GPIO, 42, 61, OEIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQSOE, -1, 3), pnode(GPIO, 42, 61, OEIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQSOE, -1, 4), pnode(GPIO, 50, 61, OEIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQSOE, -1, 5), pnode(GPIO, 50, 61, OEIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQSOE, -1, 6), pnode(GPIO, 57, 61, OEIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQSOE, -1, 7), pnode(GPIO, 57, 61, OEIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIODQSOE, -1, 8), pnode(GPIO, 64, 61, OEIN, 0, 0) },
  { pnode(HMC, 22, 61, PHYDDIODQSOE, -1, 9), pnode(GPIO, 64, 61, OEIN, 0, 1) },
  { pnode(HMC, 22, 61, PHYDDIOODTACLR, -1, 0), pnode(GPIO, 34, 61, ACLR, 2, -1) },
  { pnode(HMC, 22, 61, PHYDDIOODTACLR, -1, 1), pnode(GPIO, 36, 61, ACLR, 3, -1) },
  { pnode(HMC, 22, 61, PHYDDIOODTDOUT, -1, 0), pnode(GPIO, 34, 61, DATAIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIOODTDOUT, -1, 1), pnode(GPIO, 34, 61, DATAIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIOODTDOUT, -1, 2), pnode(GPIO, 34, 61, DATAIN, 2, 2) },
  { pnode(HMC, 22, 61, PHYDDIOODTDOUT, -1, 3), pnode(GPIO, 34, 61, DATAIN, 2, 3) },
  { pnode(HMC, 22, 61, PHYDDIOODTDOUT, -1, 4), pnode(GPIO, 36, 61, DATAIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIOODTDOUT, -1, 5), pnode(GPIO, 36, 61, DATAIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIOODTDOUT, -1, 6), pnode(GPIO, 36, 61, DATAIN, 3, 2) },
  { pnode(HMC, 22, 61, PHYDDIOODTDOUT, -1, 7), pnode(GPIO, 36, 61, DATAIN, 3, 3) },
  { pnode(HMC, 22, 61, PHYDDIORASNACLR, -1, -1), pnode(GPIO, 15, 61, ACLR, 3, -1) },
  { pnode(HMC, 22, 61, PHYDDIORASNDOUT, -1, 0), pnode(GPIO, 15, 61, DATAIN, 3, 0) },
  { pnode(HMC, 22, 61, PHYDDIORASNDOUT, -1, 1), pnode(GPIO, 15, 61, DATAIN, 3, 1) },
  { pnode(HMC, 22, 61, PHYDDIORASNDOUT, -1, 2), pnode(GPIO, 15, 61, DATAIN, 3, 2) },
  { pnode(HMC, 22, 61, PHYDDIORASNDOUT, -1, 3), pnode(GPIO, 15, 61, DATAIN, 3, 3) },
  { pnode(HMC, 22, 61, PHYDDIORESETNACLR, -1, -1), pnode(GPIO, 50, 61, ACLR, 2, -1) },
  { pnode(HMC, 22, 61, PHYDDIORESETNDOUT, -1, 0), pnode(GPIO, 50, 61, DATAIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIORESETNDOUT, -1, 1), pnode(GPIO, 50, 61, DATAIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIORESETNDOUT, -1, 2), pnode(GPIO, 50, 61, DATAIN, 2, 2) },
  { pnode(HMC, 22, 61, PHYDDIORESETNDOUT, -1, 3), pnode(GPIO, 50, 61, DATAIN, 2, 3) },
  { pnode(HMC, 22, 61, PHYDDIOWENACLR, -1, -1), pnode(GPIO, 10, 61, ACLR, 2, -1) },
  { pnode(HMC, 22, 61, PHYDDIOWENDOUT, -1, 0), pnode(GPIO, 10, 61, DATAIN, 2, 0) },
  { pnode(HMC, 22, 61, PHYDDIOWENDOUT, -1, 1), pnode(GPIO, 10, 61, DATAIN, 2, 1) },
  { pnode(HMC, 22, 61, PHYDDIOWENDOUT, -1, 2), pnode(GPIO, 10, 61, DATAIN, 2, 2) },
  { pnode(HMC, 22, 61, PHYDDIOWENDOUT, -1, 3), pnode(GPIO, 10, 61, DATAIN, 2, 3) },
  { pnode(HMC, 22, 61, PNONE, 0, -1), pnode(DQS16, 32, 61, PNONE, -1, -1) },
  { pnode(HMC, 22, 61, PNONE, 1, -1), pnode(DQS16, 40, 61, PNONE, -1, -1) },
  { pnode(HMC, 22, 61, PNONE, 2, -1), pnode(DQS16, 48, 61, PNONE, -1, -1) },
  { pnode(HMC, 22, 61, PNONE, 3, -1), pnode(DQS16, 55, 61, PNONE, -1, -1) },
  { pnode(HMC, 22, 61, PNONE, 4, -1), pnode(DQS16, 62, 61, PNONE, -1, -1) },
  { pnode(HMC, 22, 61, PNONE, -1, -1), pnode(LVL, 54, 61, PNONE, -1, -1) },
  { pnode(GPIO, 32, 0, DATAOUT, 1, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 0) },
  { pnode(GPIO, 32, 0, DATAOUT, 1, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 1) },
  { pnode(GPIO, 32, 0, DATAOUT, 1, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 2) },
  { pnode(GPIO, 32, 0, DATAOUT, 1, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 3) },
  { pnode(GPIO, 32, 0, DATAOUT, 0, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 4) },
  { pnode(GPIO, 32, 0, DATAOUT, 0, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 5) },
  { pnode(GPIO, 32, 0, DATAOUT, 0, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 6) },
  { pnode(GPIO, 32, 0, DATAOUT, 0, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 7) },
  { pnode(GPIO, 32, 0, DATAOUT, 2, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 8) },
  { pnode(GPIO, 32, 0, DATAOUT, 2, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 9) },
  { pnode(GPIO, 32, 0, DATAOUT, 2, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 10) },
  { pnode(GPIO, 32, 0, DATAOUT, 2, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 11) },
  { pnode(GPIO, 34, 0, DATAOUT, 3, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 12) },
  { pnode(GPIO, 34, 0, DATAOUT, 3, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 13) },
  { pnode(GPIO, 34, 0, DATAOUT, 3, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 14) },
  { pnode(GPIO, 34, 0, DATAOUT, 3, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 15) },
  { pnode(GPIO, 36, 0, DATAOUT, 1, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 16) },
  { pnode(GPIO, 36, 0, DATAOUT, 1, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 17) },
  { pnode(GPIO, 36, 0, DATAOUT, 1, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 18) },
  { pnode(GPIO, 36, 0, DATAOUT, 1, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 19) },
  { pnode(GPIO, 36, 0, DATAOUT, 0, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 20) },
  { pnode(GPIO, 36, 0, DATAOUT, 0, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 21) },
  { pnode(GPIO, 36, 0, DATAOUT, 0, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 22) },
  { pnode(GPIO, 36, 0, DATAOUT, 0, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 23) },
  { pnode(GPIO, 36, 0, DATAOUT, 2, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 24) },
  { pnode(GPIO, 36, 0, DATAOUT, 2, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 25) },
  { pnode(GPIO, 36, 0, DATAOUT, 2, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 26) },
  { pnode(GPIO, 36, 0, DATAOUT, 2, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 27) },
  { pnode(GPIO, 38, 0, DATAOUT, 3, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 28) },
  { pnode(GPIO, 38, 0, DATAOUT, 3, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 29) },
  { pnode(GPIO, 38, 0, DATAOUT, 3, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 30) },
  { pnode(GPIO, 38, 0, DATAOUT, 3, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 31) },
  { pnode(GPIO, 40, 0, DATAOUT, 1, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 36) },
  { pnode(GPIO, 40, 0, DATAOUT, 1, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 37) },
  { pnode(GPIO, 40, 0, DATAOUT, 1, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 38) },
  { pnode(GPIO, 40, 0, DATAOUT, 1, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 39) },
  { pnode(GPIO, 40, 0, DATAOUT, 0, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 40) },
  { pnode(GPIO, 40, 0, DATAOUT, 0, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 41) },
  { pnode(GPIO, 40, 0, DATAOUT, 0, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 42) },
  { pnode(GPIO, 40, 0, DATAOUT, 0, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 43) },
  { pnode(GPIO, 40, 0, DATAOUT, 2, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 44) },
  { pnode(GPIO, 40, 0, DATAOUT, 2, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 45) },
  { pnode(GPIO, 40, 0, DATAOUT, 2, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 46) },
  { pnode(GPIO, 40, 0, DATAOUT, 2, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 47) },
  { pnode(GPIO, 42, 0, DATAOUT, 3, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 48) },
  { pnode(GPIO, 42, 0, DATAOUT, 3, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 49) },
  { pnode(GPIO, 42, 0, DATAOUT, 3, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 50) },
  { pnode(GPIO, 42, 0, DATAOUT, 3, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 51) },
  { pnode(GPIO, 44, 0, DATAOUT, 1, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 52) },
  { pnode(GPIO, 44, 0, DATAOUT, 1, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 53) },
  { pnode(GPIO, 44, 0, DATAOUT, 1, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 54) },
  { pnode(GPIO, 44, 0, DATAOUT, 1, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 55) },
  { pnode(GPIO, 44, 0, DATAOUT, 0, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 56) },
  { pnode(GPIO, 44, 0, DATAOUT, 0, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 57) },
  { pnode(GPIO, 44, 0, DATAOUT, 0, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 58) },
  { pnode(GPIO, 44, 0, DATAOUT, 0, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 59) },
  { pnode(GPIO, 44, 0, DATAOUT, 2, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 60) },
  { pnode(GPIO, 44, 0, DATAOUT, 2, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 61) },
  { pnode(GPIO, 44, 0, DATAOUT, 2, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 62) },
  { pnode(GPIO, 44, 0, DATAOUT, 2, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 63) },
  { pnode(GPIO, 46, 0, DATAOUT, 3, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 64) },
  { pnode(GPIO, 46, 0, DATAOUT, 3, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 65) },
  { pnode(GPIO, 46, 0, DATAOUT, 3, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 66) },
  { pnode(GPIO, 46, 0, DATAOUT, 3, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 67) },
  { pnode(GPIO, 48, 0, DATAOUT, 1, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 72) },
  { pnode(GPIO, 48, 0, DATAOUT, 1, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 73) },
  { pnode(GPIO, 48, 0, DATAOUT, 1, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 74) },
  { pnode(GPIO, 48, 0, DATAOUT, 1, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 75) },
  { pnode(GPIO, 48, 0, DATAOUT, 0, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 76) },
  { pnode(GPIO, 48, 0, DATAOUT, 0, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 77) },
  { pnode(GPIO, 48, 0, DATAOUT, 0, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 78) },
  { pnode(GPIO, 48, 0, DATAOUT, 0, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 79) },
  { pnode(GPIO, 48, 0, DATAOUT, 2, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 80) },
  { pnode(GPIO, 48, 0, DATAOUT, 2, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 81) },
  { pnode(GPIO, 48, 0, DATAOUT, 2, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 82) },
  { pnode(GPIO, 48, 0, DATAOUT, 2, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 83) },
  { pnode(GPIO, 50, 0, DATAOUT, 3, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 84) },
  { pnode(GPIO, 50, 0, DATAOUT, 3, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 85) },
  { pnode(GPIO, 50, 0, DATAOUT, 3, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 86) },
  { pnode(GPIO, 50, 0, DATAOUT, 3, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 87) },
  { pnode(GPIO, 51, 0, DATAOUT, 1, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 88) },
  { pnode(GPIO, 51, 0, DATAOUT, 1, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 89) },
  { pnode(GPIO, 51, 0, DATAOUT, 1, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 90) },
  { pnode(GPIO, 51, 0, DATAOUT, 1, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 91) },
  { pnode(GPIO, 51, 0, DATAOUT, 0, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 92) },
  { pnode(GPIO, 51, 0, DATAOUT, 0, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 93) },
  { pnode(GPIO, 51, 0, DATAOUT, 0, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 94) },
  { pnode(GPIO, 51, 0, DATAOUT, 0, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 95) },
  { pnode(GPIO, 51, 0, DATAOUT, 2, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 96) },
  { pnode(GPIO, 51, 0, DATAOUT, 2, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 97) },
  { pnode(GPIO, 51, 0, DATAOUT, 2, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 98) },
  { pnode(GPIO, 51, 0, DATAOUT, 2, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 99) },
  { pnode(GPIO, 53, 0, DATAOUT, 3, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 100) },
  { pnode(GPIO, 53, 0, DATAOUT, 3, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 101) },
  { pnode(GPIO, 53, 0, DATAOUT, 3, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 102) },
  { pnode(GPIO, 53, 0, DATAOUT, 3, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 103) },
  { pnode(GPIO, 55, 0, DATAOUT, 1, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 108) },
  { pnode(GPIO, 55, 0, DATAOUT, 1, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 109) },
  { pnode(GPIO, 55, 0, DATAOUT, 1, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 110) },
  { pnode(GPIO, 55, 0, DATAOUT, 1, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 111) },
  { pnode(GPIO, 55, 0, DATAOUT, 0, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 112) },
  { pnode(GPIO, 55, 0, DATAOUT, 0, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 113) },
  { pnode(GPIO, 55, 0, DATAOUT, 0, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 114) },
  { pnode(GPIO, 55, 0, DATAOUT, 0, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 115) },
  { pnode(GPIO, 55, 0, DATAOUT, 2, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 116) },
  { pnode(GPIO, 55, 0, DATAOUT, 2, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 117) },
  { pnode(GPIO, 55, 0, DATAOUT, 2, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 118) },
  { pnode(GPIO, 55, 0, DATAOUT, 2, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 119) },
  { pnode(GPIO, 57, 0, DATAOUT, 3, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 120) },
  { pnode(GPIO, 57, 0, DATAOUT, 3, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 121) },
  { pnode(GPIO, 57, 0, DATAOUT, 3, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 122) },
  { pnode(GPIO, 57, 0, DATAOUT, 3, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 123) },
  { pnode(GPIO, 59, 0, DATAOUT, 1, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 124) },
  { pnode(GPIO, 59, 0, DATAOUT, 1, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 125) },
  { pnode(GPIO, 59, 0, DATAOUT, 1, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 126) },
  { pnode(GPIO, 59, 0, DATAOUT, 1, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 127) },
  { pnode(GPIO, 59, 0, DATAOUT, 0, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 128) },
  { pnode(GPIO, 59, 0, DATAOUT, 0, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 129) },
  { pnode(GPIO, 59, 0, DATAOUT, 0, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 130) },
  { pnode(GPIO, 59, 0, DATAOUT, 0, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 131) },
  { pnode(GPIO, 59, 0, DATAOUT, 2, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 132) },
  { pnode(GPIO, 59, 0, DATAOUT, 2, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 133) },
  { pnode(GPIO, 59, 0, DATAOUT, 2, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 134) },
  { pnode(GPIO, 59, 0, DATAOUT, 2, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 135) },
  { pnode(GPIO, 61, 0, DATAOUT, 3, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 136) },
  { pnode(GPIO, 61, 0, DATAOUT, 3, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 137) },
  { pnode(GPIO, 61, 0, DATAOUT, 3, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 138) },
  { pnode(GPIO, 61, 0, DATAOUT, 3, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 139) },
  { pnode(GPIO, 62, 0, DATAOUT, 1, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 144) },
  { pnode(GPIO, 62, 0, DATAOUT, 1, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 145) },
  { pnode(GPIO, 62, 0, DATAOUT, 1, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 146) },
  { pnode(GPIO, 62, 0, DATAOUT, 1, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 147) },
  { pnode(GPIO, 62, 0, DATAOUT, 0, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 148) },
  { pnode(GPIO, 62, 0, DATAOUT, 0, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 149) },
  { pnode(GPIO, 62, 0, DATAOUT, 0, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 150) },
  { pnode(GPIO, 62, 0, DATAOUT, 0, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 151) },
  { pnode(GPIO, 62, 0, DATAOUT, 2, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 152) },
  { pnode(GPIO, 62, 0, DATAOUT, 2, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 153) },
  { pnode(GPIO, 62, 0, DATAOUT, 2, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 154) },
  { pnode(GPIO, 62, 0, DATAOUT, 2, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 155) },
  { pnode(GPIO, 64, 0, DATAOUT, 3, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 156) },
  { pnode(GPIO, 64, 0, DATAOUT, 3, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 157) },
  { pnode(GPIO, 64, 0, DATAOUT, 3, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 158) },
  { pnode(GPIO, 64, 0, DATAOUT, 3, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 159) },
  { pnode(GPIO, 65, 0, DATAOUT, 1, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 160) },
  { pnode(GPIO, 65, 0, DATAOUT, 1, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 161) },
  { pnode(GPIO, 65, 0, DATAOUT, 1, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 162) },
  { pnode(GPIO, 65, 0, DATAOUT, 1, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 163) },
  { pnode(GPIO, 65, 0, DATAOUT, 0, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 164) },
  { pnode(GPIO, 65, 0, DATAOUT, 0, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 165) },
  { pnode(GPIO, 65, 0, DATAOUT, 0, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 166) },
  { pnode(GPIO, 65, 0, DATAOUT, 0, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 167) },
  { pnode(GPIO, 65, 0, DATAOUT, 2, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 168) },
  { pnode(GPIO, 65, 0, DATAOUT, 2, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 169) },
  { pnode(GPIO, 65, 0, DATAOUT, 2, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 170) },
  { pnode(GPIO, 65, 0, DATAOUT, 2, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 171) },
  { pnode(GPIO, 66, 0, DATAOUT, 3, 0), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 172) },
  { pnode(GPIO, 66, 0, DATAOUT, 3, 1), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 173) },
  { pnode(GPIO, 66, 0, DATAOUT, 3, 2), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 174) },
  { pnode(GPIO, 66, 0, DATAOUT, 3, 3), pnode(HMC, 23, 0, DDIOPHYDQDIN, -1, 175) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 0), pnode(GPIO, 21, 0, ACLR, 2, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 1), pnode(GPIO, 21, 0, ACLR, 3, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 2), pnode(GPIO, 19, 0, ACLR, 2, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 3), pnode(GPIO, 19, 0, ACLR, 3, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 4), pnode(GPIO, 19, 0, ACLR, 0, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 5), pnode(GPIO, 19, 0, ACLR, 1, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 6), pnode(GPIO, 18, 0, ACLR, 2, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 7), pnode(GPIO, 18, 0, ACLR, 3, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 8), pnode(GPIO, 14, 0, ACLR, 0, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 9), pnode(GPIO, 14, 0, ACLR, 1, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 10), pnode(GPIO, 14, 0, ACLR, 2, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 11), pnode(GPIO, 14, 0, ACLR, 3, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 12), pnode(GPIO, 12, 0, ACLR, 2, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 13), pnode(GPIO, 12, 0, ACLR, 3, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 14), pnode(GPIO, 10, 0, ACLR, 0, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRACLR, -1, 15), pnode(GPIO, 10, 0, ACLR, 1, -1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 0), pnode(GPIO, 21, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 1), pnode(GPIO, 21, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 2), pnode(GPIO, 21, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 3), pnode(GPIO, 21, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 4), pnode(GPIO, 21, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 5), pnode(GPIO, 21, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 6), pnode(GPIO, 21, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 7), pnode(GPIO, 21, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 8), pnode(GPIO, 19, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 9), pnode(GPIO, 19, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 10), pnode(GPIO, 19, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 11), pnode(GPIO, 19, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 12), pnode(GPIO, 19, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 13), pnode(GPIO, 19, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 14), pnode(GPIO, 19, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 15), pnode(GPIO, 19, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 16), pnode(GPIO, 19, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 17), pnode(GPIO, 19, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 18), pnode(GPIO, 19, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 19), pnode(GPIO, 19, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 20), pnode(GPIO, 19, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 21), pnode(GPIO, 19, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 22), pnode(GPIO, 19, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 23), pnode(GPIO, 19, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 24), pnode(GPIO, 18, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 25), pnode(GPIO, 18, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 26), pnode(GPIO, 18, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 27), pnode(GPIO, 18, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 28), pnode(GPIO, 18, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 29), pnode(GPIO, 18, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 30), pnode(GPIO, 18, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 31), pnode(GPIO, 18, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 32), pnode(GPIO, 14, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 33), pnode(GPIO, 14, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 34), pnode(GPIO, 14, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 35), pnode(GPIO, 14, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 36), pnode(GPIO, 14, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 37), pnode(GPIO, 14, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 38), pnode(GPIO, 14, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 39), pnode(GPIO, 14, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 40), pnode(GPIO, 14, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 41), pnode(GPIO, 14, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 42), pnode(GPIO, 14, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 43), pnode(GPIO, 14, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 44), pnode(GPIO, 14, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 45), pnode(GPIO, 14, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 46), pnode(GPIO, 14, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 47), pnode(GPIO, 14, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 48), pnode(GPIO, 12, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 49), pnode(GPIO, 12, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 50), pnode(GPIO, 12, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 51), pnode(GPIO, 12, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 52), pnode(GPIO, 12, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 53), pnode(GPIO, 12, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 54), pnode(GPIO, 12, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 55), pnode(GPIO, 12, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 56), pnode(GPIO, 10, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 57), pnode(GPIO, 10, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 58), pnode(GPIO, 10, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 59), pnode(GPIO, 10, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 60), pnode(GPIO, 10, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 61), pnode(GPIO, 10, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 62), pnode(GPIO, 10, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIOADDRDOUT, -1, 63), pnode(GPIO, 10, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIOBAACLR, -1, -1), pnode(GPIO, 17, 0, ACLR, 1, -1) },
  { pnode(HMC, 23, 0, PHYDDIOBADOUT, -1, 0), pnode(GPIO, 17, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIOBADOUT, -1, 1), pnode(GPIO, 17, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIOBADOUT, -1, 2), pnode(GPIO, 17, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIOBADOUT, -1, 3), pnode(GPIO, 17, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIOCASNACLR, -1, -1), pnode(GPIO, 15, 0, ACLR, 2, -1) },
  { pnode(HMC, 23, 0, PHYDDIOCASNDOUT, -1, 0), pnode(GPIO, 15, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIOCASNDOUT, -1, 1), pnode(GPIO, 15, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIOCASNDOUT, -1, 2), pnode(GPIO, 15, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIOCASNDOUT, -1, 3), pnode(GPIO, 15, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIOCKDOUT, -1, 0), pnode(GPIO, 18, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIOCKDOUT, -1, 1), pnode(GPIO, 18, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIOCKDOUT, -1, 2), pnode(GPIO, 18, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIOCKDOUT, -1, 3), pnode(GPIO, 18, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIOCKEACLR, -1, 0), pnode(GPIO, 44, 0, ACLR, 3, -1) },
  { pnode(HMC, 23, 0, PHYDDIOCKEACLR, -1, 1), pnode(GPIO, 42, 0, ACLR, 2, -1) },
  { pnode(HMC, 23, 0, PHYDDIOCKEDOUT, -1, 0), pnode(GPIO, 44, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIOCKEDOUT, -1, 1), pnode(GPIO, 44, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIOCKEDOUT, -1, 2), pnode(GPIO, 44, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIOCKEDOUT, -1, 3), pnode(GPIO, 44, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIOCKEDOUT, -1, 4), pnode(GPIO, 42, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIOCKEDOUT, -1, 5), pnode(GPIO, 42, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIOCKEDOUT, -1, 6), pnode(GPIO, 42, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIOCKEDOUT, -1, 7), pnode(GPIO, 42, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIOCKNDOUT, -1, 0), pnode(GPIO, 18, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIOCKNDOUT, -1, 1), pnode(GPIO, 18, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIOCKNDOUT, -1, 2), pnode(GPIO, 18, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIOCKNDOUT, -1, 3), pnode(GPIO, 18, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIOCSNACLR, -1, 0), pnode(GPIO, 12, 0, ACLR, 0, -1) },
  { pnode(HMC, 23, 0, PHYDDIOCSNACLR, -1, 1), pnode(GPIO, 12, 0, ACLR, 1, -1) },
  { pnode(HMC, 23, 0, PHYDDIOCSNDOUT, -1, 0), pnode(GPIO, 12, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIOCSNDOUT, -1, 1), pnode(GPIO, 12, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIOCSNDOUT, -1, 2), pnode(GPIO, 12, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIOCSNDOUT, -1, 3), pnode(GPIO, 12, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIOCSNDOUT, -1, 4), pnode(GPIO, 12, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIOCSNDOUT, -1, 5), pnode(GPIO, 12, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIOCSNDOUT, -1, 6), pnode(GPIO, 12, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIOCSNDOUT, -1, 7), pnode(GPIO, 12, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 0), pnode(GPIO, 38, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 1), pnode(GPIO, 38, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 2), pnode(GPIO, 38, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 3), pnode(GPIO, 38, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 4), pnode(GPIO, 46, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 5), pnode(GPIO, 46, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 6), pnode(GPIO, 46, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 7), pnode(GPIO, 46, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 8), pnode(GPIO, 53, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 9), pnode(GPIO, 53, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 10), pnode(GPIO, 53, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 11), pnode(GPIO, 53, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 12), pnode(GPIO, 61, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 13), pnode(GPIO, 61, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 14), pnode(GPIO, 61, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 15), pnode(GPIO, 61, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 16), pnode(GPIO, 66, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 17), pnode(GPIO, 66, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 18), pnode(GPIO, 66, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODMDOUT, -1, 19), pnode(GPIO, 66, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 0), pnode(GPIO, 32, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 1), pnode(GPIO, 32, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 2), pnode(GPIO, 32, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 3), pnode(GPIO, 32, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 4), pnode(GPIO, 32, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 5), pnode(GPIO, 32, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 6), pnode(GPIO, 32, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 7), pnode(GPIO, 32, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 8), pnode(GPIO, 32, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 9), pnode(GPIO, 32, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 10), pnode(GPIO, 32, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 11), pnode(GPIO, 32, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 12), pnode(GPIO, 34, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 13), pnode(GPIO, 34, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 14), pnode(GPIO, 34, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 15), pnode(GPIO, 34, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 16), pnode(GPIO, 36, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 17), pnode(GPIO, 36, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 18), pnode(GPIO, 36, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 19), pnode(GPIO, 36, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 20), pnode(GPIO, 36, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 21), pnode(GPIO, 36, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 22), pnode(GPIO, 36, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 23), pnode(GPIO, 36, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 24), pnode(GPIO, 36, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 25), pnode(GPIO, 36, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 26), pnode(GPIO, 36, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 27), pnode(GPIO, 36, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 28), pnode(GPIO, 38, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 29), pnode(GPIO, 38, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 30), pnode(GPIO, 38, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 31), pnode(GPIO, 38, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 36), pnode(GPIO, 40, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 37), pnode(GPIO, 40, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 38), pnode(GPIO, 40, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 39), pnode(GPIO, 40, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 40), pnode(GPIO, 40, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 41), pnode(GPIO, 40, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 42), pnode(GPIO, 40, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 43), pnode(GPIO, 40, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 44), pnode(GPIO, 40, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 45), pnode(GPIO, 40, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 46), pnode(GPIO, 40, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 47), pnode(GPIO, 40, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 48), pnode(GPIO, 42, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 49), pnode(GPIO, 42, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 50), pnode(GPIO, 42, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 51), pnode(GPIO, 42, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 52), pnode(GPIO, 44, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 53), pnode(GPIO, 44, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 54), pnode(GPIO, 44, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 55), pnode(GPIO, 44, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 56), pnode(GPIO, 44, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 57), pnode(GPIO, 44, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 58), pnode(GPIO, 44, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 59), pnode(GPIO, 44, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 60), pnode(GPIO, 44, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 61), pnode(GPIO, 44, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 62), pnode(GPIO, 44, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 63), pnode(GPIO, 44, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 64), pnode(GPIO, 46, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 65), pnode(GPIO, 46, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 66), pnode(GPIO, 46, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 67), pnode(GPIO, 46, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 72), pnode(GPIO, 48, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 73), pnode(GPIO, 48, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 74), pnode(GPIO, 48, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 75), pnode(GPIO, 48, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 76), pnode(GPIO, 48, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 77), pnode(GPIO, 48, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 78), pnode(GPIO, 48, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 79), pnode(GPIO, 48, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 80), pnode(GPIO, 48, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 81), pnode(GPIO, 48, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 82), pnode(GPIO, 48, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 83), pnode(GPIO, 48, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 84), pnode(GPIO, 50, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 85), pnode(GPIO, 50, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 86), pnode(GPIO, 50, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 87), pnode(GPIO, 50, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 88), pnode(GPIO, 51, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 89), pnode(GPIO, 51, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 90), pnode(GPIO, 51, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 91), pnode(GPIO, 51, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 92), pnode(GPIO, 51, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 93), pnode(GPIO, 51, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 94), pnode(GPIO, 51, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 95), pnode(GPIO, 51, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 96), pnode(GPIO, 51, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 97), pnode(GPIO, 51, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 98), pnode(GPIO, 51, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 99), pnode(GPIO, 51, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 100), pnode(GPIO, 53, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 101), pnode(GPIO, 53, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 102), pnode(GPIO, 53, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 103), pnode(GPIO, 53, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 108), pnode(GPIO, 55, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 109), pnode(GPIO, 55, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 110), pnode(GPIO, 55, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 111), pnode(GPIO, 55, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 112), pnode(GPIO, 55, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 113), pnode(GPIO, 55, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 114), pnode(GPIO, 55, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 115), pnode(GPIO, 55, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 116), pnode(GPIO, 55, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 117), pnode(GPIO, 55, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 118), pnode(GPIO, 55, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 119), pnode(GPIO, 55, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 120), pnode(GPIO, 57, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 121), pnode(GPIO, 57, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 122), pnode(GPIO, 57, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 123), pnode(GPIO, 57, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 124), pnode(GPIO, 59, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 125), pnode(GPIO, 59, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 126), pnode(GPIO, 59, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 127), pnode(GPIO, 59, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 128), pnode(GPIO, 59, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 129), pnode(GPIO, 59, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 130), pnode(GPIO, 59, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 131), pnode(GPIO, 59, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 132), pnode(GPIO, 59, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 133), pnode(GPIO, 59, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 134), pnode(GPIO, 59, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 135), pnode(GPIO, 59, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 136), pnode(GPIO, 61, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 137), pnode(GPIO, 61, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 138), pnode(GPIO, 61, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 139), pnode(GPIO, 61, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 144), pnode(GPIO, 62, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 145), pnode(GPIO, 62, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 146), pnode(GPIO, 62, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 147), pnode(GPIO, 62, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 148), pnode(GPIO, 62, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 149), pnode(GPIO, 62, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 150), pnode(GPIO, 62, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 151), pnode(GPIO, 62, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 152), pnode(GPIO, 62, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 153), pnode(GPIO, 62, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 154), pnode(GPIO, 62, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 155), pnode(GPIO, 62, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 156), pnode(GPIO, 64, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 157), pnode(GPIO, 64, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 158), pnode(GPIO, 64, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 159), pnode(GPIO, 64, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 160), pnode(GPIO, 65, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 161), pnode(GPIO, 65, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 162), pnode(GPIO, 65, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 163), pnode(GPIO, 65, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 164), pnode(GPIO, 65, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 165), pnode(GPIO, 65, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 166), pnode(GPIO, 65, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 167), pnode(GPIO, 65, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 168), pnode(GPIO, 65, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 169), pnode(GPIO, 65, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 170), pnode(GPIO, 65, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 171), pnode(GPIO, 65, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 172), pnode(GPIO, 66, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 173), pnode(GPIO, 66, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 174), pnode(GPIO, 66, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQDOUT, -1, 175), pnode(GPIO, 66, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 0), pnode(GPIO, 32, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 1), pnode(GPIO, 32, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 2), pnode(GPIO, 32, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 3), pnode(GPIO, 32, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 4), pnode(GPIO, 32, 0, OEIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 5), pnode(GPIO, 32, 0, OEIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 6), pnode(GPIO, 34, 0, OEIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 7), pnode(GPIO, 34, 0, OEIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 8), pnode(GPIO, 36, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 9), pnode(GPIO, 36, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 10), pnode(GPIO, 36, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 11), pnode(GPIO, 36, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 12), pnode(GPIO, 36, 0, OEIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 13), pnode(GPIO, 36, 0, OEIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 14), pnode(GPIO, 38, 0, OEIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 15), pnode(GPIO, 38, 0, OEIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 18), pnode(GPIO, 40, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 19), pnode(GPIO, 40, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 20), pnode(GPIO, 40, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 21), pnode(GPIO, 40, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 22), pnode(GPIO, 40, 0, OEIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 23), pnode(GPIO, 40, 0, OEIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 24), pnode(GPIO, 42, 0, OEIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 25), pnode(GPIO, 42, 0, OEIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 26), pnode(GPIO, 44, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 27), pnode(GPIO, 44, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 28), pnode(GPIO, 44, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 29), pnode(GPIO, 44, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 30), pnode(GPIO, 44, 0, OEIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 31), pnode(GPIO, 44, 0, OEIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 32), pnode(GPIO, 46, 0, OEIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 33), pnode(GPIO, 46, 0, OEIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 36), pnode(GPIO, 48, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 37), pnode(GPIO, 48, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 38), pnode(GPIO, 48, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 39), pnode(GPIO, 48, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 40), pnode(GPIO, 48, 0, OEIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 41), pnode(GPIO, 48, 0, OEIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 42), pnode(GPIO, 50, 0, OEIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 43), pnode(GPIO, 50, 0, OEIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 44), pnode(GPIO, 51, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 45), pnode(GPIO, 51, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 46), pnode(GPIO, 51, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 47), pnode(GPIO, 51, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 48), pnode(GPIO, 51, 0, OEIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 49), pnode(GPIO, 51, 0, OEIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 50), pnode(GPIO, 53, 0, OEIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 51), pnode(GPIO, 53, 0, OEIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 54), pnode(GPIO, 55, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 55), pnode(GPIO, 55, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 56), pnode(GPIO, 55, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 57), pnode(GPIO, 55, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 58), pnode(GPIO, 55, 0, OEIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 59), pnode(GPIO, 55, 0, OEIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 60), pnode(GPIO, 57, 0, OEIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 61), pnode(GPIO, 57, 0, OEIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 62), pnode(GPIO, 59, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 63), pnode(GPIO, 59, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 64), pnode(GPIO, 59, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 65), pnode(GPIO, 59, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 66), pnode(GPIO, 59, 0, OEIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 67), pnode(GPIO, 59, 0, OEIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 68), pnode(GPIO, 61, 0, OEIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 69), pnode(GPIO, 61, 0, OEIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 72), pnode(GPIO, 62, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 73), pnode(GPIO, 62, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 74), pnode(GPIO, 62, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 75), pnode(GPIO, 62, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 76), pnode(GPIO, 62, 0, OEIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 77), pnode(GPIO, 62, 0, OEIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 78), pnode(GPIO, 64, 0, OEIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 79), pnode(GPIO, 64, 0, OEIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 80), pnode(GPIO, 65, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 81), pnode(GPIO, 65, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 82), pnode(GPIO, 65, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 83), pnode(GPIO, 65, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 84), pnode(GPIO, 65, 0, OEIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 85), pnode(GPIO, 65, 0, OEIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 86), pnode(GPIO, 66, 0, OEIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQOE, -1, 87), pnode(GPIO, 66, 0, OEIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 0), pnode(GPIO, 34, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 1), pnode(GPIO, 34, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 2), pnode(GPIO, 34, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 3), pnode(GPIO, 34, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 4), pnode(GPIO, 42, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 5), pnode(GPIO, 42, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 6), pnode(GPIO, 42, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 7), pnode(GPIO, 42, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 8), pnode(GPIO, 50, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 9), pnode(GPIO, 50, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 10), pnode(GPIO, 50, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 11), pnode(GPIO, 50, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 12), pnode(GPIO, 57, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 13), pnode(GPIO, 57, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 14), pnode(GPIO, 57, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 15), pnode(GPIO, 57, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 16), pnode(GPIO, 64, 0, DATAIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 17), pnode(GPIO, 64, 0, DATAIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 18), pnode(GPIO, 64, 0, DATAIN, 1, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQSBDOUT, -1, 19), pnode(GPIO, 64, 0, DATAIN, 1, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQSBOE, -1, 0), pnode(GPIO, 34, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSBOE, -1, 1), pnode(GPIO, 34, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSBOE, -1, 2), pnode(GPIO, 42, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSBOE, -1, 3), pnode(GPIO, 42, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSBOE, -1, 4), pnode(GPIO, 50, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSBOE, -1, 5), pnode(GPIO, 50, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSBOE, -1, 6), pnode(GPIO, 57, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSBOE, -1, 7), pnode(GPIO, 57, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSBOE, -1, 8), pnode(GPIO, 64, 0, OEIN, 1, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSBOE, -1, 9), pnode(GPIO, 64, 0, OEIN, 1, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 0), pnode(GPIO, 34, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 1), pnode(GPIO, 34, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 2), pnode(GPIO, 34, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 3), pnode(GPIO, 34, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 4), pnode(GPIO, 42, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 5), pnode(GPIO, 42, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 6), pnode(GPIO, 42, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 7), pnode(GPIO, 42, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 8), pnode(GPIO, 50, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 9), pnode(GPIO, 50, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 10), pnode(GPIO, 50, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 11), pnode(GPIO, 50, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 12), pnode(GPIO, 57, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 13), pnode(GPIO, 57, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 14), pnode(GPIO, 57, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 15), pnode(GPIO, 57, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 16), pnode(GPIO, 64, 0, DATAIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 17), pnode(GPIO, 64, 0, DATAIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 18), pnode(GPIO, 64, 0, DATAIN, 0, 2) },
  { pnode(HMC, 23, 0, PHYDDIODQSDOUT, -1, 19), pnode(GPIO, 64, 0, DATAIN, 0, 3) },
  { pnode(HMC, 23, 0, PHYDDIODQSOE, -1, 0), pnode(GPIO, 34, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSOE, -1, 1), pnode(GPIO, 34, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSOE, -1, 2), pnode(GPIO, 42, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSOE, -1, 3), pnode(GPIO, 42, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSOE, -1, 4), pnode(GPIO, 50, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSOE, -1, 5), pnode(GPIO, 50, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSOE, -1, 6), pnode(GPIO, 57, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSOE, -1, 7), pnode(GPIO, 57, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIODQSOE, -1, 8), pnode(GPIO, 64, 0, OEIN, 0, 0) },
  { pnode(HMC, 23, 0, PHYDDIODQSOE, -1, 9), pnode(GPIO, 64, 0, OEIN, 0, 1) },
  { pnode(HMC, 23, 0, PHYDDIOODTACLR, -1, 0), pnode(GPIO, 34, 0, ACLR, 2, -1) },
  { pnode(HMC, 23, 0, PHYDDIOODTACLR, -1, 1), pnode(GPIO, 36, 0, ACLR, 3, -1) },
  { pnode(HMC, 23, 0, PHYDDIOODTDOUT, -1, 0), pnode(GPIO, 34, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIOODTDOUT, -1, 1), pnode(GPIO, 34, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIOODTDOUT, -1, 2), pnode(GPIO, 34, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIOODTDOUT, -1, 3), pnode(GPIO, 34, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIOODTDOUT, -1, 4), pnode(GPIO, 36, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIOODTDOUT, -1, 5), pnode(GPIO, 36, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIOODTDOUT, -1, 6), pnode(GPIO, 36, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIOODTDOUT, -1, 7), pnode(GPIO, 36, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIORASNACLR, -1, -1), pnode(GPIO, 15, 0, ACLR, 3, -1) },
  { pnode(HMC, 23, 0, PHYDDIORASNDOUT, -1, 0), pnode(GPIO, 15, 0, DATAIN, 3, 0) },
  { pnode(HMC, 23, 0, PHYDDIORASNDOUT, -1, 1), pnode(GPIO, 15, 0, DATAIN, 3, 1) },
  { pnode(HMC, 23, 0, PHYDDIORASNDOUT, -1, 2), pnode(GPIO, 15, 0, DATAIN, 3, 2) },
  { pnode(HMC, 23, 0, PHYDDIORASNDOUT, -1, 3), pnode(GPIO, 15, 0, DATAIN, 3, 3) },
  { pnode(HMC, 23, 0, PHYDDIORESETNACLR, -1, -1), pnode(GPIO, 50, 0, ACLR, 2, -1) },
  { pnode(HMC, 23, 0, PHYDDIORESETNDOUT, -1, 0), pnode(GPIO, 50, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIORESETNDOUT, -1, 1), pnode(GPIO, 50, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIORESETNDOUT, -1, 2), pnode(GPIO, 50, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIORESETNDOUT, -1, 3), pnode(GPIO, 50, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PHYDDIOWENACLR, -1, -1), pnode(GPIO, 10, 0, ACLR, 2, -1) },
  { pnode(HMC, 23, 0, PHYDDIOWENDOUT, -1, 0), pnode(GPIO, 10, 0, DATAIN, 2, 0) },
  { pnode(HMC, 23, 0, PHYDDIOWENDOUT, -1, 1), pnode(GPIO, 10, 0, DATAIN, 2, 1) },
  { pnode(HMC, 23, 0, PHYDDIOWENDOUT, -1, 2), pnode(GPIO, 10, 0, DATAIN, 2, 2) },
  { pnode(HMC, 23, 0, PHYDDIOWENDOUT, -1, 3), pnode(GPIO, 10, 0, DATAIN, 2, 3) },
  { pnode(HMC, 23, 0, PNONE, 0, -1), pnode(DQS16, 32, 0, PNONE, -1, -1) },
  { pnode(HMC, 23, 0, PNONE, 1, -1), pnode(DQS16, 40, 0, PNONE, -1, -1) },
  { pnode(HMC, 23, 0, PNONE, 2, -1), pnode(DQS16, 48, 0, PNONE, -1, -1) },
  { pnode(HMC, 23, 0, PNONE, 3, -1), pnode(DQS16, 55, 0, PNONE, -1, -1) },
  { pnode(HMC, 23, 0, PNONE, 4, -1), pnode(DQS16, 62, 0, PNONE, -1, -1) },
  { pnode(HMC, 23, 0, PNONE, -1, -1), pnode(LVL, 54, 0, PNONE, -1, -1) },
  { pnode(GPIO, 15, 0, COMBOUT, 0, -1), pnode(CMUXCR, 0, 2, CLKPIN, -1, 0) },
  { pnode(GPIO, 21, 0, COMBOUT, 0, -1), pnode(CMUXCR, 0, 2, CLKPIN, -1, 1) },
  { pnode(GPIO, 38, 0, COMBOUT, 0, -1), pnode(CMUXCR, 0, 2, CLKPIN, -1, 2) },
  { pnode(GPIO, 46, 0, COMBOUT, 0, -1), pnode(CMUXCR, 0, 2, CLKPIN, -1, 3) },
  { pnode(GPIO, 15, 0, COMBOUT, 1, -1), pnode(CMUXCR, 0, 2, NCLKPIN, -1, 0) },
  { pnode(GPIO, 21, 0, COMBOUT, 1, -1), pnode(CMUXCR, 0, 2, NCLKPIN, -1, 1) },
  { pnode(GPIO, 38, 0, COMBOUT, 1, -1), pnode(CMUXCR, 0, 2, NCLKPIN, -1, 2) },
  { pnode(GPIO, 46, 0, COMBOUT, 1, -1), pnode(CMUXCR, 0, 2, NCLKPIN, -1, 3) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 8), pnode(CMUXCR, 0, 2, PLLIN, -1, 0) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 7), pnode(CMUXCR, 0, 2, PLLIN, -1, 1) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 6), pnode(CMUXCR, 0, 2, PLLIN, -1, 2) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 5), pnode(CMUXCR, 0, 2, PLLIN, -1, 3) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 4), pnode(CMUXCR, 0, 2, PLLIN, -1, 4) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 3), pnode(CMUXCR, 0, 2, PLLIN, -1, 5) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 2), pnode(CMUXCR, 0, 2, PLLIN, -1, 6) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 1), pnode(CMUXCR, 0, 2, PLLIN, -1, 7) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 6), pnode(CMUXCR, 0, 2, PLLIN, -1, 8) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 7), pnode(CMUXCR, 0, 2, PLLIN, -1, 9) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 4), pnode(CMUXCR, 0, 2, PLLIN, -1, 10) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 5), pnode(CMUXCR, 0, 2, PLLIN, -1, 11) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 2), pnode(CMUXCR, 0, 2, PLLIN, -1, 12) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 3), pnode(CMUXCR, 0, 2, PLLIN, -1, 13) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 0), pnode(CMUXCR, 0, 2, PLLIN, -1, 14) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 1), pnode(CMUXCR, 0, 2, PLLIN, -1, 15) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 8), pnode(CMUXCR, 0, 2, PLLIN, -1, 16) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 0), pnode(CMUXCR, 0, 2, PLLIN, -1, 17) },
  { pnode(GPIO, 15, 61, COMBOUT, 0, -1), pnode(CMUXHG, 0, 8, CLKPIN, -1, 0) },
  { pnode(GPIO, 15, 61, COMBOUT, 0, -1), pnode(CMUXHR, 0, 8, CLKPIN, -1, 0) },
  { pnode(GPIO, 15, 0, COMBOUT, 0, -1), pnode(CMUXHG, 0, 8, CLKPIN, -1, 1) },
  { pnode(GPIO, 15, 0, COMBOUT, 0, -1), pnode(CMUXHR, 0, 8, CLKPIN, -1, 1) },
  { pnode(GPIO, 21, 61, COMBOUT, 0, -1), pnode(CMUXHG, 0, 8, CLKPIN, -1, 2) },
  { pnode(GPIO, 21, 61, COMBOUT, 0, -1), pnode(CMUXHR, 0, 8, CLKPIN, -1, 2) },
  { pnode(GPIO, 21, 0, COMBOUT, 0, -1), pnode(CMUXHG, 0, 8, CLKPIN, -1, 3) },
  { pnode(GPIO, 21, 0, COMBOUT, 0, -1), pnode(CMUXHR, 0, 8, CLKPIN, -1, 3) },
  { pnode(GPIO, 38, 61, COMBOUT, 0, -1), pnode(CMUXHG, 0, 8, CLKPIN, -1, 4) },
  { pnode(GPIO, 38, 61, COMBOUT, 0, -1), pnode(CMUXHR, 0, 8, CLKPIN, -1, 4) },
  { pnode(GPIO, 38, 0, COMBOUT, 0, -1), pnode(CMUXHG, 0, 8, CLKPIN, -1, 5) },
  { pnode(GPIO, 38, 0, COMBOUT, 0, -1), pnode(CMUXHR, 0, 8, CLKPIN, -1, 5) },
  { pnode(GPIO, 46, 61, COMBOUT, 0, -1), pnode(CMUXHG, 0, 8, CLKPIN, -1, 6) },
  { pnode(GPIO, 46, 61, COMBOUT, 0, -1), pnode(CMUXHR, 0, 8, CLKPIN, -1, 6) },
  { pnode(GPIO, 46, 0, COMBOUT, 0, -1), pnode(CMUXHG, 0, 8, CLKPIN, -1, 7) },
  { pnode(GPIO, 46, 0, COMBOUT, 0, -1), pnode(CMUXHR, 0, 8, CLKPIN, -1, 7) },
  { pnode(GPIO, 15, 61, COMBOUT, 1, -1), pnode(CMUXHG, 0, 8, NCLKPIN, -1, 0) },
  { pnode(GPIO, 15, 61, COMBOUT, 1, -1), pnode(CMUXHR, 0, 8, NCLKPIN, -1, 0) },
  { pnode(GPIO, 15, 0, COMBOUT, 1, -1), pnode(CMUXHG, 0, 8, NCLKPIN, -1, 1) },
  { pnode(GPIO, 15, 0, COMBOUT, 1, -1), pnode(CMUXHR, 0, 8, NCLKPIN, -1, 1) },
  { pnode(GPIO, 21, 61, COMBOUT, 1, -1), pnode(CMUXHG, 0, 8, NCLKPIN, -1, 2) },
  { pnode(GPIO, 21, 61, COMBOUT, 1, -1), pnode(CMUXHR, 0, 8, NCLKPIN, -1, 2) },
  { pnode(GPIO, 21, 0, COMBOUT, 1, -1), pnode(CMUXHG, 0, 8, NCLKPIN, -1, 3) },
  { pnode(GPIO, 21, 0, COMBOUT, 1, -1), pnode(CMUXHR, 0, 8, NCLKPIN, -1, 3) },
  { pnode(GPIO, 38, 61, COMBOUT, 1, -1), pnode(CMUXHG, 0, 8, NCLKPIN, -1, 4) },
  { pnode(GPIO, 38, 61, COMBOUT, 1, -1), pnode(CMUXHR, 0, 8, NCLKPIN, -1, 4) },
  { pnode(GPIO, 38, 0, COMBOUT, 1, -1), pnode(CMUXHG, 0, 8, NCLKPIN, -1, 5) },
  { pnode(GPIO, 38, 0, COMBOUT, 1, -1), pnode(CMUXHR, 0, 8, NCLKPIN, -1, 5) },
  { pnode(GPIO, 46, 61, COMBOUT, 1, -1), pnode(CMUXHG, 0, 8, NCLKPIN, -1, 6) },
  { pnode(GPIO, 46, 61, COMBOUT, 1, -1), pnode(CMUXHR, 0, 8, NCLKPIN, -1, 6) },
  { pnode(GPIO, 46, 0, COMBOUT, 1, -1), pnode(CMUXHG, 0, 8, NCLKPIN, -1, 7) },
  { pnode(GPIO, 46, 0, COMBOUT, 1, -1), pnode(CMUXHR, 0, 8, NCLKPIN, -1, 7) },
  { pnode(FPLL, 0, 13, CLKOUT, -1, 8), pnode(CMUXHG, 0, 8, PLLIN, -1, 0) },
  { pnode(FPLL, 0, 13, CLKOUT, -1, 7), pnode(CMUXHG, 0, 8, PLLIN, -1, 1) },
  { pnode(FPLL, 0, 13, CLKOUT, -1, 6), pnode(CMUXHG, 0, 8, PLLIN, -1, 2) },
  { pnode(FPLL, 0, 13, CLKOUT, -1, 5), pnode(CMUXHG, 0, 8, PLLIN, -1, 3) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 0), pnode(CMUXHG, 0, 8, PLLIN, -1, 4) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 1), pnode(CMUXHG, 0, 8, PLLIN, -1, 5) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 2), pnode(CMUXHG, 0, 8, PLLIN, -1, 6) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 3), pnode(CMUXHG, 0, 8, PLLIN, -1, 7) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 8), pnode(CMUXHG, 0, 8, PLLIN, -1, 12) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 7), pnode(CMUXHG, 0, 8, PLLIN, -1, 13) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 6), pnode(CMUXHG, 0, 8, PLLIN, -1, 14) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 5), pnode(CMUXHG, 0, 8, PLLIN, -1, 15) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 4), pnode(CMUXHG, 0, 8, PLLIN, -1, 16) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 4), pnode(CMUXHG, 0, 8, PLLIN, -1, 19) },
  { pnode(FPLL, 0, 13, CLKOUT, -1, 8), pnode(CMUXHR, 0, 8, PLLIN, -1, 0) },
  { pnode(FPLL, 0, 13, CLKOUT, -1, 7), pnode(CMUXHR, 0, 8, PLLIN, -1, 1) },
  { pnode(FPLL, 0, 13, CLKOUT, -1, 6), pnode(CMUXHR, 0, 8, PLLIN, -1, 2) },
  { pnode(FPLL, 0, 13, CLKOUT, -1, 5), pnode(CMUXHR, 0, 8, PLLIN, -1, 3) },
  { pnode(FPLL, 0, 13, CLKOUT, -1, 4), pnode(CMUXHR, 0, 8, PLLIN, -1, 4) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 0), pnode(CMUXHR, 0, 8, PLLIN, -1, 7) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 1), pnode(CMUXHR, 0, 8, PLLIN, -1, 8) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 2), pnode(CMUXHR, 0, 8, PLLIN, -1, 9) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 3), pnode(CMUXHR, 0, 8, PLLIN, -1, 10) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 4), pnode(CMUXHR, 0, 8, PLLIN, -1, 11) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 5), pnode(CMUXHR, 0, 8, PLLIN, -1, 12) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 6), pnode(CMUXHR, 0, 8, PLLIN, -1, 13) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 8), pnode(CMUXHR, 0, 8, PLLIN, -1, 20) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 7), pnode(CMUXHR, 0, 8, PLLIN, -1, 21) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 6), pnode(CMUXHR, 0, 8, PLLIN, -1, 22) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 5), pnode(CMUXHR, 0, 8, PLLIN, -1, 23) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 4), pnode(CMUXHR, 0, 8, PLLIN, -1, 24) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 8), pnode(CMUXHR, 0, 8, PLLIN, -1, 25) },
  { pnode(GPIO, 15, 61, COMBOUT, 0, -1), pnode(CMUXCR, 5, 61, CLKPIN, -1, 0) },
  { pnode(GPIO, 21, 61, COMBOUT, 0, -1), pnode(CMUXCR, 5, 61, CLKPIN, -1, 1) },
  { pnode(GPIO, 38, 61, COMBOUT, 0, -1), pnode(CMUXCR, 5, 61, CLKPIN, -1, 2) },
  { pnode(GPIO, 46, 61, COMBOUT, 0, -1), pnode(CMUXCR, 5, 61, CLKPIN, -1, 3) },
  { pnode(GPIO, 15, 61, COMBOUT, 1, -1), pnode(CMUXCR, 5, 61, NCLKPIN, -1, 0) },
  { pnode(GPIO, 21, 61, COMBOUT, 1, -1), pnode(CMUXCR, 5, 61, NCLKPIN, -1, 1) },
  { pnode(GPIO, 38, 61, COMBOUT, 1, -1), pnode(CMUXCR, 5, 61, NCLKPIN, -1, 2) },
  { pnode(GPIO, 46, 61, COMBOUT, 1, -1), pnode(CMUXCR, 5, 61, NCLKPIN, -1, 3) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 2), pnode(CMUXCR, 5, 61, PLLIN, -1, 0) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 6), pnode(CMUXCR, 5, 61, PLLIN, -1, 1) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 0), pnode(CMUXCR, 5, 61, PLLIN, -1, 2) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 4), pnode(CMUXCR, 5, 61, PLLIN, -1, 3) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 4), pnode(CMUXCR, 5, 61, PLLIN, -1, 4) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 5), pnode(CMUXCR, 5, 61, PLLIN, -1, 5) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 6), pnode(CMUXCR, 5, 61, PLLIN, -1, 6) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 7), pnode(CMUXCR, 5, 61, PLLIN, -1, 7) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 0), pnode(CMUXCR, 5, 61, PLLIN, -1, 8) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 3), pnode(CMUXCR, 5, 61, PLLIN, -1, 9) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 5), pnode(CMUXCR, 5, 61, PLLIN, -1, 10) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 1), pnode(CMUXCR, 5, 61, PLLIN, -1, 11) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 4), pnode(CMUXCR, 5, 61, PLLIN, -1, 12) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 5), pnode(CMUXCR, 5, 61, PLLIN, -1, 13) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 8), pnode(CMUXCR, 5, 61, PLLIN, -1, 14) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 7), pnode(CMUXCR, 5, 61, PLLIN, -1, 15) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 7), pnode(CMUXCR, 5, 61, PLLIN, -1, 16) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 8), pnode(CMUXCR, 5, 61, PLLIN, -1, 17) },
  { pnode(GPIO, 15, 0, COMBOUT, 0, -1), pnode(CMUXVG, 28, 0, CLKPIN, -1, 0) },
  { pnode(GPIO, 15, 0, COMBOUT, 0, -1), pnode(CMUXVR, 28, 0, CLKPIN, -1, 0) },
  { pnode(GPIO, 38, 0, COMBOUT, 0, -1), pnode(CMUXVG, 28, 0, CLKPIN, -1, 1) },
  { pnode(GPIO, 38, 0, COMBOUT, 0, -1), pnode(CMUXVR, 28, 0, CLKPIN, -1, 1) },
  { pnode(GPIO, 21, 0, COMBOUT, 0, -1), pnode(CMUXVG, 28, 0, CLKPIN, -1, 2) },
  { pnode(GPIO, 21, 0, COMBOUT, 0, -1), pnode(CMUXVR, 28, 0, CLKPIN, -1, 2) },
  { pnode(GPIO, 46, 0, COMBOUT, 0, -1), pnode(CMUXVG, 28, 0, CLKPIN, -1, 3) },
  { pnode(GPIO, 46, 0, COMBOUT, 0, -1), pnode(CMUXVR, 28, 0, CLKPIN, -1, 3) },
  { pnode(GPIO, 15, 0, COMBOUT, 1, -1), pnode(CMUXVG, 28, 0, NCLKPIN, -1, 0) },
  { pnode(GPIO, 15, 0, COMBOUT, 1, -1), pnode(CMUXVR, 28, 0, NCLKPIN, -1, 0) },
  { pnode(GPIO, 38, 0, COMBOUT, 1, -1), pnode(CMUXVG, 28, 0, NCLKPIN, -1, 1) },
  { pnode(GPIO, 38, 0, COMBOUT, 1, -1), pnode(CMUXVR, 28, 0, NCLKPIN, -1, 1) },
  { pnode(GPIO, 21, 0, COMBOUT, 1, -1), pnode(CMUXVG, 28, 0, NCLKPIN, -1, 2) },
  { pnode(GPIO, 21, 0, COMBOUT, 1, -1), pnode(CMUXVR, 28, 0, NCLKPIN, -1, 2) },
  { pnode(GPIO, 46, 0, COMBOUT, 1, -1), pnode(CMUXVG, 28, 0, NCLKPIN, -1, 3) },
  { pnode(GPIO, 46, 0, COMBOUT, 1, -1), pnode(CMUXVR, 28, 0, NCLKPIN, -1, 3) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 8), pnode(CMUXVG, 28, 0, PLLIN, -1, 0) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 7), pnode(CMUXVG, 28, 0, PLLIN, -1, 1) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 6), pnode(CMUXVG, 28, 0, PLLIN, -1, 2) },
  { pnode(FPLL, 0, 0, CLKOUT, -1, 5), pnode(CMUXVG, 28, 0, PLLIN, -1, 3) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 8), pnode(CMUXVG, 28, 0, PLLIN, -1, 4) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 7), pnode(CMUXVG, 28, 0, PLLIN, -1, 5) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 6), pnode(CMUXVG, 28, 0, PLLIN, -1, 6) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 5), pnode(CMUXVG, 28, 0, PLLIN, -1, 7) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 8), pnode(CMUXVR, 28, 0, PLLIN, -1, 0) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 7), pnode(CMUXVR, 28, 0, PLLIN, -1, 1) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 6), pnode(CMUXVR, 28, 0, PLLIN, -1, 2) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 5), pnode(CMUXVR, 28, 0, PLLIN, -1, 3) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 4), pnode(CMUXVR, 28, 0, PLLIN, -1, 4) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 3), pnode(CMUXVR, 28, 0, PLLIN, -1, 5) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 2), pnode(CMUXVR, 28, 0, PLLIN, -1, 6) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 1), pnode(CMUXVR, 28, 0, PLLIN, -1, 7) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 0), pnode(CMUXVR, 28, 0, PLLIN, -1, 8) },
  { pnode(GPIO, 15, 61, COMBOUT, 0, -1), pnode(CMUXVG, 28, 61, CLKPIN, -1, 0) },
  { pnode(GPIO, 15, 61, COMBOUT, 0, -1), pnode(CMUXVR, 28, 61, CLKPIN, -1, 0) },
  { pnode(GPIO, 38, 61, COMBOUT, 0, -1), pnode(CMUXVG, 28, 61, CLKPIN, -1, 1) },
  { pnode(GPIO, 38, 61, COMBOUT, 0, -1), pnode(CMUXVR, 28, 61, CLKPIN, -1, 1) },
  { pnode(GPIO, 21, 61, COMBOUT, 0, -1), pnode(CMUXVG, 28, 61, CLKPIN, -1, 2) },
  { pnode(GPIO, 21, 61, COMBOUT, 0, -1), pnode(CMUXVR, 28, 61, CLKPIN, -1, 2) },
  { pnode(GPIO, 46, 61, COMBOUT, 0, -1), pnode(CMUXVG, 28, 61, CLKPIN, -1, 3) },
  { pnode(GPIO, 46, 61, COMBOUT, 0, -1), pnode(CMUXVR, 28, 61, CLKPIN, -1, 3) },
  { pnode(GPIO, 15, 61, COMBOUT, 1, -1), pnode(CMUXVG, 28, 61, NCLKPIN, -1, 0) },
  { pnode(GPIO, 15, 61, COMBOUT, 1, -1), pnode(CMUXVR, 28, 61, NCLKPIN, -1, 0) },
  { pnode(GPIO, 38, 61, COMBOUT, 1, -1), pnode(CMUXVG, 28, 61, NCLKPIN, -1, 1) },
  { pnode(GPIO, 38, 61, COMBOUT, 1, -1), pnode(CMUXVR, 28, 61, NCLKPIN, -1, 1) },
  { pnode(GPIO, 21, 61, COMBOUT, 1, -1), pnode(CMUXVG, 28, 61, NCLKPIN, -1, 2) },
  { pnode(GPIO, 21, 61, COMBOUT, 1, -1), pnode(CMUXVR, 28, 61, NCLKPIN, -1, 2) },
  { pnode(GPIO, 46, 61, COMBOUT, 1, -1), pnode(CMUXVG, 28, 61, NCLKPIN, -1, 3) },
  { pnode(GPIO, 46, 61, COMBOUT, 1, -1), pnode(CMUXVR, 28, 61, NCLKPIN, -1, 3) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 5), pnode(CMUXVG, 28, 61, PLLIN, -1, 0) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 6), pnode(CMUXVG, 28, 61, PLLIN, -1, 1) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 7), pnode(CMUXVG, 28, 61, PLLIN, -1, 2) },
  { pnode(FPLL, 0, 53, CLKOUT, -1, 8), pnode(CMUXVG, 28, 61, PLLIN, -1, 3) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 8), pnode(CMUXVG, 28, 61, PLLIN, -1, 4) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 7), pnode(CMUXVG, 28, 61, PLLIN, -1, 5) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 6), pnode(CMUXVG, 28, 61, PLLIN, -1, 6) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 5), pnode(CMUXVG, 28, 61, PLLIN, -1, 7) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 5), pnode(CMUXVG, 28, 61, PLLIN, -1, 8) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 6), pnode(CMUXVG, 28, 61, PLLIN, -1, 9) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 7), pnode(CMUXVG, 28, 61, PLLIN, -1, 10) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 8), pnode(CMUXVG, 28, 61, PLLIN, -1, 11) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 8), pnode(CMUXVR, 28, 61, PLLIN, -1, 0) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 7), pnode(CMUXVR, 28, 61, PLLIN, -1, 1) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 6), pnode(CMUXVR, 28, 61, PLLIN, -1, 2) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 5), pnode(CMUXVR, 28, 61, PLLIN, -1, 3) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 4), pnode(CMUXVR, 28, 61, PLLIN, -1, 4) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 3), pnode(CMUXVR, 28, 61, PLLIN, -1, 5) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 2), pnode(CMUXVR, 28, 61, PLLIN, -1, 6) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 1), pnode(CMUXVR, 28, 61, PLLIN, -1, 7) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 0), pnode(CMUXVR, 28, 61, PLLIN, -1, 8) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 4), pnode(CMUXVR, 28, 61, PLLIN, -1, 18) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 5), pnode(CMUXVR, 28, 61, PLLIN, -1, 19) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 6), pnode(CMUXVR, 28, 61, PLLIN, -1, 20) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 7), pnode(CMUXVR, 28, 61, PLLIN, -1, 21) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 6), pnode(CMUXVR, 28, 61, PLLIN, -1, 22) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 7), pnode(CMUXVR, 28, 61, PLLIN, -1, 23) },
  { pnode(FPLL, 0, 29, CLKOUT, -1, 8), pnode(CMUXVR, 28, 61, PLLIN, -1, 24) },
  { pnode(GPIO, 38, 0, COMBOUT, 0, -1), pnode(CMUXCR, 68, 2, CLKPIN, -1, 0) },
  { pnode(GPIO, 46, 0, COMBOUT, 0, -1), pnode(CMUXCR, 68, 2, CLKPIN, -1, 1) },
  { pnode(GPIO, 68, 22, COMBOUT, 0, -1), pnode(CMUXCR, 68, 2, CLKPIN, -1, 2) },
  { pnode(GPIO, 68, 14, COMBOUT, 0, -1), pnode(CMUXCR, 68, 2, CLKPIN, -1, 3) },
  { pnode(GPIO, 38, 0, COMBOUT, 1, -1), pnode(CMUXCR, 68, 2, NCLKPIN, -1, 0) },
  { pnode(GPIO, 46, 0, COMBOUT, 1, -1), pnode(CMUXCR, 68, 2, NCLKPIN, -1, 1) },
  { pnode(GPIO, 68, 22, COMBOUT, 1, -1), pnode(CMUXCR, 68, 2, NCLKPIN, -1, 2) },
  { pnode(GPIO, 68, 14, COMBOUT, 1, -1), pnode(CMUXCR, 68, 2, NCLKPIN, -1, 3) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 8), pnode(CMUXCR, 68, 2, PLLIN, -1, 0) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 7), pnode(CMUXCR, 68, 2, PLLIN, -1, 1) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 6), pnode(CMUXCR, 68, 2, PLLIN, -1, 2) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 5), pnode(CMUXCR, 68, 2, PLLIN, -1, 3) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 4), pnode(CMUXCR, 68, 2, PLLIN, -1, 4) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 3), pnode(CMUXCR, 68, 2, PLLIN, -1, 5) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 2), pnode(CMUXCR, 68, 2, PLLIN, -1, 6) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 1), pnode(CMUXCR, 68, 2, PLLIN, -1, 7) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 6), pnode(CMUXCR, 68, 2, PLLIN, -1, 8) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 7), pnode(CMUXCR, 68, 2, PLLIN, -1, 9) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 4), pnode(CMUXCR, 68, 2, PLLIN, -1, 10) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 5), pnode(CMUXCR, 68, 2, PLLIN, -1, 11) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 2), pnode(CMUXCR, 68, 2, PLLIN, -1, 12) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 3), pnode(CMUXCR, 68, 2, PLLIN, -1, 13) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 0), pnode(CMUXCR, 68, 2, PLLIN, -1, 14) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 1), pnode(CMUXCR, 68, 2, PLLIN, -1, 15) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 8), pnode(CMUXCR, 68, 2, PLLIN, -1, 16) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 0), pnode(CMUXCR, 68, 2, PLLIN, -1, 17) },
  { pnode(GPIO, 68, 40, COMBOUT, 0, -1), pnode(CMUXHG, 68, 8, CLKPIN, -1, 0) },
  { pnode(GPIO, 68, 40, COMBOUT, 0, -1), pnode(CMUXHR, 68, 8, CLKPIN, -1, 0) },
  { pnode(GPIO, 68, 32, COMBOUT, 0, -1), pnode(CMUXHG, 68, 8, CLKPIN, -1, 2) },
  { pnode(GPIO, 68, 32, COMBOUT, 0, -1), pnode(CMUXHR, 68, 8, CLKPIN, -1, 2) },
  { pnode(GPIO, 68, 22, COMBOUT, 0, -1), pnode(CMUXHG, 68, 8, CLKPIN, -1, 5) },
  { pnode(GPIO, 68, 22, COMBOUT, 0, -1), pnode(CMUXHR, 68, 8, CLKPIN, -1, 5) },
  { pnode(GPIO, 68, 14, COMBOUT, 0, -1), pnode(CMUXHG, 68, 8, CLKPIN, -1, 7) },
  { pnode(GPIO, 68, 14, COMBOUT, 0, -1), pnode(CMUXHR, 68, 8, CLKPIN, -1, 7) },
  { pnode(GPIO, 68, 40, COMBOUT, 1, -1), pnode(CMUXHG, 68, 8, NCLKPIN, -1, 0) },
  { pnode(GPIO, 68, 40, COMBOUT, 1, -1), pnode(CMUXHR, 68, 8, NCLKPIN, -1, 0) },
  { pnode(GPIO, 68, 32, COMBOUT, 1, -1), pnode(CMUXHG, 68, 8, NCLKPIN, -1, 2) },
  { pnode(GPIO, 68, 32, COMBOUT, 1, -1), pnode(CMUXHR, 68, 8, NCLKPIN, -1, 2) },
  { pnode(GPIO, 68, 22, COMBOUT, 1, -1), pnode(CMUXHG, 68, 8, NCLKPIN, -1, 5) },
  { pnode(GPIO, 68, 22, COMBOUT, 1, -1), pnode(CMUXHR, 68, 8, NCLKPIN, -1, 5) },
  { pnode(GPIO, 68, 14, COMBOUT, 1, -1), pnode(CMUXHG, 68, 8, NCLKPIN, -1, 7) },
  { pnode(GPIO, 68, 14, COMBOUT, 1, -1), pnode(CMUXHR, 68, 8, NCLKPIN, -1, 7) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 0), pnode(CMUXHG, 68, 8, PLLIN, -1, 0) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 1), pnode(CMUXHG, 68, 8, PLLIN, -1, 1) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 2), pnode(CMUXHG, 68, 8, PLLIN, -1, 2) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 3), pnode(CMUXHG, 68, 8, PLLIN, -1, 3) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 0), pnode(CMUXHG, 68, 8, PLLIN, -1, 4) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 1), pnode(CMUXHG, 68, 8, PLLIN, -1, 5) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 2), pnode(CMUXHG, 68, 8, PLLIN, -1, 6) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 3), pnode(CMUXHG, 68, 8, PLLIN, -1, 7) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 0), pnode(CMUXHR, 68, 8, PLLIN, -1, 0) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 1), pnode(CMUXHR, 68, 8, PLLIN, -1, 1) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 2), pnode(CMUXHR, 68, 8, PLLIN, -1, 2) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 3), pnode(CMUXHR, 68, 8, PLLIN, -1, 3) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 4), pnode(CMUXHR, 68, 8, PLLIN, -1, 4) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 5), pnode(CMUXHR, 68, 8, PLLIN, -1, 5) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 6), pnode(CMUXHR, 68, 8, PLLIN, -1, 6) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 0), pnode(CMUXHR, 68, 8, PLLIN, -1, 7) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 1), pnode(CMUXHR, 68, 8, PLLIN, -1, 8) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 2), pnode(CMUXHR, 68, 8, PLLIN, -1, 9) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 3), pnode(CMUXHR, 68, 8, PLLIN, -1, 10) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 4), pnode(CMUXHR, 68, 8, PLLIN, -1, 11) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 5), pnode(CMUXHR, 68, 8, PLLIN, -1, 12) },
  { pnode(FPLL, 68, 0, CLKOUT, -1, 6), pnode(CMUXHR, 68, 8, PLLIN, -1, 13) },
  { pnode(GPIO, 38, 61, COMBOUT, 0, -1), pnode(CMUXCR, 68, 59, CLKPIN, -1, 0) },
  { pnode(GPIO, 46, 61, COMBOUT, 0, -1), pnode(CMUXCR, 68, 59, CLKPIN, -1, 1) },
  { pnode(GPIO, 68, 40, COMBOUT, 0, -1), pnode(CMUXCR, 68, 59, CLKPIN, -1, 2) },
  { pnode(GPIO, 68, 32, COMBOUT, 0, -1), pnode(CMUXCR, 68, 59, CLKPIN, -1, 3) },
  { pnode(GPIO, 38, 61, COMBOUT, 1, -1), pnode(CMUXCR, 68, 59, NCLKPIN, -1, 0) },
  { pnode(GPIO, 46, 61, COMBOUT, 1, -1), pnode(CMUXCR, 68, 59, NCLKPIN, -1, 1) },
  { pnode(GPIO, 68, 40, COMBOUT, 1, -1), pnode(CMUXCR, 68, 59, NCLKPIN, -1, 2) },
  { pnode(GPIO, 68, 32, COMBOUT, 1, -1), pnode(CMUXCR, 68, 59, NCLKPIN, -1, 3) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 8), pnode(CMUXCR, 68, 59, PLLIN, -1, 0) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 7), pnode(CMUXCR, 68, 59, PLLIN, -1, 1) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 6), pnode(CMUXCR, 68, 59, PLLIN, -1, 2) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 5), pnode(CMUXCR, 68, 59, PLLIN, -1, 3) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 4), pnode(CMUXCR, 68, 59, PLLIN, -1, 4) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 3), pnode(CMUXCR, 68, 59, PLLIN, -1, 5) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 2), pnode(CMUXCR, 68, 59, PLLIN, -1, 6) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 1), pnode(CMUXCR, 68, 59, PLLIN, -1, 7) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 6), pnode(CMUXCR, 68, 59, PLLIN, -1, 8) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 7), pnode(CMUXCR, 68, 59, PLLIN, -1, 9) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 4), pnode(CMUXCR, 68, 59, PLLIN, -1, 10) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 5), pnode(CMUXCR, 68, 59, PLLIN, -1, 11) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 2), pnode(CMUXCR, 68, 59, PLLIN, -1, 12) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 3), pnode(CMUXCR, 68, 59, PLLIN, -1, 13) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 0), pnode(CMUXCR, 68, 59, PLLIN, -1, 14) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 1), pnode(CMUXCR, 68, 59, PLLIN, -1, 15) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 8), pnode(CMUXCR, 68, 59, PLLIN, -1, 16) },
  { pnode(FPLL, 68, 53, CLKOUT, -1, 0), pnode(CMUXCR, 68, 59, PLLIN, -1, 17) },
  { pnode(GPIO, 15, 0, COMBOUT, 0, -1), pnode(FPLL, 0, 0, CLKIN, -1, 0) },
  { pnode(GPIO, 21, 0, COMBOUT, 0, -1), pnode(FPLL, 0, 0, CLKIN, -1, 1) },
  { pnode(GPIO, 38, 0, COMBOUT, 0, -1), pnode(FPLL, 0, 0, CLKIN, -1, 2) },
  { pnode(GPIO, 46, 0, COMBOUT, 0, -1), pnode(FPLL, 0, 0, CLKIN, -1, 3) },
  { pnode(GPIO, 19, 0, COMBOUT, 2, -1), pnode(FPLL, 0, 0, ZDB_IN, -1, -1) },
  { pnode(FPLL, 0, 0, EXTCLK, -1, -1), pnode(GPIO, 19, 0, PLLDIN, 3, -1) },
  { pnode(GPIO, 15, 61, COMBOUT, 0, -1), pnode(FPLL, 0, 13, CLKIN, -1, 0) },
  { pnode(GPIO, 21, 61, COMBOUT, 0, -1), pnode(FPLL, 0, 13, CLKIN, -1, 1) },
  { pnode(GPIO, 38, 61, COMBOUT, 0, -1), pnode(FPLL, 0, 13, CLKIN, -1, 2) },
  { pnode(GPIO, 46, 61, COMBOUT, 0, -1), pnode(FPLL, 0, 13, CLKIN, -1, 3) },
  { pnode(GPIO, 15, 61, COMBOUT, 0, -1), pnode(FPLL, 0, 29, CLKIN, -1, 0) },
  { pnode(GPIO, 21, 61, COMBOUT, 0, -1), pnode(FPLL, 0, 29, CLKIN, -1, 1) },
  { pnode(GPIO, 38, 61, COMBOUT, 0, -1), pnode(FPLL, 0, 29, CLKIN, -1, 2) },
  { pnode(GPIO, 46, 61, COMBOUT, 0, -1), pnode(FPLL, 0, 29, CLKIN, -1, 3) },
  { pnode(GPIO, 15, 61, COMBOUT, 0, -1), pnode(FPLL, 0, 53, CLKIN, -1, 0) },
  { pnode(GPIO, 21, 61, COMBOUT, 0, -1), pnode(FPLL, 0, 53, CLKIN, -1, 1) },
  { pnode(GPIO, 38, 61, COMBOUT, 0, -1), pnode(FPLL, 0, 53, CLKIN, -1, 2) },
  { pnode(GPIO, 46, 61, COMBOUT, 0, -1), pnode(FPLL, 0, 53, CLKIN, -1, 3) },
  { pnode(GPIO, 19, 61, COMBOUT, 2, -1), pnode(FPLL, 0, 53, ZDB_IN, -1, -1) },
  { pnode(FPLL, 0, 53, EXTCLK, -1, -1), pnode(GPIO, 19, 61, PLLDIN, 3, -1) },
  { pnode(GPIO, 38, 0, COMBOUT, 0, -1), pnode(FPLL, 68, 0, CLKIN, -1, 0) },
  { pnode(GPIO, 46, 0, COMBOUT, 0, -1), pnode(FPLL, 68, 0, CLKIN, -1, 1) },
  { pnode(GPIO, 68, 22, COMBOUT, 0, -1), pnode(FPLL, 68, 0, CLKIN, -1, 2) },
  { pnode(GPIO, 68, 14, COMBOUT, 0, -1), pnode(FPLL, 68, 0, CLKIN, -1, 3) },
  { pnode(GPIO, 68, 24, COMBOUT, 2, -1), pnode(FPLL, 68, 0, ZDB_IN, -1, -1) },
  { pnode(FPLL, 68, 0, EXTCLK, -1, -1), pnode(GPIO, 68, 24, PLLDIN, 3, -1) },
  { pnode(GPIO, 38, 61, COMBOUT, 0, -1), pnode(FPLL, 68, 53, CLKIN, -1, 0) },
  { pnode(GPIO, 46, 61, COMBOUT, 0, -1), pnode(FPLL, 68, 53, CLKIN, -1, 1) },
  { pnode(GPIO, 68, 40, COMBOUT, 0, -1), pnode(FPLL, 68, 53, CLKIN, -1, 2) },
  { pnode(GPIO, 68, 32, COMBOUT, 0, -1), pnode(FPLL, 68, 53, CLKIN, -1, 3) },
  { pnode(GPIO, 68, 33, COMBOUT, 2, -1), pnode(FPLL, 68, 53, ZDB_IN, -1, -1) },
  { pnode(FPLL, 68, 53, EXTCLK, -1, -1), pnode(GPIO, 68, 33, PLLDIN, 3, -1) },
  { pnode(FPLL, 0, 53, CLKDOUT, -1, 0), pnode(DLL, 0, 59, CLKIN, -1, -1) },
  { pnode(FPLL, 0, 0, CLKDOUT, -1, 0), pnode(DLL, 8, 0, CLKIN, -1, -1) },
  { pnode(FPLL, 68, 0, CLKDOUT, -1, 0), pnode(DLL, 68, 3, CLKIN, -1, -1) },
  { pnode(FPLL, 68, 53, CLKDOUT, -1, 0), pnode(DLL, 68, 58, CLKIN, -1, -1) },
  { }
};
