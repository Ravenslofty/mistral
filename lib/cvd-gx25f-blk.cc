// Generated file, edition is futile

#include "cyclonev.h"

const mistral::CycloneV::ioblock_info mistral::CycloneV::gx25f_ioblocks_info[] = {
  { xy2pos(0, 11), 0, 4, 0, HSSI_OUTPUT },
  { xy2pos(0, 11), 1, 5, 0, HSSI_OUTPUT },
  { xy2pos(0, 14), 0, 5, 0, HSSI_INPUT },
  { xy2pos(0, 14), 1, 4, 0, HSSI_INPUT },
  { xy2pos(0, 15), 0, 2, 0, HSSI_OUTPUT },
  { xy2pos(0, 15), 1, 3, 0, HSSI_OUTPUT },
  { xy2pos(0, 18), 0, 3, 0, HSSI_INPUT },
  { xy2pos(0, 18), 1, 2, 0, HSSI_INPUT },
  { xy2pos(0, 19), 0, 0, 0, HSSI_OUTPUT },
  { xy2pos(0, 19), 1, 1, 0, HSSI_OUTPUT },
  { xy2pos(0, 19), 2, 7, 0, HSSI_INPUT },
  { xy2pos(0, 19), 3, 6, 0, HSSI_INPUT },
  { xy2pos(0, 22), 0, 1, 0, HSSI_INPUT },
  { xy2pos(0, 22), 1, 0, 0, HSSI_INPUT },
  { xy2pos(3, 39), 0, 0, 1, GPIO, (10 << 16) | 1921 },
  { xy2pos(3, 39), 1, 1, 1, GPIO, (10 << 16) | 1921 },
  { xy2pos(3, 39), 2, 2, 1, GPIO, (10 << 16) | 1921 },
  { xy2pos(3, 39), 3, 3, 1, GPIO, (10 << 16) | 1921 },
  { xy2pos(4, 0), 0, 0, 1, GPIO, (0 << 16) | 143 },
  { xy2pos(4, 0), 1, 1, 1, GPIO, (0 << 16) | 143 },
  { xy2pos(4, 0), 2, 2, 1, GPIO, (0 << 16) | 143 },
  { xy2pos(4, 0), 3, 3, 1, GPIO, (0 << 16) | 143 },
  { xy2pos(4, 39), 0, 0, 1, GPIO, (10 << 16) | 1474 },
  { xy2pos(4, 39), 1, 1, 1, GPIO, (10 << 16) | 1474 },
  { xy2pos(4, 39), 2, 2, 1, GPIO, (10 << 16) | 1474 },
  { xy2pos(4, 39), 3, 3, 1, GPIO, (10 << 16) | 1474 },
  { xy2pos(5, 0), 0, 0, 1, GPIO, (0 << 16) | 590 },
  { xy2pos(5, 0), 1, 1, 1, GPIO, (0 << 16) | 590 },
  { xy2pos(5, 0), 2, 2, 1, GPIO, (0 << 16) | 590 },
  { xy2pos(5, 0), 3, 3, 1, GPIO, (0 << 16) | 590 },
  { xy2pos(6, 39), 0, 0, 1, GPIO, (10 << 16) | 1027 },
  { xy2pos(6, 39), 1, 1, 1, GPIO, (10 << 16) | 1027 },
  { xy2pos(6, 39), 2, 2, 1, GPIO, (10 << 16) | 1027 },
  { xy2pos(6, 39), 3, 3, 1, GPIO, (10 << 16) | 1027 },
  { xy2pos(7, 0), 0, 0, 1, GPIO, (0 << 16) | 1037 },
  { xy2pos(7, 0), 1, 1, 1, GPIO, (0 << 16) | 1037 },
  { xy2pos(7, 0), 2, 2, 1, GPIO, (0 << 16) | 1037 },
  { xy2pos(7, 0), 3, 3, 1, GPIO, (0 << 16) | 1037 },
  { xy2pos(7, 39), 0, 6, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(7, 39), 1, 7, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(7, 39), 2, 8, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(7, 39), 3, 9, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(8, 0), 0, 0, 1, GPIO, (0 << 16) | 1484 },
  { xy2pos(8, 0), 1, 1, 1, GPIO, (0 << 16) | 1484 },
  { xy2pos(8, 0), 2, 2, 1, GPIO, (0 << 16) | 1484 },
  { xy2pos(8, 0), 3, 3, 1, GPIO, (0 << 16) | 1484 },
  { xy2pos(8, 39), 0, 0, 1, GPIO, (10 << 16) | 0 },
  { xy2pos(8, 39), 1, 1, 1, GPIO, (10 << 16) | 0 },
  { xy2pos(8, 39), 2, 2, 1, GPIO, (10 << 16) | 0 },
  { xy2pos(8, 39), 3, 3, 1, GPIO, (10 << 16) | 0 },
  { xy2pos(9, 0), 0, 0, 0, JTAG },
  { xy2pos(9, 0), 1, 0, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(9, 0), 2, 1, 0, JTAG },
  { xy2pos(9, 0), 3, 1, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(10, 0), 0, 2, 0, JTAG },
  { xy2pos(10, 0), 1, 2, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(10, 0), 2, 3, 0, JTAG },
  { xy2pos(10, 0), 3, 3, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(10, 39), 0, 0, 1, GPIO, (9 << 16) | 1921 },
  { xy2pos(10, 39), 1, 1, 1, GPIO, (9 << 16) | 1921 },
  { xy2pos(10, 39), 2, 2, 1, GPIO, (9 << 16) | 1921 },
  { xy2pos(10, 39), 3, 3, 1, GPIO, (9 << 16) | 1921 },
  { xy2pos(11, 0), 0, 4, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(11, 0), 1, 5, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(11, 39), 0, 10, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(11, 39), 1, 11, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(11, 39), 2, 12, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(11, 39), 3, 13, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(12, 0), 0, 0, 1, GPIO, (1 << 16) | 0 },
  { xy2pos(12, 0), 1, 1, 1, GPIO, (1 << 16) | 0 },
  { xy2pos(12, 0), 2, 2, 1, GPIO, (1 << 16) | 0 },
  { xy2pos(12, 0), 3, 3, 1, GPIO, (1 << 16) | 0 },
  { xy2pos(12, 39), 0, 0, 1, GPIO, (9 << 16) | 1474 },
  { xy2pos(12, 39), 1, 1, 1, GPIO, (9 << 16) | 1474 },
  { xy2pos(12, 39), 2, 2, 1, GPIO, (9 << 16) | 1474 },
  { xy2pos(12, 39), 3, 3, 1, GPIO, (9 << 16) | 1474 },
  { xy2pos(13, 0), 0, 0, 1, GPIO, (1 << 16) | 447 },
  { xy2pos(13, 0), 1, 1, 1, GPIO, (1 << 16) | 447 },
  { xy2pos(13, 0), 2, 2, 1, GPIO, (1 << 16) | 447 },
  { xy2pos(13, 0), 3, 3, 1, GPIO, (1 << 16) | 447 },
  { xy2pos(13, 39), 0, 14, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(13, 39), 1, 15, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(14, 0), 0, 0, 1, GPIO, (1 << 16) | 894 },
  { xy2pos(14, 0), 1, 1, 1, GPIO, (1 << 16) | 894 },
  { xy2pos(14, 0), 2, 2, 1, GPIO, (1 << 16) | 894 },
  { xy2pos(14, 0), 3, 3, 1, GPIO, (1 << 16) | 894 },
  { xy2pos(14, 39), 0, 0, 1, GPIO, (9 << 16) | 1027 },
  { xy2pos(14, 39), 1, 1, 1, GPIO, (9 << 16) | 1027 },
  { xy2pos(14, 39), 2, 2, 1, GPIO, (9 << 16) | 1027 },
  { xy2pos(14, 39), 3, 3, 1, GPIO, (9 << 16) | 1027 },
  { xy2pos(16, 0), 0, 0, 1, GPIO, (1 << 16) | 1341 },
  { xy2pos(16, 0), 1, 1, 1, GPIO, (1 << 16) | 1341 },
  { xy2pos(16, 0), 2, 2, 1, GPIO, (1 << 16) | 1341 },
  { xy2pos(16, 0), 3, 3, 1, GPIO, (1 << 16) | 1341 },
  { xy2pos(16, 39), 0, 0, 1, GPIO, (9 << 16) | 0 },
  { xy2pos(16, 39), 1, 1, 1, GPIO, (9 << 16) | 0 },
  { xy2pos(16, 39), 2, 2, 1, GPIO, (9 << 16) | 0 },
  { xy2pos(16, 39), 3, 3, 1, GPIO, (9 << 16) | 0 },
  { xy2pos(18, 0), 0, 0, 1, GPIO, (1 << 16) | 2423 },
  { xy2pos(18, 0), 1, 1, 1, GPIO, (1 << 16) | 2423 },
  { xy2pos(18, 0), 2, 2, 1, GPIO, (1 << 16) | 2423 },
  { xy2pos(18, 0), 3, 3, 1, GPIO, (1 << 16) | 2423 },
  { xy2pos(19, 0), 0, 0, 1, GPIO, (1 << 16) | 2870 },
  { xy2pos(19, 0), 1, 1, 1, GPIO, (1 << 16) | 2870 },
  { xy2pos(19, 0), 2, 2, 1, GPIO, (1 << 16) | 2870 },
  { xy2pos(19, 0), 3, 3, 1, GPIO, (1 << 16) | 2870 },
  { xy2pos(20, 0), 0, 0, 1, GPIO, (1 << 16) | 3317 },
  { xy2pos(20, 0), 1, 1, 1, GPIO, (1 << 16) | 3317 },
  { xy2pos(20, 0), 2, 2, 1, GPIO, (1 << 16) | 3317 },
  { xy2pos(20, 0), 3, 3, 1, GPIO, (1 << 16) | 3317 },
  { xy2pos(21, 0), 0, 0, 1, GPIO, (1 << 16) | 3764 },
  { xy2pos(21, 0), 1, 1, 1, GPIO, (1 << 16) | 3764 },
  { xy2pos(21, 0), 2, 2, 1, GPIO, (1 << 16) | 3764 },
  { xy2pos(21, 0), 3, 3, 1, GPIO, (1 << 16) | 3764 },
  { xy2pos(25, 39), 0, 0, 1, GPIO, (8 << 16) | 4339 },
  { xy2pos(25, 39), 1, 1, 1, GPIO, (8 << 16) | 4339 },
  { xy2pos(25, 39), 2, 2, 1, GPIO, (8 << 16) | 4339 },
  { xy2pos(25, 39), 3, 3, 1, GPIO, (8 << 16) | 4339 },
  { xy2pos(27, 0), 0, 0, 1, GPIO, (2 << 16) | 40 },
  { xy2pos(27, 0), 1, 1, 1, GPIO, (2 << 16) | 40 },
  { xy2pos(27, 0), 2, 2, 1, GPIO, (2 << 16) | 40 },
  { xy2pos(27, 0), 3, 3, 1, GPIO, (2 << 16) | 40 },
  { xy2pos(27, 39), 0, 0, 1, GPIO, (8 << 16) | 3892 },
  { xy2pos(27, 39), 1, 1, 1, GPIO, (8 << 16) | 3892 },
  { xy2pos(27, 39), 2, 2, 1, GPIO, (8 << 16) | 3892 },
  { xy2pos(27, 39), 3, 3, 1, GPIO, (8 << 16) | 3892 },
  { xy2pos(28, 0), 0, 0, 1, GPIO, (2 << 16) | 487 },
  { xy2pos(28, 0), 1, 1, 1, GPIO, (2 << 16) | 487 },
  { xy2pos(28, 0), 2, 2, 1, GPIO, (2 << 16) | 487 },
  { xy2pos(28, 0), 3, 3, 1, GPIO, (2 << 16) | 487 },
  { xy2pos(29, 39), 0, 0, 1, GPIO, (8 << 16) | 3445 },
  { xy2pos(29, 39), 1, 1, 1, GPIO, (8 << 16) | 3445 },
  { xy2pos(29, 39), 2, 2, 1, GPIO, (8 << 16) | 3445 },
  { xy2pos(29, 39), 3, 3, 1, GPIO, (8 << 16) | 3445 },
  { xy2pos(30, 0), 0, 0, 1, GPIO, (2 << 16) | 934 },
  { xy2pos(30, 0), 1, 1, 1, GPIO, (2 << 16) | 934 },
  { xy2pos(30, 0), 2, 2, 1, GPIO, (2 << 16) | 934 },
  { xy2pos(30, 0), 3, 3, 1, GPIO, (2 << 16) | 934 },
  { xy2pos(31, 39), 0, 0, 1, GPIO, (8 << 16) | 2418 },
  { xy2pos(31, 39), 1, 1, 1, GPIO, (8 << 16) | 2418 },
  { xy2pos(31, 39), 2, 2, 1, GPIO, (8 << 16) | 2418 },
  { xy2pos(31, 39), 3, 3, 1, GPIO, (8 << 16) | 2418 },
  { xy2pos(32, 0), 0, 0, 1, GPIO, (2 << 16) | 1381 },
  { xy2pos(32, 0), 1, 1, 1, GPIO, (2 << 16) | 1381 },
  { xy2pos(32, 0), 2, 2, 1, GPIO, (2 << 16) | 1381 },
  { xy2pos(32, 0), 3, 3, 1, GPIO, (2 << 16) | 1381 },
  { xy2pos(33, 39), 0, 0, 1, GPIO, (8 << 16) | 1921 },
  { xy2pos(33, 39), 1, 1, 1, GPIO, (8 << 16) | 1921 },
  { xy2pos(33, 39), 2, 2, 1, GPIO, (8 << 16) | 1921 },
  { xy2pos(33, 39), 3, 3, 1, GPIO, (8 << 16) | 1921 },
  { xy2pos(34, 0), 0, 0, 1, GPIO, (2 << 16) | 2458 },
  { xy2pos(34, 0), 1, 1, 1, GPIO, (2 << 16) | 2458 },
  { xy2pos(34, 0), 2, 2, 1, GPIO, (2 << 16) | 2458 },
  { xy2pos(34, 0), 3, 3, 1, GPIO, (2 << 16) | 2458 },
  { xy2pos(35, 0), 0, 0, 1, GPIO, (2 << 16) | 2905 },
  { xy2pos(35, 0), 1, 1, 1, GPIO, (2 << 16) | 2905 },
  { xy2pos(35, 0), 2, 2, 1, GPIO, (2 << 16) | 2905 },
  { xy2pos(35, 0), 3, 3, 1, GPIO, (2 << 16) | 2905 },
  { xy2pos(35, 39), 0, 0, 1, GPIO, (8 << 16) | 1474 },
  { xy2pos(35, 39), 1, 1, 1, GPIO, (8 << 16) | 1474 },
  { xy2pos(35, 39), 2, 2, 1, GPIO, (8 << 16) | 1474 },
  { xy2pos(35, 39), 3, 3, 1, GPIO, (8 << 16) | 1474 },
  { xy2pos(37, 39), 0, 0, 1, GPIO, (8 << 16) | 1027 },
  { xy2pos(37, 39), 1, 1, 1, GPIO, (8 << 16) | 1027 },
  { xy2pos(37, 39), 2, 2, 1, GPIO, (8 << 16) | 1027 },
  { xy2pos(37, 39), 3, 3, 1, GPIO, (8 << 16) | 1027 },
  { xy2pos(38, 0), 0, 0, 1, GPIO, (2 << 16) | 3352 },
  { xy2pos(38, 0), 1, 1, 1, GPIO, (2 << 16) | 3352 },
  { xy2pos(38, 0), 2, 2, 1, GPIO, (2 << 16) | 3352 },
  { xy2pos(38, 0), 3, 3, 1, GPIO, (2 << 16) | 3352 },
  { xy2pos(39, 0), 0, 0, 1, GPIO, (2 << 16) | 3799 },
  { xy2pos(39, 0), 1, 1, 1, GPIO, (2 << 16) | 3799 },
  { xy2pos(39, 0), 2, 2, 1, GPIO, (2 << 16) | 3799 },
  { xy2pos(39, 0), 3, 3, 1, GPIO, (2 << 16) | 3799 },
  { xy2pos(39, 39), 0, 0, 1, GPIO, (8 << 16) | 0 },
  { xy2pos(39, 39), 1, 1, 1, GPIO, (8 << 16) | 0 },
  { xy2pos(39, 39), 2, 2, 1, GPIO, (8 << 16) | 0 },
  { xy2pos(39, 39), 3, 3, 1, GPIO, (8 << 16) | 0 },
  { xy2pos(40, 39), 0, 16, 0, DEDICATED_PROGRAMMING_PAD },
  { xy2pos(41, 0), 0, 0, 1, GPIO, (3 << 16) | 0 },
  { xy2pos(41, 0), 1, 1, 1, GPIO, (3 << 16) | 0 },
  { xy2pos(41, 0), 2, 2, 1, GPIO, (3 << 16) | 0 },
  { xy2pos(41, 0), 3, 3, 1, GPIO, (3 << 16) | 0 },
  { xy2pos(41, 39), 0, 0, 1, GPIO, (7 << 16) | 2936 },
  { xy2pos(41, 39), 1, 1, 1, GPIO, (7 << 16) | 2936 },
  { xy2pos(41, 39), 2, 2, 1, GPIO, (7 << 16) | 2936 },
  { xy2pos(41, 39), 3, 3, 1, GPIO, (7 << 16) | 2936 },
  { xy2pos(42, 39), 0, 0, 1, GPIO, (7 << 16) | 2489 },
  { xy2pos(42, 39), 1, 1, 1, GPIO, (7 << 16) | 2489 },
  { xy2pos(42, 39), 2, 2, 1, GPIO, (7 << 16) | 2489 },
  { xy2pos(42, 39), 3, 3, 1, GPIO, (7 << 16) | 2489 },
  { xy2pos(43, 39), 0, 0, 1, GPIO, (7 << 16) | 2042 },
  { xy2pos(43, 39), 1, 1, 1, GPIO, (7 << 16) | 2042 },
  { xy2pos(43, 39), 2, 2, 1, GPIO, (7 << 16) | 2042 },
  { xy2pos(43, 39), 3, 3, 1, GPIO, (7 << 16) | 2042 },
  { xy2pos(44, 0), 0, 0, 1, GPIO, (3 << 16) | 447 },
  { xy2pos(44, 0), 1, 1, 1, GPIO, (3 << 16) | 447 },
  { xy2pos(44, 0), 2, 2, 1, GPIO, (3 << 16) | 447 },
  { xy2pos(44, 0), 3, 3, 1, GPIO, (3 << 16) | 447 },
  { xy2pos(45, 0), 0, 0, 1, GPIO, (3 << 16) | 894 },
  { xy2pos(45, 0), 1, 1, 1, GPIO, (3 << 16) | 894 },
  { xy2pos(45, 0), 2, 2, 1, GPIO, (3 << 16) | 894 },
  { xy2pos(45, 0), 3, 3, 1, GPIO, (3 << 16) | 894 },
  { xy2pos(45, 39), 0, 0, 1, GPIO, (7 << 16) | 1015 },
  { xy2pos(45, 39), 1, 1, 1, GPIO, (7 << 16) | 1015 },
  { xy2pos(45, 39), 2, 2, 1, GPIO, (7 << 16) | 1015 },
  { xy2pos(45, 39), 3, 3, 1, GPIO, (7 << 16) | 1015 },
  { xy2pos(46, 0), 0, 0, 1, GPIO, (3 << 16) | 1341 },
  { xy2pos(46, 0), 1, 1, 1, GPIO, (3 << 16) | 1341 },
  { xy2pos(46, 0), 2, 2, 1, GPIO, (3 << 16) | 1341 },
  { xy2pos(46, 0), 3, 3, 1, GPIO, (3 << 16) | 1341 },
  { xy2pos(48, 10), 0, 0, 1, GPIO, (4 << 16) | 435 },
  { xy2pos(48, 10), 1, 1, 1, GPIO, (4 << 16) | 435 },
  { xy2pos(48, 10), 2, 2, 1, GPIO, (4 << 16) | 435 },
  { xy2pos(48, 10), 3, 3, 1, GPIO, (4 << 16) | 435 },
  { xy2pos(48, 12), 0, 0, 1, GPIO, (4 << 16) | 1462 },
  { xy2pos(48, 12), 1, 1, 1, GPIO, (4 << 16) | 1462 },
  { xy2pos(48, 12), 2, 2, 1, GPIO, (4 << 16) | 1462 },
  { xy2pos(48, 12), 3, 3, 1, GPIO, (4 << 16) | 1462 },
  { xy2pos(48, 14), 0, 0, 1, GPIO, (4 << 16) | 1909 },
  { xy2pos(48, 14), 1, 1, 1, GPIO, (4 << 16) | 1909 },
  { xy2pos(48, 14), 2, 2, 1, GPIO, (4 << 16) | 1909 },
  { xy2pos(48, 14), 3, 3, 1, GPIO, (4 << 16) | 1909 },
  { xy2pos(48, 15), 0, 0, 1, GPIO, (4 << 16) | 2356 },
  { xy2pos(48, 15), 1, 1, 1, GPIO, (4 << 16) | 2356 },
  { xy2pos(48, 15), 2, 2, 1, GPIO, (4 << 16) | 2356 },
  { xy2pos(48, 15), 3, 3, 1, GPIO, (4 << 16) | 2356 },
  { xy2pos(48, 18), 0, 0, 1, GPIO, (5 << 16) | 0 },
  { xy2pos(48, 18), 1, 1, 1, GPIO, (5 << 16) | 0 },
  { xy2pos(48, 18), 2, 2, 1, GPIO, (5 << 16) | 0 },
  { xy2pos(48, 18), 3, 3, 1, GPIO, (5 << 16) | 0 },
  { xy2pos(48, 20), 0, 0, 1, GPIO, (5 << 16) | 1027 },
  { xy2pos(48, 20), 1, 1, 1, GPIO, (5 << 16) | 1027 },
  { xy2pos(48, 20), 2, 2, 1, GPIO, (5 << 16) | 1027 },
  { xy2pos(48, 20), 3, 3, 1, GPIO, (5 << 16) | 1027 },
  { xy2pos(48, 22), 0, 0, 1, GPIO, (5 << 16) | 1474 },
  { xy2pos(48, 22), 1, 1, 1, GPIO, (5 << 16) | 1474 },
  { xy2pos(48, 22), 2, 2, 1, GPIO, (5 << 16) | 1474 },
  { xy2pos(48, 22), 3, 3, 1, GPIO, (5 << 16) | 1474 },
  { xy2pos(48, 24), 0, 0, 1, GPIO, (5 << 16) | 1921 },
  { xy2pos(48, 24), 1, 1, 1, GPIO, (5 << 16) | 1921 },
  { xy2pos(48, 24), 2, 2, 1, GPIO, (5 << 16) | 1921 },
  { xy2pos(48, 24), 3, 3, 1, GPIO, (5 << 16) | 1921 },
  { xy2pos(48, 27), 0, 0, 1, GPIO, (6 << 16) | 0 },
  { xy2pos(48, 27), 1, 1, 1, GPIO, (6 << 16) | 0 },
  { xy2pos(48, 27), 2, 2, 1, GPIO, (6 << 16) | 0 },
  { xy2pos(48, 27), 3, 3, 1, GPIO, (6 << 16) | 0 },
  { xy2pos(48, 29), 0, 0, 1, GPIO, (6 << 16) | 1027 },
  { xy2pos(48, 29), 1, 1, 1, GPIO, (6 << 16) | 1027 },
  { xy2pos(48, 29), 2, 2, 1, GPIO, (6 << 16) | 1027 },
  { xy2pos(48, 29), 3, 3, 1, GPIO, (6 << 16) | 1027 },
  { xy2pos(48, 30), 0, 0, 1, GPIO, (6 << 16) | 1474 },
  { xy2pos(48, 30), 1, 1, 1, GPIO, (6 << 16) | 1474 },
  { xy2pos(48, 30), 2, 2, 1, GPIO, (6 << 16) | 1474 },
  { xy2pos(48, 30), 3, 3, 1, GPIO, (6 << 16) | 1474 },
  { xy2pos(48, 32), 0, 0, 1, GPIO, (6 << 16) | 1921 },
  { xy2pos(48, 32), 1, 1, 1, GPIO, (6 << 16) | 1921 },
  { xy2pos(48, 32), 2, 2, 1, GPIO, (6 << 16) | 1921 },
  { xy2pos(48, 32), 3, 3, 1, GPIO, (6 << 16) | 1921 },
};

const mistral::CycloneV::dqs16_info mistral::CycloneV::gx25f_dqs16_info[] = {
  { xy2pos(4, 39), (1 << 23) | (0 << 22) | (10 << 16) | 2112 },
  { xy2pos(5, 0), (1 << 23) | (1 << 22) | (0 << 16) | 334 },
  { xy2pos(12, 39), (1 << 23) | (0 << 22) | (9 << 16) | 2112 },
  { xy2pos(13, 0), (1 << 23) | (1 << 22) | (1 << 16) | 191 },
  { xy2pos(19, 0), (1 << 23) | (1 << 22) | (1 << 16) | 2614 },
  { xy2pos(27, 39), (1 << 23) | (0 << 22) | (8 << 16) | 4530 },
  { xy2pos(28, 0), (1 << 23) | (1 << 22) | (2 << 16) | 231 },
  { xy2pos(35, 0), (1 << 23) | (1 << 22) | (2 << 16) | 2649 },
  { xy2pos(35, 39), (1 << 23) | (0 << 22) | (8 << 16) | 2112 },
  { xy2pos(42, 39), (1 << 23) | (0 << 22) | (7 << 16) | 3127 },
  { xy2pos(44, 0), (1 << 23) | (1 << 22) | (3 << 16) | 191 },
  { xy2pos(48, 14), (1 << 23) | (0 << 22) | (4 << 16) | 2547 },
  { xy2pos(48, 22), (1 << 23) | (0 << 22) | (5 << 16) | 2112 },
  { xy2pos(48, 30), (1 << 23) | (0 << 22) | (6 << 16) | 2112 },
};

const mistral::CycloneV::fixed_block_info mistral::CycloneV::gx25f_fixed_blocks_info[FB_COUNT] = {
  { xy2pos(0, 13), (11 << 16) | 1152 },
  { xy2pos(0, 31), (10 << 16) | 2551 },
  { xy2pos(48, 0), (3 << 16) | 2551 },
  { xy2pos(48, 31), (7 << 16) | 112 },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { xy2pos(0, 37), (10 << 16) | 2399 },
  { xy2pos(3, 0), (0 << 16) | 0 },
  { xy2pos(48, 2), (3 << 16) | 2439 },
  { xy2pos(48, 37), (7 << 16) | 0 },
  { xy2pos(25, 0), (1 << 16) | 4791 },
  { xy2pos(26, 39), (8 << 16) | 4826 },
  { xy2pos(0, 8), (12 << 16) | 9136 },
  { xy2pos(48, 9), (4 << 16) | 0 },
  { xy2pos(0, 36), (10 << 16) | 2511 },
  { xy2pos(48, 3), (3 << 16) | 2399 },
  { xy2pos(48, 36), (7 << 16) | 944 },
  { 0xffff, 0xffffffff },
  { xy2pos(0, 11), (12 << 16) | 0 },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { xy2pos(2, 0), (6 << 16) | 2418 },
  { xy2pos(2, 39), (0 << 16) | 112 },
  { xy2pos(43, 0), (7 << 16) | 984 },
  { xy2pos(46, 39), (3 << 16) | 2368 },
  { xy2pos(48, 8), (10 << 16) | 2368 },
  { xy2pos(48, 34), (4 << 16) | 364 },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { xy2pos(9, 39), (6 << 16) | 2368 },
  { xy2pos(17, 0), (2 << 16) | 2408 },
  { xy2pos(32, 39), (9 << 16) | 2368 },
  { xy2pos(33, 0), (4 << 16) | 2803 },
  { xy2pos(48, 16), (1 << 16) | 2368 },
  { xy2pos(48, 33), (8 << 16) | 2368 },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { xy2pos(0, 11), (0 << 24) | (11 << 16) | 0 },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { xy2pos(5, 39), (10 << 16) | 2394 },
  { xy2pos(6, 0), (0 << 16) | 138 },
  { xy2pos(29, 0), (1 << 16) | 2418 },
  { xy2pos(42, 0), (3 << 16) | 2394 },
  { xy2pos(44, 39), (7 << 16) | 1010 },
  { xy2pos(48, 11), (4 << 16) | 430 },
  { xy2pos(48, 17), (4 << 16) | 2853 },
  { xy2pos(48, 31), (6 << 16) | 2444 },
  { 0xffff, 0xffffffff },
  { 0xffff, 0xffffffff },
  { xy2pos(26, 0), (2 << 16) | 0 },
  { xy2pos(28, 39), (8 << 16) | 4786 },
  { xy2pos(48, 5), (4 << 16) | 390 },
  { 0xffff, 0xffffffff },
  { xy2pos(1, 14), (12 << 16) | 2832 },
  { 0xffff, 0xffffffff },
  { xy2pos(15, 39), (7 << 16) | 3383 },
  { 0xffff, 0xffffffff },
};

const mistral::CycloneV::dcram_info mistral::CycloneV::gx25f_dcram_pos[] = {
  { 8, 1160 },
  { 8, 1161 },
  { 9, 1161 },
  { 8, 1074 },
  { 8, 1075 },
  { 9, 1075 },
  { 828, 1762 },
  { 828, 1763 },
  { 829, 1763 },
  { 828, 1676 },
  { 828, 1677 },
  { 829, 1677 },
  { 828, 2450 },
  { 828, 2451 },
  { 829, 2451 },
  { 828, 2364 },
  { 828, 2365 },
  { 829, 2365 },
};

const mistral::CycloneV::dcram_info mistral::CycloneV::gx25f_forced_1_info[20] = {
  { 1076, 82 },
  { 2770, 82 },
  { 1076, 87 },
  { 2770, 87 },
  { 1074, 724 },
  { 1076, 724 },
  { 2768, 724 },
  { 2770, 724 },
  { 1074, 729 },
  { 1076, 729 },
  { 2768, 729 },
  { 2770, 729 },
  { 2768, 810 },
  { 2770, 810 },
  { 2768, 815 },
  { 2770, 815 },
  { 1076, 3406 },
  { 2770, 3406 },
  { 1076, 3411 },
  { 2770, 3411 },
};

const mistral::CycloneV::p2r_info mistral::CycloneV::gx25f_p2r_info[] = {
  { pnode(GPIO, 3, 39, DATAOUT, 0, 0), rnode(GIN, 3, 39, 18) },
  { pnode(GPIO, 3, 39, DATAOUT, 0, 1), rnode(GIN, 3, 39, 17) },
  { pnode(GPIO, 3, 39, DATAOUT, 0, 2), rnode(GIN, 3, 39, 16) },
  { pnode(GPIO, 3, 39, DATAOUT, 0, 3), rnode(GIN, 3, 39, 15) },
  { pnode(GPIO, 3, 39, DATAOUT, 0, 4), rnode(GIN, 3, 39, 14) },
  { pnode(GPIO, 3, 39, OEIN, 0, 0), rnode(GOUT, 3, 39, 38) },
  { pnode(GPIO, 3, 39, OEIN, 0, 1), rnode(GOUT, 3, 39, 30) },
  { pnode(GPIO, 3, 39, BSLIPMAX, 0, -1), rnode(GIN, 3, 39, 19) },
  { pnode(GPIO, 3, 39, CEIN, 0, -1), rnode(GOUT, 3, 39, 27) },
  { pnode(GPIO, 3, 39, CEOUT, 0, -1), rnode(GOUT, 3, 39, 45) },
  { pnode(GPIO, 3, 39, SCLR, 0, -1), rnode(GOUT, 3, 39, 31) },
  { pnode(GPIO, 3, 39, CLKIN_IN, 0, 0), rnode(DCMUX, 3, 39, 10) },
  { pnode(GPIO, 3, 39, CLKIN_IN, 0, 1), rnode(DCMUX, 3, 39, 8) },
  { pnode(GPIO, 3, 39, CLKIN_OUT, 0, 0), rnode(DCMUX, 3, 39, 14) },
  { pnode(GPIO, 3, 39, CLKIN_OUT, 0, 1), rnode(DCMUX, 3, 39, 12) },
  { pnode(GPIO, 3, 39, DATAOUT, 1, 0), rnode(GIN, 3, 39, 24) },
  { pnode(GPIO, 3, 39, DATAOUT, 1, 1), rnode(GIN, 3, 39, 23) },
  { pnode(GPIO, 3, 39, DATAOUT, 1, 2), rnode(GIN, 3, 39, 22) },
  { pnode(GPIO, 3, 39, DATAOUT, 1, 3), rnode(GIN, 3, 39, 21) },
  { pnode(GPIO, 3, 39, DATAOUT, 1, 4), rnode(GIN, 3, 39, 20) },
  { pnode(GPIO, 3, 39, OEIN, 1, 0), rnode(GOUT, 3, 39, 47) },
  { pnode(GPIO, 3, 39, OEIN, 1, 1), rnode(GOUT, 3, 39, 39) },
  { pnode(GPIO, 3, 39, BSLIPMAX, 1, -1), rnode(GIN, 3, 39, 25) },
  { pnode(GPIO, 3, 39, CEIN, 1, -1), rnode(GOUT, 3, 39, 51) },
  { pnode(GPIO, 3, 39, CEOUT, 1, -1), rnode(GOUT, 3, 39, 50) },
  { pnode(GPIO, 3, 39, SCLR, 1, -1), rnode(GOUT, 3, 39, 46) },
  { pnode(GPIO, 3, 39, CLKIN_IN, 1, 0), rnode(DCMUX, 3, 39, 11) },
  { pnode(GPIO, 3, 39, CLKIN_IN, 1, 1), rnode(DCMUX, 3, 39, 9) },
  { pnode(GPIO, 3, 39, CLKIN_OUT, 1, 0), rnode(DCMUX, 3, 39, 15) },
  { pnode(GPIO, 3, 39, CLKIN_OUT, 1, 1), rnode(DCMUX, 3, 39, 13) },
  { pnode(GPIO, 3, 39, DATAOUT, 2, 0), rnode(GIN, 3, 39, 8) },
  { pnode(GPIO, 3, 39, DATAOUT, 2, 1), rnode(GIN, 3, 39, 9) },
  { pnode(GPIO, 3, 39, DATAOUT, 2, 2), rnode(GIN, 3, 39, 10) },
  { pnode(GPIO, 3, 39, DATAOUT, 2, 3), rnode(GIN, 3, 39, 11) },
  { pnode(GPIO, 3, 39, DATAOUT, 2, 4), rnode(GIN, 3, 39, 12) },
  { pnode(GPIO, 3, 39, OEIN, 2, 0), rnode(GOUT, 3, 39, 16) },
  { pnode(GPIO, 3, 39, OEIN, 2, 1), rnode(GOUT, 3, 39, 24) },
  { pnode(GPIO, 3, 39, BSLIPMAX, 2, -1), rnode(GIN, 3, 39, 7) },
  { pnode(GPIO, 3, 39, CEIN, 2, -1), rnode(GOUT, 3, 39, 20) },
  { pnode(GPIO, 3, 39, CEOUT, 2, -1), rnode(GOUT, 3, 39, 13) },
  { pnode(GPIO, 3, 39, SCLR, 2, -1), rnode(GOUT, 3, 39, 25) },
  { pnode(GPIO, 3, 39, CLKIN_IN, 2, 0), rnode(DCMUX, 3, 39, 5) },
  { pnode(GPIO, 3, 39, CLKIN_IN, 2, 1), rnode(DCMUX, 3, 39, 7) },
  { pnode(GPIO, 3, 39, CLKIN_OUT, 2, 0), rnode(DCMUX, 3, 39, 1) },
  { pnode(GPIO, 3, 39, CLKIN_OUT, 2, 1), rnode(DCMUX, 3, 39, 3) },
  { pnode(GPIO, 3, 39, DATAIN, 3, 0), rnode(GOUT, 3, 39, 3) },
  { pnode(GPIO, 3, 39, DATAIN, 3, 1), rnode(GOUT, 3, 39, 17) },
  { pnode(GPIO, 3, 39, DATAIN, 3, 2), rnode(GOUT, 3, 39, 8) },
  { pnode(GPIO, 3, 39, DATAIN, 3, 3), rnode(GOUT, 3, 39, 18) },
  { pnode(GPIO, 3, 39, DATAOUT, 3, 0), rnode(GIN, 3, 39, 2) },
  { pnode(GPIO, 3, 39, DATAOUT, 3, 1), rnode(GIN, 3, 39, 3) },
  { pnode(GPIO, 3, 39, DATAOUT, 3, 2), rnode(GIN, 3, 39, 4) },
  { pnode(GPIO, 3, 39, DATAOUT, 3, 3), rnode(GIN, 3, 39, 5) },
  { pnode(GPIO, 3, 39, DATAOUT, 3, 4), rnode(GIN, 3, 39, 6) },
  { pnode(GPIO, 3, 39, OEIN, 3, 0), rnode(GOUT, 3, 39, 2) },
  { pnode(GPIO, 3, 39, OEIN, 3, 1), rnode(GOUT, 3, 39, 19) },
  { pnode(GPIO, 3, 39, BSLIPMAX, 3, -1), rnode(GIN, 3, 39, 1) },
  { pnode(GPIO, 3, 39, CEIN, 3, -1), rnode(GOUT, 3, 39, 5) },
  { pnode(GPIO, 3, 39, CEOUT, 3, -1), rnode(GOUT, 3, 39, 4) },
  { pnode(GPIO, 3, 39, ACLR, 3, -1), rnode(GOUT, 3, 39, 12) },
  { pnode(GPIO, 3, 39, SCLR, 3, -1), rnode(GOUT, 3, 39, 1) },
  { pnode(GPIO, 3, 39, CLKIN_IN, 3, 0), rnode(DCMUX, 3, 39, 4) },
  { pnode(GPIO, 3, 39, CLKIN_IN, 3, 1), rnode(DCMUX, 3, 39, 6) },
  { pnode(GPIO, 3, 39, CLKIN_OUT, 3, 0), rnode(DCMUX, 3, 39, 0) },
  { pnode(GPIO, 3, 39, CLKIN_OUT, 3, 1), rnode(DCMUX, 3, 39, 2) },
  { pnode(GPIO, 4, 0, DATAIN, 0, 0), rnode(GOUT, 4, 0, 44) },
  { pnode(GPIO, 4, 0, DATAIN, 0, 1), rnode(GOUT, 4, 0, 34) },
  { pnode(GPIO, 4, 0, DATAIN, 0, 2), rnode(GOUT, 4, 0, 43) },
  { pnode(GPIO, 4, 0, DATAIN, 0, 3), rnode(GOUT, 4, 0, 29) },
  { pnode(GPIO, 4, 0, DATAOUT, 0, 0), rnode(GIN, 4, 0, 18) },
  { pnode(GPIO, 4, 0, DATAOUT, 0, 1), rnode(GIN, 4, 0, 17) },
  { pnode(GPIO, 4, 0, DATAOUT, 0, 2), rnode(GIN, 4, 0, 16) },
  { pnode(GPIO, 4, 0, DATAOUT, 0, 3), rnode(GIN, 4, 0, 15) },
  { pnode(GPIO, 4, 0, DATAOUT, 0, 4), rnode(GIN, 4, 0, 14) },
  { pnode(GPIO, 4, 0, OEIN, 0, 0), rnode(GOUT, 4, 0, 38) },
  { pnode(GPIO, 4, 0, OEIN, 0, 1), rnode(GOUT, 4, 0, 30) },
  { pnode(GPIO, 4, 0, BSLIPMAX, 0, -1), rnode(GIN, 4, 0, 19) },
  { pnode(GPIO, 4, 0, CEIN, 0, -1), rnode(GOUT, 4, 0, 27) },
  { pnode(GPIO, 4, 0, CEOUT, 0, -1), rnode(GOUT, 4, 0, 45) },
  { pnode(GPIO, 4, 0, ACLR, 0, -1), rnode(GOUT, 4, 0, 28) },
  { pnode(GPIO, 4, 0, SCLR, 0, -1), rnode(GOUT, 4, 0, 31) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 4, 0, 10) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 4, 0, 8) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 4, 0, 14) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 4, 0, 12) },
  { pnode(GPIO, 4, 0, DATAIN, 1, 0), rnode(GOUT, 4, 0, 49) },
  { pnode(GPIO, 4, 0, DATAIN, 1, 1), rnode(GOUT, 4, 0, 41) },
  { pnode(GPIO, 4, 0, DATAIN, 1, 2), rnode(GOUT, 4, 0, 48) },
  { pnode(GPIO, 4, 0, DATAIN, 1, 3), rnode(GOUT, 4, 0, 40) },
  { pnode(GPIO, 4, 0, DATAOUT, 1, 0), rnode(GIN, 4, 0, 24) },
  { pnode(GPIO, 4, 0, DATAOUT, 1, 1), rnode(GIN, 4, 0, 23) },
  { pnode(GPIO, 4, 0, DATAOUT, 1, 2), rnode(GIN, 4, 0, 22) },
  { pnode(GPIO, 4, 0, DATAOUT, 1, 3), rnode(GIN, 4, 0, 21) },
  { pnode(GPIO, 4, 0, DATAOUT, 1, 4), rnode(GIN, 4, 0, 20) },
  { pnode(GPIO, 4, 0, OEIN, 1, 0), rnode(GOUT, 4, 0, 47) },
  { pnode(GPIO, 4, 0, OEIN, 1, 1), rnode(GOUT, 4, 0, 39) },
  { pnode(GPIO, 4, 0, BSLIPMAX, 1, -1), rnode(GIN, 4, 0, 25) },
  { pnode(GPIO, 4, 0, CEIN, 1, -1), rnode(GOUT, 4, 0, 51) },
  { pnode(GPIO, 4, 0, CEOUT, 1, -1), rnode(GOUT, 4, 0, 50) },
  { pnode(GPIO, 4, 0, ACLR, 1, -1), rnode(GOUT, 4, 0, 42) },
  { pnode(GPIO, 4, 0, SCLR, 1, -1), rnode(GOUT, 4, 0, 46) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 4, 0, 11) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 4, 0, 9) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 4, 0, 15) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 4, 0, 13) },
  { pnode(GPIO, 4, 0, DATAIN, 2, 0), rnode(GOUT, 4, 0, 14) },
  { pnode(GPIO, 4, 0, DATAIN, 2, 1), rnode(GOUT, 4, 0, 22) },
  { pnode(GPIO, 4, 0, DATAIN, 2, 2), rnode(GOUT, 4, 0, 15) },
  { pnode(GPIO, 4, 0, DATAIN, 2, 3), rnode(GOUT, 4, 0, 23) },
  { pnode(GPIO, 4, 0, DATAOUT, 2, 0), rnode(GIN, 4, 0, 8) },
  { pnode(GPIO, 4, 0, DATAOUT, 2, 1), rnode(GIN, 4, 0, 9) },
  { pnode(GPIO, 4, 0, DATAOUT, 2, 2), rnode(GIN, 4, 0, 10) },
  { pnode(GPIO, 4, 0, DATAOUT, 2, 3), rnode(GIN, 4, 0, 11) },
  { pnode(GPIO, 4, 0, DATAOUT, 2, 4), rnode(GIN, 4, 0, 12) },
  { pnode(GPIO, 4, 0, OEIN, 2, 0), rnode(GOUT, 4, 0, 16) },
  { pnode(GPIO, 4, 0, OEIN, 2, 1), rnode(GOUT, 4, 0, 24) },
  { pnode(GPIO, 4, 0, BSLIPMAX, 2, -1), rnode(GIN, 4, 0, 7) },
  { pnode(GPIO, 4, 0, CEIN, 2, -1), rnode(GOUT, 4, 0, 20) },
  { pnode(GPIO, 4, 0, CEOUT, 2, -1), rnode(GOUT, 4, 0, 13) },
  { pnode(GPIO, 4, 0, ACLR, 2, -1), rnode(GOUT, 4, 0, 21) },
  { pnode(GPIO, 4, 0, SCLR, 2, -1), rnode(GOUT, 4, 0, 25) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 4, 0, 5) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 4, 0, 7) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 4, 0, 1) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 4, 0, 3) },
  { pnode(GPIO, 4, 0, DATAIN, 3, 0), rnode(GOUT, 4, 0, 3) },
  { pnode(GPIO, 4, 0, DATAIN, 3, 1), rnode(GOUT, 4, 0, 17) },
  { pnode(GPIO, 4, 0, DATAIN, 3, 2), rnode(GOUT, 4, 0, 8) },
  { pnode(GPIO, 4, 0, DATAIN, 3, 3), rnode(GOUT, 4, 0, 18) },
  { pnode(GPIO, 4, 0, DATAOUT, 3, 0), rnode(GIN, 4, 0, 2) },
  { pnode(GPIO, 4, 0, DATAOUT, 3, 1), rnode(GIN, 4, 0, 3) },
  { pnode(GPIO, 4, 0, DATAOUT, 3, 2), rnode(GIN, 4, 0, 4) },
  { pnode(GPIO, 4, 0, DATAOUT, 3, 3), rnode(GIN, 4, 0, 5) },
  { pnode(GPIO, 4, 0, DATAOUT, 3, 4), rnode(GIN, 4, 0, 6) },
  { pnode(GPIO, 4, 0, OEIN, 3, 0), rnode(GOUT, 4, 0, 2) },
  { pnode(GPIO, 4, 0, OEIN, 3, 1), rnode(GOUT, 4, 0, 19) },
  { pnode(GPIO, 4, 0, BSLIPMAX, 3, -1), rnode(GIN, 4, 0, 1) },
  { pnode(GPIO, 4, 0, CEIN, 3, -1), rnode(GOUT, 4, 0, 5) },
  { pnode(GPIO, 4, 0, CEOUT, 3, -1), rnode(GOUT, 4, 0, 4) },
  { pnode(GPIO, 4, 0, ACLR, 3, -1), rnode(GOUT, 4, 0, 12) },
  { pnode(GPIO, 4, 0, SCLR, 3, -1), rnode(GOUT, 4, 0, 1) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 4, 0, 4) },
  { pnode(GPIO, 4, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 4, 0, 6) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 4, 0, 0) },
  { pnode(GPIO, 4, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 4, 0, 2) },
  { pnode(GPIO, 4, 39, DATAOUT, 0, 0), rnode(GIN, 4, 39, 18) },
  { pnode(GPIO, 4, 39, DATAOUT, 0, 1), rnode(GIN, 4, 39, 17) },
  { pnode(GPIO, 4, 39, DATAOUT, 0, 2), rnode(GIN, 4, 39, 16) },
  { pnode(GPIO, 4, 39, DATAOUT, 0, 3), rnode(GIN, 4, 39, 15) },
  { pnode(GPIO, 4, 39, DATAOUT, 0, 4), rnode(GIN, 4, 39, 14) },
  { pnode(GPIO, 4, 39, OEIN, 0, 0), rnode(GOUT, 4, 39, 38) },
  { pnode(GPIO, 4, 39, OEIN, 0, 1), rnode(GOUT, 4, 39, 30) },
  { pnode(GPIO, 4, 39, BSLIPMAX, 0, -1), rnode(GIN, 4, 39, 19) },
  { pnode(GPIO, 4, 39, CEIN, 0, -1), rnode(GOUT, 4, 39, 27) },
  { pnode(GPIO, 4, 39, CEOUT, 0, -1), rnode(GOUT, 4, 39, 45) },
  { pnode(GPIO, 4, 39, SCLR, 0, -1), rnode(GOUT, 4, 39, 31) },
  { pnode(GPIO, 4, 39, CLKIN_IN, 0, 0), rnode(DCMUX, 4, 39, 10) },
  { pnode(GPIO, 4, 39, CLKIN_IN, 0, 1), rnode(DCMUX, 4, 39, 8) },
  { pnode(GPIO, 4, 39, CLKIN_OUT, 0, 0), rnode(DCMUX, 4, 39, 14) },
  { pnode(GPIO, 4, 39, CLKIN_OUT, 0, 1), rnode(DCMUX, 4, 39, 12) },
  { pnode(GPIO, 4, 39, DATAOUT, 1, 0), rnode(GIN, 4, 39, 24) },
  { pnode(GPIO, 4, 39, DATAOUT, 1, 1), rnode(GIN, 4, 39, 23) },
  { pnode(GPIO, 4, 39, DATAOUT, 1, 2), rnode(GIN, 4, 39, 22) },
  { pnode(GPIO, 4, 39, DATAOUT, 1, 3), rnode(GIN, 4, 39, 21) },
  { pnode(GPIO, 4, 39, DATAOUT, 1, 4), rnode(GIN, 4, 39, 20) },
  { pnode(GPIO, 4, 39, OEIN, 1, 0), rnode(GOUT, 4, 39, 47) },
  { pnode(GPIO, 4, 39, OEIN, 1, 1), rnode(GOUT, 4, 39, 39) },
  { pnode(GPIO, 4, 39, BSLIPMAX, 1, -1), rnode(GIN, 4, 39, 25) },
  { pnode(GPIO, 4, 39, CEIN, 1, -1), rnode(GOUT, 4, 39, 51) },
  { pnode(GPIO, 4, 39, CEOUT, 1, -1), rnode(GOUT, 4, 39, 50) },
  { pnode(GPIO, 4, 39, SCLR, 1, -1), rnode(GOUT, 4, 39, 46) },
  { pnode(GPIO, 4, 39, CLKIN_IN, 1, 0), rnode(DCMUX, 4, 39, 11) },
  { pnode(GPIO, 4, 39, CLKIN_IN, 1, 1), rnode(DCMUX, 4, 39, 9) },
  { pnode(GPIO, 4, 39, CLKIN_OUT, 1, 0), rnode(DCMUX, 4, 39, 15) },
  { pnode(GPIO, 4, 39, CLKIN_OUT, 1, 1), rnode(DCMUX, 4, 39, 13) },
  { pnode(GPIO, 4, 39, DATAOUT, 2, 0), rnode(GIN, 4, 39, 8) },
  { pnode(GPIO, 4, 39, DATAOUT, 2, 1), rnode(GIN, 4, 39, 9) },
  { pnode(GPIO, 4, 39, DATAOUT, 2, 2), rnode(GIN, 4, 39, 10) },
  { pnode(GPIO, 4, 39, DATAOUT, 2, 3), rnode(GIN, 4, 39, 11) },
  { pnode(GPIO, 4, 39, DATAOUT, 2, 4), rnode(GIN, 4, 39, 12) },
  { pnode(GPIO, 4, 39, OEIN, 2, 0), rnode(GOUT, 4, 39, 16) },
  { pnode(GPIO, 4, 39, OEIN, 2, 1), rnode(GOUT, 4, 39, 24) },
  { pnode(GPIO, 4, 39, BSLIPMAX, 2, -1), rnode(GIN, 4, 39, 7) },
  { pnode(GPIO, 4, 39, CEIN, 2, -1), rnode(GOUT, 4, 39, 20) },
  { pnode(GPIO, 4, 39, CEOUT, 2, -1), rnode(GOUT, 4, 39, 13) },
  { pnode(GPIO, 4, 39, SCLR, 2, -1), rnode(GOUT, 4, 39, 25) },
  { pnode(GPIO, 4, 39, CLKIN_IN, 2, 0), rnode(DCMUX, 4, 39, 5) },
  { pnode(GPIO, 4, 39, CLKIN_IN, 2, 1), rnode(DCMUX, 4, 39, 7) },
  { pnode(GPIO, 4, 39, CLKIN_OUT, 2, 0), rnode(DCMUX, 4, 39, 1) },
  { pnode(GPIO, 4, 39, CLKIN_OUT, 2, 1), rnode(DCMUX, 4, 39, 3) },
  { pnode(GPIO, 4, 39, DATAOUT, 3, 0), rnode(GIN, 4, 39, 2) },
  { pnode(GPIO, 4, 39, DATAOUT, 3, 1), rnode(GIN, 4, 39, 3) },
  { pnode(GPIO, 4, 39, DATAOUT, 3, 2), rnode(GIN, 4, 39, 4) },
  { pnode(GPIO, 4, 39, DATAOUT, 3, 3), rnode(GIN, 4, 39, 5) },
  { pnode(GPIO, 4, 39, DATAOUT, 3, 4), rnode(GIN, 4, 39, 6) },
  { pnode(GPIO, 4, 39, OEIN, 3, 0), rnode(GOUT, 4, 39, 2) },
  { pnode(GPIO, 4, 39, OEIN, 3, 1), rnode(GOUT, 4, 39, 19) },
  { pnode(GPIO, 4, 39, BSLIPMAX, 3, -1), rnode(GIN, 4, 39, 1) },
  { pnode(GPIO, 4, 39, CEIN, 3, -1), rnode(GOUT, 4, 39, 5) },
  { pnode(GPIO, 4, 39, CEOUT, 3, -1), rnode(GOUT, 4, 39, 4) },
  { pnode(GPIO, 4, 39, SCLR, 3, -1), rnode(GOUT, 4, 39, 1) },
  { pnode(GPIO, 4, 39, CLKIN_IN, 3, 0), rnode(DCMUX, 4, 39, 4) },
  { pnode(GPIO, 4, 39, CLKIN_IN, 3, 1), rnode(DCMUX, 4, 39, 6) },
  { pnode(GPIO, 4, 39, CLKIN_OUT, 3, 0), rnode(DCMUX, 4, 39, 0) },
  { pnode(GPIO, 4, 39, CLKIN_OUT, 3, 1), rnode(DCMUX, 4, 39, 2) },
  { pnode(GPIO, 5, 0, DATAIN, 0, 0), rnode(GOUT, 5, 0, 44) },
  { pnode(GPIO, 5, 0, DATAIN, 0, 1), rnode(GOUT, 5, 0, 34) },
  { pnode(GPIO, 5, 0, DATAIN, 0, 2), rnode(GOUT, 5, 0, 43) },
  { pnode(GPIO, 5, 0, DATAIN, 0, 3), rnode(GOUT, 5, 0, 29) },
  { pnode(GPIO, 5, 0, DATAOUT, 0, 0), rnode(GIN, 5, 0, 18) },
  { pnode(GPIO, 5, 0, DATAOUT, 0, 1), rnode(GIN, 5, 0, 17) },
  { pnode(GPIO, 5, 0, DATAOUT, 0, 2), rnode(GIN, 5, 0, 16) },
  { pnode(GPIO, 5, 0, DATAOUT, 0, 3), rnode(GIN, 5, 0, 15) },
  { pnode(GPIO, 5, 0, DATAOUT, 0, 4), rnode(GIN, 5, 0, 14) },
  { pnode(GPIO, 5, 0, OEIN, 0, 0), rnode(GOUT, 5, 0, 38) },
  { pnode(GPIO, 5, 0, OEIN, 0, 1), rnode(GOUT, 5, 0, 30) },
  { pnode(GPIO, 5, 0, BSLIPMAX, 0, -1), rnode(GIN, 5, 0, 19) },
  { pnode(GPIO, 5, 0, CEIN, 0, -1), rnode(GOUT, 5, 0, 27) },
  { pnode(GPIO, 5, 0, CEOUT, 0, -1), rnode(GOUT, 5, 0, 45) },
  { pnode(GPIO, 5, 0, ACLR, 0, -1), rnode(GOUT, 5, 0, 28) },
  { pnode(GPIO, 5, 0, SCLR, 0, -1), rnode(GOUT, 5, 0, 31) },
  { pnode(GPIO, 5, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 5, 0, 10) },
  { pnode(GPIO, 5, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 5, 0, 8) },
  { pnode(GPIO, 5, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 5, 0, 14) },
  { pnode(GPIO, 5, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 5, 0, 12) },
  { pnode(GPIO, 5, 0, DATAIN, 1, 0), rnode(GOUT, 5, 0, 49) },
  { pnode(GPIO, 5, 0, DATAIN, 1, 1), rnode(GOUT, 5, 0, 41) },
  { pnode(GPIO, 5, 0, DATAIN, 1, 2), rnode(GOUT, 5, 0, 48) },
  { pnode(GPIO, 5, 0, DATAIN, 1, 3), rnode(GOUT, 5, 0, 40) },
  { pnode(GPIO, 5, 0, DATAOUT, 1, 0), rnode(GIN, 5, 0, 24) },
  { pnode(GPIO, 5, 0, DATAOUT, 1, 1), rnode(GIN, 5, 0, 23) },
  { pnode(GPIO, 5, 0, DATAOUT, 1, 2), rnode(GIN, 5, 0, 22) },
  { pnode(GPIO, 5, 0, DATAOUT, 1, 3), rnode(GIN, 5, 0, 21) },
  { pnode(GPIO, 5, 0, DATAOUT, 1, 4), rnode(GIN, 5, 0, 20) },
  { pnode(GPIO, 5, 0, OEIN, 1, 0), rnode(GOUT, 5, 0, 47) },
  { pnode(GPIO, 5, 0, OEIN, 1, 1), rnode(GOUT, 5, 0, 39) },
  { pnode(GPIO, 5, 0, BSLIPMAX, 1, -1), rnode(GIN, 5, 0, 25) },
  { pnode(GPIO, 5, 0, CEIN, 1, -1), rnode(GOUT, 5, 0, 51) },
  { pnode(GPIO, 5, 0, CEOUT, 1, -1), rnode(GOUT, 5, 0, 50) },
  { pnode(GPIO, 5, 0, ACLR, 1, -1), rnode(GOUT, 5, 0, 42) },
  { pnode(GPIO, 5, 0, SCLR, 1, -1), rnode(GOUT, 5, 0, 46) },
  { pnode(GPIO, 5, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 5, 0, 11) },
  { pnode(GPIO, 5, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 5, 0, 9) },
  { pnode(GPIO, 5, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 5, 0, 15) },
  { pnode(GPIO, 5, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 5, 0, 13) },
  { pnode(GPIO, 5, 0, DATAIN, 2, 0), rnode(GOUT, 5, 0, 14) },
  { pnode(GPIO, 5, 0, DATAIN, 2, 1), rnode(GOUT, 5, 0, 22) },
  { pnode(GPIO, 5, 0, DATAIN, 2, 2), rnode(GOUT, 5, 0, 15) },
  { pnode(GPIO, 5, 0, DATAIN, 2, 3), rnode(GOUT, 5, 0, 23) },
  { pnode(GPIO, 5, 0, DATAOUT, 2, 0), rnode(GIN, 5, 0, 8) },
  { pnode(GPIO, 5, 0, DATAOUT, 2, 1), rnode(GIN, 5, 0, 9) },
  { pnode(GPIO, 5, 0, DATAOUT, 2, 2), rnode(GIN, 5, 0, 10) },
  { pnode(GPIO, 5, 0, DATAOUT, 2, 3), rnode(GIN, 5, 0, 11) },
  { pnode(GPIO, 5, 0, DATAOUT, 2, 4), rnode(GIN, 5, 0, 12) },
  { pnode(GPIO, 5, 0, OEIN, 2, 0), rnode(GOUT, 5, 0, 16) },
  { pnode(GPIO, 5, 0, OEIN, 2, 1), rnode(GOUT, 5, 0, 24) },
  { pnode(GPIO, 5, 0, BSLIPMAX, 2, -1), rnode(GIN, 5, 0, 7) },
  { pnode(GPIO, 5, 0, CEIN, 2, -1), rnode(GOUT, 5, 0, 20) },
  { pnode(GPIO, 5, 0, CEOUT, 2, -1), rnode(GOUT, 5, 0, 13) },
  { pnode(GPIO, 5, 0, ACLR, 2, -1), rnode(GOUT, 5, 0, 21) },
  { pnode(GPIO, 5, 0, SCLR, 2, -1), rnode(GOUT, 5, 0, 25) },
  { pnode(GPIO, 5, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 5, 0, 5) },
  { pnode(GPIO, 5, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 5, 0, 7) },
  { pnode(GPIO, 5, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 5, 0, 1) },
  { pnode(GPIO, 5, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 5, 0, 3) },
  { pnode(GPIO, 5, 0, DATAIN, 3, 0), rnode(GOUT, 5, 0, 3) },
  { pnode(GPIO, 5, 0, DATAIN, 3, 1), rnode(GOUT, 5, 0, 17) },
  { pnode(GPIO, 5, 0, DATAIN, 3, 2), rnode(GOUT, 5, 0, 8) },
  { pnode(GPIO, 5, 0, DATAIN, 3, 3), rnode(GOUT, 5, 0, 18) },
  { pnode(GPIO, 5, 0, DATAOUT, 3, 0), rnode(GIN, 5, 0, 2) },
  { pnode(GPIO, 5, 0, DATAOUT, 3, 1), rnode(GIN, 5, 0, 3) },
  { pnode(GPIO, 5, 0, DATAOUT, 3, 2), rnode(GIN, 5, 0, 4) },
  { pnode(GPIO, 5, 0, DATAOUT, 3, 3), rnode(GIN, 5, 0, 5) },
  { pnode(GPIO, 5, 0, DATAOUT, 3, 4), rnode(GIN, 5, 0, 6) },
  { pnode(GPIO, 5, 0, OEIN, 3, 0), rnode(GOUT, 5, 0, 2) },
  { pnode(GPIO, 5, 0, OEIN, 3, 1), rnode(GOUT, 5, 0, 19) },
  { pnode(GPIO, 5, 0, BSLIPMAX, 3, -1), rnode(GIN, 5, 0, 1) },
  { pnode(GPIO, 5, 0, CEIN, 3, -1), rnode(GOUT, 5, 0, 5) },
  { pnode(GPIO, 5, 0, CEOUT, 3, -1), rnode(GOUT, 5, 0, 4) },
  { pnode(GPIO, 5, 0, ACLR, 3, -1), rnode(GOUT, 5, 0, 12) },
  { pnode(GPIO, 5, 0, SCLR, 3, -1), rnode(GOUT, 5, 0, 1) },
  { pnode(GPIO, 5, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 5, 0, 4) },
  { pnode(GPIO, 5, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 5, 0, 6) },
  { pnode(GPIO, 5, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 5, 0, 0) },
  { pnode(GPIO, 5, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 5, 0, 2) },
  { pnode(GPIO, 6, 39, DATAOUT, 0, 0), rnode(GIN, 6, 39, 18) },
  { pnode(GPIO, 6, 39, DATAOUT, 0, 1), rnode(GIN, 6, 39, 17) },
  { pnode(GPIO, 6, 39, DATAOUT, 0, 2), rnode(GIN, 6, 39, 16) },
  { pnode(GPIO, 6, 39, DATAOUT, 0, 3), rnode(GIN, 6, 39, 15) },
  { pnode(GPIO, 6, 39, DATAOUT, 0, 4), rnode(GIN, 6, 39, 14) },
  { pnode(GPIO, 6, 39, OEIN, 0, 0), rnode(GOUT, 6, 39, 38) },
  { pnode(GPIO, 6, 39, OEIN, 0, 1), rnode(GOUT, 6, 39, 30) },
  { pnode(GPIO, 6, 39, BSLIPMAX, 0, -1), rnode(GIN, 6, 39, 19) },
  { pnode(GPIO, 6, 39, CEIN, 0, -1), rnode(GOUT, 6, 39, 27) },
  { pnode(GPIO, 6, 39, CEOUT, 0, -1), rnode(GOUT, 6, 39, 45) },
  { pnode(GPIO, 6, 39, SCLR, 0, -1), rnode(GOUT, 6, 39, 31) },
  { pnode(GPIO, 6, 39, CLKIN_IN, 0, 0), rnode(DCMUX, 6, 39, 10) },
  { pnode(GPIO, 6, 39, CLKIN_IN, 0, 1), rnode(DCMUX, 6, 39, 8) },
  { pnode(GPIO, 6, 39, CLKIN_OUT, 0, 0), rnode(DCMUX, 6, 39, 14) },
  { pnode(GPIO, 6, 39, CLKIN_OUT, 0, 1), rnode(DCMUX, 6, 39, 12) },
  { pnode(GPIO, 6, 39, DATAOUT, 1, 0), rnode(GIN, 6, 39, 24) },
  { pnode(GPIO, 6, 39, DATAOUT, 1, 1), rnode(GIN, 6, 39, 23) },
  { pnode(GPIO, 6, 39, DATAOUT, 1, 2), rnode(GIN, 6, 39, 22) },
  { pnode(GPIO, 6, 39, DATAOUT, 1, 3), rnode(GIN, 6, 39, 21) },
  { pnode(GPIO, 6, 39, DATAOUT, 1, 4), rnode(GIN, 6, 39, 20) },
  { pnode(GPIO, 6, 39, OEIN, 1, 0), rnode(GOUT, 6, 39, 47) },
  { pnode(GPIO, 6, 39, OEIN, 1, 1), rnode(GOUT, 6, 39, 39) },
  { pnode(GPIO, 6, 39, BSLIPMAX, 1, -1), rnode(GIN, 6, 39, 25) },
  { pnode(GPIO, 6, 39, CEIN, 1, -1), rnode(GOUT, 6, 39, 51) },
  { pnode(GPIO, 6, 39, CEOUT, 1, -1), rnode(GOUT, 6, 39, 50) },
  { pnode(GPIO, 6, 39, SCLR, 1, -1), rnode(GOUT, 6, 39, 46) },
  { pnode(GPIO, 6, 39, CLKIN_IN, 1, 0), rnode(DCMUX, 6, 39, 11) },
  { pnode(GPIO, 6, 39, CLKIN_IN, 1, 1), rnode(DCMUX, 6, 39, 9) },
  { pnode(GPIO, 6, 39, CLKIN_OUT, 1, 0), rnode(DCMUX, 6, 39, 15) },
  { pnode(GPIO, 6, 39, CLKIN_OUT, 1, 1), rnode(DCMUX, 6, 39, 13) },
  { pnode(GPIO, 6, 39, DATAOUT, 2, 0), rnode(GIN, 6, 39, 8) },
  { pnode(GPIO, 6, 39, DATAOUT, 2, 1), rnode(GIN, 6, 39, 9) },
  { pnode(GPIO, 6, 39, DATAOUT, 2, 2), rnode(GIN, 6, 39, 10) },
  { pnode(GPIO, 6, 39, DATAOUT, 2, 3), rnode(GIN, 6, 39, 11) },
  { pnode(GPIO, 6, 39, DATAOUT, 2, 4), rnode(GIN, 6, 39, 12) },
  { pnode(GPIO, 6, 39, OEIN, 2, 0), rnode(GOUT, 6, 39, 16) },
  { pnode(GPIO, 6, 39, OEIN, 2, 1), rnode(GOUT, 6, 39, 24) },
  { pnode(GPIO, 6, 39, BSLIPMAX, 2, -1), rnode(GIN, 6, 39, 7) },
  { pnode(GPIO, 6, 39, CEIN, 2, -1), rnode(GOUT, 6, 39, 20) },
  { pnode(GPIO, 6, 39, CEOUT, 2, -1), rnode(GOUT, 6, 39, 13) },
  { pnode(GPIO, 6, 39, SCLR, 2, -1), rnode(GOUT, 6, 39, 25) },
  { pnode(GPIO, 6, 39, CLKIN_IN, 2, 0), rnode(DCMUX, 6, 39, 5) },
  { pnode(GPIO, 6, 39, CLKIN_IN, 2, 1), rnode(DCMUX, 6, 39, 7) },
  { pnode(GPIO, 6, 39, CLKIN_OUT, 2, 0), rnode(DCMUX, 6, 39, 1) },
  { pnode(GPIO, 6, 39, CLKIN_OUT, 2, 1), rnode(DCMUX, 6, 39, 3) },
  { pnode(GPIO, 6, 39, DATAOUT, 3, 0), rnode(GIN, 6, 39, 2) },
  { pnode(GPIO, 6, 39, DATAOUT, 3, 1), rnode(GIN, 6, 39, 3) },
  { pnode(GPIO, 6, 39, DATAOUT, 3, 2), rnode(GIN, 6, 39, 4) },
  { pnode(GPIO, 6, 39, DATAOUT, 3, 3), rnode(GIN, 6, 39, 5) },
  { pnode(GPIO, 6, 39, DATAOUT, 3, 4), rnode(GIN, 6, 39, 6) },
  { pnode(GPIO, 6, 39, OEIN, 3, 0), rnode(GOUT, 6, 39, 2) },
  { pnode(GPIO, 6, 39, OEIN, 3, 1), rnode(GOUT, 6, 39, 19) },
  { pnode(GPIO, 6, 39, BSLIPMAX, 3, -1), rnode(GIN, 6, 39, 1) },
  { pnode(GPIO, 6, 39, CEIN, 3, -1), rnode(GOUT, 6, 39, 5) },
  { pnode(GPIO, 6, 39, CEOUT, 3, -1), rnode(GOUT, 6, 39, 4) },
  { pnode(GPIO, 6, 39, SCLR, 3, -1), rnode(GOUT, 6, 39, 1) },
  { pnode(GPIO, 6, 39, CLKIN_IN, 3, 0), rnode(DCMUX, 6, 39, 4) },
  { pnode(GPIO, 6, 39, CLKIN_IN, 3, 1), rnode(DCMUX, 6, 39, 6) },
  { pnode(GPIO, 6, 39, CLKIN_OUT, 3, 0), rnode(DCMUX, 6, 39, 0) },
  { pnode(GPIO, 6, 39, CLKIN_OUT, 3, 1), rnode(DCMUX, 6, 39, 2) },
  { pnode(GPIO, 7, 0, DATAIN, 0, 0), rnode(GOUT, 7, 0, 44) },
  { pnode(GPIO, 7, 0, DATAIN, 0, 1), rnode(GOUT, 7, 0, 34) },
  { pnode(GPIO, 7, 0, DATAIN, 0, 2), rnode(GOUT, 7, 0, 43) },
  { pnode(GPIO, 7, 0, DATAIN, 0, 3), rnode(GOUT, 7, 0, 29) },
  { pnode(GPIO, 7, 0, DATAOUT, 0, 0), rnode(GIN, 7, 0, 18) },
  { pnode(GPIO, 7, 0, DATAOUT, 0, 1), rnode(GIN, 7, 0, 17) },
  { pnode(GPIO, 7, 0, DATAOUT, 0, 2), rnode(GIN, 7, 0, 16) },
  { pnode(GPIO, 7, 0, DATAOUT, 0, 3), rnode(GIN, 7, 0, 15) },
  { pnode(GPIO, 7, 0, DATAOUT, 0, 4), rnode(GIN, 7, 0, 14) },
  { pnode(GPIO, 7, 0, OEIN, 0, 0), rnode(GOUT, 7, 0, 38) },
  { pnode(GPIO, 7, 0, OEIN, 0, 1), rnode(GOUT, 7, 0, 30) },
  { pnode(GPIO, 7, 0, BSLIPMAX, 0, -1), rnode(GIN, 7, 0, 19) },
  { pnode(GPIO, 7, 0, CEIN, 0, -1), rnode(GOUT, 7, 0, 27) },
  { pnode(GPIO, 7, 0, CEOUT, 0, -1), rnode(GOUT, 7, 0, 45) },
  { pnode(GPIO, 7, 0, ACLR, 0, -1), rnode(GOUT, 7, 0, 28) },
  { pnode(GPIO, 7, 0, SCLR, 0, -1), rnode(GOUT, 7, 0, 31) },
  { pnode(GPIO, 7, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 7, 0, 10) },
  { pnode(GPIO, 7, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 7, 0, 8) },
  { pnode(GPIO, 7, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 7, 0, 14) },
  { pnode(GPIO, 7, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 7, 0, 12) },
  { pnode(GPIO, 7, 0, DATAIN, 1, 0), rnode(GOUT, 7, 0, 49) },
  { pnode(GPIO, 7, 0, DATAIN, 1, 1), rnode(GOUT, 7, 0, 41) },
  { pnode(GPIO, 7, 0, DATAIN, 1, 2), rnode(GOUT, 7, 0, 48) },
  { pnode(GPIO, 7, 0, DATAIN, 1, 3), rnode(GOUT, 7, 0, 40) },
  { pnode(GPIO, 7, 0, DATAOUT, 1, 0), rnode(GIN, 7, 0, 24) },
  { pnode(GPIO, 7, 0, DATAOUT, 1, 1), rnode(GIN, 7, 0, 23) },
  { pnode(GPIO, 7, 0, DATAOUT, 1, 2), rnode(GIN, 7, 0, 22) },
  { pnode(GPIO, 7, 0, DATAOUT, 1, 3), rnode(GIN, 7, 0, 21) },
  { pnode(GPIO, 7, 0, DATAOUT, 1, 4), rnode(GIN, 7, 0, 20) },
  { pnode(GPIO, 7, 0, OEIN, 1, 0), rnode(GOUT, 7, 0, 47) },
  { pnode(GPIO, 7, 0, OEIN, 1, 1), rnode(GOUT, 7, 0, 39) },
  { pnode(GPIO, 7, 0, BSLIPMAX, 1, -1), rnode(GIN, 7, 0, 25) },
  { pnode(GPIO, 7, 0, CEIN, 1, -1), rnode(GOUT, 7, 0, 51) },
  { pnode(GPIO, 7, 0, CEOUT, 1, -1), rnode(GOUT, 7, 0, 50) },
  { pnode(GPIO, 7, 0, ACLR, 1, -1), rnode(GOUT, 7, 0, 42) },
  { pnode(GPIO, 7, 0, SCLR, 1, -1), rnode(GOUT, 7, 0, 46) },
  { pnode(GPIO, 7, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 7, 0, 11) },
  { pnode(GPIO, 7, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 7, 0, 9) },
  { pnode(GPIO, 7, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 7, 0, 15) },
  { pnode(GPIO, 7, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 7, 0, 13) },
  { pnode(GPIO, 7, 0, DATAIN, 2, 0), rnode(GOUT, 7, 0, 14) },
  { pnode(GPIO, 7, 0, DATAIN, 2, 1), rnode(GOUT, 7, 0, 22) },
  { pnode(GPIO, 7, 0, DATAIN, 2, 2), rnode(GOUT, 7, 0, 15) },
  { pnode(GPIO, 7, 0, DATAIN, 2, 3), rnode(GOUT, 7, 0, 23) },
  { pnode(GPIO, 7, 0, DATAOUT, 2, 0), rnode(GIN, 7, 0, 8) },
  { pnode(GPIO, 7, 0, DATAOUT, 2, 1), rnode(GIN, 7, 0, 9) },
  { pnode(GPIO, 7, 0, DATAOUT, 2, 2), rnode(GIN, 7, 0, 10) },
  { pnode(GPIO, 7, 0, DATAOUT, 2, 3), rnode(GIN, 7, 0, 11) },
  { pnode(GPIO, 7, 0, DATAOUT, 2, 4), rnode(GIN, 7, 0, 12) },
  { pnode(GPIO, 7, 0, OEIN, 2, 0), rnode(GOUT, 7, 0, 16) },
  { pnode(GPIO, 7, 0, OEIN, 2, 1), rnode(GOUT, 7, 0, 24) },
  { pnode(GPIO, 7, 0, BSLIPMAX, 2, -1), rnode(GIN, 7, 0, 7) },
  { pnode(GPIO, 7, 0, CEIN, 2, -1), rnode(GOUT, 7, 0, 20) },
  { pnode(GPIO, 7, 0, CEOUT, 2, -1), rnode(GOUT, 7, 0, 13) },
  { pnode(GPIO, 7, 0, ACLR, 2, -1), rnode(GOUT, 7, 0, 21) },
  { pnode(GPIO, 7, 0, SCLR, 2, -1), rnode(GOUT, 7, 0, 25) },
  { pnode(GPIO, 7, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 7, 0, 5) },
  { pnode(GPIO, 7, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 7, 0, 7) },
  { pnode(GPIO, 7, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 7, 0, 1) },
  { pnode(GPIO, 7, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 7, 0, 3) },
  { pnode(GPIO, 7, 0, DATAIN, 3, 0), rnode(GOUT, 7, 0, 3) },
  { pnode(GPIO, 7, 0, DATAIN, 3, 1), rnode(GOUT, 7, 0, 17) },
  { pnode(GPIO, 7, 0, DATAIN, 3, 2), rnode(GOUT, 7, 0, 8) },
  { pnode(GPIO, 7, 0, DATAIN, 3, 3), rnode(GOUT, 7, 0, 18) },
  { pnode(GPIO, 7, 0, DATAOUT, 3, 0), rnode(GIN, 7, 0, 2) },
  { pnode(GPIO, 7, 0, DATAOUT, 3, 1), rnode(GIN, 7, 0, 3) },
  { pnode(GPIO, 7, 0, DATAOUT, 3, 2), rnode(GIN, 7, 0, 4) },
  { pnode(GPIO, 7, 0, DATAOUT, 3, 3), rnode(GIN, 7, 0, 5) },
  { pnode(GPIO, 7, 0, DATAOUT, 3, 4), rnode(GIN, 7, 0, 6) },
  { pnode(GPIO, 7, 0, OEIN, 3, 0), rnode(GOUT, 7, 0, 2) },
  { pnode(GPIO, 7, 0, OEIN, 3, 1), rnode(GOUT, 7, 0, 19) },
  { pnode(GPIO, 7, 0, BSLIPMAX, 3, -1), rnode(GIN, 7, 0, 1) },
  { pnode(GPIO, 7, 0, CEIN, 3, -1), rnode(GOUT, 7, 0, 5) },
  { pnode(GPIO, 7, 0, CEOUT, 3, -1), rnode(GOUT, 7, 0, 4) },
  { pnode(GPIO, 7, 0, ACLR, 3, -1), rnode(GOUT, 7, 0, 12) },
  { pnode(GPIO, 7, 0, SCLR, 3, -1), rnode(GOUT, 7, 0, 1) },
  { pnode(GPIO, 7, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 7, 0, 4) },
  { pnode(GPIO, 7, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 7, 0, 6) },
  { pnode(GPIO, 7, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 7, 0, 0) },
  { pnode(GPIO, 7, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 7, 0, 2) },
  { pnode(GPIO, 8, 0, DATAIN, 0, 0), rnode(GOUT, 8, 0, 44) },
  { pnode(GPIO, 8, 0, DATAIN, 0, 1), rnode(GOUT, 8, 0, 34) },
  { pnode(GPIO, 8, 0, DATAIN, 0, 2), rnode(GOUT, 8, 0, 43) },
  { pnode(GPIO, 8, 0, DATAIN, 0, 3), rnode(GOUT, 8, 0, 29) },
  { pnode(GPIO, 8, 0, DATAOUT, 0, 0), rnode(GIN, 8, 0, 18) },
  { pnode(GPIO, 8, 0, DATAOUT, 0, 1), rnode(GIN, 8, 0, 17) },
  { pnode(GPIO, 8, 0, DATAOUT, 0, 2), rnode(GIN, 8, 0, 16) },
  { pnode(GPIO, 8, 0, DATAOUT, 0, 3), rnode(GIN, 8, 0, 15) },
  { pnode(GPIO, 8, 0, DATAOUT, 0, 4), rnode(GIN, 8, 0, 14) },
  { pnode(GPIO, 8, 0, OEIN, 0, 0), rnode(GOUT, 8, 0, 38) },
  { pnode(GPIO, 8, 0, OEIN, 0, 1), rnode(GOUT, 8, 0, 30) },
  { pnode(GPIO, 8, 0, BSLIPMAX, 0, -1), rnode(GIN, 8, 0, 19) },
  { pnode(GPIO, 8, 0, CEIN, 0, -1), rnode(GOUT, 8, 0, 27) },
  { pnode(GPIO, 8, 0, CEOUT, 0, -1), rnode(GOUT, 8, 0, 45) },
  { pnode(GPIO, 8, 0, ACLR, 0, -1), rnode(GOUT, 8, 0, 28) },
  { pnode(GPIO, 8, 0, SCLR, 0, -1), rnode(GOUT, 8, 0, 31) },
  { pnode(GPIO, 8, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 8, 0, 10) },
  { pnode(GPIO, 8, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 8, 0, 8) },
  { pnode(GPIO, 8, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 8, 0, 14) },
  { pnode(GPIO, 8, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 8, 0, 12) },
  { pnode(GPIO, 8, 0, DATAIN, 1, 0), rnode(GOUT, 8, 0, 49) },
  { pnode(GPIO, 8, 0, DATAIN, 1, 1), rnode(GOUT, 8, 0, 41) },
  { pnode(GPIO, 8, 0, DATAIN, 1, 2), rnode(GOUT, 8, 0, 48) },
  { pnode(GPIO, 8, 0, DATAIN, 1, 3), rnode(GOUT, 8, 0, 40) },
  { pnode(GPIO, 8, 0, DATAOUT, 1, 0), rnode(GIN, 8, 0, 24) },
  { pnode(GPIO, 8, 0, DATAOUT, 1, 1), rnode(GIN, 8, 0, 23) },
  { pnode(GPIO, 8, 0, DATAOUT, 1, 2), rnode(GIN, 8, 0, 22) },
  { pnode(GPIO, 8, 0, DATAOUT, 1, 3), rnode(GIN, 8, 0, 21) },
  { pnode(GPIO, 8, 0, DATAOUT, 1, 4), rnode(GIN, 8, 0, 20) },
  { pnode(GPIO, 8, 0, OEIN, 1, 0), rnode(GOUT, 8, 0, 47) },
  { pnode(GPIO, 8, 0, OEIN, 1, 1), rnode(GOUT, 8, 0, 39) },
  { pnode(GPIO, 8, 0, BSLIPMAX, 1, -1), rnode(GIN, 8, 0, 25) },
  { pnode(GPIO, 8, 0, CEIN, 1, -1), rnode(GOUT, 8, 0, 51) },
  { pnode(GPIO, 8, 0, CEOUT, 1, -1), rnode(GOUT, 8, 0, 50) },
  { pnode(GPIO, 8, 0, ACLR, 1, -1), rnode(GOUT, 8, 0, 42) },
  { pnode(GPIO, 8, 0, SCLR, 1, -1), rnode(GOUT, 8, 0, 46) },
  { pnode(GPIO, 8, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 8, 0, 11) },
  { pnode(GPIO, 8, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 8, 0, 9) },
  { pnode(GPIO, 8, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 8, 0, 15) },
  { pnode(GPIO, 8, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 8, 0, 13) },
  { pnode(GPIO, 8, 0, DATAIN, 2, 0), rnode(GOUT, 8, 0, 14) },
  { pnode(GPIO, 8, 0, DATAIN, 2, 1), rnode(GOUT, 8, 0, 22) },
  { pnode(GPIO, 8, 0, DATAIN, 2, 2), rnode(GOUT, 8, 0, 15) },
  { pnode(GPIO, 8, 0, DATAIN, 2, 3), rnode(GOUT, 8, 0, 23) },
  { pnode(GPIO, 8, 0, DATAOUT, 2, 0), rnode(GIN, 8, 0, 8) },
  { pnode(GPIO, 8, 0, DATAOUT, 2, 1), rnode(GIN, 8, 0, 9) },
  { pnode(GPIO, 8, 0, DATAOUT, 2, 2), rnode(GIN, 8, 0, 10) },
  { pnode(GPIO, 8, 0, DATAOUT, 2, 3), rnode(GIN, 8, 0, 11) },
  { pnode(GPIO, 8, 0, DATAOUT, 2, 4), rnode(GIN, 8, 0, 12) },
  { pnode(GPIO, 8, 0, OEIN, 2, 0), rnode(GOUT, 8, 0, 16) },
  { pnode(GPIO, 8, 0, OEIN, 2, 1), rnode(GOUT, 8, 0, 24) },
  { pnode(GPIO, 8, 0, BSLIPMAX, 2, -1), rnode(GIN, 8, 0, 7) },
  { pnode(GPIO, 8, 0, CEIN, 2, -1), rnode(GOUT, 8, 0, 20) },
  { pnode(GPIO, 8, 0, CEOUT, 2, -1), rnode(GOUT, 8, 0, 13) },
  { pnode(GPIO, 8, 0, ACLR, 2, -1), rnode(GOUT, 8, 0, 21) },
  { pnode(GPIO, 8, 0, SCLR, 2, -1), rnode(GOUT, 8, 0, 25) },
  { pnode(GPIO, 8, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 8, 0, 5) },
  { pnode(GPIO, 8, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 8, 0, 7) },
  { pnode(GPIO, 8, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 8, 0, 1) },
  { pnode(GPIO, 8, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 8, 0, 3) },
  { pnode(GPIO, 8, 0, DATAIN, 3, 0), rnode(GOUT, 8, 0, 3) },
  { pnode(GPIO, 8, 0, DATAIN, 3, 1), rnode(GOUT, 8, 0, 17) },
  { pnode(GPIO, 8, 0, DATAIN, 3, 2), rnode(GOUT, 8, 0, 8) },
  { pnode(GPIO, 8, 0, DATAIN, 3, 3), rnode(GOUT, 8, 0, 18) },
  { pnode(GPIO, 8, 0, DATAOUT, 3, 0), rnode(GIN, 8, 0, 2) },
  { pnode(GPIO, 8, 0, DATAOUT, 3, 1), rnode(GIN, 8, 0, 3) },
  { pnode(GPIO, 8, 0, DATAOUT, 3, 2), rnode(GIN, 8, 0, 4) },
  { pnode(GPIO, 8, 0, DATAOUT, 3, 3), rnode(GIN, 8, 0, 5) },
  { pnode(GPIO, 8, 0, DATAOUT, 3, 4), rnode(GIN, 8, 0, 6) },
  { pnode(GPIO, 8, 0, OEIN, 3, 0), rnode(GOUT, 8, 0, 2) },
  { pnode(GPIO, 8, 0, OEIN, 3, 1), rnode(GOUT, 8, 0, 19) },
  { pnode(GPIO, 8, 0, BSLIPMAX, 3, -1), rnode(GIN, 8, 0, 1) },
  { pnode(GPIO, 8, 0, CEIN, 3, -1), rnode(GOUT, 8, 0, 5) },
  { pnode(GPIO, 8, 0, CEOUT, 3, -1), rnode(GOUT, 8, 0, 4) },
  { pnode(GPIO, 8, 0, ACLR, 3, -1), rnode(GOUT, 8, 0, 12) },
  { pnode(GPIO, 8, 0, SCLR, 3, -1), rnode(GOUT, 8, 0, 1) },
  { pnode(GPIO, 8, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 8, 0, 4) },
  { pnode(GPIO, 8, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 8, 0, 6) },
  { pnode(GPIO, 8, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 8, 0, 0) },
  { pnode(GPIO, 8, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 8, 0, 2) },
  { pnode(GPIO, 8, 39, DATAIN, 0, 0), rnode(GOUT, 8, 39, 44) },
  { pnode(GPIO, 8, 39, DATAIN, 0, 1), rnode(GOUT, 8, 39, 34) },
  { pnode(GPIO, 8, 39, DATAIN, 0, 2), rnode(GOUT, 8, 39, 43) },
  { pnode(GPIO, 8, 39, DATAIN, 0, 3), rnode(GOUT, 8, 39, 29) },
  { pnode(GPIO, 8, 39, DATAOUT, 0, 0), rnode(GIN, 8, 39, 18) },
  { pnode(GPIO, 8, 39, DATAOUT, 0, 1), rnode(GIN, 8, 39, 17) },
  { pnode(GPIO, 8, 39, DATAOUT, 0, 2), rnode(GIN, 8, 39, 16) },
  { pnode(GPIO, 8, 39, DATAOUT, 0, 3), rnode(GIN, 8, 39, 15) },
  { pnode(GPIO, 8, 39, DATAOUT, 0, 4), rnode(GIN, 8, 39, 14) },
  { pnode(GPIO, 8, 39, OEIN, 0, 0), rnode(GOUT, 8, 39, 38) },
  { pnode(GPIO, 8, 39, OEIN, 0, 1), rnode(GOUT, 8, 39, 30) },
  { pnode(GPIO, 8, 39, BSLIPMAX, 0, -1), rnode(GIN, 8, 39, 19) },
  { pnode(GPIO, 8, 39, CEIN, 0, -1), rnode(GOUT, 8, 39, 27) },
  { pnode(GPIO, 8, 39, CEOUT, 0, -1), rnode(GOUT, 8, 39, 45) },
  { pnode(GPIO, 8, 39, ACLR, 0, -1), rnode(GOUT, 8, 39, 28) },
  { pnode(GPIO, 8, 39, SCLR, 0, -1), rnode(GOUT, 8, 39, 31) },
  { pnode(GPIO, 8, 39, CLKIN_IN, 0, 0), rnode(DCMUX, 8, 39, 10) },
  { pnode(GPIO, 8, 39, CLKIN_IN, 0, 1), rnode(DCMUX, 8, 39, 8) },
  { pnode(GPIO, 8, 39, CLKIN_OUT, 0, 0), rnode(DCMUX, 8, 39, 14) },
  { pnode(GPIO, 8, 39, CLKIN_OUT, 0, 1), rnode(DCMUX, 8, 39, 12) },
  { pnode(GPIO, 8, 39, DATAIN, 1, 0), rnode(GOUT, 8, 39, 49) },
  { pnode(GPIO, 8, 39, DATAIN, 1, 1), rnode(GOUT, 8, 39, 41) },
  { pnode(GPIO, 8, 39, DATAIN, 1, 2), rnode(GOUT, 8, 39, 48) },
  { pnode(GPIO, 8, 39, DATAIN, 1, 3), rnode(GOUT, 8, 39, 40) },
  { pnode(GPIO, 8, 39, DATAOUT, 1, 0), rnode(GIN, 8, 39, 24) },
  { pnode(GPIO, 8, 39, DATAOUT, 1, 1), rnode(GIN, 8, 39, 23) },
  { pnode(GPIO, 8, 39, DATAOUT, 1, 2), rnode(GIN, 8, 39, 22) },
  { pnode(GPIO, 8, 39, DATAOUT, 1, 3), rnode(GIN, 8, 39, 21) },
  { pnode(GPIO, 8, 39, DATAOUT, 1, 4), rnode(GIN, 8, 39, 20) },
  { pnode(GPIO, 8, 39, OEIN, 1, 0), rnode(GOUT, 8, 39, 47) },
  { pnode(GPIO, 8, 39, OEIN, 1, 1), rnode(GOUT, 8, 39, 39) },
  { pnode(GPIO, 8, 39, BSLIPMAX, 1, -1), rnode(GIN, 8, 39, 25) },
  { pnode(GPIO, 8, 39, CEIN, 1, -1), rnode(GOUT, 8, 39, 51) },
  { pnode(GPIO, 8, 39, CEOUT, 1, -1), rnode(GOUT, 8, 39, 50) },
  { pnode(GPIO, 8, 39, ACLR, 1, -1), rnode(GOUT, 8, 39, 42) },
  { pnode(GPIO, 8, 39, SCLR, 1, -1), rnode(GOUT, 8, 39, 46) },
  { pnode(GPIO, 8, 39, CLKIN_IN, 1, 0), rnode(DCMUX, 8, 39, 11) },
  { pnode(GPIO, 8, 39, CLKIN_IN, 1, 1), rnode(DCMUX, 8, 39, 9) },
  { pnode(GPIO, 8, 39, CLKIN_OUT, 1, 0), rnode(DCMUX, 8, 39, 15) },
  { pnode(GPIO, 8, 39, CLKIN_OUT, 1, 1), rnode(DCMUX, 8, 39, 13) },
  { pnode(GPIO, 8, 39, DATAOUT, 2, 0), rnode(GIN, 8, 39, 8) },
  { pnode(GPIO, 8, 39, DATAOUT, 2, 1), rnode(GIN, 8, 39, 9) },
  { pnode(GPIO, 8, 39, DATAOUT, 2, 2), rnode(GIN, 8, 39, 10) },
  { pnode(GPIO, 8, 39, DATAOUT, 2, 3), rnode(GIN, 8, 39, 11) },
  { pnode(GPIO, 8, 39, DATAOUT, 2, 4), rnode(GIN, 8, 39, 12) },
  { pnode(GPIO, 8, 39, OEIN, 2, 0), rnode(GOUT, 8, 39, 16) },
  { pnode(GPIO, 8, 39, OEIN, 2, 1), rnode(GOUT, 8, 39, 24) },
  { pnode(GPIO, 8, 39, BSLIPMAX, 2, -1), rnode(GIN, 8, 39, 7) },
  { pnode(GPIO, 8, 39, CEIN, 2, -1), rnode(GOUT, 8, 39, 20) },
  { pnode(GPIO, 8, 39, CEOUT, 2, -1), rnode(GOUT, 8, 39, 13) },
  { pnode(GPIO, 8, 39, SCLR, 2, -1), rnode(GOUT, 8, 39, 25) },
  { pnode(GPIO, 8, 39, CLKIN_IN, 2, 0), rnode(DCMUX, 8, 39, 5) },
  { pnode(GPIO, 8, 39, CLKIN_IN, 2, 1), rnode(DCMUX, 8, 39, 7) },
  { pnode(GPIO, 8, 39, CLKIN_OUT, 2, 0), rnode(DCMUX, 8, 39, 1) },
  { pnode(GPIO, 8, 39, CLKIN_OUT, 2, 1), rnode(DCMUX, 8, 39, 3) },
  { pnode(GPIO, 8, 39, DATAOUT, 3, 0), rnode(GIN, 8, 39, 2) },
  { pnode(GPIO, 8, 39, DATAOUT, 3, 1), rnode(GIN, 8, 39, 3) },
  { pnode(GPIO, 8, 39, DATAOUT, 3, 2), rnode(GIN, 8, 39, 4) },
  { pnode(GPIO, 8, 39, DATAOUT, 3, 3), rnode(GIN, 8, 39, 5) },
  { pnode(GPIO, 8, 39, DATAOUT, 3, 4), rnode(GIN, 8, 39, 6) },
  { pnode(GPIO, 8, 39, OEIN, 3, 0), rnode(GOUT, 8, 39, 2) },
  { pnode(GPIO, 8, 39, OEIN, 3, 1), rnode(GOUT, 8, 39, 19) },
  { pnode(GPIO, 8, 39, BSLIPMAX, 3, -1), rnode(GIN, 8, 39, 1) },
  { pnode(GPIO, 8, 39, CEIN, 3, -1), rnode(GOUT, 8, 39, 5) },
  { pnode(GPIO, 8, 39, CEOUT, 3, -1), rnode(GOUT, 8, 39, 4) },
  { pnode(GPIO, 8, 39, SCLR, 3, -1), rnode(GOUT, 8, 39, 1) },
  { pnode(GPIO, 8, 39, CLKIN_IN, 3, 0), rnode(DCMUX, 8, 39, 4) },
  { pnode(GPIO, 8, 39, CLKIN_IN, 3, 1), rnode(DCMUX, 8, 39, 6) },
  { pnode(GPIO, 8, 39, CLKIN_OUT, 3, 0), rnode(DCMUX, 8, 39, 0) },
  { pnode(GPIO, 8, 39, CLKIN_OUT, 3, 1), rnode(DCMUX, 8, 39, 2) },
  { pnode(GPIO, 10, 39, DATAOUT, 0, 0), rnode(GIN, 10, 39, 18) },
  { pnode(GPIO, 10, 39, DATAOUT, 0, 1), rnode(GIN, 10, 39, 17) },
  { pnode(GPIO, 10, 39, DATAOUT, 0, 2), rnode(GIN, 10, 39, 16) },
  { pnode(GPIO, 10, 39, DATAOUT, 0, 3), rnode(GIN, 10, 39, 15) },
  { pnode(GPIO, 10, 39, DATAOUT, 0, 4), rnode(GIN, 10, 39, 14) },
  { pnode(GPIO, 10, 39, OEIN, 0, 0), rnode(GOUT, 10, 39, 38) },
  { pnode(GPIO, 10, 39, OEIN, 0, 1), rnode(GOUT, 10, 39, 30) },
  { pnode(GPIO, 10, 39, BSLIPMAX, 0, -1), rnode(GIN, 10, 39, 19) },
  { pnode(GPIO, 10, 39, CEIN, 0, -1), rnode(GOUT, 10, 39, 27) },
  { pnode(GPIO, 10, 39, CEOUT, 0, -1), rnode(GOUT, 10, 39, 45) },
  { pnode(GPIO, 10, 39, SCLR, 0, -1), rnode(GOUT, 10, 39, 31) },
  { pnode(GPIO, 10, 39, CLKIN_IN, 0, 0), rnode(DCMUX, 10, 39, 10) },
  { pnode(GPIO, 10, 39, CLKIN_IN, 0, 1), rnode(DCMUX, 10, 39, 8) },
  { pnode(GPIO, 10, 39, CLKIN_OUT, 0, 0), rnode(DCMUX, 10, 39, 14) },
  { pnode(GPIO, 10, 39, CLKIN_OUT, 0, 1), rnode(DCMUX, 10, 39, 12) },
  { pnode(GPIO, 10, 39, DATAOUT, 1, 0), rnode(GIN, 10, 39, 24) },
  { pnode(GPIO, 10, 39, DATAOUT, 1, 1), rnode(GIN, 10, 39, 23) },
  { pnode(GPIO, 10, 39, DATAOUT, 1, 2), rnode(GIN, 10, 39, 22) },
  { pnode(GPIO, 10, 39, DATAOUT, 1, 3), rnode(GIN, 10, 39, 21) },
  { pnode(GPIO, 10, 39, DATAOUT, 1, 4), rnode(GIN, 10, 39, 20) },
  { pnode(GPIO, 10, 39, OEIN, 1, 0), rnode(GOUT, 10, 39, 47) },
  { pnode(GPIO, 10, 39, OEIN, 1, 1), rnode(GOUT, 10, 39, 39) },
  { pnode(GPIO, 10, 39, BSLIPMAX, 1, -1), rnode(GIN, 10, 39, 25) },
  { pnode(GPIO, 10, 39, CEIN, 1, -1), rnode(GOUT, 10, 39, 51) },
  { pnode(GPIO, 10, 39, CEOUT, 1, -1), rnode(GOUT, 10, 39, 50) },
  { pnode(GPIO, 10, 39, SCLR, 1, -1), rnode(GOUT, 10, 39, 46) },
  { pnode(GPIO, 10, 39, CLKIN_IN, 1, 0), rnode(DCMUX, 10, 39, 11) },
  { pnode(GPIO, 10, 39, CLKIN_IN, 1, 1), rnode(DCMUX, 10, 39, 9) },
  { pnode(GPIO, 10, 39, CLKIN_OUT, 1, 0), rnode(DCMUX, 10, 39, 15) },
  { pnode(GPIO, 10, 39, CLKIN_OUT, 1, 1), rnode(DCMUX, 10, 39, 13) },
  { pnode(GPIO, 10, 39, DATAOUT, 2, 0), rnode(GIN, 10, 39, 8) },
  { pnode(GPIO, 10, 39, DATAOUT, 2, 1), rnode(GIN, 10, 39, 9) },
  { pnode(GPIO, 10, 39, DATAOUT, 2, 2), rnode(GIN, 10, 39, 10) },
  { pnode(GPIO, 10, 39, DATAOUT, 2, 3), rnode(GIN, 10, 39, 11) },
  { pnode(GPIO, 10, 39, DATAOUT, 2, 4), rnode(GIN, 10, 39, 12) },
  { pnode(GPIO, 10, 39, OEIN, 2, 0), rnode(GOUT, 10, 39, 16) },
  { pnode(GPIO, 10, 39, OEIN, 2, 1), rnode(GOUT, 10, 39, 24) },
  { pnode(GPIO, 10, 39, BSLIPMAX, 2, -1), rnode(GIN, 10, 39, 7) },
  { pnode(GPIO, 10, 39, CEIN, 2, -1), rnode(GOUT, 10, 39, 20) },
  { pnode(GPIO, 10, 39, CEOUT, 2, -1), rnode(GOUT, 10, 39, 13) },
  { pnode(GPIO, 10, 39, SCLR, 2, -1), rnode(GOUT, 10, 39, 25) },
  { pnode(GPIO, 10, 39, CLKIN_IN, 2, 0), rnode(DCMUX, 10, 39, 5) },
  { pnode(GPIO, 10, 39, CLKIN_IN, 2, 1), rnode(DCMUX, 10, 39, 7) },
  { pnode(GPIO, 10, 39, CLKIN_OUT, 2, 0), rnode(DCMUX, 10, 39, 1) },
  { pnode(GPIO, 10, 39, CLKIN_OUT, 2, 1), rnode(DCMUX, 10, 39, 3) },
  { pnode(GPIO, 10, 39, DATAIN, 3, 0), rnode(GOUT, 10, 39, 3) },
  { pnode(GPIO, 10, 39, DATAIN, 3, 1), rnode(GOUT, 10, 39, 17) },
  { pnode(GPIO, 10, 39, DATAIN, 3, 2), rnode(GOUT, 10, 39, 8) },
  { pnode(GPIO, 10, 39, DATAIN, 3, 3), rnode(GOUT, 10, 39, 18) },
  { pnode(GPIO, 10, 39, DATAOUT, 3, 0), rnode(GIN, 10, 39, 2) },
  { pnode(GPIO, 10, 39, DATAOUT, 3, 1), rnode(GIN, 10, 39, 3) },
  { pnode(GPIO, 10, 39, DATAOUT, 3, 2), rnode(GIN, 10, 39, 4) },
  { pnode(GPIO, 10, 39, DATAOUT, 3, 3), rnode(GIN, 10, 39, 5) },
  { pnode(GPIO, 10, 39, DATAOUT, 3, 4), rnode(GIN, 10, 39, 6) },
  { pnode(GPIO, 10, 39, OEIN, 3, 0), rnode(GOUT, 10, 39, 2) },
  { pnode(GPIO, 10, 39, OEIN, 3, 1), rnode(GOUT, 10, 39, 19) },
  { pnode(GPIO, 10, 39, BSLIPMAX, 3, -1), rnode(GIN, 10, 39, 1) },
  { pnode(GPIO, 10, 39, CEIN, 3, -1), rnode(GOUT, 10, 39, 5) },
  { pnode(GPIO, 10, 39, CEOUT, 3, -1), rnode(GOUT, 10, 39, 4) },
  { pnode(GPIO, 10, 39, ACLR, 3, -1), rnode(GOUT, 10, 39, 12) },
  { pnode(GPIO, 10, 39, SCLR, 3, -1), rnode(GOUT, 10, 39, 1) },
  { pnode(GPIO, 10, 39, CLKIN_IN, 3, 0), rnode(DCMUX, 10, 39, 4) },
  { pnode(GPIO, 10, 39, CLKIN_IN, 3, 1), rnode(DCMUX, 10, 39, 6) },
  { pnode(GPIO, 10, 39, CLKIN_OUT, 3, 0), rnode(DCMUX, 10, 39, 0) },
  { pnode(GPIO, 10, 39, CLKIN_OUT, 3, 1), rnode(DCMUX, 10, 39, 2) },
  { pnode(GPIO, 12, 0, DATAIN, 0, 0), rnode(GOUT, 12, 0, 44) },
  { pnode(GPIO, 12, 0, DATAIN, 0, 1), rnode(GOUT, 12, 0, 34) },
  { pnode(GPIO, 12, 0, DATAIN, 0, 2), rnode(GOUT, 12, 0, 43) },
  { pnode(GPIO, 12, 0, DATAIN, 0, 3), rnode(GOUT, 12, 0, 29) },
  { pnode(GPIO, 12, 0, DATAOUT, 0, 0), rnode(GIN, 12, 0, 18) },
  { pnode(GPIO, 12, 0, DATAOUT, 0, 1), rnode(GIN, 12, 0, 17) },
  { pnode(GPIO, 12, 0, DATAOUT, 0, 2), rnode(GIN, 12, 0, 16) },
  { pnode(GPIO, 12, 0, DATAOUT, 0, 3), rnode(GIN, 12, 0, 15) },
  { pnode(GPIO, 12, 0, DATAOUT, 0, 4), rnode(GIN, 12, 0, 14) },
  { pnode(GPIO, 12, 0, OEIN, 0, 0), rnode(GOUT, 12, 0, 38) },
  { pnode(GPIO, 12, 0, OEIN, 0, 1), rnode(GOUT, 12, 0, 30) },
  { pnode(GPIO, 12, 0, BSLIPMAX, 0, -1), rnode(GIN, 12, 0, 19) },
  { pnode(GPIO, 12, 0, CEIN, 0, -1), rnode(GOUT, 12, 0, 27) },
  { pnode(GPIO, 12, 0, CEOUT, 0, -1), rnode(GOUT, 12, 0, 45) },
  { pnode(GPIO, 12, 0, ACLR, 0, -1), rnode(GOUT, 12, 0, 28) },
  { pnode(GPIO, 12, 0, SCLR, 0, -1), rnode(GOUT, 12, 0, 31) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 12, 0, 10) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 12, 0, 8) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 12, 0, 14) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 12, 0, 12) },
  { pnode(GPIO, 12, 0, DATAIN, 1, 0), rnode(GOUT, 12, 0, 49) },
  { pnode(GPIO, 12, 0, DATAIN, 1, 1), rnode(GOUT, 12, 0, 41) },
  { pnode(GPIO, 12, 0, DATAIN, 1, 2), rnode(GOUT, 12, 0, 48) },
  { pnode(GPIO, 12, 0, DATAIN, 1, 3), rnode(GOUT, 12, 0, 40) },
  { pnode(GPIO, 12, 0, DATAOUT, 1, 0), rnode(GIN, 12, 0, 24) },
  { pnode(GPIO, 12, 0, DATAOUT, 1, 1), rnode(GIN, 12, 0, 23) },
  { pnode(GPIO, 12, 0, DATAOUT, 1, 2), rnode(GIN, 12, 0, 22) },
  { pnode(GPIO, 12, 0, DATAOUT, 1, 3), rnode(GIN, 12, 0, 21) },
  { pnode(GPIO, 12, 0, DATAOUT, 1, 4), rnode(GIN, 12, 0, 20) },
  { pnode(GPIO, 12, 0, OEIN, 1, 0), rnode(GOUT, 12, 0, 47) },
  { pnode(GPIO, 12, 0, OEIN, 1, 1), rnode(GOUT, 12, 0, 39) },
  { pnode(GPIO, 12, 0, BSLIPMAX, 1, -1), rnode(GIN, 12, 0, 25) },
  { pnode(GPIO, 12, 0, CEIN, 1, -1), rnode(GOUT, 12, 0, 51) },
  { pnode(GPIO, 12, 0, CEOUT, 1, -1), rnode(GOUT, 12, 0, 50) },
  { pnode(GPIO, 12, 0, ACLR, 1, -1), rnode(GOUT, 12, 0, 42) },
  { pnode(GPIO, 12, 0, SCLR, 1, -1), rnode(GOUT, 12, 0, 46) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 12, 0, 11) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 12, 0, 9) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 12, 0, 15) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 12, 0, 13) },
  { pnode(GPIO, 12, 0, DATAIN, 2, 0), rnode(GOUT, 12, 0, 14) },
  { pnode(GPIO, 12, 0, DATAIN, 2, 1), rnode(GOUT, 12, 0, 22) },
  { pnode(GPIO, 12, 0, DATAIN, 2, 2), rnode(GOUT, 12, 0, 15) },
  { pnode(GPIO, 12, 0, DATAIN, 2, 3), rnode(GOUT, 12, 0, 23) },
  { pnode(GPIO, 12, 0, DATAOUT, 2, 0), rnode(GIN, 12, 0, 8) },
  { pnode(GPIO, 12, 0, DATAOUT, 2, 1), rnode(GIN, 12, 0, 9) },
  { pnode(GPIO, 12, 0, DATAOUT, 2, 2), rnode(GIN, 12, 0, 10) },
  { pnode(GPIO, 12, 0, DATAOUT, 2, 3), rnode(GIN, 12, 0, 11) },
  { pnode(GPIO, 12, 0, DATAOUT, 2, 4), rnode(GIN, 12, 0, 12) },
  { pnode(GPIO, 12, 0, OEIN, 2, 0), rnode(GOUT, 12, 0, 16) },
  { pnode(GPIO, 12, 0, OEIN, 2, 1), rnode(GOUT, 12, 0, 24) },
  { pnode(GPIO, 12, 0, BSLIPMAX, 2, -1), rnode(GIN, 12, 0, 7) },
  { pnode(GPIO, 12, 0, CEIN, 2, -1), rnode(GOUT, 12, 0, 20) },
  { pnode(GPIO, 12, 0, CEOUT, 2, -1), rnode(GOUT, 12, 0, 13) },
  { pnode(GPIO, 12, 0, ACLR, 2, -1), rnode(GOUT, 12, 0, 21) },
  { pnode(GPIO, 12, 0, SCLR, 2, -1), rnode(GOUT, 12, 0, 25) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 12, 0, 5) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 12, 0, 7) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 12, 0, 1) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 12, 0, 3) },
  { pnode(GPIO, 12, 0, DATAIN, 3, 0), rnode(GOUT, 12, 0, 3) },
  { pnode(GPIO, 12, 0, DATAIN, 3, 1), rnode(GOUT, 12, 0, 17) },
  { pnode(GPIO, 12, 0, DATAIN, 3, 2), rnode(GOUT, 12, 0, 8) },
  { pnode(GPIO, 12, 0, DATAIN, 3, 3), rnode(GOUT, 12, 0, 18) },
  { pnode(GPIO, 12, 0, DATAOUT, 3, 0), rnode(GIN, 12, 0, 2) },
  { pnode(GPIO, 12, 0, DATAOUT, 3, 1), rnode(GIN, 12, 0, 3) },
  { pnode(GPIO, 12, 0, DATAOUT, 3, 2), rnode(GIN, 12, 0, 4) },
  { pnode(GPIO, 12, 0, DATAOUT, 3, 3), rnode(GIN, 12, 0, 5) },
  { pnode(GPIO, 12, 0, DATAOUT, 3, 4), rnode(GIN, 12, 0, 6) },
  { pnode(GPIO, 12, 0, OEIN, 3, 0), rnode(GOUT, 12, 0, 2) },
  { pnode(GPIO, 12, 0, OEIN, 3, 1), rnode(GOUT, 12, 0, 19) },
  { pnode(GPIO, 12, 0, BSLIPMAX, 3, -1), rnode(GIN, 12, 0, 1) },
  { pnode(GPIO, 12, 0, CEIN, 3, -1), rnode(GOUT, 12, 0, 5) },
  { pnode(GPIO, 12, 0, CEOUT, 3, -1), rnode(GOUT, 12, 0, 4) },
  { pnode(GPIO, 12, 0, ACLR, 3, -1), rnode(GOUT, 12, 0, 12) },
  { pnode(GPIO, 12, 0, SCLR, 3, -1), rnode(GOUT, 12, 0, 1) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 12, 0, 4) },
  { pnode(GPIO, 12, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 12, 0, 6) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 12, 0, 0) },
  { pnode(GPIO, 12, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 12, 0, 2) },
  { pnode(GPIO, 12, 39, DATAOUT, 0, 0), rnode(GIN, 12, 39, 18) },
  { pnode(GPIO, 12, 39, DATAOUT, 0, 1), rnode(GIN, 12, 39, 17) },
  { pnode(GPIO, 12, 39, DATAOUT, 0, 2), rnode(GIN, 12, 39, 16) },
  { pnode(GPIO, 12, 39, DATAOUT, 0, 3), rnode(GIN, 12, 39, 15) },
  { pnode(GPIO, 12, 39, DATAOUT, 0, 4), rnode(GIN, 12, 39, 14) },
  { pnode(GPIO, 12, 39, OEIN, 0, 0), rnode(GOUT, 12, 39, 38) },
  { pnode(GPIO, 12, 39, OEIN, 0, 1), rnode(GOUT, 12, 39, 30) },
  { pnode(GPIO, 12, 39, BSLIPMAX, 0, -1), rnode(GIN, 12, 39, 19) },
  { pnode(GPIO, 12, 39, CEIN, 0, -1), rnode(GOUT, 12, 39, 27) },
  { pnode(GPIO, 12, 39, CEOUT, 0, -1), rnode(GOUT, 12, 39, 45) },
  { pnode(GPIO, 12, 39, ACLR, 0, -1), rnode(GOUT, 12, 39, 28) },
  { pnode(GPIO, 12, 39, SCLR, 0, -1), rnode(GOUT, 12, 39, 31) },
  { pnode(GPIO, 12, 39, CLKIN_IN, 0, 0), rnode(DCMUX, 12, 39, 10) },
  { pnode(GPIO, 12, 39, CLKIN_IN, 0, 1), rnode(DCMUX, 12, 39, 8) },
  { pnode(GPIO, 12, 39, CLKIN_OUT, 0, 0), rnode(DCMUX, 12, 39, 14) },
  { pnode(GPIO, 12, 39, CLKIN_OUT, 0, 1), rnode(DCMUX, 12, 39, 12) },
  { pnode(GPIO, 12, 39, DATAOUT, 1, 0), rnode(GIN, 12, 39, 24) },
  { pnode(GPIO, 12, 39, DATAOUT, 1, 1), rnode(GIN, 12, 39, 23) },
  { pnode(GPIO, 12, 39, DATAOUT, 1, 2), rnode(GIN, 12, 39, 22) },
  { pnode(GPIO, 12, 39, DATAOUT, 1, 3), rnode(GIN, 12, 39, 21) },
  { pnode(GPIO, 12, 39, DATAOUT, 1, 4), rnode(GIN, 12, 39, 20) },
  { pnode(GPIO, 12, 39, OEIN, 1, 0), rnode(GOUT, 12, 39, 47) },
  { pnode(GPIO, 12, 39, OEIN, 1, 1), rnode(GOUT, 12, 39, 39) },
  { pnode(GPIO, 12, 39, BSLIPMAX, 1, -1), rnode(GIN, 12, 39, 25) },
  { pnode(GPIO, 12, 39, CEIN, 1, -1), rnode(GOUT, 12, 39, 51) },
  { pnode(GPIO, 12, 39, CEOUT, 1, -1), rnode(GOUT, 12, 39, 50) },
  { pnode(GPIO, 12, 39, ACLR, 1, -1), rnode(GOUT, 12, 39, 42) },
  { pnode(GPIO, 12, 39, SCLR, 1, -1), rnode(GOUT, 12, 39, 46) },
  { pnode(GPIO, 12, 39, CLKIN_IN, 1, 0), rnode(DCMUX, 12, 39, 11) },
  { pnode(GPIO, 12, 39, CLKIN_IN, 1, 1), rnode(DCMUX, 12, 39, 9) },
  { pnode(GPIO, 12, 39, CLKIN_OUT, 1, 0), rnode(DCMUX, 12, 39, 15) },
  { pnode(GPIO, 12, 39, CLKIN_OUT, 1, 1), rnode(DCMUX, 12, 39, 13) },
  { pnode(GPIO, 12, 39, DATAOUT, 2, 0), rnode(GIN, 12, 39, 8) },
  { pnode(GPIO, 12, 39, DATAOUT, 2, 1), rnode(GIN, 12, 39, 9) },
  { pnode(GPIO, 12, 39, DATAOUT, 2, 2), rnode(GIN, 12, 39, 10) },
  { pnode(GPIO, 12, 39, DATAOUT, 2, 3), rnode(GIN, 12, 39, 11) },
  { pnode(GPIO, 12, 39, DATAOUT, 2, 4), rnode(GIN, 12, 39, 12) },
  { pnode(GPIO, 12, 39, OEIN, 2, 0), rnode(GOUT, 12, 39, 16) },
  { pnode(GPIO, 12, 39, OEIN, 2, 1), rnode(GOUT, 12, 39, 24) },
  { pnode(GPIO, 12, 39, BSLIPMAX, 2, -1), rnode(GIN, 12, 39, 7) },
  { pnode(GPIO, 12, 39, CEIN, 2, -1), rnode(GOUT, 12, 39, 20) },
  { pnode(GPIO, 12, 39, CEOUT, 2, -1), rnode(GOUT, 12, 39, 13) },
  { pnode(GPIO, 12, 39, SCLR, 2, -1), rnode(GOUT, 12, 39, 25) },
  { pnode(GPIO, 12, 39, CLKIN_IN, 2, 0), rnode(DCMUX, 12, 39, 5) },
  { pnode(GPIO, 12, 39, CLKIN_IN, 2, 1), rnode(DCMUX, 12, 39, 7) },
  { pnode(GPIO, 12, 39, CLKIN_OUT, 2, 0), rnode(DCMUX, 12, 39, 1) },
  { pnode(GPIO, 12, 39, CLKIN_OUT, 2, 1), rnode(DCMUX, 12, 39, 3) },
  { pnode(GPIO, 12, 39, DATAOUT, 3, 0), rnode(GIN, 12, 39, 2) },
  { pnode(GPIO, 12, 39, DATAOUT, 3, 1), rnode(GIN, 12, 39, 3) },
  { pnode(GPIO, 12, 39, DATAOUT, 3, 2), rnode(GIN, 12, 39, 4) },
  { pnode(GPIO, 12, 39, DATAOUT, 3, 3), rnode(GIN, 12, 39, 5) },
  { pnode(GPIO, 12, 39, DATAOUT, 3, 4), rnode(GIN, 12, 39, 6) },
  { pnode(GPIO, 12, 39, OEIN, 3, 0), rnode(GOUT, 12, 39, 2) },
  { pnode(GPIO, 12, 39, OEIN, 3, 1), rnode(GOUT, 12, 39, 19) },
  { pnode(GPIO, 12, 39, BSLIPMAX, 3, -1), rnode(GIN, 12, 39, 1) },
  { pnode(GPIO, 12, 39, CEIN, 3, -1), rnode(GOUT, 12, 39, 5) },
  { pnode(GPIO, 12, 39, CEOUT, 3, -1), rnode(GOUT, 12, 39, 4) },
  { pnode(GPIO, 12, 39, SCLR, 3, -1), rnode(GOUT, 12, 39, 1) },
  { pnode(GPIO, 12, 39, CLKIN_IN, 3, 0), rnode(DCMUX, 12, 39, 4) },
  { pnode(GPIO, 12, 39, CLKIN_IN, 3, 1), rnode(DCMUX, 12, 39, 6) },
  { pnode(GPIO, 12, 39, CLKIN_OUT, 3, 0), rnode(DCMUX, 12, 39, 0) },
  { pnode(GPIO, 12, 39, CLKIN_OUT, 3, 1), rnode(DCMUX, 12, 39, 2) },
  { pnode(GPIO, 13, 0, DATAIN, 0, 0), rnode(GOUT, 13, 0, 44) },
  { pnode(GPIO, 13, 0, DATAIN, 0, 1), rnode(GOUT, 13, 0, 34) },
  { pnode(GPIO, 13, 0, DATAIN, 0, 2), rnode(GOUT, 13, 0, 43) },
  { pnode(GPIO, 13, 0, DATAIN, 0, 3), rnode(GOUT, 13, 0, 29) },
  { pnode(GPIO, 13, 0, DATAOUT, 0, 0), rnode(GIN, 13, 0, 18) },
  { pnode(GPIO, 13, 0, DATAOUT, 0, 1), rnode(GIN, 13, 0, 17) },
  { pnode(GPIO, 13, 0, DATAOUT, 0, 2), rnode(GIN, 13, 0, 16) },
  { pnode(GPIO, 13, 0, DATAOUT, 0, 3), rnode(GIN, 13, 0, 15) },
  { pnode(GPIO, 13, 0, DATAOUT, 0, 4), rnode(GIN, 13, 0, 14) },
  { pnode(GPIO, 13, 0, OEIN, 0, 0), rnode(GOUT, 13, 0, 38) },
  { pnode(GPIO, 13, 0, OEIN, 0, 1), rnode(GOUT, 13, 0, 30) },
  { pnode(GPIO, 13, 0, BSLIPMAX, 0, -1), rnode(GIN, 13, 0, 19) },
  { pnode(GPIO, 13, 0, CEIN, 0, -1), rnode(GOUT, 13, 0, 27) },
  { pnode(GPIO, 13, 0, CEOUT, 0, -1), rnode(GOUT, 13, 0, 45) },
  { pnode(GPIO, 13, 0, ACLR, 0, -1), rnode(GOUT, 13, 0, 28) },
  { pnode(GPIO, 13, 0, SCLR, 0, -1), rnode(GOUT, 13, 0, 31) },
  { pnode(GPIO, 13, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 13, 0, 10) },
  { pnode(GPIO, 13, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 13, 0, 8) },
  { pnode(GPIO, 13, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 13, 0, 14) },
  { pnode(GPIO, 13, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 13, 0, 12) },
  { pnode(GPIO, 13, 0, DATAIN, 1, 0), rnode(GOUT, 13, 0, 49) },
  { pnode(GPIO, 13, 0, DATAIN, 1, 1), rnode(GOUT, 13, 0, 41) },
  { pnode(GPIO, 13, 0, DATAIN, 1, 2), rnode(GOUT, 13, 0, 48) },
  { pnode(GPIO, 13, 0, DATAIN, 1, 3), rnode(GOUT, 13, 0, 40) },
  { pnode(GPIO, 13, 0, DATAOUT, 1, 0), rnode(GIN, 13, 0, 24) },
  { pnode(GPIO, 13, 0, DATAOUT, 1, 1), rnode(GIN, 13, 0, 23) },
  { pnode(GPIO, 13, 0, DATAOUT, 1, 2), rnode(GIN, 13, 0, 22) },
  { pnode(GPIO, 13, 0, DATAOUT, 1, 3), rnode(GIN, 13, 0, 21) },
  { pnode(GPIO, 13, 0, DATAOUT, 1, 4), rnode(GIN, 13, 0, 20) },
  { pnode(GPIO, 13, 0, OEIN, 1, 0), rnode(GOUT, 13, 0, 47) },
  { pnode(GPIO, 13, 0, OEIN, 1, 1), rnode(GOUT, 13, 0, 39) },
  { pnode(GPIO, 13, 0, BSLIPMAX, 1, -1), rnode(GIN, 13, 0, 25) },
  { pnode(GPIO, 13, 0, CEIN, 1, -1), rnode(GOUT, 13, 0, 51) },
  { pnode(GPIO, 13, 0, CEOUT, 1, -1), rnode(GOUT, 13, 0, 50) },
  { pnode(GPIO, 13, 0, ACLR, 1, -1), rnode(GOUT, 13, 0, 42) },
  { pnode(GPIO, 13, 0, SCLR, 1, -1), rnode(GOUT, 13, 0, 46) },
  { pnode(GPIO, 13, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 13, 0, 11) },
  { pnode(GPIO, 13, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 13, 0, 9) },
  { pnode(GPIO, 13, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 13, 0, 15) },
  { pnode(GPIO, 13, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 13, 0, 13) },
  { pnode(GPIO, 13, 0, DATAIN, 2, 0), rnode(GOUT, 13, 0, 14) },
  { pnode(GPIO, 13, 0, DATAIN, 2, 1), rnode(GOUT, 13, 0, 22) },
  { pnode(GPIO, 13, 0, DATAIN, 2, 2), rnode(GOUT, 13, 0, 15) },
  { pnode(GPIO, 13, 0, DATAIN, 2, 3), rnode(GOUT, 13, 0, 23) },
  { pnode(GPIO, 13, 0, DATAOUT, 2, 0), rnode(GIN, 13, 0, 8) },
  { pnode(GPIO, 13, 0, DATAOUT, 2, 1), rnode(GIN, 13, 0, 9) },
  { pnode(GPIO, 13, 0, DATAOUT, 2, 2), rnode(GIN, 13, 0, 10) },
  { pnode(GPIO, 13, 0, DATAOUT, 2, 3), rnode(GIN, 13, 0, 11) },
  { pnode(GPIO, 13, 0, DATAOUT, 2, 4), rnode(GIN, 13, 0, 12) },
  { pnode(GPIO, 13, 0, OEIN, 2, 0), rnode(GOUT, 13, 0, 16) },
  { pnode(GPIO, 13, 0, OEIN, 2, 1), rnode(GOUT, 13, 0, 24) },
  { pnode(GPIO, 13, 0, BSLIPMAX, 2, -1), rnode(GIN, 13, 0, 7) },
  { pnode(GPIO, 13, 0, CEIN, 2, -1), rnode(GOUT, 13, 0, 20) },
  { pnode(GPIO, 13, 0, CEOUT, 2, -1), rnode(GOUT, 13, 0, 13) },
  { pnode(GPIO, 13, 0, ACLR, 2, -1), rnode(GOUT, 13, 0, 21) },
  { pnode(GPIO, 13, 0, SCLR, 2, -1), rnode(GOUT, 13, 0, 25) },
  { pnode(GPIO, 13, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 13, 0, 5) },
  { pnode(GPIO, 13, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 13, 0, 7) },
  { pnode(GPIO, 13, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 13, 0, 1) },
  { pnode(GPIO, 13, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 13, 0, 3) },
  { pnode(GPIO, 13, 0, DATAIN, 3, 0), rnode(GOUT, 13, 0, 3) },
  { pnode(GPIO, 13, 0, DATAIN, 3, 1), rnode(GOUT, 13, 0, 17) },
  { pnode(GPIO, 13, 0, DATAIN, 3, 2), rnode(GOUT, 13, 0, 8) },
  { pnode(GPIO, 13, 0, DATAIN, 3, 3), rnode(GOUT, 13, 0, 18) },
  { pnode(GPIO, 13, 0, DATAOUT, 3, 0), rnode(GIN, 13, 0, 2) },
  { pnode(GPIO, 13, 0, DATAOUT, 3, 1), rnode(GIN, 13, 0, 3) },
  { pnode(GPIO, 13, 0, DATAOUT, 3, 2), rnode(GIN, 13, 0, 4) },
  { pnode(GPIO, 13, 0, DATAOUT, 3, 3), rnode(GIN, 13, 0, 5) },
  { pnode(GPIO, 13, 0, DATAOUT, 3, 4), rnode(GIN, 13, 0, 6) },
  { pnode(GPIO, 13, 0, OEIN, 3, 0), rnode(GOUT, 13, 0, 2) },
  { pnode(GPIO, 13, 0, OEIN, 3, 1), rnode(GOUT, 13, 0, 19) },
  { pnode(GPIO, 13, 0, BSLIPMAX, 3, -1), rnode(GIN, 13, 0, 1) },
  { pnode(GPIO, 13, 0, CEIN, 3, -1), rnode(GOUT, 13, 0, 5) },
  { pnode(GPIO, 13, 0, CEOUT, 3, -1), rnode(GOUT, 13, 0, 4) },
  { pnode(GPIO, 13, 0, ACLR, 3, -1), rnode(GOUT, 13, 0, 12) },
  { pnode(GPIO, 13, 0, SCLR, 3, -1), rnode(GOUT, 13, 0, 1) },
  { pnode(GPIO, 13, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 13, 0, 4) },
  { pnode(GPIO, 13, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 13, 0, 6) },
  { pnode(GPIO, 13, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 13, 0, 0) },
  { pnode(GPIO, 13, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 13, 0, 2) },
  { pnode(GPIO, 14, 0, DATAIN, 0, 0), rnode(GOUT, 14, 0, 44) },
  { pnode(GPIO, 14, 0, DATAIN, 0, 1), rnode(GOUT, 14, 0, 34) },
  { pnode(GPIO, 14, 0, DATAIN, 0, 2), rnode(GOUT, 14, 0, 43) },
  { pnode(GPIO, 14, 0, DATAIN, 0, 3), rnode(GOUT, 14, 0, 29) },
  { pnode(GPIO, 14, 0, DATAOUT, 0, 0), rnode(GIN, 14, 0, 18) },
  { pnode(GPIO, 14, 0, DATAOUT, 0, 1), rnode(GIN, 14, 0, 17) },
  { pnode(GPIO, 14, 0, DATAOUT, 0, 2), rnode(GIN, 14, 0, 16) },
  { pnode(GPIO, 14, 0, DATAOUT, 0, 3), rnode(GIN, 14, 0, 15) },
  { pnode(GPIO, 14, 0, DATAOUT, 0, 4), rnode(GIN, 14, 0, 14) },
  { pnode(GPIO, 14, 0, OEIN, 0, 0), rnode(GOUT, 14, 0, 38) },
  { pnode(GPIO, 14, 0, OEIN, 0, 1), rnode(GOUT, 14, 0, 30) },
  { pnode(GPIO, 14, 0, BSLIPMAX, 0, -1), rnode(GIN, 14, 0, 19) },
  { pnode(GPIO, 14, 0, CEIN, 0, -1), rnode(GOUT, 14, 0, 27) },
  { pnode(GPIO, 14, 0, CEOUT, 0, -1), rnode(GOUT, 14, 0, 45) },
  { pnode(GPIO, 14, 0, ACLR, 0, -1), rnode(GOUT, 14, 0, 28) },
  { pnode(GPIO, 14, 0, SCLR, 0, -1), rnode(GOUT, 14, 0, 31) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 14, 0, 10) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 14, 0, 8) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 14, 0, 14) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 14, 0, 12) },
  { pnode(GPIO, 14, 0, DATAIN, 1, 0), rnode(GOUT, 14, 0, 49) },
  { pnode(GPIO, 14, 0, DATAIN, 1, 1), rnode(GOUT, 14, 0, 41) },
  { pnode(GPIO, 14, 0, DATAIN, 1, 2), rnode(GOUT, 14, 0, 48) },
  { pnode(GPIO, 14, 0, DATAIN, 1, 3), rnode(GOUT, 14, 0, 40) },
  { pnode(GPIO, 14, 0, DATAOUT, 1, 0), rnode(GIN, 14, 0, 24) },
  { pnode(GPIO, 14, 0, DATAOUT, 1, 1), rnode(GIN, 14, 0, 23) },
  { pnode(GPIO, 14, 0, DATAOUT, 1, 2), rnode(GIN, 14, 0, 22) },
  { pnode(GPIO, 14, 0, DATAOUT, 1, 3), rnode(GIN, 14, 0, 21) },
  { pnode(GPIO, 14, 0, DATAOUT, 1, 4), rnode(GIN, 14, 0, 20) },
  { pnode(GPIO, 14, 0, OEIN, 1, 0), rnode(GOUT, 14, 0, 47) },
  { pnode(GPIO, 14, 0, OEIN, 1, 1), rnode(GOUT, 14, 0, 39) },
  { pnode(GPIO, 14, 0, BSLIPMAX, 1, -1), rnode(GIN, 14, 0, 25) },
  { pnode(GPIO, 14, 0, CEIN, 1, -1), rnode(GOUT, 14, 0, 51) },
  { pnode(GPIO, 14, 0, CEOUT, 1, -1), rnode(GOUT, 14, 0, 50) },
  { pnode(GPIO, 14, 0, ACLR, 1, -1), rnode(GOUT, 14, 0, 42) },
  { pnode(GPIO, 14, 0, SCLR, 1, -1), rnode(GOUT, 14, 0, 46) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 14, 0, 11) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 14, 0, 9) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 14, 0, 15) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 14, 0, 13) },
  { pnode(GPIO, 14, 0, DATAIN, 2, 0), rnode(GOUT, 14, 0, 14) },
  { pnode(GPIO, 14, 0, DATAIN, 2, 1), rnode(GOUT, 14, 0, 22) },
  { pnode(GPIO, 14, 0, DATAIN, 2, 2), rnode(GOUT, 14, 0, 15) },
  { pnode(GPIO, 14, 0, DATAIN, 2, 3), rnode(GOUT, 14, 0, 23) },
  { pnode(GPIO, 14, 0, DATAOUT, 2, 0), rnode(GIN, 14, 0, 8) },
  { pnode(GPIO, 14, 0, DATAOUT, 2, 1), rnode(GIN, 14, 0, 9) },
  { pnode(GPIO, 14, 0, DATAOUT, 2, 2), rnode(GIN, 14, 0, 10) },
  { pnode(GPIO, 14, 0, DATAOUT, 2, 3), rnode(GIN, 14, 0, 11) },
  { pnode(GPIO, 14, 0, DATAOUT, 2, 4), rnode(GIN, 14, 0, 12) },
  { pnode(GPIO, 14, 0, OEIN, 2, 0), rnode(GOUT, 14, 0, 16) },
  { pnode(GPIO, 14, 0, OEIN, 2, 1), rnode(GOUT, 14, 0, 24) },
  { pnode(GPIO, 14, 0, BSLIPMAX, 2, -1), rnode(GIN, 14, 0, 7) },
  { pnode(GPIO, 14, 0, CEIN, 2, -1), rnode(GOUT, 14, 0, 20) },
  { pnode(GPIO, 14, 0, CEOUT, 2, -1), rnode(GOUT, 14, 0, 13) },
  { pnode(GPIO, 14, 0, ACLR, 2, -1), rnode(GOUT, 14, 0, 21) },
  { pnode(GPIO, 14, 0, SCLR, 2, -1), rnode(GOUT, 14, 0, 25) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 14, 0, 5) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 14, 0, 7) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 14, 0, 1) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 14, 0, 3) },
  { pnode(GPIO, 14, 0, DATAIN, 3, 0), rnode(GOUT, 14, 0, 3) },
  { pnode(GPIO, 14, 0, DATAIN, 3, 1), rnode(GOUT, 14, 0, 17) },
  { pnode(GPIO, 14, 0, DATAIN, 3, 2), rnode(GOUT, 14, 0, 8) },
  { pnode(GPIO, 14, 0, DATAIN, 3, 3), rnode(GOUT, 14, 0, 18) },
  { pnode(GPIO, 14, 0, DATAOUT, 3, 0), rnode(GIN, 14, 0, 2) },
  { pnode(GPIO, 14, 0, DATAOUT, 3, 1), rnode(GIN, 14, 0, 3) },
  { pnode(GPIO, 14, 0, DATAOUT, 3, 2), rnode(GIN, 14, 0, 4) },
  { pnode(GPIO, 14, 0, DATAOUT, 3, 3), rnode(GIN, 14, 0, 5) },
  { pnode(GPIO, 14, 0, DATAOUT, 3, 4), rnode(GIN, 14, 0, 6) },
  { pnode(GPIO, 14, 0, OEIN, 3, 0), rnode(GOUT, 14, 0, 2) },
  { pnode(GPIO, 14, 0, OEIN, 3, 1), rnode(GOUT, 14, 0, 19) },
  { pnode(GPIO, 14, 0, BSLIPMAX, 3, -1), rnode(GIN, 14, 0, 1) },
  { pnode(GPIO, 14, 0, CEIN, 3, -1), rnode(GOUT, 14, 0, 5) },
  { pnode(GPIO, 14, 0, CEOUT, 3, -1), rnode(GOUT, 14, 0, 4) },
  { pnode(GPIO, 14, 0, ACLR, 3, -1), rnode(GOUT, 14, 0, 12) },
  { pnode(GPIO, 14, 0, SCLR, 3, -1), rnode(GOUT, 14, 0, 1) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 14, 0, 4) },
  { pnode(GPIO, 14, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 14, 0, 6) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 14, 0, 0) },
  { pnode(GPIO, 14, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 14, 0, 2) },
  { pnode(GPIO, 14, 39, DATAOUT, 0, 0), rnode(GIN, 14, 39, 18) },
  { pnode(GPIO, 14, 39, DATAOUT, 0, 1), rnode(GIN, 14, 39, 17) },
  { pnode(GPIO, 14, 39, DATAOUT, 0, 2), rnode(GIN, 14, 39, 16) },
  { pnode(GPIO, 14, 39, DATAOUT, 0, 3), rnode(GIN, 14, 39, 15) },
  { pnode(GPIO, 14, 39, DATAOUT, 0, 4), rnode(GIN, 14, 39, 14) },
  { pnode(GPIO, 14, 39, OEIN, 0, 0), rnode(GOUT, 14, 39, 38) },
  { pnode(GPIO, 14, 39, OEIN, 0, 1), rnode(GOUT, 14, 39, 30) },
  { pnode(GPIO, 14, 39, BSLIPMAX, 0, -1), rnode(GIN, 14, 39, 19) },
  { pnode(GPIO, 14, 39, CEIN, 0, -1), rnode(GOUT, 14, 39, 27) },
  { pnode(GPIO, 14, 39, CEOUT, 0, -1), rnode(GOUT, 14, 39, 45) },
  { pnode(GPIO, 14, 39, SCLR, 0, -1), rnode(GOUT, 14, 39, 31) },
  { pnode(GPIO, 14, 39, CLKIN_IN, 0, 0), rnode(DCMUX, 14, 39, 10) },
  { pnode(GPIO, 14, 39, CLKIN_IN, 0, 1), rnode(DCMUX, 14, 39, 8) },
  { pnode(GPIO, 14, 39, CLKIN_OUT, 0, 0), rnode(DCMUX, 14, 39, 14) },
  { pnode(GPIO, 14, 39, CLKIN_OUT, 0, 1), rnode(DCMUX, 14, 39, 12) },
  { pnode(GPIO, 14, 39, DATAOUT, 1, 0), rnode(GIN, 14, 39, 24) },
  { pnode(GPIO, 14, 39, DATAOUT, 1, 1), rnode(GIN, 14, 39, 23) },
  { pnode(GPIO, 14, 39, DATAOUT, 1, 2), rnode(GIN, 14, 39, 22) },
  { pnode(GPIO, 14, 39, DATAOUT, 1, 3), rnode(GIN, 14, 39, 21) },
  { pnode(GPIO, 14, 39, DATAOUT, 1, 4), rnode(GIN, 14, 39, 20) },
  { pnode(GPIO, 14, 39, OEIN, 1, 0), rnode(GOUT, 14, 39, 47) },
  { pnode(GPIO, 14, 39, OEIN, 1, 1), rnode(GOUT, 14, 39, 39) },
  { pnode(GPIO, 14, 39, BSLIPMAX, 1, -1), rnode(GIN, 14, 39, 25) },
  { pnode(GPIO, 14, 39, CEIN, 1, -1), rnode(GOUT, 14, 39, 51) },
  { pnode(GPIO, 14, 39, CEOUT, 1, -1), rnode(GOUT, 14, 39, 50) },
  { pnode(GPIO, 14, 39, SCLR, 1, -1), rnode(GOUT, 14, 39, 46) },
  { pnode(GPIO, 14, 39, CLKIN_IN, 1, 0), rnode(DCMUX, 14, 39, 11) },
  { pnode(GPIO, 14, 39, CLKIN_IN, 1, 1), rnode(DCMUX, 14, 39, 9) },
  { pnode(GPIO, 14, 39, CLKIN_OUT, 1, 0), rnode(DCMUX, 14, 39, 15) },
  { pnode(GPIO, 14, 39, CLKIN_OUT, 1, 1), rnode(DCMUX, 14, 39, 13) },
  { pnode(GPIO, 14, 39, DATAOUT, 2, 0), rnode(GIN, 14, 39, 8) },
  { pnode(GPIO, 14, 39, DATAOUT, 2, 1), rnode(GIN, 14, 39, 9) },
  { pnode(GPIO, 14, 39, DATAOUT, 2, 2), rnode(GIN, 14, 39, 10) },
  { pnode(GPIO, 14, 39, DATAOUT, 2, 3), rnode(GIN, 14, 39, 11) },
  { pnode(GPIO, 14, 39, DATAOUT, 2, 4), rnode(GIN, 14, 39, 12) },
  { pnode(GPIO, 14, 39, OEIN, 2, 0), rnode(GOUT, 14, 39, 16) },
  { pnode(GPIO, 14, 39, OEIN, 2, 1), rnode(GOUT, 14, 39, 24) },
  { pnode(GPIO, 14, 39, BSLIPMAX, 2, -1), rnode(GIN, 14, 39, 7) },
  { pnode(GPIO, 14, 39, CEIN, 2, -1), rnode(GOUT, 14, 39, 20) },
  { pnode(GPIO, 14, 39, CEOUT, 2, -1), rnode(GOUT, 14, 39, 13) },
  { pnode(GPIO, 14, 39, SCLR, 2, -1), rnode(GOUT, 14, 39, 25) },
  { pnode(GPIO, 14, 39, CLKIN_IN, 2, 0), rnode(DCMUX, 14, 39, 5) },
  { pnode(GPIO, 14, 39, CLKIN_IN, 2, 1), rnode(DCMUX, 14, 39, 7) },
  { pnode(GPIO, 14, 39, CLKIN_OUT, 2, 0), rnode(DCMUX, 14, 39, 1) },
  { pnode(GPIO, 14, 39, CLKIN_OUT, 2, 1), rnode(DCMUX, 14, 39, 3) },
  { pnode(GPIO, 14, 39, DATAOUT, 3, 0), rnode(GIN, 14, 39, 2) },
  { pnode(GPIO, 14, 39, DATAOUT, 3, 1), rnode(GIN, 14, 39, 3) },
  { pnode(GPIO, 14, 39, DATAOUT, 3, 2), rnode(GIN, 14, 39, 4) },
  { pnode(GPIO, 14, 39, DATAOUT, 3, 3), rnode(GIN, 14, 39, 5) },
  { pnode(GPIO, 14, 39, DATAOUT, 3, 4), rnode(GIN, 14, 39, 6) },
  { pnode(GPIO, 14, 39, OEIN, 3, 0), rnode(GOUT, 14, 39, 2) },
  { pnode(GPIO, 14, 39, OEIN, 3, 1), rnode(GOUT, 14, 39, 19) },
  { pnode(GPIO, 14, 39, BSLIPMAX, 3, -1), rnode(GIN, 14, 39, 1) },
  { pnode(GPIO, 14, 39, CEIN, 3, -1), rnode(GOUT, 14, 39, 5) },
  { pnode(GPIO, 14, 39, CEOUT, 3, -1), rnode(GOUT, 14, 39, 4) },
  { pnode(GPIO, 14, 39, SCLR, 3, -1), rnode(GOUT, 14, 39, 1) },
  { pnode(GPIO, 14, 39, CLKIN_IN, 3, 0), rnode(DCMUX, 14, 39, 4) },
  { pnode(GPIO, 14, 39, CLKIN_IN, 3, 1), rnode(DCMUX, 14, 39, 6) },
  { pnode(GPIO, 14, 39, CLKIN_OUT, 3, 0), rnode(DCMUX, 14, 39, 0) },
  { pnode(GPIO, 14, 39, CLKIN_OUT, 3, 1), rnode(DCMUX, 14, 39, 2) },
  { pnode(GPIO, 16, 0, DATAIN, 0, 0), rnode(GOUT, 16, 0, 44) },
  { pnode(GPIO, 16, 0, DATAIN, 0, 1), rnode(GOUT, 16, 0, 34) },
  { pnode(GPIO, 16, 0, DATAIN, 0, 2), rnode(GOUT, 16, 0, 43) },
  { pnode(GPIO, 16, 0, DATAIN, 0, 3), rnode(GOUT, 16, 0, 29) },
  { pnode(GPIO, 16, 0, DATAOUT, 0, 0), rnode(GIN, 16, 0, 18) },
  { pnode(GPIO, 16, 0, DATAOUT, 0, 1), rnode(GIN, 16, 0, 17) },
  { pnode(GPIO, 16, 0, DATAOUT, 0, 2), rnode(GIN, 16, 0, 16) },
  { pnode(GPIO, 16, 0, DATAOUT, 0, 3), rnode(GIN, 16, 0, 15) },
  { pnode(GPIO, 16, 0, DATAOUT, 0, 4), rnode(GIN, 16, 0, 14) },
  { pnode(GPIO, 16, 0, OEIN, 0, 0), rnode(GOUT, 16, 0, 38) },
  { pnode(GPIO, 16, 0, OEIN, 0, 1), rnode(GOUT, 16, 0, 30) },
  { pnode(GPIO, 16, 0, BSLIPMAX, 0, -1), rnode(GIN, 16, 0, 19) },
  { pnode(GPIO, 16, 0, CEIN, 0, -1), rnode(GOUT, 16, 0, 27) },
  { pnode(GPIO, 16, 0, CEOUT, 0, -1), rnode(GOUT, 16, 0, 45) },
  { pnode(GPIO, 16, 0, ACLR, 0, -1), rnode(GOUT, 16, 0, 28) },
  { pnode(GPIO, 16, 0, SCLR, 0, -1), rnode(GOUT, 16, 0, 31) },
  { pnode(GPIO, 16, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 16, 0, 10) },
  { pnode(GPIO, 16, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 16, 0, 8) },
  { pnode(GPIO, 16, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 16, 0, 14) },
  { pnode(GPIO, 16, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 16, 0, 12) },
  { pnode(GPIO, 16, 0, DATAIN, 1, 0), rnode(GOUT, 16, 0, 49) },
  { pnode(GPIO, 16, 0, DATAIN, 1, 1), rnode(GOUT, 16, 0, 41) },
  { pnode(GPIO, 16, 0, DATAIN, 1, 2), rnode(GOUT, 16, 0, 48) },
  { pnode(GPIO, 16, 0, DATAIN, 1, 3), rnode(GOUT, 16, 0, 40) },
  { pnode(GPIO, 16, 0, DATAOUT, 1, 0), rnode(GIN, 16, 0, 24) },
  { pnode(GPIO, 16, 0, DATAOUT, 1, 1), rnode(GIN, 16, 0, 23) },
  { pnode(GPIO, 16, 0, DATAOUT, 1, 2), rnode(GIN, 16, 0, 22) },
  { pnode(GPIO, 16, 0, DATAOUT, 1, 3), rnode(GIN, 16, 0, 21) },
  { pnode(GPIO, 16, 0, DATAOUT, 1, 4), rnode(GIN, 16, 0, 20) },
  { pnode(GPIO, 16, 0, OEIN, 1, 0), rnode(GOUT, 16, 0, 47) },
  { pnode(GPIO, 16, 0, OEIN, 1, 1), rnode(GOUT, 16, 0, 39) },
  { pnode(GPIO, 16, 0, BSLIPMAX, 1, -1), rnode(GIN, 16, 0, 25) },
  { pnode(GPIO, 16, 0, CEIN, 1, -1), rnode(GOUT, 16, 0, 51) },
  { pnode(GPIO, 16, 0, CEOUT, 1, -1), rnode(GOUT, 16, 0, 50) },
  { pnode(GPIO, 16, 0, ACLR, 1, -1), rnode(GOUT, 16, 0, 42) },
  { pnode(GPIO, 16, 0, SCLR, 1, -1), rnode(GOUT, 16, 0, 46) },
  { pnode(GPIO, 16, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 16, 0, 11) },
  { pnode(GPIO, 16, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 16, 0, 9) },
  { pnode(GPIO, 16, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 16, 0, 15) },
  { pnode(GPIO, 16, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 16, 0, 13) },
  { pnode(GPIO, 16, 0, DATAIN, 2, 0), rnode(GOUT, 16, 0, 14) },
  { pnode(GPIO, 16, 0, DATAIN, 2, 1), rnode(GOUT, 16, 0, 22) },
  { pnode(GPIO, 16, 0, DATAIN, 2, 2), rnode(GOUT, 16, 0, 15) },
  { pnode(GPIO, 16, 0, DATAIN, 2, 3), rnode(GOUT, 16, 0, 23) },
  { pnode(GPIO, 16, 0, DATAOUT, 2, 0), rnode(GIN, 16, 0, 8) },
  { pnode(GPIO, 16, 0, DATAOUT, 2, 1), rnode(GIN, 16, 0, 9) },
  { pnode(GPIO, 16, 0, DATAOUT, 2, 2), rnode(GIN, 16, 0, 10) },
  { pnode(GPIO, 16, 0, DATAOUT, 2, 3), rnode(GIN, 16, 0, 11) },
  { pnode(GPIO, 16, 0, DATAOUT, 2, 4), rnode(GIN, 16, 0, 12) },
  { pnode(GPIO, 16, 0, OEIN, 2, 0), rnode(GOUT, 16, 0, 16) },
  { pnode(GPIO, 16, 0, OEIN, 2, 1), rnode(GOUT, 16, 0, 24) },
  { pnode(GPIO, 16, 0, BSLIPMAX, 2, -1), rnode(GIN, 16, 0, 7) },
  { pnode(GPIO, 16, 0, CEIN, 2, -1), rnode(GOUT, 16, 0, 20) },
  { pnode(GPIO, 16, 0, CEOUT, 2, -1), rnode(GOUT, 16, 0, 13) },
  { pnode(GPIO, 16, 0, ACLR, 2, -1), rnode(GOUT, 16, 0, 21) },
  { pnode(GPIO, 16, 0, SCLR, 2, -1), rnode(GOUT, 16, 0, 25) },
  { pnode(GPIO, 16, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 16, 0, 5) },
  { pnode(GPIO, 16, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 16, 0, 7) },
  { pnode(GPIO, 16, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 16, 0, 1) },
  { pnode(GPIO, 16, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 16, 0, 3) },
  { pnode(GPIO, 16, 0, DATAIN, 3, 0), rnode(GOUT, 16, 0, 3) },
  { pnode(GPIO, 16, 0, DATAIN, 3, 1), rnode(GOUT, 16, 0, 17) },
  { pnode(GPIO, 16, 0, DATAIN, 3, 2), rnode(GOUT, 16, 0, 8) },
  { pnode(GPIO, 16, 0, DATAIN, 3, 3), rnode(GOUT, 16, 0, 18) },
  { pnode(GPIO, 16, 0, DATAOUT, 3, 0), rnode(GIN, 16, 0, 2) },
  { pnode(GPIO, 16, 0, DATAOUT, 3, 1), rnode(GIN, 16, 0, 3) },
  { pnode(GPIO, 16, 0, DATAOUT, 3, 2), rnode(GIN, 16, 0, 4) },
  { pnode(GPIO, 16, 0, DATAOUT, 3, 3), rnode(GIN, 16, 0, 5) },
  { pnode(GPIO, 16, 0, DATAOUT, 3, 4), rnode(GIN, 16, 0, 6) },
  { pnode(GPIO, 16, 0, OEIN, 3, 0), rnode(GOUT, 16, 0, 2) },
  { pnode(GPIO, 16, 0, OEIN, 3, 1), rnode(GOUT, 16, 0, 19) },
  { pnode(GPIO, 16, 0, BSLIPMAX, 3, -1), rnode(GIN, 16, 0, 1) },
  { pnode(GPIO, 16, 0, CEIN, 3, -1), rnode(GOUT, 16, 0, 5) },
  { pnode(GPIO, 16, 0, CEOUT, 3, -1), rnode(GOUT, 16, 0, 4) },
  { pnode(GPIO, 16, 0, ACLR, 3, -1), rnode(GOUT, 16, 0, 12) },
  { pnode(GPIO, 16, 0, SCLR, 3, -1), rnode(GOUT, 16, 0, 1) },
  { pnode(GPIO, 16, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 16, 0, 4) },
  { pnode(GPIO, 16, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 16, 0, 6) },
  { pnode(GPIO, 16, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 16, 0, 0) },
  { pnode(GPIO, 16, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 16, 0, 2) },
  { pnode(GPIO, 16, 39, DATAIN, 0, 0), rnode(GOUT, 16, 39, 44) },
  { pnode(GPIO, 16, 39, DATAIN, 0, 1), rnode(GOUT, 16, 39, 34) },
  { pnode(GPIO, 16, 39, DATAIN, 0, 2), rnode(GOUT, 16, 39, 43) },
  { pnode(GPIO, 16, 39, DATAIN, 0, 3), rnode(GOUT, 16, 39, 29) },
  { pnode(GPIO, 16, 39, DATAOUT, 0, 0), rnode(GIN, 16, 39, 18) },
  { pnode(GPIO, 16, 39, DATAOUT, 0, 1), rnode(GIN, 16, 39, 17) },
  { pnode(GPIO, 16, 39, DATAOUT, 0, 2), rnode(GIN, 16, 39, 16) },
  { pnode(GPIO, 16, 39, DATAOUT, 0, 3), rnode(GIN, 16, 39, 15) },
  { pnode(GPIO, 16, 39, DATAOUT, 0, 4), rnode(GIN, 16, 39, 14) },
  { pnode(GPIO, 16, 39, OEIN, 0, 0), rnode(GOUT, 16, 39, 38) },
  { pnode(GPIO, 16, 39, OEIN, 0, 1), rnode(GOUT, 16, 39, 30) },
  { pnode(GPIO, 16, 39, BSLIPMAX, 0, -1), rnode(GIN, 16, 39, 19) },
  { pnode(GPIO, 16, 39, CEIN, 0, -1), rnode(GOUT, 16, 39, 27) },
  { pnode(GPIO, 16, 39, CEOUT, 0, -1), rnode(GOUT, 16, 39, 45) },
  { pnode(GPIO, 16, 39, ACLR, 0, -1), rnode(GOUT, 16, 39, 28) },
  { pnode(GPIO, 16, 39, SCLR, 0, -1), rnode(GOUT, 16, 39, 31) },
  { pnode(GPIO, 16, 39, CLKIN_IN, 0, 0), rnode(DCMUX, 16, 39, 10) },
  { pnode(GPIO, 16, 39, CLKIN_IN, 0, 1), rnode(DCMUX, 16, 39, 8) },
  { pnode(GPIO, 16, 39, CLKIN_OUT, 0, 0), rnode(DCMUX, 16, 39, 14) },
  { pnode(GPIO, 16, 39, CLKIN_OUT, 0, 1), rnode(DCMUX, 16, 39, 12) },
  { pnode(GPIO, 16, 39, DATAIN, 1, 0), rnode(GOUT, 16, 39, 49) },
  { pnode(GPIO, 16, 39, DATAIN, 1, 1), rnode(GOUT, 16, 39, 41) },
  { pnode(GPIO, 16, 39, DATAIN, 1, 2), rnode(GOUT, 16, 39, 48) },
  { pnode(GPIO, 16, 39, DATAIN, 1, 3), rnode(GOUT, 16, 39, 40) },
  { pnode(GPIO, 16, 39, DATAOUT, 1, 0), rnode(GIN, 16, 39, 24) },
  { pnode(GPIO, 16, 39, DATAOUT, 1, 1), rnode(GIN, 16, 39, 23) },
  { pnode(GPIO, 16, 39, DATAOUT, 1, 2), rnode(GIN, 16, 39, 22) },
  { pnode(GPIO, 16, 39, DATAOUT, 1, 3), rnode(GIN, 16, 39, 21) },
  { pnode(GPIO, 16, 39, DATAOUT, 1, 4), rnode(GIN, 16, 39, 20) },
  { pnode(GPIO, 16, 39, OEIN, 1, 0), rnode(GOUT, 16, 39, 47) },
  { pnode(GPIO, 16, 39, OEIN, 1, 1), rnode(GOUT, 16, 39, 39) },
  { pnode(GPIO, 16, 39, BSLIPMAX, 1, -1), rnode(GIN, 16, 39, 25) },
  { pnode(GPIO, 16, 39, CEIN, 1, -1), rnode(GOUT, 16, 39, 51) },
  { pnode(GPIO, 16, 39, CEOUT, 1, -1), rnode(GOUT, 16, 39, 50) },
  { pnode(GPIO, 16, 39, ACLR, 1, -1), rnode(GOUT, 16, 39, 42) },
  { pnode(GPIO, 16, 39, SCLR, 1, -1), rnode(GOUT, 16, 39, 46) },
  { pnode(GPIO, 16, 39, CLKIN_IN, 1, 0), rnode(DCMUX, 16, 39, 11) },
  { pnode(GPIO, 16, 39, CLKIN_IN, 1, 1), rnode(DCMUX, 16, 39, 9) },
  { pnode(GPIO, 16, 39, CLKIN_OUT, 1, 0), rnode(DCMUX, 16, 39, 15) },
  { pnode(GPIO, 16, 39, CLKIN_OUT, 1, 1), rnode(DCMUX, 16, 39, 13) },
  { pnode(GPIO, 16, 39, DATAOUT, 2, 0), rnode(GIN, 16, 39, 8) },
  { pnode(GPIO, 16, 39, DATAOUT, 2, 1), rnode(GIN, 16, 39, 9) },
  { pnode(GPIO, 16, 39, DATAOUT, 2, 2), rnode(GIN, 16, 39, 10) },
  { pnode(GPIO, 16, 39, DATAOUT, 2, 3), rnode(GIN, 16, 39, 11) },
  { pnode(GPIO, 16, 39, DATAOUT, 2, 4), rnode(GIN, 16, 39, 12) },
  { pnode(GPIO, 16, 39, OEIN, 2, 0), rnode(GOUT, 16, 39, 16) },
  { pnode(GPIO, 16, 39, OEIN, 2, 1), rnode(GOUT, 16, 39, 24) },
  { pnode(GPIO, 16, 39, BSLIPMAX, 2, -1), rnode(GIN, 16, 39, 7) },
  { pnode(GPIO, 16, 39, CEIN, 2, -1), rnode(GOUT, 16, 39, 20) },
  { pnode(GPIO, 16, 39, CEOUT, 2, -1), rnode(GOUT, 16, 39, 13) },
  { pnode(GPIO, 16, 39, SCLR, 2, -1), rnode(GOUT, 16, 39, 25) },
  { pnode(GPIO, 16, 39, CLKIN_IN, 2, 0), rnode(DCMUX, 16, 39, 5) },
  { pnode(GPIO, 16, 39, CLKIN_IN, 2, 1), rnode(DCMUX, 16, 39, 7) },
  { pnode(GPIO, 16, 39, CLKIN_OUT, 2, 0), rnode(DCMUX, 16, 39, 1) },
  { pnode(GPIO, 16, 39, CLKIN_OUT, 2, 1), rnode(DCMUX, 16, 39, 3) },
  { pnode(GPIO, 16, 39, DATAOUT, 3, 0), rnode(GIN, 16, 39, 2) },
  { pnode(GPIO, 16, 39, DATAOUT, 3, 1), rnode(GIN, 16, 39, 3) },
  { pnode(GPIO, 16, 39, DATAOUT, 3, 2), rnode(GIN, 16, 39, 4) },
  { pnode(GPIO, 16, 39, DATAOUT, 3, 3), rnode(GIN, 16, 39, 5) },
  { pnode(GPIO, 16, 39, DATAOUT, 3, 4), rnode(GIN, 16, 39, 6) },
  { pnode(GPIO, 16, 39, OEIN, 3, 0), rnode(GOUT, 16, 39, 2) },
  { pnode(GPIO, 16, 39, OEIN, 3, 1), rnode(GOUT, 16, 39, 19) },
  { pnode(GPIO, 16, 39, BSLIPMAX, 3, -1), rnode(GIN, 16, 39, 1) },
  { pnode(GPIO, 16, 39, CEIN, 3, -1), rnode(GOUT, 16, 39, 5) },
  { pnode(GPIO, 16, 39, CEOUT, 3, -1), rnode(GOUT, 16, 39, 4) },
  { pnode(GPIO, 16, 39, SCLR, 3, -1), rnode(GOUT, 16, 39, 1) },
  { pnode(GPIO, 16, 39, CLKIN_IN, 3, 0), rnode(DCMUX, 16, 39, 4) },
  { pnode(GPIO, 16, 39, CLKIN_IN, 3, 1), rnode(DCMUX, 16, 39, 6) },
  { pnode(GPIO, 16, 39, CLKIN_OUT, 3, 0), rnode(DCMUX, 16, 39, 0) },
  { pnode(GPIO, 16, 39, CLKIN_OUT, 3, 1), rnode(DCMUX, 16, 39, 2) },
  { pnode(GPIO, 18, 0, DATAIN, 0, 0), rnode(GOUT, 18, 0, 44) },
  { pnode(GPIO, 18, 0, DATAIN, 0, 1), rnode(GOUT, 18, 0, 34) },
  { pnode(GPIO, 18, 0, DATAIN, 0, 2), rnode(GOUT, 18, 0, 43) },
  { pnode(GPIO, 18, 0, DATAIN, 0, 3), rnode(GOUT, 18, 0, 29) },
  { pnode(GPIO, 18, 0, DATAOUT, 0, 0), rnode(GIN, 18, 0, 18) },
  { pnode(GPIO, 18, 0, DATAOUT, 0, 1), rnode(GIN, 18, 0, 17) },
  { pnode(GPIO, 18, 0, DATAOUT, 0, 2), rnode(GIN, 18, 0, 16) },
  { pnode(GPIO, 18, 0, DATAOUT, 0, 3), rnode(GIN, 18, 0, 15) },
  { pnode(GPIO, 18, 0, DATAOUT, 0, 4), rnode(GIN, 18, 0, 14) },
  { pnode(GPIO, 18, 0, OEIN, 0, 0), rnode(GOUT, 18, 0, 38) },
  { pnode(GPIO, 18, 0, OEIN, 0, 1), rnode(GOUT, 18, 0, 30) },
  { pnode(GPIO, 18, 0, BSLIPMAX, 0, -1), rnode(GIN, 18, 0, 19) },
  { pnode(GPIO, 18, 0, CEIN, 0, -1), rnode(GOUT, 18, 0, 27) },
  { pnode(GPIO, 18, 0, CEOUT, 0, -1), rnode(GOUT, 18, 0, 45) },
  { pnode(GPIO, 18, 0, ACLR, 0, -1), rnode(GOUT, 18, 0, 28) },
  { pnode(GPIO, 18, 0, SCLR, 0, -1), rnode(GOUT, 18, 0, 31) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 18, 0, 10) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 18, 0, 8) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 18, 0, 14) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 18, 0, 12) },
  { pnode(GPIO, 18, 0, DATAIN, 1, 0), rnode(GOUT, 18, 0, 49) },
  { pnode(GPIO, 18, 0, DATAIN, 1, 1), rnode(GOUT, 18, 0, 41) },
  { pnode(GPIO, 18, 0, DATAIN, 1, 2), rnode(GOUT, 18, 0, 48) },
  { pnode(GPIO, 18, 0, DATAIN, 1, 3), rnode(GOUT, 18, 0, 40) },
  { pnode(GPIO, 18, 0, DATAOUT, 1, 0), rnode(GIN, 18, 0, 24) },
  { pnode(GPIO, 18, 0, DATAOUT, 1, 1), rnode(GIN, 18, 0, 23) },
  { pnode(GPIO, 18, 0, DATAOUT, 1, 2), rnode(GIN, 18, 0, 22) },
  { pnode(GPIO, 18, 0, DATAOUT, 1, 3), rnode(GIN, 18, 0, 21) },
  { pnode(GPIO, 18, 0, DATAOUT, 1, 4), rnode(GIN, 18, 0, 20) },
  { pnode(GPIO, 18, 0, OEIN, 1, 0), rnode(GOUT, 18, 0, 47) },
  { pnode(GPIO, 18, 0, OEIN, 1, 1), rnode(GOUT, 18, 0, 39) },
  { pnode(GPIO, 18, 0, BSLIPMAX, 1, -1), rnode(GIN, 18, 0, 25) },
  { pnode(GPIO, 18, 0, CEIN, 1, -1), rnode(GOUT, 18, 0, 51) },
  { pnode(GPIO, 18, 0, CEOUT, 1, -1), rnode(GOUT, 18, 0, 50) },
  { pnode(GPIO, 18, 0, ACLR, 1, -1), rnode(GOUT, 18, 0, 42) },
  { pnode(GPIO, 18, 0, SCLR, 1, -1), rnode(GOUT, 18, 0, 46) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 18, 0, 11) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 18, 0, 9) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 18, 0, 15) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 18, 0, 13) },
  { pnode(GPIO, 18, 0, DATAIN, 2, 0), rnode(GOUT, 18, 0, 14) },
  { pnode(GPIO, 18, 0, DATAIN, 2, 1), rnode(GOUT, 18, 0, 22) },
  { pnode(GPIO, 18, 0, DATAIN, 2, 2), rnode(GOUT, 18, 0, 15) },
  { pnode(GPIO, 18, 0, DATAIN, 2, 3), rnode(GOUT, 18, 0, 23) },
  { pnode(GPIO, 18, 0, DATAOUT, 2, 0), rnode(GIN, 18, 0, 8) },
  { pnode(GPIO, 18, 0, DATAOUT, 2, 1), rnode(GIN, 18, 0, 9) },
  { pnode(GPIO, 18, 0, DATAOUT, 2, 2), rnode(GIN, 18, 0, 10) },
  { pnode(GPIO, 18, 0, DATAOUT, 2, 3), rnode(GIN, 18, 0, 11) },
  { pnode(GPIO, 18, 0, DATAOUT, 2, 4), rnode(GIN, 18, 0, 12) },
  { pnode(GPIO, 18, 0, OEIN, 2, 0), rnode(GOUT, 18, 0, 16) },
  { pnode(GPIO, 18, 0, OEIN, 2, 1), rnode(GOUT, 18, 0, 24) },
  { pnode(GPIO, 18, 0, BSLIPMAX, 2, -1), rnode(GIN, 18, 0, 7) },
  { pnode(GPIO, 18, 0, CEIN, 2, -1), rnode(GOUT, 18, 0, 20) },
  { pnode(GPIO, 18, 0, CEOUT, 2, -1), rnode(GOUT, 18, 0, 13) },
  { pnode(GPIO, 18, 0, ACLR, 2, -1), rnode(GOUT, 18, 0, 21) },
  { pnode(GPIO, 18, 0, SCLR, 2, -1), rnode(GOUT, 18, 0, 25) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 18, 0, 5) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 18, 0, 7) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 18, 0, 1) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 18, 0, 3) },
  { pnode(GPIO, 18, 0, DATAIN, 3, 0), rnode(GOUT, 18, 0, 3) },
  { pnode(GPIO, 18, 0, DATAIN, 3, 1), rnode(GOUT, 18, 0, 17) },
  { pnode(GPIO, 18, 0, DATAIN, 3, 2), rnode(GOUT, 18, 0, 8) },
  { pnode(GPIO, 18, 0, DATAIN, 3, 3), rnode(GOUT, 18, 0, 18) },
  { pnode(GPIO, 18, 0, DATAOUT, 3, 0), rnode(GIN, 18, 0, 2) },
  { pnode(GPIO, 18, 0, DATAOUT, 3, 1), rnode(GIN, 18, 0, 3) },
  { pnode(GPIO, 18, 0, DATAOUT, 3, 2), rnode(GIN, 18, 0, 4) },
  { pnode(GPIO, 18, 0, DATAOUT, 3, 3), rnode(GIN, 18, 0, 5) },
  { pnode(GPIO, 18, 0, DATAOUT, 3, 4), rnode(GIN, 18, 0, 6) },
  { pnode(GPIO, 18, 0, OEIN, 3, 0), rnode(GOUT, 18, 0, 2) },
  { pnode(GPIO, 18, 0, OEIN, 3, 1), rnode(GOUT, 18, 0, 19) },
  { pnode(GPIO, 18, 0, BSLIPMAX, 3, -1), rnode(GIN, 18, 0, 1) },
  { pnode(GPIO, 18, 0, CEIN, 3, -1), rnode(GOUT, 18, 0, 5) },
  { pnode(GPIO, 18, 0, CEOUT, 3, -1), rnode(GOUT, 18, 0, 4) },
  { pnode(GPIO, 18, 0, ACLR, 3, -1), rnode(GOUT, 18, 0, 12) },
  { pnode(GPIO, 18, 0, SCLR, 3, -1), rnode(GOUT, 18, 0, 1) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 18, 0, 4) },
  { pnode(GPIO, 18, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 18, 0, 6) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 18, 0, 0) },
  { pnode(GPIO, 18, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 18, 0, 2) },
  { pnode(GPIO, 19, 0, DATAIN, 0, 0), rnode(GOUT, 19, 0, 44) },
  { pnode(GPIO, 19, 0, DATAIN, 0, 1), rnode(GOUT, 19, 0, 34) },
  { pnode(GPIO, 19, 0, DATAIN, 0, 2), rnode(GOUT, 19, 0, 43) },
  { pnode(GPIO, 19, 0, DATAIN, 0, 3), rnode(GOUT, 19, 0, 29) },
  { pnode(GPIO, 19, 0, DATAOUT, 0, 0), rnode(GIN, 19, 0, 18) },
  { pnode(GPIO, 19, 0, DATAOUT, 0, 1), rnode(GIN, 19, 0, 17) },
  { pnode(GPIO, 19, 0, DATAOUT, 0, 2), rnode(GIN, 19, 0, 16) },
  { pnode(GPIO, 19, 0, DATAOUT, 0, 3), rnode(GIN, 19, 0, 15) },
  { pnode(GPIO, 19, 0, DATAOUT, 0, 4), rnode(GIN, 19, 0, 14) },
  { pnode(GPIO, 19, 0, OEIN, 0, 0), rnode(GOUT, 19, 0, 38) },
  { pnode(GPIO, 19, 0, OEIN, 0, 1), rnode(GOUT, 19, 0, 30) },
  { pnode(GPIO, 19, 0, BSLIPMAX, 0, -1), rnode(GIN, 19, 0, 19) },
  { pnode(GPIO, 19, 0, CEIN, 0, -1), rnode(GOUT, 19, 0, 27) },
  { pnode(GPIO, 19, 0, CEOUT, 0, -1), rnode(GOUT, 19, 0, 45) },
  { pnode(GPIO, 19, 0, ACLR, 0, -1), rnode(GOUT, 19, 0, 28) },
  { pnode(GPIO, 19, 0, SCLR, 0, -1), rnode(GOUT, 19, 0, 31) },
  { pnode(GPIO, 19, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 19, 0, 10) },
  { pnode(GPIO, 19, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 19, 0, 8) },
  { pnode(GPIO, 19, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 19, 0, 14) },
  { pnode(GPIO, 19, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 19, 0, 12) },
  { pnode(GPIO, 19, 0, DATAIN, 1, 0), rnode(GOUT, 19, 0, 49) },
  { pnode(GPIO, 19, 0, DATAIN, 1, 1), rnode(GOUT, 19, 0, 41) },
  { pnode(GPIO, 19, 0, DATAIN, 1, 2), rnode(GOUT, 19, 0, 48) },
  { pnode(GPIO, 19, 0, DATAIN, 1, 3), rnode(GOUT, 19, 0, 40) },
  { pnode(GPIO, 19, 0, DATAOUT, 1, 0), rnode(GIN, 19, 0, 24) },
  { pnode(GPIO, 19, 0, DATAOUT, 1, 1), rnode(GIN, 19, 0, 23) },
  { pnode(GPIO, 19, 0, DATAOUT, 1, 2), rnode(GIN, 19, 0, 22) },
  { pnode(GPIO, 19, 0, DATAOUT, 1, 3), rnode(GIN, 19, 0, 21) },
  { pnode(GPIO, 19, 0, DATAOUT, 1, 4), rnode(GIN, 19, 0, 20) },
  { pnode(GPIO, 19, 0, OEIN, 1, 0), rnode(GOUT, 19, 0, 47) },
  { pnode(GPIO, 19, 0, OEIN, 1, 1), rnode(GOUT, 19, 0, 39) },
  { pnode(GPIO, 19, 0, BSLIPMAX, 1, -1), rnode(GIN, 19, 0, 25) },
  { pnode(GPIO, 19, 0, CEIN, 1, -1), rnode(GOUT, 19, 0, 51) },
  { pnode(GPIO, 19, 0, CEOUT, 1, -1), rnode(GOUT, 19, 0, 50) },
  { pnode(GPIO, 19, 0, ACLR, 1, -1), rnode(GOUT, 19, 0, 42) },
  { pnode(GPIO, 19, 0, SCLR, 1, -1), rnode(GOUT, 19, 0, 46) },
  { pnode(GPIO, 19, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 19, 0, 11) },
  { pnode(GPIO, 19, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 19, 0, 9) },
  { pnode(GPIO, 19, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 19, 0, 15) },
  { pnode(GPIO, 19, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 19, 0, 13) },
  { pnode(GPIO, 19, 0, DATAIN, 2, 0), rnode(GOUT, 19, 0, 14) },
  { pnode(GPIO, 19, 0, DATAIN, 2, 1), rnode(GOUT, 19, 0, 22) },
  { pnode(GPIO, 19, 0, DATAIN, 2, 2), rnode(GOUT, 19, 0, 15) },
  { pnode(GPIO, 19, 0, DATAIN, 2, 3), rnode(GOUT, 19, 0, 23) },
  { pnode(GPIO, 19, 0, DATAOUT, 2, 0), rnode(GIN, 19, 0, 8) },
  { pnode(GPIO, 19, 0, DATAOUT, 2, 1), rnode(GIN, 19, 0, 9) },
  { pnode(GPIO, 19, 0, DATAOUT, 2, 2), rnode(GIN, 19, 0, 10) },
  { pnode(GPIO, 19, 0, DATAOUT, 2, 3), rnode(GIN, 19, 0, 11) },
  { pnode(GPIO, 19, 0, DATAOUT, 2, 4), rnode(GIN, 19, 0, 12) },
  { pnode(GPIO, 19, 0, OEIN, 2, 0), rnode(GOUT, 19, 0, 16) },
  { pnode(GPIO, 19, 0, OEIN, 2, 1), rnode(GOUT, 19, 0, 24) },
  { pnode(GPIO, 19, 0, BSLIPMAX, 2, -1), rnode(GIN, 19, 0, 7) },
  { pnode(GPIO, 19, 0, CEIN, 2, -1), rnode(GOUT, 19, 0, 20) },
  { pnode(GPIO, 19, 0, CEOUT, 2, -1), rnode(GOUT, 19, 0, 13) },
  { pnode(GPIO, 19, 0, ACLR, 2, -1), rnode(GOUT, 19, 0, 21) },
  { pnode(GPIO, 19, 0, SCLR, 2, -1), rnode(GOUT, 19, 0, 25) },
  { pnode(GPIO, 19, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 19, 0, 5) },
  { pnode(GPIO, 19, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 19, 0, 7) },
  { pnode(GPIO, 19, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 19, 0, 1) },
  { pnode(GPIO, 19, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 19, 0, 3) },
  { pnode(GPIO, 19, 0, DATAIN, 3, 0), rnode(GOUT, 19, 0, 3) },
  { pnode(GPIO, 19, 0, DATAIN, 3, 1), rnode(GOUT, 19, 0, 17) },
  { pnode(GPIO, 19, 0, DATAIN, 3, 2), rnode(GOUT, 19, 0, 8) },
  { pnode(GPIO, 19, 0, DATAIN, 3, 3), rnode(GOUT, 19, 0, 18) },
  { pnode(GPIO, 19, 0, DATAOUT, 3, 0), rnode(GIN, 19, 0, 2) },
  { pnode(GPIO, 19, 0, DATAOUT, 3, 1), rnode(GIN, 19, 0, 3) },
  { pnode(GPIO, 19, 0, DATAOUT, 3, 2), rnode(GIN, 19, 0, 4) },
  { pnode(GPIO, 19, 0, DATAOUT, 3, 3), rnode(GIN, 19, 0, 5) },
  { pnode(GPIO, 19, 0, DATAOUT, 3, 4), rnode(GIN, 19, 0, 6) },
  { pnode(GPIO, 19, 0, OEIN, 3, 0), rnode(GOUT, 19, 0, 2) },
  { pnode(GPIO, 19, 0, OEIN, 3, 1), rnode(GOUT, 19, 0, 19) },
  { pnode(GPIO, 19, 0, BSLIPMAX, 3, -1), rnode(GIN, 19, 0, 1) },
  { pnode(GPIO, 19, 0, CEIN, 3, -1), rnode(GOUT, 19, 0, 5) },
  { pnode(GPIO, 19, 0, CEOUT, 3, -1), rnode(GOUT, 19, 0, 4) },
  { pnode(GPIO, 19, 0, ACLR, 3, -1), rnode(GOUT, 19, 0, 12) },
  { pnode(GPIO, 19, 0, SCLR, 3, -1), rnode(GOUT, 19, 0, 1) },
  { pnode(GPIO, 19, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 19, 0, 4) },
  { pnode(GPIO, 19, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 19, 0, 6) },
  { pnode(GPIO, 19, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 19, 0, 0) },
  { pnode(GPIO, 19, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 19, 0, 2) },
  { pnode(GPIO, 20, 0, DATAIN, 0, 0), rnode(GOUT, 20, 0, 44) },
  { pnode(GPIO, 20, 0, DATAIN, 0, 1), rnode(GOUT, 20, 0, 34) },
  { pnode(GPIO, 20, 0, DATAIN, 0, 2), rnode(GOUT, 20, 0, 43) },
  { pnode(GPIO, 20, 0, DATAIN, 0, 3), rnode(GOUT, 20, 0, 29) },
  { pnode(GPIO, 20, 0, DATAOUT, 0, 0), rnode(GIN, 20, 0, 18) },
  { pnode(GPIO, 20, 0, DATAOUT, 0, 1), rnode(GIN, 20, 0, 17) },
  { pnode(GPIO, 20, 0, DATAOUT, 0, 2), rnode(GIN, 20, 0, 16) },
  { pnode(GPIO, 20, 0, DATAOUT, 0, 3), rnode(GIN, 20, 0, 15) },
  { pnode(GPIO, 20, 0, DATAOUT, 0, 4), rnode(GIN, 20, 0, 14) },
  { pnode(GPIO, 20, 0, OEIN, 0, 0), rnode(GOUT, 20, 0, 38) },
  { pnode(GPIO, 20, 0, OEIN, 0, 1), rnode(GOUT, 20, 0, 30) },
  { pnode(GPIO, 20, 0, BSLIPMAX, 0, -1), rnode(GIN, 20, 0, 19) },
  { pnode(GPIO, 20, 0, CEIN, 0, -1), rnode(GOUT, 20, 0, 27) },
  { pnode(GPIO, 20, 0, CEOUT, 0, -1), rnode(GOUT, 20, 0, 45) },
  { pnode(GPIO, 20, 0, ACLR, 0, -1), rnode(GOUT, 20, 0, 28) },
  { pnode(GPIO, 20, 0, SCLR, 0, -1), rnode(GOUT, 20, 0, 31) },
  { pnode(GPIO, 20, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 20, 0, 10) },
  { pnode(GPIO, 20, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 20, 0, 8) },
  { pnode(GPIO, 20, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 20, 0, 14) },
  { pnode(GPIO, 20, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 20, 0, 12) },
  { pnode(GPIO, 20, 0, DATAIN, 1, 0), rnode(GOUT, 20, 0, 49) },
  { pnode(GPIO, 20, 0, DATAIN, 1, 1), rnode(GOUT, 20, 0, 41) },
  { pnode(GPIO, 20, 0, DATAIN, 1, 2), rnode(GOUT, 20, 0, 48) },
  { pnode(GPIO, 20, 0, DATAIN, 1, 3), rnode(GOUT, 20, 0, 40) },
  { pnode(GPIO, 20, 0, DATAOUT, 1, 0), rnode(GIN, 20, 0, 24) },
  { pnode(GPIO, 20, 0, DATAOUT, 1, 1), rnode(GIN, 20, 0, 23) },
  { pnode(GPIO, 20, 0, DATAOUT, 1, 2), rnode(GIN, 20, 0, 22) },
  { pnode(GPIO, 20, 0, DATAOUT, 1, 3), rnode(GIN, 20, 0, 21) },
  { pnode(GPIO, 20, 0, DATAOUT, 1, 4), rnode(GIN, 20, 0, 20) },
  { pnode(GPIO, 20, 0, OEIN, 1, 0), rnode(GOUT, 20, 0, 47) },
  { pnode(GPIO, 20, 0, OEIN, 1, 1), rnode(GOUT, 20, 0, 39) },
  { pnode(GPIO, 20, 0, BSLIPMAX, 1, -1), rnode(GIN, 20, 0, 25) },
  { pnode(GPIO, 20, 0, CEIN, 1, -1), rnode(GOUT, 20, 0, 51) },
  { pnode(GPIO, 20, 0, CEOUT, 1, -1), rnode(GOUT, 20, 0, 50) },
  { pnode(GPIO, 20, 0, ACLR, 1, -1), rnode(GOUT, 20, 0, 42) },
  { pnode(GPIO, 20, 0, SCLR, 1, -1), rnode(GOUT, 20, 0, 46) },
  { pnode(GPIO, 20, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 20, 0, 11) },
  { pnode(GPIO, 20, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 20, 0, 9) },
  { pnode(GPIO, 20, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 20, 0, 15) },
  { pnode(GPIO, 20, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 20, 0, 13) },
  { pnode(GPIO, 20, 0, DATAIN, 2, 0), rnode(GOUT, 20, 0, 14) },
  { pnode(GPIO, 20, 0, DATAIN, 2, 1), rnode(GOUT, 20, 0, 22) },
  { pnode(GPIO, 20, 0, DATAIN, 2, 2), rnode(GOUT, 20, 0, 15) },
  { pnode(GPIO, 20, 0, DATAIN, 2, 3), rnode(GOUT, 20, 0, 23) },
  { pnode(GPIO, 20, 0, DATAOUT, 2, 0), rnode(GIN, 20, 0, 8) },
  { pnode(GPIO, 20, 0, DATAOUT, 2, 1), rnode(GIN, 20, 0, 9) },
  { pnode(GPIO, 20, 0, DATAOUT, 2, 2), rnode(GIN, 20, 0, 10) },
  { pnode(GPIO, 20, 0, DATAOUT, 2, 3), rnode(GIN, 20, 0, 11) },
  { pnode(GPIO, 20, 0, DATAOUT, 2, 4), rnode(GIN, 20, 0, 12) },
  { pnode(GPIO, 20, 0, OEIN, 2, 0), rnode(GOUT, 20, 0, 16) },
  { pnode(GPIO, 20, 0, OEIN, 2, 1), rnode(GOUT, 20, 0, 24) },
  { pnode(GPIO, 20, 0, BSLIPMAX, 2, -1), rnode(GIN, 20, 0, 7) },
  { pnode(GPIO, 20, 0, CEIN, 2, -1), rnode(GOUT, 20, 0, 20) },
  { pnode(GPIO, 20, 0, CEOUT, 2, -1), rnode(GOUT, 20, 0, 13) },
  { pnode(GPIO, 20, 0, ACLR, 2, -1), rnode(GOUT, 20, 0, 21) },
  { pnode(GPIO, 20, 0, SCLR, 2, -1), rnode(GOUT, 20, 0, 25) },
  { pnode(GPIO, 20, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 20, 0, 5) },
  { pnode(GPIO, 20, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 20, 0, 7) },
  { pnode(GPIO, 20, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 20, 0, 1) },
  { pnode(GPIO, 20, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 20, 0, 3) },
  { pnode(GPIO, 20, 0, DATAIN, 3, 0), rnode(GOUT, 20, 0, 3) },
  { pnode(GPIO, 20, 0, DATAIN, 3, 1), rnode(GOUT, 20, 0, 17) },
  { pnode(GPIO, 20, 0, DATAIN, 3, 2), rnode(GOUT, 20, 0, 8) },
  { pnode(GPIO, 20, 0, DATAIN, 3, 3), rnode(GOUT, 20, 0, 18) },
  { pnode(GPIO, 20, 0, DATAOUT, 3, 0), rnode(GIN, 20, 0, 2) },
  { pnode(GPIO, 20, 0, DATAOUT, 3, 1), rnode(GIN, 20, 0, 3) },
  { pnode(GPIO, 20, 0, DATAOUT, 3, 2), rnode(GIN, 20, 0, 4) },
  { pnode(GPIO, 20, 0, DATAOUT, 3, 3), rnode(GIN, 20, 0, 5) },
  { pnode(GPIO, 20, 0, DATAOUT, 3, 4), rnode(GIN, 20, 0, 6) },
  { pnode(GPIO, 20, 0, OEIN, 3, 0), rnode(GOUT, 20, 0, 2) },
  { pnode(GPIO, 20, 0, OEIN, 3, 1), rnode(GOUT, 20, 0, 19) },
  { pnode(GPIO, 20, 0, BSLIPMAX, 3, -1), rnode(GIN, 20, 0, 1) },
  { pnode(GPIO, 20, 0, CEIN, 3, -1), rnode(GOUT, 20, 0, 5) },
  { pnode(GPIO, 20, 0, CEOUT, 3, -1), rnode(GOUT, 20, 0, 4) },
  { pnode(GPIO, 20, 0, ACLR, 3, -1), rnode(GOUT, 20, 0, 12) },
  { pnode(GPIO, 20, 0, SCLR, 3, -1), rnode(GOUT, 20, 0, 1) },
  { pnode(GPIO, 20, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 20, 0, 4) },
  { pnode(GPIO, 20, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 20, 0, 6) },
  { pnode(GPIO, 20, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 20, 0, 0) },
  { pnode(GPIO, 20, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 20, 0, 2) },
  { pnode(GPIO, 21, 0, DATAIN, 0, 0), rnode(GOUT, 21, 0, 44) },
  { pnode(GPIO, 21, 0, DATAIN, 0, 1), rnode(GOUT, 21, 0, 34) },
  { pnode(GPIO, 21, 0, DATAIN, 0, 2), rnode(GOUT, 21, 0, 43) },
  { pnode(GPIO, 21, 0, DATAIN, 0, 3), rnode(GOUT, 21, 0, 29) },
  { pnode(GPIO, 21, 0, DATAOUT, 0, 0), rnode(GIN, 21, 0, 18) },
  { pnode(GPIO, 21, 0, DATAOUT, 0, 1), rnode(GIN, 21, 0, 17) },
  { pnode(GPIO, 21, 0, DATAOUT, 0, 2), rnode(GIN, 21, 0, 16) },
  { pnode(GPIO, 21, 0, DATAOUT, 0, 3), rnode(GIN, 21, 0, 15) },
  { pnode(GPIO, 21, 0, DATAOUT, 0, 4), rnode(GIN, 21, 0, 14) },
  { pnode(GPIO, 21, 0, OEIN, 0, 0), rnode(GOUT, 21, 0, 38) },
  { pnode(GPIO, 21, 0, OEIN, 0, 1), rnode(GOUT, 21, 0, 30) },
  { pnode(GPIO, 21, 0, BSLIPMAX, 0, -1), rnode(GIN, 21, 0, 19) },
  { pnode(GPIO, 21, 0, CEIN, 0, -1), rnode(GOUT, 21, 0, 27) },
  { pnode(GPIO, 21, 0, CEOUT, 0, -1), rnode(GOUT, 21, 0, 45) },
  { pnode(GPIO, 21, 0, ACLR, 0, -1), rnode(GOUT, 21, 0, 28) },
  { pnode(GPIO, 21, 0, SCLR, 0, -1), rnode(GOUT, 21, 0, 31) },
  { pnode(GPIO, 21, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 21, 0, 10) },
  { pnode(GPIO, 21, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 21, 0, 8) },
  { pnode(GPIO, 21, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 21, 0, 14) },
  { pnode(GPIO, 21, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 21, 0, 12) },
  { pnode(GPIO, 21, 0, DATAIN, 1, 0), rnode(GOUT, 21, 0, 49) },
  { pnode(GPIO, 21, 0, DATAIN, 1, 1), rnode(GOUT, 21, 0, 41) },
  { pnode(GPIO, 21, 0, DATAIN, 1, 2), rnode(GOUT, 21, 0, 48) },
  { pnode(GPIO, 21, 0, DATAIN, 1, 3), rnode(GOUT, 21, 0, 40) },
  { pnode(GPIO, 21, 0, DATAOUT, 1, 0), rnode(GIN, 21, 0, 24) },
  { pnode(GPIO, 21, 0, DATAOUT, 1, 1), rnode(GIN, 21, 0, 23) },
  { pnode(GPIO, 21, 0, DATAOUT, 1, 2), rnode(GIN, 21, 0, 22) },
  { pnode(GPIO, 21, 0, DATAOUT, 1, 3), rnode(GIN, 21, 0, 21) },
  { pnode(GPIO, 21, 0, DATAOUT, 1, 4), rnode(GIN, 21, 0, 20) },
  { pnode(GPIO, 21, 0, OEIN, 1, 0), rnode(GOUT, 21, 0, 47) },
  { pnode(GPIO, 21, 0, OEIN, 1, 1), rnode(GOUT, 21, 0, 39) },
  { pnode(GPIO, 21, 0, BSLIPMAX, 1, -1), rnode(GIN, 21, 0, 25) },
  { pnode(GPIO, 21, 0, CEIN, 1, -1), rnode(GOUT, 21, 0, 51) },
  { pnode(GPIO, 21, 0, CEOUT, 1, -1), rnode(GOUT, 21, 0, 50) },
  { pnode(GPIO, 21, 0, ACLR, 1, -1), rnode(GOUT, 21, 0, 42) },
  { pnode(GPIO, 21, 0, SCLR, 1, -1), rnode(GOUT, 21, 0, 46) },
  { pnode(GPIO, 21, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 21, 0, 11) },
  { pnode(GPIO, 21, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 21, 0, 9) },
  { pnode(GPIO, 21, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 21, 0, 15) },
  { pnode(GPIO, 21, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 21, 0, 13) },
  { pnode(GPIO, 21, 0, DATAIN, 2, 0), rnode(GOUT, 21, 0, 14) },
  { pnode(GPIO, 21, 0, DATAIN, 2, 1), rnode(GOUT, 21, 0, 22) },
  { pnode(GPIO, 21, 0, DATAIN, 2, 2), rnode(GOUT, 21, 0, 15) },
  { pnode(GPIO, 21, 0, DATAIN, 2, 3), rnode(GOUT, 21, 0, 23) },
  { pnode(GPIO, 21, 0, DATAOUT, 2, 0), rnode(GIN, 21, 0, 8) },
  { pnode(GPIO, 21, 0, DATAOUT, 2, 1), rnode(GIN, 21, 0, 9) },
  { pnode(GPIO, 21, 0, DATAOUT, 2, 2), rnode(GIN, 21, 0, 10) },
  { pnode(GPIO, 21, 0, DATAOUT, 2, 3), rnode(GIN, 21, 0, 11) },
  { pnode(GPIO, 21, 0, DATAOUT, 2, 4), rnode(GIN, 21, 0, 12) },
  { pnode(GPIO, 21, 0, OEIN, 2, 0), rnode(GOUT, 21, 0, 16) },
  { pnode(GPIO, 21, 0, OEIN, 2, 1), rnode(GOUT, 21, 0, 24) },
  { pnode(GPIO, 21, 0, BSLIPMAX, 2, -1), rnode(GIN, 21, 0, 7) },
  { pnode(GPIO, 21, 0, CEIN, 2, -1), rnode(GOUT, 21, 0, 20) },
  { pnode(GPIO, 21, 0, CEOUT, 2, -1), rnode(GOUT, 21, 0, 13) },
  { pnode(GPIO, 21, 0, ACLR, 2, -1), rnode(GOUT, 21, 0, 21) },
  { pnode(GPIO, 21, 0, SCLR, 2, -1), rnode(GOUT, 21, 0, 25) },
  { pnode(GPIO, 21, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 21, 0, 5) },
  { pnode(GPIO, 21, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 21, 0, 7) },
  { pnode(GPIO, 21, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 21, 0, 1) },
  { pnode(GPIO, 21, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 21, 0, 3) },
  { pnode(GPIO, 21, 0, DATAIN, 3, 0), rnode(GOUT, 21, 0, 3) },
  { pnode(GPIO, 21, 0, DATAIN, 3, 1), rnode(GOUT, 21, 0, 17) },
  { pnode(GPIO, 21, 0, DATAIN, 3, 2), rnode(GOUT, 21, 0, 8) },
  { pnode(GPIO, 21, 0, DATAIN, 3, 3), rnode(GOUT, 21, 0, 18) },
  { pnode(GPIO, 21, 0, DATAOUT, 3, 0), rnode(GIN, 21, 0, 2) },
  { pnode(GPIO, 21, 0, DATAOUT, 3, 1), rnode(GIN, 21, 0, 3) },
  { pnode(GPIO, 21, 0, DATAOUT, 3, 2), rnode(GIN, 21, 0, 4) },
  { pnode(GPIO, 21, 0, DATAOUT, 3, 3), rnode(GIN, 21, 0, 5) },
  { pnode(GPIO, 21, 0, DATAOUT, 3, 4), rnode(GIN, 21, 0, 6) },
  { pnode(GPIO, 21, 0, OEIN, 3, 0), rnode(GOUT, 21, 0, 2) },
  { pnode(GPIO, 21, 0, OEIN, 3, 1), rnode(GOUT, 21, 0, 19) },
  { pnode(GPIO, 21, 0, BSLIPMAX, 3, -1), rnode(GIN, 21, 0, 1) },
  { pnode(GPIO, 21, 0, CEIN, 3, -1), rnode(GOUT, 21, 0, 5) },
  { pnode(GPIO, 21, 0, CEOUT, 3, -1), rnode(GOUT, 21, 0, 4) },
  { pnode(GPIO, 21, 0, ACLR, 3, -1), rnode(GOUT, 21, 0, 12) },
  { pnode(GPIO, 21, 0, SCLR, 3, -1), rnode(GOUT, 21, 0, 1) },
  { pnode(GPIO, 21, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 21, 0, 4) },
  { pnode(GPIO, 21, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 21, 0, 6) },
  { pnode(GPIO, 21, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 21, 0, 0) },
  { pnode(GPIO, 21, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 21, 0, 2) },
  { pnode(GPIO, 25, 39, DATAOUT, 0, 4), rnode(GIN, 25, 39, 14) },
  { pnode(GPIO, 25, 39, BSLIPMAX, 0, -1), rnode(GIN, 25, 39, 19) },
  { pnode(GPIO, 25, 39, CEIN, 0, -1), rnode(GOUT, 25, 39, 27) },
  { pnode(GPIO, 25, 39, CEOUT, 0, -1), rnode(GOUT, 25, 39, 45) },
  { pnode(GPIO, 25, 39, ACLR, 0, -1), rnode(GOUT, 25, 39, 28) },
  { pnode(GPIO, 25, 39, SCLR, 0, -1), rnode(GOUT, 25, 39, 31) },
  { pnode(GPIO, 25, 39, CLKIN_IN, 0, 0), rnode(DCMUX, 25, 39, 10) },
  { pnode(GPIO, 25, 39, CLKIN_IN, 0, 1), rnode(DCMUX, 25, 39, 8) },
  { pnode(GPIO, 25, 39, CLKIN_OUT, 0, 0), rnode(DCMUX, 25, 39, 14) },
  { pnode(GPIO, 25, 39, CLKIN_OUT, 0, 1), rnode(DCMUX, 25, 39, 12) },
  { pnode(GPIO, 25, 39, DATAOUT, 1, 4), rnode(GIN, 25, 39, 20) },
  { pnode(GPIO, 25, 39, BSLIPMAX, 1, -1), rnode(GIN, 25, 39, 25) },
  { pnode(GPIO, 25, 39, CEIN, 1, -1), rnode(GOUT, 25, 39, 51) },
  { pnode(GPIO, 25, 39, CEOUT, 1, -1), rnode(GOUT, 25, 39, 50) },
  { pnode(GPIO, 25, 39, ACLR, 1, -1), rnode(GOUT, 25, 39, 42) },
  { pnode(GPIO, 25, 39, SCLR, 1, -1), rnode(GOUT, 25, 39, 46) },
  { pnode(GPIO, 25, 39, CLKIN_IN, 1, 0), rnode(DCMUX, 25, 39, 11) },
  { pnode(GPIO, 25, 39, CLKIN_IN, 1, 1), rnode(DCMUX, 25, 39, 9) },
  { pnode(GPIO, 25, 39, CLKIN_OUT, 1, 0), rnode(DCMUX, 25, 39, 15) },
  { pnode(GPIO, 25, 39, CLKIN_OUT, 1, 1), rnode(DCMUX, 25, 39, 13) },
  { pnode(GPIO, 25, 39, DATAOUT, 2, 4), rnode(GIN, 25, 39, 12) },
  { pnode(GPIO, 25, 39, BSLIPMAX, 2, -1), rnode(GIN, 25, 39, 7) },
  { pnode(GPIO, 25, 39, CEIN, 2, -1), rnode(GOUT, 25, 39, 20) },
  { pnode(GPIO, 25, 39, CEOUT, 2, -1), rnode(GOUT, 25, 39, 13) },
  { pnode(GPIO, 25, 39, ACLR, 2, -1), rnode(GOUT, 25, 39, 21) },
  { pnode(GPIO, 25, 39, SCLR, 2, -1), rnode(GOUT, 25, 39, 25) },
  { pnode(GPIO, 25, 39, CLKIN_IN, 2, 0), rnode(DCMUX, 25, 39, 5) },
  { pnode(GPIO, 25, 39, CLKIN_IN, 2, 1), rnode(DCMUX, 25, 39, 7) },
  { pnode(GPIO, 25, 39, CLKIN_OUT, 2, 0), rnode(DCMUX, 25, 39, 1) },
  { pnode(GPIO, 25, 39, CLKIN_OUT, 2, 1), rnode(DCMUX, 25, 39, 3) },
  { pnode(GPIO, 25, 39, DATAIN, 3, 0), rnode(GOUT, 25, 39, 3) },
  { pnode(GPIO, 25, 39, DATAIN, 3, 1), rnode(GOUT, 25, 39, 17) },
  { pnode(GPIO, 25, 39, DATAIN, 3, 2), rnode(GOUT, 25, 39, 8) },
  { pnode(GPIO, 25, 39, DATAIN, 3, 3), rnode(GOUT, 25, 39, 18) },
  { pnode(GPIO, 25, 39, DATAOUT, 3, 0), rnode(GIN, 25, 39, 2) },
  { pnode(GPIO, 25, 39, DATAOUT, 3, 1), rnode(GIN, 25, 39, 3) },
  { pnode(GPIO, 25, 39, DATAOUT, 3, 2), rnode(GIN, 25, 39, 4) },
  { pnode(GPIO, 25, 39, DATAOUT, 3, 3), rnode(GIN, 25, 39, 5) },
  { pnode(GPIO, 25, 39, DATAOUT, 3, 4), rnode(GIN, 25, 39, 6) },
  { pnode(GPIO, 25, 39, OEIN, 3, 0), rnode(GOUT, 25, 39, 2) },
  { pnode(GPIO, 25, 39, OEIN, 3, 1), rnode(GOUT, 25, 39, 19) },
  { pnode(GPIO, 25, 39, BSLIPMAX, 3, -1), rnode(GIN, 25, 39, 1) },
  { pnode(GPIO, 25, 39, CEIN, 3, -1), rnode(GOUT, 25, 39, 5) },
  { pnode(GPIO, 25, 39, CEOUT, 3, -1), rnode(GOUT, 25, 39, 4) },
  { pnode(GPIO, 25, 39, ACLR, 3, -1), rnode(GOUT, 25, 39, 12) },
  { pnode(GPIO, 25, 39, SCLR, 3, -1), rnode(GOUT, 25, 39, 1) },
  { pnode(GPIO, 25, 39, CLKIN_IN, 3, 0), rnode(DCMUX, 25, 39, 4) },
  { pnode(GPIO, 25, 39, CLKIN_IN, 3, 1), rnode(DCMUX, 25, 39, 6) },
  { pnode(GPIO, 25, 39, CLKIN_OUT, 3, 0), rnode(DCMUX, 25, 39, 0) },
  { pnode(GPIO, 25, 39, CLKIN_OUT, 3, 1), rnode(DCMUX, 25, 39, 2) },
  { pnode(GPIO, 27, 0, DATAIN, 0, 0), rnode(GOUT, 27, 0, 44) },
  { pnode(GPIO, 27, 0, DATAIN, 0, 1), rnode(GOUT, 27, 0, 34) },
  { pnode(GPIO, 27, 0, DATAIN, 0, 2), rnode(GOUT, 27, 0, 43) },
  { pnode(GPIO, 27, 0, DATAIN, 0, 3), rnode(GOUT, 27, 0, 29) },
  { pnode(GPIO, 27, 0, DATAOUT, 0, 0), rnode(GIN, 27, 0, 18) },
  { pnode(GPIO, 27, 0, DATAOUT, 0, 1), rnode(GIN, 27, 0, 17) },
  { pnode(GPIO, 27, 0, DATAOUT, 0, 2), rnode(GIN, 27, 0, 16) },
  { pnode(GPIO, 27, 0, DATAOUT, 0, 3), rnode(GIN, 27, 0, 15) },
  { pnode(GPIO, 27, 0, DATAOUT, 0, 4), rnode(GIN, 27, 0, 14) },
  { pnode(GPIO, 27, 0, OEIN, 0, 0), rnode(GOUT, 27, 0, 38) },
  { pnode(GPIO, 27, 0, OEIN, 0, 1), rnode(GOUT, 27, 0, 30) },
  { pnode(GPIO, 27, 0, BSLIPMAX, 0, -1), rnode(GIN, 27, 0, 19) },
  { pnode(GPIO, 27, 0, CEIN, 0, -1), rnode(GOUT, 27, 0, 27) },
  { pnode(GPIO, 27, 0, CEOUT, 0, -1), rnode(GOUT, 27, 0, 45) },
  { pnode(GPIO, 27, 0, ACLR, 0, -1), rnode(GOUT, 27, 0, 28) },
  { pnode(GPIO, 27, 0, SCLR, 0, -1), rnode(GOUT, 27, 0, 31) },
  { pnode(GPIO, 27, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 27, 0, 10) },
  { pnode(GPIO, 27, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 27, 0, 8) },
  { pnode(GPIO, 27, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 27, 0, 14) },
  { pnode(GPIO, 27, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 27, 0, 12) },
  { pnode(GPIO, 27, 0, DATAIN, 1, 0), rnode(GOUT, 27, 0, 49) },
  { pnode(GPIO, 27, 0, DATAIN, 1, 1), rnode(GOUT, 27, 0, 41) },
  { pnode(GPIO, 27, 0, DATAIN, 1, 2), rnode(GOUT, 27, 0, 48) },
  { pnode(GPIO, 27, 0, DATAIN, 1, 3), rnode(GOUT, 27, 0, 40) },
  { pnode(GPIO, 27, 0, DATAOUT, 1, 0), rnode(GIN, 27, 0, 24) },
  { pnode(GPIO, 27, 0, DATAOUT, 1, 1), rnode(GIN, 27, 0, 23) },
  { pnode(GPIO, 27, 0, DATAOUT, 1, 2), rnode(GIN, 27, 0, 22) },
  { pnode(GPIO, 27, 0, DATAOUT, 1, 3), rnode(GIN, 27, 0, 21) },
  { pnode(GPIO, 27, 0, DATAOUT, 1, 4), rnode(GIN, 27, 0, 20) },
  { pnode(GPIO, 27, 0, OEIN, 1, 0), rnode(GOUT, 27, 0, 47) },
  { pnode(GPIO, 27, 0, OEIN, 1, 1), rnode(GOUT, 27, 0, 39) },
  { pnode(GPIO, 27, 0, BSLIPMAX, 1, -1), rnode(GIN, 27, 0, 25) },
  { pnode(GPIO, 27, 0, CEIN, 1, -1), rnode(GOUT, 27, 0, 51) },
  { pnode(GPIO, 27, 0, CEOUT, 1, -1), rnode(GOUT, 27, 0, 50) },
  { pnode(GPIO, 27, 0, ACLR, 1, -1), rnode(GOUT, 27, 0, 42) },
  { pnode(GPIO, 27, 0, SCLR, 1, -1), rnode(GOUT, 27, 0, 46) },
  { pnode(GPIO, 27, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 27, 0, 11) },
  { pnode(GPIO, 27, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 27, 0, 9) },
  { pnode(GPIO, 27, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 27, 0, 15) },
  { pnode(GPIO, 27, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 27, 0, 13) },
  { pnode(GPIO, 27, 0, DATAIN, 2, 0), rnode(GOUT, 27, 0, 14) },
  { pnode(GPIO, 27, 0, DATAIN, 2, 1), rnode(GOUT, 27, 0, 22) },
  { pnode(GPIO, 27, 0, DATAIN, 2, 2), rnode(GOUT, 27, 0, 15) },
  { pnode(GPIO, 27, 0, DATAIN, 2, 3), rnode(GOUT, 27, 0, 23) },
  { pnode(GPIO, 27, 0, DATAOUT, 2, 0), rnode(GIN, 27, 0, 8) },
  { pnode(GPIO, 27, 0, DATAOUT, 2, 1), rnode(GIN, 27, 0, 9) },
  { pnode(GPIO, 27, 0, DATAOUT, 2, 2), rnode(GIN, 27, 0, 10) },
  { pnode(GPIO, 27, 0, DATAOUT, 2, 3), rnode(GIN, 27, 0, 11) },
  { pnode(GPIO, 27, 0, DATAOUT, 2, 4), rnode(GIN, 27, 0, 12) },
  { pnode(GPIO, 27, 0, OEIN, 2, 0), rnode(GOUT, 27, 0, 16) },
  { pnode(GPIO, 27, 0, OEIN, 2, 1), rnode(GOUT, 27, 0, 24) },
  { pnode(GPIO, 27, 0, BSLIPMAX, 2, -1), rnode(GIN, 27, 0, 7) },
  { pnode(GPIO, 27, 0, CEIN, 2, -1), rnode(GOUT, 27, 0, 20) },
  { pnode(GPIO, 27, 0, CEOUT, 2, -1), rnode(GOUT, 27, 0, 13) },
  { pnode(GPIO, 27, 0, ACLR, 2, -1), rnode(GOUT, 27, 0, 21) },
  { pnode(GPIO, 27, 0, SCLR, 2, -1), rnode(GOUT, 27, 0, 25) },
  { pnode(GPIO, 27, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 27, 0, 5) },
  { pnode(GPIO, 27, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 27, 0, 7) },
  { pnode(GPIO, 27, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 27, 0, 1) },
  { pnode(GPIO, 27, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 27, 0, 3) },
  { pnode(GPIO, 27, 0, DATAIN, 3, 0), rnode(GOUT, 27, 0, 3) },
  { pnode(GPIO, 27, 0, DATAIN, 3, 1), rnode(GOUT, 27, 0, 17) },
  { pnode(GPIO, 27, 0, DATAIN, 3, 2), rnode(GOUT, 27, 0, 8) },
  { pnode(GPIO, 27, 0, DATAIN, 3, 3), rnode(GOUT, 27, 0, 18) },
  { pnode(GPIO, 27, 0, DATAOUT, 3, 0), rnode(GIN, 27, 0, 2) },
  { pnode(GPIO, 27, 0, DATAOUT, 3, 1), rnode(GIN, 27, 0, 3) },
  { pnode(GPIO, 27, 0, DATAOUT, 3, 2), rnode(GIN, 27, 0, 4) },
  { pnode(GPIO, 27, 0, DATAOUT, 3, 3), rnode(GIN, 27, 0, 5) },
  { pnode(GPIO, 27, 0, DATAOUT, 3, 4), rnode(GIN, 27, 0, 6) },
  { pnode(GPIO, 27, 0, OEIN, 3, 0), rnode(GOUT, 27, 0, 2) },
  { pnode(GPIO, 27, 0, OEIN, 3, 1), rnode(GOUT, 27, 0, 19) },
  { pnode(GPIO, 27, 0, BSLIPMAX, 3, -1), rnode(GIN, 27, 0, 1) },
  { pnode(GPIO, 27, 0, CEIN, 3, -1), rnode(GOUT, 27, 0, 5) },
  { pnode(GPIO, 27, 0, CEOUT, 3, -1), rnode(GOUT, 27, 0, 4) },
  { pnode(GPIO, 27, 0, ACLR, 3, -1), rnode(GOUT, 27, 0, 12) },
  { pnode(GPIO, 27, 0, SCLR, 3, -1), rnode(GOUT, 27, 0, 1) },
  { pnode(GPIO, 27, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 27, 0, 4) },
  { pnode(GPIO, 27, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 27, 0, 6) },
  { pnode(GPIO, 27, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 27, 0, 0) },
  { pnode(GPIO, 27, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 27, 0, 2) },
  { pnode(GPIO, 27, 39, DATAOUT, 0, 0), rnode(GIN, 27, 39, 18) },
  { pnode(GPIO, 27, 39, DATAOUT, 0, 1), rnode(GIN, 27, 39, 17) },
  { pnode(GPIO, 27, 39, DATAOUT, 0, 2), rnode(GIN, 27, 39, 16) },
  { pnode(GPIO, 27, 39, DATAOUT, 0, 3), rnode(GIN, 27, 39, 15) },
  { pnode(GPIO, 27, 39, DATAOUT, 0, 4), rnode(GIN, 27, 39, 14) },
  { pnode(GPIO, 27, 39, BSLIPMAX, 0, -1), rnode(GIN, 27, 39, 19) },
  { pnode(GPIO, 27, 39, CEIN, 0, -1), rnode(GOUT, 27, 39, 27) },
  { pnode(GPIO, 27, 39, CEOUT, 0, -1), rnode(GOUT, 27, 39, 45) },
  { pnode(GPIO, 27, 39, ACLR, 0, -1), rnode(GOUT, 27, 39, 28) },
  { pnode(GPIO, 27, 39, SCLR, 0, -1), rnode(GOUT, 27, 39, 31) },
  { pnode(GPIO, 27, 39, CLKIN_IN, 0, 0), rnode(DCMUX, 27, 39, 10) },
  { pnode(GPIO, 27, 39, CLKIN_IN, 0, 1), rnode(DCMUX, 27, 39, 8) },
  { pnode(GPIO, 27, 39, CLKIN_OUT, 0, 0), rnode(DCMUX, 27, 39, 14) },
  { pnode(GPIO, 27, 39, CLKIN_OUT, 0, 1), rnode(DCMUX, 27, 39, 12) },
  { pnode(GPIO, 27, 39, DATAOUT, 1, 0), rnode(GIN, 27, 39, 24) },
  { pnode(GPIO, 27, 39, DATAOUT, 1, 1), rnode(GIN, 27, 39, 23) },
  { pnode(GPIO, 27, 39, DATAOUT, 1, 2), rnode(GIN, 27, 39, 22) },
  { pnode(GPIO, 27, 39, DATAOUT, 1, 3), rnode(GIN, 27, 39, 21) },
  { pnode(GPIO, 27, 39, DATAOUT, 1, 4), rnode(GIN, 27, 39, 20) },
  { pnode(GPIO, 27, 39, BSLIPMAX, 1, -1), rnode(GIN, 27, 39, 25) },
  { pnode(GPIO, 27, 39, CEIN, 1, -1), rnode(GOUT, 27, 39, 51) },
  { pnode(GPIO, 27, 39, CEOUT, 1, -1), rnode(GOUT, 27, 39, 50) },
  { pnode(GPIO, 27, 39, ACLR, 1, -1), rnode(GOUT, 27, 39, 42) },
  { pnode(GPIO, 27, 39, SCLR, 1, -1), rnode(GOUT, 27, 39, 46) },
  { pnode(GPIO, 27, 39, CLKIN_IN, 1, 0), rnode(DCMUX, 27, 39, 11) },
  { pnode(GPIO, 27, 39, CLKIN_IN, 1, 1), rnode(DCMUX, 27, 39, 9) },
  { pnode(GPIO, 27, 39, CLKIN_OUT, 1, 0), rnode(DCMUX, 27, 39, 15) },
  { pnode(GPIO, 27, 39, CLKIN_OUT, 1, 1), rnode(DCMUX, 27, 39, 13) },
  { pnode(GPIO, 27, 39, DATAOUT, 2, 0), rnode(GIN, 27, 39, 8) },
  { pnode(GPIO, 27, 39, DATAOUT, 2, 1), rnode(GIN, 27, 39, 9) },
  { pnode(GPIO, 27, 39, DATAOUT, 2, 2), rnode(GIN, 27, 39, 10) },
  { pnode(GPIO, 27, 39, DATAOUT, 2, 3), rnode(GIN, 27, 39, 11) },
  { pnode(GPIO, 27, 39, DATAOUT, 2, 4), rnode(GIN, 27, 39, 12) },
  { pnode(GPIO, 27, 39, OEIN, 2, 0), rnode(GOUT, 27, 39, 16) },
  { pnode(GPIO, 27, 39, OEIN, 2, 1), rnode(GOUT, 27, 39, 24) },
  { pnode(GPIO, 27, 39, BSLIPMAX, 2, -1), rnode(GIN, 27, 39, 7) },
  { pnode(GPIO, 27, 39, CEIN, 2, -1), rnode(GOUT, 27, 39, 20) },
  { pnode(GPIO, 27, 39, CEOUT, 2, -1), rnode(GOUT, 27, 39, 13) },
  { pnode(GPIO, 27, 39, SCLR, 2, -1), rnode(GOUT, 27, 39, 25) },
  { pnode(GPIO, 27, 39, CLKIN_IN, 2, 0), rnode(DCMUX, 27, 39, 5) },
  { pnode(GPIO, 27, 39, CLKIN_IN, 2, 1), rnode(DCMUX, 27, 39, 7) },
  { pnode(GPIO, 27, 39, CLKIN_OUT, 2, 0), rnode(DCMUX, 27, 39, 1) },
  { pnode(GPIO, 27, 39, CLKIN_OUT, 2, 1), rnode(DCMUX, 27, 39, 3) },
  { pnode(GPIO, 27, 39, DATAOUT, 3, 4), rnode(GIN, 27, 39, 6) },
  { pnode(GPIO, 27, 39, BSLIPMAX, 3, -1), rnode(GIN, 27, 39, 1) },
  { pnode(GPIO, 27, 39, CEIN, 3, -1), rnode(GOUT, 27, 39, 5) },
  { pnode(GPIO, 27, 39, CEOUT, 3, -1), rnode(GOUT, 27, 39, 4) },
  { pnode(GPIO, 27, 39, ACLR, 3, -1), rnode(GOUT, 27, 39, 12) },
  { pnode(GPIO, 27, 39, SCLR, 3, -1), rnode(GOUT, 27, 39, 1) },
  { pnode(GPIO, 27, 39, CLKIN_IN, 3, 0), rnode(DCMUX, 27, 39, 4) },
  { pnode(GPIO, 27, 39, CLKIN_IN, 3, 1), rnode(DCMUX, 27, 39, 6) },
  { pnode(GPIO, 27, 39, CLKIN_OUT, 3, 0), rnode(DCMUX, 27, 39, 0) },
  { pnode(GPIO, 27, 39, CLKIN_OUT, 3, 1), rnode(DCMUX, 27, 39, 2) },
  { pnode(GPIO, 28, 0, DATAIN, 0, 0), rnode(GOUT, 28, 0, 44) },
  { pnode(GPIO, 28, 0, DATAIN, 0, 1), rnode(GOUT, 28, 0, 34) },
  { pnode(GPIO, 28, 0, DATAIN, 0, 2), rnode(GOUT, 28, 0, 43) },
  { pnode(GPIO, 28, 0, DATAIN, 0, 3), rnode(GOUT, 28, 0, 29) },
  { pnode(GPIO, 28, 0, DATAOUT, 0, 0), rnode(GIN, 28, 0, 18) },
  { pnode(GPIO, 28, 0, DATAOUT, 0, 1), rnode(GIN, 28, 0, 17) },
  { pnode(GPIO, 28, 0, DATAOUT, 0, 2), rnode(GIN, 28, 0, 16) },
  { pnode(GPIO, 28, 0, DATAOUT, 0, 3), rnode(GIN, 28, 0, 15) },
  { pnode(GPIO, 28, 0, DATAOUT, 0, 4), rnode(GIN, 28, 0, 14) },
  { pnode(GPIO, 28, 0, OEIN, 0, 0), rnode(GOUT, 28, 0, 38) },
  { pnode(GPIO, 28, 0, OEIN, 0, 1), rnode(GOUT, 28, 0, 30) },
  { pnode(GPIO, 28, 0, BSLIPMAX, 0, -1), rnode(GIN, 28, 0, 19) },
  { pnode(GPIO, 28, 0, CEIN, 0, -1), rnode(GOUT, 28, 0, 27) },
  { pnode(GPIO, 28, 0, CEOUT, 0, -1), rnode(GOUT, 28, 0, 45) },
  { pnode(GPIO, 28, 0, ACLR, 0, -1), rnode(GOUT, 28, 0, 28) },
  { pnode(GPIO, 28, 0, SCLR, 0, -1), rnode(GOUT, 28, 0, 31) },
  { pnode(GPIO, 28, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 28, 0, 10) },
  { pnode(GPIO, 28, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 28, 0, 8) },
  { pnode(GPIO, 28, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 28, 0, 14) },
  { pnode(GPIO, 28, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 28, 0, 12) },
  { pnode(GPIO, 28, 0, DATAIN, 1, 0), rnode(GOUT, 28, 0, 49) },
  { pnode(GPIO, 28, 0, DATAIN, 1, 1), rnode(GOUT, 28, 0, 41) },
  { pnode(GPIO, 28, 0, DATAIN, 1, 2), rnode(GOUT, 28, 0, 48) },
  { pnode(GPIO, 28, 0, DATAIN, 1, 3), rnode(GOUT, 28, 0, 40) },
  { pnode(GPIO, 28, 0, DATAOUT, 1, 0), rnode(GIN, 28, 0, 24) },
  { pnode(GPIO, 28, 0, DATAOUT, 1, 1), rnode(GIN, 28, 0, 23) },
  { pnode(GPIO, 28, 0, DATAOUT, 1, 2), rnode(GIN, 28, 0, 22) },
  { pnode(GPIO, 28, 0, DATAOUT, 1, 3), rnode(GIN, 28, 0, 21) },
  { pnode(GPIO, 28, 0, DATAOUT, 1, 4), rnode(GIN, 28, 0, 20) },
  { pnode(GPIO, 28, 0, OEIN, 1, 0), rnode(GOUT, 28, 0, 47) },
  { pnode(GPIO, 28, 0, OEIN, 1, 1), rnode(GOUT, 28, 0, 39) },
  { pnode(GPIO, 28, 0, BSLIPMAX, 1, -1), rnode(GIN, 28, 0, 25) },
  { pnode(GPIO, 28, 0, CEIN, 1, -1), rnode(GOUT, 28, 0, 51) },
  { pnode(GPIO, 28, 0, CEOUT, 1, -1), rnode(GOUT, 28, 0, 50) },
  { pnode(GPIO, 28, 0, ACLR, 1, -1), rnode(GOUT, 28, 0, 42) },
  { pnode(GPIO, 28, 0, SCLR, 1, -1), rnode(GOUT, 28, 0, 46) },
  { pnode(GPIO, 28, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 28, 0, 11) },
  { pnode(GPIO, 28, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 28, 0, 9) },
  { pnode(GPIO, 28, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 28, 0, 15) },
  { pnode(GPIO, 28, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 28, 0, 13) },
  { pnode(GPIO, 28, 0, DATAIN, 2, 0), rnode(GOUT, 28, 0, 14) },
  { pnode(GPIO, 28, 0, DATAIN, 2, 1), rnode(GOUT, 28, 0, 22) },
  { pnode(GPIO, 28, 0, DATAIN, 2, 2), rnode(GOUT, 28, 0, 15) },
  { pnode(GPIO, 28, 0, DATAIN, 2, 3), rnode(GOUT, 28, 0, 23) },
  { pnode(GPIO, 28, 0, DATAOUT, 2, 0), rnode(GIN, 28, 0, 8) },
  { pnode(GPIO, 28, 0, DATAOUT, 2, 1), rnode(GIN, 28, 0, 9) },
  { pnode(GPIO, 28, 0, DATAOUT, 2, 2), rnode(GIN, 28, 0, 10) },
  { pnode(GPIO, 28, 0, DATAOUT, 2, 3), rnode(GIN, 28, 0, 11) },
  { pnode(GPIO, 28, 0, DATAOUT, 2, 4), rnode(GIN, 28, 0, 12) },
  { pnode(GPIO, 28, 0, OEIN, 2, 0), rnode(GOUT, 28, 0, 16) },
  { pnode(GPIO, 28, 0, OEIN, 2, 1), rnode(GOUT, 28, 0, 24) },
  { pnode(GPIO, 28, 0, BSLIPMAX, 2, -1), rnode(GIN, 28, 0, 7) },
  { pnode(GPIO, 28, 0, CEIN, 2, -1), rnode(GOUT, 28, 0, 20) },
  { pnode(GPIO, 28, 0, CEOUT, 2, -1), rnode(GOUT, 28, 0, 13) },
  { pnode(GPIO, 28, 0, ACLR, 2, -1), rnode(GOUT, 28, 0, 21) },
  { pnode(GPIO, 28, 0, SCLR, 2, -1), rnode(GOUT, 28, 0, 25) },
  { pnode(GPIO, 28, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 28, 0, 5) },
  { pnode(GPIO, 28, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 28, 0, 7) },
  { pnode(GPIO, 28, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 28, 0, 1) },
  { pnode(GPIO, 28, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 28, 0, 3) },
  { pnode(GPIO, 28, 0, DATAIN, 3, 0), rnode(GOUT, 28, 0, 3) },
  { pnode(GPIO, 28, 0, DATAIN, 3, 1), rnode(GOUT, 28, 0, 17) },
  { pnode(GPIO, 28, 0, DATAIN, 3, 2), rnode(GOUT, 28, 0, 8) },
  { pnode(GPIO, 28, 0, DATAIN, 3, 3), rnode(GOUT, 28, 0, 18) },
  { pnode(GPIO, 28, 0, DATAOUT, 3, 0), rnode(GIN, 28, 0, 2) },
  { pnode(GPIO, 28, 0, DATAOUT, 3, 1), rnode(GIN, 28, 0, 3) },
  { pnode(GPIO, 28, 0, DATAOUT, 3, 2), rnode(GIN, 28, 0, 4) },
  { pnode(GPIO, 28, 0, DATAOUT, 3, 3), rnode(GIN, 28, 0, 5) },
  { pnode(GPIO, 28, 0, DATAOUT, 3, 4), rnode(GIN, 28, 0, 6) },
  { pnode(GPIO, 28, 0, OEIN, 3, 0), rnode(GOUT, 28, 0, 2) },
  { pnode(GPIO, 28, 0, OEIN, 3, 1), rnode(GOUT, 28, 0, 19) },
  { pnode(GPIO, 28, 0, BSLIPMAX, 3, -1), rnode(GIN, 28, 0, 1) },
  { pnode(GPIO, 28, 0, CEIN, 3, -1), rnode(GOUT, 28, 0, 5) },
  { pnode(GPIO, 28, 0, CEOUT, 3, -1), rnode(GOUT, 28, 0, 4) },
  { pnode(GPIO, 28, 0, ACLR, 3, -1), rnode(GOUT, 28, 0, 12) },
  { pnode(GPIO, 28, 0, SCLR, 3, -1), rnode(GOUT, 28, 0, 1) },
  { pnode(GPIO, 28, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 28, 0, 4) },
  { pnode(GPIO, 28, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 28, 0, 6) },
  { pnode(GPIO, 28, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 28, 0, 0) },
  { pnode(GPIO, 28, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 28, 0, 2) },
  { pnode(GPIO, 29, 39, DATAOUT, 0, 4), rnode(GIN, 29, 39, 14) },
  { pnode(GPIO, 29, 39, BSLIPMAX, 0, -1), rnode(GIN, 29, 39, 19) },
  { pnode(GPIO, 29, 39, CEIN, 0, -1), rnode(GOUT, 29, 39, 27) },
  { pnode(GPIO, 29, 39, CEOUT, 0, -1), rnode(GOUT, 29, 39, 45) },
  { pnode(GPIO, 29, 39, ACLR, 0, -1), rnode(GOUT, 29, 39, 28) },
  { pnode(GPIO, 29, 39, SCLR, 0, -1), rnode(GOUT, 29, 39, 31) },
  { pnode(GPIO, 29, 39, CLKIN_IN, 0, 0), rnode(DCMUX, 29, 39, 10) },
  { pnode(GPIO, 29, 39, CLKIN_IN, 0, 1), rnode(DCMUX, 29, 39, 8) },
  { pnode(GPIO, 29, 39, CLKIN_OUT, 0, 0), rnode(DCMUX, 29, 39, 14) },
  { pnode(GPIO, 29, 39, CLKIN_OUT, 0, 1), rnode(DCMUX, 29, 39, 12) },
  { pnode(GPIO, 29, 39, DATAOUT, 1, 4), rnode(GIN, 29, 39, 20) },
  { pnode(GPIO, 29, 39, BSLIPMAX, 1, -1), rnode(GIN, 29, 39, 25) },
  { pnode(GPIO, 29, 39, CEIN, 1, -1), rnode(GOUT, 29, 39, 51) },
  { pnode(GPIO, 29, 39, CEOUT, 1, -1), rnode(GOUT, 29, 39, 50) },
  { pnode(GPIO, 29, 39, ACLR, 1, -1), rnode(GOUT, 29, 39, 42) },
  { pnode(GPIO, 29, 39, SCLR, 1, -1), rnode(GOUT, 29, 39, 46) },
  { pnode(GPIO, 29, 39, CLKIN_IN, 1, 0), rnode(DCMUX, 29, 39, 11) },
  { pnode(GPIO, 29, 39, CLKIN_IN, 1, 1), rnode(DCMUX, 29, 39, 9) },
  { pnode(GPIO, 29, 39, CLKIN_OUT, 1, 0), rnode(DCMUX, 29, 39, 15) },
  { pnode(GPIO, 29, 39, CLKIN_OUT, 1, 1), rnode(DCMUX, 29, 39, 13) },
  { pnode(GPIO, 29, 39, DATAOUT, 2, 4), rnode(GIN, 29, 39, 12) },
  { pnode(GPIO, 29, 39, BSLIPMAX, 2, -1), rnode(GIN, 29, 39, 7) },
  { pnode(GPIO, 29, 39, CEIN, 2, -1), rnode(GOUT, 29, 39, 20) },
  { pnode(GPIO, 29, 39, CEOUT, 2, -1), rnode(GOUT, 29, 39, 13) },
  { pnode(GPIO, 29, 39, ACLR, 2, -1), rnode(GOUT, 29, 39, 21) },
  { pnode(GPIO, 29, 39, SCLR, 2, -1), rnode(GOUT, 29, 39, 25) },
  { pnode(GPIO, 29, 39, CLKIN_IN, 2, 0), rnode(DCMUX, 29, 39, 5) },
  { pnode(GPIO, 29, 39, CLKIN_IN, 2, 1), rnode(DCMUX, 29, 39, 7) },
  { pnode(GPIO, 29, 39, CLKIN_OUT, 2, 0), rnode(DCMUX, 29, 39, 1) },
  { pnode(GPIO, 29, 39, CLKIN_OUT, 2, 1), rnode(DCMUX, 29, 39, 3) },
  { pnode(GPIO, 29, 39, DATAOUT, 3, 0), rnode(GIN, 29, 39, 2) },
  { pnode(GPIO, 29, 39, DATAOUT, 3, 1), rnode(GIN, 29, 39, 3) },
  { pnode(GPIO, 29, 39, DATAOUT, 3, 2), rnode(GIN, 29, 39, 4) },
  { pnode(GPIO, 29, 39, DATAOUT, 3, 3), rnode(GIN, 29, 39, 5) },
  { pnode(GPIO, 29, 39, DATAOUT, 3, 4), rnode(GIN, 29, 39, 6) },
  { pnode(GPIO, 29, 39, OEIN, 3, 0), rnode(GOUT, 29, 39, 2) },
  { pnode(GPIO, 29, 39, OEIN, 3, 1), rnode(GOUT, 29, 39, 19) },
  { pnode(GPIO, 29, 39, BSLIPMAX, 3, -1), rnode(GIN, 29, 39, 1) },
  { pnode(GPIO, 29, 39, CEIN, 3, -1), rnode(GOUT, 29, 39, 5) },
  { pnode(GPIO, 29, 39, CEOUT, 3, -1), rnode(GOUT, 29, 39, 4) },
  { pnode(GPIO, 29, 39, SCLR, 3, -1), rnode(GOUT, 29, 39, 1) },
  { pnode(GPIO, 29, 39, CLKIN_IN, 3, 0), rnode(DCMUX, 29, 39, 4) },
  { pnode(GPIO, 29, 39, CLKIN_IN, 3, 1), rnode(DCMUX, 29, 39, 6) },
  { pnode(GPIO, 29, 39, CLKIN_OUT, 3, 0), rnode(DCMUX, 29, 39, 0) },
  { pnode(GPIO, 29, 39, CLKIN_OUT, 3, 1), rnode(DCMUX, 29, 39, 2) },
  { pnode(GPIO, 30, 0, DATAIN, 0, 0), rnode(GOUT, 30, 0, 44) },
  { pnode(GPIO, 30, 0, DATAIN, 0, 1), rnode(GOUT, 30, 0, 34) },
  { pnode(GPIO, 30, 0, DATAIN, 0, 2), rnode(GOUT, 30, 0, 43) },
  { pnode(GPIO, 30, 0, DATAIN, 0, 3), rnode(GOUT, 30, 0, 29) },
  { pnode(GPIO, 30, 0, DATAOUT, 0, 0), rnode(GIN, 30, 0, 18) },
  { pnode(GPIO, 30, 0, DATAOUT, 0, 1), rnode(GIN, 30, 0, 17) },
  { pnode(GPIO, 30, 0, DATAOUT, 0, 2), rnode(GIN, 30, 0, 16) },
  { pnode(GPIO, 30, 0, DATAOUT, 0, 3), rnode(GIN, 30, 0, 15) },
  { pnode(GPIO, 30, 0, DATAOUT, 0, 4), rnode(GIN, 30, 0, 14) },
  { pnode(GPIO, 30, 0, OEIN, 0, 0), rnode(GOUT, 30, 0, 38) },
  { pnode(GPIO, 30, 0, OEIN, 0, 1), rnode(GOUT, 30, 0, 30) },
  { pnode(GPIO, 30, 0, BSLIPMAX, 0, -1), rnode(GIN, 30, 0, 19) },
  { pnode(GPIO, 30, 0, CEIN, 0, -1), rnode(GOUT, 30, 0, 27) },
  { pnode(GPIO, 30, 0, CEOUT, 0, -1), rnode(GOUT, 30, 0, 45) },
  { pnode(GPIO, 30, 0, ACLR, 0, -1), rnode(GOUT, 30, 0, 28) },
  { pnode(GPIO, 30, 0, SCLR, 0, -1), rnode(GOUT, 30, 0, 31) },
  { pnode(GPIO, 30, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 30, 0, 10) },
  { pnode(GPIO, 30, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 30, 0, 8) },
  { pnode(GPIO, 30, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 30, 0, 14) },
  { pnode(GPIO, 30, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 30, 0, 12) },
  { pnode(GPIO, 30, 0, DATAIN, 1, 0), rnode(GOUT, 30, 0, 49) },
  { pnode(GPIO, 30, 0, DATAIN, 1, 1), rnode(GOUT, 30, 0, 41) },
  { pnode(GPIO, 30, 0, DATAIN, 1, 2), rnode(GOUT, 30, 0, 48) },
  { pnode(GPIO, 30, 0, DATAIN, 1, 3), rnode(GOUT, 30, 0, 40) },
  { pnode(GPIO, 30, 0, DATAOUT, 1, 0), rnode(GIN, 30, 0, 24) },
  { pnode(GPIO, 30, 0, DATAOUT, 1, 1), rnode(GIN, 30, 0, 23) },
  { pnode(GPIO, 30, 0, DATAOUT, 1, 2), rnode(GIN, 30, 0, 22) },
  { pnode(GPIO, 30, 0, DATAOUT, 1, 3), rnode(GIN, 30, 0, 21) },
  { pnode(GPIO, 30, 0, DATAOUT, 1, 4), rnode(GIN, 30, 0, 20) },
  { pnode(GPIO, 30, 0, OEIN, 1, 0), rnode(GOUT, 30, 0, 47) },
  { pnode(GPIO, 30, 0, OEIN, 1, 1), rnode(GOUT, 30, 0, 39) },
  { pnode(GPIO, 30, 0, BSLIPMAX, 1, -1), rnode(GIN, 30, 0, 25) },
  { pnode(GPIO, 30, 0, CEIN, 1, -1), rnode(GOUT, 30, 0, 51) },
  { pnode(GPIO, 30, 0, CEOUT, 1, -1), rnode(GOUT, 30, 0, 50) },
  { pnode(GPIO, 30, 0, ACLR, 1, -1), rnode(GOUT, 30, 0, 42) },
  { pnode(GPIO, 30, 0, SCLR, 1, -1), rnode(GOUT, 30, 0, 46) },
  { pnode(GPIO, 30, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 30, 0, 11) },
  { pnode(GPIO, 30, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 30, 0, 9) },
  { pnode(GPIO, 30, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 30, 0, 15) },
  { pnode(GPIO, 30, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 30, 0, 13) },
  { pnode(GPIO, 30, 0, DATAIN, 2, 0), rnode(GOUT, 30, 0, 14) },
  { pnode(GPIO, 30, 0, DATAIN, 2, 1), rnode(GOUT, 30, 0, 22) },
  { pnode(GPIO, 30, 0, DATAIN, 2, 2), rnode(GOUT, 30, 0, 15) },
  { pnode(GPIO, 30, 0, DATAIN, 2, 3), rnode(GOUT, 30, 0, 23) },
  { pnode(GPIO, 30, 0, DATAOUT, 2, 0), rnode(GIN, 30, 0, 8) },
  { pnode(GPIO, 30, 0, DATAOUT, 2, 1), rnode(GIN, 30, 0, 9) },
  { pnode(GPIO, 30, 0, DATAOUT, 2, 2), rnode(GIN, 30, 0, 10) },
  { pnode(GPIO, 30, 0, DATAOUT, 2, 3), rnode(GIN, 30, 0, 11) },
  { pnode(GPIO, 30, 0, DATAOUT, 2, 4), rnode(GIN, 30, 0, 12) },
  { pnode(GPIO, 30, 0, OEIN, 2, 0), rnode(GOUT, 30, 0, 16) },
  { pnode(GPIO, 30, 0, OEIN, 2, 1), rnode(GOUT, 30, 0, 24) },
  { pnode(GPIO, 30, 0, BSLIPMAX, 2, -1), rnode(GIN, 30, 0, 7) },
  { pnode(GPIO, 30, 0, CEIN, 2, -1), rnode(GOUT, 30, 0, 20) },
  { pnode(GPIO, 30, 0, CEOUT, 2, -1), rnode(GOUT, 30, 0, 13) },
  { pnode(GPIO, 30, 0, ACLR, 2, -1), rnode(GOUT, 30, 0, 21) },
  { pnode(GPIO, 30, 0, SCLR, 2, -1), rnode(GOUT, 30, 0, 25) },
  { pnode(GPIO, 30, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 30, 0, 5) },
  { pnode(GPIO, 30, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 30, 0, 7) },
  { pnode(GPIO, 30, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 30, 0, 1) },
  { pnode(GPIO, 30, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 30, 0, 3) },
  { pnode(GPIO, 30, 0, DATAIN, 3, 0), rnode(GOUT, 30, 0, 3) },
  { pnode(GPIO, 30, 0, DATAIN, 3, 1), rnode(GOUT, 30, 0, 17) },
  { pnode(GPIO, 30, 0, DATAIN, 3, 2), rnode(GOUT, 30, 0, 8) },
  { pnode(GPIO, 30, 0, DATAIN, 3, 3), rnode(GOUT, 30, 0, 18) },
  { pnode(GPIO, 30, 0, DATAOUT, 3, 0), rnode(GIN, 30, 0, 2) },
  { pnode(GPIO, 30, 0, DATAOUT, 3, 1), rnode(GIN, 30, 0, 3) },
  { pnode(GPIO, 30, 0, DATAOUT, 3, 2), rnode(GIN, 30, 0, 4) },
  { pnode(GPIO, 30, 0, DATAOUT, 3, 3), rnode(GIN, 30, 0, 5) },
  { pnode(GPIO, 30, 0, DATAOUT, 3, 4), rnode(GIN, 30, 0, 6) },
  { pnode(GPIO, 30, 0, OEIN, 3, 0), rnode(GOUT, 30, 0, 2) },
  { pnode(GPIO, 30, 0, OEIN, 3, 1), rnode(GOUT, 30, 0, 19) },
  { pnode(GPIO, 30, 0, BSLIPMAX, 3, -1), rnode(GIN, 30, 0, 1) },
  { pnode(GPIO, 30, 0, CEIN, 3, -1), rnode(GOUT, 30, 0, 5) },
  { pnode(GPIO, 30, 0, CEOUT, 3, -1), rnode(GOUT, 30, 0, 4) },
  { pnode(GPIO, 30, 0, ACLR, 3, -1), rnode(GOUT, 30, 0, 12) },
  { pnode(GPIO, 30, 0, SCLR, 3, -1), rnode(GOUT, 30, 0, 1) },
  { pnode(GPIO, 30, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 30, 0, 4) },
  { pnode(GPIO, 30, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 30, 0, 6) },
  { pnode(GPIO, 30, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 30, 0, 0) },
  { pnode(GPIO, 30, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 30, 0, 2) },
  { pnode(GPIO, 31, 39, DATAIN, 0, 0), rnode(GOUT, 31, 39, 44) },
  { pnode(GPIO, 31, 39, DATAIN, 0, 1), rnode(GOUT, 31, 39, 34) },
  { pnode(GPIO, 31, 39, DATAIN, 0, 2), rnode(GOUT, 31, 39, 43) },
  { pnode(GPIO, 31, 39, DATAIN, 0, 3), rnode(GOUT, 31, 39, 29) },
  { pnode(GPIO, 31, 39, DATAOUT, 0, 0), rnode(GIN, 31, 39, 18) },
  { pnode(GPIO, 31, 39, DATAOUT, 0, 1), rnode(GIN, 31, 39, 17) },
  { pnode(GPIO, 31, 39, DATAOUT, 0, 2), rnode(GIN, 31, 39, 16) },
  { pnode(GPIO, 31, 39, DATAOUT, 0, 3), rnode(GIN, 31, 39, 15) },
  { pnode(GPIO, 31, 39, DATAOUT, 0, 4), rnode(GIN, 31, 39, 14) },
  { pnode(GPIO, 31, 39, OEIN, 0, 0), rnode(GOUT, 31, 39, 38) },
  { pnode(GPIO, 31, 39, OEIN, 0, 1), rnode(GOUT, 31, 39, 30) },
  { pnode(GPIO, 31, 39, BSLIPMAX, 0, -1), rnode(GIN, 31, 39, 19) },
  { pnode(GPIO, 31, 39, CEIN, 0, -1), rnode(GOUT, 31, 39, 27) },
  { pnode(GPIO, 31, 39, CEOUT, 0, -1), rnode(GOUT, 31, 39, 45) },
  { pnode(GPIO, 31, 39, ACLR, 0, -1), rnode(GOUT, 31, 39, 28) },
  { pnode(GPIO, 31, 39, SCLR, 0, -1), rnode(GOUT, 31, 39, 31) },
  { pnode(GPIO, 31, 39, CLKIN_IN, 0, 0), rnode(DCMUX, 31, 39, 10) },
  { pnode(GPIO, 31, 39, CLKIN_IN, 0, 1), rnode(DCMUX, 31, 39, 8) },
  { pnode(GPIO, 31, 39, CLKIN_OUT, 0, 0), rnode(DCMUX, 31, 39, 14) },
  { pnode(GPIO, 31, 39, CLKIN_OUT, 0, 1), rnode(DCMUX, 31, 39, 12) },
  { pnode(GPIO, 31, 39, DATAIN, 1, 0), rnode(GOUT, 31, 39, 49) },
  { pnode(GPIO, 31, 39, DATAIN, 1, 1), rnode(GOUT, 31, 39, 41) },
  { pnode(GPIO, 31, 39, DATAIN, 1, 2), rnode(GOUT, 31, 39, 48) },
  { pnode(GPIO, 31, 39, DATAIN, 1, 3), rnode(GOUT, 31, 39, 40) },
  { pnode(GPIO, 31, 39, DATAOUT, 1, 0), rnode(GIN, 31, 39, 24) },
  { pnode(GPIO, 31, 39, DATAOUT, 1, 1), rnode(GIN, 31, 39, 23) },
  { pnode(GPIO, 31, 39, DATAOUT, 1, 2), rnode(GIN, 31, 39, 22) },
  { pnode(GPIO, 31, 39, DATAOUT, 1, 3), rnode(GIN, 31, 39, 21) },
  { pnode(GPIO, 31, 39, DATAOUT, 1, 4), rnode(GIN, 31, 39, 20) },
  { pnode(GPIO, 31, 39, OEIN, 1, 0), rnode(GOUT, 31, 39, 47) },
  { pnode(GPIO, 31, 39, OEIN, 1, 1), rnode(GOUT, 31, 39, 39) },
  { pnode(GPIO, 31, 39, BSLIPMAX, 1, -1), rnode(GIN, 31, 39, 25) },
  { pnode(GPIO, 31, 39, CEIN, 1, -1), rnode(GOUT, 31, 39, 51) },
  { pnode(GPIO, 31, 39, CEOUT, 1, -1), rnode(GOUT, 31, 39, 50) },
  { pnode(GPIO, 31, 39, ACLR, 1, -1), rnode(GOUT, 31, 39, 42) },
  { pnode(GPIO, 31, 39, SCLR, 1, -1), rnode(GOUT, 31, 39, 46) },
  { pnode(GPIO, 31, 39, CLKIN_IN, 1, 0), rnode(DCMUX, 31, 39, 11) },
  { pnode(GPIO, 31, 39, CLKIN_IN, 1, 1), rnode(DCMUX, 31, 39, 9) },
  { pnode(GPIO, 31, 39, CLKIN_OUT, 1, 0), rnode(DCMUX, 31, 39, 15) },
  { pnode(GPIO, 31, 39, CLKIN_OUT, 1, 1), rnode(DCMUX, 31, 39, 13) },
  { pnode(GPIO, 31, 39, DATAOUT, 2, 0), rnode(GIN, 31, 39, 8) },
  { pnode(GPIO, 31, 39, DATAOUT, 2, 1), rnode(GIN, 31, 39, 9) },
  { pnode(GPIO, 31, 39, DATAOUT, 2, 2), rnode(GIN, 31, 39, 10) },
  { pnode(GPIO, 31, 39, DATAOUT, 2, 3), rnode(GIN, 31, 39, 11) },
  { pnode(GPIO, 31, 39, DATAOUT, 2, 4), rnode(GIN, 31, 39, 12) },
  { pnode(GPIO, 31, 39, OEIN, 2, 0), rnode(GOUT, 31, 39, 16) },
  { pnode(GPIO, 31, 39, OEIN, 2, 1), rnode(GOUT, 31, 39, 24) },
  { pnode(GPIO, 31, 39, BSLIPMAX, 2, -1), rnode(GIN, 31, 39, 7) },
  { pnode(GPIO, 31, 39, CEIN, 2, -1), rnode(GOUT, 31, 39, 20) },
  { pnode(GPIO, 31, 39, CEOUT, 2, -1), rnode(GOUT, 31, 39, 13) },
  { pnode(GPIO, 31, 39, ACLR, 2, -1), rnode(GOUT, 31, 39, 21) },
  { pnode(GPIO, 31, 39, SCLR, 2, -1), rnode(GOUT, 31, 39, 25) },
  { pnode(GPIO, 31, 39, CLKIN_IN, 2, 0), rnode(DCMUX, 31, 39, 5) },
  { pnode(GPIO, 31, 39, CLKIN_IN, 2, 1), rnode(DCMUX, 31, 39, 7) },
  { pnode(GPIO, 31, 39, CLKIN_OUT, 2, 0), rnode(DCMUX, 31, 39, 1) },
  { pnode(GPIO, 31, 39, CLKIN_OUT, 2, 1), rnode(DCMUX, 31, 39, 3) },
  { pnode(GPIO, 31, 39, DATAOUT, 3, 4), rnode(GIN, 31, 39, 6) },
  { pnode(GPIO, 31, 39, BSLIPMAX, 3, -1), rnode(GIN, 31, 39, 1) },
  { pnode(GPIO, 31, 39, CEIN, 3, -1), rnode(GOUT, 31, 39, 5) },
  { pnode(GPIO, 31, 39, CEOUT, 3, -1), rnode(GOUT, 31, 39, 4) },
  { pnode(GPIO, 31, 39, ACLR, 3, -1), rnode(GOUT, 31, 39, 12) },
  { pnode(GPIO, 31, 39, SCLR, 3, -1), rnode(GOUT, 31, 39, 1) },
  { pnode(GPIO, 31, 39, CLKIN_IN, 3, 0), rnode(DCMUX, 31, 39, 4) },
  { pnode(GPIO, 31, 39, CLKIN_IN, 3, 1), rnode(DCMUX, 31, 39, 6) },
  { pnode(GPIO, 31, 39, CLKIN_OUT, 3, 0), rnode(DCMUX, 31, 39, 0) },
  { pnode(GPIO, 31, 39, CLKIN_OUT, 3, 1), rnode(DCMUX, 31, 39, 2) },
  { pnode(GPIO, 32, 0, DATAIN, 0, 0), rnode(GOUT, 32, 0, 44) },
  { pnode(GPIO, 32, 0, DATAIN, 0, 1), rnode(GOUT, 32, 0, 34) },
  { pnode(GPIO, 32, 0, DATAIN, 0, 2), rnode(GOUT, 32, 0, 43) },
  { pnode(GPIO, 32, 0, DATAIN, 0, 3), rnode(GOUT, 32, 0, 29) },
  { pnode(GPIO, 32, 0, DATAOUT, 0, 0), rnode(GIN, 32, 0, 18) },
  { pnode(GPIO, 32, 0, DATAOUT, 0, 1), rnode(GIN, 32, 0, 17) },
  { pnode(GPIO, 32, 0, DATAOUT, 0, 2), rnode(GIN, 32, 0, 16) },
  { pnode(GPIO, 32, 0, DATAOUT, 0, 3), rnode(GIN, 32, 0, 15) },
  { pnode(GPIO, 32, 0, DATAOUT, 0, 4), rnode(GIN, 32, 0, 14) },
  { pnode(GPIO, 32, 0, OEIN, 0, 0), rnode(GOUT, 32, 0, 38) },
  { pnode(GPIO, 32, 0, OEIN, 0, 1), rnode(GOUT, 32, 0, 30) },
  { pnode(GPIO, 32, 0, BSLIPMAX, 0, -1), rnode(GIN, 32, 0, 19) },
  { pnode(GPIO, 32, 0, CEIN, 0, -1), rnode(GOUT, 32, 0, 27) },
  { pnode(GPIO, 32, 0, CEOUT, 0, -1), rnode(GOUT, 32, 0, 45) },
  { pnode(GPIO, 32, 0, ACLR, 0, -1), rnode(GOUT, 32, 0, 28) },
  { pnode(GPIO, 32, 0, SCLR, 0, -1), rnode(GOUT, 32, 0, 31) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 32, 0, 10) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 32, 0, 8) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 32, 0, 14) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 32, 0, 12) },
  { pnode(GPIO, 32, 0, DATAIN, 1, 0), rnode(GOUT, 32, 0, 49) },
  { pnode(GPIO, 32, 0, DATAIN, 1, 1), rnode(GOUT, 32, 0, 41) },
  { pnode(GPIO, 32, 0, DATAIN, 1, 2), rnode(GOUT, 32, 0, 48) },
  { pnode(GPIO, 32, 0, DATAIN, 1, 3), rnode(GOUT, 32, 0, 40) },
  { pnode(GPIO, 32, 0, DATAOUT, 1, 0), rnode(GIN, 32, 0, 24) },
  { pnode(GPIO, 32, 0, DATAOUT, 1, 1), rnode(GIN, 32, 0, 23) },
  { pnode(GPIO, 32, 0, DATAOUT, 1, 2), rnode(GIN, 32, 0, 22) },
  { pnode(GPIO, 32, 0, DATAOUT, 1, 3), rnode(GIN, 32, 0, 21) },
  { pnode(GPIO, 32, 0, DATAOUT, 1, 4), rnode(GIN, 32, 0, 20) },
  { pnode(GPIO, 32, 0, OEIN, 1, 0), rnode(GOUT, 32, 0, 47) },
  { pnode(GPIO, 32, 0, OEIN, 1, 1), rnode(GOUT, 32, 0, 39) },
  { pnode(GPIO, 32, 0, BSLIPMAX, 1, -1), rnode(GIN, 32, 0, 25) },
  { pnode(GPIO, 32, 0, CEIN, 1, -1), rnode(GOUT, 32, 0, 51) },
  { pnode(GPIO, 32, 0, CEOUT, 1, -1), rnode(GOUT, 32, 0, 50) },
  { pnode(GPIO, 32, 0, ACLR, 1, -1), rnode(GOUT, 32, 0, 42) },
  { pnode(GPIO, 32, 0, SCLR, 1, -1), rnode(GOUT, 32, 0, 46) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 32, 0, 11) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 32, 0, 9) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 32, 0, 15) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 32, 0, 13) },
  { pnode(GPIO, 32, 0, DATAIN, 2, 0), rnode(GOUT, 32, 0, 14) },
  { pnode(GPIO, 32, 0, DATAIN, 2, 1), rnode(GOUT, 32, 0, 22) },
  { pnode(GPIO, 32, 0, DATAIN, 2, 2), rnode(GOUT, 32, 0, 15) },
  { pnode(GPIO, 32, 0, DATAIN, 2, 3), rnode(GOUT, 32, 0, 23) },
  { pnode(GPIO, 32, 0, DATAOUT, 2, 0), rnode(GIN, 32, 0, 8) },
  { pnode(GPIO, 32, 0, DATAOUT, 2, 1), rnode(GIN, 32, 0, 9) },
  { pnode(GPIO, 32, 0, DATAOUT, 2, 2), rnode(GIN, 32, 0, 10) },
  { pnode(GPIO, 32, 0, DATAOUT, 2, 3), rnode(GIN, 32, 0, 11) },
  { pnode(GPIO, 32, 0, DATAOUT, 2, 4), rnode(GIN, 32, 0, 12) },
  { pnode(GPIO, 32, 0, OEIN, 2, 0), rnode(GOUT, 32, 0, 16) },
  { pnode(GPIO, 32, 0, OEIN, 2, 1), rnode(GOUT, 32, 0, 24) },
  { pnode(GPIO, 32, 0, BSLIPMAX, 2, -1), rnode(GIN, 32, 0, 7) },
  { pnode(GPIO, 32, 0, CEIN, 2, -1), rnode(GOUT, 32, 0, 20) },
  { pnode(GPIO, 32, 0, CEOUT, 2, -1), rnode(GOUT, 32, 0, 13) },
  { pnode(GPIO, 32, 0, ACLR, 2, -1), rnode(GOUT, 32, 0, 21) },
  { pnode(GPIO, 32, 0, SCLR, 2, -1), rnode(GOUT, 32, 0, 25) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 32, 0, 5) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 32, 0, 7) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 32, 0, 1) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 32, 0, 3) },
  { pnode(GPIO, 32, 0, DATAIN, 3, 0), rnode(GOUT, 32, 0, 3) },
  { pnode(GPIO, 32, 0, DATAIN, 3, 1), rnode(GOUT, 32, 0, 17) },
  { pnode(GPIO, 32, 0, DATAIN, 3, 2), rnode(GOUT, 32, 0, 8) },
  { pnode(GPIO, 32, 0, DATAIN, 3, 3), rnode(GOUT, 32, 0, 18) },
  { pnode(GPIO, 32, 0, DATAOUT, 3, 0), rnode(GIN, 32, 0, 2) },
  { pnode(GPIO, 32, 0, DATAOUT, 3, 1), rnode(GIN, 32, 0, 3) },
  { pnode(GPIO, 32, 0, DATAOUT, 3, 2), rnode(GIN, 32, 0, 4) },
  { pnode(GPIO, 32, 0, DATAOUT, 3, 3), rnode(GIN, 32, 0, 5) },
  { pnode(GPIO, 32, 0, DATAOUT, 3, 4), rnode(GIN, 32, 0, 6) },
  { pnode(GPIO, 32, 0, OEIN, 3, 0), rnode(GOUT, 32, 0, 2) },
  { pnode(GPIO, 32, 0, OEIN, 3, 1), rnode(GOUT, 32, 0, 19) },
  { pnode(GPIO, 32, 0, BSLIPMAX, 3, -1), rnode(GIN, 32, 0, 1) },
  { pnode(GPIO, 32, 0, CEIN, 3, -1), rnode(GOUT, 32, 0, 5) },
  { pnode(GPIO, 32, 0, CEOUT, 3, -1), rnode(GOUT, 32, 0, 4) },
  { pnode(GPIO, 32, 0, ACLR, 3, -1), rnode(GOUT, 32, 0, 12) },
  { pnode(GPIO, 32, 0, SCLR, 3, -1), rnode(GOUT, 32, 0, 1) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 32, 0, 4) },
  { pnode(GPIO, 32, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 32, 0, 6) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 32, 0, 0) },
  { pnode(GPIO, 32, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 32, 0, 2) },
  { pnode(GPIO, 33, 39, DATAOUT, 0, 4), rnode(GIN, 33, 39, 14) },
  { pnode(GPIO, 33, 39, BSLIPMAX, 0, -1), rnode(GIN, 33, 39, 19) },
  { pnode(GPIO, 33, 39, CEIN, 0, -1), rnode(GOUT, 33, 39, 27) },
  { pnode(GPIO, 33, 39, CEOUT, 0, -1), rnode(GOUT, 33, 39, 45) },
  { pnode(GPIO, 33, 39, ACLR, 0, -1), rnode(GOUT, 33, 39, 28) },
  { pnode(GPIO, 33, 39, SCLR, 0, -1), rnode(GOUT, 33, 39, 31) },
  { pnode(GPIO, 33, 39, CLKIN_IN, 0, 0), rnode(DCMUX, 33, 39, 10) },
  { pnode(GPIO, 33, 39, CLKIN_IN, 0, 1), rnode(DCMUX, 33, 39, 8) },
  { pnode(GPIO, 33, 39, CLKIN_OUT, 0, 0), rnode(DCMUX, 33, 39, 14) },
  { pnode(GPIO, 33, 39, CLKIN_OUT, 0, 1), rnode(DCMUX, 33, 39, 12) },
  { pnode(GPIO, 33, 39, DATAOUT, 1, 4), rnode(GIN, 33, 39, 20) },
  { pnode(GPIO, 33, 39, BSLIPMAX, 1, -1), rnode(GIN, 33, 39, 25) },
  { pnode(GPIO, 33, 39, CEIN, 1, -1), rnode(GOUT, 33, 39, 51) },
  { pnode(GPIO, 33, 39, CEOUT, 1, -1), rnode(GOUT, 33, 39, 50) },
  { pnode(GPIO, 33, 39, ACLR, 1, -1), rnode(GOUT, 33, 39, 42) },
  { pnode(GPIO, 33, 39, SCLR, 1, -1), rnode(GOUT, 33, 39, 46) },
  { pnode(GPIO, 33, 39, CLKIN_IN, 1, 0), rnode(DCMUX, 33, 39, 11) },
  { pnode(GPIO, 33, 39, CLKIN_IN, 1, 1), rnode(DCMUX, 33, 39, 9) },
  { pnode(GPIO, 33, 39, CLKIN_OUT, 1, 0), rnode(DCMUX, 33, 39, 15) },
  { pnode(GPIO, 33, 39, CLKIN_OUT, 1, 1), rnode(DCMUX, 33, 39, 13) },
  { pnode(GPIO, 33, 39, DATAOUT, 2, 4), rnode(GIN, 33, 39, 12) },
  { pnode(GPIO, 33, 39, BSLIPMAX, 2, -1), rnode(GIN, 33, 39, 7) },
  { pnode(GPIO, 33, 39, CEIN, 2, -1), rnode(GOUT, 33, 39, 20) },
  { pnode(GPIO, 33, 39, CEOUT, 2, -1), rnode(GOUT, 33, 39, 13) },
  { pnode(GPIO, 33, 39, ACLR, 2, -1), rnode(GOUT, 33, 39, 21) },
  { pnode(GPIO, 33, 39, SCLR, 2, -1), rnode(GOUT, 33, 39, 25) },
  { pnode(GPIO, 33, 39, CLKIN_IN, 2, 0), rnode(DCMUX, 33, 39, 5) },
  { pnode(GPIO, 33, 39, CLKIN_IN, 2, 1), rnode(DCMUX, 33, 39, 7) },
  { pnode(GPIO, 33, 39, CLKIN_OUT, 2, 0), rnode(DCMUX, 33, 39, 1) },
  { pnode(GPIO, 33, 39, CLKIN_OUT, 2, 1), rnode(DCMUX, 33, 39, 3) },
  { pnode(GPIO, 33, 39, DATAIN, 3, 0), rnode(GOUT, 33, 39, 3) },
  { pnode(GPIO, 33, 39, DATAIN, 3, 1), rnode(GOUT, 33, 39, 17) },
  { pnode(GPIO, 33, 39, DATAIN, 3, 2), rnode(GOUT, 33, 39, 8) },
  { pnode(GPIO, 33, 39, DATAIN, 3, 3), rnode(GOUT, 33, 39, 18) },
  { pnode(GPIO, 33, 39, DATAOUT, 3, 0), rnode(GIN, 33, 39, 2) },
  { pnode(GPIO, 33, 39, DATAOUT, 3, 1), rnode(GIN, 33, 39, 3) },
  { pnode(GPIO, 33, 39, DATAOUT, 3, 2), rnode(GIN, 33, 39, 4) },
  { pnode(GPIO, 33, 39, DATAOUT, 3, 3), rnode(GIN, 33, 39, 5) },
  { pnode(GPIO, 33, 39, DATAOUT, 3, 4), rnode(GIN, 33, 39, 6) },
  { pnode(GPIO, 33, 39, OEIN, 3, 0), rnode(GOUT, 33, 39, 2) },
  { pnode(GPIO, 33, 39, OEIN, 3, 1), rnode(GOUT, 33, 39, 19) },
  { pnode(GPIO, 33, 39, BSLIPMAX, 3, -1), rnode(GIN, 33, 39, 1) },
  { pnode(GPIO, 33, 39, CEIN, 3, -1), rnode(GOUT, 33, 39, 5) },
  { pnode(GPIO, 33, 39, CEOUT, 3, -1), rnode(GOUT, 33, 39, 4) },
  { pnode(GPIO, 33, 39, ACLR, 3, -1), rnode(GOUT, 33, 39, 12) },
  { pnode(GPIO, 33, 39, SCLR, 3, -1), rnode(GOUT, 33, 39, 1) },
  { pnode(GPIO, 33, 39, CLKIN_IN, 3, 0), rnode(DCMUX, 33, 39, 4) },
  { pnode(GPIO, 33, 39, CLKIN_IN, 3, 1), rnode(DCMUX, 33, 39, 6) },
  { pnode(GPIO, 33, 39, CLKIN_OUT, 3, 0), rnode(DCMUX, 33, 39, 0) },
  { pnode(GPIO, 33, 39, CLKIN_OUT, 3, 1), rnode(DCMUX, 33, 39, 2) },
  { pnode(GPIO, 34, 0, DATAIN, 0, 0), rnode(GOUT, 34, 0, 44) },
  { pnode(GPIO, 34, 0, DATAIN, 0, 1), rnode(GOUT, 34, 0, 34) },
  { pnode(GPIO, 34, 0, DATAIN, 0, 2), rnode(GOUT, 34, 0, 43) },
  { pnode(GPIO, 34, 0, DATAIN, 0, 3), rnode(GOUT, 34, 0, 29) },
  { pnode(GPIO, 34, 0, DATAOUT, 0, 0), rnode(GIN, 34, 0, 18) },
  { pnode(GPIO, 34, 0, DATAOUT, 0, 1), rnode(GIN, 34, 0, 17) },
  { pnode(GPIO, 34, 0, DATAOUT, 0, 2), rnode(GIN, 34, 0, 16) },
  { pnode(GPIO, 34, 0, DATAOUT, 0, 3), rnode(GIN, 34, 0, 15) },
  { pnode(GPIO, 34, 0, DATAOUT, 0, 4), rnode(GIN, 34, 0, 14) },
  { pnode(GPIO, 34, 0, OEIN, 0, 0), rnode(GOUT, 34, 0, 38) },
  { pnode(GPIO, 34, 0, OEIN, 0, 1), rnode(GOUT, 34, 0, 30) },
  { pnode(GPIO, 34, 0, BSLIPMAX, 0, -1), rnode(GIN, 34, 0, 19) },
  { pnode(GPIO, 34, 0, CEIN, 0, -1), rnode(GOUT, 34, 0, 27) },
  { pnode(GPIO, 34, 0, CEOUT, 0, -1), rnode(GOUT, 34, 0, 45) },
  { pnode(GPIO, 34, 0, ACLR, 0, -1), rnode(GOUT, 34, 0, 28) },
  { pnode(GPIO, 34, 0, SCLR, 0, -1), rnode(GOUT, 34, 0, 31) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 34, 0, 10) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 34, 0, 8) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 34, 0, 14) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 34, 0, 12) },
  { pnode(GPIO, 34, 0, DATAIN, 1, 0), rnode(GOUT, 34, 0, 49) },
  { pnode(GPIO, 34, 0, DATAIN, 1, 1), rnode(GOUT, 34, 0, 41) },
  { pnode(GPIO, 34, 0, DATAIN, 1, 2), rnode(GOUT, 34, 0, 48) },
  { pnode(GPIO, 34, 0, DATAIN, 1, 3), rnode(GOUT, 34, 0, 40) },
  { pnode(GPIO, 34, 0, DATAOUT, 1, 0), rnode(GIN, 34, 0, 24) },
  { pnode(GPIO, 34, 0, DATAOUT, 1, 1), rnode(GIN, 34, 0, 23) },
  { pnode(GPIO, 34, 0, DATAOUT, 1, 2), rnode(GIN, 34, 0, 22) },
  { pnode(GPIO, 34, 0, DATAOUT, 1, 3), rnode(GIN, 34, 0, 21) },
  { pnode(GPIO, 34, 0, DATAOUT, 1, 4), rnode(GIN, 34, 0, 20) },
  { pnode(GPIO, 34, 0, OEIN, 1, 0), rnode(GOUT, 34, 0, 47) },
  { pnode(GPIO, 34, 0, OEIN, 1, 1), rnode(GOUT, 34, 0, 39) },
  { pnode(GPIO, 34, 0, BSLIPMAX, 1, -1), rnode(GIN, 34, 0, 25) },
  { pnode(GPIO, 34, 0, CEIN, 1, -1), rnode(GOUT, 34, 0, 51) },
  { pnode(GPIO, 34, 0, CEOUT, 1, -1), rnode(GOUT, 34, 0, 50) },
  { pnode(GPIO, 34, 0, ACLR, 1, -1), rnode(GOUT, 34, 0, 42) },
  { pnode(GPIO, 34, 0, SCLR, 1, -1), rnode(GOUT, 34, 0, 46) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 34, 0, 11) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 34, 0, 9) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 34, 0, 15) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 34, 0, 13) },
  { pnode(GPIO, 34, 0, DATAIN, 2, 0), rnode(GOUT, 34, 0, 14) },
  { pnode(GPIO, 34, 0, DATAIN, 2, 1), rnode(GOUT, 34, 0, 22) },
  { pnode(GPIO, 34, 0, DATAIN, 2, 2), rnode(GOUT, 34, 0, 15) },
  { pnode(GPIO, 34, 0, DATAIN, 2, 3), rnode(GOUT, 34, 0, 23) },
  { pnode(GPIO, 34, 0, DATAOUT, 2, 0), rnode(GIN, 34, 0, 8) },
  { pnode(GPIO, 34, 0, DATAOUT, 2, 1), rnode(GIN, 34, 0, 9) },
  { pnode(GPIO, 34, 0, DATAOUT, 2, 2), rnode(GIN, 34, 0, 10) },
  { pnode(GPIO, 34, 0, DATAOUT, 2, 3), rnode(GIN, 34, 0, 11) },
  { pnode(GPIO, 34, 0, DATAOUT, 2, 4), rnode(GIN, 34, 0, 12) },
  { pnode(GPIO, 34, 0, OEIN, 2, 0), rnode(GOUT, 34, 0, 16) },
  { pnode(GPIO, 34, 0, OEIN, 2, 1), rnode(GOUT, 34, 0, 24) },
  { pnode(GPIO, 34, 0, BSLIPMAX, 2, -1), rnode(GIN, 34, 0, 7) },
  { pnode(GPIO, 34, 0, CEIN, 2, -1), rnode(GOUT, 34, 0, 20) },
  { pnode(GPIO, 34, 0, CEOUT, 2, -1), rnode(GOUT, 34, 0, 13) },
  { pnode(GPIO, 34, 0, ACLR, 2, -1), rnode(GOUT, 34, 0, 21) },
  { pnode(GPIO, 34, 0, SCLR, 2, -1), rnode(GOUT, 34, 0, 25) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 34, 0, 5) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 34, 0, 7) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 34, 0, 1) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 34, 0, 3) },
  { pnode(GPIO, 34, 0, DATAIN, 3, 0), rnode(GOUT, 34, 0, 3) },
  { pnode(GPIO, 34, 0, DATAIN, 3, 1), rnode(GOUT, 34, 0, 17) },
  { pnode(GPIO, 34, 0, DATAIN, 3, 2), rnode(GOUT, 34, 0, 8) },
  { pnode(GPIO, 34, 0, DATAIN, 3, 3), rnode(GOUT, 34, 0, 18) },
  { pnode(GPIO, 34, 0, DATAOUT, 3, 0), rnode(GIN, 34, 0, 2) },
  { pnode(GPIO, 34, 0, DATAOUT, 3, 1), rnode(GIN, 34, 0, 3) },
  { pnode(GPIO, 34, 0, DATAOUT, 3, 2), rnode(GIN, 34, 0, 4) },
  { pnode(GPIO, 34, 0, DATAOUT, 3, 3), rnode(GIN, 34, 0, 5) },
  { pnode(GPIO, 34, 0, DATAOUT, 3, 4), rnode(GIN, 34, 0, 6) },
  { pnode(GPIO, 34, 0, OEIN, 3, 0), rnode(GOUT, 34, 0, 2) },
  { pnode(GPIO, 34, 0, OEIN, 3, 1), rnode(GOUT, 34, 0, 19) },
  { pnode(GPIO, 34, 0, BSLIPMAX, 3, -1), rnode(GIN, 34, 0, 1) },
  { pnode(GPIO, 34, 0, CEIN, 3, -1), rnode(GOUT, 34, 0, 5) },
  { pnode(GPIO, 34, 0, CEOUT, 3, -1), rnode(GOUT, 34, 0, 4) },
  { pnode(GPIO, 34, 0, ACLR, 3, -1), rnode(GOUT, 34, 0, 12) },
  { pnode(GPIO, 34, 0, SCLR, 3, -1), rnode(GOUT, 34, 0, 1) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 34, 0, 4) },
  { pnode(GPIO, 34, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 34, 0, 6) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 34, 0, 0) },
  { pnode(GPIO, 34, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 34, 0, 2) },
  { pnode(GPIO, 35, 0, DATAIN, 0, 0), rnode(GOUT, 35, 0, 44) },
  { pnode(GPIO, 35, 0, DATAIN, 0, 1), rnode(GOUT, 35, 0, 34) },
  { pnode(GPIO, 35, 0, DATAIN, 0, 2), rnode(GOUT, 35, 0, 43) },
  { pnode(GPIO, 35, 0, DATAIN, 0, 3), rnode(GOUT, 35, 0, 29) },
  { pnode(GPIO, 35, 0, DATAOUT, 0, 0), rnode(GIN, 35, 0, 18) },
  { pnode(GPIO, 35, 0, DATAOUT, 0, 1), rnode(GIN, 35, 0, 17) },
  { pnode(GPIO, 35, 0, DATAOUT, 0, 2), rnode(GIN, 35, 0, 16) },
  { pnode(GPIO, 35, 0, DATAOUT, 0, 3), rnode(GIN, 35, 0, 15) },
  { pnode(GPIO, 35, 0, DATAOUT, 0, 4), rnode(GIN, 35, 0, 14) },
  { pnode(GPIO, 35, 0, OEIN, 0, 0), rnode(GOUT, 35, 0, 38) },
  { pnode(GPIO, 35, 0, OEIN, 0, 1), rnode(GOUT, 35, 0, 30) },
  { pnode(GPIO, 35, 0, BSLIPMAX, 0, -1), rnode(GIN, 35, 0, 19) },
  { pnode(GPIO, 35, 0, CEIN, 0, -1), rnode(GOUT, 35, 0, 27) },
  { pnode(GPIO, 35, 0, CEOUT, 0, -1), rnode(GOUT, 35, 0, 45) },
  { pnode(GPIO, 35, 0, ACLR, 0, -1), rnode(GOUT, 35, 0, 28) },
  { pnode(GPIO, 35, 0, SCLR, 0, -1), rnode(GOUT, 35, 0, 31) },
  { pnode(GPIO, 35, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 35, 0, 10) },
  { pnode(GPIO, 35, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 35, 0, 8) },
  { pnode(GPIO, 35, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 35, 0, 14) },
  { pnode(GPIO, 35, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 35, 0, 12) },
  { pnode(GPIO, 35, 0, DATAIN, 1, 0), rnode(GOUT, 35, 0, 49) },
  { pnode(GPIO, 35, 0, DATAIN, 1, 1), rnode(GOUT, 35, 0, 41) },
  { pnode(GPIO, 35, 0, DATAIN, 1, 2), rnode(GOUT, 35, 0, 48) },
  { pnode(GPIO, 35, 0, DATAIN, 1, 3), rnode(GOUT, 35, 0, 40) },
  { pnode(GPIO, 35, 0, DATAOUT, 1, 0), rnode(GIN, 35, 0, 24) },
  { pnode(GPIO, 35, 0, DATAOUT, 1, 1), rnode(GIN, 35, 0, 23) },
  { pnode(GPIO, 35, 0, DATAOUT, 1, 2), rnode(GIN, 35, 0, 22) },
  { pnode(GPIO, 35, 0, DATAOUT, 1, 3), rnode(GIN, 35, 0, 21) },
  { pnode(GPIO, 35, 0, DATAOUT, 1, 4), rnode(GIN, 35, 0, 20) },
  { pnode(GPIO, 35, 0, OEIN, 1, 0), rnode(GOUT, 35, 0, 47) },
  { pnode(GPIO, 35, 0, OEIN, 1, 1), rnode(GOUT, 35, 0, 39) },
  { pnode(GPIO, 35, 0, BSLIPMAX, 1, -1), rnode(GIN, 35, 0, 25) },
  { pnode(GPIO, 35, 0, CEIN, 1, -1), rnode(GOUT, 35, 0, 51) },
  { pnode(GPIO, 35, 0, CEOUT, 1, -1), rnode(GOUT, 35, 0, 50) },
  { pnode(GPIO, 35, 0, ACLR, 1, -1), rnode(GOUT, 35, 0, 42) },
  { pnode(GPIO, 35, 0, SCLR, 1, -1), rnode(GOUT, 35, 0, 46) },
  { pnode(GPIO, 35, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 35, 0, 11) },
  { pnode(GPIO, 35, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 35, 0, 9) },
  { pnode(GPIO, 35, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 35, 0, 15) },
  { pnode(GPIO, 35, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 35, 0, 13) },
  { pnode(GPIO, 35, 0, DATAIN, 2, 0), rnode(GOUT, 35, 0, 14) },
  { pnode(GPIO, 35, 0, DATAIN, 2, 1), rnode(GOUT, 35, 0, 22) },
  { pnode(GPIO, 35, 0, DATAIN, 2, 2), rnode(GOUT, 35, 0, 15) },
  { pnode(GPIO, 35, 0, DATAIN, 2, 3), rnode(GOUT, 35, 0, 23) },
  { pnode(GPIO, 35, 0, DATAOUT, 2, 0), rnode(GIN, 35, 0, 8) },
  { pnode(GPIO, 35, 0, DATAOUT, 2, 1), rnode(GIN, 35, 0, 9) },
  { pnode(GPIO, 35, 0, DATAOUT, 2, 2), rnode(GIN, 35, 0, 10) },
  { pnode(GPIO, 35, 0, DATAOUT, 2, 3), rnode(GIN, 35, 0, 11) },
  { pnode(GPIO, 35, 0, DATAOUT, 2, 4), rnode(GIN, 35, 0, 12) },
  { pnode(GPIO, 35, 0, OEIN, 2, 0), rnode(GOUT, 35, 0, 16) },
  { pnode(GPIO, 35, 0, OEIN, 2, 1), rnode(GOUT, 35, 0, 24) },
  { pnode(GPIO, 35, 0, BSLIPMAX, 2, -1), rnode(GIN, 35, 0, 7) },
  { pnode(GPIO, 35, 0, CEIN, 2, -1), rnode(GOUT, 35, 0, 20) },
  { pnode(GPIO, 35, 0, CEOUT, 2, -1), rnode(GOUT, 35, 0, 13) },
  { pnode(GPIO, 35, 0, ACLR, 2, -1), rnode(GOUT, 35, 0, 21) },
  { pnode(GPIO, 35, 0, SCLR, 2, -1), rnode(GOUT, 35, 0, 25) },
  { pnode(GPIO, 35, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 35, 0, 5) },
  { pnode(GPIO, 35, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 35, 0, 7) },
  { pnode(GPIO, 35, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 35, 0, 1) },
  { pnode(GPIO, 35, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 35, 0, 3) },
  { pnode(GPIO, 35, 0, DATAIN, 3, 0), rnode(GOUT, 35, 0, 3) },
  { pnode(GPIO, 35, 0, DATAIN, 3, 1), rnode(GOUT, 35, 0, 17) },
  { pnode(GPIO, 35, 0, DATAIN, 3, 2), rnode(GOUT, 35, 0, 8) },
  { pnode(GPIO, 35, 0, DATAIN, 3, 3), rnode(GOUT, 35, 0, 18) },
  { pnode(GPIO, 35, 0, DATAOUT, 3, 0), rnode(GIN, 35, 0, 2) },
  { pnode(GPIO, 35, 0, DATAOUT, 3, 1), rnode(GIN, 35, 0, 3) },
  { pnode(GPIO, 35, 0, DATAOUT, 3, 2), rnode(GIN, 35, 0, 4) },
  { pnode(GPIO, 35, 0, DATAOUT, 3, 3), rnode(GIN, 35, 0, 5) },
  { pnode(GPIO, 35, 0, DATAOUT, 3, 4), rnode(GIN, 35, 0, 6) },
  { pnode(GPIO, 35, 0, OEIN, 3, 0), rnode(GOUT, 35, 0, 2) },
  { pnode(GPIO, 35, 0, OEIN, 3, 1), rnode(GOUT, 35, 0, 19) },
  { pnode(GPIO, 35, 0, BSLIPMAX, 3, -1), rnode(GIN, 35, 0, 1) },
  { pnode(GPIO, 35, 0, CEIN, 3, -1), rnode(GOUT, 35, 0, 5) },
  { pnode(GPIO, 35, 0, CEOUT, 3, -1), rnode(GOUT, 35, 0, 4) },
  { pnode(GPIO, 35, 0, ACLR, 3, -1), rnode(GOUT, 35, 0, 12) },
  { pnode(GPIO, 35, 0, SCLR, 3, -1), rnode(GOUT, 35, 0, 1) },
  { pnode(GPIO, 35, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 35, 0, 4) },
  { pnode(GPIO, 35, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 35, 0, 6) },
  { pnode(GPIO, 35, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 35, 0, 0) },
  { pnode(GPIO, 35, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 35, 0, 2) },
  { pnode(GPIO, 35, 39, DATAOUT, 0, 0), rnode(GIN, 35, 39, 18) },
  { pnode(GPIO, 35, 39, DATAOUT, 0, 1), rnode(GIN, 35, 39, 17) },
  { pnode(GPIO, 35, 39, DATAOUT, 0, 2), rnode(GIN, 35, 39, 16) },
  { pnode(GPIO, 35, 39, DATAOUT, 0, 3), rnode(GIN, 35, 39, 15) },
  { pnode(GPIO, 35, 39, DATAOUT, 0, 4), rnode(GIN, 35, 39, 14) },
  { pnode(GPIO, 35, 39, BSLIPMAX, 0, -1), rnode(GIN, 35, 39, 19) },
  { pnode(GPIO, 35, 39, CEIN, 0, -1), rnode(GOUT, 35, 39, 27) },
  { pnode(GPIO, 35, 39, CEOUT, 0, -1), rnode(GOUT, 35, 39, 45) },
  { pnode(GPIO, 35, 39, ACLR, 0, -1), rnode(GOUT, 35, 39, 28) },
  { pnode(GPIO, 35, 39, SCLR, 0, -1), rnode(GOUT, 35, 39, 31) },
  { pnode(GPIO, 35, 39, CLKIN_IN, 0, 0), rnode(DCMUX, 35, 39, 10) },
  { pnode(GPIO, 35, 39, CLKIN_IN, 0, 1), rnode(DCMUX, 35, 39, 8) },
  { pnode(GPIO, 35, 39, CLKIN_OUT, 0, 0), rnode(DCMUX, 35, 39, 14) },
  { pnode(GPIO, 35, 39, CLKIN_OUT, 0, 1), rnode(DCMUX, 35, 39, 12) },
  { pnode(GPIO, 35, 39, DATAOUT, 1, 0), rnode(GIN, 35, 39, 24) },
  { pnode(GPIO, 35, 39, DATAOUT, 1, 1), rnode(GIN, 35, 39, 23) },
  { pnode(GPIO, 35, 39, DATAOUT, 1, 2), rnode(GIN, 35, 39, 22) },
  { pnode(GPIO, 35, 39, DATAOUT, 1, 3), rnode(GIN, 35, 39, 21) },
  { pnode(GPIO, 35, 39, DATAOUT, 1, 4), rnode(GIN, 35, 39, 20) },
  { pnode(GPIO, 35, 39, BSLIPMAX, 1, -1), rnode(GIN, 35, 39, 25) },
  { pnode(GPIO, 35, 39, CEIN, 1, -1), rnode(GOUT, 35, 39, 51) },
  { pnode(GPIO, 35, 39, CEOUT, 1, -1), rnode(GOUT, 35, 39, 50) },
  { pnode(GPIO, 35, 39, ACLR, 1, -1), rnode(GOUT, 35, 39, 42) },
  { pnode(GPIO, 35, 39, SCLR, 1, -1), rnode(GOUT, 35, 39, 46) },
  { pnode(GPIO, 35, 39, CLKIN_IN, 1, 0), rnode(DCMUX, 35, 39, 11) },
  { pnode(GPIO, 35, 39, CLKIN_IN, 1, 1), rnode(DCMUX, 35, 39, 9) },
  { pnode(GPIO, 35, 39, CLKIN_OUT, 1, 0), rnode(DCMUX, 35, 39, 15) },
  { pnode(GPIO, 35, 39, CLKIN_OUT, 1, 1), rnode(DCMUX, 35, 39, 13) },
  { pnode(GPIO, 35, 39, DATAOUT, 2, 0), rnode(GIN, 35, 39, 8) },
  { pnode(GPIO, 35, 39, DATAOUT, 2, 1), rnode(GIN, 35, 39, 9) },
  { pnode(GPIO, 35, 39, DATAOUT, 2, 2), rnode(GIN, 35, 39, 10) },
  { pnode(GPIO, 35, 39, DATAOUT, 2, 3), rnode(GIN, 35, 39, 11) },
  { pnode(GPIO, 35, 39, DATAOUT, 2, 4), rnode(GIN, 35, 39, 12) },
  { pnode(GPIO, 35, 39, OEIN, 2, 0), rnode(GOUT, 35, 39, 16) },
  { pnode(GPIO, 35, 39, OEIN, 2, 1), rnode(GOUT, 35, 39, 24) },
  { pnode(GPIO, 35, 39, BSLIPMAX, 2, -1), rnode(GIN, 35, 39, 7) },
  { pnode(GPIO, 35, 39, CEIN, 2, -1), rnode(GOUT, 35, 39, 20) },
  { pnode(GPIO, 35, 39, CEOUT, 2, -1), rnode(GOUT, 35, 39, 13) },
  { pnode(GPIO, 35, 39, SCLR, 2, -1), rnode(GOUT, 35, 39, 25) },
  { pnode(GPIO, 35, 39, CLKIN_IN, 2, 0), rnode(DCMUX, 35, 39, 5) },
  { pnode(GPIO, 35, 39, CLKIN_IN, 2, 1), rnode(DCMUX, 35, 39, 7) },
  { pnode(GPIO, 35, 39, CLKIN_OUT, 2, 0), rnode(DCMUX, 35, 39, 1) },
  { pnode(GPIO, 35, 39, CLKIN_OUT, 2, 1), rnode(DCMUX, 35, 39, 3) },
  { pnode(GPIO, 35, 39, DATAOUT, 3, 4), rnode(GIN, 35, 39, 6) },
  { pnode(GPIO, 35, 39, BSLIPMAX, 3, -1), rnode(GIN, 35, 39, 1) },
  { pnode(GPIO, 35, 39, CEIN, 3, -1), rnode(GOUT, 35, 39, 5) },
  { pnode(GPIO, 35, 39, CEOUT, 3, -1), rnode(GOUT, 35, 39, 4) },
  { pnode(GPIO, 35, 39, ACLR, 3, -1), rnode(GOUT, 35, 39, 12) },
  { pnode(GPIO, 35, 39, SCLR, 3, -1), rnode(GOUT, 35, 39, 1) },
  { pnode(GPIO, 35, 39, CLKIN_IN, 3, 0), rnode(DCMUX, 35, 39, 4) },
  { pnode(GPIO, 35, 39, CLKIN_IN, 3, 1), rnode(DCMUX, 35, 39, 6) },
  { pnode(GPIO, 35, 39, CLKIN_OUT, 3, 0), rnode(DCMUX, 35, 39, 0) },
  { pnode(GPIO, 35, 39, CLKIN_OUT, 3, 1), rnode(DCMUX, 35, 39, 2) },
  { pnode(GPIO, 37, 39, DATAOUT, 0, 4), rnode(GIN, 37, 39, 14) },
  { pnode(GPIO, 37, 39, BSLIPMAX, 0, -1), rnode(GIN, 37, 39, 19) },
  { pnode(GPIO, 37, 39, CEIN, 0, -1), rnode(GOUT, 37, 39, 27) },
  { pnode(GPIO, 37, 39, CEOUT, 0, -1), rnode(GOUT, 37, 39, 45) },
  { pnode(GPIO, 37, 39, ACLR, 0, -1), rnode(GOUT, 37, 39, 28) },
  { pnode(GPIO, 37, 39, SCLR, 0, -1), rnode(GOUT, 37, 39, 31) },
  { pnode(GPIO, 37, 39, CLKIN_IN, 0, 0), rnode(DCMUX, 37, 39, 10) },
  { pnode(GPIO, 37, 39, CLKIN_IN, 0, 1), rnode(DCMUX, 37, 39, 8) },
  { pnode(GPIO, 37, 39, CLKIN_OUT, 0, 0), rnode(DCMUX, 37, 39, 14) },
  { pnode(GPIO, 37, 39, CLKIN_OUT, 0, 1), rnode(DCMUX, 37, 39, 12) },
  { pnode(GPIO, 37, 39, DATAOUT, 1, 4), rnode(GIN, 37, 39, 20) },
  { pnode(GPIO, 37, 39, BSLIPMAX, 1, -1), rnode(GIN, 37, 39, 25) },
  { pnode(GPIO, 37, 39, CEIN, 1, -1), rnode(GOUT, 37, 39, 51) },
  { pnode(GPIO, 37, 39, CEOUT, 1, -1), rnode(GOUT, 37, 39, 50) },
  { pnode(GPIO, 37, 39, ACLR, 1, -1), rnode(GOUT, 37, 39, 42) },
  { pnode(GPIO, 37, 39, SCLR, 1, -1), rnode(GOUT, 37, 39, 46) },
  { pnode(GPIO, 37, 39, CLKIN_IN, 1, 0), rnode(DCMUX, 37, 39, 11) },
  { pnode(GPIO, 37, 39, CLKIN_IN, 1, 1), rnode(DCMUX, 37, 39, 9) },
  { pnode(GPIO, 37, 39, CLKIN_OUT, 1, 0), rnode(DCMUX, 37, 39, 15) },
  { pnode(GPIO, 37, 39, CLKIN_OUT, 1, 1), rnode(DCMUX, 37, 39, 13) },
  { pnode(GPIO, 37, 39, DATAOUT, 2, 4), rnode(GIN, 37, 39, 12) },
  { pnode(GPIO, 37, 39, BSLIPMAX, 2, -1), rnode(GIN, 37, 39, 7) },
  { pnode(GPIO, 37, 39, CEIN, 2, -1), rnode(GOUT, 37, 39, 20) },
  { pnode(GPIO, 37, 39, CEOUT, 2, -1), rnode(GOUT, 37, 39, 13) },
  { pnode(GPIO, 37, 39, ACLR, 2, -1), rnode(GOUT, 37, 39, 21) },
  { pnode(GPIO, 37, 39, SCLR, 2, -1), rnode(GOUT, 37, 39, 25) },
  { pnode(GPIO, 37, 39, CLKIN_IN, 2, 0), rnode(DCMUX, 37, 39, 5) },
  { pnode(GPIO, 37, 39, CLKIN_IN, 2, 1), rnode(DCMUX, 37, 39, 7) },
  { pnode(GPIO, 37, 39, CLKIN_OUT, 2, 0), rnode(DCMUX, 37, 39, 1) },
  { pnode(GPIO, 37, 39, CLKIN_OUT, 2, 1), rnode(DCMUX, 37, 39, 3) },
  { pnode(GPIO, 37, 39, DATAOUT, 3, 0), rnode(GIN, 37, 39, 2) },
  { pnode(GPIO, 37, 39, DATAOUT, 3, 1), rnode(GIN, 37, 39, 3) },
  { pnode(GPIO, 37, 39, DATAOUT, 3, 2), rnode(GIN, 37, 39, 4) },
  { pnode(GPIO, 37, 39, DATAOUT, 3, 3), rnode(GIN, 37, 39, 5) },
  { pnode(GPIO, 37, 39, DATAOUT, 3, 4), rnode(GIN, 37, 39, 6) },
  { pnode(GPIO, 37, 39, OEIN, 3, 0), rnode(GOUT, 37, 39, 2) },
  { pnode(GPIO, 37, 39, OEIN, 3, 1), rnode(GOUT, 37, 39, 19) },
  { pnode(GPIO, 37, 39, BSLIPMAX, 3, -1), rnode(GIN, 37, 39, 1) },
  { pnode(GPIO, 37, 39, CEIN, 3, -1), rnode(GOUT, 37, 39, 5) },
  { pnode(GPIO, 37, 39, CEOUT, 3, -1), rnode(GOUT, 37, 39, 4) },
  { pnode(GPIO, 37, 39, SCLR, 3, -1), rnode(GOUT, 37, 39, 1) },
  { pnode(GPIO, 37, 39, CLKIN_IN, 3, 0), rnode(DCMUX, 37, 39, 4) },
  { pnode(GPIO, 37, 39, CLKIN_IN, 3, 1), rnode(DCMUX, 37, 39, 6) },
  { pnode(GPIO, 37, 39, CLKIN_OUT, 3, 0), rnode(DCMUX, 37, 39, 0) },
  { pnode(GPIO, 37, 39, CLKIN_OUT, 3, 1), rnode(DCMUX, 37, 39, 2) },
  { pnode(GPIO, 38, 0, DATAIN, 0, 0), rnode(GOUT, 38, 0, 44) },
  { pnode(GPIO, 38, 0, DATAIN, 0, 1), rnode(GOUT, 38, 0, 34) },
  { pnode(GPIO, 38, 0, DATAIN, 0, 2), rnode(GOUT, 38, 0, 43) },
  { pnode(GPIO, 38, 0, DATAIN, 0, 3), rnode(GOUT, 38, 0, 29) },
  { pnode(GPIO, 38, 0, DATAOUT, 0, 0), rnode(GIN, 38, 0, 18) },
  { pnode(GPIO, 38, 0, DATAOUT, 0, 1), rnode(GIN, 38, 0, 17) },
  { pnode(GPIO, 38, 0, DATAOUT, 0, 2), rnode(GIN, 38, 0, 16) },
  { pnode(GPIO, 38, 0, DATAOUT, 0, 3), rnode(GIN, 38, 0, 15) },
  { pnode(GPIO, 38, 0, DATAOUT, 0, 4), rnode(GIN, 38, 0, 14) },
  { pnode(GPIO, 38, 0, OEIN, 0, 0), rnode(GOUT, 38, 0, 38) },
  { pnode(GPIO, 38, 0, OEIN, 0, 1), rnode(GOUT, 38, 0, 30) },
  { pnode(GPIO, 38, 0, BSLIPMAX, 0, -1), rnode(GIN, 38, 0, 19) },
  { pnode(GPIO, 38, 0, CEIN, 0, -1), rnode(GOUT, 38, 0, 27) },
  { pnode(GPIO, 38, 0, CEOUT, 0, -1), rnode(GOUT, 38, 0, 45) },
  { pnode(GPIO, 38, 0, ACLR, 0, -1), rnode(GOUT, 38, 0, 28) },
  { pnode(GPIO, 38, 0, SCLR, 0, -1), rnode(GOUT, 38, 0, 31) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 38, 0, 10) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 38, 0, 8) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 38, 0, 14) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 38, 0, 12) },
  { pnode(GPIO, 38, 0, DATAIN, 1, 0), rnode(GOUT, 38, 0, 49) },
  { pnode(GPIO, 38, 0, DATAIN, 1, 1), rnode(GOUT, 38, 0, 41) },
  { pnode(GPIO, 38, 0, DATAIN, 1, 2), rnode(GOUT, 38, 0, 48) },
  { pnode(GPIO, 38, 0, DATAIN, 1, 3), rnode(GOUT, 38, 0, 40) },
  { pnode(GPIO, 38, 0, DATAOUT, 1, 0), rnode(GIN, 38, 0, 24) },
  { pnode(GPIO, 38, 0, DATAOUT, 1, 1), rnode(GIN, 38, 0, 23) },
  { pnode(GPIO, 38, 0, DATAOUT, 1, 2), rnode(GIN, 38, 0, 22) },
  { pnode(GPIO, 38, 0, DATAOUT, 1, 3), rnode(GIN, 38, 0, 21) },
  { pnode(GPIO, 38, 0, DATAOUT, 1, 4), rnode(GIN, 38, 0, 20) },
  { pnode(GPIO, 38, 0, OEIN, 1, 0), rnode(GOUT, 38, 0, 47) },
  { pnode(GPIO, 38, 0, OEIN, 1, 1), rnode(GOUT, 38, 0, 39) },
  { pnode(GPIO, 38, 0, BSLIPMAX, 1, -1), rnode(GIN, 38, 0, 25) },
  { pnode(GPIO, 38, 0, CEIN, 1, -1), rnode(GOUT, 38, 0, 51) },
  { pnode(GPIO, 38, 0, CEOUT, 1, -1), rnode(GOUT, 38, 0, 50) },
  { pnode(GPIO, 38, 0, ACLR, 1, -1), rnode(GOUT, 38, 0, 42) },
  { pnode(GPIO, 38, 0, SCLR, 1, -1), rnode(GOUT, 38, 0, 46) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 38, 0, 11) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 38, 0, 9) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 38, 0, 15) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 38, 0, 13) },
  { pnode(GPIO, 38, 0, DATAIN, 2, 0), rnode(GOUT, 38, 0, 14) },
  { pnode(GPIO, 38, 0, DATAIN, 2, 1), rnode(GOUT, 38, 0, 22) },
  { pnode(GPIO, 38, 0, DATAIN, 2, 2), rnode(GOUT, 38, 0, 15) },
  { pnode(GPIO, 38, 0, DATAIN, 2, 3), rnode(GOUT, 38, 0, 23) },
  { pnode(GPIO, 38, 0, DATAOUT, 2, 0), rnode(GIN, 38, 0, 8) },
  { pnode(GPIO, 38, 0, DATAOUT, 2, 1), rnode(GIN, 38, 0, 9) },
  { pnode(GPIO, 38, 0, DATAOUT, 2, 2), rnode(GIN, 38, 0, 10) },
  { pnode(GPIO, 38, 0, DATAOUT, 2, 3), rnode(GIN, 38, 0, 11) },
  { pnode(GPIO, 38, 0, DATAOUT, 2, 4), rnode(GIN, 38, 0, 12) },
  { pnode(GPIO, 38, 0, OEIN, 2, 0), rnode(GOUT, 38, 0, 16) },
  { pnode(GPIO, 38, 0, OEIN, 2, 1), rnode(GOUT, 38, 0, 24) },
  { pnode(GPIO, 38, 0, BSLIPMAX, 2, -1), rnode(GIN, 38, 0, 7) },
  { pnode(GPIO, 38, 0, CEIN, 2, -1), rnode(GOUT, 38, 0, 20) },
  { pnode(GPIO, 38, 0, CEOUT, 2, -1), rnode(GOUT, 38, 0, 13) },
  { pnode(GPIO, 38, 0, ACLR, 2, -1), rnode(GOUT, 38, 0, 21) },
  { pnode(GPIO, 38, 0, SCLR, 2, -1), rnode(GOUT, 38, 0, 25) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 38, 0, 5) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 38, 0, 7) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 38, 0, 1) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 38, 0, 3) },
  { pnode(GPIO, 38, 0, DATAIN, 3, 0), rnode(GOUT, 38, 0, 3) },
  { pnode(GPIO, 38, 0, DATAIN, 3, 1), rnode(GOUT, 38, 0, 17) },
  { pnode(GPIO, 38, 0, DATAIN, 3, 2), rnode(GOUT, 38, 0, 8) },
  { pnode(GPIO, 38, 0, DATAIN, 3, 3), rnode(GOUT, 38, 0, 18) },
  { pnode(GPIO, 38, 0, DATAOUT, 3, 0), rnode(GIN, 38, 0, 2) },
  { pnode(GPIO, 38, 0, DATAOUT, 3, 1), rnode(GIN, 38, 0, 3) },
  { pnode(GPIO, 38, 0, DATAOUT, 3, 2), rnode(GIN, 38, 0, 4) },
  { pnode(GPIO, 38, 0, DATAOUT, 3, 3), rnode(GIN, 38, 0, 5) },
  { pnode(GPIO, 38, 0, DATAOUT, 3, 4), rnode(GIN, 38, 0, 6) },
  { pnode(GPIO, 38, 0, OEIN, 3, 0), rnode(GOUT, 38, 0, 2) },
  { pnode(GPIO, 38, 0, OEIN, 3, 1), rnode(GOUT, 38, 0, 19) },
  { pnode(GPIO, 38, 0, BSLIPMAX, 3, -1), rnode(GIN, 38, 0, 1) },
  { pnode(GPIO, 38, 0, CEIN, 3, -1), rnode(GOUT, 38, 0, 5) },
  { pnode(GPIO, 38, 0, CEOUT, 3, -1), rnode(GOUT, 38, 0, 4) },
  { pnode(GPIO, 38, 0, ACLR, 3, -1), rnode(GOUT, 38, 0, 12) },
  { pnode(GPIO, 38, 0, SCLR, 3, -1), rnode(GOUT, 38, 0, 1) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 38, 0, 4) },
  { pnode(GPIO, 38, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 38, 0, 6) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 38, 0, 0) },
  { pnode(GPIO, 38, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 38, 0, 2) },
  { pnode(GPIO, 39, 0, DATAIN, 0, 0), rnode(GOUT, 39, 0, 44) },
  { pnode(GPIO, 39, 0, DATAIN, 0, 1), rnode(GOUT, 39, 0, 34) },
  { pnode(GPIO, 39, 0, DATAIN, 0, 2), rnode(GOUT, 39, 0, 43) },
  { pnode(GPIO, 39, 0, DATAIN, 0, 3), rnode(GOUT, 39, 0, 29) },
  { pnode(GPIO, 39, 0, DATAOUT, 0, 0), rnode(GIN, 39, 0, 18) },
  { pnode(GPIO, 39, 0, DATAOUT, 0, 1), rnode(GIN, 39, 0, 17) },
  { pnode(GPIO, 39, 0, DATAOUT, 0, 2), rnode(GIN, 39, 0, 16) },
  { pnode(GPIO, 39, 0, DATAOUT, 0, 3), rnode(GIN, 39, 0, 15) },
  { pnode(GPIO, 39, 0, DATAOUT, 0, 4), rnode(GIN, 39, 0, 14) },
  { pnode(GPIO, 39, 0, OEIN, 0, 0), rnode(GOUT, 39, 0, 38) },
  { pnode(GPIO, 39, 0, OEIN, 0, 1), rnode(GOUT, 39, 0, 30) },
  { pnode(GPIO, 39, 0, BSLIPMAX, 0, -1), rnode(GIN, 39, 0, 19) },
  { pnode(GPIO, 39, 0, CEIN, 0, -1), rnode(GOUT, 39, 0, 27) },
  { pnode(GPIO, 39, 0, CEOUT, 0, -1), rnode(GOUT, 39, 0, 45) },
  { pnode(GPIO, 39, 0, ACLR, 0, -1), rnode(GOUT, 39, 0, 28) },
  { pnode(GPIO, 39, 0, SCLR, 0, -1), rnode(GOUT, 39, 0, 31) },
  { pnode(GPIO, 39, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 39, 0, 10) },
  { pnode(GPIO, 39, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 39, 0, 8) },
  { pnode(GPIO, 39, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 39, 0, 14) },
  { pnode(GPIO, 39, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 39, 0, 12) },
  { pnode(GPIO, 39, 0, DATAIN, 1, 0), rnode(GOUT, 39, 0, 49) },
  { pnode(GPIO, 39, 0, DATAIN, 1, 1), rnode(GOUT, 39, 0, 41) },
  { pnode(GPIO, 39, 0, DATAIN, 1, 2), rnode(GOUT, 39, 0, 48) },
  { pnode(GPIO, 39, 0, DATAIN, 1, 3), rnode(GOUT, 39, 0, 40) },
  { pnode(GPIO, 39, 0, DATAOUT, 1, 0), rnode(GIN, 39, 0, 24) },
  { pnode(GPIO, 39, 0, DATAOUT, 1, 1), rnode(GIN, 39, 0, 23) },
  { pnode(GPIO, 39, 0, DATAOUT, 1, 2), rnode(GIN, 39, 0, 22) },
  { pnode(GPIO, 39, 0, DATAOUT, 1, 3), rnode(GIN, 39, 0, 21) },
  { pnode(GPIO, 39, 0, DATAOUT, 1, 4), rnode(GIN, 39, 0, 20) },
  { pnode(GPIO, 39, 0, OEIN, 1, 0), rnode(GOUT, 39, 0, 47) },
  { pnode(GPIO, 39, 0, OEIN, 1, 1), rnode(GOUT, 39, 0, 39) },
  { pnode(GPIO, 39, 0, BSLIPMAX, 1, -1), rnode(GIN, 39, 0, 25) },
  { pnode(GPIO, 39, 0, CEIN, 1, -1), rnode(GOUT, 39, 0, 51) },
  { pnode(GPIO, 39, 0, CEOUT, 1, -1), rnode(GOUT, 39, 0, 50) },
  { pnode(GPIO, 39, 0, ACLR, 1, -1), rnode(GOUT, 39, 0, 42) },
  { pnode(GPIO, 39, 0, SCLR, 1, -1), rnode(GOUT, 39, 0, 46) },
  { pnode(GPIO, 39, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 39, 0, 11) },
  { pnode(GPIO, 39, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 39, 0, 9) },
  { pnode(GPIO, 39, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 39, 0, 15) },
  { pnode(GPIO, 39, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 39, 0, 13) },
  { pnode(GPIO, 39, 0, DATAIN, 2, 0), rnode(GOUT, 39, 0, 14) },
  { pnode(GPIO, 39, 0, DATAIN, 2, 1), rnode(GOUT, 39, 0, 22) },
  { pnode(GPIO, 39, 0, DATAIN, 2, 2), rnode(GOUT, 39, 0, 15) },
  { pnode(GPIO, 39, 0, DATAIN, 2, 3), rnode(GOUT, 39, 0, 23) },
  { pnode(GPIO, 39, 0, DATAOUT, 2, 0), rnode(GIN, 39, 0, 8) },
  { pnode(GPIO, 39, 0, DATAOUT, 2, 1), rnode(GIN, 39, 0, 9) },
  { pnode(GPIO, 39, 0, DATAOUT, 2, 2), rnode(GIN, 39, 0, 10) },
  { pnode(GPIO, 39, 0, DATAOUT, 2, 3), rnode(GIN, 39, 0, 11) },
  { pnode(GPIO, 39, 0, DATAOUT, 2, 4), rnode(GIN, 39, 0, 12) },
  { pnode(GPIO, 39, 0, OEIN, 2, 0), rnode(GOUT, 39, 0, 16) },
  { pnode(GPIO, 39, 0, OEIN, 2, 1), rnode(GOUT, 39, 0, 24) },
  { pnode(GPIO, 39, 0, BSLIPMAX, 2, -1), rnode(GIN, 39, 0, 7) },
  { pnode(GPIO, 39, 0, CEIN, 2, -1), rnode(GOUT, 39, 0, 20) },
  { pnode(GPIO, 39, 0, CEOUT, 2, -1), rnode(GOUT, 39, 0, 13) },
  { pnode(GPIO, 39, 0, ACLR, 2, -1), rnode(GOUT, 39, 0, 21) },
  { pnode(GPIO, 39, 0, SCLR, 2, -1), rnode(GOUT, 39, 0, 25) },
  { pnode(GPIO, 39, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 39, 0, 5) },
  { pnode(GPIO, 39, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 39, 0, 7) },
  { pnode(GPIO, 39, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 39, 0, 1) },
  { pnode(GPIO, 39, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 39, 0, 3) },
  { pnode(GPIO, 39, 0, DATAIN, 3, 0), rnode(GOUT, 39, 0, 3) },
  { pnode(GPIO, 39, 0, DATAIN, 3, 1), rnode(GOUT, 39, 0, 17) },
  { pnode(GPIO, 39, 0, DATAIN, 3, 2), rnode(GOUT, 39, 0, 8) },
  { pnode(GPIO, 39, 0, DATAIN, 3, 3), rnode(GOUT, 39, 0, 18) },
  { pnode(GPIO, 39, 0, DATAOUT, 3, 0), rnode(GIN, 39, 0, 2) },
  { pnode(GPIO, 39, 0, DATAOUT, 3, 1), rnode(GIN, 39, 0, 3) },
  { pnode(GPIO, 39, 0, DATAOUT, 3, 2), rnode(GIN, 39, 0, 4) },
  { pnode(GPIO, 39, 0, DATAOUT, 3, 3), rnode(GIN, 39, 0, 5) },
  { pnode(GPIO, 39, 0, DATAOUT, 3, 4), rnode(GIN, 39, 0, 6) },
  { pnode(GPIO, 39, 0, OEIN, 3, 0), rnode(GOUT, 39, 0, 2) },
  { pnode(GPIO, 39, 0, OEIN, 3, 1), rnode(GOUT, 39, 0, 19) },
  { pnode(GPIO, 39, 0, BSLIPMAX, 3, -1), rnode(GIN, 39, 0, 1) },
  { pnode(GPIO, 39, 0, CEIN, 3, -1), rnode(GOUT, 39, 0, 5) },
  { pnode(GPIO, 39, 0, CEOUT, 3, -1), rnode(GOUT, 39, 0, 4) },
  { pnode(GPIO, 39, 0, ACLR, 3, -1), rnode(GOUT, 39, 0, 12) },
  { pnode(GPIO, 39, 0, SCLR, 3, -1), rnode(GOUT, 39, 0, 1) },
  { pnode(GPIO, 39, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 39, 0, 4) },
  { pnode(GPIO, 39, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 39, 0, 6) },
  { pnode(GPIO, 39, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 39, 0, 0) },
  { pnode(GPIO, 39, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 39, 0, 2) },
  { pnode(GPIO, 39, 39, DATAIN, 0, 0), rnode(GOUT, 39, 39, 44) },
  { pnode(GPIO, 39, 39, DATAIN, 0, 1), rnode(GOUT, 39, 39, 34) },
  { pnode(GPIO, 39, 39, DATAIN, 0, 2), rnode(GOUT, 39, 39, 43) },
  { pnode(GPIO, 39, 39, DATAIN, 0, 3), rnode(GOUT, 39, 39, 29) },
  { pnode(GPIO, 39, 39, DATAOUT, 0, 0), rnode(GIN, 39, 39, 18) },
  { pnode(GPIO, 39, 39, DATAOUT, 0, 1), rnode(GIN, 39, 39, 17) },
  { pnode(GPIO, 39, 39, DATAOUT, 0, 2), rnode(GIN, 39, 39, 16) },
  { pnode(GPIO, 39, 39, DATAOUT, 0, 3), rnode(GIN, 39, 39, 15) },
  { pnode(GPIO, 39, 39, DATAOUT, 0, 4), rnode(GIN, 39, 39, 14) },
  { pnode(GPIO, 39, 39, OEIN, 0, 0), rnode(GOUT, 39, 39, 38) },
  { pnode(GPIO, 39, 39, OEIN, 0, 1), rnode(GOUT, 39, 39, 30) },
  { pnode(GPIO, 39, 39, BSLIPMAX, 0, -1), rnode(GIN, 39, 39, 19) },
  { pnode(GPIO, 39, 39, CEIN, 0, -1), rnode(GOUT, 39, 39, 27) },
  { pnode(GPIO, 39, 39, CEOUT, 0, -1), rnode(GOUT, 39, 39, 45) },
  { pnode(GPIO, 39, 39, ACLR, 0, -1), rnode(GOUT, 39, 39, 28) },
  { pnode(GPIO, 39, 39, SCLR, 0, -1), rnode(GOUT, 39, 39, 31) },
  { pnode(GPIO, 39, 39, CLKIN_IN, 0, 0), rnode(DCMUX, 39, 39, 10) },
  { pnode(GPIO, 39, 39, CLKIN_IN, 0, 1), rnode(DCMUX, 39, 39, 8) },
  { pnode(GPIO, 39, 39, CLKIN_OUT, 0, 0), rnode(DCMUX, 39, 39, 14) },
  { pnode(GPIO, 39, 39, CLKIN_OUT, 0, 1), rnode(DCMUX, 39, 39, 12) },
  { pnode(GPIO, 39, 39, DATAIN, 1, 0), rnode(GOUT, 39, 39, 49) },
  { pnode(GPIO, 39, 39, DATAIN, 1, 1), rnode(GOUT, 39, 39, 41) },
  { pnode(GPIO, 39, 39, DATAIN, 1, 2), rnode(GOUT, 39, 39, 48) },
  { pnode(GPIO, 39, 39, DATAIN, 1, 3), rnode(GOUT, 39, 39, 40) },
  { pnode(GPIO, 39, 39, DATAOUT, 1, 0), rnode(GIN, 39, 39, 24) },
  { pnode(GPIO, 39, 39, DATAOUT, 1, 1), rnode(GIN, 39, 39, 23) },
  { pnode(GPIO, 39, 39, DATAOUT, 1, 2), rnode(GIN, 39, 39, 22) },
  { pnode(GPIO, 39, 39, DATAOUT, 1, 3), rnode(GIN, 39, 39, 21) },
  { pnode(GPIO, 39, 39, DATAOUT, 1, 4), rnode(GIN, 39, 39, 20) },
  { pnode(GPIO, 39, 39, OEIN, 1, 0), rnode(GOUT, 39, 39, 47) },
  { pnode(GPIO, 39, 39, OEIN, 1, 1), rnode(GOUT, 39, 39, 39) },
  { pnode(GPIO, 39, 39, BSLIPMAX, 1, -1), rnode(GIN, 39, 39, 25) },
  { pnode(GPIO, 39, 39, CEIN, 1, -1), rnode(GOUT, 39, 39, 51) },
  { pnode(GPIO, 39, 39, CEOUT, 1, -1), rnode(GOUT, 39, 39, 50) },
  { pnode(GPIO, 39, 39, ACLR, 1, -1), rnode(GOUT, 39, 39, 42) },
  { pnode(GPIO, 39, 39, SCLR, 1, -1), rnode(GOUT, 39, 39, 46) },
  { pnode(GPIO, 39, 39, CLKIN_IN, 1, 0), rnode(DCMUX, 39, 39, 11) },
  { pnode(GPIO, 39, 39, CLKIN_IN, 1, 1), rnode(DCMUX, 39, 39, 9) },
  { pnode(GPIO, 39, 39, CLKIN_OUT, 1, 0), rnode(DCMUX, 39, 39, 15) },
  { pnode(GPIO, 39, 39, CLKIN_OUT, 1, 1), rnode(DCMUX, 39, 39, 13) },
  { pnode(GPIO, 39, 39, DATAOUT, 2, 0), rnode(GIN, 39, 39, 8) },
  { pnode(GPIO, 39, 39, DATAOUT, 2, 1), rnode(GIN, 39, 39, 9) },
  { pnode(GPIO, 39, 39, DATAOUT, 2, 2), rnode(GIN, 39, 39, 10) },
  { pnode(GPIO, 39, 39, DATAOUT, 2, 3), rnode(GIN, 39, 39, 11) },
  { pnode(GPIO, 39, 39, DATAOUT, 2, 4), rnode(GIN, 39, 39, 12) },
  { pnode(GPIO, 39, 39, OEIN, 2, 0), rnode(GOUT, 39, 39, 16) },
  { pnode(GPIO, 39, 39, OEIN, 2, 1), rnode(GOUT, 39, 39, 24) },
  { pnode(GPIO, 39, 39, BSLIPMAX, 2, -1), rnode(GIN, 39, 39, 7) },
  { pnode(GPIO, 39, 39, CEIN, 2, -1), rnode(GOUT, 39, 39, 20) },
  { pnode(GPIO, 39, 39, CEOUT, 2, -1), rnode(GOUT, 39, 39, 13) },
  { pnode(GPIO, 39, 39, ACLR, 2, -1), rnode(GOUT, 39, 39, 21) },
  { pnode(GPIO, 39, 39, SCLR, 2, -1), rnode(GOUT, 39, 39, 25) },
  { pnode(GPIO, 39, 39, CLKIN_IN, 2, 0), rnode(DCMUX, 39, 39, 5) },
  { pnode(GPIO, 39, 39, CLKIN_IN, 2, 1), rnode(DCMUX, 39, 39, 7) },
  { pnode(GPIO, 39, 39, CLKIN_OUT, 2, 0), rnode(DCMUX, 39, 39, 1) },
  { pnode(GPIO, 39, 39, CLKIN_OUT, 2, 1), rnode(DCMUX, 39, 39, 3) },
  { pnode(GPIO, 39, 39, DATAOUT, 3, 4), rnode(GIN, 39, 39, 6) },
  { pnode(GPIO, 39, 39, BSLIPMAX, 3, -1), rnode(GIN, 39, 39, 1) },
  { pnode(GPIO, 39, 39, CEIN, 3, -1), rnode(GOUT, 39, 39, 5) },
  { pnode(GPIO, 39, 39, CEOUT, 3, -1), rnode(GOUT, 39, 39, 4) },
  { pnode(GPIO, 39, 39, ACLR, 3, -1), rnode(GOUT, 39, 39, 12) },
  { pnode(GPIO, 39, 39, SCLR, 3, -1), rnode(GOUT, 39, 39, 1) },
  { pnode(GPIO, 39, 39, CLKIN_IN, 3, 0), rnode(DCMUX, 39, 39, 4) },
  { pnode(GPIO, 39, 39, CLKIN_IN, 3, 1), rnode(DCMUX, 39, 39, 6) },
  { pnode(GPIO, 39, 39, CLKIN_OUT, 3, 0), rnode(DCMUX, 39, 39, 0) },
  { pnode(GPIO, 39, 39, CLKIN_OUT, 3, 1), rnode(DCMUX, 39, 39, 2) },
  { pnode(GPIO, 41, 0, DATAIN, 0, 0), rnode(GOUT, 41, 0, 44) },
  { pnode(GPIO, 41, 0, DATAIN, 0, 1), rnode(GOUT, 41, 0, 34) },
  { pnode(GPIO, 41, 0, DATAIN, 0, 2), rnode(GOUT, 41, 0, 43) },
  { pnode(GPIO, 41, 0, DATAIN, 0, 3), rnode(GOUT, 41, 0, 29) },
  { pnode(GPIO, 41, 0, DATAOUT, 0, 0), rnode(GIN, 41, 0, 18) },
  { pnode(GPIO, 41, 0, DATAOUT, 0, 1), rnode(GIN, 41, 0, 17) },
  { pnode(GPIO, 41, 0, DATAOUT, 0, 2), rnode(GIN, 41, 0, 16) },
  { pnode(GPIO, 41, 0, DATAOUT, 0, 3), rnode(GIN, 41, 0, 15) },
  { pnode(GPIO, 41, 0, DATAOUT, 0, 4), rnode(GIN, 41, 0, 14) },
  { pnode(GPIO, 41, 0, OEIN, 0, 0), rnode(GOUT, 41, 0, 38) },
  { pnode(GPIO, 41, 0, OEIN, 0, 1), rnode(GOUT, 41, 0, 30) },
  { pnode(GPIO, 41, 0, BSLIPMAX, 0, -1), rnode(GIN, 41, 0, 19) },
  { pnode(GPIO, 41, 0, CEIN, 0, -1), rnode(GOUT, 41, 0, 27) },
  { pnode(GPIO, 41, 0, CEOUT, 0, -1), rnode(GOUT, 41, 0, 45) },
  { pnode(GPIO, 41, 0, ACLR, 0, -1), rnode(GOUT, 41, 0, 28) },
  { pnode(GPIO, 41, 0, SCLR, 0, -1), rnode(GOUT, 41, 0, 31) },
  { pnode(GPIO, 41, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 41, 0, 10) },
  { pnode(GPIO, 41, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 41, 0, 8) },
  { pnode(GPIO, 41, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 41, 0, 14) },
  { pnode(GPIO, 41, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 41, 0, 12) },
  { pnode(GPIO, 41, 0, DATAIN, 1, 0), rnode(GOUT, 41, 0, 49) },
  { pnode(GPIO, 41, 0, DATAIN, 1, 1), rnode(GOUT, 41, 0, 41) },
  { pnode(GPIO, 41, 0, DATAIN, 1, 2), rnode(GOUT, 41, 0, 48) },
  { pnode(GPIO, 41, 0, DATAIN, 1, 3), rnode(GOUT, 41, 0, 40) },
  { pnode(GPIO, 41, 0, DATAOUT, 1, 0), rnode(GIN, 41, 0, 24) },
  { pnode(GPIO, 41, 0, DATAOUT, 1, 1), rnode(GIN, 41, 0, 23) },
  { pnode(GPIO, 41, 0, DATAOUT, 1, 2), rnode(GIN, 41, 0, 22) },
  { pnode(GPIO, 41, 0, DATAOUT, 1, 3), rnode(GIN, 41, 0, 21) },
  { pnode(GPIO, 41, 0, DATAOUT, 1, 4), rnode(GIN, 41, 0, 20) },
  { pnode(GPIO, 41, 0, OEIN, 1, 0), rnode(GOUT, 41, 0, 47) },
  { pnode(GPIO, 41, 0, OEIN, 1, 1), rnode(GOUT, 41, 0, 39) },
  { pnode(GPIO, 41, 0, BSLIPMAX, 1, -1), rnode(GIN, 41, 0, 25) },
  { pnode(GPIO, 41, 0, CEIN, 1, -1), rnode(GOUT, 41, 0, 51) },
  { pnode(GPIO, 41, 0, CEOUT, 1, -1), rnode(GOUT, 41, 0, 50) },
  { pnode(GPIO, 41, 0, ACLR, 1, -1), rnode(GOUT, 41, 0, 42) },
  { pnode(GPIO, 41, 0, SCLR, 1, -1), rnode(GOUT, 41, 0, 46) },
  { pnode(GPIO, 41, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 41, 0, 11) },
  { pnode(GPIO, 41, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 41, 0, 9) },
  { pnode(GPIO, 41, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 41, 0, 15) },
  { pnode(GPIO, 41, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 41, 0, 13) },
  { pnode(GPIO, 41, 0, DATAIN, 2, 0), rnode(GOUT, 41, 0, 14) },
  { pnode(GPIO, 41, 0, DATAIN, 2, 1), rnode(GOUT, 41, 0, 22) },
  { pnode(GPIO, 41, 0, DATAIN, 2, 2), rnode(GOUT, 41, 0, 15) },
  { pnode(GPIO, 41, 0, DATAIN, 2, 3), rnode(GOUT, 41, 0, 23) },
  { pnode(GPIO, 41, 0, DATAOUT, 2, 0), rnode(GIN, 41, 0, 8) },
  { pnode(GPIO, 41, 0, DATAOUT, 2, 1), rnode(GIN, 41, 0, 9) },
  { pnode(GPIO, 41, 0, DATAOUT, 2, 2), rnode(GIN, 41, 0, 10) },
  { pnode(GPIO, 41, 0, DATAOUT, 2, 3), rnode(GIN, 41, 0, 11) },
  { pnode(GPIO, 41, 0, DATAOUT, 2, 4), rnode(GIN, 41, 0, 12) },
  { pnode(GPIO, 41, 0, OEIN, 2, 0), rnode(GOUT, 41, 0, 16) },
  { pnode(GPIO, 41, 0, OEIN, 2, 1), rnode(GOUT, 41, 0, 24) },
  { pnode(GPIO, 41, 0, BSLIPMAX, 2, -1), rnode(GIN, 41, 0, 7) },
  { pnode(GPIO, 41, 0, CEIN, 2, -1), rnode(GOUT, 41, 0, 20) },
  { pnode(GPIO, 41, 0, CEOUT, 2, -1), rnode(GOUT, 41, 0, 13) },
  { pnode(GPIO, 41, 0, ACLR, 2, -1), rnode(GOUT, 41, 0, 21) },
  { pnode(GPIO, 41, 0, SCLR, 2, -1), rnode(GOUT, 41, 0, 25) },
  { pnode(GPIO, 41, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 41, 0, 5) },
  { pnode(GPIO, 41, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 41, 0, 7) },
  { pnode(GPIO, 41, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 41, 0, 1) },
  { pnode(GPIO, 41, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 41, 0, 3) },
  { pnode(GPIO, 41, 0, DATAIN, 3, 0), rnode(GOUT, 41, 0, 3) },
  { pnode(GPIO, 41, 0, DATAIN, 3, 1), rnode(GOUT, 41, 0, 17) },
  { pnode(GPIO, 41, 0, DATAIN, 3, 2), rnode(GOUT, 41, 0, 8) },
  { pnode(GPIO, 41, 0, DATAIN, 3, 3), rnode(GOUT, 41, 0, 18) },
  { pnode(GPIO, 41, 0, DATAOUT, 3, 0), rnode(GIN, 41, 0, 2) },
  { pnode(GPIO, 41, 0, DATAOUT, 3, 1), rnode(GIN, 41, 0, 3) },
  { pnode(GPIO, 41, 0, DATAOUT, 3, 2), rnode(GIN, 41, 0, 4) },
  { pnode(GPIO, 41, 0, DATAOUT, 3, 3), rnode(GIN, 41, 0, 5) },
  { pnode(GPIO, 41, 0, DATAOUT, 3, 4), rnode(GIN, 41, 0, 6) },
  { pnode(GPIO, 41, 0, OEIN, 3, 0), rnode(GOUT, 41, 0, 2) },
  { pnode(GPIO, 41, 0, OEIN, 3, 1), rnode(GOUT, 41, 0, 19) },
  { pnode(GPIO, 41, 0, BSLIPMAX, 3, -1), rnode(GIN, 41, 0, 1) },
  { pnode(GPIO, 41, 0, CEIN, 3, -1), rnode(GOUT, 41, 0, 5) },
  { pnode(GPIO, 41, 0, CEOUT, 3, -1), rnode(GOUT, 41, 0, 4) },
  { pnode(GPIO, 41, 0, ACLR, 3, -1), rnode(GOUT, 41, 0, 12) },
  { pnode(GPIO, 41, 0, SCLR, 3, -1), rnode(GOUT, 41, 0, 1) },
  { pnode(GPIO, 41, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 41, 0, 4) },
  { pnode(GPIO, 41, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 41, 0, 6) },
  { pnode(GPIO, 41, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 41, 0, 0) },
  { pnode(GPIO, 41, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 41, 0, 2) },
  { pnode(GPIO, 41, 39, DATAOUT, 0, 4), rnode(GIN, 41, 39, 14) },
  { pnode(GPIO, 41, 39, BSLIPMAX, 0, -1), rnode(GIN, 41, 39, 19) },
  { pnode(GPIO, 41, 39, CEIN, 0, -1), rnode(GOUT, 41, 39, 27) },
  { pnode(GPIO, 41, 39, CEOUT, 0, -1), rnode(GOUT, 41, 39, 45) },
  { pnode(GPIO, 41, 39, ACLR, 0, -1), rnode(GOUT, 41, 39, 28) },
  { pnode(GPIO, 41, 39, SCLR, 0, -1), rnode(GOUT, 41, 39, 31) },
  { pnode(GPIO, 41, 39, CLKIN_IN, 0, 0), rnode(DCMUX, 41, 39, 10) },
  { pnode(GPIO, 41, 39, CLKIN_IN, 0, 1), rnode(DCMUX, 41, 39, 8) },
  { pnode(GPIO, 41, 39, CLKIN_OUT, 0, 0), rnode(DCMUX, 41, 39, 14) },
  { pnode(GPIO, 41, 39, CLKIN_OUT, 0, 1), rnode(DCMUX, 41, 39, 12) },
  { pnode(GPIO, 41, 39, DATAOUT, 1, 4), rnode(GIN, 41, 39, 20) },
  { pnode(GPIO, 41, 39, BSLIPMAX, 1, -1), rnode(GIN, 41, 39, 25) },
  { pnode(GPIO, 41, 39, CEIN, 1, -1), rnode(GOUT, 41, 39, 51) },
  { pnode(GPIO, 41, 39, CEOUT, 1, -1), rnode(GOUT, 41, 39, 50) },
  { pnode(GPIO, 41, 39, ACLR, 1, -1), rnode(GOUT, 41, 39, 42) },
  { pnode(GPIO, 41, 39, SCLR, 1, -1), rnode(GOUT, 41, 39, 46) },
  { pnode(GPIO, 41, 39, CLKIN_IN, 1, 0), rnode(DCMUX, 41, 39, 11) },
  { pnode(GPIO, 41, 39, CLKIN_IN, 1, 1), rnode(DCMUX, 41, 39, 9) },
  { pnode(GPIO, 41, 39, CLKIN_OUT, 1, 0), rnode(DCMUX, 41, 39, 15) },
  { pnode(GPIO, 41, 39, CLKIN_OUT, 1, 1), rnode(DCMUX, 41, 39, 13) },
  { pnode(GPIO, 41, 39, DATAOUT, 2, 4), rnode(GIN, 41, 39, 12) },
  { pnode(GPIO, 41, 39, BSLIPMAX, 2, -1), rnode(GIN, 41, 39, 7) },
  { pnode(GPIO, 41, 39, CEIN, 2, -1), rnode(GOUT, 41, 39, 20) },
  { pnode(GPIO, 41, 39, CEOUT, 2, -1), rnode(GOUT, 41, 39, 13) },
  { pnode(GPIO, 41, 39, ACLR, 2, -1), rnode(GOUT, 41, 39, 21) },
  { pnode(GPIO, 41, 39, SCLR, 2, -1), rnode(GOUT, 41, 39, 25) },
  { pnode(GPIO, 41, 39, CLKIN_IN, 2, 0), rnode(DCMUX, 41, 39, 5) },
  { pnode(GPIO, 41, 39, CLKIN_IN, 2, 1), rnode(DCMUX, 41, 39, 7) },
  { pnode(GPIO, 41, 39, CLKIN_OUT, 2, 0), rnode(DCMUX, 41, 39, 1) },
  { pnode(GPIO, 41, 39, CLKIN_OUT, 2, 1), rnode(DCMUX, 41, 39, 3) },
  { pnode(GPIO, 41, 39, DATAIN, 3, 0), rnode(GOUT, 41, 39, 3) },
  { pnode(GPIO, 41, 39, DATAIN, 3, 1), rnode(GOUT, 41, 39, 17) },
  { pnode(GPIO, 41, 39, DATAIN, 3, 2), rnode(GOUT, 41, 39, 8) },
  { pnode(GPIO, 41, 39, DATAIN, 3, 3), rnode(GOUT, 41, 39, 18) },
  { pnode(GPIO, 41, 39, DATAOUT, 3, 0), rnode(GIN, 41, 39, 2) },
  { pnode(GPIO, 41, 39, DATAOUT, 3, 1), rnode(GIN, 41, 39, 3) },
  { pnode(GPIO, 41, 39, DATAOUT, 3, 2), rnode(GIN, 41, 39, 4) },
  { pnode(GPIO, 41, 39, DATAOUT, 3, 3), rnode(GIN, 41, 39, 5) },
  { pnode(GPIO, 41, 39, DATAOUT, 3, 4), rnode(GIN, 41, 39, 6) },
  { pnode(GPIO, 41, 39, OEIN, 3, 0), rnode(GOUT, 41, 39, 2) },
  { pnode(GPIO, 41, 39, OEIN, 3, 1), rnode(GOUT, 41, 39, 19) },
  { pnode(GPIO, 41, 39, BSLIPMAX, 3, -1), rnode(GIN, 41, 39, 1) },
  { pnode(GPIO, 41, 39, CEIN, 3, -1), rnode(GOUT, 41, 39, 5) },
  { pnode(GPIO, 41, 39, CEOUT, 3, -1), rnode(GOUT, 41, 39, 4) },
  { pnode(GPIO, 41, 39, ACLR, 3, -1), rnode(GOUT, 41, 39, 12) },
  { pnode(GPIO, 41, 39, SCLR, 3, -1), rnode(GOUT, 41, 39, 1) },
  { pnode(GPIO, 41, 39, CLKIN_IN, 3, 0), rnode(DCMUX, 41, 39, 4) },
  { pnode(GPIO, 41, 39, CLKIN_IN, 3, 1), rnode(DCMUX, 41, 39, 6) },
  { pnode(GPIO, 41, 39, CLKIN_OUT, 3, 0), rnode(DCMUX, 41, 39, 0) },
  { pnode(GPIO, 41, 39, CLKIN_OUT, 3, 1), rnode(DCMUX, 41, 39, 2) },
  { pnode(GPIO, 42, 39, DATAOUT, 0, 0), rnode(GIN, 42, 39, 18) },
  { pnode(GPIO, 42, 39, DATAOUT, 0, 1), rnode(GIN, 42, 39, 17) },
  { pnode(GPIO, 42, 39, DATAOUT, 0, 2), rnode(GIN, 42, 39, 16) },
  { pnode(GPIO, 42, 39, DATAOUT, 0, 3), rnode(GIN, 42, 39, 15) },
  { pnode(GPIO, 42, 39, DATAOUT, 0, 4), rnode(GIN, 42, 39, 14) },
  { pnode(GPIO, 42, 39, BSLIPMAX, 0, -1), rnode(GIN, 42, 39, 19) },
  { pnode(GPIO, 42, 39, CEIN, 0, -1), rnode(GOUT, 42, 39, 27) },
  { pnode(GPIO, 42, 39, CEOUT, 0, -1), rnode(GOUT, 42, 39, 45) },
  { pnode(GPIO, 42, 39, ACLR, 0, -1), rnode(GOUT, 42, 39, 28) },
  { pnode(GPIO, 42, 39, SCLR, 0, -1), rnode(GOUT, 42, 39, 31) },
  { pnode(GPIO, 42, 39, CLKIN_IN, 0, 0), rnode(DCMUX, 42, 39, 10) },
  { pnode(GPIO, 42, 39, CLKIN_IN, 0, 1), rnode(DCMUX, 42, 39, 8) },
  { pnode(GPIO, 42, 39, CLKIN_OUT, 0, 0), rnode(DCMUX, 42, 39, 14) },
  { pnode(GPIO, 42, 39, CLKIN_OUT, 0, 1), rnode(DCMUX, 42, 39, 12) },
  { pnode(GPIO, 42, 39, DATAOUT, 1, 0), rnode(GIN, 42, 39, 24) },
  { pnode(GPIO, 42, 39, DATAOUT, 1, 1), rnode(GIN, 42, 39, 23) },
  { pnode(GPIO, 42, 39, DATAOUT, 1, 2), rnode(GIN, 42, 39, 22) },
  { pnode(GPIO, 42, 39, DATAOUT, 1, 3), rnode(GIN, 42, 39, 21) },
  { pnode(GPIO, 42, 39, DATAOUT, 1, 4), rnode(GIN, 42, 39, 20) },
  { pnode(GPIO, 42, 39, BSLIPMAX, 1, -1), rnode(GIN, 42, 39, 25) },
  { pnode(GPIO, 42, 39, CEIN, 1, -1), rnode(GOUT, 42, 39, 51) },
  { pnode(GPIO, 42, 39, CEOUT, 1, -1), rnode(GOUT, 42, 39, 50) },
  { pnode(GPIO, 42, 39, ACLR, 1, -1), rnode(GOUT, 42, 39, 42) },
  { pnode(GPIO, 42, 39, SCLR, 1, -1), rnode(GOUT, 42, 39, 46) },
  { pnode(GPIO, 42, 39, CLKIN_IN, 1, 0), rnode(DCMUX, 42, 39, 11) },
  { pnode(GPIO, 42, 39, CLKIN_IN, 1, 1), rnode(DCMUX, 42, 39, 9) },
  { pnode(GPIO, 42, 39, CLKIN_OUT, 1, 0), rnode(DCMUX, 42, 39, 15) },
  { pnode(GPIO, 42, 39, CLKIN_OUT, 1, 1), rnode(DCMUX, 42, 39, 13) },
  { pnode(GPIO, 42, 39, DATAOUT, 2, 0), rnode(GIN, 42, 39, 8) },
  { pnode(GPIO, 42, 39, DATAOUT, 2, 1), rnode(GIN, 42, 39, 9) },
  { pnode(GPIO, 42, 39, DATAOUT, 2, 2), rnode(GIN, 42, 39, 10) },
  { pnode(GPIO, 42, 39, DATAOUT, 2, 3), rnode(GIN, 42, 39, 11) },
  { pnode(GPIO, 42, 39, DATAOUT, 2, 4), rnode(GIN, 42, 39, 12) },
  { pnode(GPIO, 42, 39, OEIN, 2, 0), rnode(GOUT, 42, 39, 16) },
  { pnode(GPIO, 42, 39, OEIN, 2, 1), rnode(GOUT, 42, 39, 24) },
  { pnode(GPIO, 42, 39, BSLIPMAX, 2, -1), rnode(GIN, 42, 39, 7) },
  { pnode(GPIO, 42, 39, CEIN, 2, -1), rnode(GOUT, 42, 39, 20) },
  { pnode(GPIO, 42, 39, CEOUT, 2, -1), rnode(GOUT, 42, 39, 13) },
  { pnode(GPIO, 42, 39, SCLR, 2, -1), rnode(GOUT, 42, 39, 25) },
  { pnode(GPIO, 42, 39, CLKIN_IN, 2, 0), rnode(DCMUX, 42, 39, 5) },
  { pnode(GPIO, 42, 39, CLKIN_IN, 2, 1), rnode(DCMUX, 42, 39, 7) },
  { pnode(GPIO, 42, 39, CLKIN_OUT, 2, 0), rnode(DCMUX, 42, 39, 1) },
  { pnode(GPIO, 42, 39, CLKIN_OUT, 2, 1), rnode(DCMUX, 42, 39, 3) },
  { pnode(GPIO, 42, 39, DATAOUT, 3, 4), rnode(GIN, 42, 39, 6) },
  { pnode(GPIO, 42, 39, BSLIPMAX, 3, -1), rnode(GIN, 42, 39, 1) },
  { pnode(GPIO, 42, 39, CEIN, 3, -1), rnode(GOUT, 42, 39, 5) },
  { pnode(GPIO, 42, 39, CEOUT, 3, -1), rnode(GOUT, 42, 39, 4) },
  { pnode(GPIO, 42, 39, ACLR, 3, -1), rnode(GOUT, 42, 39, 12) },
  { pnode(GPIO, 42, 39, SCLR, 3, -1), rnode(GOUT, 42, 39, 1) },
  { pnode(GPIO, 42, 39, CLKIN_IN, 3, 0), rnode(DCMUX, 42, 39, 4) },
  { pnode(GPIO, 42, 39, CLKIN_IN, 3, 1), rnode(DCMUX, 42, 39, 6) },
  { pnode(GPIO, 42, 39, CLKIN_OUT, 3, 0), rnode(DCMUX, 42, 39, 0) },
  { pnode(GPIO, 42, 39, CLKIN_OUT, 3, 1), rnode(DCMUX, 42, 39, 2) },
  { pnode(GPIO, 43, 39, DATAOUT, 0, 4), rnode(GIN, 43, 39, 14) },
  { pnode(GPIO, 43, 39, BSLIPMAX, 0, -1), rnode(GIN, 43, 39, 19) },
  { pnode(GPIO, 43, 39, CEIN, 0, -1), rnode(GOUT, 43, 39, 27) },
  { pnode(GPIO, 43, 39, CEOUT, 0, -1), rnode(GOUT, 43, 39, 45) },
  { pnode(GPIO, 43, 39, ACLR, 0, -1), rnode(GOUT, 43, 39, 28) },
  { pnode(GPIO, 43, 39, SCLR, 0, -1), rnode(GOUT, 43, 39, 31) },
  { pnode(GPIO, 43, 39, CLKIN_IN, 0, 0), rnode(DCMUX, 43, 39, 10) },
  { pnode(GPIO, 43, 39, CLKIN_IN, 0, 1), rnode(DCMUX, 43, 39, 8) },
  { pnode(GPIO, 43, 39, CLKIN_OUT, 0, 0), rnode(DCMUX, 43, 39, 14) },
  { pnode(GPIO, 43, 39, CLKIN_OUT, 0, 1), rnode(DCMUX, 43, 39, 12) },
  { pnode(GPIO, 43, 39, DATAOUT, 1, 4), rnode(GIN, 43, 39, 20) },
  { pnode(GPIO, 43, 39, BSLIPMAX, 1, -1), rnode(GIN, 43, 39, 25) },
  { pnode(GPIO, 43, 39, CEIN, 1, -1), rnode(GOUT, 43, 39, 51) },
  { pnode(GPIO, 43, 39, CEOUT, 1, -1), rnode(GOUT, 43, 39, 50) },
  { pnode(GPIO, 43, 39, ACLR, 1, -1), rnode(GOUT, 43, 39, 42) },
  { pnode(GPIO, 43, 39, SCLR, 1, -1), rnode(GOUT, 43, 39, 46) },
  { pnode(GPIO, 43, 39, CLKIN_IN, 1, 0), rnode(DCMUX, 43, 39, 11) },
  { pnode(GPIO, 43, 39, CLKIN_IN, 1, 1), rnode(DCMUX, 43, 39, 9) },
  { pnode(GPIO, 43, 39, CLKIN_OUT, 1, 0), rnode(DCMUX, 43, 39, 15) },
  { pnode(GPIO, 43, 39, CLKIN_OUT, 1, 1), rnode(DCMUX, 43, 39, 13) },
  { pnode(GPIO, 43, 39, DATAOUT, 2, 4), rnode(GIN, 43, 39, 12) },
  { pnode(GPIO, 43, 39, BSLIPMAX, 2, -1), rnode(GIN, 43, 39, 7) },
  { pnode(GPIO, 43, 39, CEIN, 2, -1), rnode(GOUT, 43, 39, 20) },
  { pnode(GPIO, 43, 39, CEOUT, 2, -1), rnode(GOUT, 43, 39, 13) },
  { pnode(GPIO, 43, 39, ACLR, 2, -1), rnode(GOUT, 43, 39, 21) },
  { pnode(GPIO, 43, 39, SCLR, 2, -1), rnode(GOUT, 43, 39, 25) },
  { pnode(GPIO, 43, 39, CLKIN_IN, 2, 0), rnode(DCMUX, 43, 39, 5) },
  { pnode(GPIO, 43, 39, CLKIN_IN, 2, 1), rnode(DCMUX, 43, 39, 7) },
  { pnode(GPIO, 43, 39, CLKIN_OUT, 2, 0), rnode(DCMUX, 43, 39, 1) },
  { pnode(GPIO, 43, 39, CLKIN_OUT, 2, 1), rnode(DCMUX, 43, 39, 3) },
  { pnode(GPIO, 43, 39, DATAIN, 3, 0), rnode(GOUT, 43, 39, 3) },
  { pnode(GPIO, 43, 39, DATAIN, 3, 1), rnode(GOUT, 43, 39, 17) },
  { pnode(GPIO, 43, 39, DATAIN, 3, 2), rnode(GOUT, 43, 39, 8) },
  { pnode(GPIO, 43, 39, DATAIN, 3, 3), rnode(GOUT, 43, 39, 18) },
  { pnode(GPIO, 43, 39, DATAOUT, 3, 0), rnode(GIN, 43, 39, 2) },
  { pnode(GPIO, 43, 39, DATAOUT, 3, 1), rnode(GIN, 43, 39, 3) },
  { pnode(GPIO, 43, 39, DATAOUT, 3, 2), rnode(GIN, 43, 39, 4) },
  { pnode(GPIO, 43, 39, DATAOUT, 3, 3), rnode(GIN, 43, 39, 5) },
  { pnode(GPIO, 43, 39, DATAOUT, 3, 4), rnode(GIN, 43, 39, 6) },
  { pnode(GPIO, 43, 39, OEIN, 3, 0), rnode(GOUT, 43, 39, 2) },
  { pnode(GPIO, 43, 39, OEIN, 3, 1), rnode(GOUT, 43, 39, 19) },
  { pnode(GPIO, 43, 39, BSLIPMAX, 3, -1), rnode(GIN, 43, 39, 1) },
  { pnode(GPIO, 43, 39, CEIN, 3, -1), rnode(GOUT, 43, 39, 5) },
  { pnode(GPIO, 43, 39, CEOUT, 3, -1), rnode(GOUT, 43, 39, 4) },
  { pnode(GPIO, 43, 39, ACLR, 3, -1), rnode(GOUT, 43, 39, 12) },
  { pnode(GPIO, 43, 39, SCLR, 3, -1), rnode(GOUT, 43, 39, 1) },
  { pnode(GPIO, 43, 39, CLKIN_IN, 3, 0), rnode(DCMUX, 43, 39, 4) },
  { pnode(GPIO, 43, 39, CLKIN_IN, 3, 1), rnode(DCMUX, 43, 39, 6) },
  { pnode(GPIO, 43, 39, CLKIN_OUT, 3, 0), rnode(DCMUX, 43, 39, 0) },
  { pnode(GPIO, 43, 39, CLKIN_OUT, 3, 1), rnode(DCMUX, 43, 39, 2) },
  { pnode(GPIO, 44, 0, DATAIN, 0, 0), rnode(GOUT, 44, 0, 44) },
  { pnode(GPIO, 44, 0, DATAIN, 0, 1), rnode(GOUT, 44, 0, 34) },
  { pnode(GPIO, 44, 0, DATAIN, 0, 2), rnode(GOUT, 44, 0, 43) },
  { pnode(GPIO, 44, 0, DATAIN, 0, 3), rnode(GOUT, 44, 0, 29) },
  { pnode(GPIO, 44, 0, DATAOUT, 0, 0), rnode(GIN, 44, 0, 18) },
  { pnode(GPIO, 44, 0, DATAOUT, 0, 1), rnode(GIN, 44, 0, 17) },
  { pnode(GPIO, 44, 0, DATAOUT, 0, 2), rnode(GIN, 44, 0, 16) },
  { pnode(GPIO, 44, 0, DATAOUT, 0, 3), rnode(GIN, 44, 0, 15) },
  { pnode(GPIO, 44, 0, DATAOUT, 0, 4), rnode(GIN, 44, 0, 14) },
  { pnode(GPIO, 44, 0, OEIN, 0, 0), rnode(GOUT, 44, 0, 38) },
  { pnode(GPIO, 44, 0, OEIN, 0, 1), rnode(GOUT, 44, 0, 30) },
  { pnode(GPIO, 44, 0, BSLIPMAX, 0, -1), rnode(GIN, 44, 0, 19) },
  { pnode(GPIO, 44, 0, CEIN, 0, -1), rnode(GOUT, 44, 0, 27) },
  { pnode(GPIO, 44, 0, CEOUT, 0, -1), rnode(GOUT, 44, 0, 45) },
  { pnode(GPIO, 44, 0, ACLR, 0, -1), rnode(GOUT, 44, 0, 28) },
  { pnode(GPIO, 44, 0, SCLR, 0, -1), rnode(GOUT, 44, 0, 31) },
  { pnode(GPIO, 44, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 44, 0, 10) },
  { pnode(GPIO, 44, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 44, 0, 8) },
  { pnode(GPIO, 44, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 44, 0, 14) },
  { pnode(GPIO, 44, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 44, 0, 12) },
  { pnode(GPIO, 44, 0, DATAIN, 1, 0), rnode(GOUT, 44, 0, 49) },
  { pnode(GPIO, 44, 0, DATAIN, 1, 1), rnode(GOUT, 44, 0, 41) },
  { pnode(GPIO, 44, 0, DATAIN, 1, 2), rnode(GOUT, 44, 0, 48) },
  { pnode(GPIO, 44, 0, DATAIN, 1, 3), rnode(GOUT, 44, 0, 40) },
  { pnode(GPIO, 44, 0, DATAOUT, 1, 0), rnode(GIN, 44, 0, 24) },
  { pnode(GPIO, 44, 0, DATAOUT, 1, 1), rnode(GIN, 44, 0, 23) },
  { pnode(GPIO, 44, 0, DATAOUT, 1, 2), rnode(GIN, 44, 0, 22) },
  { pnode(GPIO, 44, 0, DATAOUT, 1, 3), rnode(GIN, 44, 0, 21) },
  { pnode(GPIO, 44, 0, DATAOUT, 1, 4), rnode(GIN, 44, 0, 20) },
  { pnode(GPIO, 44, 0, OEIN, 1, 0), rnode(GOUT, 44, 0, 47) },
  { pnode(GPIO, 44, 0, OEIN, 1, 1), rnode(GOUT, 44, 0, 39) },
  { pnode(GPIO, 44, 0, BSLIPMAX, 1, -1), rnode(GIN, 44, 0, 25) },
  { pnode(GPIO, 44, 0, CEIN, 1, -1), rnode(GOUT, 44, 0, 51) },
  { pnode(GPIO, 44, 0, CEOUT, 1, -1), rnode(GOUT, 44, 0, 50) },
  { pnode(GPIO, 44, 0, ACLR, 1, -1), rnode(GOUT, 44, 0, 42) },
  { pnode(GPIO, 44, 0, SCLR, 1, -1), rnode(GOUT, 44, 0, 46) },
  { pnode(GPIO, 44, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 44, 0, 11) },
  { pnode(GPIO, 44, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 44, 0, 9) },
  { pnode(GPIO, 44, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 44, 0, 15) },
  { pnode(GPIO, 44, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 44, 0, 13) },
  { pnode(GPIO, 44, 0, DATAIN, 2, 0), rnode(GOUT, 44, 0, 14) },
  { pnode(GPIO, 44, 0, DATAIN, 2, 1), rnode(GOUT, 44, 0, 22) },
  { pnode(GPIO, 44, 0, DATAIN, 2, 2), rnode(GOUT, 44, 0, 15) },
  { pnode(GPIO, 44, 0, DATAIN, 2, 3), rnode(GOUT, 44, 0, 23) },
  { pnode(GPIO, 44, 0, DATAOUT, 2, 0), rnode(GIN, 44, 0, 8) },
  { pnode(GPIO, 44, 0, DATAOUT, 2, 1), rnode(GIN, 44, 0, 9) },
  { pnode(GPIO, 44, 0, DATAOUT, 2, 2), rnode(GIN, 44, 0, 10) },
  { pnode(GPIO, 44, 0, DATAOUT, 2, 3), rnode(GIN, 44, 0, 11) },
  { pnode(GPIO, 44, 0, DATAOUT, 2, 4), rnode(GIN, 44, 0, 12) },
  { pnode(GPIO, 44, 0, OEIN, 2, 0), rnode(GOUT, 44, 0, 16) },
  { pnode(GPIO, 44, 0, OEIN, 2, 1), rnode(GOUT, 44, 0, 24) },
  { pnode(GPIO, 44, 0, BSLIPMAX, 2, -1), rnode(GIN, 44, 0, 7) },
  { pnode(GPIO, 44, 0, CEIN, 2, -1), rnode(GOUT, 44, 0, 20) },
  { pnode(GPIO, 44, 0, CEOUT, 2, -1), rnode(GOUT, 44, 0, 13) },
  { pnode(GPIO, 44, 0, ACLR, 2, -1), rnode(GOUT, 44, 0, 21) },
  { pnode(GPIO, 44, 0, SCLR, 2, -1), rnode(GOUT, 44, 0, 25) },
  { pnode(GPIO, 44, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 44, 0, 5) },
  { pnode(GPIO, 44, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 44, 0, 7) },
  { pnode(GPIO, 44, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 44, 0, 1) },
  { pnode(GPIO, 44, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 44, 0, 3) },
  { pnode(GPIO, 44, 0, DATAIN, 3, 0), rnode(GOUT, 44, 0, 3) },
  { pnode(GPIO, 44, 0, DATAIN, 3, 1), rnode(GOUT, 44, 0, 17) },
  { pnode(GPIO, 44, 0, DATAIN, 3, 2), rnode(GOUT, 44, 0, 8) },
  { pnode(GPIO, 44, 0, DATAIN, 3, 3), rnode(GOUT, 44, 0, 18) },
  { pnode(GPIO, 44, 0, DATAOUT, 3, 0), rnode(GIN, 44, 0, 2) },
  { pnode(GPIO, 44, 0, DATAOUT, 3, 1), rnode(GIN, 44, 0, 3) },
  { pnode(GPIO, 44, 0, DATAOUT, 3, 2), rnode(GIN, 44, 0, 4) },
  { pnode(GPIO, 44, 0, DATAOUT, 3, 3), rnode(GIN, 44, 0, 5) },
  { pnode(GPIO, 44, 0, DATAOUT, 3, 4), rnode(GIN, 44, 0, 6) },
  { pnode(GPIO, 44, 0, OEIN, 3, 0), rnode(GOUT, 44, 0, 2) },
  { pnode(GPIO, 44, 0, OEIN, 3, 1), rnode(GOUT, 44, 0, 19) },
  { pnode(GPIO, 44, 0, BSLIPMAX, 3, -1), rnode(GIN, 44, 0, 1) },
  { pnode(GPIO, 44, 0, CEIN, 3, -1), rnode(GOUT, 44, 0, 5) },
  { pnode(GPIO, 44, 0, CEOUT, 3, -1), rnode(GOUT, 44, 0, 4) },
  { pnode(GPIO, 44, 0, ACLR, 3, -1), rnode(GOUT, 44, 0, 12) },
  { pnode(GPIO, 44, 0, SCLR, 3, -1), rnode(GOUT, 44, 0, 1) },
  { pnode(GPIO, 44, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 44, 0, 4) },
  { pnode(GPIO, 44, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 44, 0, 6) },
  { pnode(GPIO, 44, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 44, 0, 0) },
  { pnode(GPIO, 44, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 44, 0, 2) },
  { pnode(GPIO, 45, 0, DATAIN, 0, 0), rnode(GOUT, 45, 0, 44) },
  { pnode(GPIO, 45, 0, DATAIN, 0, 1), rnode(GOUT, 45, 0, 34) },
  { pnode(GPIO, 45, 0, DATAIN, 0, 2), rnode(GOUT, 45, 0, 43) },
  { pnode(GPIO, 45, 0, DATAIN, 0, 3), rnode(GOUT, 45, 0, 29) },
  { pnode(GPIO, 45, 0, DATAOUT, 0, 0), rnode(GIN, 45, 0, 18) },
  { pnode(GPIO, 45, 0, DATAOUT, 0, 1), rnode(GIN, 45, 0, 17) },
  { pnode(GPIO, 45, 0, DATAOUT, 0, 2), rnode(GIN, 45, 0, 16) },
  { pnode(GPIO, 45, 0, DATAOUT, 0, 3), rnode(GIN, 45, 0, 15) },
  { pnode(GPIO, 45, 0, DATAOUT, 0, 4), rnode(GIN, 45, 0, 14) },
  { pnode(GPIO, 45, 0, OEIN, 0, 0), rnode(GOUT, 45, 0, 38) },
  { pnode(GPIO, 45, 0, OEIN, 0, 1), rnode(GOUT, 45, 0, 30) },
  { pnode(GPIO, 45, 0, BSLIPMAX, 0, -1), rnode(GIN, 45, 0, 19) },
  { pnode(GPIO, 45, 0, CEIN, 0, -1), rnode(GOUT, 45, 0, 27) },
  { pnode(GPIO, 45, 0, CEOUT, 0, -1), rnode(GOUT, 45, 0, 45) },
  { pnode(GPIO, 45, 0, ACLR, 0, -1), rnode(GOUT, 45, 0, 28) },
  { pnode(GPIO, 45, 0, SCLR, 0, -1), rnode(GOUT, 45, 0, 31) },
  { pnode(GPIO, 45, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 45, 0, 10) },
  { pnode(GPIO, 45, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 45, 0, 8) },
  { pnode(GPIO, 45, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 45, 0, 14) },
  { pnode(GPIO, 45, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 45, 0, 12) },
  { pnode(GPIO, 45, 0, DATAIN, 1, 0), rnode(GOUT, 45, 0, 49) },
  { pnode(GPIO, 45, 0, DATAIN, 1, 1), rnode(GOUT, 45, 0, 41) },
  { pnode(GPIO, 45, 0, DATAIN, 1, 2), rnode(GOUT, 45, 0, 48) },
  { pnode(GPIO, 45, 0, DATAIN, 1, 3), rnode(GOUT, 45, 0, 40) },
  { pnode(GPIO, 45, 0, DATAOUT, 1, 0), rnode(GIN, 45, 0, 24) },
  { pnode(GPIO, 45, 0, DATAOUT, 1, 1), rnode(GIN, 45, 0, 23) },
  { pnode(GPIO, 45, 0, DATAOUT, 1, 2), rnode(GIN, 45, 0, 22) },
  { pnode(GPIO, 45, 0, DATAOUT, 1, 3), rnode(GIN, 45, 0, 21) },
  { pnode(GPIO, 45, 0, DATAOUT, 1, 4), rnode(GIN, 45, 0, 20) },
  { pnode(GPIO, 45, 0, OEIN, 1, 0), rnode(GOUT, 45, 0, 47) },
  { pnode(GPIO, 45, 0, OEIN, 1, 1), rnode(GOUT, 45, 0, 39) },
  { pnode(GPIO, 45, 0, BSLIPMAX, 1, -1), rnode(GIN, 45, 0, 25) },
  { pnode(GPIO, 45, 0, CEIN, 1, -1), rnode(GOUT, 45, 0, 51) },
  { pnode(GPIO, 45, 0, CEOUT, 1, -1), rnode(GOUT, 45, 0, 50) },
  { pnode(GPIO, 45, 0, ACLR, 1, -1), rnode(GOUT, 45, 0, 42) },
  { pnode(GPIO, 45, 0, SCLR, 1, -1), rnode(GOUT, 45, 0, 46) },
  { pnode(GPIO, 45, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 45, 0, 11) },
  { pnode(GPIO, 45, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 45, 0, 9) },
  { pnode(GPIO, 45, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 45, 0, 15) },
  { pnode(GPIO, 45, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 45, 0, 13) },
  { pnode(GPIO, 45, 0, DATAIN, 2, 0), rnode(GOUT, 45, 0, 14) },
  { pnode(GPIO, 45, 0, DATAIN, 2, 1), rnode(GOUT, 45, 0, 22) },
  { pnode(GPIO, 45, 0, DATAIN, 2, 2), rnode(GOUT, 45, 0, 15) },
  { pnode(GPIO, 45, 0, DATAIN, 2, 3), rnode(GOUT, 45, 0, 23) },
  { pnode(GPIO, 45, 0, DATAOUT, 2, 0), rnode(GIN, 45, 0, 8) },
  { pnode(GPIO, 45, 0, DATAOUT, 2, 1), rnode(GIN, 45, 0, 9) },
  { pnode(GPIO, 45, 0, DATAOUT, 2, 2), rnode(GIN, 45, 0, 10) },
  { pnode(GPIO, 45, 0, DATAOUT, 2, 3), rnode(GIN, 45, 0, 11) },
  { pnode(GPIO, 45, 0, DATAOUT, 2, 4), rnode(GIN, 45, 0, 12) },
  { pnode(GPIO, 45, 0, OEIN, 2, 0), rnode(GOUT, 45, 0, 16) },
  { pnode(GPIO, 45, 0, OEIN, 2, 1), rnode(GOUT, 45, 0, 24) },
  { pnode(GPIO, 45, 0, BSLIPMAX, 2, -1), rnode(GIN, 45, 0, 7) },
  { pnode(GPIO, 45, 0, CEIN, 2, -1), rnode(GOUT, 45, 0, 20) },
  { pnode(GPIO, 45, 0, CEOUT, 2, -1), rnode(GOUT, 45, 0, 13) },
  { pnode(GPIO, 45, 0, ACLR, 2, -1), rnode(GOUT, 45, 0, 21) },
  { pnode(GPIO, 45, 0, SCLR, 2, -1), rnode(GOUT, 45, 0, 25) },
  { pnode(GPIO, 45, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 45, 0, 5) },
  { pnode(GPIO, 45, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 45, 0, 7) },
  { pnode(GPIO, 45, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 45, 0, 1) },
  { pnode(GPIO, 45, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 45, 0, 3) },
  { pnode(GPIO, 45, 0, DATAIN, 3, 0), rnode(GOUT, 45, 0, 3) },
  { pnode(GPIO, 45, 0, DATAIN, 3, 1), rnode(GOUT, 45, 0, 17) },
  { pnode(GPIO, 45, 0, DATAIN, 3, 2), rnode(GOUT, 45, 0, 8) },
  { pnode(GPIO, 45, 0, DATAIN, 3, 3), rnode(GOUT, 45, 0, 18) },
  { pnode(GPIO, 45, 0, DATAOUT, 3, 0), rnode(GIN, 45, 0, 2) },
  { pnode(GPIO, 45, 0, DATAOUT, 3, 1), rnode(GIN, 45, 0, 3) },
  { pnode(GPIO, 45, 0, DATAOUT, 3, 2), rnode(GIN, 45, 0, 4) },
  { pnode(GPIO, 45, 0, DATAOUT, 3, 3), rnode(GIN, 45, 0, 5) },
  { pnode(GPIO, 45, 0, DATAOUT, 3, 4), rnode(GIN, 45, 0, 6) },
  { pnode(GPIO, 45, 0, OEIN, 3, 0), rnode(GOUT, 45, 0, 2) },
  { pnode(GPIO, 45, 0, OEIN, 3, 1), rnode(GOUT, 45, 0, 19) },
  { pnode(GPIO, 45, 0, BSLIPMAX, 3, -1), rnode(GIN, 45, 0, 1) },
  { pnode(GPIO, 45, 0, CEIN, 3, -1), rnode(GOUT, 45, 0, 5) },
  { pnode(GPIO, 45, 0, CEOUT, 3, -1), rnode(GOUT, 45, 0, 4) },
  { pnode(GPIO, 45, 0, ACLR, 3, -1), rnode(GOUT, 45, 0, 12) },
  { pnode(GPIO, 45, 0, SCLR, 3, -1), rnode(GOUT, 45, 0, 1) },
  { pnode(GPIO, 45, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 45, 0, 4) },
  { pnode(GPIO, 45, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 45, 0, 6) },
  { pnode(GPIO, 45, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 45, 0, 0) },
  { pnode(GPIO, 45, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 45, 0, 2) },
  { pnode(GPIO, 45, 39, DATAIN, 0, 0), rnode(GOUT, 45, 39, 44) },
  { pnode(GPIO, 45, 39, DATAIN, 0, 1), rnode(GOUT, 45, 39, 34) },
  { pnode(GPIO, 45, 39, DATAIN, 0, 2), rnode(GOUT, 45, 39, 43) },
  { pnode(GPIO, 45, 39, DATAIN, 0, 3), rnode(GOUT, 45, 39, 29) },
  { pnode(GPIO, 45, 39, DATAOUT, 0, 0), rnode(GIN, 45, 39, 18) },
  { pnode(GPIO, 45, 39, DATAOUT, 0, 1), rnode(GIN, 45, 39, 17) },
  { pnode(GPIO, 45, 39, DATAOUT, 0, 2), rnode(GIN, 45, 39, 16) },
  { pnode(GPIO, 45, 39, DATAOUT, 0, 3), rnode(GIN, 45, 39, 15) },
  { pnode(GPIO, 45, 39, DATAOUT, 0, 4), rnode(GIN, 45, 39, 14) },
  { pnode(GPIO, 45, 39, OEIN, 0, 0), rnode(GOUT, 45, 39, 38) },
  { pnode(GPIO, 45, 39, OEIN, 0, 1), rnode(GOUT, 45, 39, 30) },
  { pnode(GPIO, 45, 39, BSLIPMAX, 0, -1), rnode(GIN, 45, 39, 19) },
  { pnode(GPIO, 45, 39, CEIN, 0, -1), rnode(GOUT, 45, 39, 27) },
  { pnode(GPIO, 45, 39, CEOUT, 0, -1), rnode(GOUT, 45, 39, 45) },
  { pnode(GPIO, 45, 39, ACLR, 0, -1), rnode(GOUT, 45, 39, 28) },
  { pnode(GPIO, 45, 39, SCLR, 0, -1), rnode(GOUT, 45, 39, 31) },
  { pnode(GPIO, 45, 39, CLKIN_IN, 0, 0), rnode(DCMUX, 45, 39, 10) },
  { pnode(GPIO, 45, 39, CLKIN_IN, 0, 1), rnode(DCMUX, 45, 39, 8) },
  { pnode(GPIO, 45, 39, CLKIN_OUT, 0, 0), rnode(DCMUX, 45, 39, 14) },
  { pnode(GPIO, 45, 39, CLKIN_OUT, 0, 1), rnode(DCMUX, 45, 39, 12) },
  { pnode(GPIO, 45, 39, DATAIN, 1, 0), rnode(GOUT, 45, 39, 49) },
  { pnode(GPIO, 45, 39, DATAIN, 1, 1), rnode(GOUT, 45, 39, 41) },
  { pnode(GPIO, 45, 39, DATAIN, 1, 2), rnode(GOUT, 45, 39, 48) },
  { pnode(GPIO, 45, 39, DATAIN, 1, 3), rnode(GOUT, 45, 39, 40) },
  { pnode(GPIO, 45, 39, DATAOUT, 1, 0), rnode(GIN, 45, 39, 24) },
  { pnode(GPIO, 45, 39, DATAOUT, 1, 1), rnode(GIN, 45, 39, 23) },
  { pnode(GPIO, 45, 39, DATAOUT, 1, 2), rnode(GIN, 45, 39, 22) },
  { pnode(GPIO, 45, 39, DATAOUT, 1, 3), rnode(GIN, 45, 39, 21) },
  { pnode(GPIO, 45, 39, DATAOUT, 1, 4), rnode(GIN, 45, 39, 20) },
  { pnode(GPIO, 45, 39, OEIN, 1, 0), rnode(GOUT, 45, 39, 47) },
  { pnode(GPIO, 45, 39, OEIN, 1, 1), rnode(GOUT, 45, 39, 39) },
  { pnode(GPIO, 45, 39, BSLIPMAX, 1, -1), rnode(GIN, 45, 39, 25) },
  { pnode(GPIO, 45, 39, CEIN, 1, -1), rnode(GOUT, 45, 39, 51) },
  { pnode(GPIO, 45, 39, CEOUT, 1, -1), rnode(GOUT, 45, 39, 50) },
  { pnode(GPIO, 45, 39, ACLR, 1, -1), rnode(GOUT, 45, 39, 42) },
  { pnode(GPIO, 45, 39, SCLR, 1, -1), rnode(GOUT, 45, 39, 46) },
  { pnode(GPIO, 45, 39, CLKIN_IN, 1, 0), rnode(DCMUX, 45, 39, 11) },
  { pnode(GPIO, 45, 39, CLKIN_IN, 1, 1), rnode(DCMUX, 45, 39, 9) },
  { pnode(GPIO, 45, 39, CLKIN_OUT, 1, 0), rnode(DCMUX, 45, 39, 15) },
  { pnode(GPIO, 45, 39, CLKIN_OUT, 1, 1), rnode(DCMUX, 45, 39, 13) },
  { pnode(GPIO, 45, 39, DATAOUT, 2, 0), rnode(GIN, 45, 39, 8) },
  { pnode(GPIO, 45, 39, DATAOUT, 2, 1), rnode(GIN, 45, 39, 9) },
  { pnode(GPIO, 45, 39, DATAOUT, 2, 2), rnode(GIN, 45, 39, 10) },
  { pnode(GPIO, 45, 39, DATAOUT, 2, 3), rnode(GIN, 45, 39, 11) },
  { pnode(GPIO, 45, 39, DATAOUT, 2, 4), rnode(GIN, 45, 39, 12) },
  { pnode(GPIO, 45, 39, OEIN, 2, 0), rnode(GOUT, 45, 39, 16) },
  { pnode(GPIO, 45, 39, OEIN, 2, 1), rnode(GOUT, 45, 39, 24) },
  { pnode(GPIO, 45, 39, BSLIPMAX, 2, -1), rnode(GIN, 45, 39, 7) },
  { pnode(GPIO, 45, 39, CEIN, 2, -1), rnode(GOUT, 45, 39, 20) },
  { pnode(GPIO, 45, 39, CEOUT, 2, -1), rnode(GOUT, 45, 39, 13) },
  { pnode(GPIO, 45, 39, ACLR, 2, -1), rnode(GOUT, 45, 39, 21) },
  { pnode(GPIO, 45, 39, SCLR, 2, -1), rnode(GOUT, 45, 39, 25) },
  { pnode(GPIO, 45, 39, CLKIN_IN, 2, 0), rnode(DCMUX, 45, 39, 5) },
  { pnode(GPIO, 45, 39, CLKIN_IN, 2, 1), rnode(DCMUX, 45, 39, 7) },
  { pnode(GPIO, 45, 39, CLKIN_OUT, 2, 0), rnode(DCMUX, 45, 39, 1) },
  { pnode(GPIO, 45, 39, CLKIN_OUT, 2, 1), rnode(DCMUX, 45, 39, 3) },
  { pnode(GPIO, 45, 39, DATAOUT, 3, 4), rnode(GIN, 45, 39, 6) },
  { pnode(GPIO, 45, 39, BSLIPMAX, 3, -1), rnode(GIN, 45, 39, 1) },
  { pnode(GPIO, 45, 39, CEIN, 3, -1), rnode(GOUT, 45, 39, 5) },
  { pnode(GPIO, 45, 39, CEOUT, 3, -1), rnode(GOUT, 45, 39, 4) },
  { pnode(GPIO, 45, 39, ACLR, 3, -1), rnode(GOUT, 45, 39, 12) },
  { pnode(GPIO, 45, 39, SCLR, 3, -1), rnode(GOUT, 45, 39, 1) },
  { pnode(GPIO, 45, 39, CLKIN_IN, 3, 0), rnode(DCMUX, 45, 39, 4) },
  { pnode(GPIO, 45, 39, CLKIN_IN, 3, 1), rnode(DCMUX, 45, 39, 6) },
  { pnode(GPIO, 45, 39, CLKIN_OUT, 3, 0), rnode(DCMUX, 45, 39, 0) },
  { pnode(GPIO, 45, 39, CLKIN_OUT, 3, 1), rnode(DCMUX, 45, 39, 2) },
  { pnode(GPIO, 46, 0, DATAIN, 0, 0), rnode(GOUT, 46, 0, 44) },
  { pnode(GPIO, 46, 0, DATAIN, 0, 1), rnode(GOUT, 46, 0, 34) },
  { pnode(GPIO, 46, 0, DATAIN, 0, 2), rnode(GOUT, 46, 0, 43) },
  { pnode(GPIO, 46, 0, DATAIN, 0, 3), rnode(GOUT, 46, 0, 29) },
  { pnode(GPIO, 46, 0, DATAOUT, 0, 0), rnode(GIN, 46, 0, 18) },
  { pnode(GPIO, 46, 0, DATAOUT, 0, 1), rnode(GIN, 46, 0, 17) },
  { pnode(GPIO, 46, 0, DATAOUT, 0, 2), rnode(GIN, 46, 0, 16) },
  { pnode(GPIO, 46, 0, DATAOUT, 0, 3), rnode(GIN, 46, 0, 15) },
  { pnode(GPIO, 46, 0, DATAOUT, 0, 4), rnode(GIN, 46, 0, 14) },
  { pnode(GPIO, 46, 0, OEIN, 0, 0), rnode(GOUT, 46, 0, 38) },
  { pnode(GPIO, 46, 0, OEIN, 0, 1), rnode(GOUT, 46, 0, 30) },
  { pnode(GPIO, 46, 0, BSLIPMAX, 0, -1), rnode(GIN, 46, 0, 19) },
  { pnode(GPIO, 46, 0, CEIN, 0, -1), rnode(GOUT, 46, 0, 27) },
  { pnode(GPIO, 46, 0, CEOUT, 0, -1), rnode(GOUT, 46, 0, 45) },
  { pnode(GPIO, 46, 0, ACLR, 0, -1), rnode(GOUT, 46, 0, 28) },
  { pnode(GPIO, 46, 0, SCLR, 0, -1), rnode(GOUT, 46, 0, 31) },
  { pnode(GPIO, 46, 0, CLKIN_IN, 0, 0), rnode(DCMUX, 46, 0, 10) },
  { pnode(GPIO, 46, 0, CLKIN_IN, 0, 1), rnode(DCMUX, 46, 0, 8) },
  { pnode(GPIO, 46, 0, CLKIN_OUT, 0, 0), rnode(DCMUX, 46, 0, 14) },
  { pnode(GPIO, 46, 0, CLKIN_OUT, 0, 1), rnode(DCMUX, 46, 0, 12) },
  { pnode(GPIO, 46, 0, DATAIN, 1, 0), rnode(GOUT, 46, 0, 49) },
  { pnode(GPIO, 46, 0, DATAIN, 1, 1), rnode(GOUT, 46, 0, 41) },
  { pnode(GPIO, 46, 0, DATAIN, 1, 2), rnode(GOUT, 46, 0, 48) },
  { pnode(GPIO, 46, 0, DATAIN, 1, 3), rnode(GOUT, 46, 0, 40) },
  { pnode(GPIO, 46, 0, DATAOUT, 1, 0), rnode(GIN, 46, 0, 24) },
  { pnode(GPIO, 46, 0, DATAOUT, 1, 1), rnode(GIN, 46, 0, 23) },
  { pnode(GPIO, 46, 0, DATAOUT, 1, 2), rnode(GIN, 46, 0, 22) },
  { pnode(GPIO, 46, 0, DATAOUT, 1, 3), rnode(GIN, 46, 0, 21) },
  { pnode(GPIO, 46, 0, DATAOUT, 1, 4), rnode(GIN, 46, 0, 20) },
  { pnode(GPIO, 46, 0, OEIN, 1, 0), rnode(GOUT, 46, 0, 47) },
  { pnode(GPIO, 46, 0, OEIN, 1, 1), rnode(GOUT, 46, 0, 39) },
  { pnode(GPIO, 46, 0, BSLIPMAX, 1, -1), rnode(GIN, 46, 0, 25) },
  { pnode(GPIO, 46, 0, CEIN, 1, -1), rnode(GOUT, 46, 0, 51) },
  { pnode(GPIO, 46, 0, CEOUT, 1, -1), rnode(GOUT, 46, 0, 50) },
  { pnode(GPIO, 46, 0, ACLR, 1, -1), rnode(GOUT, 46, 0, 42) },
  { pnode(GPIO, 46, 0, SCLR, 1, -1), rnode(GOUT, 46, 0, 46) },
  { pnode(GPIO, 46, 0, CLKIN_IN, 1, 0), rnode(DCMUX, 46, 0, 11) },
  { pnode(GPIO, 46, 0, CLKIN_IN, 1, 1), rnode(DCMUX, 46, 0, 9) },
  { pnode(GPIO, 46, 0, CLKIN_OUT, 1, 0), rnode(DCMUX, 46, 0, 15) },
  { pnode(GPIO, 46, 0, CLKIN_OUT, 1, 1), rnode(DCMUX, 46, 0, 13) },
  { pnode(GPIO, 46, 0, DATAIN, 2, 0), rnode(GOUT, 46, 0, 14) },
  { pnode(GPIO, 46, 0, DATAIN, 2, 1), rnode(GOUT, 46, 0, 22) },
  { pnode(GPIO, 46, 0, DATAIN, 2, 2), rnode(GOUT, 46, 0, 15) },
  { pnode(GPIO, 46, 0, DATAIN, 2, 3), rnode(GOUT, 46, 0, 23) },
  { pnode(GPIO, 46, 0, DATAOUT, 2, 0), rnode(GIN, 46, 0, 8) },
  { pnode(GPIO, 46, 0, DATAOUT, 2, 1), rnode(GIN, 46, 0, 9) },
  { pnode(GPIO, 46, 0, DATAOUT, 2, 2), rnode(GIN, 46, 0, 10) },
  { pnode(GPIO, 46, 0, DATAOUT, 2, 3), rnode(GIN, 46, 0, 11) },
  { pnode(GPIO, 46, 0, DATAOUT, 2, 4), rnode(GIN, 46, 0, 12) },
  { pnode(GPIO, 46, 0, OEIN, 2, 0), rnode(GOUT, 46, 0, 16) },
  { pnode(GPIO, 46, 0, OEIN, 2, 1), rnode(GOUT, 46, 0, 24) },
  { pnode(GPIO, 46, 0, BSLIPMAX, 2, -1), rnode(GIN, 46, 0, 7) },
  { pnode(GPIO, 46, 0, CEIN, 2, -1), rnode(GOUT, 46, 0, 20) },
  { pnode(GPIO, 46, 0, CEOUT, 2, -1), rnode(GOUT, 46, 0, 13) },
  { pnode(GPIO, 46, 0, ACLR, 2, -1), rnode(GOUT, 46, 0, 21) },
  { pnode(GPIO, 46, 0, SCLR, 2, -1), rnode(GOUT, 46, 0, 25) },
  { pnode(GPIO, 46, 0, CLKIN_IN, 2, 0), rnode(DCMUX, 46, 0, 5) },
  { pnode(GPIO, 46, 0, CLKIN_IN, 2, 1), rnode(DCMUX, 46, 0, 7) },
  { pnode(GPIO, 46, 0, CLKIN_OUT, 2, 0), rnode(DCMUX, 46, 0, 1) },
  { pnode(GPIO, 46, 0, CLKIN_OUT, 2, 1), rnode(DCMUX, 46, 0, 3) },
  { pnode(GPIO, 46, 0, DATAIN, 3, 0), rnode(GOUT, 46, 0, 3) },
  { pnode(GPIO, 46, 0, DATAIN, 3, 1), rnode(GOUT, 46, 0, 17) },
  { pnode(GPIO, 46, 0, DATAIN, 3, 2), rnode(GOUT, 46, 0, 8) },
  { pnode(GPIO, 46, 0, DATAIN, 3, 3), rnode(GOUT, 46, 0, 18) },
  { pnode(GPIO, 46, 0, DATAOUT, 3, 0), rnode(GIN, 46, 0, 2) },
  { pnode(GPIO, 46, 0, DATAOUT, 3, 1), rnode(GIN, 46, 0, 3) },
  { pnode(GPIO, 46, 0, DATAOUT, 3, 2), rnode(GIN, 46, 0, 4) },
  { pnode(GPIO, 46, 0, DATAOUT, 3, 3), rnode(GIN, 46, 0, 5) },
  { pnode(GPIO, 46, 0, DATAOUT, 3, 4), rnode(GIN, 46, 0, 6) },
  { pnode(GPIO, 46, 0, OEIN, 3, 0), rnode(GOUT, 46, 0, 2) },
  { pnode(GPIO, 46, 0, OEIN, 3, 1), rnode(GOUT, 46, 0, 19) },
  { pnode(GPIO, 46, 0, BSLIPMAX, 3, -1), rnode(GIN, 46, 0, 1) },
  { pnode(GPIO, 46, 0, CEIN, 3, -1), rnode(GOUT, 46, 0, 5) },
  { pnode(GPIO, 46, 0, CEOUT, 3, -1), rnode(GOUT, 46, 0, 4) },
  { pnode(GPIO, 46, 0, ACLR, 3, -1), rnode(GOUT, 46, 0, 12) },
  { pnode(GPIO, 46, 0, SCLR, 3, -1), rnode(GOUT, 46, 0, 1) },
  { pnode(GPIO, 46, 0, CLKIN_IN, 3, 0), rnode(DCMUX, 46, 0, 4) },
  { pnode(GPIO, 46, 0, CLKIN_IN, 3, 1), rnode(DCMUX, 46, 0, 6) },
  { pnode(GPIO, 46, 0, CLKIN_OUT, 3, 0), rnode(DCMUX, 46, 0, 0) },
  { pnode(GPIO, 46, 0, CLKIN_OUT, 3, 1), rnode(DCMUX, 46, 0, 2) },
  { pnode(GPIO, 48, 10, DATAIN, 0, 0), rnode(GOUT, 48, 10, 49) },
  { pnode(GPIO, 48, 10, DATAIN, 0, 1), rnode(GOUT, 48, 10, 50) },
  { pnode(GPIO, 48, 10, DATAIN, 0, 2), rnode(GOUT, 48, 10, 51) },
  { pnode(GPIO, 48, 10, DATAIN, 0, 3), rnode(GOUT, 48, 10, 52) },
  { pnode(GPIO, 48, 10, DATAOUT, 0, 0), rnode(GIN, 48, 10, 48) },
  { pnode(GPIO, 48, 10, DATAOUT, 0, 1), rnode(GIN, 48, 10, 49) },
  { pnode(GPIO, 48, 10, DATAOUT, 0, 2), rnode(GIN, 48, 10, 50) },
  { pnode(GPIO, 48, 10, DATAOUT, 0, 3), rnode(GIN, 48, 10, 51) },
  { pnode(GPIO, 48, 10, DATAOUT, 0, 4), rnode(GIN, 48, 10, 52) },
  { pnode(GPIO, 48, 10, OEIN, 0, 0), rnode(GOUT, 48, 10, 53) },
  { pnode(GPIO, 48, 10, OEIN, 0, 1), rnode(GOUT, 48, 10, 54) },
  { pnode(GPIO, 48, 10, BSLIPMAX, 0, -1), rnode(GIN, 48, 10, 47) },
  { pnode(GPIO, 48, 10, CEIN, 0, -1), rnode(GOUT, 48, 10, 46) },
  { pnode(GPIO, 48, 10, CEOUT, 0, -1), rnode(GOUT, 48, 10, 47) },
  { pnode(GPIO, 48, 10, ACLR, 0, -1), rnode(GOUT, 48, 10, 48) },
  { pnode(GPIO, 48, 10, SCLR, 0, -1), rnode(GOUT, 48, 10, 55) },
  { pnode(GPIO, 48, 10, CLKIN_IN, 0, 0), rnode(DCMUX, 48, 10, 14) },
  { pnode(GPIO, 48, 10, CLKIN_IN, 0, 1), rnode(DCMUX, 48, 10, 15) },
  { pnode(GPIO, 48, 10, CLKIN_OUT, 0, 0), rnode(DCMUX, 48, 10, 12) },
  { pnode(GPIO, 48, 10, CLKIN_OUT, 0, 1), rnode(DCMUX, 48, 10, 13) },
  { pnode(GPIO, 48, 10, DATAIN, 1, 0), rnode(GOUT, 48, 10, 39) },
  { pnode(GPIO, 48, 10, DATAIN, 1, 1), rnode(GOUT, 48, 10, 40) },
  { pnode(GPIO, 48, 10, DATAIN, 1, 2), rnode(GOUT, 48, 10, 41) },
  { pnode(GPIO, 48, 10, DATAIN, 1, 3), rnode(GOUT, 48, 10, 42) },
  { pnode(GPIO, 48, 10, DATAOUT, 1, 0), rnode(GIN, 48, 10, 42) },
  { pnode(GPIO, 48, 10, DATAOUT, 1, 1), rnode(GIN, 48, 10, 43) },
  { pnode(GPIO, 48, 10, DATAOUT, 1, 2), rnode(GIN, 48, 10, 44) },
  { pnode(GPIO, 48, 10, DATAOUT, 1, 3), rnode(GIN, 48, 10, 45) },
  { pnode(GPIO, 48, 10, DATAOUT, 1, 4), rnode(GIN, 48, 10, 46) },
  { pnode(GPIO, 48, 10, OEIN, 1, 0), rnode(GOUT, 48, 10, 43) },
  { pnode(GPIO, 48, 10, OEIN, 1, 1), rnode(GOUT, 48, 10, 44) },
  { pnode(GPIO, 48, 10, BSLIPMAX, 1, -1), rnode(GIN, 48, 10, 41) },
  { pnode(GPIO, 48, 10, CEIN, 1, -1), rnode(GOUT, 48, 10, 36) },
  { pnode(GPIO, 48, 10, CEOUT, 1, -1), rnode(GOUT, 48, 10, 37) },
  { pnode(GPIO, 48, 10, ACLR, 1, -1), rnode(GOUT, 48, 10, 38) },
  { pnode(GPIO, 48, 10, SCLR, 1, -1), rnode(GOUT, 48, 10, 45) },
  { pnode(GPIO, 48, 10, CLKIN_IN, 1, 0), rnode(DCMUX, 48, 10, 10) },
  { pnode(GPIO, 48, 10, CLKIN_IN, 1, 1), rnode(DCMUX, 48, 10, 11) },
  { pnode(GPIO, 48, 10, CLKIN_OUT, 1, 0), rnode(DCMUX, 48, 10, 8) },
  { pnode(GPIO, 48, 10, CLKIN_OUT, 1, 1), rnode(DCMUX, 48, 10, 9) },
  { pnode(GPIO, 48, 10, DATAIN, 2, 0), rnode(GOUT, 48, 10, 29) },
  { pnode(GPIO, 48, 10, DATAIN, 2, 1), rnode(GOUT, 48, 10, 30) },
  { pnode(GPIO, 48, 10, DATAIN, 2, 2), rnode(GOUT, 48, 10, 32) },
  { pnode(GPIO, 48, 10, DATAIN, 2, 3), rnode(GOUT, 48, 10, 33) },
  { pnode(GPIO, 48, 10, DATAOUT, 2, 0), rnode(GIN, 48, 10, 36) },
  { pnode(GPIO, 48, 10, DATAOUT, 2, 1), rnode(GIN, 48, 10, 37) },
  { pnode(GPIO, 48, 10, DATAOUT, 2, 2), rnode(GIN, 48, 10, 38) },
  { pnode(GPIO, 48, 10, DATAOUT, 2, 3), rnode(GIN, 48, 10, 39) },
  { pnode(GPIO, 48, 10, DATAOUT, 2, 4), rnode(GIN, 48, 10, 40) },
  { pnode(GPIO, 48, 10, OEIN, 2, 0), rnode(GOUT, 48, 10, 34) },
  { pnode(GPIO, 48, 10, OEIN, 2, 1), rnode(GOUT, 48, 10, 35) },
  { pnode(GPIO, 48, 10, BSLIPMAX, 2, -1), rnode(GIN, 48, 10, 35) },
  { pnode(GPIO, 48, 10, CEIN, 2, -1), rnode(GOUT, 48, 10, 26) },
  { pnode(GPIO, 48, 10, CEOUT, 2, -1), rnode(GOUT, 48, 10, 27) },
  { pnode(GPIO, 48, 10, ACLR, 2, -1), rnode(GOUT, 48, 10, 28) },
  { pnode(GPIO, 48, 10, SCLR, 2, -1), rnode(GOUT, 48, 10, 31) },
  { pnode(GPIO, 48, 10, CLKIN_IN, 2, 0), rnode(DCMUX, 48, 10, 6) },
  { pnode(GPIO, 48, 10, CLKIN_IN, 2, 1), rnode(DCMUX, 48, 10, 7) },
  { pnode(GPIO, 48, 10, CLKIN_OUT, 2, 0), rnode(DCMUX, 48, 10, 4) },
  { pnode(GPIO, 48, 10, CLKIN_OUT, 2, 1), rnode(DCMUX, 48, 10, 5) },
  { pnode(GPIO, 48, 10, DATAIN, 3, 0), rnode(GOUT, 48, 10, 19) },
  { pnode(GPIO, 48, 10, DATAIN, 3, 1), rnode(GOUT, 48, 10, 20) },
  { pnode(GPIO, 48, 10, DATAIN, 3, 2), rnode(GOUT, 48, 10, 21) },
  { pnode(GPIO, 48, 10, DATAIN, 3, 3), rnode(GOUT, 48, 10, 22) },
  { pnode(GPIO, 48, 10, DATAOUT, 3, 0), rnode(GIN, 48, 10, 30) },
  { pnode(GPIO, 48, 10, DATAOUT, 3, 1), rnode(GIN, 48, 10, 31) },
  { pnode(GPIO, 48, 10, DATAOUT, 3, 2), rnode(GIN, 48, 10, 32) },
  { pnode(GPIO, 48, 10, DATAOUT, 3, 3), rnode(GIN, 48, 10, 33) },
  { pnode(GPIO, 48, 10, DATAOUT, 3, 4), rnode(GIN, 48, 10, 34) },
  { pnode(GPIO, 48, 10, OEIN, 3, 0), rnode(GOUT, 48, 10, 23) },
  { pnode(GPIO, 48, 10, OEIN, 3, 1), rnode(GOUT, 48, 10, 24) },
  { pnode(GPIO, 48, 10, BSLIPMAX, 3, -1), rnode(GIN, 48, 10, 29) },
  { pnode(GPIO, 48, 10, CEIN, 3, -1), rnode(GOUT, 48, 10, 16) },
  { pnode(GPIO, 48, 10, CEOUT, 3, -1), rnode(GOUT, 48, 10, 17) },
  { pnode(GPIO, 48, 10, ACLR, 3, -1), rnode(GOUT, 48, 10, 18) },
  { pnode(GPIO, 48, 10, SCLR, 3, -1), rnode(GOUT, 48, 10, 25) },
  { pnode(GPIO, 48, 10, CLKIN_IN, 3, 0), rnode(DCMUX, 48, 10, 2) },
  { pnode(GPIO, 48, 10, CLKIN_IN, 3, 1), rnode(DCMUX, 48, 10, 3) },
  { pnode(GPIO, 48, 10, CLKIN_OUT, 3, 0), rnode(DCMUX, 48, 10, 0) },
  { pnode(GPIO, 48, 10, CLKIN_OUT, 3, 1), rnode(DCMUX, 48, 10, 1) },
  { pnode(GPIO, 48, 12, DATAIN, 0, 0), rnode(GOUT, 48, 12, 49) },
  { pnode(GPIO, 48, 12, DATAIN, 0, 1), rnode(GOUT, 48, 12, 50) },
  { pnode(GPIO, 48, 12, DATAIN, 0, 2), rnode(GOUT, 48, 12, 51) },
  { pnode(GPIO, 48, 12, DATAIN, 0, 3), rnode(GOUT, 48, 12, 52) },
  { pnode(GPIO, 48, 12, DATAOUT, 0, 0), rnode(GIN, 48, 12, 48) },
  { pnode(GPIO, 48, 12, DATAOUT, 0, 1), rnode(GIN, 48, 12, 49) },
  { pnode(GPIO, 48, 12, DATAOUT, 0, 2), rnode(GIN, 48, 12, 50) },
  { pnode(GPIO, 48, 12, DATAOUT, 0, 3), rnode(GIN, 48, 12, 51) },
  { pnode(GPIO, 48, 12, DATAOUT, 0, 4), rnode(GIN, 48, 12, 52) },
  { pnode(GPIO, 48, 12, OEIN, 0, 0), rnode(GOUT, 48, 12, 53) },
  { pnode(GPIO, 48, 12, OEIN, 0, 1), rnode(GOUT, 48, 12, 54) },
  { pnode(GPIO, 48, 12, BSLIPMAX, 0, -1), rnode(GIN, 48, 12, 47) },
  { pnode(GPIO, 48, 12, CEIN, 0, -1), rnode(GOUT, 48, 12, 46) },
  { pnode(GPIO, 48, 12, CEOUT, 0, -1), rnode(GOUT, 48, 12, 47) },
  { pnode(GPIO, 48, 12, ACLR, 0, -1), rnode(GOUT, 48, 12, 48) },
  { pnode(GPIO, 48, 12, SCLR, 0, -1), rnode(GOUT, 48, 12, 55) },
  { pnode(GPIO, 48, 12, CLKIN_IN, 0, 0), rnode(DCMUX, 48, 12, 14) },
  { pnode(GPIO, 48, 12, CLKIN_IN, 0, 1), rnode(DCMUX, 48, 12, 15) },
  { pnode(GPIO, 48, 12, CLKIN_OUT, 0, 0), rnode(DCMUX, 48, 12, 12) },
  { pnode(GPIO, 48, 12, CLKIN_OUT, 0, 1), rnode(DCMUX, 48, 12, 13) },
  { pnode(GPIO, 48, 12, DATAIN, 1, 0), rnode(GOUT, 48, 12, 39) },
  { pnode(GPIO, 48, 12, DATAIN, 1, 1), rnode(GOUT, 48, 12, 40) },
  { pnode(GPIO, 48, 12, DATAIN, 1, 2), rnode(GOUT, 48, 12, 41) },
  { pnode(GPIO, 48, 12, DATAIN, 1, 3), rnode(GOUT, 48, 12, 42) },
  { pnode(GPIO, 48, 12, DATAOUT, 1, 0), rnode(GIN, 48, 12, 42) },
  { pnode(GPIO, 48, 12, DATAOUT, 1, 1), rnode(GIN, 48, 12, 43) },
  { pnode(GPIO, 48, 12, DATAOUT, 1, 2), rnode(GIN, 48, 12, 44) },
  { pnode(GPIO, 48, 12, DATAOUT, 1, 3), rnode(GIN, 48, 12, 45) },
  { pnode(GPIO, 48, 12, DATAOUT, 1, 4), rnode(GIN, 48, 12, 46) },
  { pnode(GPIO, 48, 12, OEIN, 1, 0), rnode(GOUT, 48, 12, 43) },
  { pnode(GPIO, 48, 12, OEIN, 1, 1), rnode(GOUT, 48, 12, 44) },
  { pnode(GPIO, 48, 12, BSLIPMAX, 1, -1), rnode(GIN, 48, 12, 41) },
  { pnode(GPIO, 48, 12, CEIN, 1, -1), rnode(GOUT, 48, 12, 36) },
  { pnode(GPIO, 48, 12, CEOUT, 1, -1), rnode(GOUT, 48, 12, 37) },
  { pnode(GPIO, 48, 12, ACLR, 1, -1), rnode(GOUT, 48, 12, 38) },
  { pnode(GPIO, 48, 12, SCLR, 1, -1), rnode(GOUT, 48, 12, 45) },
  { pnode(GPIO, 48, 12, CLKIN_IN, 1, 0), rnode(DCMUX, 48, 12, 10) },
  { pnode(GPIO, 48, 12, CLKIN_IN, 1, 1), rnode(DCMUX, 48, 12, 11) },
  { pnode(GPIO, 48, 12, CLKIN_OUT, 1, 0), rnode(DCMUX, 48, 12, 8) },
  { pnode(GPIO, 48, 12, CLKIN_OUT, 1, 1), rnode(DCMUX, 48, 12, 9) },
  { pnode(GPIO, 48, 12, DATAIN, 2, 0), rnode(GOUT, 48, 12, 29) },
  { pnode(GPIO, 48, 12, DATAIN, 2, 1), rnode(GOUT, 48, 12, 30) },
  { pnode(GPIO, 48, 12, DATAIN, 2, 2), rnode(GOUT, 48, 12, 31) },
  { pnode(GPIO, 48, 12, DATAIN, 2, 3), rnode(GOUT, 48, 12, 32) },
  { pnode(GPIO, 48, 12, DATAOUT, 2, 0), rnode(GIN, 48, 12, 36) },
  { pnode(GPIO, 48, 12, DATAOUT, 2, 1), rnode(GIN, 48, 12, 37) },
  { pnode(GPIO, 48, 12, DATAOUT, 2, 2), rnode(GIN, 48, 12, 38) },
  { pnode(GPIO, 48, 12, DATAOUT, 2, 3), rnode(GIN, 48, 12, 39) },
  { pnode(GPIO, 48, 12, DATAOUT, 2, 4), rnode(GIN, 48, 12, 40) },
  { pnode(GPIO, 48, 12, OEIN, 2, 0), rnode(GOUT, 48, 12, 33) },
  { pnode(GPIO, 48, 12, OEIN, 2, 1), rnode(GOUT, 48, 12, 34) },
  { pnode(GPIO, 48, 12, BSLIPMAX, 2, -1), rnode(GIN, 48, 12, 35) },
  { pnode(GPIO, 48, 12, CEIN, 2, -1), rnode(GOUT, 48, 12, 26) },
  { pnode(GPIO, 48, 12, CEOUT, 2, -1), rnode(GOUT, 48, 12, 27) },
  { pnode(GPIO, 48, 12, ACLR, 2, -1), rnode(GOUT, 48, 12, 28) },
  { pnode(GPIO, 48, 12, SCLR, 2, -1), rnode(GOUT, 48, 12, 35) },
  { pnode(GPIO, 48, 12, CLKIN_IN, 2, 0), rnode(DCMUX, 48, 12, 6) },
  { pnode(GPIO, 48, 12, CLKIN_IN, 2, 1), rnode(DCMUX, 48, 12, 7) },
  { pnode(GPIO, 48, 12, CLKIN_OUT, 2, 0), rnode(DCMUX, 48, 12, 4) },
  { pnode(GPIO, 48, 12, CLKIN_OUT, 2, 1), rnode(DCMUX, 48, 12, 5) },
  { pnode(GPIO, 48, 12, DATAIN, 3, 0), rnode(GOUT, 48, 12, 19) },
  { pnode(GPIO, 48, 12, DATAIN, 3, 1), rnode(GOUT, 48, 12, 20) },
  { pnode(GPIO, 48, 12, DATAIN, 3, 2), rnode(GOUT, 48, 12, 21) },
  { pnode(GPIO, 48, 12, DATAIN, 3, 3), rnode(GOUT, 48, 12, 22) },
  { pnode(GPIO, 48, 12, DATAOUT, 3, 0), rnode(GIN, 48, 12, 30) },
  { pnode(GPIO, 48, 12, DATAOUT, 3, 1), rnode(GIN, 48, 12, 31) },
  { pnode(GPIO, 48, 12, DATAOUT, 3, 2), rnode(GIN, 48, 12, 32) },
  { pnode(GPIO, 48, 12, DATAOUT, 3, 3), rnode(GIN, 48, 12, 33) },
  { pnode(GPIO, 48, 12, DATAOUT, 3, 4), rnode(GIN, 48, 12, 34) },
  { pnode(GPIO, 48, 12, OEIN, 3, 0), rnode(GOUT, 48, 12, 23) },
  { pnode(GPIO, 48, 12, OEIN, 3, 1), rnode(GOUT, 48, 12, 24) },
  { pnode(GPIO, 48, 12, BSLIPMAX, 3, -1), rnode(GIN, 48, 12, 29) },
  { pnode(GPIO, 48, 12, CEIN, 3, -1), rnode(GOUT, 48, 12, 16) },
  { pnode(GPIO, 48, 12, CEOUT, 3, -1), rnode(GOUT, 48, 12, 17) },
  { pnode(GPIO, 48, 12, ACLR, 3, -1), rnode(GOUT, 48, 12, 18) },
  { pnode(GPIO, 48, 12, SCLR, 3, -1), rnode(GOUT, 48, 12, 25) },
  { pnode(GPIO, 48, 12, CLKIN_IN, 3, 0), rnode(DCMUX, 48, 12, 2) },
  { pnode(GPIO, 48, 12, CLKIN_IN, 3, 1), rnode(DCMUX, 48, 12, 3) },
  { pnode(GPIO, 48, 12, CLKIN_OUT, 3, 0), rnode(DCMUX, 48, 12, 0) },
  { pnode(GPIO, 48, 12, CLKIN_OUT, 3, 1), rnode(DCMUX, 48, 12, 1) },
  { pnode(GPIO, 48, 14, DATAIN, 0, 0), rnode(GOUT, 48, 14, 49) },
  { pnode(GPIO, 48, 14, DATAIN, 0, 1), rnode(GOUT, 48, 14, 50) },
  { pnode(GPIO, 48, 14, DATAIN, 0, 2), rnode(GOUT, 48, 14, 51) },
  { pnode(GPIO, 48, 14, DATAIN, 0, 3), rnode(GOUT, 48, 14, 52) },
  { pnode(GPIO, 48, 14, DATAOUT, 0, 0), rnode(GIN, 48, 14, 48) },
  { pnode(GPIO, 48, 14, DATAOUT, 0, 1), rnode(GIN, 48, 14, 49) },
  { pnode(GPIO, 48, 14, DATAOUT, 0, 2), rnode(GIN, 48, 14, 50) },
  { pnode(GPIO, 48, 14, DATAOUT, 0, 3), rnode(GIN, 48, 14, 51) },
  { pnode(GPIO, 48, 14, DATAOUT, 0, 4), rnode(GIN, 48, 14, 52) },
  { pnode(GPIO, 48, 14, OEIN, 0, 0), rnode(GOUT, 48, 14, 53) },
  { pnode(GPIO, 48, 14, OEIN, 0, 1), rnode(GOUT, 48, 14, 54) },
  { pnode(GPIO, 48, 14, BSLIPMAX, 0, -1), rnode(GIN, 48, 14, 47) },
  { pnode(GPIO, 48, 14, CEIN, 0, -1), rnode(GOUT, 48, 14, 46) },
  { pnode(GPIO, 48, 14, CEOUT, 0, -1), rnode(GOUT, 48, 14, 47) },
  { pnode(GPIO, 48, 14, ACLR, 0, -1), rnode(GOUT, 48, 14, 48) },
  { pnode(GPIO, 48, 14, SCLR, 0, -1), rnode(GOUT, 48, 14, 55) },
  { pnode(GPIO, 48, 14, CLKIN_IN, 0, 0), rnode(DCMUX, 48, 14, 14) },
  { pnode(GPIO, 48, 14, CLKIN_IN, 0, 1), rnode(DCMUX, 48, 14, 15) },
  { pnode(GPIO, 48, 14, CLKIN_OUT, 0, 0), rnode(DCMUX, 48, 14, 12) },
  { pnode(GPIO, 48, 14, CLKIN_OUT, 0, 1), rnode(DCMUX, 48, 14, 13) },
  { pnode(GPIO, 48, 14, DATAIN, 1, 0), rnode(GOUT, 48, 14, 39) },
  { pnode(GPIO, 48, 14, DATAIN, 1, 1), rnode(GOUT, 48, 14, 40) },
  { pnode(GPIO, 48, 14, DATAIN, 1, 2), rnode(GOUT, 48, 14, 41) },
  { pnode(GPIO, 48, 14, DATAIN, 1, 3), rnode(GOUT, 48, 14, 42) },
  { pnode(GPIO, 48, 14, DATAOUT, 1, 0), rnode(GIN, 48, 14, 42) },
  { pnode(GPIO, 48, 14, DATAOUT, 1, 1), rnode(GIN, 48, 14, 43) },
  { pnode(GPIO, 48, 14, DATAOUT, 1, 2), rnode(GIN, 48, 14, 44) },
  { pnode(GPIO, 48, 14, DATAOUT, 1, 3), rnode(GIN, 48, 14, 45) },
  { pnode(GPIO, 48, 14, DATAOUT, 1, 4), rnode(GIN, 48, 14, 46) },
  { pnode(GPIO, 48, 14, OEIN, 1, 0), rnode(GOUT, 48, 14, 43) },
  { pnode(GPIO, 48, 14, OEIN, 1, 1), rnode(GOUT, 48, 14, 44) },
  { pnode(GPIO, 48, 14, BSLIPMAX, 1, -1), rnode(GIN, 48, 14, 41) },
  { pnode(GPIO, 48, 14, CEIN, 1, -1), rnode(GOUT, 48, 14, 36) },
  { pnode(GPIO, 48, 14, CEOUT, 1, -1), rnode(GOUT, 48, 14, 37) },
  { pnode(GPIO, 48, 14, ACLR, 1, -1), rnode(GOUT, 48, 14, 38) },
  { pnode(GPIO, 48, 14, SCLR, 1, -1), rnode(GOUT, 48, 14, 45) },
  { pnode(GPIO, 48, 14, CLKIN_IN, 1, 0), rnode(DCMUX, 48, 14, 10) },
  { pnode(GPIO, 48, 14, CLKIN_IN, 1, 1), rnode(DCMUX, 48, 14, 11) },
  { pnode(GPIO, 48, 14, CLKIN_OUT, 1, 0), rnode(DCMUX, 48, 14, 8) },
  { pnode(GPIO, 48, 14, CLKIN_OUT, 1, 1), rnode(DCMUX, 48, 14, 9) },
  { pnode(GPIO, 48, 14, DATAIN, 2, 0), rnode(GOUT, 48, 14, 29) },
  { pnode(GPIO, 48, 14, DATAIN, 2, 1), rnode(GOUT, 48, 14, 30) },
  { pnode(GPIO, 48, 14, DATAIN, 2, 2), rnode(GOUT, 48, 14, 31) },
  { pnode(GPIO, 48, 14, DATAIN, 2, 3), rnode(GOUT, 48, 14, 32) },
  { pnode(GPIO, 48, 14, DATAOUT, 2, 0), rnode(GIN, 48, 14, 36) },
  { pnode(GPIO, 48, 14, DATAOUT, 2, 1), rnode(GIN, 48, 14, 37) },
  { pnode(GPIO, 48, 14, DATAOUT, 2, 2), rnode(GIN, 48, 14, 38) },
  { pnode(GPIO, 48, 14, DATAOUT, 2, 3), rnode(GIN, 48, 14, 39) },
  { pnode(GPIO, 48, 14, DATAOUT, 2, 4), rnode(GIN, 48, 14, 40) },
  { pnode(GPIO, 48, 14, OEIN, 2, 0), rnode(GOUT, 48, 14, 33) },
  { pnode(GPIO, 48, 14, OEIN, 2, 1), rnode(GOUT, 48, 14, 34) },
  { pnode(GPIO, 48, 14, BSLIPMAX, 2, -1), rnode(GIN, 48, 14, 35) },
  { pnode(GPIO, 48, 14, CEIN, 2, -1), rnode(GOUT, 48, 14, 26) },
  { pnode(GPIO, 48, 14, CEOUT, 2, -1), rnode(GOUT, 48, 14, 27) },
  { pnode(GPIO, 48, 14, ACLR, 2, -1), rnode(GOUT, 48, 14, 28) },
  { pnode(GPIO, 48, 14, SCLR, 2, -1), rnode(GOUT, 48, 14, 35) },
  { pnode(GPIO, 48, 14, CLKIN_IN, 2, 0), rnode(DCMUX, 48, 14, 6) },
  { pnode(GPIO, 48, 14, CLKIN_IN, 2, 1), rnode(DCMUX, 48, 14, 7) },
  { pnode(GPIO, 48, 14, CLKIN_OUT, 2, 0), rnode(DCMUX, 48, 14, 4) },
  { pnode(GPIO, 48, 14, CLKIN_OUT, 2, 1), rnode(DCMUX, 48, 14, 5) },
  { pnode(GPIO, 48, 14, DATAIN, 3, 0), rnode(GOUT, 48, 14, 19) },
  { pnode(GPIO, 48, 14, DATAIN, 3, 1), rnode(GOUT, 48, 14, 20) },
  { pnode(GPIO, 48, 14, DATAIN, 3, 2), rnode(GOUT, 48, 14, 21) },
  { pnode(GPIO, 48, 14, DATAIN, 3, 3), rnode(GOUT, 48, 14, 22) },
  { pnode(GPIO, 48, 14, DATAOUT, 3, 0), rnode(GIN, 48, 14, 30) },
  { pnode(GPIO, 48, 14, DATAOUT, 3, 1), rnode(GIN, 48, 14, 31) },
  { pnode(GPIO, 48, 14, DATAOUT, 3, 2), rnode(GIN, 48, 14, 32) },
  { pnode(GPIO, 48, 14, DATAOUT, 3, 3), rnode(GIN, 48, 14, 33) },
  { pnode(GPIO, 48, 14, DATAOUT, 3, 4), rnode(GIN, 48, 14, 34) },
  { pnode(GPIO, 48, 14, OEIN, 3, 0), rnode(GOUT, 48, 14, 23) },
  { pnode(GPIO, 48, 14, OEIN, 3, 1), rnode(GOUT, 48, 14, 24) },
  { pnode(GPIO, 48, 14, BSLIPMAX, 3, -1), rnode(GIN, 48, 14, 29) },
  { pnode(GPIO, 48, 14, CEIN, 3, -1), rnode(GOUT, 48, 14, 16) },
  { pnode(GPIO, 48, 14, CEOUT, 3, -1), rnode(GOUT, 48, 14, 17) },
  { pnode(GPIO, 48, 14, ACLR, 3, -1), rnode(GOUT, 48, 14, 18) },
  { pnode(GPIO, 48, 14, SCLR, 3, -1), rnode(GOUT, 48, 14, 25) },
  { pnode(GPIO, 48, 14, CLKIN_IN, 3, 0), rnode(DCMUX, 48, 14, 2) },
  { pnode(GPIO, 48, 14, CLKIN_IN, 3, 1), rnode(DCMUX, 48, 14, 3) },
  { pnode(GPIO, 48, 14, CLKIN_OUT, 3, 0), rnode(DCMUX, 48, 14, 0) },
  { pnode(GPIO, 48, 14, CLKIN_OUT, 3, 1), rnode(DCMUX, 48, 14, 1) },
  { pnode(GPIO, 48, 15, DATAIN, 0, 0), rnode(GOUT, 48, 15, 49) },
  { pnode(GPIO, 48, 15, DATAIN, 0, 1), rnode(GOUT, 48, 15, 50) },
  { pnode(GPIO, 48, 15, DATAIN, 0, 2), rnode(GOUT, 48, 15, 51) },
  { pnode(GPIO, 48, 15, DATAIN, 0, 3), rnode(GOUT, 48, 15, 52) },
  { pnode(GPIO, 48, 15, DATAOUT, 0, 0), rnode(GIN, 48, 15, 48) },
  { pnode(GPIO, 48, 15, DATAOUT, 0, 1), rnode(GIN, 48, 15, 49) },
  { pnode(GPIO, 48, 15, DATAOUT, 0, 2), rnode(GIN, 48, 15, 50) },
  { pnode(GPIO, 48, 15, DATAOUT, 0, 3), rnode(GIN, 48, 15, 51) },
  { pnode(GPIO, 48, 15, DATAOUT, 0, 4), rnode(GIN, 48, 15, 52) },
  { pnode(GPIO, 48, 15, OEIN, 0, 0), rnode(GOUT, 48, 15, 53) },
  { pnode(GPIO, 48, 15, OEIN, 0, 1), rnode(GOUT, 48, 15, 55) },
  { pnode(GPIO, 48, 15, BSLIPMAX, 0, -1), rnode(GIN, 48, 15, 47) },
  { pnode(GPIO, 48, 15, CEIN, 0, -1), rnode(GOUT, 48, 15, 46) },
  { pnode(GPIO, 48, 15, CEOUT, 0, -1), rnode(GOUT, 48, 15, 47) },
  { pnode(GPIO, 48, 15, ACLR, 0, -1), rnode(GOUT, 48, 15, 48) },
  { pnode(GPIO, 48, 15, SCLR, 0, -1), rnode(GOUT, 48, 15, 54) },
  { pnode(GPIO, 48, 15, CLKIN_IN, 0, 0), rnode(DCMUX, 48, 15, 14) },
  { pnode(GPIO, 48, 15, CLKIN_IN, 0, 1), rnode(DCMUX, 48, 15, 15) },
  { pnode(GPIO, 48, 15, CLKIN_OUT, 0, 0), rnode(DCMUX, 48, 15, 12) },
  { pnode(GPIO, 48, 15, CLKIN_OUT, 0, 1), rnode(DCMUX, 48, 15, 13) },
  { pnode(GPIO, 48, 15, DATAIN, 1, 0), rnode(GOUT, 48, 15, 39) },
  { pnode(GPIO, 48, 15, DATAIN, 1, 1), rnode(GOUT, 48, 15, 40) },
  { pnode(GPIO, 48, 15, DATAIN, 1, 2), rnode(GOUT, 48, 15, 41) },
  { pnode(GPIO, 48, 15, DATAIN, 1, 3), rnode(GOUT, 48, 15, 42) },
  { pnode(GPIO, 48, 15, DATAOUT, 1, 0), rnode(GIN, 48, 15, 42) },
  { pnode(GPIO, 48, 15, DATAOUT, 1, 1), rnode(GIN, 48, 15, 43) },
  { pnode(GPIO, 48, 15, DATAOUT, 1, 2), rnode(GIN, 48, 15, 44) },
  { pnode(GPIO, 48, 15, DATAOUT, 1, 3), rnode(GIN, 48, 15, 45) },
  { pnode(GPIO, 48, 15, DATAOUT, 1, 4), rnode(GIN, 48, 15, 46) },
  { pnode(GPIO, 48, 15, OEIN, 1, 0), rnode(GOUT, 48, 15, 43) },
  { pnode(GPIO, 48, 15, OEIN, 1, 1), rnode(GOUT, 48, 15, 44) },
  { pnode(GPIO, 48, 15, BSLIPMAX, 1, -1), rnode(GIN, 48, 15, 41) },
  { pnode(GPIO, 48, 15, CEIN, 1, -1), rnode(GOUT, 48, 15, 36) },
  { pnode(GPIO, 48, 15, CEOUT, 1, -1), rnode(GOUT, 48, 15, 37) },
  { pnode(GPIO, 48, 15, ACLR, 1, -1), rnode(GOUT, 48, 15, 38) },
  { pnode(GPIO, 48, 15, SCLR, 1, -1), rnode(GOUT, 48, 15, 45) },
  { pnode(GPIO, 48, 15, CLKIN_IN, 1, 0), rnode(DCMUX, 48, 15, 10) },
  { pnode(GPIO, 48, 15, CLKIN_IN, 1, 1), rnode(DCMUX, 48, 15, 11) },
  { pnode(GPIO, 48, 15, CLKIN_OUT, 1, 0), rnode(DCMUX, 48, 15, 8) },
  { pnode(GPIO, 48, 15, CLKIN_OUT, 1, 1), rnode(DCMUX, 48, 15, 9) },
  { pnode(GPIO, 48, 15, DATAIN, 2, 0), rnode(GOUT, 48, 15, 29) },
  { pnode(GPIO, 48, 15, DATAIN, 2, 1), rnode(GOUT, 48, 15, 30) },
  { pnode(GPIO, 48, 15, DATAIN, 2, 2), rnode(GOUT, 48, 15, 31) },
  { pnode(GPIO, 48, 15, DATAIN, 2, 3), rnode(GOUT, 48, 15, 32) },
  { pnode(GPIO, 48, 15, DATAOUT, 2, 0), rnode(GIN, 48, 15, 36) },
  { pnode(GPIO, 48, 15, DATAOUT, 2, 1), rnode(GIN, 48, 15, 37) },
  { pnode(GPIO, 48, 15, DATAOUT, 2, 2), rnode(GIN, 48, 15, 38) },
  { pnode(GPIO, 48, 15, DATAOUT, 2, 3), rnode(GIN, 48, 15, 39) },
  { pnode(GPIO, 48, 15, DATAOUT, 2, 4), rnode(GIN, 48, 15, 40) },
  { pnode(GPIO, 48, 15, OEIN, 2, 0), rnode(GOUT, 48, 15, 33) },
  { pnode(GPIO, 48, 15, OEIN, 2, 1), rnode(GOUT, 48, 15, 34) },
  { pnode(GPIO, 48, 15, BSLIPMAX, 2, -1), rnode(GIN, 48, 15, 35) },
  { pnode(GPIO, 48, 15, CEIN, 2, -1), rnode(GOUT, 48, 15, 26) },
  { pnode(GPIO, 48, 15, CEOUT, 2, -1), rnode(GOUT, 48, 15, 27) },
  { pnode(GPIO, 48, 15, ACLR, 2, -1), rnode(GOUT, 48, 15, 28) },
  { pnode(GPIO, 48, 15, SCLR, 2, -1), rnode(GOUT, 48, 15, 35) },
  { pnode(GPIO, 48, 15, CLKIN_IN, 2, 0), rnode(DCMUX, 48, 15, 6) },
  { pnode(GPIO, 48, 15, CLKIN_IN, 2, 1), rnode(DCMUX, 48, 15, 7) },
  { pnode(GPIO, 48, 15, CLKIN_OUT, 2, 0), rnode(DCMUX, 48, 15, 4) },
  { pnode(GPIO, 48, 15, CLKIN_OUT, 2, 1), rnode(DCMUX, 48, 15, 5) },
  { pnode(GPIO, 48, 15, DATAIN, 3, 0), rnode(GOUT, 48, 15, 19) },
  { pnode(GPIO, 48, 15, DATAIN, 3, 1), rnode(GOUT, 48, 15, 20) },
  { pnode(GPIO, 48, 15, DATAIN, 3, 2), rnode(GOUT, 48, 15, 21) },
  { pnode(GPIO, 48, 15, DATAIN, 3, 3), rnode(GOUT, 48, 15, 22) },
  { pnode(GPIO, 48, 15, DATAOUT, 3, 0), rnode(GIN, 48, 15, 30) },
  { pnode(GPIO, 48, 15, DATAOUT, 3, 1), rnode(GIN, 48, 15, 31) },
  { pnode(GPIO, 48, 15, DATAOUT, 3, 2), rnode(GIN, 48, 15, 32) },
  { pnode(GPIO, 48, 15, DATAOUT, 3, 3), rnode(GIN, 48, 15, 33) },
  { pnode(GPIO, 48, 15, DATAOUT, 3, 4), rnode(GIN, 48, 15, 34) },
  { pnode(GPIO, 48, 15, OEIN, 3, 0), rnode(GOUT, 48, 15, 23) },
  { pnode(GPIO, 48, 15, OEIN, 3, 1), rnode(GOUT, 48, 15, 24) },
  { pnode(GPIO, 48, 15, BSLIPMAX, 3, -1), rnode(GIN, 48, 15, 29) },
  { pnode(GPIO, 48, 15, CEIN, 3, -1), rnode(GOUT, 48, 15, 16) },
  { pnode(GPIO, 48, 15, CEOUT, 3, -1), rnode(GOUT, 48, 15, 17) },
  { pnode(GPIO, 48, 15, ACLR, 3, -1), rnode(GOUT, 48, 15, 18) },
  { pnode(GPIO, 48, 15, SCLR, 3, -1), rnode(GOUT, 48, 15, 25) },
  { pnode(GPIO, 48, 15, CLKIN_IN, 3, 0), rnode(DCMUX, 48, 15, 2) },
  { pnode(GPIO, 48, 15, CLKIN_IN, 3, 1), rnode(DCMUX, 48, 15, 3) },
  { pnode(GPIO, 48, 15, CLKIN_OUT, 3, 0), rnode(DCMUX, 48, 15, 0) },
  { pnode(GPIO, 48, 15, CLKIN_OUT, 3, 1), rnode(DCMUX, 48, 15, 1) },
  { pnode(GPIO, 48, 18, DATAIN, 0, 0), rnode(GOUT, 48, 18, 49) },
  { pnode(GPIO, 48, 18, DATAIN, 0, 1), rnode(GOUT, 48, 18, 50) },
  { pnode(GPIO, 48, 18, DATAIN, 0, 2), rnode(GOUT, 48, 18, 51) },
  { pnode(GPIO, 48, 18, DATAIN, 0, 3), rnode(GOUT, 48, 18, 52) },
  { pnode(GPIO, 48, 18, DATAOUT, 0, 0), rnode(GIN, 48, 18, 48) },
  { pnode(GPIO, 48, 18, DATAOUT, 0, 1), rnode(GIN, 48, 18, 49) },
  { pnode(GPIO, 48, 18, DATAOUT, 0, 2), rnode(GIN, 48, 18, 50) },
  { pnode(GPIO, 48, 18, DATAOUT, 0, 3), rnode(GIN, 48, 18, 51) },
  { pnode(GPIO, 48, 18, DATAOUT, 0, 4), rnode(GIN, 48, 18, 52) },
  { pnode(GPIO, 48, 18, OEIN, 0, 0), rnode(GOUT, 48, 18, 53) },
  { pnode(GPIO, 48, 18, OEIN, 0, 1), rnode(GOUT, 48, 18, 54) },
  { pnode(GPIO, 48, 18, BSLIPMAX, 0, -1), rnode(GIN, 48, 18, 47) },
  { pnode(GPIO, 48, 18, CEIN, 0, -1), rnode(GOUT, 48, 18, 46) },
  { pnode(GPIO, 48, 18, CEOUT, 0, -1), rnode(GOUT, 48, 18, 47) },
  { pnode(GPIO, 48, 18, ACLR, 0, -1), rnode(GOUT, 48, 18, 48) },
  { pnode(GPIO, 48, 18, SCLR, 0, -1), rnode(GOUT, 48, 18, 55) },
  { pnode(GPIO, 48, 18, CLKIN_IN, 0, 0), rnode(DCMUX, 48, 18, 14) },
  { pnode(GPIO, 48, 18, CLKIN_IN, 0, 1), rnode(DCMUX, 48, 18, 15) },
  { pnode(GPIO, 48, 18, CLKIN_OUT, 0, 0), rnode(DCMUX, 48, 18, 12) },
  { pnode(GPIO, 48, 18, CLKIN_OUT, 0, 1), rnode(DCMUX, 48, 18, 13) },
  { pnode(GPIO, 48, 18, DATAIN, 1, 0), rnode(GOUT, 48, 18, 39) },
  { pnode(GPIO, 48, 18, DATAIN, 1, 1), rnode(GOUT, 48, 18, 40) },
  { pnode(GPIO, 48, 18, DATAIN, 1, 2), rnode(GOUT, 48, 18, 41) },
  { pnode(GPIO, 48, 18, DATAIN, 1, 3), rnode(GOUT, 48, 18, 42) },
  { pnode(GPIO, 48, 18, DATAOUT, 1, 0), rnode(GIN, 48, 18, 42) },
  { pnode(GPIO, 48, 18, DATAOUT, 1, 1), rnode(GIN, 48, 18, 43) },
  { pnode(GPIO, 48, 18, DATAOUT, 1, 2), rnode(GIN, 48, 18, 44) },
  { pnode(GPIO, 48, 18, DATAOUT, 1, 3), rnode(GIN, 48, 18, 45) },
  { pnode(GPIO, 48, 18, DATAOUT, 1, 4), rnode(GIN, 48, 18, 46) },
  { pnode(GPIO, 48, 18, OEIN, 1, 0), rnode(GOUT, 48, 18, 43) },
  { pnode(GPIO, 48, 18, OEIN, 1, 1), rnode(GOUT, 48, 18, 44) },
  { pnode(GPIO, 48, 18, BSLIPMAX, 1, -1), rnode(GIN, 48, 18, 41) },
  { pnode(GPIO, 48, 18, CEIN, 1, -1), rnode(GOUT, 48, 18, 36) },
  { pnode(GPIO, 48, 18, CEOUT, 1, -1), rnode(GOUT, 48, 18, 37) },
  { pnode(GPIO, 48, 18, ACLR, 1, -1), rnode(GOUT, 48, 18, 38) },
  { pnode(GPIO, 48, 18, SCLR, 1, -1), rnode(GOUT, 48, 18, 45) },
  { pnode(GPIO, 48, 18, CLKIN_IN, 1, 0), rnode(DCMUX, 48, 18, 10) },
  { pnode(GPIO, 48, 18, CLKIN_IN, 1, 1), rnode(DCMUX, 48, 18, 11) },
  { pnode(GPIO, 48, 18, CLKIN_OUT, 1, 0), rnode(DCMUX, 48, 18, 8) },
  { pnode(GPIO, 48, 18, CLKIN_OUT, 1, 1), rnode(DCMUX, 48, 18, 9) },
  { pnode(GPIO, 48, 18, DATAIN, 2, 0), rnode(GOUT, 48, 18, 29) },
  { pnode(GPIO, 48, 18, DATAIN, 2, 1), rnode(GOUT, 48, 18, 30) },
  { pnode(GPIO, 48, 18, DATAIN, 2, 2), rnode(GOUT, 48, 18, 32) },
  { pnode(GPIO, 48, 18, DATAIN, 2, 3), rnode(GOUT, 48, 18, 33) },
  { pnode(GPIO, 48, 18, DATAOUT, 2, 0), rnode(GIN, 48, 18, 36) },
  { pnode(GPIO, 48, 18, DATAOUT, 2, 1), rnode(GIN, 48, 18, 37) },
  { pnode(GPIO, 48, 18, DATAOUT, 2, 2), rnode(GIN, 48, 18, 38) },
  { pnode(GPIO, 48, 18, DATAOUT, 2, 3), rnode(GIN, 48, 18, 39) },
  { pnode(GPIO, 48, 18, DATAOUT, 2, 4), rnode(GIN, 48, 18, 40) },
  { pnode(GPIO, 48, 18, OEIN, 2, 0), rnode(GOUT, 48, 18, 34) },
  { pnode(GPIO, 48, 18, OEIN, 2, 1), rnode(GOUT, 48, 18, 35) },
  { pnode(GPIO, 48, 18, BSLIPMAX, 2, -1), rnode(GIN, 48, 18, 35) },
  { pnode(GPIO, 48, 18, CEIN, 2, -1), rnode(GOUT, 48, 18, 26) },
  { pnode(GPIO, 48, 18, CEOUT, 2, -1), rnode(GOUT, 48, 18, 27) },
  { pnode(GPIO, 48, 18, ACLR, 2, -1), rnode(GOUT, 48, 18, 28) },
  { pnode(GPIO, 48, 18, SCLR, 2, -1), rnode(GOUT, 48, 18, 31) },
  { pnode(GPIO, 48, 18, CLKIN_IN, 2, 0), rnode(DCMUX, 48, 18, 6) },
  { pnode(GPIO, 48, 18, CLKIN_IN, 2, 1), rnode(DCMUX, 48, 18, 7) },
  { pnode(GPIO, 48, 18, CLKIN_OUT, 2, 0), rnode(DCMUX, 48, 18, 4) },
  { pnode(GPIO, 48, 18, CLKIN_OUT, 2, 1), rnode(DCMUX, 48, 18, 5) },
  { pnode(GPIO, 48, 18, DATAIN, 3, 0), rnode(GOUT, 48, 18, 19) },
  { pnode(GPIO, 48, 18, DATAIN, 3, 1), rnode(GOUT, 48, 18, 20) },
  { pnode(GPIO, 48, 18, DATAIN, 3, 2), rnode(GOUT, 48, 18, 21) },
  { pnode(GPIO, 48, 18, DATAIN, 3, 3), rnode(GOUT, 48, 18, 22) },
  { pnode(GPIO, 48, 18, DATAOUT, 3, 0), rnode(GIN, 48, 18, 30) },
  { pnode(GPIO, 48, 18, DATAOUT, 3, 1), rnode(GIN, 48, 18, 31) },
  { pnode(GPIO, 48, 18, DATAOUT, 3, 2), rnode(GIN, 48, 18, 32) },
  { pnode(GPIO, 48, 18, DATAOUT, 3, 3), rnode(GIN, 48, 18, 33) },
  { pnode(GPIO, 48, 18, DATAOUT, 3, 4), rnode(GIN, 48, 18, 34) },
  { pnode(GPIO, 48, 18, OEIN, 3, 0), rnode(GOUT, 48, 18, 23) },
  { pnode(GPIO, 48, 18, OEIN, 3, 1), rnode(GOUT, 48, 18, 24) },
  { pnode(GPIO, 48, 18, BSLIPMAX, 3, -1), rnode(GIN, 48, 18, 29) },
  { pnode(GPIO, 48, 18, CEIN, 3, -1), rnode(GOUT, 48, 18, 16) },
  { pnode(GPIO, 48, 18, CEOUT, 3, -1), rnode(GOUT, 48, 18, 17) },
  { pnode(GPIO, 48, 18, ACLR, 3, -1), rnode(GOUT, 48, 18, 18) },
  { pnode(GPIO, 48, 18, SCLR, 3, -1), rnode(GOUT, 48, 18, 25) },
  { pnode(GPIO, 48, 18, CLKIN_IN, 3, 0), rnode(DCMUX, 48, 18, 2) },
  { pnode(GPIO, 48, 18, CLKIN_IN, 3, 1), rnode(DCMUX, 48, 18, 3) },
  { pnode(GPIO, 48, 18, CLKIN_OUT, 3, 0), rnode(DCMUX, 48, 18, 0) },
  { pnode(GPIO, 48, 18, CLKIN_OUT, 3, 1), rnode(DCMUX, 48, 18, 1) },
  { pnode(GPIO, 48, 20, DATAIN, 0, 0), rnode(GOUT, 48, 20, 49) },
  { pnode(GPIO, 48, 20, DATAIN, 0, 1), rnode(GOUT, 48, 20, 50) },
  { pnode(GPIO, 48, 20, DATAIN, 0, 2), rnode(GOUT, 48, 20, 51) },
  { pnode(GPIO, 48, 20, DATAIN, 0, 3), rnode(GOUT, 48, 20, 52) },
  { pnode(GPIO, 48, 20, DATAOUT, 0, 0), rnode(GIN, 48, 20, 48) },
  { pnode(GPIO, 48, 20, DATAOUT, 0, 1), rnode(GIN, 48, 20, 49) },
  { pnode(GPIO, 48, 20, DATAOUT, 0, 2), rnode(GIN, 48, 20, 50) },
  { pnode(GPIO, 48, 20, DATAOUT, 0, 3), rnode(GIN, 48, 20, 51) },
  { pnode(GPIO, 48, 20, DATAOUT, 0, 4), rnode(GIN, 48, 20, 52) },
  { pnode(GPIO, 48, 20, OEIN, 0, 0), rnode(GOUT, 48, 20, 53) },
  { pnode(GPIO, 48, 20, OEIN, 0, 1), rnode(GOUT, 48, 20, 54) },
  { pnode(GPIO, 48, 20, BSLIPMAX, 0, -1), rnode(GIN, 48, 20, 47) },
  { pnode(GPIO, 48, 20, CEIN, 0, -1), rnode(GOUT, 48, 20, 46) },
  { pnode(GPIO, 48, 20, CEOUT, 0, -1), rnode(GOUT, 48, 20, 47) },
  { pnode(GPIO, 48, 20, ACLR, 0, -1), rnode(GOUT, 48, 20, 48) },
  { pnode(GPIO, 48, 20, SCLR, 0, -1), rnode(GOUT, 48, 20, 55) },
  { pnode(GPIO, 48, 20, CLKIN_IN, 0, 0), rnode(DCMUX, 48, 20, 14) },
  { pnode(GPIO, 48, 20, CLKIN_IN, 0, 1), rnode(DCMUX, 48, 20, 15) },
  { pnode(GPIO, 48, 20, CLKIN_OUT, 0, 0), rnode(DCMUX, 48, 20, 12) },
  { pnode(GPIO, 48, 20, CLKIN_OUT, 0, 1), rnode(DCMUX, 48, 20, 13) },
  { pnode(GPIO, 48, 20, DATAIN, 1, 0), rnode(GOUT, 48, 20, 39) },
  { pnode(GPIO, 48, 20, DATAIN, 1, 1), rnode(GOUT, 48, 20, 40) },
  { pnode(GPIO, 48, 20, DATAIN, 1, 2), rnode(GOUT, 48, 20, 41) },
  { pnode(GPIO, 48, 20, DATAIN, 1, 3), rnode(GOUT, 48, 20, 42) },
  { pnode(GPIO, 48, 20, DATAOUT, 1, 0), rnode(GIN, 48, 20, 42) },
  { pnode(GPIO, 48, 20, DATAOUT, 1, 1), rnode(GIN, 48, 20, 43) },
  { pnode(GPIO, 48, 20, DATAOUT, 1, 2), rnode(GIN, 48, 20, 44) },
  { pnode(GPIO, 48, 20, DATAOUT, 1, 3), rnode(GIN, 48, 20, 45) },
  { pnode(GPIO, 48, 20, DATAOUT, 1, 4), rnode(GIN, 48, 20, 46) },
  { pnode(GPIO, 48, 20, OEIN, 1, 0), rnode(GOUT, 48, 20, 43) },
  { pnode(GPIO, 48, 20, OEIN, 1, 1), rnode(GOUT, 48, 20, 44) },
  { pnode(GPIO, 48, 20, BSLIPMAX, 1, -1), rnode(GIN, 48, 20, 41) },
  { pnode(GPIO, 48, 20, CEIN, 1, -1), rnode(GOUT, 48, 20, 36) },
  { pnode(GPIO, 48, 20, CEOUT, 1, -1), rnode(GOUT, 48, 20, 37) },
  { pnode(GPIO, 48, 20, ACLR, 1, -1), rnode(GOUT, 48, 20, 38) },
  { pnode(GPIO, 48, 20, SCLR, 1, -1), rnode(GOUT, 48, 20, 45) },
  { pnode(GPIO, 48, 20, CLKIN_IN, 1, 0), rnode(DCMUX, 48, 20, 10) },
  { pnode(GPIO, 48, 20, CLKIN_IN, 1, 1), rnode(DCMUX, 48, 20, 11) },
  { pnode(GPIO, 48, 20, CLKIN_OUT, 1, 0), rnode(DCMUX, 48, 20, 8) },
  { pnode(GPIO, 48, 20, CLKIN_OUT, 1, 1), rnode(DCMUX, 48, 20, 9) },
  { pnode(GPIO, 48, 20, DATAIN, 2, 0), rnode(GOUT, 48, 20, 29) },
  { pnode(GPIO, 48, 20, DATAIN, 2, 1), rnode(GOUT, 48, 20, 30) },
  { pnode(GPIO, 48, 20, DATAIN, 2, 2), rnode(GOUT, 48, 20, 31) },
  { pnode(GPIO, 48, 20, DATAIN, 2, 3), rnode(GOUT, 48, 20, 32) },
  { pnode(GPIO, 48, 20, DATAOUT, 2, 0), rnode(GIN, 48, 20, 36) },
  { pnode(GPIO, 48, 20, DATAOUT, 2, 1), rnode(GIN, 48, 20, 37) },
  { pnode(GPIO, 48, 20, DATAOUT, 2, 2), rnode(GIN, 48, 20, 38) },
  { pnode(GPIO, 48, 20, DATAOUT, 2, 3), rnode(GIN, 48, 20, 39) },
  { pnode(GPIO, 48, 20, DATAOUT, 2, 4), rnode(GIN, 48, 20, 40) },
  { pnode(GPIO, 48, 20, OEIN, 2, 0), rnode(GOUT, 48, 20, 33) },
  { pnode(GPIO, 48, 20, OEIN, 2, 1), rnode(GOUT, 48, 20, 34) },
  { pnode(GPIO, 48, 20, BSLIPMAX, 2, -1), rnode(GIN, 48, 20, 35) },
  { pnode(GPIO, 48, 20, CEIN, 2, -1), rnode(GOUT, 48, 20, 26) },
  { pnode(GPIO, 48, 20, CEOUT, 2, -1), rnode(GOUT, 48, 20, 27) },
  { pnode(GPIO, 48, 20, ACLR, 2, -1), rnode(GOUT, 48, 20, 28) },
  { pnode(GPIO, 48, 20, SCLR, 2, -1), rnode(GOUT, 48, 20, 35) },
  { pnode(GPIO, 48, 20, CLKIN_IN, 2, 0), rnode(DCMUX, 48, 20, 6) },
  { pnode(GPIO, 48, 20, CLKIN_IN, 2, 1), rnode(DCMUX, 48, 20, 7) },
  { pnode(GPIO, 48, 20, CLKIN_OUT, 2, 0), rnode(DCMUX, 48, 20, 4) },
  { pnode(GPIO, 48, 20, CLKIN_OUT, 2, 1), rnode(DCMUX, 48, 20, 5) },
  { pnode(GPIO, 48, 20, DATAIN, 3, 0), rnode(GOUT, 48, 20, 19) },
  { pnode(GPIO, 48, 20, DATAIN, 3, 1), rnode(GOUT, 48, 20, 20) },
  { pnode(GPIO, 48, 20, DATAIN, 3, 2), rnode(GOUT, 48, 20, 21) },
  { pnode(GPIO, 48, 20, DATAIN, 3, 3), rnode(GOUT, 48, 20, 22) },
  { pnode(GPIO, 48, 20, DATAOUT, 3, 0), rnode(GIN, 48, 20, 30) },
  { pnode(GPIO, 48, 20, DATAOUT, 3, 1), rnode(GIN, 48, 20, 31) },
  { pnode(GPIO, 48, 20, DATAOUT, 3, 2), rnode(GIN, 48, 20, 32) },
  { pnode(GPIO, 48, 20, DATAOUT, 3, 3), rnode(GIN, 48, 20, 33) },
  { pnode(GPIO, 48, 20, DATAOUT, 3, 4), rnode(GIN, 48, 20, 34) },
  { pnode(GPIO, 48, 20, OEIN, 3, 0), rnode(GOUT, 48, 20, 23) },
  { pnode(GPIO, 48, 20, OEIN, 3, 1), rnode(GOUT, 48, 20, 24) },
  { pnode(GPIO, 48, 20, BSLIPMAX, 3, -1), rnode(GIN, 48, 20, 29) },
  { pnode(GPIO, 48, 20, CEIN, 3, -1), rnode(GOUT, 48, 20, 16) },
  { pnode(GPIO, 48, 20, CEOUT, 3, -1), rnode(GOUT, 48, 20, 17) },
  { pnode(GPIO, 48, 20, ACLR, 3, -1), rnode(GOUT, 48, 20, 18) },
  { pnode(GPIO, 48, 20, SCLR, 3, -1), rnode(GOUT, 48, 20, 25) },
  { pnode(GPIO, 48, 20, CLKIN_IN, 3, 0), rnode(DCMUX, 48, 20, 2) },
  { pnode(GPIO, 48, 20, CLKIN_IN, 3, 1), rnode(DCMUX, 48, 20, 3) },
  { pnode(GPIO, 48, 20, CLKIN_OUT, 3, 0), rnode(DCMUX, 48, 20, 0) },
  { pnode(GPIO, 48, 20, CLKIN_OUT, 3, 1), rnode(DCMUX, 48, 20, 1) },
  { pnode(GPIO, 48, 22, DATAIN, 0, 0), rnode(GOUT, 48, 22, 49) },
  { pnode(GPIO, 48, 22, DATAIN, 0, 1), rnode(GOUT, 48, 22, 50) },
  { pnode(GPIO, 48, 22, DATAIN, 0, 2), rnode(GOUT, 48, 22, 51) },
  { pnode(GPIO, 48, 22, DATAIN, 0, 3), rnode(GOUT, 48, 22, 52) },
  { pnode(GPIO, 48, 22, DATAOUT, 0, 0), rnode(GIN, 48, 22, 48) },
  { pnode(GPIO, 48, 22, DATAOUT, 0, 1), rnode(GIN, 48, 22, 49) },
  { pnode(GPIO, 48, 22, DATAOUT, 0, 2), rnode(GIN, 48, 22, 50) },
  { pnode(GPIO, 48, 22, DATAOUT, 0, 3), rnode(GIN, 48, 22, 51) },
  { pnode(GPIO, 48, 22, DATAOUT, 0, 4), rnode(GIN, 48, 22, 52) },
  { pnode(GPIO, 48, 22, OEIN, 0, 0), rnode(GOUT, 48, 22, 53) },
  { pnode(GPIO, 48, 22, OEIN, 0, 1), rnode(GOUT, 48, 22, 54) },
  { pnode(GPIO, 48, 22, BSLIPMAX, 0, -1), rnode(GIN, 48, 22, 47) },
  { pnode(GPIO, 48, 22, CEIN, 0, -1), rnode(GOUT, 48, 22, 46) },
  { pnode(GPIO, 48, 22, CEOUT, 0, -1), rnode(GOUT, 48, 22, 47) },
  { pnode(GPIO, 48, 22, ACLR, 0, -1), rnode(GOUT, 48, 22, 48) },
  { pnode(GPIO, 48, 22, SCLR, 0, -1), rnode(GOUT, 48, 22, 55) },
  { pnode(GPIO, 48, 22, CLKIN_IN, 0, 0), rnode(DCMUX, 48, 22, 14) },
  { pnode(GPIO, 48, 22, CLKIN_IN, 0, 1), rnode(DCMUX, 48, 22, 15) },
  { pnode(GPIO, 48, 22, CLKIN_OUT, 0, 0), rnode(DCMUX, 48, 22, 12) },
  { pnode(GPIO, 48, 22, CLKIN_OUT, 0, 1), rnode(DCMUX, 48, 22, 13) },
  { pnode(GPIO, 48, 22, DATAIN, 1, 0), rnode(GOUT, 48, 22, 39) },
  { pnode(GPIO, 48, 22, DATAIN, 1, 1), rnode(GOUT, 48, 22, 40) },
  { pnode(GPIO, 48, 22, DATAIN, 1, 2), rnode(GOUT, 48, 22, 41) },
  { pnode(GPIO, 48, 22, DATAIN, 1, 3), rnode(GOUT, 48, 22, 42) },
  { pnode(GPIO, 48, 22, DATAOUT, 1, 0), rnode(GIN, 48, 22, 42) },
  { pnode(GPIO, 48, 22, DATAOUT, 1, 1), rnode(GIN, 48, 22, 43) },
  { pnode(GPIO, 48, 22, DATAOUT, 1, 2), rnode(GIN, 48, 22, 44) },
  { pnode(GPIO, 48, 22, DATAOUT, 1, 3), rnode(GIN, 48, 22, 45) },
  { pnode(GPIO, 48, 22, DATAOUT, 1, 4), rnode(GIN, 48, 22, 46) },
  { pnode(GPIO, 48, 22, OEIN, 1, 0), rnode(GOUT, 48, 22, 43) },
  { pnode(GPIO, 48, 22, OEIN, 1, 1), rnode(GOUT, 48, 22, 44) },
  { pnode(GPIO, 48, 22, BSLIPMAX, 1, -1), rnode(GIN, 48, 22, 41) },
  { pnode(GPIO, 48, 22, CEIN, 1, -1), rnode(GOUT, 48, 22, 36) },
  { pnode(GPIO, 48, 22, CEOUT, 1, -1), rnode(GOUT, 48, 22, 37) },
  { pnode(GPIO, 48, 22, ACLR, 1, -1), rnode(GOUT, 48, 22, 38) },
  { pnode(GPIO, 48, 22, SCLR, 1, -1), rnode(GOUT, 48, 22, 45) },
  { pnode(GPIO, 48, 22, CLKIN_IN, 1, 0), rnode(DCMUX, 48, 22, 10) },
  { pnode(GPIO, 48, 22, CLKIN_IN, 1, 1), rnode(DCMUX, 48, 22, 11) },
  { pnode(GPIO, 48, 22, CLKIN_OUT, 1, 0), rnode(DCMUX, 48, 22, 8) },
  { pnode(GPIO, 48, 22, CLKIN_OUT, 1, 1), rnode(DCMUX, 48, 22, 9) },
  { pnode(GPIO, 48, 22, DATAIN, 2, 0), rnode(GOUT, 48, 22, 29) },
  { pnode(GPIO, 48, 22, DATAIN, 2, 1), rnode(GOUT, 48, 22, 30) },
  { pnode(GPIO, 48, 22, DATAIN, 2, 2), rnode(GOUT, 48, 22, 31) },
  { pnode(GPIO, 48, 22, DATAIN, 2, 3), rnode(GOUT, 48, 22, 32) },
  { pnode(GPIO, 48, 22, DATAOUT, 2, 0), rnode(GIN, 48, 22, 36) },
  { pnode(GPIO, 48, 22, DATAOUT, 2, 1), rnode(GIN, 48, 22, 37) },
  { pnode(GPIO, 48, 22, DATAOUT, 2, 2), rnode(GIN, 48, 22, 38) },
  { pnode(GPIO, 48, 22, DATAOUT, 2, 3), rnode(GIN, 48, 22, 39) },
  { pnode(GPIO, 48, 22, DATAOUT, 2, 4), rnode(GIN, 48, 22, 40) },
  { pnode(GPIO, 48, 22, OEIN, 2, 0), rnode(GOUT, 48, 22, 33) },
  { pnode(GPIO, 48, 22, OEIN, 2, 1), rnode(GOUT, 48, 22, 34) },
  { pnode(GPIO, 48, 22, BSLIPMAX, 2, -1), rnode(GIN, 48, 22, 35) },
  { pnode(GPIO, 48, 22, CEIN, 2, -1), rnode(GOUT, 48, 22, 26) },
  { pnode(GPIO, 48, 22, CEOUT, 2, -1), rnode(GOUT, 48, 22, 27) },
  { pnode(GPIO, 48, 22, ACLR, 2, -1), rnode(GOUT, 48, 22, 28) },
  { pnode(GPIO, 48, 22, SCLR, 2, -1), rnode(GOUT, 48, 22, 35) },
  { pnode(GPIO, 48, 22, CLKIN_IN, 2, 0), rnode(DCMUX, 48, 22, 6) },
  { pnode(GPIO, 48, 22, CLKIN_IN, 2, 1), rnode(DCMUX, 48, 22, 7) },
  { pnode(GPIO, 48, 22, CLKIN_OUT, 2, 0), rnode(DCMUX, 48, 22, 4) },
  { pnode(GPIO, 48, 22, CLKIN_OUT, 2, 1), rnode(DCMUX, 48, 22, 5) },
  { pnode(GPIO, 48, 22, DATAIN, 3, 0), rnode(GOUT, 48, 22, 19) },
  { pnode(GPIO, 48, 22, DATAIN, 3, 1), rnode(GOUT, 48, 22, 20) },
  { pnode(GPIO, 48, 22, DATAIN, 3, 2), rnode(GOUT, 48, 22, 21) },
  { pnode(GPIO, 48, 22, DATAIN, 3, 3), rnode(GOUT, 48, 22, 22) },
  { pnode(GPIO, 48, 22, DATAOUT, 3, 0), rnode(GIN, 48, 22, 30) },
  { pnode(GPIO, 48, 22, DATAOUT, 3, 1), rnode(GIN, 48, 22, 31) },
  { pnode(GPIO, 48, 22, DATAOUT, 3, 2), rnode(GIN, 48, 22, 32) },
  { pnode(GPIO, 48, 22, DATAOUT, 3, 3), rnode(GIN, 48, 22, 33) },
  { pnode(GPIO, 48, 22, DATAOUT, 3, 4), rnode(GIN, 48, 22, 34) },
  { pnode(GPIO, 48, 22, OEIN, 3, 0), rnode(GOUT, 48, 22, 23) },
  { pnode(GPIO, 48, 22, OEIN, 3, 1), rnode(GOUT, 48, 22, 24) },
  { pnode(GPIO, 48, 22, BSLIPMAX, 3, -1), rnode(GIN, 48, 22, 29) },
  { pnode(GPIO, 48, 22, CEIN, 3, -1), rnode(GOUT, 48, 22, 16) },
  { pnode(GPIO, 48, 22, CEOUT, 3, -1), rnode(GOUT, 48, 22, 17) },
  { pnode(GPIO, 48, 22, ACLR, 3, -1), rnode(GOUT, 48, 22, 18) },
  { pnode(GPIO, 48, 22, SCLR, 3, -1), rnode(GOUT, 48, 22, 25) },
  { pnode(GPIO, 48, 22, CLKIN_IN, 3, 0), rnode(DCMUX, 48, 22, 2) },
  { pnode(GPIO, 48, 22, CLKIN_IN, 3, 1), rnode(DCMUX, 48, 22, 3) },
  { pnode(GPIO, 48, 22, CLKIN_OUT, 3, 0), rnode(DCMUX, 48, 22, 0) },
  { pnode(GPIO, 48, 22, CLKIN_OUT, 3, 1), rnode(DCMUX, 48, 22, 1) },
  { pnode(GPIO, 48, 24, DATAIN, 0, 0), rnode(GOUT, 48, 24, 49) },
  { pnode(GPIO, 48, 24, DATAIN, 0, 1), rnode(GOUT, 48, 24, 50) },
  { pnode(GPIO, 48, 24, DATAIN, 0, 2), rnode(GOUT, 48, 24, 51) },
  { pnode(GPIO, 48, 24, DATAIN, 0, 3), rnode(GOUT, 48, 24, 52) },
  { pnode(GPIO, 48, 24, DATAOUT, 0, 0), rnode(GIN, 48, 24, 48) },
  { pnode(GPIO, 48, 24, DATAOUT, 0, 1), rnode(GIN, 48, 24, 49) },
  { pnode(GPIO, 48, 24, DATAOUT, 0, 2), rnode(GIN, 48, 24, 50) },
  { pnode(GPIO, 48, 24, DATAOUT, 0, 3), rnode(GIN, 48, 24, 51) },
  { pnode(GPIO, 48, 24, DATAOUT, 0, 4), rnode(GIN, 48, 24, 52) },
  { pnode(GPIO, 48, 24, OEIN, 0, 0), rnode(GOUT, 48, 24, 53) },
  { pnode(GPIO, 48, 24, OEIN, 0, 1), rnode(GOUT, 48, 24, 55) },
  { pnode(GPIO, 48, 24, BSLIPMAX, 0, -1), rnode(GIN, 48, 24, 47) },
  { pnode(GPIO, 48, 24, CEIN, 0, -1), rnode(GOUT, 48, 24, 46) },
  { pnode(GPIO, 48, 24, CEOUT, 0, -1), rnode(GOUT, 48, 24, 47) },
  { pnode(GPIO, 48, 24, ACLR, 0, -1), rnode(GOUT, 48, 24, 48) },
  { pnode(GPIO, 48, 24, SCLR, 0, -1), rnode(GOUT, 48, 24, 54) },
  { pnode(GPIO, 48, 24, CLKIN_IN, 0, 0), rnode(DCMUX, 48, 24, 14) },
  { pnode(GPIO, 48, 24, CLKIN_IN, 0, 1), rnode(DCMUX, 48, 24, 15) },
  { pnode(GPIO, 48, 24, CLKIN_OUT, 0, 0), rnode(DCMUX, 48, 24, 12) },
  { pnode(GPIO, 48, 24, CLKIN_OUT, 0, 1), rnode(DCMUX, 48, 24, 13) },
  { pnode(GPIO, 48, 24, DATAIN, 1, 0), rnode(GOUT, 48, 24, 39) },
  { pnode(GPIO, 48, 24, DATAIN, 1, 1), rnode(GOUT, 48, 24, 40) },
  { pnode(GPIO, 48, 24, DATAIN, 1, 2), rnode(GOUT, 48, 24, 41) },
  { pnode(GPIO, 48, 24, DATAIN, 1, 3), rnode(GOUT, 48, 24, 42) },
  { pnode(GPIO, 48, 24, DATAOUT, 1, 0), rnode(GIN, 48, 24, 42) },
  { pnode(GPIO, 48, 24, DATAOUT, 1, 1), rnode(GIN, 48, 24, 43) },
  { pnode(GPIO, 48, 24, DATAOUT, 1, 2), rnode(GIN, 48, 24, 44) },
  { pnode(GPIO, 48, 24, DATAOUT, 1, 3), rnode(GIN, 48, 24, 45) },
  { pnode(GPIO, 48, 24, DATAOUT, 1, 4), rnode(GIN, 48, 24, 46) },
  { pnode(GPIO, 48, 24, OEIN, 1, 0), rnode(GOUT, 48, 24, 43) },
  { pnode(GPIO, 48, 24, OEIN, 1, 1), rnode(GOUT, 48, 24, 44) },
  { pnode(GPIO, 48, 24, BSLIPMAX, 1, -1), rnode(GIN, 48, 24, 41) },
  { pnode(GPIO, 48, 24, CEIN, 1, -1), rnode(GOUT, 48, 24, 36) },
  { pnode(GPIO, 48, 24, CEOUT, 1, -1), rnode(GOUT, 48, 24, 37) },
  { pnode(GPIO, 48, 24, ACLR, 1, -1), rnode(GOUT, 48, 24, 38) },
  { pnode(GPIO, 48, 24, SCLR, 1, -1), rnode(GOUT, 48, 24, 45) },
  { pnode(GPIO, 48, 24, CLKIN_IN, 1, 0), rnode(DCMUX, 48, 24, 10) },
  { pnode(GPIO, 48, 24, CLKIN_IN, 1, 1), rnode(DCMUX, 48, 24, 11) },
  { pnode(GPIO, 48, 24, CLKIN_OUT, 1, 0), rnode(DCMUX, 48, 24, 8) },
  { pnode(GPIO, 48, 24, CLKIN_OUT, 1, 1), rnode(DCMUX, 48, 24, 9) },
  { pnode(GPIO, 48, 24, DATAIN, 2, 0), rnode(GOUT, 48, 24, 29) },
  { pnode(GPIO, 48, 24, DATAIN, 2, 1), rnode(GOUT, 48, 24, 30) },
  { pnode(GPIO, 48, 24, DATAIN, 2, 2), rnode(GOUT, 48, 24, 31) },
  { pnode(GPIO, 48, 24, DATAIN, 2, 3), rnode(GOUT, 48, 24, 32) },
  { pnode(GPIO, 48, 24, DATAOUT, 2, 0), rnode(GIN, 48, 24, 36) },
  { pnode(GPIO, 48, 24, DATAOUT, 2, 1), rnode(GIN, 48, 24, 37) },
  { pnode(GPIO, 48, 24, DATAOUT, 2, 2), rnode(GIN, 48, 24, 38) },
  { pnode(GPIO, 48, 24, DATAOUT, 2, 3), rnode(GIN, 48, 24, 39) },
  { pnode(GPIO, 48, 24, DATAOUT, 2, 4), rnode(GIN, 48, 24, 40) },
  { pnode(GPIO, 48, 24, OEIN, 2, 0), rnode(GOUT, 48, 24, 33) },
  { pnode(GPIO, 48, 24, OEIN, 2, 1), rnode(GOUT, 48, 24, 34) },
  { pnode(GPIO, 48, 24, BSLIPMAX, 2, -1), rnode(GIN, 48, 24, 35) },
  { pnode(GPIO, 48, 24, CEIN, 2, -1), rnode(GOUT, 48, 24, 26) },
  { pnode(GPIO, 48, 24, CEOUT, 2, -1), rnode(GOUT, 48, 24, 27) },
  { pnode(GPIO, 48, 24, ACLR, 2, -1), rnode(GOUT, 48, 24, 28) },
  { pnode(GPIO, 48, 24, SCLR, 2, -1), rnode(GOUT, 48, 24, 35) },
  { pnode(GPIO, 48, 24, CLKIN_IN, 2, 0), rnode(DCMUX, 48, 24, 6) },
  { pnode(GPIO, 48, 24, CLKIN_IN, 2, 1), rnode(DCMUX, 48, 24, 7) },
  { pnode(GPIO, 48, 24, CLKIN_OUT, 2, 0), rnode(DCMUX, 48, 24, 4) },
  { pnode(GPIO, 48, 24, CLKIN_OUT, 2, 1), rnode(DCMUX, 48, 24, 5) },
  { pnode(GPIO, 48, 24, DATAIN, 3, 0), rnode(GOUT, 48, 24, 19) },
  { pnode(GPIO, 48, 24, DATAIN, 3, 1), rnode(GOUT, 48, 24, 20) },
  { pnode(GPIO, 48, 24, DATAIN, 3, 2), rnode(GOUT, 48, 24, 21) },
  { pnode(GPIO, 48, 24, DATAIN, 3, 3), rnode(GOUT, 48, 24, 22) },
  { pnode(GPIO, 48, 24, DATAOUT, 3, 0), rnode(GIN, 48, 24, 30) },
  { pnode(GPIO, 48, 24, DATAOUT, 3, 1), rnode(GIN, 48, 24, 31) },
  { pnode(GPIO, 48, 24, DATAOUT, 3, 2), rnode(GIN, 48, 24, 32) },
  { pnode(GPIO, 48, 24, DATAOUT, 3, 3), rnode(GIN, 48, 24, 33) },
  { pnode(GPIO, 48, 24, DATAOUT, 3, 4), rnode(GIN, 48, 24, 34) },
  { pnode(GPIO, 48, 24, OEIN, 3, 0), rnode(GOUT, 48, 24, 23) },
  { pnode(GPIO, 48, 24, OEIN, 3, 1), rnode(GOUT, 48, 24, 24) },
  { pnode(GPIO, 48, 24, BSLIPMAX, 3, -1), rnode(GIN, 48, 24, 29) },
  { pnode(GPIO, 48, 24, CEIN, 3, -1), rnode(GOUT, 48, 24, 16) },
  { pnode(GPIO, 48, 24, CEOUT, 3, -1), rnode(GOUT, 48, 24, 17) },
  { pnode(GPIO, 48, 24, ACLR, 3, -1), rnode(GOUT, 48, 24, 18) },
  { pnode(GPIO, 48, 24, SCLR, 3, -1), rnode(GOUT, 48, 24, 25) },
  { pnode(GPIO, 48, 24, CLKIN_IN, 3, 0), rnode(DCMUX, 48, 24, 2) },
  { pnode(GPIO, 48, 24, CLKIN_IN, 3, 1), rnode(DCMUX, 48, 24, 3) },
  { pnode(GPIO, 48, 24, CLKIN_OUT, 3, 0), rnode(DCMUX, 48, 24, 0) },
  { pnode(GPIO, 48, 24, CLKIN_OUT, 3, 1), rnode(DCMUX, 48, 24, 1) },
  { pnode(GPIO, 48, 27, DATAIN, 0, 0), rnode(GOUT, 48, 27, 49) },
  { pnode(GPIO, 48, 27, DATAIN, 0, 1), rnode(GOUT, 48, 27, 50) },
  { pnode(GPIO, 48, 27, DATAIN, 0, 2), rnode(GOUT, 48, 27, 51) },
  { pnode(GPIO, 48, 27, DATAIN, 0, 3), rnode(GOUT, 48, 27, 52) },
  { pnode(GPIO, 48, 27, DATAOUT, 0, 0), rnode(GIN, 48, 27, 48) },
  { pnode(GPIO, 48, 27, DATAOUT, 0, 1), rnode(GIN, 48, 27, 49) },
  { pnode(GPIO, 48, 27, DATAOUT, 0, 2), rnode(GIN, 48, 27, 50) },
  { pnode(GPIO, 48, 27, DATAOUT, 0, 3), rnode(GIN, 48, 27, 51) },
  { pnode(GPIO, 48, 27, DATAOUT, 0, 4), rnode(GIN, 48, 27, 52) },
  { pnode(GPIO, 48, 27, OEIN, 0, 0), rnode(GOUT, 48, 27, 53) },
  { pnode(GPIO, 48, 27, OEIN, 0, 1), rnode(GOUT, 48, 27, 54) },
  { pnode(GPIO, 48, 27, BSLIPMAX, 0, -1), rnode(GIN, 48, 27, 47) },
  { pnode(GPIO, 48, 27, CEIN, 0, -1), rnode(GOUT, 48, 27, 46) },
  { pnode(GPIO, 48, 27, CEOUT, 0, -1), rnode(GOUT, 48, 27, 47) },
  { pnode(GPIO, 48, 27, ACLR, 0, -1), rnode(GOUT, 48, 27, 48) },
  { pnode(GPIO, 48, 27, SCLR, 0, -1), rnode(GOUT, 48, 27, 55) },
  { pnode(GPIO, 48, 27, CLKIN_IN, 0, 0), rnode(DCMUX, 48, 27, 14) },
  { pnode(GPIO, 48, 27, CLKIN_IN, 0, 1), rnode(DCMUX, 48, 27, 15) },
  { pnode(GPIO, 48, 27, CLKIN_OUT, 0, 0), rnode(DCMUX, 48, 27, 12) },
  { pnode(GPIO, 48, 27, CLKIN_OUT, 0, 1), rnode(DCMUX, 48, 27, 13) },
  { pnode(GPIO, 48, 27, DATAIN, 1, 0), rnode(GOUT, 48, 27, 39) },
  { pnode(GPIO, 48, 27, DATAIN, 1, 1), rnode(GOUT, 48, 27, 40) },
  { pnode(GPIO, 48, 27, DATAIN, 1, 2), rnode(GOUT, 48, 27, 41) },
  { pnode(GPIO, 48, 27, DATAIN, 1, 3), rnode(GOUT, 48, 27, 42) },
  { pnode(GPIO, 48, 27, DATAOUT, 1, 0), rnode(GIN, 48, 27, 42) },
  { pnode(GPIO, 48, 27, DATAOUT, 1, 1), rnode(GIN, 48, 27, 43) },
  { pnode(GPIO, 48, 27, DATAOUT, 1, 2), rnode(GIN, 48, 27, 44) },
  { pnode(GPIO, 48, 27, DATAOUT, 1, 3), rnode(GIN, 48, 27, 45) },
  { pnode(GPIO, 48, 27, DATAOUT, 1, 4), rnode(GIN, 48, 27, 46) },
  { pnode(GPIO, 48, 27, OEIN, 1, 0), rnode(GOUT, 48, 27, 43) },
  { pnode(GPIO, 48, 27, OEIN, 1, 1), rnode(GOUT, 48, 27, 44) },
  { pnode(GPIO, 48, 27, BSLIPMAX, 1, -1), rnode(GIN, 48, 27, 41) },
  { pnode(GPIO, 48, 27, CEIN, 1, -1), rnode(GOUT, 48, 27, 36) },
  { pnode(GPIO, 48, 27, CEOUT, 1, -1), rnode(GOUT, 48, 27, 37) },
  { pnode(GPIO, 48, 27, ACLR, 1, -1), rnode(GOUT, 48, 27, 38) },
  { pnode(GPIO, 48, 27, SCLR, 1, -1), rnode(GOUT, 48, 27, 45) },
  { pnode(GPIO, 48, 27, CLKIN_IN, 1, 0), rnode(DCMUX, 48, 27, 10) },
  { pnode(GPIO, 48, 27, CLKIN_IN, 1, 1), rnode(DCMUX, 48, 27, 11) },
  { pnode(GPIO, 48, 27, CLKIN_OUT, 1, 0), rnode(DCMUX, 48, 27, 8) },
  { pnode(GPIO, 48, 27, CLKIN_OUT, 1, 1), rnode(DCMUX, 48, 27, 9) },
  { pnode(GPIO, 48, 27, DATAIN, 2, 0), rnode(GOUT, 48, 27, 29) },
  { pnode(GPIO, 48, 27, DATAIN, 2, 1), rnode(GOUT, 48, 27, 30) },
  { pnode(GPIO, 48, 27, DATAIN, 2, 2), rnode(GOUT, 48, 27, 32) },
  { pnode(GPIO, 48, 27, DATAIN, 2, 3), rnode(GOUT, 48, 27, 33) },
  { pnode(GPIO, 48, 27, DATAOUT, 2, 0), rnode(GIN, 48, 27, 36) },
  { pnode(GPIO, 48, 27, DATAOUT, 2, 1), rnode(GIN, 48, 27, 37) },
  { pnode(GPIO, 48, 27, DATAOUT, 2, 2), rnode(GIN, 48, 27, 38) },
  { pnode(GPIO, 48, 27, DATAOUT, 2, 3), rnode(GIN, 48, 27, 39) },
  { pnode(GPIO, 48, 27, DATAOUT, 2, 4), rnode(GIN, 48, 27, 40) },
  { pnode(GPIO, 48, 27, OEIN, 2, 0), rnode(GOUT, 48, 27, 34) },
  { pnode(GPIO, 48, 27, OEIN, 2, 1), rnode(GOUT, 48, 27, 35) },
  { pnode(GPIO, 48, 27, BSLIPMAX, 2, -1), rnode(GIN, 48, 27, 35) },
  { pnode(GPIO, 48, 27, CEIN, 2, -1), rnode(GOUT, 48, 27, 26) },
  { pnode(GPIO, 48, 27, CEOUT, 2, -1), rnode(GOUT, 48, 27, 27) },
  { pnode(GPIO, 48, 27, ACLR, 2, -1), rnode(GOUT, 48, 27, 28) },
  { pnode(GPIO, 48, 27, SCLR, 2, -1), rnode(GOUT, 48, 27, 31) },
  { pnode(GPIO, 48, 27, CLKIN_IN, 2, 0), rnode(DCMUX, 48, 27, 6) },
  { pnode(GPIO, 48, 27, CLKIN_IN, 2, 1), rnode(DCMUX, 48, 27, 7) },
  { pnode(GPIO, 48, 27, CLKIN_OUT, 2, 0), rnode(DCMUX, 48, 27, 4) },
  { pnode(GPIO, 48, 27, CLKIN_OUT, 2, 1), rnode(DCMUX, 48, 27, 5) },
  { pnode(GPIO, 48, 27, DATAIN, 3, 0), rnode(GOUT, 48, 27, 19) },
  { pnode(GPIO, 48, 27, DATAIN, 3, 1), rnode(GOUT, 48, 27, 20) },
  { pnode(GPIO, 48, 27, DATAIN, 3, 2), rnode(GOUT, 48, 27, 21) },
  { pnode(GPIO, 48, 27, DATAIN, 3, 3), rnode(GOUT, 48, 27, 22) },
  { pnode(GPIO, 48, 27, DATAOUT, 3, 0), rnode(GIN, 48, 27, 30) },
  { pnode(GPIO, 48, 27, DATAOUT, 3, 1), rnode(GIN, 48, 27, 31) },
  { pnode(GPIO, 48, 27, DATAOUT, 3, 2), rnode(GIN, 48, 27, 32) },
  { pnode(GPIO, 48, 27, DATAOUT, 3, 3), rnode(GIN, 48, 27, 33) },
  { pnode(GPIO, 48, 27, DATAOUT, 3, 4), rnode(GIN, 48, 27, 34) },
  { pnode(GPIO, 48, 27, OEIN, 3, 0), rnode(GOUT, 48, 27, 23) },
  { pnode(GPIO, 48, 27, OEIN, 3, 1), rnode(GOUT, 48, 27, 24) },
  { pnode(GPIO, 48, 27, BSLIPMAX, 3, -1), rnode(GIN, 48, 27, 29) },
  { pnode(GPIO, 48, 27, CEIN, 3, -1), rnode(GOUT, 48, 27, 16) },
  { pnode(GPIO, 48, 27, CEOUT, 3, -1), rnode(GOUT, 48, 27, 17) },
  { pnode(GPIO, 48, 27, ACLR, 3, -1), rnode(GOUT, 48, 27, 18) },
  { pnode(GPIO, 48, 27, SCLR, 3, -1), rnode(GOUT, 48, 27, 25) },
  { pnode(GPIO, 48, 27, CLKIN_IN, 3, 0), rnode(DCMUX, 48, 27, 2) },
  { pnode(GPIO, 48, 27, CLKIN_IN, 3, 1), rnode(DCMUX, 48, 27, 3) },
  { pnode(GPIO, 48, 27, CLKIN_OUT, 3, 0), rnode(DCMUX, 48, 27, 0) },
  { pnode(GPIO, 48, 27, CLKIN_OUT, 3, 1), rnode(DCMUX, 48, 27, 1) },
  { pnode(GPIO, 48, 29, DATAIN, 0, 0), rnode(GOUT, 48, 29, 49) },
  { pnode(GPIO, 48, 29, DATAIN, 0, 1), rnode(GOUT, 48, 29, 50) },
  { pnode(GPIO, 48, 29, DATAIN, 0, 2), rnode(GOUT, 48, 29, 51) },
  { pnode(GPIO, 48, 29, DATAIN, 0, 3), rnode(GOUT, 48, 29, 52) },
  { pnode(GPIO, 48, 29, DATAOUT, 0, 0), rnode(GIN, 48, 29, 48) },
  { pnode(GPIO, 48, 29, DATAOUT, 0, 1), rnode(GIN, 48, 29, 49) },
  { pnode(GPIO, 48, 29, DATAOUT, 0, 2), rnode(GIN, 48, 29, 50) },
  { pnode(GPIO, 48, 29, DATAOUT, 0, 3), rnode(GIN, 48, 29, 51) },
  { pnode(GPIO, 48, 29, DATAOUT, 0, 4), rnode(GIN, 48, 29, 52) },
  { pnode(GPIO, 48, 29, OEIN, 0, 0), rnode(GOUT, 48, 29, 53) },
  { pnode(GPIO, 48, 29, OEIN, 0, 1), rnode(GOUT, 48, 29, 54) },
  { pnode(GPIO, 48, 29, BSLIPMAX, 0, -1), rnode(GIN, 48, 29, 47) },
  { pnode(GPIO, 48, 29, CEIN, 0, -1), rnode(GOUT, 48, 29, 46) },
  { pnode(GPIO, 48, 29, CEOUT, 0, -1), rnode(GOUT, 48, 29, 47) },
  { pnode(GPIO, 48, 29, ACLR, 0, -1), rnode(GOUT, 48, 29, 48) },
  { pnode(GPIO, 48, 29, SCLR, 0, -1), rnode(GOUT, 48, 29, 55) },
  { pnode(GPIO, 48, 29, CLKIN_IN, 0, 0), rnode(DCMUX, 48, 29, 14) },
  { pnode(GPIO, 48, 29, CLKIN_IN, 0, 1), rnode(DCMUX, 48, 29, 15) },
  { pnode(GPIO, 48, 29, CLKIN_OUT, 0, 0), rnode(DCMUX, 48, 29, 12) },
  { pnode(GPIO, 48, 29, CLKIN_OUT, 0, 1), rnode(DCMUX, 48, 29, 13) },
  { pnode(GPIO, 48, 29, DATAIN, 1, 0), rnode(GOUT, 48, 29, 39) },
  { pnode(GPIO, 48, 29, DATAIN, 1, 1), rnode(GOUT, 48, 29, 40) },
  { pnode(GPIO, 48, 29, DATAIN, 1, 2), rnode(GOUT, 48, 29, 41) },
  { pnode(GPIO, 48, 29, DATAIN, 1, 3), rnode(GOUT, 48, 29, 42) },
  { pnode(GPIO, 48, 29, DATAOUT, 1, 0), rnode(GIN, 48, 29, 42) },
  { pnode(GPIO, 48, 29, DATAOUT, 1, 1), rnode(GIN, 48, 29, 43) },
  { pnode(GPIO, 48, 29, DATAOUT, 1, 2), rnode(GIN, 48, 29, 44) },
  { pnode(GPIO, 48, 29, DATAOUT, 1, 3), rnode(GIN, 48, 29, 45) },
  { pnode(GPIO, 48, 29, DATAOUT, 1, 4), rnode(GIN, 48, 29, 46) },
  { pnode(GPIO, 48, 29, OEIN, 1, 0), rnode(GOUT, 48, 29, 43) },
  { pnode(GPIO, 48, 29, OEIN, 1, 1), rnode(GOUT, 48, 29, 44) },
  { pnode(GPIO, 48, 29, BSLIPMAX, 1, -1), rnode(GIN, 48, 29, 41) },
  { pnode(GPIO, 48, 29, CEIN, 1, -1), rnode(GOUT, 48, 29, 36) },
  { pnode(GPIO, 48, 29, CEOUT, 1, -1), rnode(GOUT, 48, 29, 37) },
  { pnode(GPIO, 48, 29, ACLR, 1, -1), rnode(GOUT, 48, 29, 38) },
  { pnode(GPIO, 48, 29, SCLR, 1, -1), rnode(GOUT, 48, 29, 45) },
  { pnode(GPIO, 48, 29, CLKIN_IN, 1, 0), rnode(DCMUX, 48, 29, 10) },
  { pnode(GPIO, 48, 29, CLKIN_IN, 1, 1), rnode(DCMUX, 48, 29, 11) },
  { pnode(GPIO, 48, 29, CLKIN_OUT, 1, 0), rnode(DCMUX, 48, 29, 8) },
  { pnode(GPIO, 48, 29, CLKIN_OUT, 1, 1), rnode(DCMUX, 48, 29, 9) },
  { pnode(GPIO, 48, 29, DATAIN, 2, 0), rnode(GOUT, 48, 29, 29) },
  { pnode(GPIO, 48, 29, DATAIN, 2, 1), rnode(GOUT, 48, 29, 30) },
  { pnode(GPIO, 48, 29, DATAIN, 2, 2), rnode(GOUT, 48, 29, 31) },
  { pnode(GPIO, 48, 29, DATAIN, 2, 3), rnode(GOUT, 48, 29, 32) },
  { pnode(GPIO, 48, 29, DATAOUT, 2, 0), rnode(GIN, 48, 29, 36) },
  { pnode(GPIO, 48, 29, DATAOUT, 2, 1), rnode(GIN, 48, 29, 37) },
  { pnode(GPIO, 48, 29, DATAOUT, 2, 2), rnode(GIN, 48, 29, 38) },
  { pnode(GPIO, 48, 29, DATAOUT, 2, 3), rnode(GIN, 48, 29, 39) },
  { pnode(GPIO, 48, 29, DATAOUT, 2, 4), rnode(GIN, 48, 29, 40) },
  { pnode(GPIO, 48, 29, OEIN, 2, 0), rnode(GOUT, 48, 29, 33) },
  { pnode(GPIO, 48, 29, OEIN, 2, 1), rnode(GOUT, 48, 29, 34) },
  { pnode(GPIO, 48, 29, BSLIPMAX, 2, -1), rnode(GIN, 48, 29, 35) },
  { pnode(GPIO, 48, 29, CEIN, 2, -1), rnode(GOUT, 48, 29, 26) },
  { pnode(GPIO, 48, 29, CEOUT, 2, -1), rnode(GOUT, 48, 29, 27) },
  { pnode(GPIO, 48, 29, ACLR, 2, -1), rnode(GOUT, 48, 29, 28) },
  { pnode(GPIO, 48, 29, SCLR, 2, -1), rnode(GOUT, 48, 29, 35) },
  { pnode(GPIO, 48, 29, CLKIN_IN, 2, 0), rnode(DCMUX, 48, 29, 6) },
  { pnode(GPIO, 48, 29, CLKIN_IN, 2, 1), rnode(DCMUX, 48, 29, 7) },
  { pnode(GPIO, 48, 29, CLKIN_OUT, 2, 0), rnode(DCMUX, 48, 29, 4) },
  { pnode(GPIO, 48, 29, CLKIN_OUT, 2, 1), rnode(DCMUX, 48, 29, 5) },
  { pnode(GPIO, 48, 29, DATAIN, 3, 0), rnode(GOUT, 48, 29, 19) },
  { pnode(GPIO, 48, 29, DATAIN, 3, 1), rnode(GOUT, 48, 29, 20) },
  { pnode(GPIO, 48, 29, DATAIN, 3, 2), rnode(GOUT, 48, 29, 21) },
  { pnode(GPIO, 48, 29, DATAIN, 3, 3), rnode(GOUT, 48, 29, 22) },
  { pnode(GPIO, 48, 29, DATAOUT, 3, 0), rnode(GIN, 48, 29, 30) },
  { pnode(GPIO, 48, 29, DATAOUT, 3, 1), rnode(GIN, 48, 29, 31) },
  { pnode(GPIO, 48, 29, DATAOUT, 3, 2), rnode(GIN, 48, 29, 32) },
  { pnode(GPIO, 48, 29, DATAOUT, 3, 3), rnode(GIN, 48, 29, 33) },
  { pnode(GPIO, 48, 29, DATAOUT, 3, 4), rnode(GIN, 48, 29, 34) },
  { pnode(GPIO, 48, 29, OEIN, 3, 0), rnode(GOUT, 48, 29, 23) },
  { pnode(GPIO, 48, 29, OEIN, 3, 1), rnode(GOUT, 48, 29, 24) },
  { pnode(GPIO, 48, 29, BSLIPMAX, 3, -1), rnode(GIN, 48, 29, 29) },
  { pnode(GPIO, 48, 29, CEIN, 3, -1), rnode(GOUT, 48, 29, 16) },
  { pnode(GPIO, 48, 29, CEOUT, 3, -1), rnode(GOUT, 48, 29, 17) },
  { pnode(GPIO, 48, 29, ACLR, 3, -1), rnode(GOUT, 48, 29, 18) },
  { pnode(GPIO, 48, 29, SCLR, 3, -1), rnode(GOUT, 48, 29, 25) },
  { pnode(GPIO, 48, 29, CLKIN_IN, 3, 0), rnode(DCMUX, 48, 29, 2) },
  { pnode(GPIO, 48, 29, CLKIN_IN, 3, 1), rnode(DCMUX, 48, 29, 3) },
  { pnode(GPIO, 48, 29, CLKIN_OUT, 3, 0), rnode(DCMUX, 48, 29, 0) },
  { pnode(GPIO, 48, 29, CLKIN_OUT, 3, 1), rnode(DCMUX, 48, 29, 1) },
  { pnode(GPIO, 48, 30, DATAIN, 0, 0), rnode(GOUT, 48, 30, 49) },
  { pnode(GPIO, 48, 30, DATAIN, 0, 1), rnode(GOUT, 48, 30, 50) },
  { pnode(GPIO, 48, 30, DATAIN, 0, 2), rnode(GOUT, 48, 30, 51) },
  { pnode(GPIO, 48, 30, DATAIN, 0, 3), rnode(GOUT, 48, 30, 52) },
  { pnode(GPIO, 48, 30, DATAOUT, 0, 0), rnode(GIN, 48, 30, 48) },
  { pnode(GPIO, 48, 30, DATAOUT, 0, 1), rnode(GIN, 48, 30, 49) },
  { pnode(GPIO, 48, 30, DATAOUT, 0, 2), rnode(GIN, 48, 30, 50) },
  { pnode(GPIO, 48, 30, DATAOUT, 0, 3), rnode(GIN, 48, 30, 51) },
  { pnode(GPIO, 48, 30, DATAOUT, 0, 4), rnode(GIN, 48, 30, 52) },
  { pnode(GPIO, 48, 30, OEIN, 0, 0), rnode(GOUT, 48, 30, 53) },
  { pnode(GPIO, 48, 30, OEIN, 0, 1), rnode(GOUT, 48, 30, 54) },
  { pnode(GPIO, 48, 30, BSLIPMAX, 0, -1), rnode(GIN, 48, 30, 47) },
  { pnode(GPIO, 48, 30, CEIN, 0, -1), rnode(GOUT, 48, 30, 46) },
  { pnode(GPIO, 48, 30, CEOUT, 0, -1), rnode(GOUT, 48, 30, 47) },
  { pnode(GPIO, 48, 30, ACLR, 0, -1), rnode(GOUT, 48, 30, 48) },
  { pnode(GPIO, 48, 30, SCLR, 0, -1), rnode(GOUT, 48, 30, 55) },
  { pnode(GPIO, 48, 30, CLKIN_IN, 0, 0), rnode(DCMUX, 48, 30, 14) },
  { pnode(GPIO, 48, 30, CLKIN_IN, 0, 1), rnode(DCMUX, 48, 30, 15) },
  { pnode(GPIO, 48, 30, CLKIN_OUT, 0, 0), rnode(DCMUX, 48, 30, 12) },
  { pnode(GPIO, 48, 30, CLKIN_OUT, 0, 1), rnode(DCMUX, 48, 30, 13) },
  { pnode(GPIO, 48, 30, DATAIN, 1, 0), rnode(GOUT, 48, 30, 39) },
  { pnode(GPIO, 48, 30, DATAIN, 1, 1), rnode(GOUT, 48, 30, 40) },
  { pnode(GPIO, 48, 30, DATAIN, 1, 2), rnode(GOUT, 48, 30, 41) },
  { pnode(GPIO, 48, 30, DATAIN, 1, 3), rnode(GOUT, 48, 30, 42) },
  { pnode(GPIO, 48, 30, DATAOUT, 1, 0), rnode(GIN, 48, 30, 42) },
  { pnode(GPIO, 48, 30, DATAOUT, 1, 1), rnode(GIN, 48, 30, 43) },
  { pnode(GPIO, 48, 30, DATAOUT, 1, 2), rnode(GIN, 48, 30, 44) },
  { pnode(GPIO, 48, 30, DATAOUT, 1, 3), rnode(GIN, 48, 30, 45) },
  { pnode(GPIO, 48, 30, DATAOUT, 1, 4), rnode(GIN, 48, 30, 46) },
  { pnode(GPIO, 48, 30, OEIN, 1, 0), rnode(GOUT, 48, 30, 43) },
  { pnode(GPIO, 48, 30, OEIN, 1, 1), rnode(GOUT, 48, 30, 44) },
  { pnode(GPIO, 48, 30, BSLIPMAX, 1, -1), rnode(GIN, 48, 30, 41) },
  { pnode(GPIO, 48, 30, CEIN, 1, -1), rnode(GOUT, 48, 30, 36) },
  { pnode(GPIO, 48, 30, CEOUT, 1, -1), rnode(GOUT, 48, 30, 37) },
  { pnode(GPIO, 48, 30, ACLR, 1, -1), rnode(GOUT, 48, 30, 38) },
  { pnode(GPIO, 48, 30, SCLR, 1, -1), rnode(GOUT, 48, 30, 45) },
  { pnode(GPIO, 48, 30, CLKIN_IN, 1, 0), rnode(DCMUX, 48, 30, 10) },
  { pnode(GPIO, 48, 30, CLKIN_IN, 1, 1), rnode(DCMUX, 48, 30, 11) },
  { pnode(GPIO, 48, 30, CLKIN_OUT, 1, 0), rnode(DCMUX, 48, 30, 8) },
  { pnode(GPIO, 48, 30, CLKIN_OUT, 1, 1), rnode(DCMUX, 48, 30, 9) },
  { pnode(GPIO, 48, 30, DATAIN, 2, 0), rnode(GOUT, 48, 30, 29) },
  { pnode(GPIO, 48, 30, DATAIN, 2, 1), rnode(GOUT, 48, 30, 30) },
  { pnode(GPIO, 48, 30, DATAIN, 2, 2), rnode(GOUT, 48, 30, 31) },
  { pnode(GPIO, 48, 30, DATAIN, 2, 3), rnode(GOUT, 48, 30, 32) },
  { pnode(GPIO, 48, 30, DATAOUT, 2, 0), rnode(GIN, 48, 30, 36) },
  { pnode(GPIO, 48, 30, DATAOUT, 2, 1), rnode(GIN, 48, 30, 37) },
  { pnode(GPIO, 48, 30, DATAOUT, 2, 2), rnode(GIN, 48, 30, 38) },
  { pnode(GPIO, 48, 30, DATAOUT, 2, 3), rnode(GIN, 48, 30, 39) },
  { pnode(GPIO, 48, 30, DATAOUT, 2, 4), rnode(GIN, 48, 30, 40) },
  { pnode(GPIO, 48, 30, OEIN, 2, 0), rnode(GOUT, 48, 30, 33) },
  { pnode(GPIO, 48, 30, OEIN, 2, 1), rnode(GOUT, 48, 30, 34) },
  { pnode(GPIO, 48, 30, BSLIPMAX, 2, -1), rnode(GIN, 48, 30, 35) },
  { pnode(GPIO, 48, 30, CEIN, 2, -1), rnode(GOUT, 48, 30, 26) },
  { pnode(GPIO, 48, 30, CEOUT, 2, -1), rnode(GOUT, 48, 30, 27) },
  { pnode(GPIO, 48, 30, ACLR, 2, -1), rnode(GOUT, 48, 30, 28) },
  { pnode(GPIO, 48, 30, SCLR, 2, -1), rnode(GOUT, 48, 30, 35) },
  { pnode(GPIO, 48, 30, CLKIN_IN, 2, 0), rnode(DCMUX, 48, 30, 6) },
  { pnode(GPIO, 48, 30, CLKIN_IN, 2, 1), rnode(DCMUX, 48, 30, 7) },
  { pnode(GPIO, 48, 30, CLKIN_OUT, 2, 0), rnode(DCMUX, 48, 30, 4) },
  { pnode(GPIO, 48, 30, CLKIN_OUT, 2, 1), rnode(DCMUX, 48, 30, 5) },
  { pnode(GPIO, 48, 30, DATAIN, 3, 0), rnode(GOUT, 48, 30, 19) },
  { pnode(GPIO, 48, 30, DATAIN, 3, 1), rnode(GOUT, 48, 30, 20) },
  { pnode(GPIO, 48, 30, DATAIN, 3, 2), rnode(GOUT, 48, 30, 21) },
  { pnode(GPIO, 48, 30, DATAIN, 3, 3), rnode(GOUT, 48, 30, 22) },
  { pnode(GPIO, 48, 30, DATAOUT, 3, 0), rnode(GIN, 48, 30, 30) },
  { pnode(GPIO, 48, 30, DATAOUT, 3, 1), rnode(GIN, 48, 30, 31) },
  { pnode(GPIO, 48, 30, DATAOUT, 3, 2), rnode(GIN, 48, 30, 32) },
  { pnode(GPIO, 48, 30, DATAOUT, 3, 3), rnode(GIN, 48, 30, 33) },
  { pnode(GPIO, 48, 30, DATAOUT, 3, 4), rnode(GIN, 48, 30, 34) },
  { pnode(GPIO, 48, 30, OEIN, 3, 0), rnode(GOUT, 48, 30, 23) },
  { pnode(GPIO, 48, 30, OEIN, 3, 1), rnode(GOUT, 48, 30, 24) },
  { pnode(GPIO, 48, 30, BSLIPMAX, 3, -1), rnode(GIN, 48, 30, 29) },
  { pnode(GPIO, 48, 30, CEIN, 3, -1), rnode(GOUT, 48, 30, 16) },
  { pnode(GPIO, 48, 30, CEOUT, 3, -1), rnode(GOUT, 48, 30, 17) },
  { pnode(GPIO, 48, 30, ACLR, 3, -1), rnode(GOUT, 48, 30, 18) },
  { pnode(GPIO, 48, 30, SCLR, 3, -1), rnode(GOUT, 48, 30, 25) },
  { pnode(GPIO, 48, 30, CLKIN_IN, 3, 0), rnode(DCMUX, 48, 30, 2) },
  { pnode(GPIO, 48, 30, CLKIN_IN, 3, 1), rnode(DCMUX, 48, 30, 3) },
  { pnode(GPIO, 48, 30, CLKIN_OUT, 3, 0), rnode(DCMUX, 48, 30, 0) },
  { pnode(GPIO, 48, 30, CLKIN_OUT, 3, 1), rnode(DCMUX, 48, 30, 1) },
  { pnode(GPIO, 48, 32, DATAIN, 0, 0), rnode(GOUT, 48, 32, 49) },
  { pnode(GPIO, 48, 32, DATAIN, 0, 1), rnode(GOUT, 48, 32, 50) },
  { pnode(GPIO, 48, 32, DATAIN, 0, 2), rnode(GOUT, 48, 32, 51) },
  { pnode(GPIO, 48, 32, DATAIN, 0, 3), rnode(GOUT, 48, 32, 52) },
  { pnode(GPIO, 48, 32, DATAOUT, 0, 0), rnode(GIN, 48, 32, 48) },
  { pnode(GPIO, 48, 32, DATAOUT, 0, 1), rnode(GIN, 48, 32, 49) },
  { pnode(GPIO, 48, 32, DATAOUT, 0, 2), rnode(GIN, 48, 32, 50) },
  { pnode(GPIO, 48, 32, DATAOUT, 0, 3), rnode(GIN, 48, 32, 51) },
  { pnode(GPIO, 48, 32, DATAOUT, 0, 4), rnode(GIN, 48, 32, 52) },
  { pnode(GPIO, 48, 32, OEIN, 0, 0), rnode(GOUT, 48, 32, 53) },
  { pnode(GPIO, 48, 32, OEIN, 0, 1), rnode(GOUT, 48, 32, 55) },
  { pnode(GPIO, 48, 32, BSLIPMAX, 0, -1), rnode(GIN, 48, 32, 47) },
  { pnode(GPIO, 48, 32, CEIN, 0, -1), rnode(GOUT, 48, 32, 46) },
  { pnode(GPIO, 48, 32, CEOUT, 0, -1), rnode(GOUT, 48, 32, 47) },
  { pnode(GPIO, 48, 32, ACLR, 0, -1), rnode(GOUT, 48, 32, 48) },
  { pnode(GPIO, 48, 32, SCLR, 0, -1), rnode(GOUT, 48, 32, 54) },
  { pnode(GPIO, 48, 32, CLKIN_IN, 0, 0), rnode(DCMUX, 48, 32, 14) },
  { pnode(GPIO, 48, 32, CLKIN_IN, 0, 1), rnode(DCMUX, 48, 32, 15) },
  { pnode(GPIO, 48, 32, CLKIN_OUT, 0, 0), rnode(DCMUX, 48, 32, 12) },
  { pnode(GPIO, 48, 32, CLKIN_OUT, 0, 1), rnode(DCMUX, 48, 32, 13) },
  { pnode(GPIO, 48, 32, DATAIN, 1, 0), rnode(GOUT, 48, 32, 39) },
  { pnode(GPIO, 48, 32, DATAIN, 1, 1), rnode(GOUT, 48, 32, 40) },
  { pnode(GPIO, 48, 32, DATAIN, 1, 2), rnode(GOUT, 48, 32, 41) },
  { pnode(GPIO, 48, 32, DATAIN, 1, 3), rnode(GOUT, 48, 32, 42) },
  { pnode(GPIO, 48, 32, DATAOUT, 1, 0), rnode(GIN, 48, 32, 42) },
  { pnode(GPIO, 48, 32, DATAOUT, 1, 1), rnode(GIN, 48, 32, 43) },
  { pnode(GPIO, 48, 32, DATAOUT, 1, 2), rnode(GIN, 48, 32, 44) },
  { pnode(GPIO, 48, 32, DATAOUT, 1, 3), rnode(GIN, 48, 32, 45) },
  { pnode(GPIO, 48, 32, DATAOUT, 1, 4), rnode(GIN, 48, 32, 46) },
  { pnode(GPIO, 48, 32, OEIN, 1, 0), rnode(GOUT, 48, 32, 43) },
  { pnode(GPIO, 48, 32, OEIN, 1, 1), rnode(GOUT, 48, 32, 44) },
  { pnode(GPIO, 48, 32, BSLIPMAX, 1, -1), rnode(GIN, 48, 32, 41) },
  { pnode(GPIO, 48, 32, CEIN, 1, -1), rnode(GOUT, 48, 32, 36) },
  { pnode(GPIO, 48, 32, CEOUT, 1, -1), rnode(GOUT, 48, 32, 37) },
  { pnode(GPIO, 48, 32, ACLR, 1, -1), rnode(GOUT, 48, 32, 38) },
  { pnode(GPIO, 48, 32, SCLR, 1, -1), rnode(GOUT, 48, 32, 45) },
  { pnode(GPIO, 48, 32, CLKIN_IN, 1, 0), rnode(DCMUX, 48, 32, 10) },
  { pnode(GPIO, 48, 32, CLKIN_IN, 1, 1), rnode(DCMUX, 48, 32, 11) },
  { pnode(GPIO, 48, 32, CLKIN_OUT, 1, 0), rnode(DCMUX, 48, 32, 8) },
  { pnode(GPIO, 48, 32, CLKIN_OUT, 1, 1), rnode(DCMUX, 48, 32, 9) },
  { pnode(GPIO, 48, 32, DATAIN, 2, 0), rnode(GOUT, 48, 32, 29) },
  { pnode(GPIO, 48, 32, DATAIN, 2, 1), rnode(GOUT, 48, 32, 30) },
  { pnode(GPIO, 48, 32, DATAIN, 2, 2), rnode(GOUT, 48, 32, 31) },
  { pnode(GPIO, 48, 32, DATAIN, 2, 3), rnode(GOUT, 48, 32, 32) },
  { pnode(GPIO, 48, 32, DATAOUT, 2, 0), rnode(GIN, 48, 32, 36) },
  { pnode(GPIO, 48, 32, DATAOUT, 2, 1), rnode(GIN, 48, 32, 37) },
  { pnode(GPIO, 48, 32, DATAOUT, 2, 2), rnode(GIN, 48, 32, 38) },
  { pnode(GPIO, 48, 32, DATAOUT, 2, 3), rnode(GIN, 48, 32, 39) },
  { pnode(GPIO, 48, 32, DATAOUT, 2, 4), rnode(GIN, 48, 32, 40) },
  { pnode(GPIO, 48, 32, OEIN, 2, 0), rnode(GOUT, 48, 32, 33) },
  { pnode(GPIO, 48, 32, OEIN, 2, 1), rnode(GOUT, 48, 32, 34) },
  { pnode(GPIO, 48, 32, BSLIPMAX, 2, -1), rnode(GIN, 48, 32, 35) },
  { pnode(GPIO, 48, 32, CEIN, 2, -1), rnode(GOUT, 48, 32, 26) },
  { pnode(GPIO, 48, 32, CEOUT, 2, -1), rnode(GOUT, 48, 32, 27) },
  { pnode(GPIO, 48, 32, ACLR, 2, -1), rnode(GOUT, 48, 32, 28) },
  { pnode(GPIO, 48, 32, SCLR, 2, -1), rnode(GOUT, 48, 32, 35) },
  { pnode(GPIO, 48, 32, CLKIN_IN, 2, 0), rnode(DCMUX, 48, 32, 6) },
  { pnode(GPIO, 48, 32, CLKIN_IN, 2, 1), rnode(DCMUX, 48, 32, 7) },
  { pnode(GPIO, 48, 32, CLKIN_OUT, 2, 0), rnode(DCMUX, 48, 32, 4) },
  { pnode(GPIO, 48, 32, CLKIN_OUT, 2, 1), rnode(DCMUX, 48, 32, 5) },
  { pnode(GPIO, 48, 32, DATAIN, 3, 0), rnode(GOUT, 48, 32, 19) },
  { pnode(GPIO, 48, 32, DATAIN, 3, 1), rnode(GOUT, 48, 32, 20) },
  { pnode(GPIO, 48, 32, DATAIN, 3, 2), rnode(GOUT, 48, 32, 21) },
  { pnode(GPIO, 48, 32, DATAIN, 3, 3), rnode(GOUT, 48, 32, 22) },
  { pnode(GPIO, 48, 32, DATAOUT, 3, 0), rnode(GIN, 48, 32, 30) },
  { pnode(GPIO, 48, 32, DATAOUT, 3, 1), rnode(GIN, 48, 32, 31) },
  { pnode(GPIO, 48, 32, DATAOUT, 3, 2), rnode(GIN, 48, 32, 32) },
  { pnode(GPIO, 48, 32, DATAOUT, 3, 3), rnode(GIN, 48, 32, 33) },
  { pnode(GPIO, 48, 32, DATAOUT, 3, 4), rnode(GIN, 48, 32, 34) },
  { pnode(GPIO, 48, 32, OEIN, 3, 0), rnode(GOUT, 48, 32, 23) },
  { pnode(GPIO, 48, 32, OEIN, 3, 1), rnode(GOUT, 48, 32, 24) },
  { pnode(GPIO, 48, 32, BSLIPMAX, 3, -1), rnode(GIN, 48, 32, 29) },
  { pnode(GPIO, 48, 32, CEIN, 3, -1), rnode(GOUT, 48, 32, 16) },
  { pnode(GPIO, 48, 32, CEOUT, 3, -1), rnode(GOUT, 48, 32, 17) },
  { pnode(GPIO, 48, 32, ACLR, 3, -1), rnode(GOUT, 48, 32, 18) },
  { pnode(GPIO, 48, 32, SCLR, 3, -1), rnode(GOUT, 48, 32, 25) },
  { pnode(GPIO, 48, 32, CLKIN_IN, 3, 0), rnode(DCMUX, 48, 32, 2) },
  { pnode(GPIO, 48, 32, CLKIN_IN, 3, 1), rnode(DCMUX, 48, 32, 3) },
  { pnode(GPIO, 48, 32, CLKIN_OUT, 3, 0), rnode(DCMUX, 48, 32, 0) },
  { pnode(GPIO, 48, 32, CLKIN_OUT, 3, 1), rnode(DCMUX, 48, 32, 1) },
  { pnode(HMC, 15, 39, AFISEQBUSY, -1, 0), rnode(GOUT, 46, 39, 16) },
  { pnode(HMC, 15, 39, AFISEQBUSY, -1, 1), rnode(GOUT, 46, 39, 22) },
  { pnode(HMC, 15, 39, AVLADDRESS, -1, 0), rnode(GOUT, 47, 39, 49) },
  { pnode(HMC, 15, 39, AVLADDRESS, -1, 1), rnode(GOUT, 47, 39, 48) },
  { pnode(HMC, 15, 39, AVLADDRESS, -1, 2), rnode(GOUT, 47, 39, 47) },
  { pnode(HMC, 15, 39, AVLADDRESS, -1, 3), rnode(GOUT, 47, 39, 42) },
  { pnode(HMC, 15, 39, AVLADDRESS, -1, 4), rnode(GOUT, 47, 39, 46) },
  { pnode(HMC, 15, 39, AVLADDRESS, -1, 5), rnode(GOUT, 47, 39, 41) },
  { pnode(HMC, 15, 39, AVLADDRESS, -1, 6), rnode(GOUT, 47, 39, 45) },
  { pnode(HMC, 15, 39, AVLADDRESS, -1, 7), rnode(GOUT, 47, 39, 40) },
  { pnode(HMC, 15, 39, AVLADDRESS, -1, 8), rnode(GOUT, 47, 39, 44) },
  { pnode(HMC, 15, 39, AVLADDRESS, -1, 9), rnode(GOUT, 47, 39, 39) },
  { pnode(HMC, 15, 39, AVLADDRESS, -1, 10), rnode(GOUT, 47, 39, 43) },
  { pnode(HMC, 15, 39, AVLADDRESS, -1, 11), rnode(GOUT, 47, 39, 38) },
  { pnode(HMC, 15, 39, AVLADDRESS, -1, 12), rnode(GOUT, 47, 39, 27) },
  { pnode(HMC, 15, 39, AVLADDRESS, -1, 13), rnode(GOUT, 47, 39, 28) },
  { pnode(HMC, 15, 39, AVLADDRESS, -1, 14), rnode(GOUT, 47, 39, 34) },
  { pnode(HMC, 15, 39, AVLADDRESS, -1, 15), rnode(GOUT, 47, 39, 29) },
  { pnode(HMC, 15, 39, AVLREAD, -1, -1), rnode(GOUT, 44, 39, 2) },
  { pnode(HMC, 15, 39, AVLRESETN, -1, -1), rnode(GOUT, 47, 39, 30) },
  { pnode(HMC, 15, 39, AVLWRITE, -1, -1), rnode(GOUT, 47, 39, 50) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 0), rnode(GOUT, 46, 39, 33) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 1), rnode(GOUT, 46, 39, 32) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 2), rnode(GOUT, 46, 39, 37) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 3), rnode(GOUT, 46, 39, 35) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 4), rnode(GOUT, 46, 39, 36) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 5), rnode(GOUT, 46, 39, 26) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 6), rnode(GOUT, 47, 39, 0) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 7), rnode(GOUT, 47, 39, 10) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 8), rnode(GOUT, 47, 39, 9) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 9), rnode(GOUT, 47, 39, 11) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 10), rnode(GOUT, 47, 39, 5) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 11), rnode(GOUT, 47, 39, 6) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 12), rnode(GOUT, 47, 39, 7) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 13), rnode(GOUT, 47, 39, 4) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 14), rnode(GOUT, 47, 39, 3) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 15), rnode(GOUT, 47, 39, 8) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 16), rnode(GOUT, 47, 39, 2) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 17), rnode(GOUT, 47, 39, 1) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 18), rnode(GOUT, 47, 39, 12) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 19), rnode(GOUT, 47, 39, 17) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 20), rnode(GOUT, 47, 39, 13) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 21), rnode(GOUT, 47, 39, 18) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 22), rnode(GOUT, 47, 39, 14) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 23), rnode(GOUT, 47, 39, 19) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 24), rnode(GOUT, 47, 39, 15) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 25), rnode(GOUT, 47, 39, 20) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 26), rnode(GOUT, 47, 39, 16) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 27), rnode(GOUT, 47, 39, 21) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 28), rnode(GOUT, 47, 39, 22) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 29), rnode(GOUT, 47, 39, 23) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 30), rnode(GOUT, 47, 39, 24) },
  { pnode(HMC, 15, 39, AVLWRITEDATA, -1, 31), rnode(GOUT, 47, 39, 25) },
  { pnode(HMC, 15, 39, GLOBALRESETN, -1, -1), rnode(GOUT, 44, 39, 50) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 0), rnode(GOUT, 17, 39, 49) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 1), rnode(GOUT, 17, 39, 48) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 2), rnode(GOUT, 17, 39, 47) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 3), rnode(GOUT, 17, 39, 42) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 4), rnode(GOUT, 17, 39, 46) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 5), rnode(GOUT, 17, 39, 41) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 6), rnode(GOUT, 17, 39, 45) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 7), rnode(GOUT, 17, 39, 40) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 8), rnode(GOUT, 17, 39, 44) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 9), rnode(GOUT, 17, 39, 39) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 10), rnode(GOUT, 17, 39, 43) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 11), rnode(GOUT, 17, 39, 38) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 12), rnode(GOUT, 17, 39, 27) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 13), rnode(GOUT, 17, 39, 28) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 14), rnode(GOUT, 17, 39, 34) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 15), rnode(GOUT, 17, 39, 29) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 16), rnode(GOUT, 17, 39, 30) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 17), rnode(GOUT, 17, 39, 31) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 18), rnode(GOUT, 17, 39, 33) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 19), rnode(GOUT, 17, 39, 32) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 20), rnode(GOUT, 17, 39, 37) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 21), rnode(GOUT, 17, 39, 35) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 22), rnode(GOUT, 17, 39, 36) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 23), rnode(GOUT, 17, 39, 26) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 24), rnode(GOUT, 18, 39, 0) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 25), rnode(GOUT, 18, 39, 10) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 26), rnode(GOUT, 18, 39, 9) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 27), rnode(GOUT, 18, 39, 11) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 28), rnode(GOUT, 18, 39, 6) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 29), rnode(GOUT, 18, 39, 7) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 30), rnode(GOUT, 18, 39, 5) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 31), rnode(GOUT, 18, 39, 4) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 32), rnode(GOUT, 18, 39, 3) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 33), rnode(GOUT, 18, 39, 8) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 34), rnode(GOUT, 18, 39, 2) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 35), rnode(GOUT, 18, 39, 1) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 36), rnode(GOUT, 18, 39, 12) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 37), rnode(GOUT, 18, 39, 17) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 38), rnode(GOUT, 18, 39, 13) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 39), rnode(GOUT, 18, 39, 18) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 40), rnode(GOUT, 18, 39, 14) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 0, 41), rnode(GOUT, 18, 39, 19) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 0), rnode(GOUT, 18, 39, 44) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 1), rnode(GOUT, 18, 39, 39) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 2), rnode(GOUT, 18, 39, 43) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 3), rnode(GOUT, 18, 39, 38) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 4), rnode(GOUT, 18, 39, 27) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 5), rnode(GOUT, 18, 39, 28) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 6), rnode(GOUT, 18, 39, 34) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 7), rnode(GOUT, 18, 39, 29) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 8), rnode(GOUT, 18, 39, 30) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 9), rnode(GOUT, 18, 39, 31) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 10), rnode(GOUT, 18, 39, 33) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 11), rnode(GOUT, 18, 39, 32) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 12), rnode(GOUT, 18, 39, 37) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 13), rnode(GOUT, 18, 39, 35) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 14), rnode(GOUT, 18, 39, 36) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 15), rnode(GOUT, 18, 39, 26) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 16), rnode(GOUT, 19, 39, 0) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 17), rnode(GOUT, 19, 39, 10) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 18), rnode(GOUT, 19, 39, 9) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 19), rnode(GOUT, 19, 39, 11) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 20), rnode(GOUT, 19, 39, 6) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 21), rnode(GOUT, 19, 39, 7) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 22), rnode(GOUT, 19, 39, 5) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 23), rnode(GOUT, 19, 39, 4) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 24), rnode(GOUT, 19, 39, 3) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 25), rnode(GOUT, 19, 39, 8) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 26), rnode(GOUT, 19, 39, 2) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 27), rnode(GOUT, 19, 39, 1) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 28), rnode(GOUT, 19, 39, 12) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 29), rnode(GOUT, 19, 39, 17) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 30), rnode(GOUT, 19, 39, 13) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 31), rnode(GOUT, 19, 39, 18) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 32), rnode(GOUT, 19, 39, 14) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 33), rnode(GOUT, 19, 39, 19) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 34), rnode(GOUT, 19, 39, 15) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 35), rnode(GOUT, 19, 39, 20) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 36), rnode(GOUT, 19, 39, 16) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 37), rnode(GOUT, 19, 39, 21) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 38), rnode(GOUT, 19, 39, 25) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 39), rnode(GOUT, 19, 39, 50) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 40), rnode(GOUT, 19, 39, 49) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 1, 41), rnode(GOUT, 19, 39, 48) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 0), rnode(GOUT, 19, 39, 40) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 1), rnode(GOUT, 19, 39, 44) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 2), rnode(GOUT, 19, 39, 45) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 3), rnode(GOUT, 19, 39, 39) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 4), rnode(GOUT, 19, 39, 43) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 5), rnode(GOUT, 19, 39, 38) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 6), rnode(GOUT, 19, 39, 27) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 7), rnode(GOUT, 19, 39, 28) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 8), rnode(GOUT, 19, 39, 34) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 9), rnode(GOUT, 19, 39, 29) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 10), rnode(GOUT, 19, 39, 30) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 11), rnode(GOUT, 19, 39, 31) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 12), rnode(GOUT, 19, 39, 33) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 13), rnode(GOUT, 20, 39, 48) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 14), rnode(GOUT, 20, 39, 47) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 15), rnode(GOUT, 20, 39, 42) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 16), rnode(GOUT, 20, 39, 46) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 17), rnode(GOUT, 20, 39, 41) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 18), rnode(GOUT, 20, 39, 45) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 19), rnode(GOUT, 20, 39, 40) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 20), rnode(GOUT, 20, 39, 44) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 21), rnode(GOUT, 20, 39, 39) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 22), rnode(GOUT, 20, 39, 43) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 23), rnode(GOUT, 20, 39, 38) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 24), rnode(GOUT, 20, 39, 27) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 25), rnode(GOUT, 20, 39, 28) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 26), rnode(GOUT, 20, 39, 34) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 27), rnode(GOUT, 20, 39, 29) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 28), rnode(GOUT, 20, 39, 30) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 29), rnode(GOUT, 20, 39, 31) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 30), rnode(GOUT, 20, 39, 33) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 31), rnode(GOUT, 20, 39, 32) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 32), rnode(GOUT, 20, 39, 37) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 33), rnode(GOUT, 20, 39, 35) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 34), rnode(GOUT, 20, 39, 36) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 35), rnode(GOUT, 20, 39, 26) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 36), rnode(GOUT, 21, 39, 0) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 37), rnode(GOUT, 21, 39, 10) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 38), rnode(GOUT, 21, 39, 9) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 39), rnode(GOUT, 21, 39, 11) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 40), rnode(GOUT, 21, 39, 6) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 2, 41), rnode(GOUT, 21, 39, 7) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 0), rnode(GOUT, 22, 39, 13) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 1), rnode(GOUT, 22, 39, 18) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 2), rnode(GOUT, 22, 39, 14) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 3), rnode(GOUT, 22, 39, 19) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 4), rnode(GOUT, 22, 39, 15) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 5), rnode(GOUT, 22, 39, 20) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 6), rnode(GOUT, 22, 39, 16) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 7), rnode(GOUT, 22, 39, 21) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 8), rnode(GOUT, 22, 39, 22) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 9), rnode(GOUT, 22, 39, 23) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 10), rnode(GOUT, 22, 39, 24) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 11), rnode(GOUT, 22, 39, 25) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 12), rnode(GOUT, 22, 39, 50) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 13), rnode(GOUT, 22, 39, 49) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 14), rnode(GOUT, 22, 39, 48) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 15), rnode(GOUT, 22, 39, 47) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 16), rnode(GOUT, 22, 39, 42) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 17), rnode(GOUT, 22, 39, 46) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 18), rnode(GOUT, 22, 39, 41) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 19), rnode(GOUT, 22, 39, 45) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 20), rnode(GOUT, 22, 39, 40) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 21), rnode(GOUT, 22, 39, 44) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 22), rnode(GOUT, 22, 39, 39) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 23), rnode(GOUT, 22, 39, 43) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 24), rnode(GOUT, 24, 39, 21) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 25), rnode(GOUT, 24, 39, 22) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 26), rnode(GOUT, 24, 39, 23) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 27), rnode(GOUT, 24, 39, 24) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 28), rnode(GOUT, 24, 39, 25) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 29), rnode(GOUT, 24, 39, 50) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 30), rnode(GOUT, 24, 39, 49) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 31), rnode(GOUT, 24, 39, 48) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 32), rnode(GOUT, 24, 39, 47) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 33), rnode(GOUT, 24, 39, 42) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 34), rnode(GOUT, 24, 39, 46) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 35), rnode(GOUT, 24, 39, 41) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 36), rnode(GOUT, 24, 39, 45) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 37), rnode(GOUT, 24, 39, 40) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 38), rnode(GOUT, 24, 39, 44) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 39), rnode(GOUT, 24, 39, 39) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 40), rnode(GOUT, 26, 39, 25) },
  { pnode(HMC, 15, 39, IAVSTCMDDATA, 3, 41), rnode(GOUT, 26, 39, 24) },
  { pnode(HMC, 15, 39, IAVSTCMDRESETN, 0, -1), rnode(GOUT, 18, 39, 20) },
  { pnode(HMC, 15, 39, IAVSTCMDRESETN, 1, -1), rnode(GOUT, 19, 39, 47) },
  { pnode(HMC, 15, 39, IAVSTCMDRESETN, 2, -1), rnode(GOUT, 22, 39, 4) },
  { pnode(HMC, 15, 39, IAVSTCMDRESETN, 3, -1), rnode(GOUT, 26, 39, 18) },
  { pnode(HMC, 15, 39, IAVSTRDCLK, 0, -1), rnode(DCMUX, 24, 39, 1) },
  { pnode(HMC, 15, 39, IAVSTRDCLK, 1, -1), rnode(DCMUX, 30, 39, 8) },
  { pnode(HMC, 15, 39, IAVSTRDCLK, 2, -1), rnode(DCMUX, 30, 39, 10) },
  { pnode(HMC, 15, 39, IAVSTRDCLK, 3, -1), rnode(DCMUX, 36, 39, 0) },
  { pnode(HMC, 15, 39, IAVSTRDREADY, 0, -1), rnode(GOUT, 22, 39, 1) },
  { pnode(HMC, 15, 39, IAVSTRDREADY, 1, -1), rnode(GOUT, 26, 39, 37) },
  { pnode(HMC, 15, 39, IAVSTRDREADY, 2, -1), rnode(GOUT, 30, 39, 50) },
  { pnode(HMC, 15, 39, IAVSTRDREADY, 3, -1), rnode(GOUT, 38, 39, 18) },
  { pnode(HMC, 15, 39, IAVSTRDRESETN, 0, -1), rnode(GOUT, 22, 39, 12) },
  { pnode(HMC, 15, 39, IAVSTRDRESETN, 1, -1), rnode(GOUT, 26, 39, 35) },
  { pnode(HMC, 15, 39, IAVSTRDRESETN, 2, -1), rnode(GOUT, 30, 39, 49) },
  { pnode(HMC, 15, 39, IAVSTRDRESETN, 3, -1), rnode(GOUT, 38, 39, 14) },
  { pnode(HMC, 15, 39, IAVSTWRACKREADY, 0, -1), rnode(GOUT, 18, 39, 16) },
  { pnode(HMC, 15, 39, IAVSTWRACKREADY, 1, -1), rnode(GOUT, 19, 39, 42) },
  { pnode(HMC, 15, 39, IAVSTWRACKREADY, 2, -1), rnode(GOUT, 22, 39, 3) },
  { pnode(HMC, 15, 39, IAVSTWRACKREADY, 3, -1), rnode(GOUT, 26, 39, 13) },
  { pnode(HMC, 15, 39, IAVSTWRCLK, -1, 0), rnode(DCMUX, 36, 39, 2) },
  { pnode(HMC, 15, 39, IAVSTWRCLK, -1, 1), rnode(DCMUX, 47, 39, 13) },
  { pnode(HMC, 15, 39, IAVSTWRCLK, -1, 2), rnode(DCMUX, 47, 39, 11) },
  { pnode(HMC, 15, 39, IAVSTWRCLK, -1, 3), rnode(DCMUX, 47, 39, 15) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 0), rnode(GOUT, 24, 39, 38) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 1), rnode(GOUT, 24, 39, 27) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 2), rnode(GOUT, 24, 39, 28) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 3), rnode(GOUT, 24, 39, 34) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 4), rnode(GOUT, 24, 39, 29) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 5), rnode(GOUT, 24, 39, 30) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 6), rnode(GOUT, 24, 39, 31) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 7), rnode(GOUT, 24, 39, 33) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 8), rnode(GOUT, 24, 39, 32) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 9), rnode(GOUT, 24, 39, 37) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 10), rnode(GOUT, 24, 39, 35) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 11), rnode(GOUT, 24, 39, 36) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 12), rnode(GOUT, 25, 39, 0) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 13), rnode(GOUT, 25, 39, 10) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 14), rnode(GOUT, 25, 39, 9) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 15), rnode(GOUT, 25, 39, 11) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 16), rnode(GOUT, 25, 39, 6) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 17), rnode(GOUT, 25, 39, 7) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 18), rnode(GOUT, 25, 39, 33) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 19), rnode(GOUT, 25, 39, 32) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 20), rnode(GOUT, 25, 39, 37) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 21), rnode(GOUT, 25, 39, 35) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 22), rnode(GOUT, 25, 39, 36) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 23), rnode(GOUT, 25, 39, 26) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 24), rnode(GOUT, 26, 39, 0) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 25), rnode(GOUT, 26, 39, 10) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 26), rnode(GOUT, 26, 39, 9) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 27), rnode(GOUT, 26, 39, 11) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 28), rnode(GOUT, 26, 39, 6) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 29), rnode(GOUT, 26, 39, 7) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 30), rnode(GOUT, 26, 39, 5) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 31), rnode(GOUT, 26, 39, 4) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 32), rnode(GOUT, 26, 39, 3) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 33), rnode(GOUT, 26, 39, 8) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 34), rnode(GOUT, 26, 39, 2) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 35), rnode(GOUT, 26, 39, 40) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 36), rnode(GOUT, 26, 39, 44) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 37), rnode(GOUT, 26, 39, 39) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 38), rnode(GOUT, 26, 39, 43) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 39), rnode(GOUT, 26, 39, 38) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 40), rnode(GOUT, 26, 39, 27) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 41), rnode(GOUT, 26, 39, 28) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 42), rnode(GOUT, 26, 39, 34) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 43), rnode(GOUT, 26, 39, 29) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 44), rnode(GOUT, 26, 39, 30) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 45), rnode(GOUT, 26, 39, 26) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 46), rnode(GOUT, 27, 39, 0) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 47), rnode(GOUT, 27, 39, 10) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 48), rnode(GOUT, 27, 39, 9) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 49), rnode(GOUT, 27, 39, 11) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 50), rnode(GOUT, 27, 39, 6) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 51), rnode(GOUT, 27, 39, 7) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 52), rnode(GOUT, 27, 39, 33) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 53), rnode(GOUT, 27, 39, 32) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 54), rnode(GOUT, 27, 39, 37) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 55), rnode(GOUT, 27, 39, 35) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 56), rnode(GOUT, 27, 39, 36) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 57), rnode(GOUT, 27, 39, 26) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 58), rnode(GOUT, 28, 39, 0) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 59), rnode(GOUT, 28, 39, 10) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 60), rnode(GOUT, 28, 39, 9) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 61), rnode(GOUT, 28, 39, 11) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 62), rnode(GOUT, 28, 39, 6) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 63), rnode(GOUT, 28, 39, 7) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 80), rnode(GOUT, 28, 39, 5) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 81), rnode(GOUT, 28, 39, 4) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 82), rnode(GOUT, 28, 39, 3) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 83), rnode(GOUT, 28, 39, 8) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 84), rnode(GOUT, 28, 39, 2) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 85), rnode(GOUT, 28, 39, 1) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 86), rnode(GOUT, 28, 39, 12) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 0, 87), rnode(GOUT, 28, 39, 17) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 0), rnode(GOUT, 28, 39, 22) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 1), rnode(GOUT, 28, 39, 23) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 2), rnode(GOUT, 28, 39, 24) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 3), rnode(GOUT, 28, 39, 25) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 4), rnode(GOUT, 28, 39, 50) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 5), rnode(GOUT, 28, 39, 49) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 6), rnode(GOUT, 28, 39, 48) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 7), rnode(GOUT, 28, 39, 42) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 8), rnode(GOUT, 28, 39, 46) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 9), rnode(GOUT, 28, 39, 41) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 10), rnode(GOUT, 28, 39, 45) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 11), rnode(GOUT, 28, 39, 40) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 12), rnode(GOUT, 28, 39, 44) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 13), rnode(GOUT, 28, 39, 39) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 14), rnode(GOUT, 28, 39, 43) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 15), rnode(GOUT, 28, 39, 28) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 16), rnode(GOUT, 28, 39, 30) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 17), rnode(GOUT, 28, 39, 31) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 18), rnode(GOUT, 28, 39, 35) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 19), rnode(GOUT, 28, 39, 36) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 20), rnode(GOUT, 29, 39, 9) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 21), rnode(GOUT, 29, 39, 6) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 22), rnode(GOUT, 29, 39, 7) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 23), rnode(GOUT, 29, 39, 33) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 24), rnode(GOUT, 29, 39, 32) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 25), rnode(GOUT, 29, 39, 35) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 26), rnode(GOUT, 29, 39, 36) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 27), rnode(GOUT, 29, 39, 26) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 28), rnode(GOUT, 30, 39, 0) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 29), rnode(GOUT, 30, 39, 10) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 30), rnode(GOUT, 30, 39, 9) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 31), rnode(GOUT, 30, 39, 11) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 32), rnode(GOUT, 30, 39, 6) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 33), rnode(GOUT, 30, 39, 7) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 34), rnode(GOUT, 30, 39, 5) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 35), rnode(GOUT, 30, 39, 4) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 36), rnode(GOUT, 30, 39, 3) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 37), rnode(GOUT, 30, 39, 8) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 38), rnode(GOUT, 30, 39, 2) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 39), rnode(GOUT, 30, 39, 1) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 40), rnode(GOUT, 30, 39, 12) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 41), rnode(GOUT, 30, 39, 17) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 42), rnode(GOUT, 30, 39, 13) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 43), rnode(GOUT, 30, 39, 18) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 44), rnode(GOUT, 30, 39, 20) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 45), rnode(GOUT, 30, 39, 16) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 46), rnode(GOUT, 30, 39, 38) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 47), rnode(GOUT, 30, 39, 27) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 48), rnode(GOUT, 30, 39, 28) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 49), rnode(GOUT, 30, 39, 30) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 50), rnode(GOUT, 30, 39, 31) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 51), rnode(GOUT, 30, 39, 33) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 52), rnode(GOUT, 30, 39, 32) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 53), rnode(GOUT, 30, 39, 37) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 54), rnode(GOUT, 30, 39, 35) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 55), rnode(GOUT, 30, 39, 36) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 56), rnode(GOUT, 30, 39, 26) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 57), rnode(GOUT, 31, 39, 0) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 58), rnode(GOUT, 31, 39, 10) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 59), rnode(GOUT, 31, 39, 9) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 60), rnode(GOUT, 31, 39, 11) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 61), rnode(GOUT, 31, 39, 6) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 62), rnode(GOUT, 31, 39, 7) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 63), rnode(GOUT, 31, 39, 33) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 80), rnode(GOUT, 31, 39, 32) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 81), rnode(GOUT, 31, 39, 37) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 82), rnode(GOUT, 31, 39, 35) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 83), rnode(GOUT, 31, 39, 36) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 84), rnode(GOUT, 32, 39, 0) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 85), rnode(GOUT, 32, 39, 10) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 86), rnode(GOUT, 32, 39, 6) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 1, 87), rnode(GOUT, 32, 39, 4) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 0), rnode(GOUT, 32, 39, 8) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 1), rnode(GOUT, 32, 39, 2) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 2), rnode(GOUT, 32, 39, 1) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 3), rnode(GOUT, 32, 39, 12) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 4), rnode(GOUT, 32, 39, 17) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 5), rnode(GOUT, 32, 39, 13) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 6), rnode(GOUT, 32, 39, 18) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 7), rnode(GOUT, 32, 39, 14) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 8), rnode(GOUT, 32, 39, 19) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 9), rnode(GOUT, 32, 39, 15) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 10), rnode(GOUT, 33, 39, 32) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 11), rnode(GOUT, 33, 39, 37) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 12), rnode(GOUT, 33, 39, 35) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 13), rnode(GOUT, 33, 39, 36) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 14), rnode(GOUT, 33, 39, 26) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 15), rnode(GOUT, 34, 39, 0) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 16), rnode(GOUT, 34, 39, 10) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 17), rnode(GOUT, 34, 39, 9) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 18), rnode(GOUT, 34, 39, 11) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 19), rnode(GOUT, 34, 39, 6) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 20), rnode(GOUT, 34, 39, 7) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 21), rnode(GOUT, 34, 39, 5) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 22), rnode(GOUT, 34, 39, 4) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 23), rnode(GOUT, 34, 39, 3) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 24), rnode(GOUT, 34, 39, 8) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 25), rnode(GOUT, 34, 39, 17) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 26), rnode(GOUT, 34, 39, 13) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 27), rnode(GOUT, 34, 39, 18) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 28), rnode(GOUT, 34, 39, 14) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 29), rnode(GOUT, 34, 39, 19) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 30), rnode(GOUT, 34, 39, 15) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 31), rnode(GOUT, 34, 39, 20) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 32), rnode(GOUT, 34, 39, 16) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 33), rnode(GOUT, 34, 39, 21) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 34), rnode(GOUT, 34, 39, 22) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 35), rnode(GOUT, 34, 39, 23) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 36), rnode(GOUT, 34, 39, 24) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 37), rnode(GOUT, 34, 39, 25) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 38), rnode(GOUT, 34, 39, 50) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 39), rnode(GOUT, 34, 39, 49) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 40), rnode(GOUT, 34, 39, 48) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 41), rnode(GOUT, 34, 39, 47) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 42), rnode(GOUT, 34, 39, 42) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 43), rnode(GOUT, 34, 39, 46) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 44), rnode(GOUT, 34, 39, 41) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 45), rnode(GOUT, 34, 39, 44) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 46), rnode(GOUT, 34, 39, 39) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 47), rnode(GOUT, 34, 39, 43) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 48), rnode(GOUT, 34, 39, 38) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 49), rnode(GOUT, 34, 39, 27) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 50), rnode(GOUT, 34, 39, 28) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 51), rnode(GOUT, 34, 39, 34) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 52), rnode(GOUT, 34, 39, 29) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 53), rnode(GOUT, 34, 39, 30) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 54), rnode(GOUT, 34, 39, 31) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 55), rnode(GOUT, 34, 39, 33) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 56), rnode(GOUT, 34, 39, 36) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 57), rnode(GOUT, 34, 39, 26) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 58), rnode(GOUT, 35, 39, 0) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 59), rnode(GOUT, 35, 39, 10) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 60), rnode(GOUT, 35, 39, 9) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 61), rnode(GOUT, 35, 39, 11) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 62), rnode(GOUT, 35, 39, 6) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 63), rnode(GOUT, 35, 39, 33) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 80), rnode(GOUT, 35, 39, 35) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 81), rnode(GOUT, 35, 39, 36) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 82), rnode(GOUT, 35, 39, 26) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 83), rnode(GOUT, 36, 39, 9) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 84), rnode(GOUT, 36, 39, 7) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 85), rnode(GOUT, 36, 39, 5) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 86), rnode(GOUT, 36, 39, 2) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 2, 87), rnode(GOUT, 36, 39, 1) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 0), rnode(GOUT, 36, 39, 18) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 1), rnode(GOUT, 36, 39, 19) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 2), rnode(GOUT, 36, 39, 15) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 3), rnode(GOUT, 36, 39, 20) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 4), rnode(GOUT, 36, 39, 16) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 5), rnode(GOUT, 36, 39, 22) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 6), rnode(GOUT, 36, 39, 23) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 7), rnode(GOUT, 36, 39, 24) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 8), rnode(GOUT, 36, 39, 25) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 9), rnode(GOUT, 36, 39, 50) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 10), rnode(GOUT, 36, 39, 49) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 11), rnode(GOUT, 36, 39, 48) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 12), rnode(GOUT, 36, 39, 47) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 13), rnode(GOUT, 36, 39, 42) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 14), rnode(GOUT, 36, 39, 46) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 15), rnode(GOUT, 36, 39, 41) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 16), rnode(GOUT, 36, 39, 45) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 17), rnode(GOUT, 36, 39, 40) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 18), rnode(GOUT, 36, 39, 44) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 19), rnode(GOUT, 36, 39, 39) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 20), rnode(GOUT, 36, 39, 43) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 21), rnode(GOUT, 36, 39, 38) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 22), rnode(GOUT, 36, 39, 27) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 23), rnode(GOUT, 36, 39, 28) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 24), rnode(GOUT, 36, 39, 31) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 25), rnode(GOUT, 36, 39, 33) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 26), rnode(GOUT, 36, 39, 32) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 27), rnode(GOUT, 36, 39, 37) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 28), rnode(GOUT, 36, 39, 35) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 29), rnode(GOUT, 36, 39, 36) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 30), rnode(GOUT, 37, 39, 11) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 31), rnode(GOUT, 37, 39, 6) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 32), rnode(GOUT, 37, 39, 7) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 33), rnode(GOUT, 37, 39, 33) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 34), rnode(GOUT, 37, 39, 32) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 35), rnode(GOUT, 37, 39, 37) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 36), rnode(GOUT, 37, 39, 35) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 37), rnode(GOUT, 37, 39, 36) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 38), rnode(GOUT, 37, 39, 26) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 39), rnode(GOUT, 38, 39, 0) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 40), rnode(GOUT, 38, 39, 10) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 41), rnode(GOUT, 38, 39, 11) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 42), rnode(GOUT, 38, 39, 6) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 43), rnode(GOUT, 38, 39, 7) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 44), rnode(GOUT, 38, 39, 5) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 45), rnode(GOUT, 38, 39, 15) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 46), rnode(GOUT, 38, 39, 20) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 47), rnode(GOUT, 38, 39, 16) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 48), rnode(GOUT, 38, 39, 21) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 49), rnode(GOUT, 38, 39, 22) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 50), rnode(GOUT, 38, 39, 23) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 51), rnode(GOUT, 38, 39, 24) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 52), rnode(GOUT, 38, 39, 25) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 53), rnode(GOUT, 38, 39, 50) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 54), rnode(GOUT, 38, 39, 49) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 55), rnode(GOUT, 38, 39, 48) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 56), rnode(GOUT, 38, 39, 47) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 57), rnode(GOUT, 38, 39, 42) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 58), rnode(GOUT, 38, 39, 41) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 59), rnode(GOUT, 38, 39, 40) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 60), rnode(GOUT, 38, 39, 44) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 61), rnode(GOUT, 38, 39, 38) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 62), rnode(GOUT, 38, 39, 34) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 63), rnode(GOUT, 38, 39, 29) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 80), rnode(GOUT, 38, 39, 30) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 81), rnode(GOUT, 38, 39, 31) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 82), rnode(GOUT, 38, 39, 33) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 83), rnode(GOUT, 38, 39, 32) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 84), rnode(GOUT, 38, 39, 37) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 85), rnode(GOUT, 38, 39, 35) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 86), rnode(GOUT, 38, 39, 36) },
  { pnode(HMC, 15, 39, IAVSTWRDATA, 3, 87), rnode(GOUT, 38, 39, 26) },
  { pnode(HMC, 15, 39, IAVSTWRRESETN, 0, -1), rnode(GOUT, 30, 39, 48) },
  { pnode(HMC, 15, 39, IAVSTWRRESETN, 1, -1), rnode(GOUT, 38, 39, 19) },
  { pnode(HMC, 15, 39, IAVSTWRRESETN, 2, -1), rnode(GOUT, 34, 39, 40) },
  { pnode(HMC, 15, 39, IAVSTWRRESETN, 3, -1), rnode(GOUT, 38, 39, 2) },
  { pnode(HMC, 15, 39, IOINTADDRACLR, -1, 0), rnode(GOUT, 16, 39, 21) },
  { pnode(HMC, 15, 39, IOINTADDRACLR, -1, 1), rnode(GOUT, 16, 39, 12) },
  { pnode(HMC, 15, 39, IOINTADDRACLR, -1, 2), rnode(GOUT, 14, 39, 21) },
  { pnode(HMC, 15, 39, IOINTADDRACLR, -1, 3), rnode(GOUT, 14, 39, 12) },
  { pnode(HMC, 15, 39, IOINTADDRACLR, -1, 4), rnode(GOUT, 14, 39, 28) },
  { pnode(HMC, 15, 39, IOINTADDRACLR, -1, 5), rnode(GOUT, 14, 39, 42) },
  { pnode(HMC, 15, 39, IOINTADDRACLR, -1, 6), rnode(GOUT, 12, 39, 21) },
  { pnode(HMC, 15, 39, IOINTADDRACLR, -1, 7), rnode(GOUT, 12, 39, 12) },
  { pnode(HMC, 15, 39, IOINTADDRACLR, -1, 8), rnode(GOUT, 6, 39, 28) },
  { pnode(HMC, 15, 39, IOINTADDRACLR, -1, 9), rnode(GOUT, 6, 39, 42) },
  { pnode(HMC, 15, 39, IOINTADDRACLR, -1, 10), rnode(GOUT, 6, 39, 21) },
  { pnode(HMC, 15, 39, IOINTADDRACLR, -1, 11), rnode(GOUT, 6, 39, 12) },
  { pnode(HMC, 15, 39, IOINTADDRACLR, -1, 12), rnode(GOUT, 4, 39, 21) },
  { pnode(HMC, 15, 39, IOINTADDRACLR, -1, 13), rnode(GOUT, 4, 39, 12) },
  { pnode(HMC, 15, 39, IOINTADDRACLR, -1, 14), rnode(GOUT, 3, 39, 28) },
  { pnode(HMC, 15, 39, IOINTADDRACLR, -1, 15), rnode(GOUT, 3, 39, 42) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 0), rnode(GOUT, 16, 39, 14) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 1), rnode(GOUT, 16, 39, 22) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 2), rnode(GOUT, 16, 39, 15) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 3), rnode(GOUT, 16, 39, 23) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 4), rnode(GOUT, 16, 39, 3) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 5), rnode(GOUT, 16, 39, 17) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 6), rnode(GOUT, 16, 39, 8) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 7), rnode(GOUT, 16, 39, 18) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 8), rnode(GOUT, 14, 39, 14) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 9), rnode(GOUT, 14, 39, 22) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 10), rnode(GOUT, 14, 39, 15) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 11), rnode(GOUT, 14, 39, 23) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 12), rnode(GOUT, 14, 39, 3) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 13), rnode(GOUT, 14, 39, 17) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 14), rnode(GOUT, 14, 39, 8) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 15), rnode(GOUT, 14, 39, 18) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 16), rnode(GOUT, 14, 39, 44) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 17), rnode(GOUT, 14, 39, 34) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 18), rnode(GOUT, 14, 39, 43) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 19), rnode(GOUT, 14, 39, 29) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 20), rnode(GOUT, 14, 39, 49) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 21), rnode(GOUT, 14, 39, 41) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 22), rnode(GOUT, 14, 39, 48) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 23), rnode(GOUT, 14, 39, 40) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 24), rnode(GOUT, 12, 39, 14) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 25), rnode(GOUT, 12, 39, 22) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 26), rnode(GOUT, 12, 39, 15) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 27), rnode(GOUT, 12, 39, 23) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 28), rnode(GOUT, 12, 39, 3) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 29), rnode(GOUT, 12, 39, 17) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 30), rnode(GOUT, 12, 39, 8) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 31), rnode(GOUT, 12, 39, 18) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 32), rnode(GOUT, 6, 39, 44) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 33), rnode(GOUT, 6, 39, 34) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 34), rnode(GOUT, 6, 39, 43) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 35), rnode(GOUT, 6, 39, 29) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 36), rnode(GOUT, 6, 39, 49) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 37), rnode(GOUT, 6, 39, 41) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 38), rnode(GOUT, 6, 39, 48) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 39), rnode(GOUT, 6, 39, 40) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 40), rnode(GOUT, 6, 39, 14) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 41), rnode(GOUT, 6, 39, 22) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 42), rnode(GOUT, 6, 39, 15) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 43), rnode(GOUT, 6, 39, 23) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 44), rnode(GOUT, 6, 39, 3) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 45), rnode(GOUT, 6, 39, 17) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 46), rnode(GOUT, 6, 39, 8) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 47), rnode(GOUT, 6, 39, 18) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 48), rnode(GOUT, 4, 39, 14) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 49), rnode(GOUT, 4, 39, 22) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 50), rnode(GOUT, 4, 39, 15) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 51), rnode(GOUT, 4, 39, 23) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 52), rnode(GOUT, 4, 39, 3) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 53), rnode(GOUT, 4, 39, 17) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 54), rnode(GOUT, 4, 39, 8) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 55), rnode(GOUT, 4, 39, 18) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 56), rnode(GOUT, 3, 39, 44) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 57), rnode(GOUT, 3, 39, 34) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 58), rnode(GOUT, 3, 39, 43) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 59), rnode(GOUT, 3, 39, 29) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 60), rnode(GOUT, 3, 39, 49) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 61), rnode(GOUT, 3, 39, 41) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 62), rnode(GOUT, 3, 39, 48) },
  { pnode(HMC, 15, 39, IOINTADDRDOUT, -1, 63), rnode(GOUT, 3, 39, 40) },
  { pnode(HMC, 15, 39, IOINTBAACLR, -1, 0), rnode(GOUT, 10, 39, 21) },
  { pnode(HMC, 15, 39, IOINTBAACLR, -1, 1), rnode(GOUT, 10, 39, 28) },
  { pnode(HMC, 15, 39, IOINTBAACLR, -1, 2), rnode(GOUT, 10, 39, 42) },
  { pnode(HMC, 15, 39, IOINTBADOUT, -1, 0), rnode(GOUT, 10, 39, 14) },
  { pnode(HMC, 15, 39, IOINTBADOUT, -1, 1), rnode(GOUT, 10, 39, 22) },
  { pnode(HMC, 15, 39, IOINTBADOUT, -1, 2), rnode(GOUT, 10, 39, 15) },
  { pnode(HMC, 15, 39, IOINTBADOUT, -1, 3), rnode(GOUT, 10, 39, 23) },
  { pnode(HMC, 15, 39, IOINTBADOUT, -1, 4), rnode(GOUT, 10, 39, 44) },
  { pnode(HMC, 15, 39, IOINTBADOUT, -1, 5), rnode(GOUT, 10, 39, 34) },
  { pnode(HMC, 15, 39, IOINTBADOUT, -1, 6), rnode(GOUT, 10, 39, 43) },
  { pnode(HMC, 15, 39, IOINTBADOUT, -1, 7), rnode(GOUT, 10, 39, 29) },
  { pnode(HMC, 15, 39, IOINTBADOUT, -1, 8), rnode(GOUT, 10, 39, 49) },
  { pnode(HMC, 15, 39, IOINTBADOUT, -1, 9), rnode(GOUT, 10, 39, 41) },
  { pnode(HMC, 15, 39, IOINTBADOUT, -1, 10), rnode(GOUT, 10, 39, 48) },
  { pnode(HMC, 15, 39, IOINTBADOUT, -1, 11), rnode(GOUT, 10, 39, 40) },
  { pnode(HMC, 15, 39, IOINTCASNACLR, -1, -1), rnode(GOUT, 8, 39, 21) },
  { pnode(HMC, 15, 39, IOINTCASNDOUT, -1, 0), rnode(GOUT, 8, 39, 14) },
  { pnode(HMC, 15, 39, IOINTCASNDOUT, -1, 1), rnode(GOUT, 8, 39, 22) },
  { pnode(HMC, 15, 39, IOINTCASNDOUT, -1, 2), rnode(GOUT, 8, 39, 15) },
  { pnode(HMC, 15, 39, IOINTCASNDOUT, -1, 3), rnode(GOUT, 8, 39, 23) },
  { pnode(HMC, 15, 39, IOINTCKDOUT, -1, 0), rnode(GOUT, 12, 39, 44) },
  { pnode(HMC, 15, 39, IOINTCKDOUT, -1, 1), rnode(GOUT, 12, 39, 34) },
  { pnode(HMC, 15, 39, IOINTCKDOUT, -1, 2), rnode(GOUT, 12, 39, 43) },
  { pnode(HMC, 15, 39, IOINTCKDOUT, -1, 3), rnode(GOUT, 12, 39, 29) },
  { pnode(HMC, 15, 39, IOINTCKEACLR, -1, 0), rnode(GOUT, 37, 39, 12) },
  { pnode(HMC, 15, 39, IOINTCKEACLR, -1, 1), rnode(GOUT, 35, 39, 21) },
  { pnode(HMC, 15, 39, IOINTCKEDOUT, -1, 0), rnode(GOUT, 37, 39, 3) },
  { pnode(HMC, 15, 39, IOINTCKEDOUT, -1, 1), rnode(GOUT, 37, 39, 17) },
  { pnode(HMC, 15, 39, IOINTCKEDOUT, -1, 2), rnode(GOUT, 37, 39, 8) },
  { pnode(HMC, 15, 39, IOINTCKEDOUT, -1, 3), rnode(GOUT, 37, 39, 18) },
  { pnode(HMC, 15, 39, IOINTCKEDOUT, -1, 4), rnode(GOUT, 35, 39, 14) },
  { pnode(HMC, 15, 39, IOINTCKEDOUT, -1, 5), rnode(GOUT, 35, 39, 22) },
  { pnode(HMC, 15, 39, IOINTCKEDOUT, -1, 6), rnode(GOUT, 35, 39, 15) },
  { pnode(HMC, 15, 39, IOINTCKEDOUT, -1, 7), rnode(GOUT, 35, 39, 23) },
  { pnode(HMC, 15, 39, IOINTCKNDOUT, -1, 0), rnode(GOUT, 12, 39, 49) },
  { pnode(HMC, 15, 39, IOINTCKNDOUT, -1, 1), rnode(GOUT, 12, 39, 41) },
  { pnode(HMC, 15, 39, IOINTCKNDOUT, -1, 2), rnode(GOUT, 12, 39, 48) },
  { pnode(HMC, 15, 39, IOINTCKNDOUT, -1, 3), rnode(GOUT, 12, 39, 40) },
  { pnode(HMC, 15, 39, IOINTCSNACLR, -1, 0), rnode(GOUT, 4, 39, 28) },
  { pnode(HMC, 15, 39, IOINTCSNACLR, -1, 1), rnode(GOUT, 4, 39, 42) },
  { pnode(HMC, 15, 39, IOINTCSNDOUT, -1, 0), rnode(GOUT, 4, 39, 44) },
  { pnode(HMC, 15, 39, IOINTCSNDOUT, -1, 1), rnode(GOUT, 4, 39, 34) },
  { pnode(HMC, 15, 39, IOINTCSNDOUT, -1, 2), rnode(GOUT, 4, 39, 43) },
  { pnode(HMC, 15, 39, IOINTCSNDOUT, -1, 3), rnode(GOUT, 4, 39, 29) },
  { pnode(HMC, 15, 39, IOINTCSNDOUT, -1, 4), rnode(GOUT, 4, 39, 49) },
  { pnode(HMC, 15, 39, IOINTCSNDOUT, -1, 5), rnode(GOUT, 4, 39, 41) },
  { pnode(HMC, 15, 39, IOINTCSNDOUT, -1, 6), rnode(GOUT, 4, 39, 48) },
  { pnode(HMC, 15, 39, IOINTCSNDOUT, -1, 7), rnode(GOUT, 4, 39, 40) },
  { pnode(HMC, 15, 39, IOINTDMDOUT, -1, 0), rnode(GOUT, 31, 39, 14) },
  { pnode(HMC, 15, 39, IOINTDMDOUT, -1, 1), rnode(GOUT, 31, 39, 22) },
  { pnode(HMC, 15, 39, IOINTDMDOUT, -1, 2), rnode(GOUT, 31, 39, 15) },
  { pnode(HMC, 15, 39, IOINTDMDOUT, -1, 3), rnode(GOUT, 31, 39, 23) },
  { pnode(HMC, 15, 39, IOINTDMDOUT, -1, 4), rnode(GOUT, 39, 39, 14) },
  { pnode(HMC, 15, 39, IOINTDMDOUT, -1, 5), rnode(GOUT, 39, 39, 22) },
  { pnode(HMC, 15, 39, IOINTDMDOUT, -1, 6), rnode(GOUT, 39, 39, 15) },
  { pnode(HMC, 15, 39, IOINTDMDOUT, -1, 7), rnode(GOUT, 39, 39, 23) },
  { pnode(HMC, 15, 39, IOINTDMDOUT, -1, 8), rnode(GOUT, 45, 39, 14) },
  { pnode(HMC, 15, 39, IOINTDMDOUT, -1, 9), rnode(GOUT, 45, 39, 22) },
  { pnode(HMC, 15, 39, IOINTDMDOUT, -1, 10), rnode(GOUT, 45, 39, 15) },
  { pnode(HMC, 15, 39, IOINTDMDOUT, -1, 11), rnode(GOUT, 45, 39, 23) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 0), rnode(GOUT, 25, 39, 49) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 1), rnode(GOUT, 25, 39, 41) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 2), rnode(GOUT, 25, 39, 48) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 3), rnode(GOUT, 25, 39, 40) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 4), rnode(GOUT, 25, 39, 44) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 5), rnode(GOUT, 25, 39, 34) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 6), rnode(GOUT, 25, 39, 43) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 7), rnode(GOUT, 25, 39, 29) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 8), rnode(GOUT, 25, 39, 14) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 9), rnode(GOUT, 25, 39, 22) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 10), rnode(GOUT, 25, 39, 15) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 11), rnode(GOUT, 25, 39, 23) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 12), rnode(GOUT, 27, 39, 3) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 13), rnode(GOUT, 27, 39, 17) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 14), rnode(GOUT, 27, 39, 8) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 15), rnode(GOUT, 27, 39, 18) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 16), rnode(GOUT, 29, 39, 49) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 17), rnode(GOUT, 29, 39, 41) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 18), rnode(GOUT, 29, 39, 48) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 19), rnode(GOUT, 29, 39, 40) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 20), rnode(GOUT, 29, 39, 44) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 21), rnode(GOUT, 29, 39, 34) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 22), rnode(GOUT, 29, 39, 43) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 23), rnode(GOUT, 29, 39, 29) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 24), rnode(GOUT, 29, 39, 14) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 25), rnode(GOUT, 29, 39, 22) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 26), rnode(GOUT, 29, 39, 15) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 27), rnode(GOUT, 29, 39, 23) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 28), rnode(GOUT, 31, 39, 3) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 29), rnode(GOUT, 31, 39, 17) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 30), rnode(GOUT, 31, 39, 8) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 31), rnode(GOUT, 31, 39, 18) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 36), rnode(GOUT, 33, 39, 49) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 37), rnode(GOUT, 33, 39, 41) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 38), rnode(GOUT, 33, 39, 48) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 39), rnode(GOUT, 33, 39, 40) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 40), rnode(GOUT, 33, 39, 44) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 41), rnode(GOUT, 33, 39, 34) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 42), rnode(GOUT, 33, 39, 43) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 43), rnode(GOUT, 33, 39, 29) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 44), rnode(GOUT, 33, 39, 14) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 45), rnode(GOUT, 33, 39, 22) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 46), rnode(GOUT, 33, 39, 15) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 47), rnode(GOUT, 33, 39, 23) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 48), rnode(GOUT, 35, 39, 3) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 49), rnode(GOUT, 35, 39, 17) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 50), rnode(GOUT, 35, 39, 8) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 51), rnode(GOUT, 35, 39, 18) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 52), rnode(GOUT, 37, 39, 49) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 53), rnode(GOUT, 37, 39, 41) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 54), rnode(GOUT, 37, 39, 48) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 55), rnode(GOUT, 37, 39, 40) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 56), rnode(GOUT, 37, 39, 44) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 57), rnode(GOUT, 37, 39, 34) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 58), rnode(GOUT, 37, 39, 43) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 59), rnode(GOUT, 37, 39, 29) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 60), rnode(GOUT, 37, 39, 14) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 61), rnode(GOUT, 37, 39, 22) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 62), rnode(GOUT, 37, 39, 15) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 63), rnode(GOUT, 37, 39, 23) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 64), rnode(GOUT, 39, 39, 3) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 65), rnode(GOUT, 39, 39, 17) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 66), rnode(GOUT, 39, 39, 8) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 67), rnode(GOUT, 39, 39, 18) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 72), rnode(GOUT, 41, 39, 49) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 73), rnode(GOUT, 41, 39, 41) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 74), rnode(GOUT, 41, 39, 48) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 75), rnode(GOUT, 41, 39, 40) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 76), rnode(GOUT, 41, 39, 44) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 77), rnode(GOUT, 41, 39, 34) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 78), rnode(GOUT, 41, 39, 43) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 79), rnode(GOUT, 41, 39, 29) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 80), rnode(GOUT, 41, 39, 14) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 81), rnode(GOUT, 41, 39, 22) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 82), rnode(GOUT, 41, 39, 15) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 83), rnode(GOUT, 41, 39, 23) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 84), rnode(GOUT, 42, 39, 3) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 85), rnode(GOUT, 42, 39, 17) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 86), rnode(GOUT, 42, 39, 8) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 87), rnode(GOUT, 42, 39, 18) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 88), rnode(GOUT, 43, 39, 49) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 89), rnode(GOUT, 43, 39, 41) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 90), rnode(GOUT, 43, 39, 48) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 91), rnode(GOUT, 43, 39, 40) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 92), rnode(GOUT, 43, 39, 44) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 93), rnode(GOUT, 43, 39, 34) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 94), rnode(GOUT, 43, 39, 43) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 95), rnode(GOUT, 43, 39, 29) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 96), rnode(GOUT, 43, 39, 14) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 97), rnode(GOUT, 43, 39, 22) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 98), rnode(GOUT, 43, 39, 15) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 99), rnode(GOUT, 43, 39, 23) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 100), rnode(GOUT, 45, 39, 3) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 101), rnode(GOUT, 45, 39, 17) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 102), rnode(GOUT, 45, 39, 8) },
  { pnode(HMC, 15, 39, IOINTDQDOUT, -1, 103), rnode(GOUT, 45, 39, 18) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 0), rnode(GOUT, 25, 39, 47) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 1), rnode(GOUT, 25, 39, 39) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 2), rnode(GOUT, 25, 39, 38) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 3), rnode(GOUT, 25, 39, 30) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 4), rnode(GOUT, 25, 39, 16) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 5), rnode(GOUT, 25, 39, 24) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 6), rnode(GOUT, 27, 39, 2) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 7), rnode(GOUT, 27, 39, 19) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 8), rnode(GOUT, 29, 39, 47) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 9), rnode(GOUT, 29, 39, 39) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 10), rnode(GOUT, 29, 39, 38) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 11), rnode(GOUT, 29, 39, 30) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 12), rnode(GOUT, 29, 39, 16) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 13), rnode(GOUT, 29, 39, 24) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 14), rnode(GOUT, 31, 39, 2) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 15), rnode(GOUT, 31, 39, 19) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 18), rnode(GOUT, 33, 39, 47) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 19), rnode(GOUT, 33, 39, 39) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 20), rnode(GOUT, 33, 39, 38) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 21), rnode(GOUT, 33, 39, 30) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 22), rnode(GOUT, 33, 39, 16) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 23), rnode(GOUT, 33, 39, 24) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 24), rnode(GOUT, 35, 39, 2) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 25), rnode(GOUT, 35, 39, 19) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 26), rnode(GOUT, 37, 39, 47) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 27), rnode(GOUT, 37, 39, 39) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 28), rnode(GOUT, 37, 39, 38) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 29), rnode(GOUT, 37, 39, 30) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 30), rnode(GOUT, 37, 39, 16) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 31), rnode(GOUT, 37, 39, 24) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 32), rnode(GOUT, 39, 39, 2) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 33), rnode(GOUT, 39, 39, 19) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 36), rnode(GOUT, 41, 39, 47) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 37), rnode(GOUT, 41, 39, 39) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 38), rnode(GOUT, 41, 39, 38) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 39), rnode(GOUT, 41, 39, 30) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 40), rnode(GOUT, 41, 39, 16) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 41), rnode(GOUT, 41, 39, 24) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 42), rnode(GOUT, 42, 39, 2) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 43), rnode(GOUT, 42, 39, 19) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 44), rnode(GOUT, 43, 39, 47) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 45), rnode(GOUT, 43, 39, 39) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 46), rnode(GOUT, 43, 39, 38) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 47), rnode(GOUT, 43, 39, 30) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 48), rnode(GOUT, 43, 39, 16) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 49), rnode(GOUT, 43, 39, 24) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 50), rnode(GOUT, 45, 39, 2) },
  { pnode(HMC, 15, 39, IOINTDQOE, -1, 51), rnode(GOUT, 45, 39, 19) },
  { pnode(HMC, 15, 39, IOINTDQSBDOUT, -1, 0), rnode(GOUT, 27, 39, 49) },
  { pnode(HMC, 15, 39, IOINTDQSBDOUT, -1, 1), rnode(GOUT, 27, 39, 41) },
  { pnode(HMC, 15, 39, IOINTDQSBDOUT, -1, 2), rnode(GOUT, 27, 39, 48) },
  { pnode(HMC, 15, 39, IOINTDQSBDOUT, -1, 3), rnode(GOUT, 27, 39, 40) },
  { pnode(HMC, 15, 39, IOINTDQSBDOUT, -1, 4), rnode(GOUT, 35, 39, 49) },
  { pnode(HMC, 15, 39, IOINTDQSBDOUT, -1, 5), rnode(GOUT, 35, 39, 41) },
  { pnode(HMC, 15, 39, IOINTDQSBDOUT, -1, 6), rnode(GOUT, 35, 39, 48) },
  { pnode(HMC, 15, 39, IOINTDQSBDOUT, -1, 7), rnode(GOUT, 35, 39, 40) },
  { pnode(HMC, 15, 39, IOINTDQSBDOUT, -1, 8), rnode(GOUT, 42, 39, 49) },
  { pnode(HMC, 15, 39, IOINTDQSBDOUT, -1, 9), rnode(GOUT, 42, 39, 41) },
  { pnode(HMC, 15, 39, IOINTDQSBDOUT, -1, 10), rnode(GOUT, 42, 39, 48) },
  { pnode(HMC, 15, 39, IOINTDQSBDOUT, -1, 11), rnode(GOUT, 42, 39, 40) },
  { pnode(HMC, 15, 39, IOINTDQSBOE, -1, 0), rnode(GOUT, 27, 39, 47) },
  { pnode(HMC, 15, 39, IOINTDQSBOE, -1, 1), rnode(GOUT, 27, 39, 39) },
  { pnode(HMC, 15, 39, IOINTDQSBOE, -1, 2), rnode(GOUT, 35, 39, 47) },
  { pnode(HMC, 15, 39, IOINTDQSBOE, -1, 3), rnode(GOUT, 35, 39, 39) },
  { pnode(HMC, 15, 39, IOINTDQSBOE, -1, 4), rnode(GOUT, 42, 39, 47) },
  { pnode(HMC, 15, 39, IOINTDQSBOE, -1, 5), rnode(GOUT, 42, 39, 39) },
  { pnode(HMC, 15, 39, IOINTDQSDOUT, -1, 0), rnode(GOUT, 27, 39, 44) },
  { pnode(HMC, 15, 39, IOINTDQSDOUT, -1, 1), rnode(GOUT, 27, 39, 34) },
  { pnode(HMC, 15, 39, IOINTDQSDOUT, -1, 2), rnode(GOUT, 27, 39, 43) },
  { pnode(HMC, 15, 39, IOINTDQSDOUT, -1, 3), rnode(GOUT, 27, 39, 29) },
  { pnode(HMC, 15, 39, IOINTDQSDOUT, -1, 4), rnode(GOUT, 35, 39, 44) },
  { pnode(HMC, 15, 39, IOINTDQSDOUT, -1, 5), rnode(GOUT, 35, 39, 34) },
  { pnode(HMC, 15, 39, IOINTDQSDOUT, -1, 6), rnode(GOUT, 35, 39, 43) },
  { pnode(HMC, 15, 39, IOINTDQSDOUT, -1, 7), rnode(GOUT, 35, 39, 29) },
  { pnode(HMC, 15, 39, IOINTDQSDOUT, -1, 8), rnode(GOUT, 42, 39, 44) },
  { pnode(HMC, 15, 39, IOINTDQSDOUT, -1, 9), rnode(GOUT, 42, 39, 34) },
  { pnode(HMC, 15, 39, IOINTDQSDOUT, -1, 10), rnode(GOUT, 42, 39, 43) },
  { pnode(HMC, 15, 39, IOINTDQSDOUT, -1, 11), rnode(GOUT, 42, 39, 29) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICACLRFIFOCTRL, -1, 0), rnode(GOUT, 30, 39, 15) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICACLRFIFOCTRL, -1, 1), rnode(GOUT, 36, 39, 30) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICACLRFIFOCTRL, -1, 2), rnode(GOUT, 42, 39, 33) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICACLRPSTAMBLE, -1, 0), rnode(GOUT, 30, 39, 19) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICACLRPSTAMBLE, -1, 1), rnode(GOUT, 36, 39, 29) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICACLRPSTAMBLE, -1, 2), rnode(GOUT, 42, 39, 7) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICDQSENA, -1, 0), rnode(GOUT, 32, 39, 21) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICDQSENA, -1, 1), rnode(GOUT, 32, 39, 16) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICDQSENA, -1, 2), rnode(GOUT, 39, 39, 6) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICDQSENA, -1, 3), rnode(GOUT, 39, 39, 11) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICDQSENA, -1, 4), rnode(GOUT, 43, 39, 6) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICDQSENA, -1, 5), rnode(GOUT, 43, 39, 11) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICFIFORESET, -1, 0), rnode(GOUT, 28, 39, 47) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICFIFORESET, -1, 1), rnode(GOUT, 35, 39, 7) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICFIFORESET, -1, 2), rnode(GOUT, 41, 39, 11) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICINCRDATAEN, -1, 0), rnode(GOUT, 30, 39, 34) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICINCRDATAEN, -1, 1), rnode(GOUT, 30, 39, 29) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICINCRDATAEN, -1, 2), rnode(GOUT, 38, 39, 3) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICINCRDATAEN, -1, 3), rnode(GOUT, 38, 39, 8) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICINCRDATAEN, -1, 4), rnode(GOUT, 42, 39, 37) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICINCRDATAEN, -1, 5), rnode(GOUT, 42, 39, 35) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICINCWRPTR, -1, 0), rnode(GOUT, 28, 39, 34) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICINCWRPTR, -1, 1), rnode(GOUT, 28, 39, 29) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICINCWRPTR, -1, 2), rnode(GOUT, 36, 39, 11) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICINCWRPTR, -1, 3), rnode(GOUT, 36, 39, 6) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICINCWRPTR, -1, 4), rnode(GOUT, 41, 39, 33) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICINCWRPTR, -1, 5), rnode(GOUT, 41, 39, 32) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICOCT, -1, 0), rnode(GOUT, 29, 39, 0) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICOCT, -1, 1), rnode(GOUT, 29, 39, 10) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICOCT, -1, 2), rnode(GOUT, 36, 39, 17) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICOCT, -1, 3), rnode(GOUT, 36, 39, 13) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICOCT, -1, 4), rnode(GOUT, 42, 39, 0) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICOCT, -1, 5), rnode(GOUT, 42, 39, 10) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICREADLATENCY, -1, 0), rnode(GOUT, 31, 39, 26) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICREADLATENCY, -1, 1), rnode(GOUT, 32, 39, 9) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICREADLATENCY, -1, 2), rnode(GOUT, 32, 39, 11) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICREADLATENCY, -1, 3), rnode(GOUT, 32, 39, 7) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICREADLATENCY, -1, 4), rnode(GOUT, 32, 39, 5) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICREADLATENCY, -1, 5), rnode(GOUT, 38, 39, 45) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICREADLATENCY, -1, 6), rnode(GOUT, 38, 39, 39) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICREADLATENCY, -1, 7), rnode(GOUT, 38, 39, 43) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICREADLATENCY, -1, 8), rnode(GOUT, 38, 39, 27) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICREADLATENCY, -1, 9), rnode(GOUT, 38, 39, 28) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICREADLATENCY, -1, 10), rnode(GOUT, 42, 39, 36) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICREADLATENCY, -1, 11), rnode(GOUT, 42, 39, 26) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICREADLATENCY, -1, 12), rnode(GOUT, 43, 39, 0) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICREADLATENCY, -1, 13), rnode(GOUT, 43, 39, 10) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICREADLATENCY, -1, 14), rnode(GOUT, 43, 39, 9) },
  { pnode(HMC, 15, 39, IOINTDQSOE, -1, 0), rnode(GOUT, 27, 39, 38) },
  { pnode(HMC, 15, 39, IOINTDQSOE, -1, 1), rnode(GOUT, 27, 39, 30) },
  { pnode(HMC, 15, 39, IOINTDQSOE, -1, 2), rnode(GOUT, 35, 39, 38) },
  { pnode(HMC, 15, 39, IOINTDQSOE, -1, 3), rnode(GOUT, 35, 39, 30) },
  { pnode(HMC, 15, 39, IOINTDQSOE, -1, 4), rnode(GOUT, 42, 39, 38) },
  { pnode(HMC, 15, 39, IOINTDQSOE, -1, 5), rnode(GOUT, 42, 39, 30) },
  { pnode(HMC, 15, 39, IOINTODTACLR, -1, 0), rnode(GOUT, 27, 39, 21) },
  { pnode(HMC, 15, 39, IOINTODTACLR, -1, 1), rnode(GOUT, 29, 39, 12) },
  { pnode(HMC, 15, 39, IOINTODTDOUT, -1, 0), rnode(GOUT, 27, 39, 14) },
  { pnode(HMC, 15, 39, IOINTODTDOUT, -1, 1), rnode(GOUT, 27, 39, 22) },
  { pnode(HMC, 15, 39, IOINTODTDOUT, -1, 2), rnode(GOUT, 27, 39, 15) },
  { pnode(HMC, 15, 39, IOINTODTDOUT, -1, 3), rnode(GOUT, 27, 39, 23) },
  { pnode(HMC, 15, 39, IOINTODTDOUT, -1, 4), rnode(GOUT, 29, 39, 3) },
  { pnode(HMC, 15, 39, IOINTODTDOUT, -1, 5), rnode(GOUT, 29, 39, 17) },
  { pnode(HMC, 15, 39, IOINTODTDOUT, -1, 6), rnode(GOUT, 29, 39, 8) },
  { pnode(HMC, 15, 39, IOINTODTDOUT, -1, 7), rnode(GOUT, 29, 39, 18) },
  { pnode(HMC, 15, 39, IOINTRASNACLR, -1, -1), rnode(GOUT, 8, 39, 12) },
  { pnode(HMC, 15, 39, IOINTRASNDOUT, -1, 0), rnode(GOUT, 8, 39, 3) },
  { pnode(HMC, 15, 39, IOINTRASNDOUT, -1, 1), rnode(GOUT, 8, 39, 17) },
  { pnode(HMC, 15, 39, IOINTRASNDOUT, -1, 2), rnode(GOUT, 8, 39, 8) },
  { pnode(HMC, 15, 39, IOINTRASNDOUT, -1, 3), rnode(GOUT, 8, 39, 18) },
  { pnode(HMC, 15, 39, IOINTRESETNACLR, -1, -1), rnode(GOUT, 42, 39, 21) },
  { pnode(HMC, 15, 39, IOINTRESETNDOUT, -1, 0), rnode(GOUT, 42, 39, 14) },
  { pnode(HMC, 15, 39, IOINTRESETNDOUT, -1, 1), rnode(GOUT, 42, 39, 22) },
  { pnode(HMC, 15, 39, IOINTRESETNDOUT, -1, 2), rnode(GOUT, 42, 39, 15) },
  { pnode(HMC, 15, 39, IOINTRESETNDOUT, -1, 3), rnode(GOUT, 42, 39, 23) },
  { pnode(HMC, 15, 39, IOINTWENACLR, -1, -1), rnode(GOUT, 3, 39, 21) },
  { pnode(HMC, 15, 39, IOINTWENDOUT, -1, 0), rnode(GOUT, 3, 39, 14) },
  { pnode(HMC, 15, 39, IOINTWENDOUT, -1, 1), rnode(GOUT, 3, 39, 22) },
  { pnode(HMC, 15, 39, IOINTWENDOUT, -1, 2), rnode(GOUT, 3, 39, 15) },
  { pnode(HMC, 15, 39, IOINTWENDOUT, -1, 3), rnode(GOUT, 3, 39, 23) },
  { pnode(HMC, 15, 39, LOCALDEEPPOWERDNCHIP, -1, 0), rnode(GOUT, 18, 39, 50) },
  { pnode(HMC, 15, 39, LOCALDEEPPOWERDNCHIP, -1, 1), rnode(GOUT, 18, 39, 49) },
  { pnode(HMC, 15, 39, LOCALDEEPPOWERDNREQ, -1, -1), rnode(GOUT, 18, 39, 48) },
  { pnode(HMC, 15, 39, LOCALREFRESHCHIP, -1, 0), rnode(GOUT, 18, 39, 42) },
  { pnode(HMC, 15, 39, LOCALREFRESHCHIP, -1, 1), rnode(GOUT, 18, 39, 46) },
  { pnode(HMC, 15, 39, LOCALREFRESHREQ, -1, -1), rnode(GOUT, 18, 39, 47) },
  { pnode(HMC, 15, 39, LOCALSELFRFSHCHIP, -1, 0), rnode(GOUT, 18, 39, 41) },
  { pnode(HMC, 15, 39, LOCALSELFRFSHCHIP, -1, 1), rnode(GOUT, 18, 39, 45) },
  { pnode(HMC, 15, 39, LOCALSELFRFSHREQ, -1, -1), rnode(GOUT, 18, 39, 40) },
  { pnode(HMC, 15, 39, MMRADDR, -1, 0), rnode(GOUT, 44, 39, 1) },
  { pnode(HMC, 15, 39, MMRADDR, -1, 1), rnode(GOUT, 44, 39, 17) },
  { pnode(HMC, 15, 39, MMRADDR, -1, 2), rnode(GOUT, 44, 39, 18) },
  { pnode(HMC, 15, 39, MMRADDR, -1, 3), rnode(GOUT, 44, 39, 19) },
  { pnode(HMC, 15, 39, MMRADDR, -1, 4), rnode(GOUT, 44, 39, 15) },
  { pnode(HMC, 15, 39, MMRADDR, -1, 5), rnode(GOUT, 44, 39, 16) },
  { pnode(HMC, 15, 39, MMRADDR, -1, 6), rnode(GOUT, 44, 39, 21) },
  { pnode(HMC, 15, 39, MMRADDR, -1, 7), rnode(GOUT, 44, 39, 23) },
  { pnode(HMC, 15, 39, MMRADDR, -1, 8), rnode(GOUT, 44, 39, 25) },
  { pnode(HMC, 15, 39, MMRADDR, -1, 9), rnode(GOUT, 44, 39, 42) },
  { pnode(HMC, 15, 39, MMRBE, -1, -1), rnode(GOUT, 45, 39, 10) },
  { pnode(HMC, 15, 39, MMRBURSTBEGIN, -1, -1), rnode(GOUT, 45, 39, 11) },
  { pnode(HMC, 15, 39, MMRBURSTCOUNT, -1, 0), rnode(GOUT, 44, 39, 22) },
  { pnode(HMC, 15, 39, MMRBURSTCOUNT, -1, 1), rnode(GOUT, 44, 39, 24) },
  { pnode(HMC, 15, 39, MMRCLK, -1, -1), rnode(DCMUX, 47, 39, 7) },
  { pnode(HMC, 15, 39, MMRREADREQ, -1, -1), rnode(GOUT, 44, 39, 12) },
  { pnode(HMC, 15, 39, MMRRESETN, -1, -1), rnode(GOUT, 44, 39, 13) },
  { pnode(HMC, 15, 39, MMRWDATA, -1, 0), rnode(GOUT, 44, 39, 43) },
  { pnode(HMC, 15, 39, MMRWDATA, -1, 1), rnode(GOUT, 44, 39, 27) },
  { pnode(HMC, 15, 39, MMRWDATA, -1, 2), rnode(GOUT, 44, 39, 34) },
  { pnode(HMC, 15, 39, MMRWDATA, -1, 3), rnode(GOUT, 44, 39, 30) },
  { pnode(HMC, 15, 39, MMRWDATA, -1, 4), rnode(GOUT, 44, 39, 33) },
  { pnode(HMC, 15, 39, MMRWDATA, -1, 5), rnode(GOUT, 44, 39, 37) },
  { pnode(HMC, 15, 39, MMRWDATA, -1, 6), rnode(GOUT, 44, 39, 36) },
  { pnode(HMC, 15, 39, MMRWDATA, -1, 7), rnode(GOUT, 44, 39, 26) },
  { pnode(HMC, 15, 39, MMRWRITEREQ, -1, -1), rnode(GOUT, 45, 39, 7) },
  { pnode(HMC, 15, 39, PLLLOCKED, -1, -1), rnode(GOUT, 44, 39, 14) },
  { pnode(HMC, 15, 39, PORTCLK, 0, -1), rnode(DCMUX, 17, 39, 8) },
  { pnode(HMC, 15, 39, PORTCLK, 1, -1), rnode(DCMUX, 18, 39, 15) },
  { pnode(HMC, 15, 39, PORTCLK, 2, -1), rnode(DCMUX, 19, 39, 4) },
  { pnode(HMC, 15, 39, PORTCLK, 3, -1), rnode(DCMUX, 24, 39, 3) },
  { pnode(HMC, 15, 39, SCADDR, -1, 0), rnode(GOUT, 44, 39, 48) },
  { pnode(HMC, 15, 39, SCADDR, -1, 1), rnode(GOUT, 44, 39, 47) },
  { pnode(HMC, 15, 39, SCADDR, -1, 2), rnode(GOUT, 44, 39, 45) },
  { pnode(HMC, 15, 39, SCADDR, -1, 3), rnode(GOUT, 44, 39, 39) },
  { pnode(HMC, 15, 39, SCADDR, -1, 4), rnode(GOUT, 44, 39, 38) },
  { pnode(HMC, 15, 39, SCADDR, -1, 5), rnode(GOUT, 44, 39, 28) },
  { pnode(HMC, 15, 39, SCADDR, -1, 6), rnode(GOUT, 44, 39, 29) },
  { pnode(HMC, 15, 39, SCADDR, -1, 7), rnode(GOUT, 44, 39, 31) },
  { pnode(HMC, 15, 39, SCADDR, -1, 8), rnode(GOUT, 44, 39, 32) },
  { pnode(HMC, 15, 39, SCADDR, -1, 9), rnode(GOUT, 44, 39, 35) },
  { pnode(HMC, 15, 39, SCANEN, -1, -1), rnode(GOUT, 46, 39, 15) },
  { pnode(HMC, 15, 39, SCBE, -1, -1), rnode(GOUT, 45, 39, 33) },
  { pnode(HMC, 15, 39, SCBURSTBEGIN, -1, -1), rnode(GOUT, 46, 39, 14) },
  { pnode(HMC, 15, 39, SCBURSTCOUNT, -1, 0), rnode(GOUT, 46, 39, 12) },
  { pnode(HMC, 15, 39, SCBURSTCOUNT, -1, 1), rnode(GOUT, 46, 39, 13) },
  { pnode(HMC, 15, 39, SCCLK, -1, -1), rnode(DCMUX, 47, 39, 9) },
  { pnode(HMC, 15, 39, SCREADREQ, -1, -1), rnode(GOUT, 45, 39, 9) },
  { pnode(HMC, 15, 39, SCRESETN, -1, -1), rnode(GOUT, 45, 39, 6) },
  { pnode(HMC, 15, 39, SCWDATA, -1, 0), rnode(GOUT, 45, 39, 37) },
  { pnode(HMC, 15, 39, SCWDATA, -1, 1), rnode(GOUT, 45, 39, 36) },
  { pnode(HMC, 15, 39, SCWDATA, -1, 2), rnode(GOUT, 46, 39, 0) },
  { pnode(HMC, 15, 39, SCWDATA, -1, 3), rnode(GOUT, 46, 39, 9) },
  { pnode(HMC, 15, 39, SCWDATA, -1, 4), rnode(GOUT, 46, 39, 6) },
  { pnode(HMC, 15, 39, SCWDATA, -1, 5), rnode(GOUT, 46, 39, 5) },
  { pnode(HMC, 15, 39, SCWDATA, -1, 6), rnode(GOUT, 46, 39, 3) },
  { pnode(HMC, 15, 39, SCWDATA, -1, 7), rnode(GOUT, 46, 39, 2) },
  { pnode(HMC, 15, 39, SCWRITEREQ, -1, -1), rnode(GOUT, 45, 39, 0) },
  { pnode(HMC, 15, 39, SOFTRESETN, -1, -1), rnode(GOUT, 44, 39, 46) },
  { pnode(HMC, 15, 39, AFICTLLONGIDLE, -1, 0), rnode(GIN, 47, 39, 18) },
  { pnode(HMC, 15, 39, AFICTLLONGIDLE, -1, 1), rnode(GIN, 47, 39, 17) },
  { pnode(HMC, 15, 39, AFICTLREFRESHDONE, -1, 0), rnode(GIN, 47, 39, 16) },
  { pnode(HMC, 15, 39, AFICTLREFRESHDONE, -1, 1), rnode(GIN, 47, 39, 15) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 0), rnode(GIN, 47, 39, 0) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 1), rnode(GIN, 47, 39, 1) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 2), rnode(GIN, 47, 39, 2) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 3), rnode(GIN, 47, 39, 3) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 4), rnode(GIN, 47, 39, 4) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 5), rnode(GIN, 47, 39, 5) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 6), rnode(GIN, 47, 39, 6) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 7), rnode(GIN, 47, 39, 7) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 8), rnode(GIN, 47, 39, 8) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 9), rnode(GIN, 47, 39, 9) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 10), rnode(GIN, 47, 39, 10) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 11), rnode(GIN, 47, 39, 11) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 12), rnode(GIN, 47, 39, 12) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 13), rnode(GIN, 47, 39, 25) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 14), rnode(GIN, 47, 39, 24) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 15), rnode(GIN, 47, 39, 23) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 16), rnode(GIN, 44, 39, 3) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 17), rnode(GIN, 44, 39, 5) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 18), rnode(GIN, 44, 39, 7) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 19), rnode(GIN, 44, 39, 9) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 20), rnode(GIN, 44, 39, 11) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 21), rnode(GIN, 44, 39, 25) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 22), rnode(GIN, 44, 39, 23) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 23), rnode(GIN, 44, 39, 21) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 24), rnode(GIN, 44, 39, 19) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 25), rnode(GIN, 44, 39, 17) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 26), rnode(GIN, 44, 39, 15) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 27), rnode(GIN, 44, 39, 13) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 28), rnode(GIN, 45, 39, 13) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 29), rnode(GIN, 46, 39, 1) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 30), rnode(GIN, 46, 39, 3) },
  { pnode(HMC, 15, 39, AVLREADDATA, -1, 31), rnode(GIN, 46, 39, 5) },
  { pnode(HMC, 15, 39, AVLWAITREQUEST, -1, -1), rnode(GIN, 47, 39, 14) },
  { pnode(HMC, 15, 39, CTLCALREQ, -1, -1), rnode(GIN, 26, 39, 18) },
  { pnode(HMC, 15, 39, IOINTAFICALFAIL, -1, -1), rnode(GIN, 46, 39, 7) },
  { pnode(HMC, 15, 39, IOINTAFICALSUCCESS, -1, -1), rnode(GIN, 46, 39, 9) },
  { pnode(HMC, 15, 39, IOINTAFIRLAT, -1, 0), rnode(GIN, 46, 39, 11) },
  { pnode(HMC, 15, 39, IOINTAFIRLAT, -1, 1), rnode(GIN, 46, 39, 25) },
  { pnode(HMC, 15, 39, IOINTAFIRLAT, -1, 2), rnode(GIN, 46, 39, 23) },
  { pnode(HMC, 15, 39, IOINTAFIRLAT, -1, 3), rnode(GIN, 46, 39, 21) },
  { pnode(HMC, 15, 39, IOINTAFIRLAT, -1, 4), rnode(GIN, 46, 39, 19) },
  { pnode(HMC, 15, 39, IOINTAFIWLAT, -1, 0), rnode(GIN, 47, 39, 22) },
  { pnode(HMC, 15, 39, IOINTAFIWLAT, -1, 1), rnode(GIN, 47, 39, 21) },
  { pnode(HMC, 15, 39, IOINTAFIWLAT, -1, 2), rnode(GIN, 47, 39, 20) },
  { pnode(HMC, 15, 39, IOINTAFIWLAT, -1, 3), rnode(GIN, 47, 39, 19) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 0), rnode(GIN, 25, 39, 24) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 1), rnode(GIN, 25, 39, 23) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 2), rnode(GIN, 25, 39, 22) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 3), rnode(GIN, 25, 39, 21) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 4), rnode(GIN, 25, 39, 18) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 5), rnode(GIN, 25, 39, 17) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 6), rnode(GIN, 25, 39, 16) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 7), rnode(GIN, 25, 39, 15) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 8), rnode(GIN, 25, 39, 8) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 9), rnode(GIN, 25, 39, 9) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 10), rnode(GIN, 25, 39, 10) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 11), rnode(GIN, 25, 39, 11) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 12), rnode(GIN, 27, 39, 2) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 13), rnode(GIN, 27, 39, 3) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 14), rnode(GIN, 27, 39, 4) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 15), rnode(GIN, 27, 39, 5) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 16), rnode(GIN, 29, 39, 24) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 17), rnode(GIN, 29, 39, 23) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 18), rnode(GIN, 29, 39, 22) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 19), rnode(GIN, 29, 39, 21) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 20), rnode(GIN, 29, 39, 18) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 21), rnode(GIN, 29, 39, 17) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 22), rnode(GIN, 29, 39, 16) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 23), rnode(GIN, 29, 39, 15) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 24), rnode(GIN, 29, 39, 8) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 25), rnode(GIN, 29, 39, 9) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 26), rnode(GIN, 29, 39, 10) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 27), rnode(GIN, 29, 39, 11) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 28), rnode(GIN, 31, 39, 2) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 29), rnode(GIN, 31, 39, 3) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 30), rnode(GIN, 31, 39, 4) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 31), rnode(GIN, 31, 39, 5) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 36), rnode(GIN, 33, 39, 24) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 37), rnode(GIN, 33, 39, 23) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 38), rnode(GIN, 33, 39, 22) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 39), rnode(GIN, 33, 39, 21) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 40), rnode(GIN, 33, 39, 18) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 41), rnode(GIN, 33, 39, 17) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 42), rnode(GIN, 33, 39, 16) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 43), rnode(GIN, 33, 39, 15) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 44), rnode(GIN, 33, 39, 8) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 45), rnode(GIN, 33, 39, 9) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 46), rnode(GIN, 33, 39, 10) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 47), rnode(GIN, 33, 39, 11) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 48), rnode(GIN, 35, 39, 2) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 49), rnode(GIN, 35, 39, 3) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 50), rnode(GIN, 35, 39, 4) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 51), rnode(GIN, 35, 39, 5) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 52), rnode(GIN, 37, 39, 24) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 53), rnode(GIN, 37, 39, 23) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 54), rnode(GIN, 37, 39, 22) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 55), rnode(GIN, 37, 39, 21) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 56), rnode(GIN, 37, 39, 18) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 57), rnode(GIN, 37, 39, 17) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 58), rnode(GIN, 37, 39, 16) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 59), rnode(GIN, 37, 39, 15) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 60), rnode(GIN, 37, 39, 8) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 61), rnode(GIN, 37, 39, 9) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 62), rnode(GIN, 37, 39, 10) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 63), rnode(GIN, 37, 39, 11) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 64), rnode(GIN, 39, 39, 2) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 65), rnode(GIN, 39, 39, 3) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 66), rnode(GIN, 39, 39, 4) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 67), rnode(GIN, 39, 39, 5) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 72), rnode(GIN, 41, 39, 24) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 73), rnode(GIN, 41, 39, 23) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 74), rnode(GIN, 41, 39, 22) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 75), rnode(GIN, 41, 39, 21) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 76), rnode(GIN, 41, 39, 18) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 77), rnode(GIN, 41, 39, 17) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 78), rnode(GIN, 41, 39, 16) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 79), rnode(GIN, 41, 39, 15) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 80), rnode(GIN, 41, 39, 8) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 81), rnode(GIN, 41, 39, 9) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 82), rnode(GIN, 41, 39, 10) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 83), rnode(GIN, 41, 39, 11) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 84), rnode(GIN, 42, 39, 2) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 85), rnode(GIN, 42, 39, 3) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 86), rnode(GIN, 42, 39, 4) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 87), rnode(GIN, 42, 39, 5) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 88), rnode(GIN, 43, 39, 24) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 89), rnode(GIN, 43, 39, 23) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 90), rnode(GIN, 43, 39, 22) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 91), rnode(GIN, 43, 39, 21) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 92), rnode(GIN, 43, 39, 18) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 93), rnode(GIN, 43, 39, 17) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 94), rnode(GIN, 43, 39, 16) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 95), rnode(GIN, 43, 39, 15) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 96), rnode(GIN, 43, 39, 8) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 97), rnode(GIN, 43, 39, 9) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 98), rnode(GIN, 43, 39, 10) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 99), rnode(GIN, 43, 39, 11) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 100), rnode(GIN, 45, 39, 2) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 101), rnode(GIN, 45, 39, 3) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 102), rnode(GIN, 45, 39, 4) },
  { pnode(HMC, 15, 39, IOINTDQDIN, -1, 103), rnode(GIN, 45, 39, 5) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICRDATAVALID, -1, 0), rnode(GIN, 31, 39, 0) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICRDATAVALID, -1, 1), rnode(GIN, 38, 39, 12) },
  { pnode(HMC, 15, 39, IOINTDQSLOGICRDATAVALID, -1, 2), rnode(GIN, 44, 39, 1) },
  { pnode(HMC, 15, 39, LOCALDEEPPOWERDNACK, -1, -1), rnode(GIN, 17, 39, 22) },
  { pnode(HMC, 15, 39, LOCALINITDONE, -1, -1), rnode(GIN, 17, 39, 21) },
  { pnode(HMC, 15, 39, LOCALPOWERDOWNACK, -1, -1), rnode(GIN, 17, 39, 20) },
  { pnode(HMC, 15, 39, LOCALREFRESHACK, -1, -1), rnode(GIN, 17, 39, 19) },
  { pnode(HMC, 15, 39, LOCALSELFRFSHACK, -1, -1), rnode(GIN, 17, 39, 18) },
  { pnode(HMC, 15, 39, MMRRDATA, -1, 0), rnode(GIN, 44, 39, 18) },
  { pnode(HMC, 15, 39, MMRRDATA, -1, 1), rnode(GIN, 44, 39, 16) },
  { pnode(HMC, 15, 39, MMRRDATA, -1, 2), rnode(GIN, 44, 39, 14) },
  { pnode(HMC, 15, 39, MMRRDATA, -1, 3), rnode(GIN, 45, 39, 0) },
  { pnode(HMC, 15, 39, MMRRDATA, -1, 4), rnode(GIN, 46, 39, 0) },
  { pnode(HMC, 15, 39, MMRRDATA, -1, 5), rnode(GIN, 46, 39, 2) },
  { pnode(HMC, 15, 39, MMRRDATA, -1, 6), rnode(GIN, 46, 39, 4) },
  { pnode(HMC, 15, 39, MMRRDATA, -1, 7), rnode(GIN, 46, 39, 6) },
  { pnode(HMC, 15, 39, MMRRDATAVALID, -1, -1), rnode(GIN, 44, 39, 20) },
  { pnode(HMC, 15, 39, MMRWAITREQUEST, -1, -1), rnode(GIN, 46, 39, 14) },
  { pnode(HMC, 15, 39, OAMMREADY, -1, 0), rnode(GIN, 17, 39, 17) },
  { pnode(HMC, 15, 39, OAMMREADY, -1, 1), rnode(GIN, 28, 39, 14) },
  { pnode(HMC, 15, 39, OAMMREADY, -1, 2), rnode(GIN, 18, 39, 1) },
  { pnode(HMC, 15, 39, OAMMREADY, -1, 3), rnode(GIN, 26, 39, 19) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 0), rnode(GIN, 18, 39, 4) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 1), rnode(GIN, 18, 39, 5) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 2), rnode(GIN, 18, 39, 6) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 3), rnode(GIN, 18, 39, 7) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 4), rnode(GIN, 18, 39, 8) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 5), rnode(GIN, 18, 39, 9) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 6), rnode(GIN, 18, 39, 10) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 7), rnode(GIN, 18, 39, 11) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 8), rnode(GIN, 18, 39, 12) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 9), rnode(GIN, 18, 39, 25) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 10), rnode(GIN, 18, 39, 24) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 11), rnode(GIN, 18, 39, 23) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 12), rnode(GIN, 18, 39, 22) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 13), rnode(GIN, 18, 39, 21) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 14), rnode(GIN, 18, 39, 20) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 15), rnode(GIN, 18, 39, 19) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 16), rnode(GIN, 18, 39, 18) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 17), rnode(GIN, 18, 39, 17) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 18), rnode(GIN, 18, 39, 16) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 19), rnode(GIN, 18, 39, 15) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 20), rnode(GIN, 18, 39, 14) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 21), rnode(GIN, 18, 39, 13) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 22), rnode(GIN, 19, 39, 0) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 23), rnode(GIN, 19, 39, 1) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 24), rnode(GIN, 19, 39, 2) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 25), rnode(GIN, 19, 39, 3) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 26), rnode(GIN, 19, 39, 4) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 27), rnode(GIN, 19, 39, 5) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 28), rnode(GIN, 19, 39, 6) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 29), rnode(GIN, 19, 39, 7) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 30), rnode(GIN, 19, 39, 8) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 31), rnode(GIN, 19, 39, 9) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 32), rnode(GIN, 19, 39, 10) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 33), rnode(GIN, 19, 39, 11) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 34), rnode(GIN, 19, 39, 12) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 35), rnode(GIN, 19, 39, 25) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 36), rnode(GIN, 19, 39, 24) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 37), rnode(GIN, 19, 39, 23) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 38), rnode(GIN, 20, 39, 25) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 39), rnode(GIN, 20, 39, 24) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 40), rnode(GIN, 20, 39, 23) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 41), rnode(GIN, 20, 39, 22) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 42), rnode(GIN, 20, 39, 21) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 43), rnode(GIN, 20, 39, 20) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 44), rnode(GIN, 20, 39, 19) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 45), rnode(GIN, 20, 39, 18) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 46), rnode(GIN, 20, 39, 17) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 47), rnode(GIN, 20, 39, 16) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 48), rnode(GIN, 20, 39, 15) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 49), rnode(GIN, 20, 39, 14) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 50), rnode(GIN, 20, 39, 13) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 51), rnode(GIN, 21, 39, 0) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 52), rnode(GIN, 21, 39, 1) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 53), rnode(GIN, 21, 39, 2) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 54), rnode(GIN, 21, 39, 3) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 55), rnode(GIN, 21, 39, 4) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 56), rnode(GIN, 21, 39, 5) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 57), rnode(GIN, 21, 39, 6) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 58), rnode(GIN, 21, 39, 7) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 59), rnode(GIN, 21, 39, 8) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 60), rnode(GIN, 21, 39, 9) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 61), rnode(GIN, 21, 39, 10) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 62), rnode(GIN, 21, 39, 11) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 0, 63), rnode(GIN, 21, 39, 12) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 0), rnode(GIN, 22, 39, 23) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 1), rnode(GIN, 22, 39, 22) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 2), rnode(GIN, 22, 39, 21) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 3), rnode(GIN, 22, 39, 20) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 4), rnode(GIN, 22, 39, 19) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 5), rnode(GIN, 22, 39, 18) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 6), rnode(GIN, 22, 39, 17) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 7), rnode(GIN, 24, 39, 4) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 8), rnode(GIN, 24, 39, 5) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 9), rnode(GIN, 24, 39, 6) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 10), rnode(GIN, 24, 39, 7) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 11), rnode(GIN, 24, 39, 8) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 12), rnode(GIN, 24, 39, 9) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 13), rnode(GIN, 24, 39, 10) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 14), rnode(GIN, 24, 39, 11) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 15), rnode(GIN, 24, 39, 12) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 16), rnode(GIN, 24, 39, 25) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 17), rnode(GIN, 24, 39, 24) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 18), rnode(GIN, 24, 39, 23) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 19), rnode(GIN, 24, 39, 22) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 20), rnode(GIN, 24, 39, 21) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 21), rnode(GIN, 24, 39, 20) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 22), rnode(GIN, 24, 39, 19) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 23), rnode(GIN, 24, 39, 18) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 24), rnode(GIN, 24, 39, 17) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 25), rnode(GIN, 24, 39, 15) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 26), rnode(GIN, 24, 39, 14) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 27), rnode(GIN, 24, 39, 13) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 28), rnode(GIN, 25, 39, 0) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 29), rnode(GIN, 25, 39, 13) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 30), rnode(GIN, 26, 39, 0) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 31), rnode(GIN, 26, 39, 1) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 32), rnode(GIN, 26, 39, 2) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 33), rnode(GIN, 26, 39, 3) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 34), rnode(GIN, 26, 39, 4) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 35), rnode(GIN, 26, 39, 5) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 36), rnode(GIN, 26, 39, 6) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 37), rnode(GIN, 26, 39, 7) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 38), rnode(GIN, 26, 39, 8) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 39), rnode(GIN, 26, 39, 9) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 40), rnode(GIN, 26, 39, 10) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 41), rnode(GIN, 26, 39, 11) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 42), rnode(GIN, 26, 39, 12) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 43), rnode(GIN, 26, 39, 25) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 44), rnode(GIN, 26, 39, 24) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 45), rnode(GIN, 28, 39, 2) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 46), rnode(GIN, 28, 39, 3) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 47), rnode(GIN, 28, 39, 4) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 48), rnode(GIN, 28, 39, 5) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 49), rnode(GIN, 28, 39, 6) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 50), rnode(GIN, 28, 39, 7) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 51), rnode(GIN, 28, 39, 8) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 52), rnode(GIN, 28, 39, 9) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 53), rnode(GIN, 28, 39, 10) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 54), rnode(GIN, 28, 39, 11) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 55), rnode(GIN, 28, 39, 12) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 56), rnode(GIN, 28, 39, 25) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 57), rnode(GIN, 28, 39, 24) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 58), rnode(GIN, 28, 39, 23) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 59), rnode(GIN, 28, 39, 22) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 60), rnode(GIN, 28, 39, 21) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 61), rnode(GIN, 28, 39, 20) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 62), rnode(GIN, 28, 39, 19) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 1, 63), rnode(GIN, 28, 39, 18) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 0), rnode(GIN, 29, 39, 0) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 1), rnode(GIN, 29, 39, 13) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 2), rnode(GIN, 30, 39, 0) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 3), rnode(GIN, 30, 39, 1) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 4), rnode(GIN, 30, 39, 2) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 5), rnode(GIN, 30, 39, 3) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 6), rnode(GIN, 30, 39, 4) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 7), rnode(GIN, 30, 39, 5) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 8), rnode(GIN, 30, 39, 6) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 9), rnode(GIN, 30, 39, 7) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 10), rnode(GIN, 30, 39, 8) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 11), rnode(GIN, 30, 39, 9) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 12), rnode(GIN, 30, 39, 10) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 13), rnode(GIN, 30, 39, 11) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 14), rnode(GIN, 30, 39, 12) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 15), rnode(GIN, 30, 39, 25) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 16), rnode(GIN, 30, 39, 24) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 17), rnode(GIN, 30, 39, 23) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 18), rnode(GIN, 30, 39, 22) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 19), rnode(GIN, 30, 39, 21) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 20), rnode(GIN, 30, 39, 20) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 21), rnode(GIN, 30, 39, 19) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 22), rnode(GIN, 30, 39, 18) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 23), rnode(GIN, 30, 39, 17) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 24), rnode(GIN, 30, 39, 16) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 25), rnode(GIN, 30, 39, 15) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 26), rnode(GIN, 31, 39, 13) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 27), rnode(GIN, 32, 39, 0) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 28), rnode(GIN, 32, 39, 1) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 29), rnode(GIN, 32, 39, 2) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 30), rnode(GIN, 32, 39, 3) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 31), rnode(GIN, 32, 39, 4) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 32), rnode(GIN, 32, 39, 5) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 33), rnode(GIN, 32, 39, 6) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 34), rnode(GIN, 32, 39, 9) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 35), rnode(GIN, 32, 39, 10) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 36), rnode(GIN, 32, 39, 11) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 37), rnode(GIN, 32, 39, 12) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 38), rnode(GIN, 32, 39, 25) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 39), rnode(GIN, 32, 39, 24) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 40), rnode(GIN, 32, 39, 23) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 41), rnode(GIN, 32, 39, 22) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 42), rnode(GIN, 32, 39, 21) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 43), rnode(GIN, 32, 39, 20) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 44), rnode(GIN, 32, 39, 19) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 45), rnode(GIN, 32, 39, 18) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 46), rnode(GIN, 32, 39, 17) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 47), rnode(GIN, 32, 39, 16) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 48), rnode(GIN, 32, 39, 15) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 49), rnode(GIN, 32, 39, 14) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 50), rnode(GIN, 34, 39, 7) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 51), rnode(GIN, 34, 39, 8) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 52), rnode(GIN, 34, 39, 9) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 53), rnode(GIN, 34, 39, 10) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 54), rnode(GIN, 34, 39, 11) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 55), rnode(GIN, 34, 39, 12) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 56), rnode(GIN, 34, 39, 25) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 57), rnode(GIN, 34, 39, 24) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 58), rnode(GIN, 34, 39, 23) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 59), rnode(GIN, 34, 39, 22) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 60), rnode(GIN, 34, 39, 21) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 61), rnode(GIN, 34, 39, 20) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 62), rnode(GIN, 34, 39, 19) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 2, 63), rnode(GIN, 34, 39, 18) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 0), rnode(GIN, 34, 39, 15) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 1), rnode(GIN, 34, 39, 14) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 2), rnode(GIN, 34, 39, 13) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 3), rnode(GIN, 35, 39, 0) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 4), rnode(GIN, 35, 39, 13) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 5), rnode(GIN, 36, 39, 0) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 6), rnode(GIN, 36, 39, 1) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 7), rnode(GIN, 36, 39, 2) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 8), rnode(GIN, 36, 39, 3) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 9), rnode(GIN, 36, 39, 4) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 10), rnode(GIN, 36, 39, 6) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 11), rnode(GIN, 36, 39, 7) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 12), rnode(GIN, 36, 39, 8) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 13), rnode(GIN, 36, 39, 9) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 14), rnode(GIN, 36, 39, 10) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 15), rnode(GIN, 36, 39, 11) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 16), rnode(GIN, 36, 39, 12) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 17), rnode(GIN, 36, 39, 25) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 18), rnode(GIN, 36, 39, 24) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 19), rnode(GIN, 36, 39, 23) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 20), rnode(GIN, 36, 39, 22) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 21), rnode(GIN, 36, 39, 21) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 22), rnode(GIN, 36, 39, 20) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 23), rnode(GIN, 36, 39, 19) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 24), rnode(GIN, 36, 39, 18) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 25), rnode(GIN, 36, 39, 17) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 26), rnode(GIN, 36, 39, 16) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 27), rnode(GIN, 36, 39, 15) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 28), rnode(GIN, 36, 39, 14) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 29), rnode(GIN, 36, 39, 13) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 30), rnode(GIN, 37, 39, 0) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 31), rnode(GIN, 37, 39, 13) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 32), rnode(GIN, 38, 39, 0) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 33), rnode(GIN, 38, 39, 1) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 34), rnode(GIN, 38, 39, 2) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 35), rnode(GIN, 38, 39, 19) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 36), rnode(GIN, 38, 39, 18) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 37), rnode(GIN, 38, 39, 17) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 38), rnode(GIN, 38, 39, 16) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 39), rnode(GIN, 38, 39, 15) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 40), rnode(GIN, 38, 39, 14) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 41), rnode(GIN, 38, 39, 13) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 42), rnode(GIN, 39, 39, 0) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 43), rnode(GIN, 39, 39, 13) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 44), rnode(GIN, 40, 39, 0) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 45), rnode(GIN, 40, 39, 1) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 46), rnode(GIN, 40, 39, 2) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 47), rnode(GIN, 40, 39, 3) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 48), rnode(GIN, 40, 39, 4) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 49), rnode(GIN, 40, 39, 5) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 50), rnode(GIN, 40, 39, 6) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 51), rnode(GIN, 40, 39, 7) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 52), rnode(GIN, 40, 39, 8) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 53), rnode(GIN, 40, 39, 9) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 54), rnode(GIN, 40, 39, 10) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 55), rnode(GIN, 40, 39, 11) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 56), rnode(GIN, 40, 39, 12) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 57), rnode(GIN, 40, 39, 25) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 58), rnode(GIN, 40, 39, 24) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 59), rnode(GIN, 40, 39, 23) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 60), rnode(GIN, 44, 39, 2) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 61), rnode(GIN, 44, 39, 4) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 62), rnode(GIN, 44, 39, 6) },
  { pnode(HMC, 15, 39, ORDAVSTDATA, 3, 63), rnode(GIN, 44, 39, 8) },
  { pnode(HMC, 15, 39, ORDAVSTVALID, 0, -1), rnode(GIN, 24, 39, 16) },
  { pnode(HMC, 15, 39, ORDAVSTVALID, 1, -1), rnode(GIN, 26, 39, 23) },
  { pnode(HMC, 15, 39, ORDAVSTVALID, 2, -1), rnode(GIN, 33, 39, 0) },
  { pnode(HMC, 15, 39, ORDAVSTVALID, 3, -1), rnode(GIN, 38, 39, 3) },
  { pnode(HMC, 15, 39, OWRACKAVSTDATA, 0, -1), rnode(GIN, 17, 39, 16) },
  { pnode(HMC, 15, 39, OWRACKAVSTDATA, 1, -1), rnode(GIN, 17, 39, 13) },
  { pnode(HMC, 15, 39, OWRACKAVSTDATA, 2, -1), rnode(GIN, 18, 39, 2) },
  { pnode(HMC, 15, 39, OWRACKAVSTDATA, 3, -1), rnode(GIN, 26, 39, 20) },
  { pnode(HMC, 15, 39, OWRACKAVSTVALID, 0, -1), rnode(GIN, 17, 39, 15) },
  { pnode(HMC, 15, 39, OWRACKAVSTVALID, 1, -1), rnode(GIN, 18, 39, 0) },
  { pnode(HMC, 15, 39, OWRACKAVSTVALID, 2, -1), rnode(GIN, 18, 39, 3) },
  { pnode(HMC, 15, 39, OWRACKAVSTVALID, 3, -1), rnode(GIN, 26, 39, 21) },
  { pnode(HMC, 15, 39, PHYRESETN, -1, -1), rnode(GIN, 46, 39, 17) },
  { pnode(HMC, 15, 39, SCRDATA, -1, 0), rnode(GIN, 46, 39, 8) },
  { pnode(HMC, 15, 39, SCRDATA, -1, 1), rnode(GIN, 46, 39, 10) },
  { pnode(HMC, 15, 39, SCRDATA, -1, 2), rnode(GIN, 46, 39, 12) },
  { pnode(HMC, 15, 39, SCRDATA, -1, 3), rnode(GIN, 46, 39, 24) },
  { pnode(HMC, 15, 39, SCRDATA, -1, 4), rnode(GIN, 46, 39, 22) },
  { pnode(HMC, 15, 39, SCRDATA, -1, 5), rnode(GIN, 46, 39, 20) },
  { pnode(HMC, 15, 39, SCRDATA, -1, 6), rnode(GIN, 46, 39, 18) },
  { pnode(HMC, 15, 39, SCRDATA, -1, 7), rnode(GIN, 46, 39, 16) },
  { pnode(HMC, 15, 39, SCRDATAVALID, -1, -1), rnode(GIN, 46, 39, 15) },
  { pnode(HMC, 15, 39, SCWAITREQUEST, -1, -1), rnode(GIN, 46, 39, 13) },
  { pnode(CMUXHG, 0, 8, CLKOUT, 0, -1), rnode(GCLK, 0, 8, 0) },
  { pnode(CMUXHG, 0, 8, CLKOUT, 1, -1), rnode(GCLK, 0, 8, 1) },
  { pnode(CMUXHG, 0, 8, CLKOUT, 2, -1), rnode(GCLK, 0, 8, 2) },
  { pnode(CMUXHG, 0, 8, CLKOUT, 3, -1), rnode(GCLK, 0, 8, 3) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 0, -1), rnode(RCLK, 0, 24, 10) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 1, -1), rnode(RCLK, 0, 24, 11) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 2, -1), rnode(RCLK, 0, 24, 12) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 3, -1), rnode(RCLK, 0, 24, 13) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 4, -1), rnode(RCLK, 0, 24, 14) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 5, -1), rnode(RCLK, 0, 24, 15) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 6, -1), rnode(RCLK, 0, 4, 10) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 7, -1), rnode(RCLK, 0, 4, 11) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 8, -1), rnode(RCLK, 0, 4, 12) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 9, -1), rnode(RCLK, 0, 4, 13) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 10, -1), rnode(RCLK, 0, 4, 14) },
  { pnode(CMUXHR, 0, 8, CLKOUT, 11, -1), rnode(RCLK, 0, 4, 15) },
  { pnode(CMUXHG, 0, 8, CLKFBOUT, -1, 1), rnode(GCLKFB, 12, 23, 1) },
  { pnode(CMUXHR, 0, 8, CLKFBOUT, -1, 0), rnode(RCLKFB, 12, 23, 1) },
  { pnode(CMUXHG, 0, 8, SWITCHCLK, 0, -1), rnode(GIN, 0, 8, 4) },
  { pnode(CMUXHG, 0, 8, SWITCHCLK, 1, -1), rnode(GIN, 0, 8, 5) },
  { pnode(CMUXHG, 0, 8, SWITCHCLK, 2, -1), rnode(GIN, 0, 8, 6) },
  { pnode(CMUXHG, 0, 8, SWITCHCLK, 3, -1), rnode(GIN, 0, 8, 7) },
  { pnode(CMUXHG, 0, 8, SYN_EN, 0, -1), rnode(GIN, 0, 8, 0) },
  { pnode(CMUXHG, 0, 8, SYN_EN, 1, -1), rnode(GIN, 0, 8, 1) },
  { pnode(CMUXHG, 0, 8, SYN_EN, 2, -1), rnode(GIN, 0, 8, 2) },
  { pnode(CMUXHG, 0, 8, SYN_EN, 3, -1), rnode(GIN, 0, 8, 3) },
  { pnode(CMUXHG, 0, 8, CLKIN, -1, 0), rnode(DCMUX, 0, 9, 13) },
  { pnode(CMUXHG, 0, 8, CLKIN, -1, 1), rnode(DCMUX, 0, 9, 6) },
  { pnode(CMUXHG, 0, 8, CLKIN, -1, 2), rnode(DCMUX, 0, 8, 10) },
  { pnode(CMUXHG, 0, 8, CLKIN, -1, 3), rnode(DCMUX, 0, 8, 4) },
  { pnode(CMUXHR, 0, 8, CLKIN, -1, 0), rnode(DCMUX, 0, 9, 5) },
  { pnode(CMUXHR, 0, 8, CLKIN, -1, 1), rnode(DCMUX, 0, 9, 11) },
  { pnode(CMUXHR, 0, 8, CLKIN, -1, 2), rnode(DCMUX, 0, 8, 5) },
  { pnode(CMUXHR, 0, 8, CLKIN, -1, 3), rnode(DCMUX, 0, 8, 11) },
  { pnode(CMUXHR, 0, 8, CLKFBIN, -1, 0), rnode(DCMUX, 0, 9, 4) },
  { pnode(CMUXHR, 0, 8, CLKFBIN, -1, 1), rnode(DCMUX, 0, 38, 5) },
  { pnode(CMUXHG, 0, 8, SWITCHIN, 0, 0), rnode(GOUT, 0, 9, 55) },
  { pnode(CMUXHG, 0, 8, SWITCHIN, 1, 0), rnode(GOUT, 0, 9, 64) },
  { pnode(CMUXHG, 0, 8, SWITCHIN, 2, 0), rnode(GOUT, 0, 9, 29) },
  { pnode(CMUXHG, 0, 8, SWITCHIN, 3, 0), rnode(GOUT, 0, 9, 39) },
  { pnode(CMUXHG, 0, 8, SWITCHIN, 0, 1), rnode(GOUT, 0, 8, 68) },
  { pnode(CMUXHG, 0, 8, SWITCHIN, 1, 1), rnode(GOUT, 0, 8, 29) },
  { pnode(CMUXHG, 0, 8, SWITCHIN, 2, 1), rnode(GOUT, 0, 8, 55) },
  { pnode(CMUXHG, 0, 8, SWITCHIN, 3, 1), rnode(GOUT, 0, 8, 62) },
  { pnode(CMUXHG, 0, 8, BURSTCNT, -1, 0), rnode(GOUT, 0, 9, 13) },
  { pnode(CMUXHG, 0, 8, BURSTCNT, -1, 1), rnode(GOUT, 0, 8, 39) },
  { pnode(CMUXHG, 0, 8, BURSTCNT, -1, 2), rnode(GOUT, 0, 8, 13) },
  { pnode(CMUXHG, 0, 8, ENABLE, 0, -1), rnode(GOUT, 0, 9, 45) },
  { pnode(CMUXHG, 0, 8, ENABLE, 1, -1), rnode(GOUT, 0, 9, 68) },
  { pnode(CMUXHG, 0, 8, ENABLE, 2, -1), rnode(GOUT, 0, 8, 59) },
  { pnode(CMUXHG, 0, 8, ENABLE, 3, -1), rnode(GOUT, 0, 8, 45) },
  { pnode(CMUXHR, 0, 8, ENABLE, 0, -1), rnode(GOUT, 0, 9, 2) },
  { pnode(CMUXHR, 0, 8, ENABLE, 1, -1), rnode(GOUT, 0, 9, 61) },
  { pnode(CMUXHR, 0, 8, ENABLE, 2, -1), rnode(GOUT, 0, 9, 10) },
  { pnode(CMUXHR, 0, 8, ENABLE, 3, -1), rnode(GOUT, 0, 9, 3) },
  { pnode(CMUXHR, 0, 8, ENABLE, 4, -1), rnode(GOUT, 0, 9, 65) },
  { pnode(CMUXHR, 0, 8, ENABLE, 5, -1), rnode(GOUT, 0, 9, 58) },
  { pnode(CMUXHR, 0, 8, ENABLE, 6, -1), rnode(GOUT, 0, 8, 8) },
  { pnode(CMUXHR, 0, 8, ENABLE, 7, -1), rnode(GOUT, 0, 8, 2) },
  { pnode(CMUXHR, 0, 8, ENABLE, 8, -1), rnode(GOUT, 0, 8, 60) },
  { pnode(CMUXHR, 0, 8, ENABLE, 9, -1), rnode(GOUT, 0, 8, 10) },
  { pnode(CMUXHR, 0, 8, ENABLE, 10, -1), rnode(GOUT, 0, 8, 3) },
  { pnode(CMUXHR, 0, 8, ENABLE, 11, -1), rnode(GOUT, 0, 8, 63) },
  { pnode(CMUXP, 0, 33, CLKOUT, -1, 0), rnode(PCLK, 1, 24, 1) },
  { pnode(CMUXP, 0, 33, CLKIN, -1, 0), rnode(DCMUX, 0, 13, 0) },
  { pnode(CMUXP, 0, 34, CLKOUT, -1, 0), rnode(PCLK, 1, 24, 0) },
  { pnode(CMUXP, 0, 34, CLKIN, -1, 0), rnode(DCMUX, 0, 12, 0) },
  { pnode(CMUXP, 0, 35, CLKOUT, -1, 0), rnode(PCLK, 1, 24, 3) },
  { pnode(CMUXP, 0, 35, CLKIN, -1, 0), rnode(DCMUX, 9, 20, 0) },
  { pnode(CMUXP, 0, 36, CLKOUT, -1, 0), rnode(PCLK, 1, 24, 2) },
  { pnode(CMUXP, 0, 36, CLKIN, -1, 0), rnode(DCMUX, 9, 19, 0) },
  { pnode(CMUXCR, 0, 37, CLKOUT, 0, -1), rnode(RCLK, 0, 24, 16) },
  { pnode(CMUXCR, 0, 37, CLKOUT, 1, -1), rnode(RCLK, 0, 24, 17) },
  { pnode(CMUXCR, 0, 37, CLKOUT, 2, -1), rnode(RCLK, 0, 24, 18) },
  { pnode(CMUXCR, 0, 37, CLKOUT, 3, -1), rnode(RCLK, 0, 24, 19) },
  { pnode(CMUXCR, 0, 37, CLKOUT, 4, -1), rnode(RCLK, 0, 24, 20) },
  { pnode(CMUXCR, 0, 37, CLKOUT, 5, -1), rnode(RCLK, 0, 24, 21) },
  { pnode(CMUXP, 0, 37, CLKOUT, -1, 0), rnode(PCLK, 1, 24, 5) },
  { pnode(CMUXCR, 0, 37, CLKFBOUT, -1, 0), rnode(RCLKFB, 12, 23, 0) },
  { pnode(CMUXP, 0, 37, CLKIN, -1, 0), rnode(DCMUX, 9, 28, 0) },
  { pnode(CMUXCR, 0, 37, CLKIN, -1, 0), rnode(DCMUX, 1, 39, 0) },
  { pnode(CMUXCR, 0, 37, CLKIN, -1, 1), rnode(DCMUX, 1, 39, 2) },
  { pnode(CMUXCR, 0, 37, CLKIN, -1, 2), rnode(DCMUX, 1, 39, 4) },
  { pnode(CMUXCR, 0, 37, CLKIN, -1, 3), rnode(DCMUX, 1, 39, 6) },
  { pnode(CMUXCR, 0, 37, ENABLE, 0, -1), rnode(GOUT, 1, 39, 0) },
  { pnode(CMUXCR, 0, 37, ENABLE, 1, -1), rnode(GOUT, 1, 39, 10) },
  { pnode(CMUXCR, 0, 37, ENABLE, 2, -1), rnode(GOUT, 1, 39, 9) },
  { pnode(CMUXCR, 0, 37, ENABLE, 3, -1), rnode(GOUT, 1, 39, 11) },
  { pnode(CMUXCR, 0, 37, ENABLE, 4, -1), rnode(GOUT, 1, 39, 6) },
  { pnode(CMUXCR, 0, 37, ENABLE, 5, -1), rnode(GOUT, 1, 39, 7) },
  { pnode(CMUXP, 0, 38, CLKOUT, -1, 0), rnode(PCLK, 1, 24, 4) },
  { pnode(CMUXP, 0, 38, CLKIN, -1, 0), rnode(DCMUX, 9, 27, 0) },
  { pnode(CMUXCR, 3, 0, CLKOUT, 0, -1), rnode(RCLK, 0, 4, 16) },
  { pnode(CMUXCR, 3, 0, CLKOUT, 1, -1), rnode(RCLK, 0, 4, 17) },
  { pnode(CMUXCR, 3, 0, CLKOUT, 2, -1), rnode(RCLK, 0, 4, 18) },
  { pnode(CMUXCR, 3, 0, CLKOUT, 3, -1), rnode(RCLK, 0, 4, 19) },
  { pnode(CMUXCR, 3, 0, CLKOUT, 4, -1), rnode(RCLK, 0, 4, 20) },
  { pnode(CMUXCR, 3, 0, CLKOUT, 5, -1), rnode(RCLK, 0, 4, 21) },
  { pnode(CMUXCR, 3, 0, CLKIN, -1, 0), rnode(DCMUX, 1, 0, 0) },
  { pnode(CMUXCR, 3, 0, CLKIN, -1, 1), rnode(DCMUX, 1, 0, 2) },
  { pnode(CMUXCR, 3, 0, CLKIN, -1, 2), rnode(DCMUX, 1, 0, 4) },
  { pnode(CMUXCR, 3, 0, CLKIN, -1, 3), rnode(DCMUX, 1, 0, 6) },
  { pnode(CMUXCR, 3, 0, ENABLE, 0, -1), rnode(GOUT, 1, 0, 0) },
  { pnode(CMUXCR, 3, 0, ENABLE, 1, -1), rnode(GOUT, 1, 0, 10) },
  { pnode(CMUXCR, 3, 0, ENABLE, 2, -1), rnode(GOUT, 1, 0, 9) },
  { pnode(CMUXCR, 3, 0, ENABLE, 3, -1), rnode(GOUT, 1, 0, 11) },
  { pnode(CMUXCR, 3, 0, ENABLE, 4, -1), rnode(GOUT, 1, 0, 6) },
  { pnode(CMUXCR, 3, 0, ENABLE, 5, -1), rnode(GOUT, 1, 0, 7) },
  { pnode(CMUXVG, 25, 0, CLKOUT, 0, -1), rnode(GCLK, 0, 8, 4) },
  { pnode(CMUXVG, 25, 0, CLKOUT, 1, -1), rnode(GCLK, 0, 8, 5) },
  { pnode(CMUXVG, 25, 0, CLKOUT, 2, -1), rnode(GCLK, 0, 8, 6) },
  { pnode(CMUXVG, 25, 0, CLKOUT, 3, -1), rnode(GCLK, 0, 8, 7) },
  { pnode(CMUXVR, 25, 0, CLKOUT, 0, -1), rnode(RCLK, 0, 4, 0) },
  { pnode(CMUXVR, 25, 0, CLKOUT, 1, -1), rnode(RCLK, 0, 4, 1) },
  { pnode(CMUXVR, 25, 0, CLKOUT, 2, -1), rnode(RCLK, 0, 4, 2) },
  { pnode(CMUXVR, 25, 0, CLKOUT, 3, -1), rnode(RCLK, 0, 4, 3) },
  { pnode(CMUXVR, 25, 0, CLKOUT, 4, -1), rnode(RCLK, 0, 4, 4) },
  { pnode(CMUXVR, 25, 0, CLKOUT, 5, -1), rnode(RCLK, 0, 4, 5) },
  { pnode(CMUXVR, 25, 0, CLKOUT, 6, -1), rnode(RCLK, 0, 4, 6) },
  { pnode(CMUXVR, 25, 0, CLKOUT, 7, -1), rnode(RCLK, 0, 4, 7) },
  { pnode(CMUXVR, 25, 0, CLKOUT, 8, -1), rnode(RCLK, 0, 4, 8) },
  { pnode(CMUXVR, 25, 0, CLKOUT, 9, -1), rnode(RCLK, 0, 4, 9) },
  { pnode(CMUXVR, 25, 0, CLKOUT, 10, -1), rnode(RCLK, 24, 4, 0) },
  { pnode(CMUXVR, 25, 0, CLKOUT, 11, -1), rnode(RCLK, 24, 4, 1) },
  { pnode(CMUXVR, 25, 0, CLKOUT, 12, -1), rnode(RCLK, 24, 4, 2) },
  { pnode(CMUXVR, 25, 0, CLKOUT, 13, -1), rnode(RCLK, 24, 4, 3) },
  { pnode(CMUXVR, 25, 0, CLKOUT, 14, -1), rnode(RCLK, 24, 4, 4) },
  { pnode(CMUXVR, 25, 0, CLKOUT, 15, -1), rnode(RCLK, 24, 4, 5) },
  { pnode(CMUXVR, 25, 0, CLKOUT, 16, -1), rnode(RCLK, 24, 4, 6) },
  { pnode(CMUXVR, 25, 0, CLKOUT, 17, -1), rnode(RCLK, 24, 4, 7) },
  { pnode(CMUXVR, 25, 0, CLKOUT, 18, -1), rnode(RCLK, 24, 4, 8) },
  { pnode(CMUXVR, 25, 0, CLKOUT, 19, -1), rnode(RCLK, 24, 4, 9) },
  { pnode(CMUXVG, 25, 0, CLKFBOUT, -1, 2), rnode(GCLKFB, 35, 4, 0) },
  { pnode(CMUXVG, 25, 0, SWITCHCLK, 0, -1), rnode(GIN, 22, 0, 16) },
  { pnode(CMUXVG, 25, 0, SWITCHCLK, 1, -1), rnode(GIN, 24, 0, 2) },
  { pnode(CMUXVG, 25, 0, SWITCHCLK, 2, -1), rnode(GIN, 22, 0, 14) },
  { pnode(CMUXVG, 25, 0, SWITCHCLK, 3, -1), rnode(GIN, 24, 0, 0) },
  { pnode(CMUXVG, 25, 0, SYN_EN, 0, -1), rnode(GIN, 22, 0, 15) },
  { pnode(CMUXVG, 25, 0, SYN_EN, 1, -1), rnode(GIN, 24, 0, 3) },
  { pnode(CMUXVG, 25, 0, SYN_EN, 2, -1), rnode(GIN, 22, 0, 13) },
  { pnode(CMUXVG, 25, 0, SYN_EN, 3, -1), rnode(GIN, 24, 0, 1) },
  { pnode(CMUXVG, 25, 0, CLKIN, -1, 0), rnode(DCMUX, 22, 0, 14) },
  { pnode(CMUXVG, 25, 0, CLKIN, -1, 1), rnode(DCMUX, 24, 0, 2) },
  { pnode(CMUXVG, 25, 0, CLKIN, -1, 2), rnode(DCMUX, 22, 0, 12) },
  { pnode(CMUXVG, 25, 0, CLKIN, -1, 3), rnode(DCMUX, 24, 0, 0) },
  { pnode(CMUXVR, 25, 0, CLKIN, -1, 0), rnode(DCMUX, 22, 0, 8) },
  { pnode(CMUXVR, 25, 0, CLKIN, -1, 1), rnode(DCMUX, 24, 0, 6) },
  { pnode(CMUXVR, 25, 0, CLKIN, -1, 2), rnode(DCMUX, 22, 0, 10) },
  { pnode(CMUXVR, 25, 0, CLKIN, -1, 3), rnode(DCMUX, 24, 0, 4) },
  { pnode(CMUXVG, 25, 0, SWITCHIN, 0, 0), rnode(GOUT, 22, 0, 32) },
  { pnode(CMUXVG, 25, 0, SWITCHIN, 1, 0), rnode(GOUT, 22, 0, 37) },
  { pnode(CMUXVG, 25, 0, SWITCHIN, 2, 0), rnode(GOUT, 24, 0, 2) },
  { pnode(CMUXVG, 25, 0, SWITCHIN, 3, 0), rnode(GOUT, 24, 0, 1) },
  { pnode(CMUXVG, 25, 0, SWITCHIN, 0, 1), rnode(GOUT, 22, 0, 35) },
  { pnode(CMUXVG, 25, 0, SWITCHIN, 1, 1), rnode(GOUT, 22, 0, 36) },
  { pnode(CMUXVG, 25, 0, SWITCHIN, 2, 1), rnode(GOUT, 24, 0, 6) },
  { pnode(CMUXVG, 25, 0, SWITCHIN, 3, 1), rnode(GOUT, 24, 0, 7) },
  { pnode(CMUXVG, 25, 0, BURSTCNT, -1, 0), rnode(GOUT, 22, 0, 26) },
  { pnode(CMUXVG, 25, 0, BURSTCNT, -1, 1), rnode(GOUT, 24, 0, 3) },
  { pnode(CMUXVG, 25, 0, BURSTCNT, -1, 2), rnode(GOUT, 24, 0, 8) },
  { pnode(CMUXVG, 25, 0, ENABLE, 0, -1), rnode(GOUT, 24, 0, 9) },
  { pnode(CMUXVG, 25, 0, ENABLE, 1, -1), rnode(GOUT, 24, 0, 4) },
  { pnode(CMUXVG, 25, 0, ENABLE, 2, -1), rnode(GOUT, 24, 0, 11) },
  { pnode(CMUXVG, 25, 0, ENABLE, 3, -1), rnode(GOUT, 24, 0, 5) },
  { pnode(CMUXVR, 25, 0, ENABLE, 0, -1), rnode(GOUT, 24, 0, 10) },
  { pnode(CMUXVR, 25, 0, ENABLE, 1, -1), rnode(GOUT, 24, 0, 0) },
  { pnode(CMUXVR, 25, 0, ENABLE, 2, -1), rnode(GOUT, 22, 0, 33) },
  { pnode(CMUXVR, 25, 0, ENABLE, 3, -1), rnode(GOUT, 22, 0, 31) },
  { pnode(CMUXVR, 25, 0, ENABLE, 4, -1), rnode(GOUT, 22, 0, 30) },
  { pnode(CMUXVR, 25, 0, ENABLE, 5, -1), rnode(GOUT, 22, 0, 29) },
  { pnode(CMUXVR, 25, 0, ENABLE, 6, -1), rnode(GOUT, 22, 0, 34) },
  { pnode(CMUXVR, 25, 0, ENABLE, 7, -1), rnode(GOUT, 22, 0, 28) },
  { pnode(CMUXVR, 25, 0, ENABLE, 8, -1), rnode(GOUT, 22, 0, 27) },
  { pnode(CMUXVR, 25, 0, ENABLE, 9, -1), rnode(GOUT, 22, 0, 38) },
  { pnode(CMUXVR, 25, 0, ENABLE, 10, -1), rnode(GOUT, 24, 0, 12) },
  { pnode(CMUXVR, 25, 0, ENABLE, 11, -1), rnode(GOUT, 24, 0, 17) },
  { pnode(CMUXVR, 25, 0, ENABLE, 12, -1), rnode(GOUT, 24, 0, 13) },
  { pnode(CMUXVR, 25, 0, ENABLE, 13, -1), rnode(GOUT, 24, 0, 18) },
  { pnode(CMUXVR, 25, 0, ENABLE, 14, -1), rnode(GOUT, 24, 0, 14) },
  { pnode(CMUXVR, 25, 0, ENABLE, 15, -1), rnode(GOUT, 24, 0, 19) },
  { pnode(CMUXVR, 25, 0, ENABLE, 16, -1), rnode(GOUT, 24, 0, 15) },
  { pnode(CMUXVR, 25, 0, ENABLE, 17, -1), rnode(GOUT, 24, 0, 20) },
  { pnode(CMUXVR, 25, 0, ENABLE, 18, -1), rnode(GOUT, 24, 0, 16) },
  { pnode(CMUXVR, 25, 0, ENABLE, 19, -1), rnode(GOUT, 24, 0, 21) },
  { pnode(CMUXVG, 26, 39, CLKOUT, 0, -1), rnode(GCLK, 0, 8, 12) },
  { pnode(CMUXVG, 26, 39, CLKOUT, 1, -1), rnode(GCLK, 0, 8, 13) },
  { pnode(CMUXVG, 26, 39, CLKOUT, 2, -1), rnode(GCLK, 0, 8, 14) },
  { pnode(CMUXVG, 26, 39, CLKOUT, 3, -1), rnode(GCLK, 0, 8, 15) },
  { pnode(CMUXVR, 26, 39, CLKOUT, 0, -1), rnode(RCLK, 0, 24, 0) },
  { pnode(CMUXVR, 26, 39, CLKOUT, 1, -1), rnode(RCLK, 0, 24, 1) },
  { pnode(CMUXVR, 26, 39, CLKOUT, 2, -1), rnode(RCLK, 0, 24, 2) },
  { pnode(CMUXVR, 26, 39, CLKOUT, 3, -1), rnode(RCLK, 0, 24, 3) },
  { pnode(CMUXVR, 26, 39, CLKOUT, 4, -1), rnode(RCLK, 0, 24, 4) },
  { pnode(CMUXVR, 26, 39, CLKOUT, 5, -1), rnode(RCLK, 0, 24, 5) },
  { pnode(CMUXVR, 26, 39, CLKOUT, 6, -1), rnode(RCLK, 0, 24, 6) },
  { pnode(CMUXVR, 26, 39, CLKOUT, 7, -1), rnode(RCLK, 0, 24, 7) },
  { pnode(CMUXVR, 26, 39, CLKOUT, 8, -1), rnode(RCLK, 0, 24, 8) },
  { pnode(CMUXVR, 26, 39, CLKOUT, 9, -1), rnode(RCLK, 0, 24, 9) },
  { pnode(CMUXVR, 26, 39, CLKOUT, 10, -1), rnode(RCLK, 24, 24, 0) },
  { pnode(CMUXVR, 26, 39, CLKOUT, 11, -1), rnode(RCLK, 24, 24, 1) },
  { pnode(CMUXVR, 26, 39, CLKOUT, 12, -1), rnode(RCLK, 24, 24, 2) },
  { pnode(CMUXVR, 26, 39, CLKOUT, 13, -1), rnode(RCLK, 24, 24, 3) },
  { pnode(CMUXVR, 26, 39, CLKOUT, 14, -1), rnode(RCLK, 24, 24, 4) },
  { pnode(CMUXVR, 26, 39, CLKOUT, 15, -1), rnode(RCLK, 24, 24, 5) },
  { pnode(CMUXVR, 26, 39, CLKOUT, 16, -1), rnode(RCLK, 24, 24, 6) },
  { pnode(CMUXVR, 26, 39, CLKOUT, 17, -1), rnode(RCLK, 24, 24, 7) },
  { pnode(CMUXVR, 26, 39, CLKOUT, 18, -1), rnode(RCLK, 24, 24, 8) },
  { pnode(CMUXVR, 26, 39, CLKOUT, 19, -1), rnode(RCLK, 24, 24, 9) },
  { pnode(CMUXVG, 26, 39, CLKFBOUT, -1, 1), rnode(GCLKFB, 12, 23, 0) },
  { pnode(CMUXVG, 26, 39, CLKFBOUT, -1, 2), rnode(GCLKFB, 35, 23, 0) },
  { pnode(CMUXVG, 26, 39, SWITCHCLK, 0, -1), rnode(GIN, 22, 39, 16) },
  { pnode(CMUXVG, 26, 39, SWITCHCLK, 1, -1), rnode(GIN, 24, 39, 2) },
  { pnode(CMUXVG, 26, 39, SWITCHCLK, 2, -1), rnode(GIN, 22, 39, 14) },
  { pnode(CMUXVG, 26, 39, SWITCHCLK, 3, -1), rnode(GIN, 24, 39, 0) },
  { pnode(CMUXVG, 26, 39, SYN_EN, 0, -1), rnode(GIN, 22, 39, 15) },
  { pnode(CMUXVG, 26, 39, SYN_EN, 1, -1), rnode(GIN, 24, 39, 3) },
  { pnode(CMUXVG, 26, 39, SYN_EN, 2, -1), rnode(GIN, 22, 39, 13) },
  { pnode(CMUXVG, 26, 39, SYN_EN, 3, -1), rnode(GIN, 24, 39, 1) },
  { pnode(CMUXVG, 26, 39, CLKIN, -1, 0), rnode(DCMUX, 22, 39, 14) },
  { pnode(CMUXVG, 26, 39, CLKIN, -1, 1), rnode(DCMUX, 24, 39, 2) },
  { pnode(CMUXVG, 26, 39, CLKIN, -1, 2), rnode(DCMUX, 22, 39, 12) },
  { pnode(CMUXVG, 26, 39, CLKIN, -1, 3), rnode(DCMUX, 24, 39, 0) },
  { pnode(CMUXVR, 26, 39, CLKIN, -1, 0), rnode(DCMUX, 22, 39, 8) },
  { pnode(CMUXVR, 26, 39, CLKIN, -1, 1), rnode(DCMUX, 24, 39, 6) },
  { pnode(CMUXVR, 26, 39, CLKIN, -1, 2), rnode(DCMUX, 22, 39, 10) },
  { pnode(CMUXVR, 26, 39, CLKIN, -1, 3), rnode(DCMUX, 24, 39, 4) },
  { pnode(CMUXVG, 26, 39, SWITCHIN, 0, 0), rnode(GOUT, 22, 39, 32) },
  { pnode(CMUXVG, 26, 39, SWITCHIN, 1, 0), rnode(GOUT, 22, 39, 37) },
  { pnode(CMUXVG, 26, 39, SWITCHIN, 2, 0), rnode(GOUT, 24, 39, 2) },
  { pnode(CMUXVG, 26, 39, SWITCHIN, 3, 0), rnode(GOUT, 24, 39, 1) },
  { pnode(CMUXVG, 26, 39, SWITCHIN, 0, 1), rnode(GOUT, 22, 39, 35) },
  { pnode(CMUXVG, 26, 39, SWITCHIN, 1, 1), rnode(GOUT, 22, 39, 36) },
  { pnode(CMUXVG, 26, 39, SWITCHIN, 2, 1), rnode(GOUT, 24, 39, 6) },
  { pnode(CMUXVG, 26, 39, SWITCHIN, 3, 1), rnode(GOUT, 24, 39, 7) },
  { pnode(CMUXVG, 26, 39, BURSTCNT, -1, 0), rnode(GOUT, 22, 39, 26) },
  { pnode(CMUXVG, 26, 39, BURSTCNT, -1, 1), rnode(GOUT, 24, 39, 3) },
  { pnode(CMUXVG, 26, 39, BURSTCNT, -1, 2), rnode(GOUT, 24, 39, 8) },
  { pnode(CMUXVG, 26, 39, ENABLE, 0, -1), rnode(GOUT, 24, 39, 9) },
  { pnode(CMUXVG, 26, 39, ENABLE, 1, -1), rnode(GOUT, 24, 39, 4) },
  { pnode(CMUXVG, 26, 39, ENABLE, 2, -1), rnode(GOUT, 24, 39, 11) },
  { pnode(CMUXVG, 26, 39, ENABLE, 3, -1), rnode(GOUT, 24, 39, 5) },
  { pnode(CMUXVR, 26, 39, ENABLE, 0, -1), rnode(GOUT, 24, 39, 10) },
  { pnode(CMUXVR, 26, 39, ENABLE, 1, -1), rnode(GOUT, 24, 39, 0) },
  { pnode(CMUXVR, 26, 39, ENABLE, 2, -1), rnode(GOUT, 22, 39, 33) },
  { pnode(CMUXVR, 26, 39, ENABLE, 3, -1), rnode(GOUT, 22, 39, 31) },
  { pnode(CMUXVR, 26, 39, ENABLE, 4, -1), rnode(GOUT, 22, 39, 30) },
  { pnode(CMUXVR, 26, 39, ENABLE, 5, -1), rnode(GOUT, 22, 39, 29) },
  { pnode(CMUXVR, 26, 39, ENABLE, 6, -1), rnode(GOUT, 22, 39, 34) },
  { pnode(CMUXVR, 26, 39, ENABLE, 7, -1), rnode(GOUT, 22, 39, 28) },
  { pnode(CMUXVR, 26, 39, ENABLE, 8, -1), rnode(GOUT, 22, 39, 27) },
  { pnode(CMUXVR, 26, 39, ENABLE, 9, -1), rnode(GOUT, 22, 39, 38) },
  { pnode(CMUXVR, 26, 39, ENABLE, 10, -1), rnode(GOUT, 24, 39, 12) },
  { pnode(CMUXVR, 26, 39, ENABLE, 11, -1), rnode(GOUT, 24, 39, 17) },
  { pnode(CMUXVR, 26, 39, ENABLE, 12, -1), rnode(GOUT, 24, 39, 13) },
  { pnode(CMUXVR, 26, 39, ENABLE, 13, -1), rnode(GOUT, 24, 39, 18) },
  { pnode(CMUXVR, 26, 39, ENABLE, 14, -1), rnode(GOUT, 24, 39, 14) },
  { pnode(CMUXVR, 26, 39, ENABLE, 15, -1), rnode(GOUT, 24, 39, 19) },
  { pnode(CMUXVR, 26, 39, ENABLE, 16, -1), rnode(GOUT, 24, 39, 15) },
  { pnode(CMUXVR, 26, 39, ENABLE, 17, -1), rnode(GOUT, 24, 39, 20) },
  { pnode(CMUXVR, 26, 39, ENABLE, 18, -1), rnode(GOUT, 24, 39, 16) },
  { pnode(CMUXVR, 26, 39, ENABLE, 19, -1), rnode(GOUT, 24, 39, 26) },
  { pnode(CMUXCR, 48, 2, CLKOUT, 0, -1), rnode(RCLK, 24, 4, 16) },
  { pnode(CMUXCR, 48, 2, CLKOUT, 1, -1), rnode(RCLK, 24, 4, 17) },
  { pnode(CMUXCR, 48, 2, CLKOUT, 2, -1), rnode(RCLK, 24, 4, 18) },
  { pnode(CMUXCR, 48, 2, CLKOUT, 3, -1), rnode(RCLK, 24, 4, 19) },
  { pnode(CMUXCR, 48, 2, CLKOUT, 4, -1), rnode(RCLK, 24, 4, 20) },
  { pnode(CMUXCR, 48, 2, CLKOUT, 5, -1), rnode(RCLK, 24, 4, 21) },
  { pnode(CMUXCR, 48, 2, CLKFBOUT, -1, 0), rnode(RCLKFB, 35, 4, 0) },
  { pnode(CMUXCR, 48, 2, CLKIN, -1, 0), rnode(DCMUX, 47, 0, 14) },
  { pnode(CMUXCR, 48, 2, CLKIN, -1, 1), rnode(DCMUX, 47, 0, 12) },
  { pnode(CMUXCR, 48, 2, CLKIN, -1, 2), rnode(DCMUX, 47, 0, 10) },
  { pnode(CMUXCR, 48, 2, CLKIN, -1, 3), rnode(DCMUX, 47, 0, 8) },
  { pnode(CMUXCR, 48, 2, ENABLE, 0, -1), rnode(GOUT, 47, 0, 33) },
  { pnode(CMUXCR, 48, 2, ENABLE, 1, -1), rnode(GOUT, 47, 0, 32) },
  { pnode(CMUXCR, 48, 2, ENABLE, 2, -1), rnode(GOUT, 47, 0, 37) },
  { pnode(CMUXCR, 48, 2, ENABLE, 3, -1), rnode(GOUT, 47, 0, 35) },
  { pnode(CMUXCR, 48, 2, ENABLE, 4, -1), rnode(GOUT, 47, 0, 36) },
  { pnode(CMUXCR, 48, 2, ENABLE, 5, -1), rnode(GOUT, 47, 0, 26) },
  { pnode(CMUXHG, 48, 9, CLKOUT, 0, -1), rnode(GCLK, 0, 8, 8) },
  { pnode(CMUXHG, 48, 9, CLKOUT, 1, -1), rnode(GCLK, 0, 8, 9) },
  { pnode(CMUXHG, 48, 9, CLKOUT, 2, -1), rnode(GCLK, 0, 8, 10) },
  { pnode(CMUXHG, 48, 9, CLKOUT, 3, -1), rnode(GCLK, 0, 8, 11) },
  { pnode(CMUXHR, 48, 9, CLKOUT, 0, -1), rnode(RCLK, 24, 24, 10) },
  { pnode(CMUXHR, 48, 9, CLKOUT, 1, -1), rnode(RCLK, 24, 24, 11) },
  { pnode(CMUXHR, 48, 9, CLKOUT, 2, -1), rnode(RCLK, 24, 24, 12) },
  { pnode(CMUXHR, 48, 9, CLKOUT, 3, -1), rnode(RCLK, 24, 24, 13) },
  { pnode(CMUXHR, 48, 9, CLKOUT, 4, -1), rnode(RCLK, 24, 24, 14) },
  { pnode(CMUXHR, 48, 9, CLKOUT, 5, -1), rnode(RCLK, 24, 24, 15) },
  { pnode(CMUXHR, 48, 9, CLKOUT, 6, -1), rnode(RCLK, 24, 4, 10) },
  { pnode(CMUXHR, 48, 9, CLKOUT, 7, -1), rnode(RCLK, 24, 4, 11) },
  { pnode(CMUXHR, 48, 9, CLKOUT, 8, -1), rnode(RCLK, 24, 4, 12) },
  { pnode(CMUXHR, 48, 9, CLKOUT, 9, -1), rnode(RCLK, 24, 4, 13) },
  { pnode(CMUXHR, 48, 9, CLKOUT, 10, -1), rnode(RCLK, 24, 4, 14) },
  { pnode(CMUXHR, 48, 9, CLKOUT, 11, -1), rnode(RCLK, 24, 4, 15) },
  { pnode(CMUXHG, 48, 9, SWITCHCLK, 0, -1), rnode(GIN, 48, 9, 77) },
  { pnode(CMUXHG, 48, 9, SWITCHCLK, 1, -1), rnode(GIN, 48, 9, 79) },
  { pnode(CMUXHG, 48, 9, SWITCHCLK, 2, -1), rnode(GIN, 48, 8, 0) },
  { pnode(CMUXHG, 48, 9, SWITCHCLK, 3, -1), rnode(GIN, 48, 8, 2) },
  { pnode(CMUXHG, 48, 9, SYN_EN, 0, -1), rnode(GIN, 48, 9, 78) },
  { pnode(CMUXHG, 48, 9, SYN_EN, 1, -1), rnode(GIN, 48, 9, 80) },
  { pnode(CMUXHG, 48, 9, SYN_EN, 2, -1), rnode(GIN, 48, 8, 1) },
  { pnode(CMUXHG, 48, 9, SYN_EN, 3, -1), rnode(GIN, 48, 8, 3) },
  { pnode(CMUXHG, 48, 9, CLKIN, -1, 0), rnode(DCMUX, 48, 9, 12) },
  { pnode(CMUXHG, 48, 9, CLKIN, -1, 1), rnode(DCMUX, 48, 9, 14) },
  { pnode(CMUXHG, 48, 9, CLKIN, -1, 2), rnode(DCMUX, 48, 8, 3) },
  { pnode(CMUXHG, 48, 9, CLKIN, -1, 3), rnode(DCMUX, 48, 8, 1) },
  { pnode(CMUXHR, 48, 9, CLKIN, -1, 0), rnode(DCMUX, 48, 9, 13) },
  { pnode(CMUXHR, 48, 9, CLKIN, -1, 1), rnode(DCMUX, 48, 9, 15) },
  { pnode(CMUXHR, 48, 9, CLKIN, -1, 2), rnode(DCMUX, 48, 8, 0) },
  { pnode(CMUXHR, 48, 9, CLKIN, -1, 3), rnode(DCMUX, 48, 8, 2) },
  { pnode(CMUXHG, 48, 9, SWITCHIN, 0, 0), rnode(GOUT, 48, 9, 65) },
  { pnode(CMUXHG, 48, 9, SWITCHIN, 1, 0), rnode(GOUT, 48, 9, 66) },
  { pnode(CMUXHG, 48, 9, SWITCHIN, 2, 0), rnode(GOUT, 48, 9, 70) },
  { pnode(CMUXHG, 48, 9, SWITCHIN, 3, 0), rnode(GOUT, 48, 9, 71) },
  { pnode(CMUXHG, 48, 9, SWITCHIN, 0, 1), rnode(GOUT, 48, 8, 1) },
  { pnode(CMUXHG, 48, 9, SWITCHIN, 1, 1), rnode(GOUT, 48, 8, 2) },
  { pnode(CMUXHG, 48, 9, SWITCHIN, 2, 1), rnode(GOUT, 48, 8, 7) },
  { pnode(CMUXHG, 48, 9, SWITCHIN, 3, 1), rnode(GOUT, 48, 8, 6) },
  { pnode(CMUXHG, 48, 9, BURSTCNT, -1, 0), rnode(GOUT, 48, 9, 69) },
  { pnode(CMUXHG, 48, 9, BURSTCNT, -1, 1), rnode(GOUT, 48, 8, 0) },
  { pnode(CMUXHG, 48, 9, BURSTCNT, -1, 2), rnode(GOUT, 48, 8, 3) },
  { pnode(CMUXHG, 48, 9, ENABLE, 0, -1), rnode(GOUT, 48, 9, 68) },
  { pnode(CMUXHG, 48, 9, ENABLE, 1, -1), rnode(GOUT, 48, 9, 67) },
  { pnode(CMUXHG, 48, 9, ENABLE, 2, -1), rnode(GOUT, 48, 8, 4) },
  { pnode(CMUXHG, 48, 9, ENABLE, 3, -1), rnode(GOUT, 48, 8, 5) },
  { pnode(CMUXHR, 48, 9, ENABLE, 0, -1), rnode(GOUT, 48, 9, 11) },
  { pnode(CMUXHR, 48, 9, ENABLE, 1, -1), rnode(GOUT, 48, 9, 22) },
  { pnode(CMUXHR, 48, 9, ENABLE, 2, -1), rnode(GOUT, 48, 9, 32) },
  { pnode(CMUXHR, 48, 9, ENABLE, 3, -1), rnode(GOUT, 48, 9, 55) },
  { pnode(CMUXHR, 48, 9, ENABLE, 4, -1), rnode(GOUT, 48, 9, 63) },
  { pnode(CMUXHR, 48, 9, ENABLE, 5, -1), rnode(GOUT, 48, 9, 64) },
  { pnode(CMUXHR, 48, 9, ENABLE, 6, -1), rnode(GOUT, 48, 8, 40) },
  { pnode(CMUXHR, 48, 9, ENABLE, 7, -1), rnode(GOUT, 48, 8, 27) },
  { pnode(CMUXHR, 48, 9, ENABLE, 8, -1), rnode(GOUT, 48, 8, 17) },
  { pnode(CMUXHR, 48, 9, ENABLE, 9, -1), rnode(GOUT, 48, 8, 10) },
  { pnode(CMUXHR, 48, 9, ENABLE, 10, -1), rnode(GOUT, 48, 8, 9) },
  { pnode(CMUXHR, 48, 9, ENABLE, 11, -1), rnode(GOUT, 48, 8, 8) },
  { pnode(CMUXCR, 48, 37, CLKOUT, 0, -1), rnode(RCLK, 24, 24, 16) },
  { pnode(CMUXCR, 48, 37, CLKOUT, 1, -1), rnode(RCLK, 24, 24, 17) },
  { pnode(CMUXCR, 48, 37, CLKOUT, 2, -1), rnode(RCLK, 24, 24, 18) },
  { pnode(CMUXCR, 48, 37, CLKOUT, 3, -1), rnode(RCLK, 24, 24, 19) },
  { pnode(CMUXCR, 48, 37, CLKOUT, 4, -1), rnode(RCLK, 24, 24, 20) },
  { pnode(CMUXCR, 48, 37, CLKOUT, 5, -1), rnode(RCLK, 24, 24, 21) },
  { pnode(CMUXCR, 48, 37, CLKFBOUT, -1, 0), rnode(RCLKFB, 35, 23, 0) },
  { pnode(CMUXCR, 48, 37, CLKIN, -1, 0), rnode(DCMUX, 47, 39, 14) },
  { pnode(CMUXCR, 48, 37, CLKIN, -1, 1), rnode(DCMUX, 47, 39, 12) },
  { pnode(CMUXCR, 48, 37, CLKIN, -1, 2), rnode(DCMUX, 47, 39, 10) },
  { pnode(CMUXCR, 48, 37, CLKIN, -1, 3), rnode(DCMUX, 47, 39, 8) },
  { pnode(CMUXCR, 48, 37, ENABLE, 0, -1), rnode(GOUT, 47, 39, 33) },
  { pnode(CMUXCR, 48, 37, ENABLE, 1, -1), rnode(GOUT, 47, 39, 32) },
  { pnode(CMUXCR, 48, 37, ENABLE, 2, -1), rnode(GOUT, 47, 39, 37) },
  { pnode(CMUXCR, 48, 37, ENABLE, 3, -1), rnode(GOUT, 47, 39, 35) },
  { pnode(CMUXCR, 48, 37, ENABLE, 4, -1), rnode(GOUT, 47, 39, 36) },
  { pnode(CMUXCR, 48, 37, ENABLE, 5, -1), rnode(GOUT, 47, 39, 26) },
  { pnode(FPLL, 0, 13, ATPGMODE, -1, -1), rnode(GOUT, 9, 27, 17) },
  { pnode(FPLL, 0, 13, CLKEN, -1, 0), rnode(GOUT, 9, 28, 53) },
  { pnode(FPLL, 0, 13, CLKEN, -1, 1), rnode(GOUT, 9, 28, 52) },
  { pnode(FPLL, 0, 13, CNT_SEL, -1, 0), rnode(GOUT, 9, 27, 69) },
  { pnode(FPLL, 0, 13, CNT_SEL, -1, 1), rnode(GOUT, 9, 27, 67) },
  { pnode(FPLL, 0, 13, CNT_SEL, -1, 2), rnode(GOUT, 9, 27, 66) },
  { pnode(FPLL, 0, 13, CNT_SEL, -1, 3), rnode(GOUT, 9, 27, 53) },
  { pnode(FPLL, 0, 13, CNT_SEL, -1, 4), rnode(GOUT, 9, 27, 52) },
  { pnode(FPLL, 0, 13, REG_BYTE_EN, -1, 0), rnode(GOUT, 9, 25, 13) },
  { pnode(FPLL, 0, 13, REG_BYTE_EN, -1, 1), rnode(GOUT, 9, 27, 71) },
  { pnode(FPLL, 0, 13, REG_CLK, -1, -1), rnode(DCMUX, 9, 27, 2) },
  { pnode(FPLL, 0, 13, REG_MDIO_DIS, -1, -1), rnode(GOUT, 9, 25, 17) },
  { pnode(FPLL, 0, 13, REG_READ, -1, -1), rnode(GOUT, 9, 25, 18) },
  { pnode(FPLL, 0, 13, REG_REG_ADDR, -1, 0), rnode(GOUT, 9, 27, 49) },
  { pnode(FPLL, 0, 13, REG_REG_ADDR, -1, 1), rnode(GOUT, 9, 27, 48) },
  { pnode(FPLL, 0, 13, REG_REG_ADDR, -1, 2), rnode(GOUT, 9, 27, 35) },
  { pnode(FPLL, 0, 13, REG_REG_ADDR, -1, 3), rnode(GOUT, 9, 27, 34) },
  { pnode(FPLL, 0, 13, REG_REG_ADDR, -1, 4), rnode(GOUT, 9, 27, 32) },
  { pnode(FPLL, 0, 13, REG_REG_ADDR, -1, 5), rnode(GOUT, 9, 27, 31) },
  { pnode(FPLL, 0, 13, REG_RST_N, -1, -1), rnode(GOUT, 9, 28, 71) },
  { pnode(FPLL, 0, 13, REG_SER_SHIFT_LOAD, -1, -1), rnode(GOUT, 9, 25, 14) },
  { pnode(FPLL, 0, 13, REG_WRITE, -1, -1), rnode(GOUT, 9, 25, 32) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 0), rnode(GOUT, 9, 24, 35) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 1), rnode(GOUT, 9, 24, 34) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 2), rnode(GOUT, 9, 24, 32) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 3), rnode(GOUT, 9, 24, 31) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 4), rnode(GOUT, 9, 24, 18) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 5), rnode(GOUT, 9, 24, 17) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 6), rnode(GOUT, 9, 24, 14) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 7), rnode(GOUT, 9, 24, 13) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 8), rnode(GOUT, 9, 25, 71) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 9), rnode(GOUT, 9, 25, 69) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 10), rnode(GOUT, 9, 25, 67) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 11), rnode(GOUT, 9, 25, 66) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 12), rnode(GOUT, 9, 25, 53) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 13), rnode(GOUT, 9, 25, 52) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 14), rnode(GOUT, 9, 25, 49) },
  { pnode(FPLL, 0, 13, REG_WRITEDATA, -1, 15), rnode(GOUT, 9, 25, 48) },
  { pnode(FPLL, 0, 13, EXTSWITCH, -1, -1), rnode(GOUT, 9, 20, 14) },
  { pnode(FPLL, 0, 13, CSR_TEST, -1, -1), rnode(GOUT, 9, 27, 14) },
  { pnode(FPLL, 0, 13, NRESET, -1, -1), rnode(GOUT, 9, 28, 48) },
  { pnode(FPLL, 0, 13, PFDEN, -1, -1), rnode(GOUT, 9, 28, 67) },
  { pnode(FPLL, 0, 13, PHASE_EN, -1, -1), rnode(GOUT, 9, 25, 31) },
  { pnode(FPLL, 0, 13, SCANEN, -1, -1), rnode(GOUT, 9, 27, 18) },
  { pnode(FPLL, 0, 13, UP_DN, -1, -1), rnode(GOUT, 9, 20, 13) },
  { pnode(FPLL, 0, 13, CLK0_BAD, -1, -1), rnode(GIN, 9, 20, 19) },
  { pnode(FPLL, 0, 13, CLK1_BAD, -1, -1), rnode(GIN, 9, 20, 18) },
  { pnode(FPLL, 0, 13, CLKSEL, -1, -1), rnode(GIN, 9, 20, 15) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 0), rnode(GIN, 9, 25, 80) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 1), rnode(GIN, 9, 25, 79) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 2), rnode(GIN, 9, 25, 76) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 3), rnode(GIN, 9, 25, 75) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 4), rnode(GIN, 9, 25, 60) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 5), rnode(GIN, 9, 25, 59) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 6), rnode(GIN, 9, 25, 56) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 7), rnode(GIN, 9, 25, 55) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 8), rnode(GIN, 9, 24, 39) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 9), rnode(GIN, 9, 24, 38) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 10), rnode(GIN, 9, 24, 35) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 11), rnode(GIN, 9, 24, 34) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 12), rnode(GIN, 9, 24, 19) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 13), rnode(GIN, 9, 24, 18) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 14), rnode(GIN, 9, 24, 15) },
  { pnode(FPLL, 0, 13, REG_READDATA, -1, 15), rnode(GIN, 9, 24, 14) },
  { pnode(FPLL, 0, 13, LOCK, -1, -1), rnode(GIN, 9, 28, 60) },
  { pnode(FPLL, 0, 13, PHASE_DONE, -1, -1), rnode(GIN, 9, 25, 38) },
  { pnode(FPLL, 0, 31, ATPGMODE, -1, -1), rnode(GOUT, 1, 39, 5) },
  { pnode(FPLL, 0, 31, CLKEN, -1, 0), rnode(GOUT, 1, 39, 3) },
  { pnode(FPLL, 0, 31, CLKEN, -1, 1), rnode(GOUT, 1, 39, 4) },
  { pnode(FPLL, 0, 31, CNT_SEL, -1, 0), rnode(GOUT, 1, 39, 17) },
  { pnode(FPLL, 0, 31, CNT_SEL, -1, 1), rnode(GOUT, 1, 39, 12) },
  { pnode(FPLL, 0, 31, CNT_SEL, -1, 2), rnode(GOUT, 1, 39, 1) },
  { pnode(FPLL, 0, 31, CNT_SEL, -1, 3), rnode(GOUT, 1, 39, 2) },
  { pnode(FPLL, 0, 31, CNT_SEL, -1, 4), rnode(GOUT, 1, 39, 8) },
  { pnode(FPLL, 0, 31, REG_BYTE_EN, -1, 0), rnode(GOUT, 1, 39, 18) },
  { pnode(FPLL, 0, 31, REG_BYTE_EN, -1, 1), rnode(GOUT, 1, 39, 13) },
  { pnode(FPLL, 0, 31, REG_CLK, -1, -1), rnode(GOUT, 1, 39, 14) },
  { pnode(FPLL, 0, 31, REG_MDIO_DIS, -1, -1), rnode(GOUT, 1, 39, 19) },
  { pnode(FPLL, 0, 31, REG_READ, -1, -1), rnode(GOUT, 1, 39, 15) },
  { pnode(FPLL, 0, 31, REG_REG_ADDR, -1, 0), rnode(GOUT, 1, 39, 24) },
  { pnode(FPLL, 0, 31, REG_REG_ADDR, -1, 1), rnode(GOUT, 1, 39, 23) },
  { pnode(FPLL, 0, 31, REG_REG_ADDR, -1, 2), rnode(GOUT, 1, 39, 22) },
  { pnode(FPLL, 0, 31, REG_REG_ADDR, -1, 3), rnode(GOUT, 1, 39, 21) },
  { pnode(FPLL, 0, 31, REG_REG_ADDR, -1, 4), rnode(GOUT, 1, 39, 16) },
  { pnode(FPLL, 0, 31, REG_REG_ADDR, -1, 5), rnode(GOUT, 1, 39, 20) },
  { pnode(FPLL, 0, 31, REG_RST_N, -1, -1), rnode(GOUT, 1, 39, 25) },
  { pnode(FPLL, 0, 31, REG_SER_SHIFT_LOAD, -1, -1), rnode(GOUT, 1, 39, 50) },
  { pnode(FPLL, 0, 31, REG_WRITE, -1, -1), rnode(GOUT, 1, 39, 49) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 0), rnode(GOUT, 1, 39, 30) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 1), rnode(GOUT, 1, 39, 29) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 2), rnode(GOUT, 1, 39, 34) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 3), rnode(GOUT, 1, 39, 28) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 4), rnode(GOUT, 1, 39, 27) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 5), rnode(GOUT, 1, 39, 38) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 6), rnode(GOUT, 1, 39, 43) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 7), rnode(GOUT, 1, 39, 39) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 8), rnode(GOUT, 1, 39, 44) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 9), rnode(GOUT, 1, 39, 40) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 10), rnode(GOUT, 1, 39, 45) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 11), rnode(GOUT, 1, 39, 41) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 12), rnode(GOUT, 1, 39, 46) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 13), rnode(GOUT, 1, 39, 42) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 14), rnode(GOUT, 1, 39, 47) },
  { pnode(FPLL, 0, 31, REG_WRITEDATA, -1, 15), rnode(GOUT, 1, 39, 48) },
  { pnode(FPLL, 0, 31, EXTSWITCH, -1, -1), rnode(GOUT, 1, 39, 31) },
  { pnode(FPLL, 0, 31, FBCLK_IN_R, -1, -1), rnode(DCMUX, 0, 38, 4) },
  { pnode(FPLL, 0, 31, CSR_TEST, -1, -1), rnode(GOUT, 1, 39, 33) },
  { pnode(FPLL, 0, 31, NRESET, -1, -1), rnode(GOUT, 1, 39, 32) },
  { pnode(FPLL, 0, 31, PFDEN, -1, -1), rnode(GOUT, 1, 39, 37) },
  { pnode(FPLL, 0, 31, PHASE_EN, -1, -1), rnode(GOUT, 1, 39, 35) },
  { pnode(FPLL, 0, 31, SCANEN, -1, -1), rnode(GOUT, 1, 39, 36) },
  { pnode(FPLL, 0, 31, UP_DN, -1, -1), rnode(GOUT, 1, 39, 26) },
  { pnode(FPLL, 0, 31, CLK0_BAD, -1, -1), rnode(GIN, 1, 39, 0) },
  { pnode(FPLL, 0, 31, CLK1_BAD, -1, -1), rnode(GIN, 1, 39, 1) },
  { pnode(FPLL, 0, 31, CLKSEL, -1, -1), rnode(GIN, 1, 39, 2) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 0), rnode(GIN, 1, 39, 20) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 1), rnode(GIN, 1, 39, 21) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 2), rnode(GIN, 1, 39, 22) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 3), rnode(GIN, 1, 39, 23) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 4), rnode(GIN, 1, 39, 24) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 5), rnode(GIN, 1, 39, 25) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 6), rnode(GIN, 1, 39, 12) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 7), rnode(GIN, 1, 39, 11) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 8), rnode(GIN, 1, 39, 10) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 9), rnode(GIN, 1, 39, 9) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 10), rnode(GIN, 1, 39, 8) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 11), rnode(GIN, 1, 39, 7) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 12), rnode(GIN, 1, 39, 6) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 13), rnode(GIN, 1, 39, 5) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 14), rnode(GIN, 1, 39, 4) },
  { pnode(FPLL, 0, 31, REG_READDATA, -1, 15), rnode(GIN, 1, 39, 3) },
  { pnode(FPLL, 0, 31, LOCK, -1, -1), rnode(GIN, 1, 39, 19) },
  { pnode(FPLL, 0, 31, PHASE_DONE, -1, -1), rnode(GIN, 1, 39, 18) },
  { pnode(FPLL, 48, 0, ATPGMODE, -1, -1), rnode(GOUT, 48, 4, 10) },
  { pnode(FPLL, 48, 0, CLKEN, -1, 0), rnode(GOUT, 48, 4, 3) },
  { pnode(FPLL, 48, 0, CLKEN, -1, 1), rnode(GOUT, 48, 5, 70) },
  { pnode(FPLL, 48, 0, CNT_SEL, -1, 0), rnode(GOUT, 48, 4, 25) },
  { pnode(FPLL, 48, 0, CNT_SEL, -1, 1), rnode(GOUT, 48, 4, 24) },
  { pnode(FPLL, 48, 0, CNT_SEL, -1, 2), rnode(GOUT, 48, 4, 21) },
  { pnode(FPLL, 48, 0, CNT_SEL, -1, 3), rnode(GOUT, 48, 4, 19) },
  { pnode(FPLL, 48, 0, CNT_SEL, -1, 4), rnode(GOUT, 48, 4, 18) },
  { pnode(FPLL, 48, 0, REG_BYTE_EN, -1, 0), rnode(GOUT, 48, 3, 54) },
  { pnode(FPLL, 48, 0, REG_BYTE_EN, -1, 1), rnode(GOUT, 48, 4, 26) },
  { pnode(FPLL, 48, 0, REG_CLK, -1, -1), rnode(GOUT, 48, 4, 6) },
  { pnode(FPLL, 48, 0, REG_MDIO_DIS, -1, -1), rnode(GOUT, 48, 3, 69) },
  { pnode(FPLL, 48, 0, REG_READ, -1, -1), rnode(GOUT, 48, 3, 66) },
  { pnode(FPLL, 48, 0, REG_REG_ADDR, -1, 0), rnode(GOUT, 48, 4, 22) },
  { pnode(FPLL, 48, 0, REG_REG_ADDR, -1, 1), rnode(GOUT, 48, 4, 20) },
  { pnode(FPLL, 48, 0, REG_REG_ADDR, -1, 2), rnode(GOUT, 48, 4, 16) },
  { pnode(FPLL, 48, 0, REG_REG_ADDR, -1, 3), rnode(GOUT, 48, 4, 13) },
  { pnode(FPLL, 48, 0, REG_REG_ADDR, -1, 4), rnode(GOUT, 48, 4, 14) },
  { pnode(FPLL, 48, 0, REG_REG_ADDR, -1, 5), rnode(GOUT, 48, 4, 12) },
  { pnode(FPLL, 48, 0, REG_RST_N, -1, -1), rnode(GOUT, 48, 4, 5) },
  { pnode(FPLL, 48, 0, REG_SER_SHIFT_LOAD, -1, -1), rnode(GOUT, 48, 3, 56) },
  { pnode(FPLL, 48, 0, REG_WRITE, -1, -1), rnode(GOUT, 48, 2, 3) },
  { pnode(FPLL, 48, 0, REG_WRITEDATA, -1, 0), rnode(GOUT, 48, 3, 50) },
  { pnode(FPLL, 48, 0, REG_WRITEDATA, -1, 1), rnode(GOUT, 48, 3, 53) },
  { pnode(FPLL, 48, 0, REG_WRITEDATA, -1, 2), rnode(GOUT, 48, 3, 46) },
  { pnode(FPLL, 48, 0, REG_WRITEDATA, -1, 3), rnode(GOUT, 48, 3, 49) },
  { pnode(FPLL, 48, 0, REG_WRITEDATA, -1, 4), rnode(GOUT, 48, 3, 41) },
  { pnode(FPLL, 48, 0, REG_WRITEDATA, -1, 5), rnode(GOUT, 48, 3, 44) },
  { pnode(FPLL, 48, 0, REG_WRITEDATA, -1, 6), rnode(GOUT, 48, 3, 36) },
  { pnode(FPLL, 48, 0, REG_WRITEDATA, -1, 7), rnode(GOUT, 48, 3, 40) },
  { pnode(FPLL, 48, 0, REG_WRITEDATA, -1, 8), rnode(GOUT, 48, 3, 32) },
  { pnode(FPLL, 48, 0, REG_WRITEDATA, -1, 9), rnode(GOUT, 48, 3, 35) },
  { pnode(FPLL, 48, 0, REG_WRITEDATA, -1, 10), rnode(GOUT, 48, 3, 27) },
  { pnode(FPLL, 48, 0, REG_WRITEDATA, -1, 11), rnode(GOUT, 48, 3, 30) },
  { pnode(FPLL, 48, 0, REG_WRITEDATA, -1, 12), rnode(GOUT, 48, 3, 22) },
  { pnode(FPLL, 48, 0, REG_WRITEDATA, -1, 13), rnode(GOUT, 48, 3, 26) },
  { pnode(FPLL, 48, 0, REG_WRITEDATA, -1, 14), rnode(GOUT, 48, 3, 18) },
  { pnode(FPLL, 48, 0, REG_WRITEDATA, -1, 15), rnode(GOUT, 48, 3, 21) },
  { pnode(FPLL, 48, 0, EXTSWITCH, -1, -1), rnode(GOUT, 48, 3, 57) },
  { pnode(FPLL, 48, 0, FBCLK_IN_R, -1, -1), rnode(DCMUX, 48, 1, 4) },
  { pnode(FPLL, 48, 0, CSR_TEST, -1, -1), rnode(GOUT, 48, 4, 8) },
  { pnode(FPLL, 48, 0, NRESET, -1, -1), rnode(GOUT, 48, 4, 0) },
  { pnode(FPLL, 48, 0, PFDEN, -1, -1), rnode(GOUT, 48, 4, 4) },
  { pnode(FPLL, 48, 0, PHASE_EN, -1, -1), rnode(GOUT, 48, 2, 1) },
  { pnode(FPLL, 48, 0, SCANEN, -1, -1), rnode(GOUT, 48, 4, 11) },
  { pnode(FPLL, 48, 0, UP_DN, -1, -1), rnode(GOUT, 48, 3, 55) },
  { pnode(FPLL, 48, 0, CLK0_BAD, -1, -1), rnode(GIN, 48, 3, 66) },
  { pnode(FPLL, 48, 0, CLK1_BAD, -1, -1), rnode(GIN, 48, 3, 63) },
  { pnode(FPLL, 48, 0, CLKSEL, -1, -1), rnode(GIN, 48, 3, 64) },
  { pnode(FPLL, 48, 0, REG_READDATA, -1, 0), rnode(GIN, 48, 3, 36) },
  { pnode(FPLL, 48, 0, REG_READDATA, -1, 1), rnode(GIN, 48, 3, 37) },
  { pnode(FPLL, 48, 0, REG_READDATA, -1, 2), rnode(GIN, 48, 3, 31) },
  { pnode(FPLL, 48, 0, REG_READDATA, -1, 3), rnode(GIN, 48, 3, 32) },
  { pnode(FPLL, 48, 0, REG_READDATA, -1, 4), rnode(GIN, 48, 3, 25) },
  { pnode(FPLL, 48, 0, REG_READDATA, -1, 5), rnode(GIN, 48, 3, 27) },
  { pnode(FPLL, 48, 0, REG_READDATA, -1, 6), rnode(GIN, 48, 3, 20) },
  { pnode(FPLL, 48, 0, REG_READDATA, -1, 7), rnode(GIN, 48, 3, 21) },
  { pnode(FPLL, 48, 0, REG_READDATA, -1, 8), rnode(GIN, 48, 3, 58) },
  { pnode(FPLL, 48, 0, REG_READDATA, -1, 9), rnode(GIN, 48, 3, 60) },
  { pnode(FPLL, 48, 0, REG_READDATA, -1, 10), rnode(GIN, 48, 3, 53) },
  { pnode(FPLL, 48, 0, REG_READDATA, -1, 11), rnode(GIN, 48, 3, 54) },
  { pnode(FPLL, 48, 0, REG_READDATA, -1, 12), rnode(GIN, 48, 3, 48) },
  { pnode(FPLL, 48, 0, REG_READDATA, -1, 13), rnode(GIN, 48, 3, 49) },
  { pnode(FPLL, 48, 0, REG_READDATA, -1, 14), rnode(GIN, 48, 3, 42) },
  { pnode(FPLL, 48, 0, REG_READDATA, -1, 15), rnode(GIN, 48, 3, 44) },
  { pnode(FPLL, 48, 0, LOCK, -1, -1), rnode(GIN, 48, 4, 2) },
  { pnode(FPLL, 48, 0, PHASE_DONE, -1, -1), rnode(GIN, 48, 3, 17) },
  { pnode(FPLL, 48, 31, ATPGMODE, -1, -1), rnode(GOUT, 48, 37, 0) },
  { pnode(FPLL, 48, 31, CLKEN, -1, 0), rnode(GOUT, 48, 37, 18) },
  { pnode(FPLL, 48, 31, CLKEN, -1, 1), rnode(GOUT, 48, 37, 14) },
  { pnode(FPLL, 48, 31, CNT_SEL, -1, 0), rnode(GOUT, 48, 38, 59) },
  { pnode(FPLL, 48, 31, CNT_SEL, -1, 1), rnode(GOUT, 48, 38, 60) },
  { pnode(FPLL, 48, 31, CNT_SEL, -1, 2), rnode(GOUT, 48, 38, 61) },
  { pnode(FPLL, 48, 31, CNT_SEL, -1, 3), rnode(GOUT, 48, 38, 62) },
  { pnode(FPLL, 48, 31, CNT_SEL, -1, 4), rnode(GOUT, 48, 38, 63) },
  { pnode(FPLL, 48, 31, REG_BYTE_EN, -1, 0), rnode(GOUT, 48, 37, 16) },
  { pnode(FPLL, 48, 31, REG_BYTE_EN, -1, 1), rnode(GOUT, 48, 38, 57) },
  { pnode(FPLL, 48, 31, REG_CLK, -1, -1), rnode(GOUT, 48, 37, 3) },
  { pnode(FPLL, 48, 31, REG_MDIO_DIS, -1, -1), rnode(GOUT, 48, 37, 13) },
  { pnode(FPLL, 48, 31, REG_READ, -1, -1), rnode(GOUT, 48, 37, 15) },
  { pnode(FPLL, 48, 31, REG_REG_ADDR, -1, 0), rnode(GOUT, 48, 38, 64) },
  { pnode(FPLL, 48, 31, REG_REG_ADDR, -1, 1), rnode(GOUT, 48, 38, 66) },
  { pnode(FPLL, 48, 31, REG_REG_ADDR, -1, 2), rnode(GOUT, 48, 38, 67) },
  { pnode(FPLL, 48, 31, REG_REG_ADDR, -1, 3), rnode(GOUT, 48, 38, 68) },
  { pnode(FPLL, 48, 31, REG_REG_ADDR, -1, 4), rnode(GOUT, 48, 38, 69) },
  { pnode(FPLL, 48, 31, REG_REG_ADDR, -1, 5), rnode(GOUT, 48, 38, 70) },
  { pnode(FPLL, 48, 31, REG_RST_N, -1, -1), rnode(GOUT, 48, 37, 10) },
  { pnode(FPLL, 48, 31, REG_SER_SHIFT_LOAD, -1, -1), rnode(GOUT, 48, 37, 17) },
  { pnode(FPLL, 48, 31, REG_WRITE, -1, -1), rnode(GOUT, 48, 37, 11) },
  { pnode(FPLL, 48, 31, REG_WRITEDATA, -1, 0), rnode(GOUT, 48, 38, 33) },
  { pnode(FPLL, 48, 31, REG_WRITEDATA, -1, 1), rnode(GOUT, 48, 38, 34) },
  { pnode(FPLL, 48, 31, REG_WRITEDATA, -1, 2), rnode(GOUT, 48, 38, 35) },
  { pnode(FPLL, 48, 31, REG_WRITEDATA, -1, 3), rnode(GOUT, 48, 38, 28) },
  { pnode(FPLL, 48, 31, REG_WRITEDATA, -1, 4), rnode(GOUT, 48, 38, 29) },
  { pnode(FPLL, 48, 31, REG_WRITEDATA, -1, 5), rnode(GOUT, 48, 38, 30) },
  { pnode(FPLL, 48, 31, REG_WRITEDATA, -1, 6), rnode(GOUT, 48, 38, 32) },
  { pnode(FPLL, 48, 31, REG_WRITEDATA, -1, 7), rnode(GOUT, 48, 38, 45) },
  { pnode(FPLL, 48, 31, REG_WRITEDATA, -1, 8), rnode(GOUT, 48, 38, 46) },
  { pnode(FPLL, 48, 31, REG_WRITEDATA, -1, 9), rnode(GOUT, 48, 38, 47) },
  { pnode(FPLL, 48, 31, REG_WRITEDATA, -1, 10), rnode(GOUT, 48, 38, 48) },
  { pnode(FPLL, 48, 31, REG_WRITEDATA, -1, 11), rnode(GOUT, 48, 38, 49) },
  { pnode(FPLL, 48, 31, REG_WRITEDATA, -1, 12), rnode(GOUT, 48, 38, 50) },
  { pnode(FPLL, 48, 31, REG_WRITEDATA, -1, 13), rnode(GOUT, 48, 38, 52) },
  { pnode(FPLL, 48, 31, REG_WRITEDATA, -1, 14), rnode(GOUT, 48, 38, 53) },
  { pnode(FPLL, 48, 31, REG_WRITEDATA, -1, 15), rnode(GOUT, 48, 38, 54) },
  { pnode(FPLL, 48, 31, EXTSWITCH, -1, -1), rnode(GOUT, 48, 38, 21) },
  { pnode(FPLL, 48, 31, FBCLK_IN_R, -1, -1), rnode(DCMUX, 48, 38, 4) },
  { pnode(FPLL, 48, 31, CSR_TEST, -1, -1), rnode(GOUT, 48, 37, 8) },
  { pnode(FPLL, 48, 31, NRESET, -1, -1), rnode(GOUT, 48, 37, 19) },
  { pnode(FPLL, 48, 31, PFDEN, -1, -1), rnode(GOUT, 48, 37, 12) },
  { pnode(FPLL, 48, 31, PHASE_EN, -1, -1), rnode(GOUT, 48, 37, 9) },
  { pnode(FPLL, 48, 31, SCANEN, -1, -1), rnode(GOUT, 48, 37, 2) },
  { pnode(FPLL, 48, 31, UP_DN, -1, -1), rnode(GOUT, 48, 38, 24) },
  { pnode(FPLL, 48, 31, CLK0_BAD, -1, -1), rnode(GIN, 48, 38, 21) },
  { pnode(FPLL, 48, 31, CLK1_BAD, -1, -1), rnode(GIN, 48, 38, 22) },
  { pnode(FPLL, 48, 31, CLKSEL, -1, -1), rnode(GIN, 48, 38, 25) },
  { pnode(FPLL, 48, 31, REG_READDATA, -1, 0), rnode(GIN, 48, 38, 64) },
  { pnode(FPLL, 48, 31, REG_READDATA, -1, 1), rnode(GIN, 48, 38, 66) },
  { pnode(FPLL, 48, 31, REG_READDATA, -1, 2), rnode(GIN, 48, 38, 67) },
  { pnode(FPLL, 48, 31, REG_READDATA, -1, 3), rnode(GIN, 48, 38, 68) },
  { pnode(FPLL, 48, 31, REG_READDATA, -1, 4), rnode(GIN, 48, 38, 70) },
  { pnode(FPLL, 48, 31, REG_READDATA, -1, 5), rnode(GIN, 48, 38, 71) },
  { pnode(FPLL, 48, 31, REG_READDATA, -1, 6), rnode(GIN, 48, 38, 72) },
  { pnode(FPLL, 48, 31, REG_READDATA, -1, 7), rnode(GIN, 48, 38, 74) },
  { pnode(FPLL, 48, 31, REG_READDATA, -1, 8), rnode(GIN, 48, 38, 75) },
  { pnode(FPLL, 48, 31, REG_READDATA, -1, 9), rnode(GIN, 48, 38, 76) },
  { pnode(FPLL, 48, 31, REG_READDATA, -1, 10), rnode(GIN, 48, 38, 78) },
  { pnode(FPLL, 48, 31, REG_READDATA, -1, 11), rnode(GIN, 48, 38, 79) },
  { pnode(FPLL, 48, 31, REG_READDATA, -1, 12), rnode(GIN, 48, 38, 80) },
  { pnode(FPLL, 48, 31, REG_READDATA, -1, 13), rnode(GIN, 48, 37, 1) },
  { pnode(FPLL, 48, 31, REG_READDATA, -1, 14), rnode(GIN, 48, 37, 2) },
  { pnode(FPLL, 48, 31, REG_READDATA, -1, 15), rnode(GIN, 48, 37, 3) },
  { pnode(FPLL, 48, 31, LOCK, -1, -1), rnode(GIN, 48, 37, 17) },
  { pnode(FPLL, 48, 31, PHASE_DONE, -1, -1), rnode(GIN, 48, 38, 27) },
  { pnode(CTRL, 0, 2, CAPTNUPDT_RU, -1, -1), rnode(GOUT, 0, 2, 33) },
  { pnode(CTRL, 0, 2, CLOCK_CHIPID, -1, -1), rnode(DCMUX, 0, 2, 0) },
  { pnode(CTRL, 0, 2, CLOCK_CRC, -1, -1), rnode(DCMUX, 0, 2, 4) },
  { pnode(CTRL, 0, 2, CLOCK_OPREG, -1, -1), rnode(DCMUX, 0, 1, 0) },
  { pnode(CTRL, 0, 2, CLOCK_PR, -1, -1), rnode(DCMUX, 0, 2, 6) },
  { pnode(CTRL, 0, 2, CLOCK_RU, -1, -1), rnode(DCMUX, 0, 2, 11) },
  { pnode(CTRL, 0, 2, CLOCK_SPI, -1, -1), rnode(DCMUX, 0, 2, 2) },
  { pnode(CTRL, 0, 2, CONFIG, -1, -1), rnode(GOUT, 0, 2, 37) },
  { pnode(CTRL, 0, 2, CORECTL_JTAG, -1, -1), rnode(GOUT, 0, 2, 8) },
  { pnode(CTRL, 0, 2, CORECTL_PR, -1, -1), rnode(GOUT, 0, 2, 12) },
  { pnode(CTRL, 0, 2, DATA, -1, 0), rnode(GOUT, 0, 2, 14) },
  { pnode(CTRL, 0, 2, DATA, -1, 1), rnode(GOUT, 0, 2, 15) },
  { pnode(CTRL, 0, 2, DATA, -1, 2), rnode(GOUT, 0, 2, 16) },
  { pnode(CTRL, 0, 2, DATA, -1, 3), rnode(GOUT, 0, 2, 17) },
  { pnode(CTRL, 0, 2, DATA, -1, 4), rnode(GOUT, 0, 2, 18) },
  { pnode(CTRL, 0, 2, DATA, -1, 5), rnode(GOUT, 0, 2, 19) },
  { pnode(CTRL, 0, 2, DATA, -1, 6), rnode(GOUT, 0, 2, 20) },
  { pnode(CTRL, 0, 2, DATA, -1, 7), rnode(GOUT, 0, 2, 21) },
  { pnode(CTRL, 0, 2, DATA, -1, 8), rnode(GOUT, 0, 2, 22) },
  { pnode(CTRL, 0, 2, DATA, -1, 9), rnode(GOUT, 0, 2, 23) },
  { pnode(CTRL, 0, 2, DATA, -1, 10), rnode(GOUT, 0, 2, 24) },
  { pnode(CTRL, 0, 2, DATA, -1, 11), rnode(GOUT, 0, 2, 25) },
  { pnode(CTRL, 0, 2, DATA, -1, 12), rnode(GOUT, 0, 2, 26) },
  { pnode(CTRL, 0, 2, DATA, -1, 13), rnode(GOUT, 0, 2, 27) },
  { pnode(CTRL, 0, 2, DATA, -1, 14), rnode(GOUT, 0, 2, 28) },
  { pnode(CTRL, 0, 2, DATA, -1, 15), rnode(GOUT, 0, 2, 29) },
  { pnode(CTRL, 0, 2, DATA0OE, -1, -1), rnode(GOUT, 0, 1, 6) },
  { pnode(CTRL, 0, 2, DATA0OUT, -1, -1), rnode(GOUT, 0, 1, 14) },
  { pnode(CTRL, 0, 2, DATA1OE, -1, -1), rnode(GOUT, 0, 1, 7) },
  { pnode(CTRL, 0, 2, DATA1OUT, -1, -1), rnode(GOUT, 0, 1, 15) },
  { pnode(CTRL, 0, 2, DATA2OE, -1, -1), rnode(GOUT, 0, 1, 8) },
  { pnode(CTRL, 0, 2, DATA2OUT, -1, -1), rnode(GOUT, 0, 1, 16) },
  { pnode(CTRL, 0, 2, DATA3OE, -1, -1), rnode(GOUT, 0, 1, 9) },
  { pnode(CTRL, 0, 2, DATA3OUT, -1, -1), rnode(GOUT, 0, 1, 17) },
  { pnode(CTRL, 0, 2, DFT_IN, -1, 0), rnode(GOUT, 0, 1, 23) },
  { pnode(CTRL, 0, 2, DFT_IN, -1, 1), rnode(GOUT, 0, 1, 24) },
  { pnode(CTRL, 0, 2, DFT_IN, -1, 2), rnode(GOUT, 0, 1, 25) },
  { pnode(CTRL, 0, 2, DFT_IN, -1, 3), rnode(GOUT, 0, 1, 26) },
  { pnode(CTRL, 0, 2, DFT_IN, -1, 4), rnode(GOUT, 0, 1, 27) },
  { pnode(CTRL, 0, 2, DFT_IN, -1, 5), rnode(GOUT, 0, 1, 28) },
  { pnode(CTRL, 0, 2, NTDOPINENA, -1, -1), rnode(GOUT, 0, 1, 34) },
  { pnode(CTRL, 0, 2, OSC_ENA, -1, -1), rnode(GOUT, 0, 2, 10) },
  { pnode(CTRL, 0, 2, OUTPUT_ENABLE, -1, -1), rnode(GOUT, 0, 2, 4) },
  { pnode(CTRL, 0, 2, PRREQUEST, -1, -1), rnode(GOUT, 0, 2, 31) },
  { pnode(CTRL, 0, 2, REGIN, -1, -1), rnode(GOUT, 0, 2, 35) },
  { pnode(CTRL, 0, 2, RSTTIMER, -1, -1), rnode(GOUT, 0, 2, 39) },
  { pnode(CTRL, 0, 2, SCE_IN, -1, -1), rnode(GOUT, 0, 2, 2) },
  { pnode(CTRL, 0, 2, SHIFTNLD_CHIPID, -1, -1), rnode(GOUT, 0, 2, 0) },
  { pnode(CTRL, 0, 2, SHIFTNLD_CRC, -1, -1), rnode(GOUT, 0, 2, 6) },
  { pnode(CTRL, 0, 2, SHIFTNLD_OPREG, -1, -1), rnode(GOUT, 0, 1, 0) },
  { pnode(CTRL, 0, 2, SHIFTNLD_RU, -1, -1), rnode(GOUT, 0, 2, 41) },
  { pnode(CTRL, 0, 2, TCKCORE, -1, -1), rnode(DCMUX, 0, 2, 15) },
  { pnode(CTRL, 0, 2, TDICORE, -1, -1), rnode(GOUT, 0, 2, 43) },
  { pnode(CTRL, 0, 2, TDOUTAP, -1, -1), rnode(GOUT, 0, 2, 45) },
  { pnode(CTRL, 0, 2, TMSCORE, -1, -1), rnode(GOUT, 0, 2, 47) },
  { pnode(CTRL, 0, 2, CLKDRUSER, -1, -1), rnode(GIN, 0, 2, 2) },
  { pnode(CTRL, 0, 2, CLK_OUT, -1, -1), rnode(GIN, 0, 1, 36) },
  { pnode(CTRL, 0, 2, CLK_OUT1, -1, -1), rnode(GIN, 0, 1, 38) },
  { pnode(CTRL, 0, 2, CRCERROR, -1, -1), rnode(GIN, 0, 2, 9) },
  { pnode(CTRL, 0, 2, DATA0IN, -1, -1), rnode(GIN, 0, 2, 4) },
  { pnode(CTRL, 0, 2, DATA1IN, -1, -1), rnode(GIN, 0, 2, 5) },
  { pnode(CTRL, 0, 2, DATA2IN, -1, -1), rnode(GIN, 0, 2, 6) },
  { pnode(CTRL, 0, 2, DATA3IN, -1, -1), rnode(GIN, 0, 2, 7) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 0), rnode(GIN, 0, 1, 6) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 1), rnode(GIN, 0, 1, 7) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 2), rnode(GIN, 0, 1, 8) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 3), rnode(GIN, 0, 1, 9) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 4), rnode(GIN, 0, 1, 10) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 5), rnode(GIN, 0, 1, 11) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 6), rnode(GIN, 0, 1, 12) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 7), rnode(GIN, 0, 1, 13) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 8), rnode(GIN, 0, 1, 14) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 9), rnode(GIN, 0, 1, 15) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 10), rnode(GIN, 0, 1, 16) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 11), rnode(GIN, 0, 1, 17) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 12), rnode(GIN, 0, 1, 18) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 13), rnode(GIN, 0, 1, 19) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 14), rnode(GIN, 0, 1, 20) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 15), rnode(GIN, 0, 1, 21) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 16), rnode(GIN, 0, 1, 22) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 17), rnode(GIN, 0, 1, 23) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 18), rnode(GIN, 0, 1, 24) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 19), rnode(GIN, 0, 1, 25) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 20), rnode(GIN, 0, 1, 26) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 21), rnode(GIN, 0, 1, 27) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 22), rnode(GIN, 0, 1, 28) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 23), rnode(GIN, 0, 1, 29) },
  { pnode(CTRL, 0, 2, DFT_OUT, -1, 24), rnode(GIN, 0, 1, 30) },
  { pnode(CTRL, 0, 2, DONE, -1, -1), rnode(GIN, 0, 2, 17) },
  { pnode(CTRL, 0, 2, END_OF_ED_FULLCHIP, -1, -1), rnode(GIN, 0, 2, 13) },
  { pnode(CTRL, 0, 2, EXTERNALREQUEST, -1, -1), rnode(GIN, 0, 2, 21) },
  { pnode(CTRL, 0, 2, NCE_OUT, -1, -1), rnode(GIN, 0, 2, 15) },
  { pnode(CTRL, 0, 2, OERROR, -1, -1), rnode(GIN, 0, 2, 19) },
  { pnode(CTRL, 0, 2, READY, -1, -1), rnode(GIN, 0, 2, 23) },
  { pnode(CTRL, 0, 2, REG_OUT_CHIPID, -1, -1), rnode(GIN, 0, 2, 0) },
  { pnode(CTRL, 0, 2, REG_OUT_CRC, -1, -1), rnode(GIN, 0, 2, 11) },
  { pnode(CTRL, 0, 2, REG_OUT_OPREG, -1, -1), rnode(GIN, 0, 1, 0) },
  { pnode(CTRL, 0, 2, REG_OUT_RU, -1, -1), rnode(GIN, 0, 2, 27) },
  { pnode(CTRL, 0, 2, RUNIDLEUSER, -1, -1), rnode(GIN, 0, 2, 25) },
  { pnode(CTRL, 0, 2, SHIFTUSER, -1, -1), rnode(GIN, 0, 2, 33) },
  { pnode(CTRL, 0, 2, TCKUTAP, -1, -1), rnode(GIN, 0, 2, 35) },
  { pnode(CTRL, 0, 2, TDIUTAP, -1, -1), rnode(GIN, 0, 2, 37) },
  { pnode(CTRL, 0, 2, TDOCORE, -1, -1), rnode(GIN, 0, 2, 39) },
  { pnode(CTRL, 0, 2, TMSUTAP, -1, -1), rnode(GIN, 0, 2, 41) },
  { pnode(CTRL, 0, 2, UPDATEUSER, -1, -1), rnode(GIN, 0, 2, 43) },
  { pnode(CTRL, 0, 2, USR1USER, -1, -1), rnode(GIN, 0, 2, 45) },
  { pnode(DLL, 0, 36, ASYNC_LOAD, -1, -1), rnode(GOUT, 2, 39, 10) },
  { pnode(DLL, 0, 36, UPNDN_IN, -1, -1), rnode(GOUT, 2, 39, 0) },
  { pnode(DLL, 0, 36, UPNDN_IN_CLK_ENA, -1, -1), rnode(GOUT, 2, 39, 9) },
  { pnode(DLL, 0, 36, CTRL_OUT, -1, 0), rnode(GIN, 2, 39, 3) },
  { pnode(DLL, 0, 36, CTRL_OUT, -1, 1), rnode(GIN, 2, 39, 2) },
  { pnode(DLL, 0, 36, CTRL_OUT, -1, 2), rnode(GIN, 2, 39, 1) },
  { pnode(DLL, 0, 36, CTRL_OUT, -1, 3), rnode(GIN, 2, 39, 0) },
  { pnode(DLL, 0, 36, CTRL_OUT, -1, 4), rnode(GIN, 1, 39, 13) },
  { pnode(DLL, 0, 36, CTRL_OUT, -1, 5), rnode(GIN, 1, 39, 14) },
  { pnode(DLL, 0, 36, CTRL_OUT, -1, 6), rnode(GIN, 1, 39, 15) },
  { pnode(DLL, 0, 36, LOCKED, -1, -1), rnode(GIN, 1, 39, 17) },
  { pnode(DLL, 0, 36, UPNDN_OUT, -1, -1), rnode(GIN, 1, 39, 16) },
  { pnode(DLL, 48, 3, ASYNC_LOAD, -1, -1), rnode(GOUT, 48, 2, 36) },
  { pnode(DLL, 48, 3, UPNDN_IN, -1, -1), rnode(GOUT, 48, 2, 35) },
  { pnode(DLL, 48, 3, UPNDN_IN_CLK_ENA, -1, -1), rnode(GOUT, 48, 2, 38) },
  { pnode(DLL, 48, 3, CTRL_OUT, -1, 0), rnode(GIN, 48, 2, 56) },
  { pnode(DLL, 48, 3, CTRL_OUT, -1, 1), rnode(GIN, 48, 2, 54) },
  { pnode(DLL, 48, 3, CTRL_OUT, -1, 2), rnode(GIN, 48, 2, 53) },
  { pnode(DLL, 48, 3, CTRL_OUT, -1, 3), rnode(GIN, 48, 2, 51) },
  { pnode(DLL, 48, 3, CTRL_OUT, -1, 4), rnode(GIN, 48, 2, 50) },
  { pnode(DLL, 48, 3, CTRL_OUT, -1, 5), rnode(GIN, 48, 2, 48) },
  { pnode(DLL, 48, 3, CTRL_OUT, -1, 6), rnode(GIN, 48, 2, 47) },
  { pnode(DLL, 48, 3, LOCKED, -1, -1), rnode(GIN, 48, 2, 44) },
  { pnode(DLL, 48, 3, UPNDN_OUT, -1, -1), rnode(GIN, 48, 2, 46) },
  { pnode(DLL, 48, 36, ASYNC_LOAD, -1, -1), rnode(GOUT, 48, 38, 1) },
  { pnode(DLL, 48, 36, UPNDN_IN, -1, -1), rnode(GOUT, 48, 38, 2) },
  { pnode(DLL, 48, 36, UPNDN_IN_CLK_ENA, -1, -1), rnode(GOUT, 48, 38, 0) },
  { pnode(DLL, 48, 36, CTRL_OUT, -1, 0), rnode(GIN, 48, 38, 0) },
  { pnode(DLL, 48, 36, CTRL_OUT, -1, 1), rnode(GIN, 48, 38, 1) },
  { pnode(DLL, 48, 36, CTRL_OUT, -1, 2), rnode(GIN, 48, 38, 2) },
  { pnode(DLL, 48, 36, CTRL_OUT, -1, 3), rnode(GIN, 48, 38, 3) },
  { pnode(DLL, 48, 36, CTRL_OUT, -1, 4), rnode(GIN, 48, 38, 4) },
  { pnode(DLL, 48, 36, CTRL_OUT, -1, 5), rnode(GIN, 48, 38, 5) },
  { pnode(DLL, 48, 36, CTRL_OUT, -1, 6), rnode(GIN, 48, 38, 6) },
  { pnode(DLL, 48, 36, LOCKED, -1, -1), rnode(GIN, 48, 38, 8) },
  { pnode(DLL, 48, 36, UPNDN_OUT, -1, -1), rnode(GIN, 48, 38, 7) },
  { }
};

const mistral::CycloneV::p2p_info mistral::CycloneV::gx25f_p2p_info[] = {
  { pnode(GPIO, 25, 39, DATAOUT, 1, 0), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 0) },
  { pnode(GPIO, 25, 39, DATAOUT, 1, 1), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 1) },
  { pnode(GPIO, 25, 39, DATAOUT, 1, 2), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 2) },
  { pnode(GPIO, 25, 39, DATAOUT, 1, 3), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 3) },
  { pnode(GPIO, 25, 39, DATAOUT, 0, 0), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 4) },
  { pnode(GPIO, 25, 39, DATAOUT, 0, 1), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 5) },
  { pnode(GPIO, 25, 39, DATAOUT, 0, 2), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 6) },
  { pnode(GPIO, 25, 39, DATAOUT, 0, 3), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 7) },
  { pnode(GPIO, 25, 39, DATAOUT, 2, 0), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 8) },
  { pnode(GPIO, 25, 39, DATAOUT, 2, 1), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 9) },
  { pnode(GPIO, 25, 39, DATAOUT, 2, 2), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 10) },
  { pnode(GPIO, 25, 39, DATAOUT, 2, 3), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 11) },
  { pnode(GPIO, 27, 39, DATAOUT, 3, 0), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 12) },
  { pnode(GPIO, 27, 39, DATAOUT, 3, 1), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 13) },
  { pnode(GPIO, 27, 39, DATAOUT, 3, 2), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 14) },
  { pnode(GPIO, 27, 39, DATAOUT, 3, 3), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 15) },
  { pnode(GPIO, 29, 39, DATAOUT, 1, 0), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 16) },
  { pnode(GPIO, 29, 39, DATAOUT, 1, 1), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 17) },
  { pnode(GPIO, 29, 39, DATAOUT, 1, 2), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 18) },
  { pnode(GPIO, 29, 39, DATAOUT, 1, 3), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 19) },
  { pnode(GPIO, 29, 39, DATAOUT, 0, 0), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 20) },
  { pnode(GPIO, 29, 39, DATAOUT, 0, 1), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 21) },
  { pnode(GPIO, 29, 39, DATAOUT, 0, 2), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 22) },
  { pnode(GPIO, 29, 39, DATAOUT, 0, 3), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 23) },
  { pnode(GPIO, 29, 39, DATAOUT, 2, 0), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 24) },
  { pnode(GPIO, 29, 39, DATAOUT, 2, 1), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 25) },
  { pnode(GPIO, 29, 39, DATAOUT, 2, 2), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 26) },
  { pnode(GPIO, 29, 39, DATAOUT, 2, 3), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 27) },
  { pnode(GPIO, 31, 39, DATAOUT, 3, 0), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 28) },
  { pnode(GPIO, 31, 39, DATAOUT, 3, 1), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 29) },
  { pnode(GPIO, 31, 39, DATAOUT, 3, 2), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 30) },
  { pnode(GPIO, 31, 39, DATAOUT, 3, 3), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 31) },
  { pnode(GPIO, 33, 39, DATAOUT, 1, 0), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 36) },
  { pnode(GPIO, 33, 39, DATAOUT, 1, 1), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 37) },
  { pnode(GPIO, 33, 39, DATAOUT, 1, 2), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 38) },
  { pnode(GPIO, 33, 39, DATAOUT, 1, 3), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 39) },
  { pnode(GPIO, 33, 39, DATAOUT, 0, 0), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 40) },
  { pnode(GPIO, 33, 39, DATAOUT, 0, 1), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 41) },
  { pnode(GPIO, 33, 39, DATAOUT, 0, 2), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 42) },
  { pnode(GPIO, 33, 39, DATAOUT, 0, 3), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 43) },
  { pnode(GPIO, 33, 39, DATAOUT, 2, 0), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 44) },
  { pnode(GPIO, 33, 39, DATAOUT, 2, 1), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 45) },
  { pnode(GPIO, 33, 39, DATAOUT, 2, 2), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 46) },
  { pnode(GPIO, 33, 39, DATAOUT, 2, 3), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 47) },
  { pnode(GPIO, 35, 39, DATAOUT, 3, 0), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 48) },
  { pnode(GPIO, 35, 39, DATAOUT, 3, 1), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 49) },
  { pnode(GPIO, 35, 39, DATAOUT, 3, 2), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 50) },
  { pnode(GPIO, 35, 39, DATAOUT, 3, 3), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 51) },
  { pnode(GPIO, 37, 39, DATAOUT, 1, 0), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 52) },
  { pnode(GPIO, 37, 39, DATAOUT, 1, 1), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 53) },
  { pnode(GPIO, 37, 39, DATAOUT, 1, 2), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 54) },
  { pnode(GPIO, 37, 39, DATAOUT, 1, 3), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 55) },
  { pnode(GPIO, 37, 39, DATAOUT, 0, 0), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 56) },
  { pnode(GPIO, 37, 39, DATAOUT, 0, 1), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 57) },
  { pnode(GPIO, 37, 39, DATAOUT, 0, 2), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 58) },
  { pnode(GPIO, 37, 39, DATAOUT, 0, 3), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 59) },
  { pnode(GPIO, 37, 39, DATAOUT, 2, 0), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 60) },
  { pnode(GPIO, 37, 39, DATAOUT, 2, 1), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 61) },
  { pnode(GPIO, 37, 39, DATAOUT, 2, 2), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 62) },
  { pnode(GPIO, 37, 39, DATAOUT, 2, 3), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 63) },
  { pnode(GPIO, 39, 39, DATAOUT, 3, 0), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 64) },
  { pnode(GPIO, 39, 39, DATAOUT, 3, 1), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 65) },
  { pnode(GPIO, 39, 39, DATAOUT, 3, 2), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 66) },
  { pnode(GPIO, 39, 39, DATAOUT, 3, 3), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 67) },
  { pnode(GPIO, 41, 39, DATAOUT, 1, 0), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 72) },
  { pnode(GPIO, 41, 39, DATAOUT, 1, 1), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 73) },
  { pnode(GPIO, 41, 39, DATAOUT, 1, 2), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 74) },
  { pnode(GPIO, 41, 39, DATAOUT, 1, 3), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 75) },
  { pnode(GPIO, 41, 39, DATAOUT, 0, 0), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 76) },
  { pnode(GPIO, 41, 39, DATAOUT, 0, 1), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 77) },
  { pnode(GPIO, 41, 39, DATAOUT, 0, 2), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 78) },
  { pnode(GPIO, 41, 39, DATAOUT, 0, 3), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 79) },
  { pnode(GPIO, 41, 39, DATAOUT, 2, 0), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 80) },
  { pnode(GPIO, 41, 39, DATAOUT, 2, 1), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 81) },
  { pnode(GPIO, 41, 39, DATAOUT, 2, 2), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 82) },
  { pnode(GPIO, 41, 39, DATAOUT, 2, 3), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 83) },
  { pnode(GPIO, 42, 39, DATAOUT, 3, 0), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 84) },
  { pnode(GPIO, 42, 39, DATAOUT, 3, 1), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 85) },
  { pnode(GPIO, 42, 39, DATAOUT, 3, 2), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 86) },
  { pnode(GPIO, 42, 39, DATAOUT, 3, 3), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 87) },
  { pnode(GPIO, 43, 39, DATAOUT, 1, 0), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 88) },
  { pnode(GPIO, 43, 39, DATAOUT, 1, 1), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 89) },
  { pnode(GPIO, 43, 39, DATAOUT, 1, 2), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 90) },
  { pnode(GPIO, 43, 39, DATAOUT, 1, 3), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 91) },
  { pnode(GPIO, 43, 39, DATAOUT, 0, 0), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 92) },
  { pnode(GPIO, 43, 39, DATAOUT, 0, 1), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 93) },
  { pnode(GPIO, 43, 39, DATAOUT, 0, 2), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 94) },
  { pnode(GPIO, 43, 39, DATAOUT, 0, 3), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 95) },
  { pnode(GPIO, 43, 39, DATAOUT, 2, 0), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 96) },
  { pnode(GPIO, 43, 39, DATAOUT, 2, 1), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 97) },
  { pnode(GPIO, 43, 39, DATAOUT, 2, 2), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 98) },
  { pnode(GPIO, 43, 39, DATAOUT, 2, 3), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 99) },
  { pnode(GPIO, 45, 39, DATAOUT, 3, 0), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 100) },
  { pnode(GPIO, 45, 39, DATAOUT, 3, 1), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 101) },
  { pnode(GPIO, 45, 39, DATAOUT, 3, 2), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 102) },
  { pnode(GPIO, 45, 39, DATAOUT, 3, 3), pnode(HMC, 15, 39, DDIOPHYDQDIN, -1, 103) },
  { pnode(HMC, 15, 39, PHYDDIOADDRACLR, -1, 0), pnode(GPIO, 16, 39, ACLR, 2, -1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRACLR, -1, 1), pnode(GPIO, 16, 39, ACLR, 3, -1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRACLR, -1, 2), pnode(GPIO, 14, 39, ACLR, 2, -1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRACLR, -1, 3), pnode(GPIO, 14, 39, ACLR, 3, -1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRACLR, -1, 4), pnode(GPIO, 14, 39, ACLR, 0, -1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRACLR, -1, 5), pnode(GPIO, 14, 39, ACLR, 1, -1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRACLR, -1, 6), pnode(GPIO, 12, 39, ACLR, 2, -1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRACLR, -1, 7), pnode(GPIO, 12, 39, ACLR, 3, -1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRACLR, -1, 8), pnode(GPIO, 6, 39, ACLR, 0, -1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRACLR, -1, 9), pnode(GPIO, 6, 39, ACLR, 1, -1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRACLR, -1, 10), pnode(GPIO, 6, 39, ACLR, 2, -1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRACLR, -1, 11), pnode(GPIO, 6, 39, ACLR, 3, -1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRACLR, -1, 12), pnode(GPIO, 4, 39, ACLR, 2, -1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRACLR, -1, 13), pnode(GPIO, 4, 39, ACLR, 3, -1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRACLR, -1, 14), pnode(GPIO, 3, 39, ACLR, 0, -1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRACLR, -1, 15), pnode(GPIO, 3, 39, ACLR, 1, -1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 0), pnode(GPIO, 16, 39, DATAIN, 2, 0) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 1), pnode(GPIO, 16, 39, DATAIN, 2, 1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 2), pnode(GPIO, 16, 39, DATAIN, 2, 2) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 3), pnode(GPIO, 16, 39, DATAIN, 2, 3) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 4), pnode(GPIO, 16, 39, DATAIN, 3, 0) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 5), pnode(GPIO, 16, 39, DATAIN, 3, 1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 6), pnode(GPIO, 16, 39, DATAIN, 3, 2) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 7), pnode(GPIO, 16, 39, DATAIN, 3, 3) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 8), pnode(GPIO, 14, 39, DATAIN, 2, 0) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 9), pnode(GPIO, 14, 39, DATAIN, 2, 1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 10), pnode(GPIO, 14, 39, DATAIN, 2, 2) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 11), pnode(GPIO, 14, 39, DATAIN, 2, 3) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 12), pnode(GPIO, 14, 39, DATAIN, 3, 0) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 13), pnode(GPIO, 14, 39, DATAIN, 3, 1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 14), pnode(GPIO, 14, 39, DATAIN, 3, 2) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 15), pnode(GPIO, 14, 39, DATAIN, 3, 3) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 16), pnode(GPIO, 14, 39, DATAIN, 0, 0) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 17), pnode(GPIO, 14, 39, DATAIN, 0, 1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 18), pnode(GPIO, 14, 39, DATAIN, 0, 2) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 19), pnode(GPIO, 14, 39, DATAIN, 0, 3) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 20), pnode(GPIO, 14, 39, DATAIN, 1, 0) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 21), pnode(GPIO, 14, 39, DATAIN, 1, 1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 22), pnode(GPIO, 14, 39, DATAIN, 1, 2) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 23), pnode(GPIO, 14, 39, DATAIN, 1, 3) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 24), pnode(GPIO, 12, 39, DATAIN, 2, 0) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 25), pnode(GPIO, 12, 39, DATAIN, 2, 1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 26), pnode(GPIO, 12, 39, DATAIN, 2, 2) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 27), pnode(GPIO, 12, 39, DATAIN, 2, 3) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 28), pnode(GPIO, 12, 39, DATAIN, 3, 0) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 29), pnode(GPIO, 12, 39, DATAIN, 3, 1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 30), pnode(GPIO, 12, 39, DATAIN, 3, 2) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 31), pnode(GPIO, 12, 39, DATAIN, 3, 3) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 32), pnode(GPIO, 6, 39, DATAIN, 0, 0) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 33), pnode(GPIO, 6, 39, DATAIN, 0, 1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 34), pnode(GPIO, 6, 39, DATAIN, 0, 2) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 35), pnode(GPIO, 6, 39, DATAIN, 0, 3) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 36), pnode(GPIO, 6, 39, DATAIN, 1, 0) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 37), pnode(GPIO, 6, 39, DATAIN, 1, 1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 38), pnode(GPIO, 6, 39, DATAIN, 1, 2) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 39), pnode(GPIO, 6, 39, DATAIN, 1, 3) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 40), pnode(GPIO, 6, 39, DATAIN, 2, 0) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 41), pnode(GPIO, 6, 39, DATAIN, 2, 1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 42), pnode(GPIO, 6, 39, DATAIN, 2, 2) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 43), pnode(GPIO, 6, 39, DATAIN, 2, 3) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 44), pnode(GPIO, 6, 39, DATAIN, 3, 0) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 45), pnode(GPIO, 6, 39, DATAIN, 3, 1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 46), pnode(GPIO, 6, 39, DATAIN, 3, 2) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 47), pnode(GPIO, 6, 39, DATAIN, 3, 3) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 48), pnode(GPIO, 4, 39, DATAIN, 2, 0) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 49), pnode(GPIO, 4, 39, DATAIN, 2, 1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 50), pnode(GPIO, 4, 39, DATAIN, 2, 2) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 51), pnode(GPIO, 4, 39, DATAIN, 2, 3) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 52), pnode(GPIO, 4, 39, DATAIN, 3, 0) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 53), pnode(GPIO, 4, 39, DATAIN, 3, 1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 54), pnode(GPIO, 4, 39, DATAIN, 3, 2) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 55), pnode(GPIO, 4, 39, DATAIN, 3, 3) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 56), pnode(GPIO, 3, 39, DATAIN, 0, 0) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 57), pnode(GPIO, 3, 39, DATAIN, 0, 1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 58), pnode(GPIO, 3, 39, DATAIN, 0, 2) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 59), pnode(GPIO, 3, 39, DATAIN, 0, 3) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 60), pnode(GPIO, 3, 39, DATAIN, 1, 0) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 61), pnode(GPIO, 3, 39, DATAIN, 1, 1) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 62), pnode(GPIO, 3, 39, DATAIN, 1, 2) },
  { pnode(HMC, 15, 39, PHYDDIOADDRDOUT, -1, 63), pnode(GPIO, 3, 39, DATAIN, 1, 3) },
  { pnode(HMC, 15, 39, PHYDDIOBAACLR, -1, -1), pnode(GPIO, 10, 39, ACLR, 1, -1) },
  { pnode(HMC, 15, 39, PHYDDIOBADOUT, -1, 0), pnode(GPIO, 10, 39, DATAIN, 2, 0) },
  { pnode(HMC, 15, 39, PHYDDIOBADOUT, -1, 1), pnode(GPIO, 10, 39, DATAIN, 2, 1) },
  { pnode(HMC, 15, 39, PHYDDIOBADOUT, -1, 2), pnode(GPIO, 10, 39, DATAIN, 2, 2) },
  { pnode(HMC, 15, 39, PHYDDIOBADOUT, -1, 3), pnode(GPIO, 10, 39, DATAIN, 2, 3) },
  { pnode(HMC, 15, 39, PHYDDIOCASNACLR, -1, -1), pnode(GPIO, 8, 39, ACLR, 2, -1) },
  { pnode(HMC, 15, 39, PHYDDIOCASNDOUT, -1, 0), pnode(GPIO, 8, 39, DATAIN, 2, 0) },
  { pnode(HMC, 15, 39, PHYDDIOCASNDOUT, -1, 1), pnode(GPIO, 8, 39, DATAIN, 2, 1) },
  { pnode(HMC, 15, 39, PHYDDIOCASNDOUT, -1, 2), pnode(GPIO, 8, 39, DATAIN, 2, 2) },
  { pnode(HMC, 15, 39, PHYDDIOCASNDOUT, -1, 3), pnode(GPIO, 8, 39, DATAIN, 2, 3) },
  { pnode(HMC, 15, 39, PHYDDIOCKDOUT, -1, 0), pnode(GPIO, 12, 39, DATAIN, 0, 0) },
  { pnode(HMC, 15, 39, PHYDDIOCKDOUT, -1, 1), pnode(GPIO, 12, 39, DATAIN, 0, 1) },
  { pnode(HMC, 15, 39, PHYDDIOCKDOUT, -1, 2), pnode(GPIO, 12, 39, DATAIN, 0, 2) },
  { pnode(HMC, 15, 39, PHYDDIOCKDOUT, -1, 3), pnode(GPIO, 12, 39, DATAIN, 0, 3) },
  { pnode(HMC, 15, 39, PHYDDIOCKEACLR, -1, 0), pnode(GPIO, 37, 39, ACLR, 3, -1) },
  { pnode(HMC, 15, 39, PHYDDIOCKEACLR, -1, 1), pnode(GPIO, 35, 39, ACLR, 2, -1) },
  { pnode(HMC, 15, 39, PHYDDIOCKEDOUT, -1, 0), pnode(GPIO, 37, 39, DATAIN, 3, 0) },
  { pnode(HMC, 15, 39, PHYDDIOCKEDOUT, -1, 1), pnode(GPIO, 37, 39, DATAIN, 3, 1) },
  { pnode(HMC, 15, 39, PHYDDIOCKEDOUT, -1, 2), pnode(GPIO, 37, 39, DATAIN, 3, 2) },
  { pnode(HMC, 15, 39, PHYDDIOCKEDOUT, -1, 3), pnode(GPIO, 37, 39, DATAIN, 3, 3) },
  { pnode(HMC, 15, 39, PHYDDIOCKEDOUT, -1, 4), pnode(GPIO, 35, 39, DATAIN, 2, 0) },
  { pnode(HMC, 15, 39, PHYDDIOCKEDOUT, -1, 5), pnode(GPIO, 35, 39, DATAIN, 2, 1) },
  { pnode(HMC, 15, 39, PHYDDIOCKEDOUT, -1, 6), pnode(GPIO, 35, 39, DATAIN, 2, 2) },
  { pnode(HMC, 15, 39, PHYDDIOCKEDOUT, -1, 7), pnode(GPIO, 35, 39, DATAIN, 2, 3) },
  { pnode(HMC, 15, 39, PHYDDIOCKNDOUT, -1, 0), pnode(GPIO, 12, 39, DATAIN, 1, 0) },
  { pnode(HMC, 15, 39, PHYDDIOCKNDOUT, -1, 1), pnode(GPIO, 12, 39, DATAIN, 1, 1) },
  { pnode(HMC, 15, 39, PHYDDIOCKNDOUT, -1, 2), pnode(GPIO, 12, 39, DATAIN, 1, 2) },
  { pnode(HMC, 15, 39, PHYDDIOCKNDOUT, -1, 3), pnode(GPIO, 12, 39, DATAIN, 1, 3) },
  { pnode(HMC, 15, 39, PHYDDIOCSNACLR, -1, 0), pnode(GPIO, 4, 39, ACLR, 0, -1) },
  { pnode(HMC, 15, 39, PHYDDIOCSNACLR, -1, 1), pnode(GPIO, 4, 39, ACLR, 1, -1) },
  { pnode(HMC, 15, 39, PHYDDIOCSNDOUT, -1, 0), pnode(GPIO, 4, 39, DATAIN, 0, 0) },
  { pnode(HMC, 15, 39, PHYDDIOCSNDOUT, -1, 1), pnode(GPIO, 4, 39, DATAIN, 0, 1) },
  { pnode(HMC, 15, 39, PHYDDIOCSNDOUT, -1, 2), pnode(GPIO, 4, 39, DATAIN, 0, 2) },
  { pnode(HMC, 15, 39, PHYDDIOCSNDOUT, -1, 3), pnode(GPIO, 4, 39, DATAIN, 0, 3) },
  { pnode(HMC, 15, 39, PHYDDIOCSNDOUT, -1, 4), pnode(GPIO, 4, 39, DATAIN, 1, 0) },
  { pnode(HMC, 15, 39, PHYDDIOCSNDOUT, -1, 5), pnode(GPIO, 4, 39, DATAIN, 1, 1) },
  { pnode(HMC, 15, 39, PHYDDIOCSNDOUT, -1, 6), pnode(GPIO, 4, 39, DATAIN, 1, 2) },
  { pnode(HMC, 15, 39, PHYDDIOCSNDOUT, -1, 7), pnode(GPIO, 4, 39, DATAIN, 1, 3) },
  { pnode(HMC, 15, 39, PHYDDIODMDOUT, -1, 0), pnode(GPIO, 31, 39, DATAIN, 2, 0) },
  { pnode(HMC, 15, 39, PHYDDIODMDOUT, -1, 1), pnode(GPIO, 31, 39, DATAIN, 2, 1) },
  { pnode(HMC, 15, 39, PHYDDIODMDOUT, -1, 2), pnode(GPIO, 31, 39, DATAIN, 2, 2) },
  { pnode(HMC, 15, 39, PHYDDIODMDOUT, -1, 3), pnode(GPIO, 31, 39, DATAIN, 2, 3) },
  { pnode(HMC, 15, 39, PHYDDIODMDOUT, -1, 4), pnode(GPIO, 39, 39, DATAIN, 2, 0) },
  { pnode(HMC, 15, 39, PHYDDIODMDOUT, -1, 5), pnode(GPIO, 39, 39, DATAIN, 2, 1) },
  { pnode(HMC, 15, 39, PHYDDIODMDOUT, -1, 6), pnode(GPIO, 39, 39, DATAIN, 2, 2) },
  { pnode(HMC, 15, 39, PHYDDIODMDOUT, -1, 7), pnode(GPIO, 39, 39, DATAIN, 2, 3) },
  { pnode(HMC, 15, 39, PHYDDIODMDOUT, -1, 8), pnode(GPIO, 45, 39, DATAIN, 2, 0) },
  { pnode(HMC, 15, 39, PHYDDIODMDOUT, -1, 9), pnode(GPIO, 45, 39, DATAIN, 2, 1) },
  { pnode(HMC, 15, 39, PHYDDIODMDOUT, -1, 10), pnode(GPIO, 45, 39, DATAIN, 2, 2) },
  { pnode(HMC, 15, 39, PHYDDIODMDOUT, -1, 11), pnode(GPIO, 45, 39, DATAIN, 2, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 0), pnode(GPIO, 25, 39, DATAIN, 1, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 1), pnode(GPIO, 25, 39, DATAIN, 1, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 2), pnode(GPIO, 25, 39, DATAIN, 1, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 3), pnode(GPIO, 25, 39, DATAIN, 1, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 4), pnode(GPIO, 25, 39, DATAIN, 0, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 5), pnode(GPIO, 25, 39, DATAIN, 0, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 6), pnode(GPIO, 25, 39, DATAIN, 0, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 7), pnode(GPIO, 25, 39, DATAIN, 0, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 8), pnode(GPIO, 25, 39, DATAIN, 2, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 9), pnode(GPIO, 25, 39, DATAIN, 2, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 10), pnode(GPIO, 25, 39, DATAIN, 2, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 11), pnode(GPIO, 25, 39, DATAIN, 2, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 12), pnode(GPIO, 27, 39, DATAIN, 3, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 13), pnode(GPIO, 27, 39, DATAIN, 3, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 14), pnode(GPIO, 27, 39, DATAIN, 3, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 15), pnode(GPIO, 27, 39, DATAIN, 3, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 16), pnode(GPIO, 29, 39, DATAIN, 1, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 17), pnode(GPIO, 29, 39, DATAIN, 1, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 18), pnode(GPIO, 29, 39, DATAIN, 1, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 19), pnode(GPIO, 29, 39, DATAIN, 1, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 20), pnode(GPIO, 29, 39, DATAIN, 0, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 21), pnode(GPIO, 29, 39, DATAIN, 0, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 22), pnode(GPIO, 29, 39, DATAIN, 0, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 23), pnode(GPIO, 29, 39, DATAIN, 0, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 24), pnode(GPIO, 29, 39, DATAIN, 2, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 25), pnode(GPIO, 29, 39, DATAIN, 2, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 26), pnode(GPIO, 29, 39, DATAIN, 2, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 27), pnode(GPIO, 29, 39, DATAIN, 2, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 28), pnode(GPIO, 31, 39, DATAIN, 3, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 29), pnode(GPIO, 31, 39, DATAIN, 3, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 30), pnode(GPIO, 31, 39, DATAIN, 3, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 31), pnode(GPIO, 31, 39, DATAIN, 3, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 36), pnode(GPIO, 33, 39, DATAIN, 1, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 37), pnode(GPIO, 33, 39, DATAIN, 1, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 38), pnode(GPIO, 33, 39, DATAIN, 1, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 39), pnode(GPIO, 33, 39, DATAIN, 1, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 40), pnode(GPIO, 33, 39, DATAIN, 0, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 41), pnode(GPIO, 33, 39, DATAIN, 0, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 42), pnode(GPIO, 33, 39, DATAIN, 0, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 43), pnode(GPIO, 33, 39, DATAIN, 0, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 44), pnode(GPIO, 33, 39, DATAIN, 2, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 45), pnode(GPIO, 33, 39, DATAIN, 2, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 46), pnode(GPIO, 33, 39, DATAIN, 2, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 47), pnode(GPIO, 33, 39, DATAIN, 2, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 48), pnode(GPIO, 35, 39, DATAIN, 3, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 49), pnode(GPIO, 35, 39, DATAIN, 3, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 50), pnode(GPIO, 35, 39, DATAIN, 3, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 51), pnode(GPIO, 35, 39, DATAIN, 3, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 52), pnode(GPIO, 37, 39, DATAIN, 1, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 53), pnode(GPIO, 37, 39, DATAIN, 1, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 54), pnode(GPIO, 37, 39, DATAIN, 1, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 55), pnode(GPIO, 37, 39, DATAIN, 1, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 56), pnode(GPIO, 37, 39, DATAIN, 0, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 57), pnode(GPIO, 37, 39, DATAIN, 0, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 58), pnode(GPIO, 37, 39, DATAIN, 0, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 59), pnode(GPIO, 37, 39, DATAIN, 0, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 60), pnode(GPIO, 37, 39, DATAIN, 2, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 61), pnode(GPIO, 37, 39, DATAIN, 2, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 62), pnode(GPIO, 37, 39, DATAIN, 2, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 63), pnode(GPIO, 37, 39, DATAIN, 2, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 64), pnode(GPIO, 39, 39, DATAIN, 3, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 65), pnode(GPIO, 39, 39, DATAIN, 3, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 66), pnode(GPIO, 39, 39, DATAIN, 3, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 67), pnode(GPIO, 39, 39, DATAIN, 3, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 72), pnode(GPIO, 41, 39, DATAIN, 1, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 73), pnode(GPIO, 41, 39, DATAIN, 1, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 74), pnode(GPIO, 41, 39, DATAIN, 1, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 75), pnode(GPIO, 41, 39, DATAIN, 1, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 76), pnode(GPIO, 41, 39, DATAIN, 0, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 77), pnode(GPIO, 41, 39, DATAIN, 0, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 78), pnode(GPIO, 41, 39, DATAIN, 0, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 79), pnode(GPIO, 41, 39, DATAIN, 0, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 80), pnode(GPIO, 41, 39, DATAIN, 2, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 81), pnode(GPIO, 41, 39, DATAIN, 2, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 82), pnode(GPIO, 41, 39, DATAIN, 2, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 83), pnode(GPIO, 41, 39, DATAIN, 2, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 84), pnode(GPIO, 42, 39, DATAIN, 3, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 85), pnode(GPIO, 42, 39, DATAIN, 3, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 86), pnode(GPIO, 42, 39, DATAIN, 3, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 87), pnode(GPIO, 42, 39, DATAIN, 3, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 88), pnode(GPIO, 43, 39, DATAIN, 1, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 89), pnode(GPIO, 43, 39, DATAIN, 1, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 90), pnode(GPIO, 43, 39, DATAIN, 1, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 91), pnode(GPIO, 43, 39, DATAIN, 1, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 92), pnode(GPIO, 43, 39, DATAIN, 0, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 93), pnode(GPIO, 43, 39, DATAIN, 0, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 94), pnode(GPIO, 43, 39, DATAIN, 0, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 95), pnode(GPIO, 43, 39, DATAIN, 0, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 96), pnode(GPIO, 43, 39, DATAIN, 2, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 97), pnode(GPIO, 43, 39, DATAIN, 2, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 98), pnode(GPIO, 43, 39, DATAIN, 2, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 99), pnode(GPIO, 43, 39, DATAIN, 2, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 100), pnode(GPIO, 45, 39, DATAIN, 3, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 101), pnode(GPIO, 45, 39, DATAIN, 3, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 102), pnode(GPIO, 45, 39, DATAIN, 3, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQDOUT, -1, 103), pnode(GPIO, 45, 39, DATAIN, 3, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 0), pnode(GPIO, 25, 39, OEIN, 1, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 1), pnode(GPIO, 25, 39, OEIN, 1, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 2), pnode(GPIO, 25, 39, OEIN, 0, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 3), pnode(GPIO, 25, 39, OEIN, 0, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 4), pnode(GPIO, 25, 39, OEIN, 2, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 5), pnode(GPIO, 25, 39, OEIN, 2, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 6), pnode(GPIO, 27, 39, OEIN, 3, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 7), pnode(GPIO, 27, 39, OEIN, 3, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 8), pnode(GPIO, 29, 39, OEIN, 1, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 9), pnode(GPIO, 29, 39, OEIN, 1, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 10), pnode(GPIO, 29, 39, OEIN, 0, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 11), pnode(GPIO, 29, 39, OEIN, 0, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 12), pnode(GPIO, 29, 39, OEIN, 2, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 13), pnode(GPIO, 29, 39, OEIN, 2, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 14), pnode(GPIO, 31, 39, OEIN, 3, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 15), pnode(GPIO, 31, 39, OEIN, 3, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 18), pnode(GPIO, 33, 39, OEIN, 1, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 19), pnode(GPIO, 33, 39, OEIN, 1, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 20), pnode(GPIO, 33, 39, OEIN, 0, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 21), pnode(GPIO, 33, 39, OEIN, 0, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 22), pnode(GPIO, 33, 39, OEIN, 2, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 23), pnode(GPIO, 33, 39, OEIN, 2, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 24), pnode(GPIO, 35, 39, OEIN, 3, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 25), pnode(GPIO, 35, 39, OEIN, 3, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 26), pnode(GPIO, 37, 39, OEIN, 1, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 27), pnode(GPIO, 37, 39, OEIN, 1, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 28), pnode(GPIO, 37, 39, OEIN, 0, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 29), pnode(GPIO, 37, 39, OEIN, 0, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 30), pnode(GPIO, 37, 39, OEIN, 2, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 31), pnode(GPIO, 37, 39, OEIN, 2, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 32), pnode(GPIO, 39, 39, OEIN, 3, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 33), pnode(GPIO, 39, 39, OEIN, 3, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 36), pnode(GPIO, 41, 39, OEIN, 1, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 37), pnode(GPIO, 41, 39, OEIN, 1, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 38), pnode(GPIO, 41, 39, OEIN, 0, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 39), pnode(GPIO, 41, 39, OEIN, 0, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 40), pnode(GPIO, 41, 39, OEIN, 2, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 41), pnode(GPIO, 41, 39, OEIN, 2, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 42), pnode(GPIO, 42, 39, OEIN, 3, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 43), pnode(GPIO, 42, 39, OEIN, 3, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 44), pnode(GPIO, 43, 39, OEIN, 1, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 45), pnode(GPIO, 43, 39, OEIN, 1, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 46), pnode(GPIO, 43, 39, OEIN, 0, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 47), pnode(GPIO, 43, 39, OEIN, 0, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 48), pnode(GPIO, 43, 39, OEIN, 2, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 49), pnode(GPIO, 43, 39, OEIN, 2, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 50), pnode(GPIO, 45, 39, OEIN, 3, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQOE, -1, 51), pnode(GPIO, 45, 39, OEIN, 3, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQSBDOUT, -1, 0), pnode(GPIO, 27, 39, DATAIN, 1, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQSBDOUT, -1, 1), pnode(GPIO, 27, 39, DATAIN, 1, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQSBDOUT, -1, 2), pnode(GPIO, 27, 39, DATAIN, 1, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQSBDOUT, -1, 3), pnode(GPIO, 27, 39, DATAIN, 1, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQSBDOUT, -1, 4), pnode(GPIO, 35, 39, DATAIN, 1, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQSBDOUT, -1, 5), pnode(GPIO, 35, 39, DATAIN, 1, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQSBDOUT, -1, 6), pnode(GPIO, 35, 39, DATAIN, 1, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQSBDOUT, -1, 7), pnode(GPIO, 35, 39, DATAIN, 1, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQSBDOUT, -1, 8), pnode(GPIO, 42, 39, DATAIN, 1, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQSBDOUT, -1, 9), pnode(GPIO, 42, 39, DATAIN, 1, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQSBDOUT, -1, 10), pnode(GPIO, 42, 39, DATAIN, 1, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQSBDOUT, -1, 11), pnode(GPIO, 42, 39, DATAIN, 1, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQSBOE, -1, 0), pnode(GPIO, 27, 39, OEIN, 1, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQSBOE, -1, 1), pnode(GPIO, 27, 39, OEIN, 1, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQSBOE, -1, 2), pnode(GPIO, 35, 39, OEIN, 1, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQSBOE, -1, 3), pnode(GPIO, 35, 39, OEIN, 1, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQSBOE, -1, 4), pnode(GPIO, 42, 39, OEIN, 1, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQSBOE, -1, 5), pnode(GPIO, 42, 39, OEIN, 1, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQSDOUT, -1, 0), pnode(GPIO, 27, 39, DATAIN, 0, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQSDOUT, -1, 1), pnode(GPIO, 27, 39, DATAIN, 0, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQSDOUT, -1, 2), pnode(GPIO, 27, 39, DATAIN, 0, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQSDOUT, -1, 3), pnode(GPIO, 27, 39, DATAIN, 0, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQSDOUT, -1, 4), pnode(GPIO, 35, 39, DATAIN, 0, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQSDOUT, -1, 5), pnode(GPIO, 35, 39, DATAIN, 0, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQSDOUT, -1, 6), pnode(GPIO, 35, 39, DATAIN, 0, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQSDOUT, -1, 7), pnode(GPIO, 35, 39, DATAIN, 0, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQSDOUT, -1, 8), pnode(GPIO, 42, 39, DATAIN, 0, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQSDOUT, -1, 9), pnode(GPIO, 42, 39, DATAIN, 0, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQSDOUT, -1, 10), pnode(GPIO, 42, 39, DATAIN, 0, 2) },
  { pnode(HMC, 15, 39, PHYDDIODQSDOUT, -1, 11), pnode(GPIO, 42, 39, DATAIN, 0, 3) },
  { pnode(HMC, 15, 39, PHYDDIODQSOE, -1, 0), pnode(GPIO, 27, 39, OEIN, 0, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQSOE, -1, 1), pnode(GPIO, 27, 39, OEIN, 0, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQSOE, -1, 2), pnode(GPIO, 35, 39, OEIN, 0, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQSOE, -1, 3), pnode(GPIO, 35, 39, OEIN, 0, 1) },
  { pnode(HMC, 15, 39, PHYDDIODQSOE, -1, 4), pnode(GPIO, 42, 39, OEIN, 0, 0) },
  { pnode(HMC, 15, 39, PHYDDIODQSOE, -1, 5), pnode(GPIO, 42, 39, OEIN, 0, 1) },
  { pnode(HMC, 15, 39, PHYDDIOODTACLR, -1, 0), pnode(GPIO, 27, 39, ACLR, 2, -1) },
  { pnode(HMC, 15, 39, PHYDDIOODTACLR, -1, 1), pnode(GPIO, 29, 39, ACLR, 3, -1) },
  { pnode(HMC, 15, 39, PHYDDIOODTDOUT, -1, 0), pnode(GPIO, 27, 39, DATAIN, 2, 0) },
  { pnode(HMC, 15, 39, PHYDDIOODTDOUT, -1, 1), pnode(GPIO, 27, 39, DATAIN, 2, 1) },
  { pnode(HMC, 15, 39, PHYDDIOODTDOUT, -1, 2), pnode(GPIO, 27, 39, DATAIN, 2, 2) },
  { pnode(HMC, 15, 39, PHYDDIOODTDOUT, -1, 3), pnode(GPIO, 27, 39, DATAIN, 2, 3) },
  { pnode(HMC, 15, 39, PHYDDIOODTDOUT, -1, 4), pnode(GPIO, 29, 39, DATAIN, 3, 0) },
  { pnode(HMC, 15, 39, PHYDDIOODTDOUT, -1, 5), pnode(GPIO, 29, 39, DATAIN, 3, 1) },
  { pnode(HMC, 15, 39, PHYDDIOODTDOUT, -1, 6), pnode(GPIO, 29, 39, DATAIN, 3, 2) },
  { pnode(HMC, 15, 39, PHYDDIOODTDOUT, -1, 7), pnode(GPIO, 29, 39, DATAIN, 3, 3) },
  { pnode(HMC, 15, 39, PHYDDIORASNACLR, -1, -1), pnode(GPIO, 8, 39, ACLR, 3, -1) },
  { pnode(HMC, 15, 39, PHYDDIORASNDOUT, -1, 0), pnode(GPIO, 8, 39, DATAIN, 3, 0) },
  { pnode(HMC, 15, 39, PHYDDIORASNDOUT, -1, 1), pnode(GPIO, 8, 39, DATAIN, 3, 1) },
  { pnode(HMC, 15, 39, PHYDDIORASNDOUT, -1, 2), pnode(GPIO, 8, 39, DATAIN, 3, 2) },
  { pnode(HMC, 15, 39, PHYDDIORASNDOUT, -1, 3), pnode(GPIO, 8, 39, DATAIN, 3, 3) },
  { pnode(HMC, 15, 39, PHYDDIORESETNACLR, -1, -1), pnode(GPIO, 42, 39, ACLR, 2, -1) },
  { pnode(HMC, 15, 39, PHYDDIORESETNDOUT, -1, 0), pnode(GPIO, 42, 39, DATAIN, 2, 0) },
  { pnode(HMC, 15, 39, PHYDDIORESETNDOUT, -1, 1), pnode(GPIO, 42, 39, DATAIN, 2, 1) },
  { pnode(HMC, 15, 39, PHYDDIORESETNDOUT, -1, 2), pnode(GPIO, 42, 39, DATAIN, 2, 2) },
  { pnode(HMC, 15, 39, PHYDDIORESETNDOUT, -1, 3), pnode(GPIO, 42, 39, DATAIN, 2, 3) },
  { pnode(HMC, 15, 39, PHYDDIOWENACLR, -1, -1), pnode(GPIO, 3, 39, ACLR, 2, -1) },
  { pnode(HMC, 15, 39, PHYDDIOWENDOUT, -1, 0), pnode(GPIO, 3, 39, DATAIN, 2, 0) },
  { pnode(HMC, 15, 39, PHYDDIOWENDOUT, -1, 1), pnode(GPIO, 3, 39, DATAIN, 2, 1) },
  { pnode(HMC, 15, 39, PHYDDIOWENDOUT, -1, 2), pnode(GPIO, 3, 39, DATAIN, 2, 2) },
  { pnode(HMC, 15, 39, PHYDDIOWENDOUT, -1, 3), pnode(GPIO, 3, 39, DATAIN, 2, 3) },
  { pnode(HMC, 15, 39, PNONE, 0, -1), pnode(DQS16, 25, 39, PNONE, -1, -1) },
  { pnode(HMC, 15, 39, PNONE, 1, -1), pnode(DQS16, 33, 39, PNONE, -1, -1) },
  { pnode(HMC, 15, 39, PNONE, 2, -1), pnode(DQS16, 41, 39, PNONE, -1, -1) },
  { pnode(HMC, 15, 39, PNONE, -1, -1), pnode(LVL, 32, 39, PNONE, -1, -1) },
  { pnode(GPIO, 8, 39, COMBOUT, 0, -1), pnode(CMUXHG, 0, 8, CLKPIN, -1, 0) },
  { pnode(GPIO, 8, 39, COMBOUT, 0, -1), pnode(CMUXHR, 0, 8, CLKPIN, -1, 0) },
  { pnode(GPIO, 16, 0, COMBOUT, 0, -1), pnode(CMUXHG, 0, 8, CLKPIN, -1, 1) },
  { pnode(GPIO, 16, 0, COMBOUT, 0, -1), pnode(CMUXHR, 0, 8, CLKPIN, -1, 1) },
  { pnode(GPIO, 16, 39, COMBOUT, 0, -1), pnode(CMUXHG, 0, 8, CLKPIN, -1, 2) },
  { pnode(GPIO, 16, 39, COMBOUT, 0, -1), pnode(CMUXHR, 0, 8, CLKPIN, -1, 2) },
  { pnode(GPIO, 21, 0, COMBOUT, 0, -1), pnode(CMUXHG, 0, 8, CLKPIN, -1, 3) },
  { pnode(GPIO, 21, 0, COMBOUT, 0, -1), pnode(CMUXHR, 0, 8, CLKPIN, -1, 3) },
  { pnode(GPIO, 31, 39, COMBOUT, 0, -1), pnode(CMUXHG, 0, 8, CLKPIN, -1, 4) },
  { pnode(GPIO, 31, 39, COMBOUT, 0, -1), pnode(CMUXHR, 0, 8, CLKPIN, -1, 4) },
  { pnode(GPIO, 32, 0, COMBOUT, 0, -1), pnode(CMUXHG, 0, 8, CLKPIN, -1, 5) },
  { pnode(GPIO, 32, 0, COMBOUT, 0, -1), pnode(CMUXHR, 0, 8, CLKPIN, -1, 5) },
  { pnode(GPIO, 39, 39, COMBOUT, 0, -1), pnode(CMUXHG, 0, 8, CLKPIN, -1, 6) },
  { pnode(GPIO, 39, 39, COMBOUT, 0, -1), pnode(CMUXHR, 0, 8, CLKPIN, -1, 6) },
  { pnode(GPIO, 39, 0, COMBOUT, 0, -1), pnode(CMUXHG, 0, 8, CLKPIN, -1, 7) },
  { pnode(GPIO, 39, 0, COMBOUT, 0, -1), pnode(CMUXHR, 0, 8, CLKPIN, -1, 7) },
  { pnode(GPIO, 8, 39, COMBOUT, 1, -1), pnode(CMUXHG, 0, 8, NCLKPIN, -1, 0) },
  { pnode(GPIO, 8, 39, COMBOUT, 1, -1), pnode(CMUXHR, 0, 8, NCLKPIN, -1, 0) },
  { pnode(GPIO, 16, 0, COMBOUT, 1, -1), pnode(CMUXHG, 0, 8, NCLKPIN, -1, 1) },
  { pnode(GPIO, 16, 0, COMBOUT, 1, -1), pnode(CMUXHR, 0, 8, NCLKPIN, -1, 1) },
  { pnode(GPIO, 16, 39, COMBOUT, 1, -1), pnode(CMUXHG, 0, 8, NCLKPIN, -1, 2) },
  { pnode(GPIO, 16, 39, COMBOUT, 1, -1), pnode(CMUXHR, 0, 8, NCLKPIN, -1, 2) },
  { pnode(GPIO, 21, 0, COMBOUT, 1, -1), pnode(CMUXHG, 0, 8, NCLKPIN, -1, 3) },
  { pnode(GPIO, 21, 0, COMBOUT, 1, -1), pnode(CMUXHR, 0, 8, NCLKPIN, -1, 3) },
  { pnode(GPIO, 31, 39, COMBOUT, 1, -1), pnode(CMUXHG, 0, 8, NCLKPIN, -1, 4) },
  { pnode(GPIO, 31, 39, COMBOUT, 1, -1), pnode(CMUXHR, 0, 8, NCLKPIN, -1, 4) },
  { pnode(GPIO, 32, 0, COMBOUT, 1, -1), pnode(CMUXHG, 0, 8, NCLKPIN, -1, 5) },
  { pnode(GPIO, 32, 0, COMBOUT, 1, -1), pnode(CMUXHR, 0, 8, NCLKPIN, -1, 5) },
  { pnode(GPIO, 39, 39, COMBOUT, 1, -1), pnode(CMUXHG, 0, 8, NCLKPIN, -1, 6) },
  { pnode(GPIO, 39, 39, COMBOUT, 1, -1), pnode(CMUXHR, 0, 8, NCLKPIN, -1, 6) },
  { pnode(GPIO, 39, 0, COMBOUT, 1, -1), pnode(CMUXHG, 0, 8, NCLKPIN, -1, 7) },
  { pnode(GPIO, 39, 0, COMBOUT, 1, -1), pnode(CMUXHR, 0, 8, NCLKPIN, -1, 7) },
  { pnode(FPLL, 0, 13, CLKOUT, -1, 8), pnode(CMUXHG, 0, 8, PLLIN, -1, 0) },
  { pnode(FPLL, 0, 13, CLKOUT, -1, 7), pnode(CMUXHG, 0, 8, PLLIN, -1, 1) },
  { pnode(FPLL, 0, 13, CLKOUT, -1, 6), pnode(CMUXHG, 0, 8, PLLIN, -1, 2) },
  { pnode(FPLL, 0, 13, CLKOUT, -1, 5), pnode(CMUXHG, 0, 8, PLLIN, -1, 3) },
  { pnode(FPLL, 0, 31, CLKOUT, -1, 4), pnode(CMUXHR, 0, 8, PLLIN, -1, 0) },
  { pnode(FPLL, 0, 13, CLKOUT, -1, 7), pnode(CMUXHR, 0, 8, PLLIN, -1, 1) },
  { pnode(FPLL, 0, 31, CLKOUT, -1, 4), pnode(CMUXHR, 0, 8, PLLIN, -1, 2) },
  { pnode(FPLL, 0, 13, CLKOUT, -1, 5), pnode(CMUXHR, 0, 8, PLLIN, -1, 3) },
  { pnode(FPLL, 0, 13, CLKOUT, -1, 4), pnode(CMUXHR, 0, 8, PLLIN, -1, 4) },
  { pnode(GPIO, 8, 39, COMBOUT, 0, -1), pnode(CMUXCR, 0, 37, CLKPIN, -1, 0) },
  { pnode(GPIO, 16, 39, COMBOUT, 0, -1), pnode(CMUXCR, 0, 37, CLKPIN, -1, 1) },
  { pnode(GPIO, 31, 39, COMBOUT, 0, -1), pnode(CMUXCR, 0, 37, CLKPIN, -1, 2) },
  { pnode(GPIO, 39, 39, COMBOUT, 0, -1), pnode(CMUXCR, 0, 37, CLKPIN, -1, 3) },
  { pnode(GPIO, 8, 39, COMBOUT, 1, -1), pnode(CMUXCR, 0, 37, NCLKPIN, -1, 0) },
  { pnode(GPIO, 16, 39, COMBOUT, 1, -1), pnode(CMUXCR, 0, 37, NCLKPIN, -1, 1) },
  { pnode(GPIO, 31, 39, COMBOUT, 1, -1), pnode(CMUXCR, 0, 37, NCLKPIN, -1, 2) },
  { pnode(GPIO, 39, 39, COMBOUT, 1, -1), pnode(CMUXCR, 0, 37, NCLKPIN, -1, 3) },
  { pnode(FPLL, 0, 31, CLKOUT, -1, 2), pnode(CMUXCR, 0, 37, PLLIN, -1, 0) },
  { pnode(FPLL, 0, 31, CLKOUT, -1, 6), pnode(CMUXCR, 0, 37, PLLIN, -1, 1) },
  { pnode(FPLL, 0, 31, CLKOUT, -1, 0), pnode(CMUXCR, 0, 37, PLLIN, -1, 2) },
  { pnode(FPLL, 0, 31, CLKOUT, -1, 4), pnode(CMUXCR, 0, 37, PLLIN, -1, 3) },
  { pnode(FPLL, 0, 31, CLKOUT, -1, 0), pnode(CMUXCR, 0, 37, PLLIN, -1, 8) },
  { pnode(FPLL, 0, 31, CLKOUT, -1, 3), pnode(CMUXCR, 0, 37, PLLIN, -1, 9) },
  { pnode(FPLL, 0, 31, CLKOUT, -1, 5), pnode(CMUXCR, 0, 37, PLLIN, -1, 10) },
  { pnode(FPLL, 0, 31, CLKOUT, -1, 1), pnode(CMUXCR, 0, 37, PLLIN, -1, 11) },
  { pnode(FPLL, 0, 31, CLKOUT, -1, 7), pnode(CMUXCR, 0, 37, PLLIN, -1, 16) },
  { pnode(FPLL, 0, 31, CLKOUT, -1, 8), pnode(CMUXCR, 0, 37, PLLIN, -1, 17) },
  { pnode(GPIO, 16, 0, COMBOUT, 0, -1), pnode(CMUXCR, 3, 0, CLKPIN, -1, 0) },
  { pnode(GPIO, 21, 0, COMBOUT, 0, -1), pnode(CMUXCR, 3, 0, CLKPIN, -1, 1) },
  { pnode(GPIO, 32, 0, COMBOUT, 0, -1), pnode(CMUXCR, 3, 0, CLKPIN, -1, 2) },
  { pnode(GPIO, 39, 0, COMBOUT, 0, -1), pnode(CMUXCR, 3, 0, CLKPIN, -1, 3) },
  { pnode(GPIO, 16, 0, COMBOUT, 1, -1), pnode(CMUXCR, 3, 0, NCLKPIN, -1, 0) },
  { pnode(GPIO, 21, 0, COMBOUT, 1, -1), pnode(CMUXCR, 3, 0, NCLKPIN, -1, 1) },
  { pnode(GPIO, 32, 0, COMBOUT, 1, -1), pnode(CMUXCR, 3, 0, NCLKPIN, -1, 2) },
  { pnode(GPIO, 39, 0, COMBOUT, 1, -1), pnode(CMUXCR, 3, 0, NCLKPIN, -1, 3) },
  { pnode(GPIO, 16, 0, COMBOUT, 0, -1), pnode(CMUXVG, 25, 0, CLKPIN, -1, 0) },
  { pnode(GPIO, 16, 0, COMBOUT, 0, -1), pnode(CMUXVR, 25, 0, CLKPIN, -1, 0) },
  { pnode(GPIO, 32, 0, COMBOUT, 0, -1), pnode(CMUXVG, 25, 0, CLKPIN, -1, 1) },
  { pnode(GPIO, 32, 0, COMBOUT, 0, -1), pnode(CMUXVR, 25, 0, CLKPIN, -1, 1) },
  { pnode(GPIO, 21, 0, COMBOUT, 0, -1), pnode(CMUXVG, 25, 0, CLKPIN, -1, 2) },
  { pnode(GPIO, 21, 0, COMBOUT, 0, -1), pnode(CMUXVR, 25, 0, CLKPIN, -1, 2) },
  { pnode(GPIO, 39, 0, COMBOUT, 0, -1), pnode(CMUXVG, 25, 0, CLKPIN, -1, 3) },
  { pnode(GPIO, 39, 0, COMBOUT, 0, -1), pnode(CMUXVR, 25, 0, CLKPIN, -1, 3) },
  { pnode(GPIO, 16, 0, COMBOUT, 1, -1), pnode(CMUXVG, 25, 0, NCLKPIN, -1, 0) },
  { pnode(GPIO, 16, 0, COMBOUT, 1, -1), pnode(CMUXVR, 25, 0, NCLKPIN, -1, 0) },
  { pnode(GPIO, 32, 0, COMBOUT, 1, -1), pnode(CMUXVG, 25, 0, NCLKPIN, -1, 1) },
  { pnode(GPIO, 32, 0, COMBOUT, 1, -1), pnode(CMUXVR, 25, 0, NCLKPIN, -1, 1) },
  { pnode(GPIO, 21, 0, COMBOUT, 1, -1), pnode(CMUXVG, 25, 0, NCLKPIN, -1, 2) },
  { pnode(GPIO, 21, 0, COMBOUT, 1, -1), pnode(CMUXVR, 25, 0, NCLKPIN, -1, 2) },
  { pnode(GPIO, 39, 0, COMBOUT, 1, -1), pnode(CMUXVG, 25, 0, NCLKPIN, -1, 3) },
  { pnode(GPIO, 39, 0, COMBOUT, 1, -1), pnode(CMUXVR, 25, 0, NCLKPIN, -1, 3) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 8), pnode(CMUXVG, 25, 0, PLLIN, -1, 0) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 8), pnode(CMUXVG, 25, 0, PLLIN, -1, 4) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 7), pnode(CMUXVG, 25, 0, PLLIN, -1, 5) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 6), pnode(CMUXVG, 25, 0, PLLIN, -1, 6) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 5), pnode(CMUXVG, 25, 0, PLLIN, -1, 7) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 8), pnode(CMUXVR, 25, 0, PLLIN, -1, 0) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 7), pnode(CMUXVR, 25, 0, PLLIN, -1, 1) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 6), pnode(CMUXVR, 25, 0, PLLIN, -1, 2) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 5), pnode(CMUXVR, 25, 0, PLLIN, -1, 3) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 4), pnode(CMUXVR, 25, 0, PLLIN, -1, 4) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 3), pnode(CMUXVR, 25, 0, PLLIN, -1, 5) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 2), pnode(CMUXVR, 25, 0, PLLIN, -1, 6) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 1), pnode(CMUXVR, 25, 0, PLLIN, -1, 7) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 0), pnode(CMUXVR, 25, 0, PLLIN, -1, 8) },
  { pnode(GPIO, 8, 39, COMBOUT, 0, -1), pnode(CMUXVG, 26, 39, CLKPIN, -1, 0) },
  { pnode(GPIO, 8, 39, COMBOUT, 0, -1), pnode(CMUXVR, 26, 39, CLKPIN, -1, 0) },
  { pnode(GPIO, 31, 39, COMBOUT, 0, -1), pnode(CMUXVG, 26, 39, CLKPIN, -1, 1) },
  { pnode(GPIO, 31, 39, COMBOUT, 0, -1), pnode(CMUXVR, 26, 39, CLKPIN, -1, 1) },
  { pnode(GPIO, 16, 39, COMBOUT, 0, -1), pnode(CMUXVG, 26, 39, CLKPIN, -1, 2) },
  { pnode(GPIO, 16, 39, COMBOUT, 0, -1), pnode(CMUXVR, 26, 39, CLKPIN, -1, 2) },
  { pnode(GPIO, 39, 39, COMBOUT, 0, -1), pnode(CMUXVG, 26, 39, CLKPIN, -1, 3) },
  { pnode(GPIO, 39, 39, COMBOUT, 0, -1), pnode(CMUXVR, 26, 39, CLKPIN, -1, 3) },
  { pnode(GPIO, 8, 39, COMBOUT, 1, -1), pnode(CMUXVG, 26, 39, NCLKPIN, -1, 0) },
  { pnode(GPIO, 8, 39, COMBOUT, 1, -1), pnode(CMUXVR, 26, 39, NCLKPIN, -1, 0) },
  { pnode(GPIO, 31, 39, COMBOUT, 1, -1), pnode(CMUXVG, 26, 39, NCLKPIN, -1, 1) },
  { pnode(GPIO, 31, 39, COMBOUT, 1, -1), pnode(CMUXVR, 26, 39, NCLKPIN, -1, 1) },
  { pnode(GPIO, 16, 39, COMBOUT, 1, -1), pnode(CMUXVG, 26, 39, NCLKPIN, -1, 2) },
  { pnode(GPIO, 16, 39, COMBOUT, 1, -1), pnode(CMUXVR, 26, 39, NCLKPIN, -1, 2) },
  { pnode(GPIO, 39, 39, COMBOUT, 1, -1), pnode(CMUXVG, 26, 39, NCLKPIN, -1, 3) },
  { pnode(GPIO, 39, 39, COMBOUT, 1, -1), pnode(CMUXVR, 26, 39, NCLKPIN, -1, 3) },
  { pnode(FPLL, 0, 31, CLKOUT, -1, 5), pnode(CMUXVG, 26, 39, PLLIN, -1, 0) },
  { pnode(FPLL, 0, 31, CLKOUT, -1, 6), pnode(CMUXVG, 26, 39, PLLIN, -1, 1) },
  { pnode(FPLL, 0, 31, CLKOUT, -1, 7), pnode(CMUXVG, 26, 39, PLLIN, -1, 2) },
  { pnode(FPLL, 0, 31, CLKOUT, -1, 8), pnode(CMUXVG, 26, 39, PLLIN, -1, 3) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 8), pnode(CMUXVG, 26, 39, PLLIN, -1, 4) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 7), pnode(CMUXVG, 26, 39, PLLIN, -1, 5) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 6), pnode(CMUXVG, 26, 39, PLLIN, -1, 6) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 5), pnode(CMUXVG, 26, 39, PLLIN, -1, 7) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 8), pnode(CMUXVR, 26, 39, PLLIN, -1, 0) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 7), pnode(CMUXVR, 26, 39, PLLIN, -1, 1) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 6), pnode(CMUXVR, 26, 39, PLLIN, -1, 2) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 5), pnode(CMUXVR, 26, 39, PLLIN, -1, 3) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 4), pnode(CMUXVR, 26, 39, PLLIN, -1, 4) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 3), pnode(CMUXVR, 26, 39, PLLIN, -1, 5) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 2), pnode(CMUXVR, 26, 39, PLLIN, -1, 6) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 1), pnode(CMUXVR, 26, 39, PLLIN, -1, 7) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 0), pnode(CMUXVR, 26, 39, PLLIN, -1, 8) },
  { pnode(GPIO, 32, 0, COMBOUT, 0, -1), pnode(CMUXCR, 48, 2, CLKPIN, -1, 0) },
  { pnode(GPIO, 39, 0, COMBOUT, 0, -1), pnode(CMUXCR, 48, 2, CLKPIN, -1, 1) },
  { pnode(GPIO, 48, 18, COMBOUT, 0, -1), pnode(CMUXCR, 48, 2, CLKPIN, -1, 2) },
  { pnode(GPIO, 32, 0, COMBOUT, 1, -1), pnode(CMUXCR, 48, 2, NCLKPIN, -1, 0) },
  { pnode(GPIO, 39, 0, COMBOUT, 1, -1), pnode(CMUXCR, 48, 2, NCLKPIN, -1, 1) },
  { pnode(GPIO, 48, 18, COMBOUT, 1, -1), pnode(CMUXCR, 48, 2, NCLKPIN, -1, 2) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 8), pnode(CMUXCR, 48, 2, PLLIN, -1, 0) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 7), pnode(CMUXCR, 48, 2, PLLIN, -1, 1) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 6), pnode(CMUXCR, 48, 2, PLLIN, -1, 2) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 5), pnode(CMUXCR, 48, 2, PLLIN, -1, 3) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 4), pnode(CMUXCR, 48, 2, PLLIN, -1, 4) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 3), pnode(CMUXCR, 48, 2, PLLIN, -1, 5) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 2), pnode(CMUXCR, 48, 2, PLLIN, -1, 6) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 1), pnode(CMUXCR, 48, 2, PLLIN, -1, 7) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 6), pnode(CMUXCR, 48, 2, PLLIN, -1, 8) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 7), pnode(CMUXCR, 48, 2, PLLIN, -1, 9) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 4), pnode(CMUXCR, 48, 2, PLLIN, -1, 10) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 5), pnode(CMUXCR, 48, 2, PLLIN, -1, 11) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 2), pnode(CMUXCR, 48, 2, PLLIN, -1, 12) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 3), pnode(CMUXCR, 48, 2, PLLIN, -1, 13) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 0), pnode(CMUXCR, 48, 2, PLLIN, -1, 14) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 1), pnode(CMUXCR, 48, 2, PLLIN, -1, 15) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 8), pnode(CMUXCR, 48, 2, PLLIN, -1, 16) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 0), pnode(CMUXCR, 48, 2, PLLIN, -1, 17) },
  { pnode(GPIO, 48, 27, COMBOUT, 0, -1), pnode(CMUXHG, 48, 9, CLKPIN, -1, 2) },
  { pnode(GPIO, 48, 27, COMBOUT, 0, -1), pnode(CMUXHR, 48, 9, CLKPIN, -1, 2) },
  { pnode(GPIO, 48, 18, COMBOUT, 0, -1), pnode(CMUXHG, 48, 9, CLKPIN, -1, 5) },
  { pnode(GPIO, 48, 18, COMBOUT, 0, -1), pnode(CMUXHR, 48, 9, CLKPIN, -1, 5) },
  { pnode(GPIO, 48, 27, COMBOUT, 1, -1), pnode(CMUXHG, 48, 9, NCLKPIN, -1, 2) },
  { pnode(GPIO, 48, 27, COMBOUT, 1, -1), pnode(CMUXHR, 48, 9, NCLKPIN, -1, 2) },
  { pnode(GPIO, 48, 18, COMBOUT, 1, -1), pnode(CMUXHG, 48, 9, NCLKPIN, -1, 5) },
  { pnode(GPIO, 48, 18, COMBOUT, 1, -1), pnode(CMUXHR, 48, 9, NCLKPIN, -1, 5) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 0), pnode(CMUXHG, 48, 9, PLLIN, -1, 0) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 1), pnode(CMUXHG, 48, 9, PLLIN, -1, 1) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 2), pnode(CMUXHG, 48, 9, PLLIN, -1, 2) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 3), pnode(CMUXHG, 48, 9, PLLIN, -1, 3) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 0), pnode(CMUXHG, 48, 9, PLLIN, -1, 4) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 1), pnode(CMUXHG, 48, 9, PLLIN, -1, 5) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 2), pnode(CMUXHG, 48, 9, PLLIN, -1, 6) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 3), pnode(CMUXHG, 48, 9, PLLIN, -1, 7) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 0), pnode(CMUXHR, 48, 9, PLLIN, -1, 0) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 1), pnode(CMUXHR, 48, 9, PLLIN, -1, 1) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 2), pnode(CMUXHR, 48, 9, PLLIN, -1, 2) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 3), pnode(CMUXHR, 48, 9, PLLIN, -1, 3) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 4), pnode(CMUXHR, 48, 9, PLLIN, -1, 4) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 5), pnode(CMUXHR, 48, 9, PLLIN, -1, 5) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 6), pnode(CMUXHR, 48, 9, PLLIN, -1, 6) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 0), pnode(CMUXHR, 48, 9, PLLIN, -1, 7) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 1), pnode(CMUXHR, 48, 9, PLLIN, -1, 8) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 2), pnode(CMUXHR, 48, 9, PLLIN, -1, 9) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 3), pnode(CMUXHR, 48, 9, PLLIN, -1, 10) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 4), pnode(CMUXHR, 48, 9, PLLIN, -1, 11) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 5), pnode(CMUXHR, 48, 9, PLLIN, -1, 12) },
  { pnode(FPLL, 48, 0, CLKOUT, -1, 6), pnode(CMUXHR, 48, 9, PLLIN, -1, 13) },
  { pnode(GPIO, 31, 39, COMBOUT, 0, -1), pnode(CMUXCR, 48, 37, CLKPIN, -1, 0) },
  { pnode(GPIO, 39, 39, COMBOUT, 0, -1), pnode(CMUXCR, 48, 37, CLKPIN, -1, 1) },
  { pnode(GPIO, 48, 27, COMBOUT, 0, -1), pnode(CMUXCR, 48, 37, CLKPIN, -1, 3) },
  { pnode(GPIO, 31, 39, COMBOUT, 1, -1), pnode(CMUXCR, 48, 37, NCLKPIN, -1, 0) },
  { pnode(GPIO, 39, 39, COMBOUT, 1, -1), pnode(CMUXCR, 48, 37, NCLKPIN, -1, 1) },
  { pnode(GPIO, 48, 27, COMBOUT, 1, -1), pnode(CMUXCR, 48, 37, NCLKPIN, -1, 3) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 8), pnode(CMUXCR, 48, 37, PLLIN, -1, 0) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 7), pnode(CMUXCR, 48, 37, PLLIN, -1, 1) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 6), pnode(CMUXCR, 48, 37, PLLIN, -1, 2) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 5), pnode(CMUXCR, 48, 37, PLLIN, -1, 3) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 4), pnode(CMUXCR, 48, 37, PLLIN, -1, 4) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 3), pnode(CMUXCR, 48, 37, PLLIN, -1, 5) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 2), pnode(CMUXCR, 48, 37, PLLIN, -1, 6) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 1), pnode(CMUXCR, 48, 37, PLLIN, -1, 7) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 6), pnode(CMUXCR, 48, 37, PLLIN, -1, 8) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 7), pnode(CMUXCR, 48, 37, PLLIN, -1, 9) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 4), pnode(CMUXCR, 48, 37, PLLIN, -1, 10) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 5), pnode(CMUXCR, 48, 37, PLLIN, -1, 11) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 2), pnode(CMUXCR, 48, 37, PLLIN, -1, 12) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 3), pnode(CMUXCR, 48, 37, PLLIN, -1, 13) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 0), pnode(CMUXCR, 48, 37, PLLIN, -1, 14) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 1), pnode(CMUXCR, 48, 37, PLLIN, -1, 15) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 8), pnode(CMUXCR, 48, 37, PLLIN, -1, 16) },
  { pnode(FPLL, 48, 31, CLKOUT, -1, 0), pnode(CMUXCR, 48, 37, PLLIN, -1, 17) },
  { pnode(GPIO, 8, 39, COMBOUT, 0, -1), pnode(FPLL, 0, 13, CLKIN, -1, 0) },
  { pnode(GPIO, 16, 39, COMBOUT, 0, -1), pnode(FPLL, 0, 13, CLKIN, -1, 1) },
  { pnode(GPIO, 31, 39, COMBOUT, 0, -1), pnode(FPLL, 0, 13, CLKIN, -1, 2) },
  { pnode(GPIO, 39, 39, COMBOUT, 0, -1), pnode(FPLL, 0, 13, CLKIN, -1, 3) },
  { pnode(GPIO, 8, 39, COMBOUT, 0, -1), pnode(FPLL, 0, 31, CLKIN, -1, 0) },
  { pnode(GPIO, 16, 39, COMBOUT, 0, -1), pnode(FPLL, 0, 31, CLKIN, -1, 1) },
  { pnode(GPIO, 31, 39, COMBOUT, 0, -1), pnode(FPLL, 0, 31, CLKIN, -1, 2) },
  { pnode(GPIO, 39, 39, COMBOUT, 0, -1), pnode(FPLL, 0, 31, CLKIN, -1, 3) },
  { pnode(GPIO, 14, 39, COMBOUT, 2, -1), pnode(FPLL, 0, 31, ZDB_IN, -1, -1) },
  { pnode(FPLL, 0, 31, EXTCLK, -1, -1), pnode(GPIO, 14, 39, PLLDIN, 3, -1) },
  { pnode(GPIO, 32, 0, COMBOUT, 0, -1), pnode(FPLL, 48, 0, CLKIN, -1, 0) },
  { pnode(GPIO, 39, 0, COMBOUT, 0, -1), pnode(FPLL, 48, 0, CLKIN, -1, 1) },
  { pnode(GPIO, 48, 18, COMBOUT, 0, -1), pnode(FPLL, 48, 0, CLKIN, -1, 2) },
  { pnode(GPIO, 48, 20, COMBOUT, 2, -1), pnode(FPLL, 48, 0, ZDB_IN, -1, -1) },
  { pnode(FPLL, 48, 0, EXTCLK, -1, -1), pnode(GPIO, 48, 20, PLLDIN, 3, -1) },
  { pnode(GPIO, 31, 39, COMBOUT, 0, -1), pnode(FPLL, 48, 31, CLKIN, -1, 0) },
  { pnode(GPIO, 39, 39, COMBOUT, 0, -1), pnode(FPLL, 48, 31, CLKIN, -1, 1) },
  { pnode(GPIO, 48, 27, COMBOUT, 0, -1), pnode(FPLL, 48, 31, CLKIN, -1, 2) },
  { pnode(GPIO, 48, 29, COMBOUT, 2, -1), pnode(FPLL, 48, 31, ZDB_IN, -1, -1) },
  { pnode(FPLL, 48, 31, EXTCLK, -1, -1), pnode(GPIO, 48, 29, PLLDIN, 3, -1) },
  { pnode(FPLL, 0, 31, CLKDOUT, -1, 0), pnode(DLL, 0, 36, CLKIN, -1, -1) },
  { pnode(FPLL, 48, 0, CLKDOUT, -1, 0), pnode(DLL, 48, 3, CLKIN, -1, -1) },
  { pnode(FPLL, 48, 31, CLKDOUT, -1, 0), pnode(DLL, 48, 36, CLKIN, -1, -1) },
  { }
};
